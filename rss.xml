<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2023-08-17T14:40:54.677186</updated>
  <id>980a115a-0c3d-44fc-9933-5e2479ec8c1d</id>

  
    <entry>
      <title>insert_or_assign -- map::insert_or_assign : オーバーロードの概要文章を追加</title>
      <link href="https://cpprefjp.github.io/reference/map/map/insert_or_assign.html"/>
      <id>21d60b4cf25bad0eeb02c8fc48169f6aca8a8b08:reference/map/map/insert_or_assign.md</id>
      <updated>2023-08-17T17:16:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/map/map/insert_or_assign.md b/reference/map/map/insert_or_assign.md
index 331a6187f..22eead398 100644
--- a/reference/map/map/insert_or_assign.md
+++ b/reference/map/map/insert_or_assign.md
@@ -25,6 +25,11 @@ iterator insert_or_assign(const_iterator hint, key_type&amp;amp;&amp;amp; k, M&amp;amp;&amp;amp; obj);
 
 引数 `hint` は、`k` を検索する際のヒントに使用される。
 
+- (1) : `key_type`型のキーをとって挿入もしくは代入する
+- (2) : `key_type`型の一時オブジェクトのキーをとって挿入もしくは代入する
+- (3) : 挿入位置のヒントをともない、`key_type`型のキーをとって挿入もしくは代入する
+- (4) : 挿入位置のヒントをともない、`key_type`型の一時オブジェクトのキーをとって挿入もしくは代入する
+
 
 ## テンプレートパラメータ制約
 - (1)、(3) : [`is_assignable_v`](/reference/type_traits/is_assignable.md)`&amp;lt;mapped_type&amp;amp;, M&amp;amp;&amp;amp;&amp;gt;` が `true` であること。`value_type` は、`k`, [`forward`](/reference/utility/forward.md)`&amp;lt;M&amp;gt;(obj)` から `map` に直接構築可能であること
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>insert_or_assign -- flat_map::insert_or_assign : 転送参照は一時オブジェクトではなかった #1078</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map/insert_or_assign.html"/>
      <id>cd883d1560a5608d4f3d2df4dec093706a84c305:reference/flat_map/flat_map/insert_or_assign.md</id>
      <updated>2023-08-17T17:15:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map/insert_or_assign.md b/reference/flat_map/flat_map/insert_or_assign.md
index 39a0fad21..0a0328719 100644
--- a/reference/flat_map/flat_map/insert_or_assign.md
+++ b/reference/flat_map/flat_map/insert_or_assign.md
@@ -48,10 +48,10 @@ iterator
 
 - (1) : `key_type`型のキーをとって挿入もしくは代入する
 - (2) : `key_type`型の一時オブジェクトのキーをとって挿入もしくは代入する
-- (3) : `key_type`に変換可能な型の一時オブジェクトのキーをとって挿入もしくは代入する
+- (3) : `key_type`に変換可能な型のキーをとって挿入もしくは代入する
 - (4) : 挿入位置のヒントをともない、`key_type`型のキーをとって挿入もしくは代入する
 - (5) : 挿入位置のヒントをともない、`key_type`型の一時オブジェクトのキーをとって挿入もしくは代入する
-- (6) : 挿入位置のヒントをともない、`key_type`に変換可能な型の一時オブジェクトのキーをとって挿入もしくは代入する
+- (6) : 挿入位置のヒントをともない、`key_type`に変換可能な型のキーをとって挿入もしくは代入する
 
 
 ## テンプレートパラメータ制約
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>flat_map -- flat_map : insert_or_assignを追加 #1078</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map.html"/>
      <id>db7801c0f24a2e644d58d77981fb7767bfc88d38:reference/flat_map/flat_map.md</id>
      <updated>2023-08-17T17:14:08+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map.md b/reference/flat_map/flat_map.md
index 24660156e..1f8d0b0ba 100644
--- a/reference/flat_map/flat_map.md
+++ b/reference/flat_map/flat_map.md
@@ -59,7 +59,7 @@ namespace std {
 |-----------------------------------------------|--------------------------------------------|----------------|
 | [`clear`](flat_map/clear.md)                       | 全ての要素を削除する                       | C++23 |
 | [`insert`](flat_map/insert.md)                     | 要素を挿入する                             | C++23 |
-| [`insert_or_assign`](flat_map/insert_or_assign.md.nolink) | 要素を挿入、あるいは代入する               | C++23 |
+| [`insert_or_assign`](flat_map/insert_or_assign.md) | 要素を挿入、あるいは代入する               | C++23 |
 | [`insert_range`](flat_map/insert_range.md)         | Rangeを挿入する                            | C++23 |
 | [`emplace`](flat_map/emplace.md)                   | 要素を直接構築する                         | C++23 |
 | [`emplace_hint`](flat_map/emplace_hint.md)         | ヒントを使って要素を直接構築する           | C++23 |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>emplace -- flat_map : insert_or_assignを追加 #1078</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map/emplace.html"/>
      <id>db7801c0f24a2e644d58d77981fb7767bfc88d38:reference/flat_map/flat_map/emplace.md</id>
      <updated>2023-08-17T17:14:08+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map/emplace.md b/reference/flat_map/flat_map/emplace.md
index 28a7e713d..22f1df248 100644
--- a/reference/flat_map/flat_map/emplace.md
+++ b/reference/flat_map/flat_map/emplace.md
@@ -133,7 +133,8 @@ CCC : (1, 2)
 | 名前                                           | 説明                                       |
 |------------------------------------------------|--------------------------------------------|
 | [`flat_map::insert`](insert.md)                     | 要素を挿入する                             |
-| [`flat_map::insert_or_assign`](insert_or_assign.md.nolink) | 要素を挿入、あるいは代入する               |
+| [`flat_map::insert_range`](insert_range.md)         | Rangeを挿入する                            |
+| [`flat_map::insert_or_assign`](insert_or_assign.md) | 要素を挿入、あるいは代入する               |
 | [`flat_map::emplace_hint`](emplace_hint.md)         | ヒントを使って要素を直接構築する           |
 | [`flat_map::try_emplace`](try_emplace.md)           | キーが存在しない場合のみ要素を直接構築する |
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>emplace_hint -- flat_map : insert_or_assignを追加 #1078</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map/emplace_hint.html"/>
      <id>db7801c0f24a2e644d58d77981fb7767bfc88d38:reference/flat_map/flat_map/emplace_hint.md</id>
      <updated>2023-08-17T17:14:08+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map/emplace_hint.md b/reference/flat_map/flat_map/emplace_hint.md
index a667e951c..193f6698c 100644
--- a/reference/flat_map/flat_map/emplace_hint.md
+++ b/reference/flat_map/flat_map/emplace_hint.md
@@ -76,7 +76,8 @@ int main()
 | 名前                                           | 説明                                       |
 |------------------------------------------------|--------------------------------------------|
 | [`flat_map::insert`](insert.md)                     | 要素を挿入する                             |
-| [`flat_map::insert_or_assign`](insert_or_assign.md.nolink) | 要素を挿入、あるいは代入する               |
+| [`flat_map::insert_range`](insert_range.md)         | Rangeを挿入する                            |
+| [`flat_map::insert_or_assign`](insert_or_assign.md) | 要素を挿入、あるいは代入する               |
 | [`flat_map::emplace`](emplace.md)                   | 要素を直接構築する                         |
 | [`flat_map::try_emplace`](try_emplace.md)           | キーが存在しない場合のみ要素を直接構築する |
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>insert -- flat_map : insert_or_assignを追加 #1078</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map/insert.html"/>
      <id>db7801c0f24a2e644d58d77981fb7767bfc88d38:reference/flat_map/flat_map/insert.md</id>
      <updated>2023-08-17T17:14:08+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map/insert.md b/reference/flat_map/flat_map/insert.md
index 2a500628c..276a869e1 100644
--- a/reference/flat_map/flat_map/insert.md
+++ b/reference/flat_map/flat_map/insert.md
@@ -259,7 +259,7 @@ int main()
 
 | 名前                                           | 説明                                       |
 |------------------------------------------------|--------------------------------------------|
-| [`flat_map::insert_or_assign`](insert_or_assign.md.nolink) | 要素を挿入、あるいは代入する               |
+| [`flat_map::insert_or_assign`](insert_or_assign.md) | 要素を挿入、あるいは代入する               |
 | [`flat_map::insert_range`](insert_range.md)         | Rangeを挿入する                            |
 | [`flat_map::emplace`](emplace.md)                   | 要素を直接構築する                         |
 | [`flat_map::emplace_hint`](emplace_hint.md)         | ヒントを使って要素を直接構築する           |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>insert_or_assign -- flat_map : insert_or_assignを追加 #1078</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map/insert_or_assign.html"/>
      <id>db7801c0f24a2e644d58d77981fb7767bfc88d38:reference/flat_map/flat_map/insert_or_assign.md</id>
      <updated>2023-08-17T17:14:08+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map/insert_or_assign.md b/reference/flat_map/flat_map/insert_or_assign.md
new file mode 100644
index 000000000..39a0fad21
--- /dev/null
+++ b/reference/flat_map/flat_map/insert_or_assign.md
@@ -0,0 +1,153 @@
+# insert_or_assign
+* flat_map[meta header]
+* std[meta namespace]
+* flat_map[meta class]
+* function template[meta id-type]
+* cpp23[meta cpp]
+
+```cpp
+template&amp;lt;class M&amp;gt;
+pair&amp;lt;iterator, bool&amp;gt;
+  insert_or_assign(const key_type&amp;amp; k,
+                   M&amp;amp;&amp;amp; obj);            // (1) C++23
+
+template&amp;lt;class M&amp;gt;
+pair&amp;lt;iterator, bool&amp;gt;
+  insert_or_assign(key_type&amp;amp;&amp;amp; k,
+                   M&amp;amp;&amp;amp; obj);            // (2) C++23
+
+template&amp;lt;class K, class M&amp;gt;
+pair&amp;lt;iterator, bool&amp;gt;
+  insert_or_assign(K&amp;amp;&amp;amp; k,
+                   M&amp;amp;&amp;amp; obj);            // (3) C++23
+
+template&amp;lt;class M&amp;gt;
+iterator
+  insert_or_assign(const_iterator hint,
+                   const key_type&amp;amp; k,
+                   M&amp;amp;&amp;amp; obj);            // (4) C++23
+
+template&amp;lt;class M&amp;gt;
+iterator
+  insert_or_assign(const_iterator hint,
+                   key_type&amp;amp;&amp;amp; k,
+                   M&amp;amp;&amp;amp; obj);            // (5) C++23
+
+template&amp;lt;class K, class M&amp;gt;
+iterator
+  insert_or_assign(const_iterator hint,
+                   K&amp;amp;&amp;amp; k,
+                   M&amp;amp;&amp;amp; obj);            // (6) C++23
+```
+* pair[link /reference/utility/pair.md]
+
+## 概要
+引数 `k` で指定されたキーが存在しなければ対応する値を引数 `obj` の値として要素を挿入し（`insert`）、さもなければ（`or`）、そのキーに対応する値に引数 `obj` を代入する（`assign`）。
+
+引数 `hint` は、`k` を検索する際のヒントに使用される。
+
+- (1) : `key_type`型のキーをとって挿入もしくは代入する
+- (2) : `key_type`型の一時オブジェクトのキーをとって挿入もしくは代入する
+- (3) : `key_type`に変換可能な型の一時オブジェクトのキーをとって挿入もしくは代入する
+- (4) : 挿入位置のヒントをともない、`key_type`型のキーをとって挿入もしくは代入する
+- (5) : 挿入位置のヒントをともない、`key_type`型の一時オブジェクトのキーをとって挿入もしくは代入する
+- (6) : 挿入位置のヒントをともない、`key_type`に変換可能な型の一時オブジェクトのキーをとって挿入もしくは代入する
+
+
+## テンプレートパラメータ制約
+- (1), (2), (4), (5) :
+    - [`is_assignable_v`](/reference/type_traits/is_assignable.md)`&amp;lt;mapped_type&amp;amp;, M&amp;gt;` が `true` であること
+    - [`is_constructible_v`](/reference/type_traits/is_constructible.md)`&amp;lt;mapped_type, M&amp;gt;` が `true` であること
+- (3), (6) :
+    - `key_compare::is_transparent`が妥当な修飾IDであり、型を示すこと
+    - [`is_constructible_v`](/reference/type_traits/is_constructible.md)`&amp;lt;key_type, K&amp;gt;` が `true` であること
+    - [`is_assignable_v`](/reference/type_traits/is_assignable.md)`&amp;lt;mapped_type&amp;amp;, M&amp;gt;` が `true` であること
+    - [`is_constructible_v`](/reference/type_traits/is_constructible.md)`&amp;lt;mapped_type, M&amp;gt;` が `true` であること
+
+なお、規格に記載はないが、`hint` は [`emplace_hint`](emplace_hint.md) と同様、コンテナの有効な読み取り専用イテレータである必要があるものと思われる。
+
+
+## 事前条件
+- (3), (6) :
+    - `key_type`に変換した`k`を`u`として、[`find`](find.md)`(k) ==` [`find`](find.md)`(u)`が`true`であること
+
+
+## 効果
+- (1), (2), (3) :
+    - `k`と等価なキーをもつ要素`e`が存在している場合、[`std::forward`](/reference/utility/forward.md)`&amp;lt;M&amp;gt;(obj)`を`e.second`に代入する
+    - そうでなければ、以下と等価：
+    ```cpp
+    try_emplace(std::forward&amp;lt;decltype(k)&amp;gt;(k), std::forward&amp;lt;M&amp;gt;(obj));
+    ```
+    * try_emplace[link try_emplace.md]
+    * std::forward[link /reference/utility/forward.md]
+
+- (4), (5), (6) :
+    - `k`と等価なキーをもつ要素`e`が存在している場合、[`std::forward`](/reference/utility/forward.md)`&amp;lt;M&amp;gt;(obj)`を`e.second`に代入する
+    - そうでなければ、以下と等価：
+    ```cpp
+    try_emplace_hint(hint, std::forward&amp;lt;decltype(k)&amp;gt;(k), std::forward&amp;lt;M&amp;gt;(obj));
+    ```
+    * try_emplace_hint[link try_emplace.md]
+    * std::forward[link /reference/utility/forward.md]
+
+
+## 戻り値
+- (1)、(2)、(3) : イテレータと `bool` 値の [`pair`](/reference/utility/pair.md) を返す。
+    - 挿入された場合には、`first` に挿入された要素へのイテレータ、`second` に `true` が設定される。
+    - 代入された場合には、`first` に代入された要素へのイテレータ、`second` に `false` が設定される。
+- (4)、(5)、(6) :
+    - 挿入された場合には、挿入された要素へのイテレータを返す。
+    - 代入された場合には、代入された要素へのイテレータを返す。
+
+
+## 計算量
+- (1)、(2)、(3) : [`emplace`](emplace.md) と同じ
+- (4)、(5)、(6) : [`emplace_hint`](emplace_hint.md) と同じ
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;flat_map&amp;gt;
+#include &amp;lt;string&amp;gt;
+
+int main()
+{
+  std::flat_map&amp;lt;std::string, int&amp;gt; fm;
+
+  auto [it1, b1] = fm.insert_or_assign(&amp;#34;foo&amp;#34;, 42);
+  std::cout &amp;lt;&amp;lt; &amp;#39;(&amp;#39; &amp;lt;&amp;lt; it1-&amp;gt;first &amp;lt;&amp;lt; &amp;#34;, &amp;#34; &amp;lt;&amp;lt; it1-&amp;gt;second &amp;lt;&amp;lt; &amp;#34;), &amp;#34; &amp;lt;&amp;lt; std::boolalpha &amp;lt;&amp;lt; b1 &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
+
+  auto [it2, b2] = fm.insert_or_assign(&amp;#34;foo&amp;#34;, 0);
+  std::cout &amp;lt;&amp;lt; &amp;#39;(&amp;#39; &amp;lt;&amp;lt; it2-&amp;gt;first &amp;lt;&amp;lt; &amp;#34;, &amp;#34; &amp;lt;&amp;lt; it2-&amp;gt;second &amp;lt;&amp;lt; &amp;#34;), &amp;#34; &amp;lt;&amp;lt; std::boolalpha &amp;lt;&amp;lt; b2 &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
+}
+```
+* insert_or_assign[color ff0000]
+
+### 出力
+```
+(foo, 42), true
+(foo, 0), false
+```
+
+## バージョン
+### 言語
+- C++23
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
+
+
+## 関連項目
+
+| 名前                                           | 説明                                       |
+|------------------------------------------------|--------------------------------------------|
+| [`flat_map::insert`](insert.md)                | 要素を挿入する                             |
+| [`flat_map::insert_range`](insert_range.md)    | Rangeを挿入する                            |
+| [`flat_map::emplace`](emplace.md)              | 要素を直接構築する                         |
+| [`flat_map::emplace_hint`](emplace_hint.md)    | ヒントを使って要素を直接構築する           |
+| [`flat_map::try_emplace`](try_emplace.md)      | キーが存在しない場合のみ要素を直接構築する |
+
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>insert_range -- flat_map : insert_or_assignを追加 #1078</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map/insert_range.html"/>
      <id>db7801c0f24a2e644d58d77981fb7767bfc88d38:reference/flat_map/flat_map/insert_range.md</id>
      <updated>2023-08-17T17:14:08+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map/insert_range.md b/reference/flat_map/flat_map/insert_range.md
index 7962278bf..9abdd9407 100644
--- a/reference/flat_map/flat_map/insert_range.md
+++ b/reference/flat_map/flat_map/insert_range.md
@@ -113,7 +113,7 @@ int main()
 | 名前                                           | 説明                                       |
 |------------------------------------------------|--------------------------------------------|
 | [`flat_map::insert`](insert.md)                     | 要素を挿入する               |
-| [`flat_map::insert_or_assign`](insert_or_assign.md.nolink) | 要素を挿入、あるいは代入する               |
+| [`flat_map::insert_or_assign`](insert_or_assign.md) | 要素を挿入、あるいは代入する               |
 | [`flat_map::emplace`](emplace.md)                   | 要素を直接構築する                         |
 | [`flat_map::emplace_hint`](emplace_hint.md)         | ヒントを使って要素を直接構築する           |
 | [`flat_map::try_emplace`](try_emplace.md)           | キーが存在しない場合のみ要素を直接構築する |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>try_emplace -- flat_map : insert_or_assignを追加 #1078</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map/try_emplace.html"/>
      <id>db7801c0f24a2e644d58d77981fb7767bfc88d38:reference/flat_map/flat_map/try_emplace.md</id>
      <updated>2023-08-17T17:14:08+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map/try_emplace.md b/reference/flat_map/flat_map/try_emplace.md
index dea4790f4..8cc66c14c 100644
--- a/reference/flat_map/flat_map/try_emplace.md
+++ b/reference/flat_map/flat_map/try_emplace.md
@@ -172,7 +172,8 @@ false, 114, false
 | 名前                                           | 説明                                       |
 |------------------------------------------------|--------------------------------------------|
 | [`flat_map::insert`](insert.md)                     | 要素を挿入する                             |
-| [`flat_map::insert_or_assign`](insert_or_assign.md.nolink) | 要素を挿入、あるいは代入する               |
+| [`flat_map::insert_range`](insert_range.md)         | Rangeを挿入する                            |
+| [`flat_map::insert_or_assign`](insert_or_assign.md) | 要素を挿入、あるいは代入する               |
 | [`flat_map::emplace`](emplace.md)                   | 要素を直接構築する                         |
 | [`flat_map::emplace_hint`](emplace_hint.md)         | ヒントを使って要素を直接構築する           |
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>insert -- 未使用のコード修飾を削除</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map/insert.html"/>
      <id>3547182922866d554e5e9e681ffdc2bb81c6503f:reference/flat_map/flat_map/insert.md</id>
      <updated>2023-08-17T16:47:59+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map/insert.md b/reference/flat_map/flat_map/insert.md
index e19ee2fba..2a500628c 100644
--- a/reference/flat_map/flat_map/insert.md
+++ b/reference/flat_map/flat_map/insert.md
@@ -38,7 +38,6 @@ void insert(sorted_unique_t s,
 * pair[link /reference/utility/pair.md]
 * initializer_list[link /reference/initializer_list/initializer_list.md]
 * sorted_unique_t[link /reference/flat_map/sorted_unique_t.md]
-* container-compatible-range[link /reference/exposition-only/container-compatible-range.md]
 
 ## 概要
 新しく一つの要素(引数 `x`, `y`を使う)または要素のシーケンス(入力イテレータまたは `initializer_list` を使う)を挿入し、コンテナを拡張する。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>flat_map -- flat_map : insert_rangeを追加 #1078</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map.html"/>
      <id>292f841f9c90af75b5804ce5481dc23e6f93580a:reference/flat_map/flat_map.md</id>
      <updated>2023-08-17T16:33:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map.md b/reference/flat_map/flat_map.md
index 53e8f472e..24660156e 100644
--- a/reference/flat_map/flat_map.md
+++ b/reference/flat_map/flat_map.md
@@ -60,7 +60,7 @@ namespace std {
 | [`clear`](flat_map/clear.md)                       | 全ての要素を削除する                       | C++23 |
 | [`insert`](flat_map/insert.md)                     | 要素を挿入する                             | C++23 |
 | [`insert_or_assign`](flat_map/insert_or_assign.md.nolink) | 要素を挿入、あるいは代入する               | C++23 |
-| [`insert_range`](flat_map/insert_range.md.nolink)         | Rangeを挿入する                            | C++23 |
+| [`insert_range`](flat_map/insert_range.md)         | Rangeを挿入する                            | C++23 |
 | [`emplace`](flat_map/emplace.md)                   | 要素を直接構築する                         | C++23 |
 | [`emplace_hint`](flat_map/emplace_hint.md)         | ヒントを使って要素を直接構築する           | C++23 |
 | [`try_emplace`](flat_map/try_emplace.md)           | キーが存在しない場合のみ要素を直接構築する | C++23 |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>insert -- flat_map : insert_rangeを追加 #1078</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map/insert.html"/>
      <id>292f841f9c90af75b5804ce5481dc23e6f93580a:reference/flat_map/flat_map/insert.md</id>
      <updated>2023-08-17T16:33:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map/insert.md b/reference/flat_map/flat_map/insert.md
index 5f3a656f0..e19ee2fba 100644
--- a/reference/flat_map/flat_map/insert.md
+++ b/reference/flat_map/flat_map/insert.md
@@ -30,13 +30,10 @@ void insert(sorted_unique_t,
             InputIterator first,
             InputIterator last);                  // (8) C++23
 
-template&amp;lt;container-compatible-range&amp;lt;value_type&amp;gt; R&amp;gt;
-void insert_range(R&amp;amp;&amp;amp; rg);                        // (9) C++23
-
-void insert(initializer_list&amp;lt;value_type&amp;gt; il);     // (10) C++23
+void insert(initializer_list&amp;lt;value_type&amp;gt; il);     // (9) C++23
 
 void insert(sorted_unique_t s,
-            initializer_list&amp;lt;value_type&amp;gt; il);     // (11) C++23
+            initializer_list&amp;lt;value_type&amp;gt; il);     // (10) C++23
 ```
 * pair[link /reference/utility/pair.md]
 * initializer_list[link /reference/initializer_list/initializer_list.md]
@@ -64,9 +61,8 @@ void insert(sorted_unique_t s,
 - (6) : 指定された位置に、要素型`value_type`のコンストラクタ引数を受け取って挿入する
 - (7) : イテレータ範囲`[first, last)`を挿入する
 - (8) : ソート済みかつ重複要素のないイテレータ範囲`[first, last)`を挿入する
-- (9) : Rangeを挿入する
-- (10) : 初期化子リストを挿入する
-- (11) : ソート済みかつ重複要素のない初期化子リストを挿入する
+- (9) : 初期化子リストを挿入する
+- (10) : ソート済みかつ重複要素のない初期化子リストを挿入する
 
 
 ## 要件
@@ -181,44 +177,12 @@ void insert(sorted_unique_t s,
     * key_equiv[link key_equiv.md]
     * distance[link /reference/iterator/distance.md]
 
-- (9) : メンバ変数として保持しているコンテナ`c`に、以下のように挿入する：
-    ```cpp
-    for (const auto&amp;amp; e : rg) {
-      c.keys.insert(c.keys.end(), e.first);
-      c.values.insert(c.values.end(), e.second);
-    }
-    ```
-    * c.keys[link containers.md]
-    * c.values[link containers.md]
-    * end()[link /reference/vector/vector/end.md]
-    * insert[link /reference/vector/vector/insert.md]
-    * first[link /reference/utility/pair.md]
-    * second[link /reference/utility/pair.md]
-
-    - 次に、新しく挿入された要素の範囲を`value_comp()`を基準にソートする
-    - 次に、ソートされた結果の範囲と、既存の要素のソートされた範囲をひとつのソートされた範囲にマージする
-    - 最後に、重複する要素を以下のように削除する：
-
-    ```cpp
-    auto zv = ranges::zip_view(c.keys, c.values);
-    auto it = ranges::unique(zv, key_equiv(compare)).begin();
-    auto dist = distance(zv.begin(), it);
-    c.keys.erase(c.keys.begin() + dist, c.keys.end());
-    c.values.erase(c.values.begin() + dist, c.values.end());
-    ```
-    * c.keys[link containers.md]
-    * c.values[link containers.md]
-    * ranges::zip_view[link /ranges/zip_view.md.nolink]
-    * ranges::unique[link /reference/algorithm/ranges_unique.md]
-    * key_equiv[link key_equiv.md]
-    * distance[link /reference/iterator/distance.md]
-
-- (10) :
+- (9) :
     ```cpp
     insert(il.begin(), il.end());
     ```
 
-- (11) :
+- (10) :
     ```cpp
     insert(s, il.begin(), il.end());
     ```
@@ -231,17 +195,16 @@ void insert(sorted_unique_t s,
 - (3), (4), (6) :
     - 挿入された場合には、新しく挿入された要素を指すイテレータを返す。
     - 挿入されなかった場合には、`x`のキーと等価のキーを持つ要素へのイテレータを返す。
-- (7), (8), (9), (10), (11) : なし
+- (7), (8), (9), (10) : なし
 
 
 ## 計算量
 - (7) : Nをこの操作の前の[`size()`](size.md)、Mを[`distance`](/reference/iterator/distance.md)`(first, last)`として、N + MlogM
-- (7) : Nをこの操作のあとの[`size()`](size.md)として、Nに対して線形
-- (8) : Nをこの操作の前の[`size()`](size.md)、Mを[`ranges::distance`](/reference/iterator/ranges_distance.md)`(rg)`として、N + MlogM
+- (8) : Nをこの操作のあとの[`size()`](size.md)として、Nに対して線形
 
 
 ## 備考
-- (7), (8), (9) : この操作はインプレース・マージを行うため、追加のメモリ確保を行う可能性がある
+- (7), (8) : この操作はインプレース・マージを行うため、追加のメモリ確保を行う可能性がある
 
 
 ## 例
@@ -263,7 +226,6 @@ int main()
   };
 
   // シーケンスを挿入する
-  fm.insert(fm2);
   fm.insert(fm2.begin(), fm2.end());
 
   // 挿入するシーケンスがソート済みかつ重複要素がないことがわかっている場合、
@@ -275,6 +237,7 @@ int main()
   }
 }
 ```
+* insert[color ff0000]
 * begin()[link begin.md]
 * end()[link end.md]
 * std::sorted_unique[link /reference/flat_map/sorted_unique_t.md]
@@ -298,6 +261,7 @@ int main()
 | 名前                                           | 説明                                       |
 |------------------------------------------------|--------------------------------------------|
 | [`flat_map::insert_or_assign`](insert_or_assign.md.nolink) | 要素を挿入、あるいは代入する               |
+| [`flat_map::insert_range`](insert_range.md)         | Rangeを挿入する                            |
 | [`flat_map::emplace`](emplace.md)                   | 要素を直接構築する                         |
 | [`flat_map::emplace_hint`](emplace_hint.md)         | ヒントを使って要素を直接構築する           |
 | [`flat_map::try_emplace`](try_emplace.md)           | キーが存在しない場合のみ要素を直接構築する |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>insert_range -- flat_map : insert_rangeを追加 #1078</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map/insert_range.html"/>
      <id>292f841f9c90af75b5804ce5481dc23e6f93580a:reference/flat_map/flat_map/insert_range.md</id>
      <updated>2023-08-17T16:33:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map/insert_range.md b/reference/flat_map/flat_map/insert_range.md
new file mode 100644
index 000000000..7962278bf
--- /dev/null
+++ b/reference/flat_map/flat_map/insert_range.md
@@ -0,0 +1,120 @@
+# insert_range
+* flat_map[meta header]
+* std[meta namespace]
+* flat_map[meta class]
+* function[meta id-type]
+* cpp23[meta cpp]
+
+```cpp
+template&amp;lt;container-compatible-range&amp;lt;value_type&amp;gt; R&amp;gt;
+void insert_range(R&amp;amp;&amp;amp; rg);                        // (1) C++23
+```
+* container-compatible-range[link /reference/exposition-only/container-compatible-range.md]
+
+## 概要
+Rangeを挿入し、コンテナを拡張する。
+
+これは、挿入された要素の数だけコンテナの [`size()`](size.md) を増やす。
+
+`flat_map` コンテナは重複したキーを持つ要素を許さないため、挿入操作はそれぞれの要素が他のコンテナ内の既存要素と同じキーかどうかをチェックする。もし同じであれば要素は挿入されない。
+
+重複した値を許す、類似したコンテナについては `flat_multimap` を参照。
+
+内部的に `flat_map` コンテナは、コンストラクト時に指定された比較オブジェクトによって要素を下位から上位へとソートして保持する。
+
+
+## 効果
+- メンバ変数として保持しているコンテナ`c`に、以下のように挿入する：
+    ```cpp
+    for (const auto&amp;amp; e : rg) {
+      c.keys.insert(c.keys.end(), e.first);
+      c.values.insert(c.values.end(), e.second);
+    }
+    ```
+    * c.keys[link containers.md]
+    * c.values[link containers.md]
+    * end()[link /reference/vector/vector/end.md]
+    * insert[link /reference/vector/vector/insert.md]
+    * first[link /reference/utility/pair.md]
+    * second[link /reference/utility/pair.md]
+
+    - 次に、新しく挿入された要素の範囲を`value_comp()`を基準にソートする
+    - 次に、ソートされた結果の範囲と、既存の要素のソートされた範囲をひとつのソートされた範囲にマージする
+    - 最後に、重複する要素を以下のように削除する：
+
+    ```cpp
+    auto zv = ranges::zip_view(c.keys, c.values);
+    auto it = ranges::unique(zv, key_equiv(compare)).begin();
+    auto dist = distance(zv.begin(), it);
+    c.keys.erase(c.keys.begin() + dist, c.keys.end());
+    c.values.erase(c.values.begin() + dist, c.values.end());
+    ```
+    * c.keys[link containers.md]
+    * c.values[link containers.md]
+    * ranges::zip_view[link /ranges/zip_view.md.nolink]
+    * ranges::unique[link /reference/algorithm/ranges_unique.md]
+    * key_equiv[link key_equiv.md]
+    * distance[link /reference/iterator/distance.md]
+
+
+## 戻り値
+なし
+
+
+## 計算量
+- Nをこの操作の前の[`size()`](size.md)、Mを[`ranges::distance`](/reference/iterator/ranges_distance.md)`(rg)`として、N + MlogM
+
+
+## 備考
+- この操作はインプレース・マージを行うため、追加のメモリ確保を行う可能性がある
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;flat_map&amp;gt;
+
+int main()
+{
+  std::flat_map&amp;lt;int, char&amp;gt; fm = {
+    {3, &amp;#39;a&amp;#39;}
+  };
+
+  std::flat_map&amp;lt;int, char&amp;gt; fm2 = {
+    {5, &amp;#39;d&amp;#39;},
+    {15, &amp;#39;e&amp;#39;}
+  };
+
+  fm.insert_range(fm2);
+
+  for (const auto&amp;amp; [key, value] : fm) {
+    std::cout &amp;lt;&amp;lt; key &amp;lt;&amp;lt; &amp;#34; : &amp;#34; &amp;lt;&amp;lt; value &amp;lt;&amp;lt; std::endl;
+  }
+}
+```
+* insert_range[color ff0000]
+
+### 出力
+```
+3 : a
+5 : d
+15 : e
+```
+
+## バージョン
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
+
+
+## 関連項目
+
+| 名前                                           | 説明                                       |
+|------------------------------------------------|--------------------------------------------|
+| [`flat_map::insert`](insert.md)                     | 要素を挿入する               |
+| [`flat_map::insert_or_assign`](insert_or_assign.md.nolink) | 要素を挿入、あるいは代入する               |
+| [`flat_map::emplace`](emplace.md)                   | 要素を直接構築する                         |
+| [`flat_map::emplace_hint`](emplace_hint.md)         | ヒントを使って要素を直接構築する           |
+| [`flat_map::try_emplace`](try_emplace.md)           | キーが存在しない場合のみ要素を直接構築する |
+
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
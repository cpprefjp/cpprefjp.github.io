<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2022-07-21T15:30:34.223377</updated>
  <id>86ab0eb0-d000-4d74-9f7f-4264d1a6a653</id>

  
    <entry>
      <title>algorithm -- push_heapとranges_push_heapの概要を平易な表現に修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm.html"/>
      <id>69c3e9a777aba98d2b50381de69e761d8c5f856f:reference/algorithm.md</id>
      <updated>2022-07-21T21:29:11+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm.md b/reference/algorithm.md
index cbd0376a7..041e10d61 100644
--- a/reference/algorithm.md
+++ b/reference/algorithm.md
@@ -346,13 +346,13 @@ ranges::sort(pv, {}, &amp;amp;Parson::name);
 
 | 名前 | 説明 | 対応バージョン |
 |-------------------------------------------------|-----------------------------------|-------|
-| [`push_heap`](algorithm/push_heap.md)         | ヒープ化された範囲に要素を追加したヒープ範囲を得る | |
+| [`push_heap`](algorithm/push_heap.md)         | ヒープ化された範囲に要素を追加する | |
 | [`pop_heap`](algorithm/pop_heap.md)           | ヒープ化された範囲の先頭と末尾を入れ替え、ヒープ範囲を作り直す | |
 | [`make_heap`](algorithm/make_heap.md)         | 範囲をヒープ化する | |
 | [`sort_heap`](algorithm/sort_heap.md)         | ヒープ化された範囲を並べ替える | |
 | [`is_heap_until`](algorithm/is_heap_until.md) | 範囲がヒープ化されているか判定し、ヒープ化されていない最初の要素を指すイテレータを取得する | C++11 |
 | [`is_heap`](algorithm/is_heap.md)             | 範囲がヒープ化されているか判定する | C++11 |
-| [`ranges::push_heap`](algorithm/ranges_push_heap.md)         | ヒープ化された範囲に要素を追加したヒープ範囲を得る                                         | C++20 |
+| [`ranges::push_heap`](algorithm/ranges_push_heap.md)         | ヒープ化された範囲に要素を追加する                                         | C++20 |
 | [`ranges::pop_heap`](algorithm/ranges_pop_heap.md)           | ヒープ化された範囲の先頭と末尾を入れ替え、ヒープ範囲を作り直す                             | C++20 |
 | [`ranges::make_heap`](algorithm/ranges_make_heap.md)         | 範囲をヒープ化する                                                                         | C++20 |
 | [`ranges::sort_heap`](algorithm/ranges_sort_heap.md)         | ヒープ化された範囲を並べ替える                                                             | C++20 |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>pea-sys</name>
        <email>pea98258@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>push_heap -- push_heapとranges_push_heapの概要を平易な表現に修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/push_heap.html"/>
      <id>69c3e9a777aba98d2b50381de69e761d8c5f856f:reference/algorithm/push_heap.md</id>
      <updated>2022-07-21T21:29:11+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/push_heap.md b/reference/algorithm/push_heap.md
index f389f145b..9395576cb 100644
--- a/reference/algorithm/push_heap.md
+++ b/reference/algorithm/push_heap.md
@@ -26,7 +26,7 @@ namespace std {
 ```
 
 ## 概要
-ヒープ化された範囲に要素を追加したヒープ範囲を得る
+ヒープ化された範囲に要素を追加する
 
 
 ## 要件
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>pea-sys</name>
        <email>pea98258@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>push_heap -- push_heapとranges_push_heapの概要を平易な表現に修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_push_heap.html"/>
      <id>69c3e9a777aba98d2b50381de69e761d8c5f856f:reference/algorithm/ranges_push_heap.md</id>
      <updated>2022-07-21T21:29:11+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_push_heap.md b/reference/algorithm/ranges_push_heap.md
index 7fa825485..a3b83cbcb 100644
--- a/reference/algorithm/ranges_push_heap.md
+++ b/reference/algorithm/ranges_push_heap.md
@@ -27,7 +27,7 @@ namespace std::ranges {
 * borrowed_iterator_t[link /reference/ranges/borrowed_iterator_t.md]
 
 ## 概要
-ヒープ化された範囲に要素を追加したヒープ範囲を得る
+ヒープ化された範囲に要素を追加する
 
 * (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>pea-sys</name>
        <email>pea98258@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>set_symmetric_difference -- set_symmetric_difference.mdの効果を修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/set_symmetric_difference.html"/>
      <id>b6cb18ea478a62e0d2bbd87d731452cdd4665426:reference/algorithm/set_symmetric_difference.md</id>
      <updated>2022-07-21T07:07:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/set_symmetric_difference.md b/reference/algorithm/set_symmetric_difference.md
index fd3f8458c..ea0bc5923 100644
--- a/reference/algorithm/set_symmetric_difference.md
+++ b/reference/algorithm/set_symmetric_difference.md
@@ -75,7 +75,7 @@ namespace std {
 
 
 ## 効果
-`[first1,last1)` から `[first2,last2)` に存在していない要素と、`[first2,last2)` から `[first2,last2)` に存在していない要素を `result` へコピーする。構築された要素はソートされている。
+`[first1,last1)` から `[first2,last2)` に存在していない要素と、`[first2,last2)` から `[first1,last1)` に存在していない要素を `result` へコピーする。構築された要素はソートされている。
 
 
 ## 戻り値
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>pea-sys</name>
        <email>49807271+pea-sys@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>set_symmetric_difference -- set_symmetric_difference.mdの効果を修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_set_symmetric_difference.html"/>
      <id>d29261ba00e16ec758556cb349e588b2d14b2938:reference/algorithm/ranges_set_symmetric_difference.md</id>
      <updated>2022-07-21T07:01:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_set_symmetric_difference.md b/reference/algorithm/ranges_set_symmetric_difference.md
index 047ac0175..0d80425ab 100644
--- a/reference/algorithm/ranges_set_symmetric_difference.md
+++ b/reference/algorithm/ranges_set_symmetric_difference.md
@@ -44,7 +44,7 @@ namespace std::ranges {
 
 
 ## 効果
-`[first1,last1)` から `[first2,last2)` に存在していない要素と、`[first2,last2)` から `[first2,last2)` に存在していない要素を `result` へコピーする。構築された要素はソートされている。
+`[first1,last1)` から `[first2,last2)` に存在していない要素と、`[first2,last2)` から `[first1,last1)` に存在していない要素を `result` へコピーする。構築された要素はソートされている。
 
 
 ## 戻り値
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>pea-sys</name>
        <email>49807271+pea-sys@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>set_intersection -- Update ranges_set_intersection.md</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_set_intersection.html"/>
      <id>c6ea16228c8917d42a04c3ed5214f71f9ee99417:reference/algorithm/ranges_set_intersection.md</id>
      <updated>2022-07-20T23:16:33+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_set_intersection.md b/reference/algorithm/ranges_set_intersection.md
index 4883aaa17..bcea585c4 100644
--- a/reference/algorithm/ranges_set_intersection.md
+++ b/reference/algorithm/ranges_set_intersection.md
@@ -72,7 +72,6 @@ set_intersection_result {
 #include &amp;lt;iostream&amp;gt;
 #include &amp;lt;set&amp;gt;
 #include &amp;lt;algorithm&amp;gt;
-#include &amp;lt;iterator&amp;gt;
 
 int main()
 {
@@ -81,7 +80,7 @@ int main()
   std::multiset&amp;lt;int&amp;gt; result;
 
   // aとbの積集合を作る
-  std::set_intersection(a, b, std::inserter(result, result.end()));
+  std::ranges::set_intersection(a, b, std::inserter(result, result.end()));
 
   for (int x : result) {
     std::cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; std::endl;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>pea-sys</name>
        <email>49807271+pea-sys@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>lower_bound -- lower_bound : setについては専用のメンバ関数を使うことを記載</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/lower_bound.html"/>
      <id>5ac9b350f13ba565bc55a4d87b70a0247df2c9d5:reference/algorithm/lower_bound.md</id>
      <updated>2022-07-20T15:06:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/lower_bound.md b/reference/algorithm/lower_bound.md
index 2449a80c4..3b343c2ce 100644
--- a/reference/algorithm/lower_bound.md
+++ b/reference/algorithm/lower_bound.md
@@ -66,6 +66,7 @@ namespace std {
 
 
 ## 備考
+- [`std::set`](/reference/set/set.md)や[`std::multiset`](/reference/set/multiset.md)に対しては専用の[`lower_bound`](/reference/set/set/lower_bound.md)メンバ関数が定義されているため、そちらを使用すること
 - 本関数は、本質的に C++11 で追加された [`partition_point`](partition_point.md) と等価である。  
 	具体的には、[`partition_point`](partition_point.md)`(first, last, [value](const T&amp;amp; e) { return e &amp;lt; value; })`、あるいは、[`partition_point`](partition_point.md)`(first, last, [value, comp](const T&amp;amp; e) { return comp(e, value); })` とすることで等価の結果が得られる。
 - 本関数の要件は、上記の通り C++03 までの方が C++11 よりも厳しい。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
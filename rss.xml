<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2021-08-29T14:35:27.936139</updated>
  <id>eb790e25-6a12-4e27-b3c1-b37ed41b3dcf</id>

  
    <entry>
      <title>common_iterator -- &lt;ranges&gt; 範囲コンセプトの説明を追加 #713</title>
      <link href="https://cpprefjp.github.io/reference/iterator/common_iterator.html"/>
      <id>5707d006085d2e43b5e58d6ffd0519c756566a30:reference/iterator/common_iterator.md</id>
      <updated>2021-08-29T03:49:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/common_iterator.md b/reference/iterator/common_iterator.md
index 5d226697b..8231e1221 100644
--- a/reference/iterator/common_iterator.md
+++ b/reference/iterator/common_iterator.md
@@ -141,7 +141,7 @@ int main() {
 
 ## 関連項目
 
-- [`common_range`](/reference/ranges/common_range.md.nolink)
+- [`common_range`](/reference/ranges/common_range.md)
 - [`common_view`](/reference/ranges/common_view.md.nolink)
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>distance -- &lt;ranges&gt; 範囲コンセプトの説明を追加 #713</title>
      <link href="https://cpprefjp.github.io/reference/iterator/ranges_distance.html"/>
      <id>5707d006085d2e43b5e58d6ffd0519c756566a30:reference/iterator/ranges_distance.md</id>
      <updated>2021-08-29T03:49:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/ranges_distance.md b/reference/iterator/ranges_distance.md
index 53a18834b..a8f36ef0f 100644
--- a/reference/iterator/ranges_distance.md
+++ b/reference/iterator/ranges_distance.md
@@ -16,7 +16,7 @@ namespace std::ranges {
 * input_or_output_iterator[link /reference/iterator/input_or_output_iterator.md]
 * sentinel_for[link /reference/iterator/sentinel_for.md]
 * iter_difference_t[link /reference/iterator/iter_difference_t.md]
-* range[link /reference/ranges/range.md.nolink]
+* range[link /reference/ranges/range.md]
 * range_difference_t[link /reference/ranges/range_difference_t.md]
 
 ## 概要
@@ -41,7 +41,7 @@ namespace std::ranges {
     - `S, I`が[`sized_sentinel_for`](sized_sentinel_for.md)`&amp;lt;S, I&amp;gt;`のモデルとなる : `return (last - first)`
     - それ以外の場合 : `first`から`last`に到達するのに必要なインクリメントの回数を返す。
 - (2) : 次のいずれかによって、範囲の長さを求める。
-    - `R`が[`sized_range`](/reference/ranges/sized_range.md.nolink)`&amp;lt;R&amp;gt;`のモデルとなる : `return static_cast&amp;lt;`[`range_difference_t`](/reference/ranges/range_difference_t.md)`&amp;lt;R&amp;gt;&amp;gt;(`[`ranges::size`](/reference/ranges/size.md)`(r));`
+    - `R`が[`sized_range`](/reference/ranges/sized_range.md)`&amp;lt;R&amp;gt;`のモデルとなる : `return static_cast&amp;lt;`[`range_difference_t`](/reference/ranges/range_difference_t.md)`&amp;lt;R&amp;gt;&amp;gt;(`[`ranges::size`](/reference/ranges/size.md)`(r));`
     - それ以外の場合 : `return ranges::distance(`[`ranges::begin`](/reference/ranges/begin.md)`(r), `[`ranges::end`](/reference/ranges/end.md)`(r))` （(1)に委譲）
 
 ## 戻り値
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ranges -- &lt;ranges&gt; 範囲コンセプトの説明を追加 #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges.html"/>
      <id>5707d006085d2e43b5e58d6ffd0519c756566a30:reference/ranges.md</id>
      <updated>2021-08-29T03:49:54+09:00</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;ranges&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;ranges&lt;/span&gt;&lt;span class=&#34;cpp cpp20&#34; title=&#34;C++20で追加&#34;&gt;(C++20)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;ranges&amp;gt;&lt;/code&gt; では、イテレータの組ではなく、コンテナや配列、部分的なコンテナなどを扱う範囲ライブラリを提供する。&lt;/p&gt;
&lt;p&gt;C++17までは、標準アルゴリズム関数はイテレータの組を扱い、範囲を直接扱ってはいなかった。
範囲ライブラリはBoost.Rangeやrange-v3などで実績があり、C++標準にも取り込まれることになった。&lt;/p&gt;
&lt;h2&gt;範囲アクセス&lt;/h2&gt;
&lt;p&gt;これらの機能は従来&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/iterator.html&#34;&gt;&amp;lt;iterator&amp;gt;&lt;/a&gt;&lt;/code&gt;でフリー関数として提供されていた。
C++20では関数によるカスタマイゼーションポイントの問題点を解消するため、関数オブジェクトとして再実装されている。
互換性を維持するために従来の関数も残っているが、これらのカスタマイゼーションポイントオブジェクトを使用することが推奨される。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/begin.html&#34;&gt;begin&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の先頭を指すイテレータを取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/end.html&#34;&gt;end&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の末尾の次を指すイテレータもしくは番兵を取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/cbegin.html&#34;&gt;cbegin&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の先頭を指す読み取り専用イテレータを取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/cend.html&#34;&gt;cend&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の末尾の次を指す読み取り専用イテレータもしくは番兵を取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/rbegin.html&#34;&gt;rbegin&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の末尾を指す逆イテレータを取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/rend.html&#34;&gt;rend&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の先頭の前を指す逆イテレータもしくは番兵を取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/crbegin.html&#34;&gt;crbegin&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の末尾を指す読み取り専用逆イテレータを取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/crend.html&#34;&gt;crend&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の先頭の前を指す読み取り専用逆イテレータもしくは番兵を取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/size.html&#34;&gt;size&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の要素数を取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/ssize.html&#34;&gt;ssize&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の要素数を、符号付き整数型で取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/empty.html&#34;&gt;empty&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲が空かどうかを判定する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/data.html&#34;&gt;data&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の要素配列へのポインタを取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/cdata.html&#34;&gt;cdata&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の要素配列への読み取り専用ポインタを取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;範囲に関連する型へのアクセス&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/iterator_t.html&#34;&gt;iterator_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲のイテレータ型を取得する (alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/sentinel_t.html&#34;&gt;sentinel_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の番兵型を取得する (alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/range_difference_t.html&#34;&gt;range_difference_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲のイテレータの差の型を取得する (alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/range_size_t.html&#34;&gt;range_size_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲のサイズの型を取得する(alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/range_value_t.html&#34;&gt;range_value_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の要素の型を取得する (alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/range_reference_t.html&#34;&gt;range_reference_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の要素の参照型を取得する (alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/range_rvalue_reference_t.html&#34;&gt;range_rvalue_reference_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の要素の右辺値参照型を取得する (alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;範囲コンセプト&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/range.html&#34;&gt;range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲を定義するコンセプト (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/borrowed_range.html&#34;&gt;borrowed_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;所有権を持たない範囲 (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/sized_range.html&#34;&gt;sized_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;サイズを一定時間で求められる範囲 (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/view.html&#34;&gt;view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビューである範囲 (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/output_range.html&#34;&gt;output_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;イテレータが出力イテレータである範囲 (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/input_range.html&#34;&gt;input_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;イテレータが入力イテレータである範囲 (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/forward_range.html&#34;&gt;forward_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;イテレータが前進イテレータである範囲 (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/bidirectional_range.html&#34;&gt;bidirectional_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;イテレータが双方向イテレータである範囲 (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/random_access_range.html&#34;&gt;random_access_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;イテレータがランダムアクセスイテレータである範囲 (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/contiguous_range.html&#34;&gt;contiguous_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;イテレータが隣接イテレータである範囲 (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/common_range.html&#34;&gt;common_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;イテレータと番兵の型が等しい範囲 (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/viewable_range.html&#34;&gt;viewable_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビューに変換できる範囲 (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;カスタマイゼーションポイント&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/enable_borrowed_range.html&#34;&gt;enable_borrowed_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲を&lt;code&gt;borrowed_range&lt;/code&gt;にする (variable template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/enable_view.html&#34;&gt;enable_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲を&lt;code&gt;view&lt;/code&gt;にする (variable template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/disable_sized_range.html&#34;&gt;disable_sized_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲を&lt;code&gt;sized_range&lt;/code&gt;にならないようにする (variable template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;ビューインターフェース&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/view_base.html&#34;&gt;view_base&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;基底クラスとすることで&lt;code&gt;view&lt;/code&gt;となるタグ型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/view_interface.md.nolink&#34;&gt;view_interface&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビューの基底クラスとして推奨されるクラス (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;部分範囲&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/subrange_kind.md.nolink&#34;&gt;subrange_kind&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;部分範囲の種類を表す列挙体 (enum class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/subrange.md.nolink&#34;&gt;subrange&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;イテレータペアを範囲として扱う (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;ダングリングイテレータハンドリング&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/dangling.md.nolink&#34;&gt;dangling&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ダングリングイテレータ、ダングリング範囲を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/borrowed_iterator_t.md.nolink&#34;&gt;borrowed_iterator_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲が&lt;code&gt;borrowed_range&lt;/code&gt;ではないとき&lt;code&gt;dangling&lt;/code&gt;となるイテレータ (alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/borrowed_subrange_t.md.nolink&#34;&gt;borrowed_subrange_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲が&lt;code&gt;borrowed_range&lt;/code&gt;ではないとき&lt;code&gt;dangling&lt;/code&gt;となる部分範囲 (alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;範囲ファクトリ&lt;/h2&gt;
&lt;h3&gt;empty view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/empty_view.md.nolink&#34;&gt;empty_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;空の範囲 (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/empty_view.md.nolink&#34;&gt;empty&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;empty_view&lt;/code&gt;を生成する (variable template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;single view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/single_view.md.nolink&#34;&gt;single_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した値1つからなる範囲 (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/single.md.nolink&#34;&gt;single&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;single_view&lt;/code&gt;を生成する (variable template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;iota view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/iota_view.md.nolink&#34;&gt;iota_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;単調増加列である範囲 (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/iota.md.nolink&#34;&gt;iota&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;iota_view&lt;/code&gt;を生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;istream view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/basic_istream_view.md.nolink&#34;&gt;basic_istream_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;入力ストリームから値を読む範囲 (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/istream_view.md.nolink&#34;&gt;istream_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;basic_istream_view&lt;/code&gt;を生成する (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;範囲アダプタ&lt;/h2&gt;
&lt;h3&gt;all view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/ref_view.md.nolink&#34;&gt;ref_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲への参照として振る舞うビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/all.md.nolink&#34;&gt;all&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲への参照として振る舞うビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/all_t.md.nolink&#34;&gt;all_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;all&lt;/code&gt;の戻り値型 (alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;filter view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/filter_view.md.nolink&#34;&gt;filter_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した条件を満たす要素だけを集めるビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/filter.md.nolink&#34;&gt;filter&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した条件を満たす要素だけを集めるビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;transform view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/transform_view.md.nolink&#34;&gt;transform_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した関数で各要素を変換するビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/transform.md.nolink&#34;&gt;transform&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した関数で各要素を変換するビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;take view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/take_view.md.nolink&#34;&gt;take_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;先頭から指定した個数だけ取り出すビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/take.md.nolink&#34;&gt;take&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;先頭から指定した個数だけ取り出すビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;take while view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/take_while_view.md.nolink&#34;&gt;take_while_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;先頭から指定した条件を満たす範囲を取り出すビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/take_while.md.nolink&#34;&gt;take_while&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;先頭から指定した条件を満たす範囲を取り出すビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;drop view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/drop_view.md.nolink&#34;&gt;drop_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;先頭から指定した個数だけ除外するビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/drop.md.nolink&#34;&gt;drop&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;先頭から指定した個数だけ除外するビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;drop while view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/drop_while_view.md.nolink&#34;&gt;drop_while_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;先頭から指定した条件を満たす範囲を除外するビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/drop_while.md.nolink&#34;&gt;drop_while&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;先頭から指定した条件を満たす範囲を除外するビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;join view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/join_view.md.nolink&#34;&gt;join_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ネストされた範囲を平坦にするビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/join.md.nolink&#34;&gt;join&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ネストされた範囲を平坦にするビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;split view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/split_view.md.nolink&#34;&gt;split_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲を指定したデリミタで分割するビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/split.md.nolink&#34;&gt;split&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲を指定したデリミタで分割するビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;counted view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/counted.md.nolink&#34;&gt;counted&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;イテレータを指定した数だけ進めるビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;common view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/common_view.md.nolink&#34;&gt;common_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;common_range&lt;/code&gt;にしたビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/common.md.nolink&#34;&gt;common&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;common_range&lt;/code&gt;なビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;reverse view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/reverse_view.md.nolink&#34;&gt;reverse_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;逆順のビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/reverse.md.nolink&#34;&gt;reverse&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;逆順のビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;elements view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/elements_view.md.nolink&#34;&gt;elements_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;第n要素を集めたビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/keys_view.md.nolink&#34;&gt;keys_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;第0要素を集めたビュー (alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/values_view.md.nolink&#34;&gt;values_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;第1要素を集めたビュー (alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/elements.md.nolink&#34;&gt;elements&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;elements_view&lt;/code&gt;を生成する (variable template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/keys.md.nolink&#34;&gt;keys&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;keys_view&lt;/code&gt;を生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/values.md.nolink&#34;&gt;values&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;values_view&lt;/code&gt;を生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++20&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: 13.0.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: 10.1.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ?&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: 2019 Update 10&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;関連項目&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/iterator.html&#34;&gt;&amp;lt;iterator&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/concepts.html&#34;&gt;&amp;lt;concepts&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://timsong-cpp.github.io/cppwp/n4861/ranges&#34; target=&#34;_blank&#34;&gt;N4861 24 Ranges library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://techbookfest.org/product/5134506308665344&#34; target=&#34;_blank&#34;&gt;C++20 ranges&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>bidirectional_range -- &lt;ranges&gt; 範囲コンセプトの説明を追加 #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges/bidirectional_range.html"/>
      <id>5707d006085d2e43b5e58d6ffd0519c756566a30:reference/ranges/bidirectional_range.md</id>
      <updated>2021-08-29T03:49:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/bidirectional_range.md b/reference/ranges/bidirectional_range.md
new file mode 100644
index 000000000..2ca1f8b9f
--- /dev/null
+++ b/reference/ranges/bidirectional_range.md
@@ -0,0 +1,41 @@
+# bidirectional_range
+* ranges[meta header]
+* concept[meta id-type]
+* std::ranges[meta namespace]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::ranges {
+  template&amp;lt;class T&amp;gt;
+  concept bidirectional_range = forward_range&amp;lt;T&amp;gt; &amp;amp;&amp;amp; bidirectional_iterator&amp;lt;iterator_t&amp;lt;T&amp;gt;&amp;gt;;
+}
+```
+* forward_range[link forward_range.md]
+* bidirectional_iterator[link /reference/iterator/bidirectional_iterator.md]
+* iterator_t[link iterator_t.md]
+
+## 概要
+`bidirectional_range`は、イテレータが[`bidirectional_iterator`](/reference/iterator/bidirectional_iterator.md)である範囲を表すコンセプトである。
+
+## モデル
+型`T`が`bidirectional_range`のモデルとなるのは、`T`が[`forward_range`](forward_range.md)のモデルであり、かつそのイテレータが[`bidirectional_iterator`](/reference/iterator/bidirectional_iterator.md)のモデルである場合である。
+
+## 例
+(執筆中)
+
+### 出力
+(執筆中)
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 13.0.0
+- [GCC](/implementation.md#gcc): 10.1.0
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
+
+## 参照
+- [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
+- [C++20 ranges](https://techbookfest.org/product/5134506308665344)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>borrowed_range -- &lt;ranges&gt; 範囲コンセプトの説明を追加 #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges/borrowed_range.html"/>
      <id>5707d006085d2e43b5e58d6ffd0519c756566a30:reference/ranges/borrowed_range.md</id>
      <updated>2021-08-29T03:49:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/borrowed_range.md b/reference/ranges/borrowed_range.md
new file mode 100644
index 000000000..daf2c5f14
--- /dev/null
+++ b/reference/ranges/borrowed_range.md
@@ -0,0 +1,68 @@
+# borrowed_range
+* ranges[meta header]
+* concept[meta id-type]
+* std::ranges[meta namespace]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::ranges {
+  template&amp;lt;class T&amp;gt;
+  concept borrowed_range = range&amp;lt;T&amp;gt; &amp;amp;&amp;amp; (is_lvalue_reference_v&amp;lt;T&amp;gt; || enable_borrowed_range&amp;lt;remove_cvref_t&amp;lt;T&amp;gt;&amp;gt;);
+}
+```
+* range[link range.md]
+* is_lvalue_reference_v[link /reference/type_traits/is_lvalue_reference.md]
+* enable_borrowed_range[link enable_borrowed_range.md]
+* remove_cvref_t[link /reference/type_traits/remove_cvref.md]
+
+## 概要
+`borrowed_range`は、値を所有しない範囲を表すコンセプトである。範囲オブジェクトの左辺値参照は`borrowed_range`である。
+
+参照以外の型が値を所有するか否かは構文要件で定義できないため、変数テンプレート[`enable_borrowed_range`](enable_borrowed_range.md)を特殊化して`true`にすることで`borrowed_range`を満たすようにする。
+
+## モデル
+`decltype((t))`が`T&amp;amp;`であるような式`t`があるとする。`T`が`borrowed_range`のモデルとなるのは、`t`が示すオブジェクトの寿命とそこから取得したイテレータの有効性が結びついていない場合である。
+
+## 備考
+`borrowed_range`な範囲のイテレータの有効性が範囲の寿命と結びついていないため、そのような範囲を値で受け取ってイテレータを値で返すような関数がダングリングイテレータの心配なく利用できる。
+
+## 例
+```cpp example
+#include &amp;lt;ranges&amp;gt;
+#include &amp;lt;string_view&amp;gt;
+#include &amp;lt;span&amp;gt;
+#include &amp;lt;vector&amp;gt;
+
+int main()
+{
+  // vectorは要素を所有しているので、borrowed_rangeではない
+  static_assert(!std::ranges::borrowed_range&amp;lt;std::vector&amp;lt;int&amp;gt;&amp;gt;);
+
+  // vectorの参照は要素を所有していないので、borrowed_rangeである
+  static_assert(std::ranges::borrowed_range&amp;lt;std::vector&amp;lt;int&amp;gt;&amp;amp;&amp;gt;);
+
+  // string_viewは文字列を所有していないので、borrowed_rangeである
+  static_assert(std::ranges::borrowed_range&amp;lt;std::string_view&amp;gt;);
+
+  // spanは文字列を所有していないので、borrowed_rangeである
+  static_assert(std::ranges::borrowed_range&amp;lt;std::span&amp;lt;int&amp;gt;&amp;gt;);
+}
+```
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 13.0.0
+- [GCC](/implementation.md#gcc): 10.1.0
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
+
+## 参照
+- [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
+- [C++20 ranges](https://techbookfest.org/product/5134506308665344)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>common_range -- &lt;ranges&gt; 範囲コンセプトの説明を追加 #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges/common_range.html"/>
      <id>5707d006085d2e43b5e58d6ffd0519c756566a30:reference/ranges/common_range.md</id>
      <updated>2021-08-29T03:49:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/common_range.md b/reference/ranges/common_range.md
new file mode 100644
index 000000000..1843eb305
--- /dev/null
+++ b/reference/ranges/common_range.md
@@ -0,0 +1,44 @@
+# common_range
+* ranges[meta header]
+* concept[meta id-type]
+* std::ranges[meta namespace]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::ranges {
+  template&amp;lt;class T&amp;gt;
+  concept common_range = range&amp;lt;T&amp;gt; &amp;amp;&amp;amp; same_as&amp;lt;iterator_t&amp;lt;T&amp;gt;, sentinel_t&amp;lt;T&amp;gt;&amp;gt;;
+}
+```
+* range[link range.md]
+* same_as[link /reference/concepts/same_as.md]
+* iterator_t[link iterator_t.md]
+* sentinel_t[link sentinel_t.md]
+
+## 概要
+`common_range`は、イテレータと番兵の型が等しい範囲を表すコンセプトである。
+
+標準のコンテナはすべて`common_range`のモデルである。
+
+## モデル
+型`T`が`common_range`のモデルとなるのは、`T`が[`range`](range.md)のモデルであり、`T`から取得した番兵とイテレータの型が等しい場合である。
+
+## 例
+(執筆中)
+
+### 出力
+(執筆中)
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 13.0.0
+- [GCC](/implementation.md#gcc): 10.1.0
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
+
+## 参照
+- [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
+- [C++20 ranges](https://techbookfest.org/product/5134506308665344)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>contiguous_range -- &lt;ranges&gt; 範囲コンセプトの説明を追加 #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges/contiguous_range.html"/>
      <id>5707d006085d2e43b5e58d6ffd0519c756566a30:reference/ranges/contiguous_range.md</id>
      <updated>2021-08-29T03:49:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/contiguous_range.md b/reference/ranges/contiguous_range.md
new file mode 100644
index 000000000..f73067664
--- /dev/null
+++ b/reference/ranges/contiguous_range.md
@@ -0,0 +1,69 @@
+# contiguous_range
+* ranges[meta header]
+* concept[meta id-type]
+* std::ranges[meta namespace]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::ranges {
+  template&amp;lt;class T&amp;gt;
+  concept contiguous_range = random_access_range&amp;lt;T&amp;gt; &amp;amp;&amp;amp; contiguous_iterator&amp;lt;iterator_t&amp;lt;T&amp;gt;&amp;gt; &amp;amp;&amp;amp;
+    requires(T&amp;amp; t) {
+      { ranges::data(t) } -&amp;gt; same_as&amp;lt;add_pointer_t&amp;lt;range_reference_t&amp;lt;T&amp;gt;&amp;gt;&amp;gt;;
+    };
+}
+```
+* random_access_range[link random_access_range.md]
+* contiguous_iterator[link /reference/iterator/contiguous_iterator.md]
+* iterator_t[link iterator_t.md]
+* ranges::data[link data.md]
+* same_as[link /reference/concepts/same_as.md]
+* add_pointer_t[link /reference/type_traits/add_pointer.md]
+* range_reference_t[link range_reference_t.md]
+
+## 概要
+`contiguous_range`は、イテレータが[`contiguous_iterator`](/reference/iterator/contiguous_iterator.md)である範囲を表すコンセプトである。
+
+`contiguous_range`である範囲は、要素がメモリ上で連続して配置されており、[`ranges::data`](data.md)や[`ranges::cdata`](cdata.md)で要素のポインタを取得できる。
+
+## モデル
+`decltype((t))`が`T&amp;amp;`であるような式`t`があるとする。
+`T`が`contiguous_range`のモデルとなるのは、[`to_address`](/reference/memory/to_address.md)`(`[`ranges::begin`](begin.md)`(t)) == `[`ranges::data`](data.md)`(t)`が`true`となる場合である。
+
+## 例
+```cpp example
+#include &amp;lt;ranges&amp;gt;
+#include &amp;lt;list&amp;gt;
+#include &amp;lt;set&amp;gt;
+#include &amp;lt;vector&amp;gt;
+
+int main()
+{
+  // vectorはcontiguous_range
+  static_assert(std::ranges::contiguous_range&amp;lt;std::vector&amp;lt;int&amp;gt;&amp;gt;);
+
+  // listはcontiguous_rangeではない
+  static_assert(!std::ranges::contiguous_range&amp;lt;std::list&amp;lt;int&amp;gt;&amp;gt;);
+
+  // setはcontiguous_rangeではない
+  static_assert(!std::ranges::contiguous_range&amp;lt;std::set&amp;lt;int&amp;gt;&amp;gt;);
+}
+```
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 13.0.0
+- [GCC](/implementation.md#gcc): 10.1.0
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
+
+## 参照
+- [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
+- [C++20 ranges](https://techbookfest.org/product/5134506308665344)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>disable_sized_range -- &lt;ranges&gt; 範囲コンセプトの説明を追加 #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges/disable_sized_range.html"/>
      <id>5707d006085d2e43b5e58d6ffd0519c756566a30:reference/ranges/disable_sized_range.md</id>
      <updated>2021-08-29T03:49:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/disable_sized_range.md b/reference/ranges/disable_sized_range.md
index 42ba0c29a..22ce61603 100644
--- a/reference/ranges/disable_sized_range.md
+++ b/reference/ranges/disable_sized_range.md
@@ -13,9 +13,11 @@ namespace std::ranges {
 
 ## 概要
 
-`disable_sized_range`は、[`sized_range`](sized_range.md.nolink)を無効化するカスタマイゼーションポイントである。
+`disable_sized_range`は、[`sized_range`](sized_range.md)を無効化するカスタマイゼーションポイントである。
 
-[`sized_range`](sized_range.md.nolink)コンセプトの構文要件を満たすが意味論要件を満たさないような型`T`があるとき、`disable_sized_range&amp;lt;T&amp;gt;`が`true`となるように特殊化することで[`sized_range`](sized_range.md.nolink)を無効化する。
+[`sized_range`](sized_range.md)コンセプトの構文要件を満たすが意味論要件を満たさないような型`T`があるとき、`disable_sized_range&amp;lt;T&amp;gt;`が`true`となるように特殊化することで[`ranges::size`](size.md)の引数にできないようにして、[`sized_range`](sized_range.md)を無効化する。
+
+具体的には、大きさを求めることはできるが、その計算量が償却定数にならないような範囲が該当する。
 
 ## 例
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>enable_borrowed_range -- &lt;ranges&gt; 範囲コンセプトの説明を追加 #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges/enable_borrowed_range.html"/>
      <id>5707d006085d2e43b5e58d6ffd0519c756566a30:reference/ranges/enable_borrowed_range.md</id>
      <updated>2021-08-29T03:49:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/enable_borrowed_range.md b/reference/ranges/enable_borrowed_range.md
index 6de9d5c69..1612a3e8e 100644
--- a/reference/ranges/enable_borrowed_range.md
+++ b/reference/ranges/enable_borrowed_range.md
@@ -13,9 +13,9 @@ namespace std::ranges {
 
 ## 概要
 
-`enable_borrowed_range&amp;lt;T&amp;gt;`が`true`であることは、`T`が[`borrowed_range`](borrowed_range.md.nolink)であるための必要条件である。
+`enable_borrowed_range&amp;lt;T&amp;gt;`が`true`であることは、`T`が[`borrowed_range`](borrowed_range.md)であるための必要条件である。
 
-[`borrowed_range`](borrowed_range.md.nolink)コンセプトの要件は意味論要件がメインなため、`enable_borrowed_range`を特殊化することで、明示的に`borrowed_range`であることを示すようになっている。
+[`borrowed_range`](borrowed_range.md)コンセプトの要件は意味論要件がメインなため、`enable_borrowed_range`を特殊化することで、明示的に`borrowed_range`であることを示すようになっている。
 
 ## 例
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>enable_view -- &lt;ranges&gt; 範囲コンセプトの説明を追加 #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges/enable_view.html"/>
      <id>5707d006085d2e43b5e58d6ffd0519c756566a30:reference/ranges/enable_view.md</id>
      <updated>2021-08-29T03:49:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/enable_view.md b/reference/ranges/enable_view.md
index 018bb20df..3aa75e16a 100644
--- a/reference/ranges/enable_view.md
+++ b/reference/ranges/enable_view.md
@@ -15,9 +15,9 @@ namespace std::ranges {
 
 ## 概要
 
-`enable_view&amp;lt;T&amp;gt;`が`true`であることは、`T`が[`view`](view.md.nolink)であるための必要条件である。
+`enable_view&amp;lt;T&amp;gt;`が`true`であることは、`T`が[`view`](view.md)であるための必要条件である。
 
-[`view`](view.md.nolink)コンセプトの要件は意味論要件がメインなため、[`view_base`](view_base.md)を基底クラスにするか、`enable_view`を特殊化することで、明示的に`view`であることを示すようになっている。
+[`view`](view.md)コンセプトの要件は意味論要件がメインなため、[`view_base`](view_base.md)を基底クラスにするか、`enable_view`を特殊化することで、明示的に`view`であることを示すようになっている。
 
 ## 例
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>forward_range -- &lt;ranges&gt; 範囲コンセプトの説明を追加 #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges/forward_range.html"/>
      <id>5707d006085d2e43b5e58d6ffd0519c756566a30:reference/ranges/forward_range.md</id>
      <updated>2021-08-29T03:49:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/forward_range.md b/reference/ranges/forward_range.md
new file mode 100644
index 000000000..583c9aa75
--- /dev/null
+++ b/reference/ranges/forward_range.md
@@ -0,0 +1,41 @@
+# forward_range
+* ranges[meta header]
+* concept[meta id-type]
+* std::ranges[meta namespace]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::ranges {
+  template&amp;lt;class R, class T&amp;gt;
+  concept forward_range = input_range&amp;lt;R&amp;gt; &amp;amp;&amp;amp; forward_iterator&amp;lt;iterator_t&amp;lt;R&amp;gt;, T&amp;gt;;
+}
+```
+* input_range[link input_range.md]
+* forward_iterator[link /reference/iterator/forward_iterator.md]
+* iterator_t[link iterator_t.md]
+
+## 概要
+`forward_range`は、イテレータが[`forward_iterator`](/reference/iterator/forward_iterator.md)である範囲を表すコンセプトである。
+
+## モデル
+型`T`が`forward_range`のモデルとなるのは、`T`が[`input_range`](input_range.md)のモデルであり、かつそのイテレータが[`forward_iterator`](/reference/iterator/forward_iterator.md)のモデルである場合である。
+
+## 例
+(執筆中)
+
+### 出力
+(執筆中)
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 13.0.0
+- [GCC](/implementation.md#gcc): 10.1.0
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
+
+## 参照
+- [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
+- [C++20 ranges](https://techbookfest.org/product/5134506308665344)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>input_range -- &lt;ranges&gt; 範囲コンセプトの説明を追加 #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges/input_range.html"/>
      <id>5707d006085d2e43b5e58d6ffd0519c756566a30:reference/ranges/input_range.md</id>
      <updated>2021-08-29T03:49:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/input_range.md b/reference/ranges/input_range.md
new file mode 100644
index 000000000..9ceb159c9
--- /dev/null
+++ b/reference/ranges/input_range.md
@@ -0,0 +1,41 @@
+# input_range
+* ranges[meta header]
+* concept[meta id-type]
+* std::ranges[meta namespace]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::ranges {
+  template&amp;lt;class T&amp;gt;
+  concept input_range = range&amp;lt;T&amp;gt; &amp;amp;&amp;amp; input_iterator&amp;lt;iterator_t&amp;lt;T&amp;gt;&amp;gt;;
+}
+```
+* range[link range.md]
+* input_iterator[link /reference/iterator/input_iterator.md]
+* iterator_t[link iterator_t.md]
+
+## 概要
+`input_range`は、イテレータが[`input_iterator`](/reference/iterator/input_iterator.md)である範囲を表すコンセプトである。
+
+## モデル
+型`T`が`input_range`のモデルとなるのは、`T`が[`range`](range.md)のモデルであり、かつそのイテレータが[`input_iterator`](/reference/iterator/input_iterator.md)のモデルである場合である。
+
+## 例
+(執筆中)
+
+### 出力
+(執筆中)
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 13.0.0
+- [GCC](/implementation.md#gcc): 10.1.0
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
+
+## 参照
+- [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
+- [C++20 ranges](https://techbookfest.org/product/5134506308665344)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>output_range -- &lt;ranges&gt; 範囲コンセプトの説明を追加 #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges/output_range.html"/>
      <id>5707d006085d2e43b5e58d6ffd0519c756566a30:reference/ranges/output_range.md</id>
      <updated>2021-08-29T03:49:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/output_range.md b/reference/ranges/output_range.md
new file mode 100644
index 000000000..51c21a40c
--- /dev/null
+++ b/reference/ranges/output_range.md
@@ -0,0 +1,41 @@
+# output_range
+* ranges[meta header]
+* concept[meta id-type]
+* std::ranges[meta namespace]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::ranges {
+  template&amp;lt;class R, class T&amp;gt;
+  concept output_range = range&amp;lt;R&amp;gt; &amp;amp;&amp;amp; output_iterator&amp;lt;iterator_t&amp;lt;R&amp;gt;, T&amp;gt;;
+}
+```
+* range[link range.md]
+* output_iterator[link /reference/iterator/output_iterator.md]
+* iterator_t[link iterator_t.md]
+
+## 概要
+`output_range`は、イテレータが[`output_iterator`](/reference/iterator/output_iterator.md)である範囲を表すコンセプトである。
+
+## モデル
+型`T`が`output_range`のモデルとなるのは、`T`が[`range`](range.md)のモデルであり、かつそのイテレータが[`output_iterator`](/reference/iterator/output_iterator.md)のモデルである場合である。
+
+## 例
+(執筆中)
+
+### 出力
+(執筆中)
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 13.0.0
+- [GCC](/implementation.md#gcc): 10.1.0
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
+
+## 参照
+- [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
+- [C++20 ranges](https://techbookfest.org/product/5134506308665344)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>random_access_range -- &lt;ranges&gt; 範囲コンセプトの説明を追加 #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges/random_access_range.html"/>
      <id>5707d006085d2e43b5e58d6ffd0519c756566a30:reference/ranges/random_access_range.md</id>
      <updated>2021-08-29T03:49:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/random_access_range.md b/reference/ranges/random_access_range.md
new file mode 100644
index 000000000..210b72848
--- /dev/null
+++ b/reference/ranges/random_access_range.md
@@ -0,0 +1,41 @@
+# random_access_range
+* ranges[meta header]
+* concept[meta id-type]
+* std::ranges[meta namespace]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::ranges {
+  template&amp;lt;class T&amp;gt;
+  concept random_access_range = bidirectional_range&amp;lt;T&amp;gt; &amp;amp;&amp;amp; random_access_iterator&amp;lt;iterator_t&amp;lt;T&amp;gt;&amp;gt;;
+}
+```
+* bidirectional_range[link bidirectional_range.md]
+* random_access_iterator[link /reference/iterator/random_access_iterator.md]
+* iterator_t[link iterator_t.md]
+
+## 概要
+`random_access_range`は、イテレータが[`random_access_iterator`](/reference/iterator/random_access_iterator.md)である範囲を表すコンセプトである。
+
+## モデル
+型`T`が`random_access_range`のモデルとなるのは、`T`が[`bidirectional_range`](bidirectional_range.md)のモデルであり、かつそのイテレータが[`random_access_iterator`](/reference/iterator/random_access_iterator.md)のモデルである場合である。
+
+## 例
+(執筆中)
+
+### 出力
+(執筆中)
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 13.0.0
+- [GCC](/implementation.md#gcc): 10.1.0
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
+
+## 参照
+- [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
+- [C++20 ranges](https://techbookfest.org/product/5134506308665344)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>range -- &lt;ranges&gt; 範囲コンセプトの説明を追加 #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges/range.html"/>
      <id>5707d006085d2e43b5e58d6ffd0519c756566a30:reference/ranges/range.md</id>
      <updated>2021-08-29T03:49:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/range.md b/reference/ranges/range.md
new file mode 100644
index 000000000..7f18050c3
--- /dev/null
+++ b/reference/ranges/range.md
@@ -0,0 +1,69 @@
+# range
+* ranges[meta header]
+* concept[meta id-type]
+* std::ranges[meta namespace]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::ranges {
+  template&amp;lt;class T&amp;gt;
+  concept range = requires(T&amp;amp; t) {
+    ranges::begin(t);
+    ranges::end(t);
+  };
+}
+```
+* ranges::begin[link begin.md]
+* ranges::end[link end.md]
+
+## 概要
+`range`は、型`T`が(範囲ライブラリの扱う対象という意味においての)範囲であることを表すコンセプトである。
+
+## モデル
+`decltype((t))`が`T&amp;amp;`であるような式`t`があるとする。`T`が`range`のモデルとなるのは、以下の条件をすべて満たす場合である。
+
+1. \[[`ranges::begin`](begin.md)`(t)`, [`ranges::end`](end.md)`(t)`) が範囲を表す。
+2. [`ranges::begin`](begin.md)`(t)`と[`ranges::end`](end.md)`(t)`は共に償却定数時間で値を返し、範囲を変更しない。
+3. [`ranges::begin`](begin.md)`(t)`が[`forward_iterator`](/reference/iterator/forward_iterator.md)のモデルであるならば、[`ranges::begin`](begin.md)`(t)`は等しさを保持する（equality‑preserving）。
+
+式が等しさを保持する（equality‑preserving）とは、同じ入力に対しては常に同じ結果となることをいう。
+
+2番目の要件では、要件が償却定数時間であることにより、イテレータを取得するタイミングで初めて要素を生成するような実装が許可される。
+
+## 備考
+[`ranges::begin`](begin.md)`(t)`と[`ranges::end`](end.md)`(t)`が[`forward_iterator`](/reference/iterator/forward_iterator.md)を返し、等しさを保持するならば、その範囲を何度もアルゴリズム関数に渡したり、イテレータを繰り返し取得して使ったりしてもよい。
+
+イテレータが[`forward_iterator`](/reference/iterator/forward_iterator.md)のモデルではない場合は、[`ranges::begin`](begin.md)でイテレータを繰り返し取得したときに同じオブジェクトが返る保証はなく、結果が一意に定まるともいえない。そのような場合、[`ranges::begin`](begin.md)の呼び出しは範囲1つあたり1回に留めなければならない。
+
+## 例
+```cpp example
+#include &amp;lt;ranges&amp;gt;
+#include &amp;lt;vector&amp;gt;
+
+int main()
+{
+  static_assert(std::ranges::range&amp;lt;std::vector&amp;lt;int&amp;gt;&amp;gt;);
+  static_assert(std::ranges::range&amp;lt;int[3]&amp;gt;);
+  static_assert(!std::ranges::range&amp;lt;double&amp;gt;);
+  static_assert(!std::ranges::range&amp;lt;const char*&amp;gt;);
+  static_assert(!std::ranges::range&amp;lt;int[]&amp;gt;);
+}
+```
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 13.0.0
+- [GCC](/implementation.md#gcc): 10.1.0
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
+
+## 参照
+- [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
+- [C++20 ranges](https://techbookfest.org/product/5134506308665344)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sized_range -- &lt;ranges&gt; 範囲コンセプトの説明を追加 #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges/sized_range.html"/>
      <id>5707d006085d2e43b5e58d6ffd0519c756566a30:reference/ranges/sized_range.md</id>
      <updated>2021-08-29T03:49:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/sized_range.md b/reference/ranges/sized_range.md
new file mode 100644
index 000000000..c0cedf69b
--- /dev/null
+++ b/reference/ranges/sized_range.md
@@ -0,0 +1,67 @@
+# sized_range
+* ranges[meta header]
+* concept[meta id-type]
+* std::ranges[meta namespace]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::ranges {
+  template&amp;lt;class T&amp;gt;
+  concept sized_range = range&amp;lt;T&amp;gt; &amp;amp;&amp;amp; requires(T&amp;amp; t) { ranges::size(t); };
+}
+```
+* range[link range.md]
+* ranges::size[link size.md]
+
+## 概要
+`sized_range`は、範囲の大きさを償却定数時間で求めることができる範囲を表すコンセプトである。
+
+`sized_range`な範囲からは[`ranges::size`](size.md)で大きさを取得できる。
+
+## モデル
+型が[`remove_reference_t`](/reference/type_traits/remove_reference.md)`&amp;lt;T&amp;gt;`であるようなlvalue`t`があるとする。`T`が`sized_range`のモデルとなるのは、以下の条件をすべて満たす場合である。
+
+1. [`ranges::size`](size.md)`(t)`が償却定数時間で実行でき、[`ranges::distance`](/reference/iterator/ranges_distance.md)`(t)`と等しく、`t`を変更しない。
+2. もし[`iterator_t`](iterator_t.md)`&amp;lt;T&amp;gt;`が[`forward_iterator`](/reference/iterator/forward_iterator.md)のモデルであれば、[`ranges::size`](size.md)`(t)`は[`ranges::begin`](begin.md)`(t)`の評価によらず一意に定まる。
+
+構文要件では、`ranges::size(t)`という呼び出しが可能であることしか要求されない。これは例えば`T`のメンバ関数`size()`が整数を返せば満たしてしまうが、その計算量が償却定数でない場合は`sized_range`のモデルとはならないので、[`disable_sized_range`](disable_sized_range.md)を`true`に特殊化して[`ranges::size`](size.md)`(t)`を無効化する必要がある。
+
+2番目の要件は、イテレータが[`input_iterator`](/reference/iterator/input_iterator.md)または[`output_iterator`](/reference/iterator/output_iterator.md)であるときは、[`ranges::begin`](begin.md)を呼び出すまでは大きさが定まらない、といった依存関係が許可されることを意味している。
+
+## 例
+```cpp example
+#include &amp;lt;ranges&amp;gt;
+#include &amp;lt;list&amp;gt;
+#include &amp;lt;forward_list&amp;gt;
+#include &amp;lt;vector&amp;gt;
+
+int main()
+{
+  // vectorはsized_range
+  static_assert(std::ranges::sized_range&amp;lt;std::vector&amp;lt;int&amp;gt;&amp;gt;);
+
+  // listもsized_range
+  static_assert(std::ranges::sized_range&amp;lt;std::list&amp;lt;int&amp;gt;&amp;gt;);
+
+  // forward_listはsized_rangeではない
+  static_assert(!std::ranges::sized_range&amp;lt;std::forward_list&amp;lt;int&amp;gt;&amp;gt;);
+}
+```
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 13.0.0
+- [GCC](/implementation.md#gcc): 10.1.0
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
+
+## 参照
+- [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
+- [C++20 ranges](https://techbookfest.org/product/5134506308665344)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>view -- &lt;ranges&gt; 範囲コンセプトの説明を追加 #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges/view.html"/>
      <id>5707d006085d2e43b5e58d6ffd0519c756566a30:reference/ranges/view.md</id>
      <updated>2021-08-29T03:49:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/view.md b/reference/ranges/view.md
new file mode 100644
index 000000000..42ae3b9ad
--- /dev/null
+++ b/reference/ranges/view.md
@@ -0,0 +1,71 @@
+# view
+* ranges[meta header]
+* concept[meta id-type]
+* std::ranges[meta namespace]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::ranges {
+  template&amp;lt;class T&amp;gt;
+  concept view = range&amp;lt;T&amp;gt; &amp;amp;&amp;amp; movable&amp;lt;T&amp;gt; &amp;amp;&amp;amp; default_initializable&amp;lt;T&amp;gt; &amp;amp;&amp;amp; enable_view&amp;lt;T&amp;gt;;
+}
+```
+* range[link range.md]
+* movable[link /reference/concepts/movable.md]
+* default_initializable[link /reference/concepts/default_initializable.md]
+* enable_view[link enable_view.md]
+
+## 概要
+`view`は、ビューを表すコンセプトである。`view`の要件は意味論要件がメインなので、[`enable_view`](enable_view.md)を特殊化して有効にしない限り`view`とはならない。
+
+## モデル
+型`T`が`view`のモデルとなるのは、以下の条件をすべて満たす場合である。
+
+1. `T`はO(1)で構築できる
+2. `T`はO(1)でムーブ代入できる
+3. `T`はO(1)で破棄できる
+4. [`copy_constructible`](/reference/concepts/copy_constructible.md)`&amp;lt;T&amp;gt;`が`false`、または`T`のコピーコンストラクタがO(1)
+5. [`copyable`](/reference/concepts/copyable.md)`&amp;lt;T&amp;gt;`が`false`、または`T`のコピー代入演算子がO(1)
+
+`view`と[`borrowed_range`](borrowed_range.md)には直接の包含関係はないが、要素を所有していると一般にこれらの要件は満たせないため、[`borrowed_range`](borrowed_range.md)でもあると考えてよい。
+
+## 備考
+`view`を自作する場合、[`view_interface`](view_interface.md.nolink)を基底クラスにすると便利である。
+
+## 例
+```cpp example
+#include &amp;lt;ranges&amp;gt;
+#include &amp;lt;string_view&amp;gt;
+#include &amp;lt;span&amp;gt;
+#include &amp;lt;vector&amp;gt;
+
+int main()
+{
+  // vectorはviewではない
+  static_assert(!std::ranges::view&amp;lt;std::vector&amp;lt;int&amp;gt;&amp;gt;);
+
+  // string_viewはview
+  static_assert(std::ranges::view&amp;lt;std::string_view&amp;gt;);
+
+  // spanはview
+  static_assert(std::ranges::view&amp;lt;std::span&amp;lt;int&amp;gt;&amp;gt;);
+}
+```
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 13.0.0
+- [GCC](/implementation.md#gcc): 10.1.0
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
+
+## 参照
+- [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
+- [C++20 ranges](https://techbookfest.org/product/5134506308665344)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>view_base -- &lt;ranges&gt; 範囲コンセプトの説明を追加 #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges/view_base.html"/>
      <id>5707d006085d2e43b5e58d6ffd0519c756566a30:reference/ranges/view_base.md</id>
      <updated>2021-08-29T03:49:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/view_base.md b/reference/ranges/view_base.md
index a7c5f74cb..7484a1619 100644
--- a/reference/ranges/view_base.md
+++ b/reference/ranges/view_base.md
@@ -12,7 +12,7 @@ namespace std::ranges {
 
 ## 概要
 
-`view_base`は、基底クラスにすることで[`view`](view.md.nolink)コンセプトの構文要件の1つである[`enable_view`](enable_view.md)を満たすタグ型である。
+`view_base`は、基底クラスにすることで[`view`](view.md)コンセプトの構文要件の1つである[`enable_view`](enable_view.md)を満たすタグ型である。
 
 ## 例
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>viewable_range -- &lt;ranges&gt; 範囲コンセプトの説明を追加 #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges/viewable_range.html"/>
      <id>5707d006085d2e43b5e58d6ffd0519c756566a30:reference/ranges/viewable_range.md</id>
      <updated>2021-08-29T03:49:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/viewable_range.md b/reference/ranges/viewable_range.md
new file mode 100644
index 000000000..123046bfa
--- /dev/null
+++ b/reference/ranges/viewable_range.md
@@ -0,0 +1,46 @@
+# viewable_range
+* ranges[meta header]
+* concept[meta id-type]
+* std::ranges[meta namespace]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::ranges {
+  template&amp;lt;class T&amp;gt;
+  concept viewable_range = range&amp;lt;T&amp;gt; &amp;amp;&amp;amp; (borrowed_range&amp;lt;T&amp;gt; || view&amp;lt;remove_cvref_t&amp;lt;T&amp;gt;&amp;gt;);
+}
+```
+* range[link range.md]
+* borrowed_range[link borrowed_range.md]
+* view[link view.md]
+* remove_cvref_t[link /reference/type_traits/remove_cvref.md]
+
+## 概要
+`viewable_range`は、安全に[`view`](view.md)へ変換できる範囲を表すコンセプトである。
+
+範囲アダプタを適用するには、`viewable_range`である必要がある。
+
+## モデル
+型`T`が`viewable_range`のモデルとなるのは、`T`が[`range`](range.md)のモデルであり、かつ`T`が[`borrowed_range`](borrowed_range.md)のモデルであるか、[`remove_cvref_t`](/reference/type_traits/remove_cvref.md)`&amp;lt;T&amp;gt;`が[`view`](view.md)のモデルである場合である。
+
+[`borrowed_range`](borrowed_range.md)または[`view`](view.md)ではない[`range`](range.md)の右辺値は、`viewable_range`のモデルにはならない。
+
+## 例
+(執筆中)
+
+### 出力
+(執筆中)
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 13.0.0
+- [GCC](/implementation.md#gcc): 10.1.0
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
+
+## 参照
+- [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
+- [C++20 ranges](https://techbookfest.org/product/5134506308665344)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- &lt;ranges&gt; 範囲コンセプトの説明を追加 #713</title>
      <link href="https://cpprefjp.github.io/reference/string_view/basic_string_view/op_constructor.html"/>
      <id>5707d006085d2e43b5e58d6ffd0519c756566a30:reference/string_view/basic_string_view/op_constructor.md</id>
      <updated>2021-08-29T03:49:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string_view/basic_string_view/op_constructor.md b/reference/string_view/basic_string_view/op_constructor.md
index 553ffc24a..300dc8038 100644
--- a/reference/string_view/basic_string_view/op_constructor.md
+++ b/reference/string_view/basic_string_view/op_constructor.md
@@ -38,7 +38,7 @@ constexpr basic_string_view(R&amp;amp;&amp;amp; r);                            // (7) C++23
     - [`is_same_v`](/reference/type_traits/is_same.md)`&amp;lt;`[`iter_value_t`](/reference/iterator/iter_value_t.md)`&amp;lt;It&amp;gt;, charT&amp;gt;`が`true`であること
     - [`is_convertible_v`](/reference/type_traits/is_convertible.md)`&amp;lt;End, size_type&amp;gt;`が`false`であること
 - (7) :
-    - `R`はコンセプト[`ranges::contiguous_range`](/reference/ranges/contiguous_range.md.nolink)および[`ranges::sized_range`](/reference/ranges/sized_range.md.nolink)のモデルであること
+    - `R`はコンセプト[`ranges::contiguous_range`](/reference/ranges/contiguous_range.md)および[`ranges::sized_range`](/reference/ranges/sized_range.md)のモデルであること
     - [`is_same_v`](/reference/type_traits/is_same.md)`&amp;lt;`[`ranges::range_value_t`](/reference/ranges/range_value_t.md)`&amp;lt;R&amp;gt;, charT&amp;gt;`が`true`であること
     - [`is_convertible_v`](/reference/type_traits/is_convertible.md)`&amp;lt;R, const charT*&amp;gt;`が`false`であること
     - `d`を[`remove_cvref_t`](/reference/type_traits/remove_cvref.md)`&amp;lt;R&amp;gt;`型の左辺値としたとき、`d.operator ::std::basic_string_view&amp;lt;charT, traits&amp;gt;()`が妥当な式ではないこと
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>推論補助 -- &lt;ranges&gt; 範囲コンセプトの説明を追加 #713</title>
      <link href="https://cpprefjp.github.io/reference/string_view/basic_string_view/op_deduction_guide.html"/>
      <id>5707d006085d2e43b5e58d6ffd0519c756566a30:reference/string_view/basic_string_view/op_deduction_guide.md</id>
      <updated>2021-08-29T03:49:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string_view/basic_string_view/op_deduction_guide.md b/reference/string_view/basic_string_view/op_deduction_guide.md
index faee7cc36..2e4afdd5b 100644
--- a/reference/string_view/basic_string_view/op_deduction_guide.md
+++ b/reference/string_view/basic_string_view/op_deduction_guide.md
@@ -27,7 +27,7 @@ namespace std {
     - `It`は[`contiguous_iterator`](/reference/iterator/contiguous_iterator.md)の要件を満たすこと
     - `End`は[`sized_sentinel_for`](/reference/iterator/sized_sentinel_for.md)`&amp;lt;It&amp;gt;`の要件を満たすこと
 - (2) :
-    - `R`は[`ranges::contiguous_range`](/reference/ranges/contiguous_range.md.nolink)の要件を満たすこと
+    - `R`は[`ranges::contiguous_range`](/reference/ranges/contiguous_range.md)の要件を満たすこと
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>range_rvalue_reference_t -- range_rvalue_reference_t: fix example</title>
      <link href="https://cpprefjp.github.io/reference/ranges/range_rvalue_reference_t.html"/>
      <id>522e2bfc1977af32a85899f906e37dea92d4877c:reference/ranges/range_rvalue_reference_t.md</id>
      <updated>2021-08-28T09:49:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/range_rvalue_reference_t.md b/reference/ranges/range_rvalue_reference_t.md
index 75b16a623..87d946229 100644
--- a/reference/ranges/range_rvalue_reference_t.md
+++ b/reference/ranges/range_rvalue_reference_t.md
@@ -23,7 +23,7 @@ namespace std::ranges {
 #include &amp;lt;vector&amp;gt;
 
 int main() {
-  static_assert(std::same_as&amp;lt;std::ranges::range_rvalue_reference_t&amp;lt;std::vector&amp;lt;int&amp;gt;&amp;gt;, int&amp;amp;&amp;gt;);
+  static_assert(std::same_as&amp;lt;std::ranges::range_rvalue_reference_t&amp;lt;std::vector&amp;lt;int&amp;gt;&amp;gt;, int&amp;amp;&amp;amp;&amp;gt;);
 }
 ```
 * std::ranges::range_rvalue_reference_t[color ff0000]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>range_rvalue_reference_t -- Update range_rvalue_reference_t.md</title>
      <link href="https://cpprefjp.github.io/reference/ranges/range_rvalue_reference_t.html"/>
      <id>2545603ac121b9ca8c88f4b1fab80072d2be3761:reference/ranges/range_rvalue_reference_t.md</id>
      <updated>2021-08-28T00:57:59+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/range_rvalue_reference_t.md b/reference/ranges/range_rvalue_reference_t.md
index 2e18391b8..75b16a623 100644
--- a/reference/ranges/range_rvalue_reference_t.md
+++ b/reference/ranges/range_rvalue_reference_t.md
@@ -15,7 +15,7 @@ namespace std::ranges {
 
 ## 概要
 
-任意の範囲型`R`から、その範囲の要素の参照型を取得する。
+任意の範囲型`R`から、その範囲の要素の右辺値参照型を取得する。
 
 ## 例
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>data -- decay-copyへのリンク修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/data.html"/>
      <id>8538fc65bd5066642d76c8b561bb3c95a62c6d71:reference/ranges/data.md</id>
      <updated>2021-08-28T00:55:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/data.md b/reference/ranges/data.md
index 5653dcbce..9cea467c9 100644
--- a/reference/ranges/data.md
+++ b/reference/ranges/data.md
@@ -20,7 +20,7 @@ namespace std::ranges {
 
 1. `E`がrvalueかつ[`enable_borrowed_range`](enable_borrowed_range.md)`&amp;lt;`[`remove_cv_t`](/reference/type_traits/remove_cv.md)`&amp;lt;T&amp;gt;&amp;gt;`が`false`であれば、呼び出しは不適格。
 2. `T`が配列型かつ[`remove_all_extents_t`](/reference/type_traits/remove_all_extents.md)`&amp;lt;T&amp;gt;`が不完全型であれば、呼び出しは不適格(診断不要)。
-3. `decay-copy(t.data())`が有効な式でその型がオブジェクトへのポインタであれば、`decay-copy(t.data())`と等しい。
+3. [`decay-copy`](/reference/exposition-only/decay-copy.md)`(t.data())`が有効な式でその型がオブジェクトへのポインタであれば、[`decay-copy`](/reference/exposition-only/decay-copy.md)`(t.data())`と等しい。
 4. [`ranges::begin`](begin.md)`(t)`が有効な式で、その型が[`contiguous_iterator`](/reference/iterator/contiguous_iterator.md)のモデルであれば、[`to_address`](/reference/memory/to_address.md)`(`[`ranges::begin`](begin.md)`(E))`と等しい。
 
 どれにも当てはまらないとき、呼び出しは不適格。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>rend -- decay-copyへのリンク修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/rend.html"/>
      <id>8538fc65bd5066642d76c8b561bb3c95a62c6d71:reference/ranges/rend.md</id>
      <updated>2021-08-28T00:55:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/rend.md b/reference/ranges/rend.md
index 8700ce9f8..439c07b5b 100644
--- a/reference/ranges/rend.md
+++ b/reference/ranges/rend.md
@@ -16,32 +16,17 @@ namespace std::ranges {
 範囲の先頭の前を指す逆イテレータもしくは番兵を取得する関数オブジェクト。
 
 ## 効果
-部分式`E`の型を`T`、`t`を`E`を評価した値とし、関数`decay-copy`が後述のように定義されているとする。
+部分式`E`の型を`T`、`t`を`E`を評価した値とする。
 このとき、式`ranges::begin(E)`の効果は以下の通り。
 
 1. `E`がrvalueかつ[`enable_borrowed_range`](enable_borrowed_range.md)`&amp;lt;`[`remove_cv_t`](/reference/type_traits/remove_cv.md)`&amp;lt;T&amp;gt;&amp;gt;`が`false`であれば、呼び出しは不適格。
 2. `T`が配列型かつ[`remove_all_extents_t`](/reference/type_traits/remove_all_extents.md)`&amp;lt;T&amp;gt;`が不完全型であれば、呼び出しは不適格(診断不要)。
-3. `decay-copy(t.rend())`が有効な式でその型が[`sentinel_for`](/reference/iterator/sentinel_for.md)`&amp;lt;decltype(`[`ranges::rbegin`](rbegin.md)`(E))&amp;gt;`のモデルであれば、`decay-copy(t.rend())`と等しい。
-4. `T`がクラス型または列挙体であって、`rend`がADLで見つかり、`decay-copy(rend(t))`が有効な式でその型が[`sentinel_for`](/reference/iterator/sentinel_for.md)`&amp;lt;decltype(`[`ranges::rbegin`](rbegin.md)`(E))&amp;gt;`のモデルであれば、`decay-copy(rend(t))`と等しい。
+3. [`decay-copy`](/reference/exposition-only/decay-copy.md)`(t.rend())`が有効な式でその型が[`sentinel_for`](/reference/iterator/sentinel_for.md)`&amp;lt;decltype(`[`ranges::rbegin`](rbegin.md)`(E))&amp;gt;`のモデルであれば、[`decay-copy`](/reference/exposition-only/decay-copy.md)`(t.rend())`と等しい。
+4. `T`がクラス型または列挙体であって、`rend`がADLで見つかり、[`decay-copy`](/reference/exposition-only/decay-copy.md)`(rend(t))`が有効な式でその型が[`sentinel_for`](/reference/iterator/sentinel_for.md)`&amp;lt;decltype(`[`ranges::rbegin`](rbegin.md)`(E))&amp;gt;`のモデルであれば、[`decay-copy`](/reference/exposition-only/decay-copy.md)`(rend(t))`と等しい。
 5. [`ranges::begin`](begin.md)`(t)`と[`ranges::end`](end.md)`(t)`が同じ型をもつ有効な式で、その型が[`bidirectional_iterator`](/reference/iterator/bidirectional_iterator.md)のモデルであれば、[`make_reverse_iterator`](/reference/iterator/make_reverse_iterator.md)`(`[`ranges::begin`](begin.md)`(t))`と等しい。
 
 どれにも当てはまらないとき、呼び出しは不適格。
 
-### decay-copyの定義
-
-```cpp
-template&amp;lt;class T&amp;gt;
-constexpr decay_t&amp;lt;T&amp;gt; decay-copy(T&amp;amp;&amp;amp; v) noexcept(is_nothrow_convertible_v&amp;lt;T, decay_t&amp;lt;T&amp;gt;&amp;gt;)
-{
-  return std::forward&amp;lt;T&amp;gt;(v);
-}
-```
-* decay-copy[italic]
-* forward[link /reference/utility/forward.md]
-* decay_t[link /reference/type_traits/decay.md]
-* decay_t[link /reference/type_traits/decay.md]
-* is_nothrow_convertible_v[link /reference/type_traits/is_nothrow_convertible.md]
-
 ## 戻り値
 範囲の先頭の前を指す逆イテレータもしくは番兵。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>size -- decay-copyへのリンク修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/size.html"/>
      <id>8538fc65bd5066642d76c8b561bb3c95a62c6d71:reference/ranges/size.md</id>
      <updated>2021-08-28T00:55:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/size.md b/reference/ranges/size.md
index 9a2cef189..08a34ad11 100644
--- a/reference/ranges/size.md
+++ b/reference/ranges/size.md
@@ -18,7 +18,7 @@ namespace std::ranges {
 ## 効果
 部分式`E`の型を`T`、`t`を`E`を評価した値とする。このとき、式`ranges::size(E)`の効果は以下の通り。
 
-1. `T`が配列型であれば、`decay-copy(`[`extent_v`](/reference/type_traits/extent.md)`&amp;lt;T&amp;gt;)`に等しい(expression‑equivalent)。ただし、要素数不明の配列であれば、呼び出しは不適格。
+1. `T`が配列型であれば、[`decay-copy`](/reference/exposition-only/decay-copy.md)`(`[`extent_v`](/reference/type_traits/extent.md)`&amp;lt;T&amp;gt;)`に等しい(expression‑equivalent)。ただし、要素数不明の配列であれば、呼び出しは不適格。
 2. [`disable_sized_range`](disable_sized_range.md)`&amp;lt;`[`remove_cv_t`](/reference/type_traits/remove_cv.md)`&amp;lt;T&amp;gt;&amp;gt;`が`false`、かつ[`decay-copy`](/reference/exposition-only/decay-copy.md)`(t.size())`が整数型(interger-like)の有効な式であれば、[`decay-copy`](/reference/exposition-only/decay-copy.md)`(t.size())`と等しい。
 3. `T`がクラス型または列挙体であって、[`disable_sized_range`](disable_sized_range.md)`&amp;lt;`[`remove_cv_t`](/reference/type_traits/remove_cv.md)`&amp;lt;T&amp;gt;&amp;gt;`が`false`、かつ`size`がADLで見つかり、[`decay-copy`](/reference/exposition-only/decay-copy.md)`(size(t))`が整数型の有効な式であれば、[`decay-copy`](/reference/exposition-only/decay-copy.md)`(size(t))`と等しい。
 4. `to-unsigned-like(`[`ranges::end`](end.md)`(t) - `[`ranges::begin`](begin.md)`(t))`が有効な式で、[`ranges::begin`](begin.md)の型`I`、[`ranges::end`](end.md)の型`S`が[`sized_sentinel_for`](/reference/iterator/disable_sized_sentinel_for.md)`&amp;lt;S, I&amp;gt;`と[`forward_iterator`](/reference/iterator/forward_iterator.md)のモデルであれば、`to-unsigned-like(`[`ranges::end`](end.md)`(t) - `[`ranges::begin`](begin.md)`(t))`と等しい。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ranges -- リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges.html"/>
      <id>41e38e690ebfa0a8bc7508ef0fb587e46297e631:reference/ranges.md</id>
      <updated>2021-08-28T00:47:17+09:00</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;ranges&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;ranges&lt;/span&gt;&lt;span class=&#34;cpp cpp20&#34; title=&#34;C++20で追加&#34;&gt;(C++20)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;ranges&amp;gt;&lt;/code&gt; では、イテレータの組ではなく、コンテナや配列、部分的なコンテナなどを扱う範囲ライブラリを提供する。&lt;/p&gt;
&lt;p&gt;C++17までは、標準アルゴリズム関数はイテレータの組を扱い、範囲を直接扱ってはいなかった。
範囲ライブラリはBoost.Rangeやrange-v3などで実績があり、C++標準にも取り込まれることになった。&lt;/p&gt;
&lt;h2&gt;範囲アクセス&lt;/h2&gt;
&lt;p&gt;これらの機能は従来&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/iterator.html&#34;&gt;&amp;lt;iterator&amp;gt;&lt;/a&gt;&lt;/code&gt;でフリー関数として提供されていた。
C++20では関数によるカスタマイゼーションポイントの問題点を解消するため、関数オブジェクトとして再実装されている。
互換性を維持するために従来の関数も残っているが、これらのカスタマイゼーションポイントオブジェクトを使用することが推奨される。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/begin.html&#34;&gt;begin&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の先頭を指すイテレータを取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/end.html&#34;&gt;end&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の末尾の次を指すイテレータもしくは番兵を取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/cbegin.html&#34;&gt;cbegin&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の先頭を指す読み取り専用イテレータを取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/cend.html&#34;&gt;cend&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の末尾の次を指す読み取り専用イテレータもしくは番兵を取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/rbegin.html&#34;&gt;rbegin&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の末尾を指す逆イテレータを取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/rend.html&#34;&gt;rend&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の先頭の前を指す逆イテレータもしくは番兵を取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/crbegin.html&#34;&gt;crbegin&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の末尾を指す読み取り専用逆イテレータを取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/crend.html&#34;&gt;crend&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の先頭の前を指す読み取り専用逆イテレータもしくは番兵を取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/size.html&#34;&gt;size&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の要素数を取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/ssize.html&#34;&gt;ssize&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の要素数を、符号付き整数型で取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/empty.html&#34;&gt;empty&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲が空かどうかを判定する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/data.html&#34;&gt;data&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の要素配列へのポインタを取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/cdata.html&#34;&gt;cdata&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の要素配列への読み取り専用ポインタを取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;範囲に関連する型へのアクセス&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/iterator_t.html&#34;&gt;iterator_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲のイテレータ型を取得する (alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/sentinel_t.html&#34;&gt;sentinel_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の番兵型を取得する (alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/range_difference_t.html&#34;&gt;range_difference_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲のイテレータの差の型を取得する (alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/range_size_t.html&#34;&gt;range_size_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲のサイズの型を取得する(alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/range_value_t.html&#34;&gt;range_value_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の要素の型を取得する (alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/range_reference_t.html&#34;&gt;range_reference_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の要素の参照型を取得する (alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/range_rvalue_reference_t.html&#34;&gt;range_rvalue_reference_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の要素の右辺値参照型を取得する (alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;範囲コンセプト&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/range.md.nolink&#34;&gt;range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲を定義するコンセプト (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/borrowed_range.md.nolink&#34;&gt;borrowed_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;所有権を持たない範囲 (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/sized_range.md.nolink&#34;&gt;sized_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;サイズを一定時間で求められる範囲 (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/view.md.nolink&#34;&gt;view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビューである範囲 (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/output_range.md.nolink&#34;&gt;output_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;イテレータが出力イテレータである範囲 (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/input_range.md.nolink&#34;&gt;input_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;イテレータが入力イテレータである範囲 (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/forward_range.md.nolink&#34;&gt;forward_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;イテレータが前進イテレータである範囲 (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/bidirectional_range.md.nolink&#34;&gt;bidirectional_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;イテレータが双方向イテレータである範囲 (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/random_access_range.md.nolink&#34;&gt;random_access_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;イテレータがランダムアクセスイテレータである範囲 (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/contiguous_range.md.nolink&#34;&gt;contiguous_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;イテレータが隣接イテレータである範囲 (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/common_range.md.nolink&#34;&gt;common_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;イテレータと番兵の型が等しい範囲 (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/viewable_range.md.nolink&#34;&gt;viewable_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビューに変換できる範囲 (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;カスタマイゼーションポイント&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/enable_borrowed_range.html&#34;&gt;enable_borrowed_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲を&lt;code&gt;borrowed_range&lt;/code&gt;にする (variable template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/enable_view.html&#34;&gt;enable_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲を&lt;code&gt;view&lt;/code&gt;にする (variable template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/disable_sized_range.html&#34;&gt;disable_sized_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲を&lt;code&gt;sized_range&lt;/code&gt;にならないようにする (variable template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;ビューインターフェース&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/view_base.html&#34;&gt;view_base&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;基底クラスとすることで&lt;code&gt;view&lt;/code&gt;となるタグ型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/view_interface.md.nolink&#34;&gt;view_interface&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビューの基底クラスとして推奨されるクラス (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;部分範囲&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/subrange_kind.md.nolink&#34;&gt;subrange_kind&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;部分範囲の種類を表す列挙体 (enum class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/subrange.md.nolink&#34;&gt;subrange&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;イテレータペアを範囲として扱う (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;ダングリングイテレータハンドリング&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/dangling.md.nolink&#34;&gt;dangling&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ダングリングイテレータ、ダングリング範囲を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/borrowed_iterator_t.md.nolink&#34;&gt;borrowed_iterator_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲が&lt;code&gt;borrowed_range&lt;/code&gt;ではないとき&lt;code&gt;dangling&lt;/code&gt;となるイテレータ (alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/borrowed_subrange_t.md.nolink&#34;&gt;borrowed_subrange_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲が&lt;code&gt;borrowed_range&lt;/code&gt;ではないとき&lt;code&gt;dangling&lt;/code&gt;となる部分範囲 (alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;範囲ファクトリ&lt;/h2&gt;
&lt;h3&gt;empty view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/empty_view.md.nolink&#34;&gt;empty_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;空の範囲 (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/empty_view.md.nolink&#34;&gt;empty&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;empty_view&lt;/code&gt;を生成する (variable template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;single view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/single_view.md.nolink&#34;&gt;single_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した値1つからなる範囲 (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/single.md.nolink&#34;&gt;single&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;single_view&lt;/code&gt;を生成する (variable template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;iota view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/iota_view.md.nolink&#34;&gt;iota_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;単調増加列である範囲 (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/iota.md.nolink&#34;&gt;iota&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;iota_view&lt;/code&gt;を生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;istream view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/basic_istream_view.md.nolink&#34;&gt;basic_istream_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;入力ストリームから値を読む範囲 (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/istream_view.md.nolink&#34;&gt;istream_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;basic_istream_view&lt;/code&gt;を生成する (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;範囲アダプタ&lt;/h2&gt;
&lt;h3&gt;all view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/ref_view.md.nolink&#34;&gt;ref_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲への参照として振る舞うビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/all.md.nolink&#34;&gt;all&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲への参照として振る舞うビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/all_t.md.nolink&#34;&gt;all_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;all&lt;/code&gt;の戻り値型 (alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;filter view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/filter_view.md.nolink&#34;&gt;filter_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した条件を満たす要素だけを集めるビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/filter.md.nolink&#34;&gt;filter&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した条件を満たす要素だけを集めるビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;transform view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/transform_view.md.nolink&#34;&gt;transform_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した関数で各要素を変換するビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/transform.md.nolink&#34;&gt;transform&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した関数で各要素を変換するビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;take view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/take_view.md.nolink&#34;&gt;take_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;先頭から指定した個数だけ取り出すビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/take.md.nolink&#34;&gt;take&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;先頭から指定した個数だけ取り出すビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;take while view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/take_while_view.md.nolink&#34;&gt;take_while_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;先頭から指定した条件を満たす範囲を取り出すビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/take_while.md.nolink&#34;&gt;take_while&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;先頭から指定した条件を満たす範囲を取り出すビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;drop view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/drop_view.md.nolink&#34;&gt;drop_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;先頭から指定した個数だけ除外するビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/drop.md.nolink&#34;&gt;drop&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;先頭から指定した個数だけ除外するビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;drop while view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/drop_while_view.md.nolink&#34;&gt;drop_while_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;先頭から指定した条件を満たす範囲を除外するビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/drop_while.md.nolink&#34;&gt;drop_while&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;先頭から指定した条件を満たす範囲を除外するビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;join view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/join_view.md.nolink&#34;&gt;join_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ネストされた範囲を平坦にするビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/join.md.nolink&#34;&gt;join&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ネストされた範囲を平坦にするビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;split view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/split_view.md.nolink&#34;&gt;split_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲を指定したデリミタで分割するビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/split.md.nolink&#34;&gt;split&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲を指定したデリミタで分割するビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;counted view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/counted.md.nolink&#34;&gt;counted&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;イテレータを指定した数だけ進めるビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;common view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/common_view.md.nolink&#34;&gt;common_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;common_range&lt;/code&gt;にしたビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/common.md.nolink&#34;&gt;common&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;common_range&lt;/code&gt;なビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;reverse view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/reverse_view.md.nolink&#34;&gt;reverse_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;逆順のビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/reverse.md.nolink&#34;&gt;reverse&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;逆順のビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;elements view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/elements_view.md.nolink&#34;&gt;elements_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;第n要素を集めたビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/keys_view.md.nolink&#34;&gt;keys_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;第0要素を集めたビュー (alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/values_view.md.nolink&#34;&gt;values_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;第1要素を集めたビュー (alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/elements.md.nolink&#34;&gt;elements&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;elements_view&lt;/code&gt;を生成する (variable template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/keys.md.nolink&#34;&gt;keys&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;keys_view&lt;/code&gt;を生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/values.md.nolink&#34;&gt;values&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;values_view&lt;/code&gt;を生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++20&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: 13.0.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: 10.1.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ?&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: 2019 Update 10&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;関連項目&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/iterator.html&#34;&gt;&amp;lt;iterator&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/concepts.html&#34;&gt;&amp;lt;concepts&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://timsong-cpp.github.io/cppwp/n4861/ranges&#34; target=&#34;_blank&#34;&gt;N4861 24 Ranges library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://techbookfest.org/product/5134506308665344&#34; target=&#34;_blank&#34;&gt;C++20 ranges&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
</feed>
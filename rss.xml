<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2024-07-09T06:55:16.598157</updated>
  <id>7b3485af-1aca-4166-9a99-bbc4293a8475</id>

  
    <entry>
      <title>hermitian_matrix_rank_1_update -- linalg : 例で`#include &lt;complex&gt;`を追加 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/hermitian_matrix_rank_1_update.html"/>
      <id>a6e4d8dcb2e239e73d93f6936cadb5e8beb27060:reference/linalg/hermitian_matrix_rank_1_update.md</id>
      <updated>2024-07-09T15:51:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/hermitian_matrix_rank_1_update.md b/reference/linalg/hermitian_matrix_rank_1_update.md
index b1df1f3c1..3486d4f86 100644
--- a/reference/linalg/hermitian_matrix_rank_1_update.md
+++ b/reference/linalg/hermitian_matrix_rank_1_update.md
@@ -97,6 +97,7 @@ $O((\verb|x.extent(0)|)^2)$
 
 ```cpp example
 #include &amp;lt;array&amp;gt;
+#include &amp;lt;complex&amp;gt;
 #include &amp;lt;iostream&amp;gt;
 #include &amp;lt;linalg&amp;gt;
 #include &amp;lt;mdspan&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>hermitian_matrix_rank_2_update -- linalg : 例で`#include &lt;complex&gt;`を追加 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/hermitian_matrix_rank_2_update.html"/>
      <id>a6e4d8dcb2e239e73d93f6936cadb5e8beb27060:reference/linalg/hermitian_matrix_rank_2_update.md</id>
      <updated>2024-07-09T15:51:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/hermitian_matrix_rank_2_update.md b/reference/linalg/hermitian_matrix_rank_2_update.md
index 620e977c1..6841357c8 100644
--- a/reference/linalg/hermitian_matrix_rank_2_update.md
+++ b/reference/linalg/hermitian_matrix_rank_2_update.md
@@ -71,6 +71,7 @@ $O(\verb|x.extent(0)| \times \verb|y.extent(0)|)$
 
 ```cpp example
 #include &amp;lt;array&amp;gt;
+#include &amp;lt;complex&amp;gt;
 #include &amp;lt;iostream&amp;gt;
 #include &amp;lt;linalg&amp;gt;
 #include &amp;lt;mdspan&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>linalg -- linalg : hermitian_martix_productを追加 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg.html"/>
      <id>048b96e30b240aedbf7eb809dbb31cad25a4a28d:reference/linalg.md</id>
      <updated>2024-07-09T15:50:42+09:00</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;linalg&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;linalg&lt;/span&gt;&lt;span class=&#34;cpp cpp26&#34; title=&#34;C++26で追加&#34;&gt;(C++26)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;linalg&amp;gt;&lt;/code&gt;ヘッダでは、線形代数(linear algebra)に関する基礎的な演算アルゴリズムを提供する。
ベクトルや行列の成分にアクセスするアルゴリズムは、多次元配列ビュー&lt;a href=&#34;mdspan/mdspan.html&#34;&gt; &lt;code&gt;std::mdspan&lt;/code&gt; &lt;/a&gt;を通してその要素にアクセスする。
本ヘッダが提供するエンティティは、すべて名前空間&lt;code&gt;std::linalg&lt;/code&gt;に属する。&lt;/p&gt;
&lt;p&gt;1次元データであるベクトル(vector)や2次元データである行列(matrix)に対して、線形代数分野のデファクトスタンダードとされる BLAS(Basic Linear Algebra Subprograms) 互換のアルゴリズム群、いくつかの LAPACK(Linear Algebra PACKage) 互換のアルゴリズムが提供される。
BLAS互換アルゴリズムは、演算対象データの次元数や計算オーダーに応じて3段階に区分される。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Level 1 BLAS : ベクトルーベクトルの演算&lt;/li&gt;
&lt;li&gt;Level 2 BLAS : 行列ーベクトルの演算&lt;/li&gt;
&lt;li&gt;Level 3 BLAS : 行列ー行列の演算&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例えば、2個の一般行列の積を求める&lt;code&gt;std::linalg::matrix_product&lt;/code&gt;はLevel 3 BLASルーチン&lt;code&gt;xGEMM&lt;/code&gt;に対応する。
（実際のBLASルーチン名は、浮動小数点数型の単精度&lt;code&gt;S&lt;/code&gt;／倍精度&lt;code&gt;D&lt;/code&gt;とそれぞれの複素数版&lt;code&gt;C&lt;/code&gt;,&lt;code&gt;Z&lt;/code&gt;として、プレフィックス&lt;code&gt;x&lt;/code&gt;部は文字4種類のいずれか。）&lt;/p&gt;
&lt;p&gt;また、&lt;code&gt;std::mdspan&lt;/code&gt;と組み合わせて利用する拡張機能が提供される。&lt;/p&gt;
&lt;h2&gt;共通要件&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;linalg&amp;gt;&lt;/code&gt;ヘッダが提供する演算アルゴリズムは、スカラ値およびベクトル／行列の要素型として線形代数値型(linear algebra value types)を取り扱う。&lt;/p&gt;
&lt;p&gt;線形代数値型はBLASが取り扱う&lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;&lt;a href=&#34;complex/complex.html&#34;&gt;std::complex&lt;/a&gt;&amp;lt;float&amp;gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&#34;complex/complex.html&#34;&gt;std::complex&lt;/a&gt;&amp;lt;double&amp;gt;&lt;/code&gt;をはじめ、&lt;code&gt;&lt;a href=&#34;concepts/semiregular.html&#34;&gt;semiregular&lt;/a&gt;&lt;/code&gt;のモデルであれば良い。
また、線形代数値型の値初期化は加法元（算術型であれば値&lt;code&gt;0&lt;/code&gt;）であること。&lt;/p&gt;
&lt;p&gt;プログラム定義型を利用する場合、演算アルゴリズムはカスタマイゼーションポイントとして&lt;code&gt;abs&lt;/code&gt;, &lt;code&gt;real&lt;/code&gt;, &lt;code&gt;imag&lt;/code&gt;, &lt;code&gt;conj&lt;/code&gt;を非修飾名で呼び出す。&lt;/p&gt;
&lt;h2&gt;&lt;code&gt;std::mdspan&lt;/code&gt;向け機能拡張&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/layout_blas_packed.html&#34;&gt;layout_blas_packed&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;行列要素のBLAS互換パックレイアウトに対応する&lt;a href=&#34;mdspan/LayoutMappingPolicy.html&#34;&gt;レイアウトマッピングポリシー&lt;/a&gt; (class template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/scaled_accessor.html&#34;&gt;scaled_accessor&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;scaled&lt;/code&gt;関数用の&lt;a href=&#34;mdspan/AccessorPolicy.html&#34;&gt;アクセサポリシー&lt;/a&gt; (class template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/scaled.html&#34;&gt;scaled&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;要素値をスカラー倍した読み取り専用&lt;code&gt;std::mdspan&lt;/code&gt;を作る (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/conjugated_accessor.html&#34;&gt;conjugated_accessor&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;conjugated&lt;/code&gt;関数用の&lt;a href=&#34;mdspan/AccessorPolicy.html&#34;&gt;アクセサポリシー&lt;/a&gt; (class template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/conjugated.html&#34;&gt;conjugated&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;読み取り専用の複素共役ビュー&lt;code&gt;std::mdspan&lt;/code&gt;を作る (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/layout_transpose.html&#34;&gt;layout_transpose&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;transposed&lt;/code&gt;関数用の&lt;a href=&#34;mdspan/LayoutMappingPolicy.html&#34;&gt;レイアウトマッピングポリシー&lt;/a&gt; (class template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/transposed.html&#34;&gt;transposed&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;2次元&lt;code&gt;std::mdspan&lt;/code&gt;の行列転置ビューを作る (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/conjugate_transposed.html&#34;&gt;conjugate_transposed&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;読み取り専用の複素共役転置ビュー&lt;code&gt;std::mdspan&lt;/code&gt;を作る (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;BLASの要件&lt;/h2&gt;
&lt;p&gt;BLAS 1, 2, 3のアルゴリズムでテンプレートパラメータが特に制約されていない場合、テンプレートパラメータの名前によって以下の制約を満たすとする。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;制約&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ExecutionPolicy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;is_execution_policy&amp;lt;ExecutionPolicy&amp;gt;::value == true&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Real&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;complex&amp;lt;Real&amp;gt;&lt;/code&gt;が規定できる型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Triangle&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;upper_triangle_t&lt;/code&gt;または&lt;code&gt;lower_triangle_t&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DiagonalStorage&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;implicit_unit_diagonal_t&lt;/code&gt;または&lt;code&gt;implicit_unit_diagonal_t&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;BLAS 1アルゴリズム&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;std::mpspan&lt;/code&gt;をパラメータに持つ、この節の全てのアルゴリズムの計算量は渡された&lt;code&gt;std::mdspan&lt;/code&gt;の&lt;code&gt;extents&lt;/code&gt;の積の最大値、つまりベクトルや行列の要素数の最大値に線形である。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/setup_givens_rotation_result.html&#34;&gt;setup_givens_rotation_result&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;setup_givens_rotation&lt;/code&gt;の結果型 (class template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/setup_givens_rotation.html&#34;&gt;setup_givens_rotation&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xLARTG: ギブンス回転をセットアップする (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/apply_givens_rotation.html&#34;&gt;apply_givens_rotation&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xROT: ベクトルにギブンス回転を適用する (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/swap_elements.html&#34;&gt;swap_elements&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xSWAP: 2つのベクトル／行列の要素を交換する (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/scale.html&#34;&gt;scale&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xSCAL: ベクトル／行列の要素にスカラ値を乗算する (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/copy.html&#34;&gt;copy&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xCOPY: ベクトル／行列の要素をコピーする (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/add.html&#34;&gt;add&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xAXPY: 2つのベクトル／行列の要素を加算する (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/dot.html&#34;&gt;dot&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xDOT, xDOTU: 2つのベクトルのドット積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/dotc.html&#34;&gt;dotc&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xDOTC: 2つのベクトルの複素共役ドット積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/sum_of_squares_result.html&#34;&gt;sum_of_squares_result&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vector_sum_of_squares&lt;/code&gt;の結果型 (class template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/vector_sum_of_squares.html&#34;&gt;vector_sum_of_squares&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xLASSQ: ベクトル要素の平方和を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/vector_two_norm.html&#34;&gt;vector_two_norm&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xNRM2: ベクトルのユークリッドノルム(Euclidean norm)を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/vector_abs_sum.html&#34;&gt;vector_abs_sum&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xASUM: ベクトル要素の絶対値和を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/vector_idx_abs_max.html&#34;&gt;vector_idx_abs_max&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xIAMAX: ベクトル要素のうち最大絶対値インデクスを返す (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/matrix_frob_norm.html&#34;&gt;matrix_frob_norm&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;行列のフロベニウスノルム(Frobenius norm)を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/matrix_one_norm.html&#34;&gt;matrix_one_norm&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;行列の1ノルム(One norm)を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/matrix_inf_norm.html&#34;&gt;matrix_inf_norm&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;行列の無限大ノルム(Infinity norm)を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;BLAS 2アルゴリズム&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/matrix_vector_product.html&#34;&gt;matrix_vector_product&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xGEMV: 一般行列とベクトルの積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/symmetric_matrix_vector_product.html&#34;&gt;symmetric_matrix_vector_product&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xSYMV: 対称行列とベクトルの積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/hermitian_matrix_vector_product.html&#34;&gt;hermitian_matrix_vector_product&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xHEMV: ハミルトニアン行列とベクトルの積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/triangular_matrix_vector_product.html&#34;&gt;triangular_matrix_vector_product&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xTRMV: 三角行列とベクトルの積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/triangular_matrix_vector_solve.html&#34;&gt;triangular_matrix_vector_solve&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xTRSV: 三角行列を係数とする行列方程式を解く (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/matrix_rank_1_update.html&#34;&gt;matrix_rank_1_update&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xGER, xGERU: 行列のRank-1更新 (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/matrix_rank_1_update_c.html&#34;&gt;matrix_rank_1_update_c&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xGERC: 複素行列のRank-1更新 (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/symmetric_matrix_rank_1_update.html&#34;&gt;symmetric_matrix_rank_1_update&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xSYR: 対称行列のRank-1更新 (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/hermitian_matrix_rank_1_update.html&#34;&gt;hermitian_matrix_rank_1_update&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xHER: ハミルトニアン行列のRank-1更新 (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/symmetric_matrix_rank_2_update.html&#34;&gt;symmetric_matrix_rank_2_update&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xSYR2: 対称行列のRank-2更新 (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/hermitian_matrix_rank_2_update.html&#34;&gt;hermitian_matrix_rank_2_update&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xHER2: ハミルトニアン行列のRank-2更新 (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;BLAS 3アルゴリズム&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/matrix_product.html&#34;&gt;matrix_product&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xGEMM: 2つの一般行列の積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/symmetric_matrix_product.html&#34;&gt;symmetric_matrix_product&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xSYMM: 対称行列と行列の積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/hermitian_matrix_product.html&#34;&gt;hermitian_matrix_product&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xHEMM: ハミルトニアン行列と行列の積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;triangular_matrix_product&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xTRMM: 三角行列と行列の積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;triangular_matrix_left_product&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xTRMM: In-placeに三角行列と行列の積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;triangular_matrix_right_product&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xTRMM: In-placeに三角行列と行列の積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;symmetric_matrix_rank_k_update&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xSYRK: 対称行列のRank-k更新 (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hermitian_matrix_rank_k_update&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xHERK: ハミルトニアン行列のRank-k更新 (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;symmetric_matrix_rank_2k_update&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xSYR2K: 対称行列のRank-2k更新 (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hermitian_matrix_rank_2k_update&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xHER2K: ハミルトニアン行列のRank-2k更新 (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;triangular_matrix_matrix_left_solve&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xTRSM: 三角行列の連立一次方程式を解く (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;triangular_matrix_matrix_right_solve&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xTRSM: 三角行列の連立一次方程式を解く (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;タグ&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;linalg&amp;gt;&lt;/code&gt;ヘッダでは、行列の格納順序や三角行列の上下をタグを使って表現している。&lt;/p&gt;
&lt;h3&gt;格納順序&lt;/h3&gt;
&lt;p&gt;行列の格納順序を表すタグ。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/column_major_t.html&#34;&gt;column_major_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;列優先(column-major)を表すタグ型&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/column_major_t.html&#34;&gt;column_major&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;列優先(column-major)を表すタグ値&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/row_major_t.html&#34;&gt;row_major_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;行優先(row-major)を表すタグ型&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/row_major_t.html&#34;&gt;row_major&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;行優先(row-major)を表すタグ値&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;三角行列&lt;/h3&gt;
&lt;p&gt;上三角行列か下三角行列かを表すタグ。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/upper_triangle_t.html&#34;&gt;upper_triangle_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;上三角行列を表すタグ型&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/upper_triangle_t.html&#34;&gt;upper_triangle&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;上三角行列を表すタグ値&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/lower_triangle_t.html&#34;&gt;lower_triangle_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;下三角行列を表すタグ型&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/lower_triangle_t.html&#34;&gt;lower_triangle&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;下三角行列を表すタグ値&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;対角成分&lt;/h3&gt;
&lt;p&gt;行列の全ての対角成分を暗黙に乗法における単位元とみなすかどうかを表すタグ。みなした場合、行列の対角成分にはアクセスせず、値が乗法における単位元であるとして計算する。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/implicit_unit_diagonal_t.html&#34;&gt;implicit_unit_diagonal_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;全ての対角成分を暗黙に乗法における単位元とみなすタグ型&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/implicit_unit_diagonal_t.html&#34;&gt;implicit_unit_diagonal&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;全ての対角成分を暗黙に乗法における単位元とみなすタグ値&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/explicit_diagonal_t.html&#34;&gt;explicit_diagonal_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;全ての対角成分にアクセスするタグ型&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/explicit_diagonal_t.html&#34;&gt;explicit_diagonal&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;全ての対角成分にアクセスするタグ値&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++26&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;関連項目&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;mdspan.html&#34;&gt;&amp;lt;mdspan&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p1673r13.html&#34; target=&#34;_blank&#34;&gt;P1673R13 A free function linear algebra interface based on the BLAS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p1674r2.html&#34; target=&#34;_blank&#34;&gt;P1674R2: Evolving a Standard C++ Linear Algebra Library from the BLAS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/CppCon/CppCon2023/blob/main/Presentations/stdlinalg_linear_algebra_coming_to_standard_cpp.pdf&#34; target=&#34;_blank&#34;&gt;std::linalg: Linear Algebra Coming to Standard C++&lt;/a&gt;, CppCon 2023&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.netlib.org/blas/&#34; target=&#34;_blank&#34;&gt;BLAS (Basic Linear Algebra Subprograms)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://eel.is/c++draft/complex.numbers&#34; target=&#34;_blank&#34;&gt;Numerics library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>hermitian_matrix_product -- linalg : hermitian_martix_productを追加 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/hermitian_matrix_product.html"/>
      <id>048b96e30b240aedbf7eb809dbb31cad25a4a28d:reference/linalg/hermitian_matrix_product.md</id>
      <updated>2024-07-09T15:50:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/hermitian_matrix_product.md b/reference/linalg/hermitian_matrix_product.md
new file mode 100644
index 000000000..d19cdc911
--- /dev/null
+++ b/reference/linalg/hermitian_matrix_product.md
@@ -0,0 +1,353 @@
+# hermitian_matrix_product
+
+
+* [mathjax enable]
+* linalg[meta header]
+* function template[meta id-type]
+* std::linalg[meta namespace]
+* cpp26[meta cpp]
+
+
+```cpp
+namespace std::linalg {
+  template&amp;lt;in-matrix InMat1,
+           class Triangle,
+           in-matrix InMat2,
+           out-matrix OutMat&amp;gt;
+  void hermitian_matrix_product(
+    InMat1 A,
+    Triangle t,
+    InMat2 B,
+    OutMat C); // (1)
+
+  template&amp;lt;class ExecutionPolicy,
+           in-matrix InMat1,
+           class Triangle,
+           in-matrix InMat2,
+           out-matrix OutMat&amp;gt;
+  void hermitian_matrix_product(
+    ExecutionPolicy&amp;amp;&amp;amp; exec,
+    InMat1 A,
+    Triangle t,
+    InMat2 B,
+    OutMat C); // (2)
+
+  template&amp;lt;in-matrix InMat1,
+           in-matrix InMat2,
+           class Triangle,
+           out-matrix OutMat&amp;gt;
+  void hermitian_matrix_product(
+    InMat1 A,
+    InMat2 B,
+    Triangle t,
+    OutMat C); // (3)
+
+  template&amp;lt;class ExecutionPolicy,
+           in-matrix InMat1,
+           in-matrix InMat2,
+           class Triangle,
+           out-matrix OutMat&amp;gt;
+  void hermitian_matrix_product(
+    ExecutionPolicy&amp;amp;&amp;amp; exec,
+    InMat1 A,
+    InMat2 B,
+    Triangle t,
+    OutMat C); // (4)
+
+  template&amp;lt;in-matrix InMat1,
+           class Triangle,
+           in-matrix InMat2,
+           in-matrix InMat3,
+           out-matrix OutMat&amp;gt;
+  void hermitian_matrix_product(
+    InMat1 A,
+    Triangle t,
+    InMat2 B,
+    InMat3 E,
+    OutMat C); // (5)
+
+  template&amp;lt;class ExecutionPolicy,
+           in-matrix InMat1,
+           class Triangle,
+           in-matrix InMat2,
+           in-matrix InMat3,
+           out-matrix OutMat&amp;gt;
+  void hermitian_matrix_product(
+    ExecutionPolicy&amp;amp;&amp;amp; exec,
+    InMat1 A,
+    Triangle t,
+    InMat2 B,
+    InMat3 E,
+    OutMat C); // (6)
+
+  template&amp;lt;in-matrix InMat1,
+           in-matrix InMat2,
+           class Triangle,
+           in-matrix InMat3,
+           out-matrix OutMat&amp;gt;
+  void hermitian_matrix_product(
+    InMat1 A,
+    InMat2 B,
+    Triangle t,
+    InMat3 E,
+    OutMat C); // (7)
+
+  template&amp;lt;class ExecutionPolicy,
+           in-matrix InMat1,
+           in-matrix InMat2,
+           class Triangle,
+           in-matrix InMat3,
+           out-matrix OutMat&amp;gt;
+  void hermitian_matrix_product(
+    ExecutionPolicy&amp;amp;&amp;amp; exec,
+    InMat1 A,
+    InMat2 B,
+    Triangle t,
+    InMat3 E,
+    OutMat C); // (8)
+}
+```
+
+
+## 概要
+行列同士の積を計算する。
+
+- (1): エルミート行列`A`と行列`B`に対し、$C \leftarrow AB$
+- (2): (1)を指定された実行ポリシーで実行する。
+- (3): 行列`A`とエルミート行列`B`に対し、$C \leftarrow AB$
+- (4): (3)を指定された実行ポリシーで実行する。
+- (5): エルミート行列`A`と行列`B`に対し、$C \leftarrow E + AB$
+- (6): (5)を指定された実行ポリシーで実行する。
+- (7): 行列`A`とエルミート行列`B`に対し、$C \leftarrow E + AB$
+- (8): (7)を指定された実行ポリシーで実行する。
+
+
+## 適格要件
+- 共通
+  + `Triangle`は[`upper_triangle_t`](upper_triangle_t.md)または[`lower_triangle_t`](lower_triangle_t.md)
+  + [`possibly-multipliable`](possibly-multipliable.md)`&amp;lt;decltype(A), decltype(B), decltype(C)&amp;gt;()`が`true`
+- (1), (2), (5), (6): `InMat1`(`A`の型)が[`layout_blas_packed`](layout_blas_packed.md)を持つなら、レイアウトの`Triangle`テンプレート引数とこの関数の`Triangle`テンプレート引数が同じ型
+- (1), (2), (5), (6): [`compatible-static-extents`](compatible-static-extents.md)`&amp;lt;decltype(A), decltype(A)&amp;gt;(0, 1)`が`true` (つまり`A`が正方行列であること)
+- (3), (4), (7), (8): `InMat2`(`B`の型)が[`layout_blas_packed`](layout_blas_packed.md)を持つなら、レイアウトの`Triangle`テンプレート引数とこの関数の`Triangle`テンプレート引数が同じ型
+- (3), (4), (7), (8): [`compatible-static-extents`](compatible-static-extents.md)`&amp;lt;decltype(B), decltype(B)&amp;gt;(0, 1)`が`true` (つまり`B`が正方行列であること)
+- (5), (6), (7), (8): [`possibly-addable`](possibly-addable.md)`&amp;lt;decltype(E),decltype(E),decltype(C)&amp;gt;()`が`true`
+
+
+## 事前条件
+- 共通
+  + [`multipliable`](multipliable.md)`(A, B, C) == true`
+- (1), (2), (5), (6): [`A.extent(0) == A.extent(1)`]
+- (3), (4), (7), (8): [`B.extent(0) == B.extent(1)`]
+- (5), (6), (7), (8): [`addable`](addable.md)`(E, E, C) == true`
+
+
+## 効果
+- (1), (2): エルミート行列`A`と行列`B`に対し、$C \leftarrow AB$
+- (3), (4): 行列`A`とエルミート行列`B`に対し、$C \leftarrow AB$
+- (5), (6): エルミート行列`A`と行列`B`に対し、$C \leftarrow E + AB$
+- (7), (8): 行列`A`とエルミート行列`B`に対し、$C \leftarrow E + AB$
+
+
+## 戻り値
+なし
+
+
+## 計算量
+$O(\verb|A.extent(0)| \times \verb|A.extent(1)| \times \verb|B.extent(1)|)$
+
+
+## 備考
+- (5), (6), (7), (8): `C`に`E`を入れても良い。
+
+
+## 例
+**[注意] 処理系にあるコンパイラで確認していないため、間違っているかもしれません。**
+
+```cpp example
+#include &amp;lt;array&amp;gt;
+#include &amp;lt;complex&amp;gt;
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;linalg&amp;gt;
+#include &amp;lt;mdspan&amp;gt;
+#include &amp;lt;vector&amp;gt;
+
+template &amp;lt;class Matrix&amp;gt;
+void print_mat(const Matrix&amp;amp; A) {
+  for(int i = 0; i &amp;lt; A.extent(0); ++i) {
+    for(int j = 0; j &amp;lt; A.extent(1) - 1; ++j) {
+      std::cout &amp;lt;&amp;lt; A[i, j] &amp;lt;&amp;lt; &amp;#39; &amp;#39;;
+    }
+    std::cout &amp;lt;&amp;lt; A[i, A.extent(1) - 1] &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
+  }
+}
+
+template &amp;lt;class Matrix&amp;gt;
+void init_mat(Matrix&amp;amp; A, typename Matrix::value_type geta = 0) {
+  for(int i = 0; i &amp;lt; A.extent(0); ++i) {
+    for(int j = 0; j &amp;lt; A.extent(1); ++j) {
+      A[i, j] = std::complex&amp;lt;double&amp;gt;(i + geta, j + geta);
+    }
+  }
+}
+
+template &amp;lt;class Matrix&amp;gt;
+void init_herm_mat(Matrix&amp;amp; A) {
+  for(int i = 0; i &amp;lt; A.extent(0); ++i) {
+    A[i, i] = std::complex&amp;lt;double&amp;gt;(i, 0);
+    for(int j = i + 1; j &amp;lt; A.extent(1); ++j) {
+      A[i, j] = std::complex&amp;lt;double&amp;gt;(i, j);
+    }
+  }
+}
+
+int main()
+{
+  constexpr size_t N = 2;
+
+  using Scalar = std::complex&amp;lt;double&amp;gt;;
+  using Vector = std::vector&amp;lt;Scalar&amp;gt;;
+  using HermitianMatrix = std::mdspan&amp;lt;
+      Scalar,
+      std::extents&amp;lt;size_t, N, N&amp;gt;,
+      std::linalg::layout_blas_packed&amp;lt;
+        std::linalg::upper_triangle_t,
+        std::linalg::row_major_t&amp;gt;
+    &amp;gt;;
+
+  Vector A_vec(N * N);
+  Vector B_vec(N * N);
+  Vector C_vec(N * N);
+  Vector E_vec(N * N);
+
+  std::mdspan C(C_vec.data(), N, N);
+  std::mdspan E(E_vec.data(), N, N);
+
+  init_mat(E, N * N);
+
+  {
+    HermitianMatrix A(A_vec.data());
+    std::mdspan B(B_vec.data(), N, N);
+
+    init_herm_mat(A);
+    init_mat(B);
+
+    // (1)
+    std::cout &amp;lt;&amp;lt; &amp;#34;(1)\n&amp;#34;;
+    std::linalg::hermitian_matrix_product(A, std::linalg::upper_triangle, B, C);
+    print_mat(C);
+
+    // (2)
+    std::cout &amp;lt;&amp;lt; &amp;#34;(2)\n&amp;#34;;
+    std::linalg::hermitian_matrix_product(std::execution::par, A, std::linalg::upper_triangle, B, C);
+    print_mat(C);
+  }
+
+  {
+    std::mdspan A(A_vec.data(), N, N);
+    HermitianMatrix B(B_vec.data());
+
+    init_mat(A);
+    init_herm_mat(B);
+
+    // (3)
+    std::cout &amp;lt;&amp;lt; &amp;#34;(3)\n&amp;#34;;
+    std::linalg::hermitian_matrix_product(A, B, std::linalg::upper_triangle, C);
+    print_mat(C);
+
+    // (4)
+    std::cout &amp;lt;&amp;lt; &amp;#34;(4)\n&amp;#34;;
+    std::linalg::hermitian_matrix_product(std::execution::par, A, B, std::linalg::upper_triangle, C);
+    print_mat(C);
+  }
+
+  {
+    HermitianMatrix A(A_vec.data());
+    std::mdspan B(B_vec.data(), N, N);
+
+    init_herm_mat(A);
+    init_mat(B);
+
+    // (5)
+    std::cout &amp;lt;&amp;lt; &amp;#34;(5)\n&amp;#34;;
+    std::linalg::hermitian_matrix_product(A, std::linalg::upper_triangle, B, E, C);
+    print_mat(C);
+
+    // (6)
+    std::cout &amp;lt;&amp;lt; &amp;#34;(6)\n&amp;#34;;
+    std::linalg::hermitian_matrix_product(std::execution::par, A, std::linalg::upper_triangle, B, E, C);
+    print_mat(C);
+  }
+
+  {
+    std::mdspan A(A_vec.data(), N, N);
+    HermitianMatrix B(B_vec.data());
+
+    init_mat(A);
+    init_herm_mat(B);
+
+    // (7)
+    std::cout &amp;lt;&amp;lt; &amp;#34;(7)\n&amp;#34;;
+    std::linalg::hermitian_matrix_product(A, B, std::linalg::upper_triangle, E, C);
+    print_mat(C);
+
+    // (8)
+    std::cout &amp;lt;&amp;lt; &amp;#34;(8)\n&amp;#34;;
+    std::linalg::hermitian_matrix_product(std::execution::par, A, B, std::linalg::upper_triangle, E, C);
+    print_mat(C);
+  }
+
+  return 0;
+}
+```
+
+
+### 出力
+```
+(1)
+(0,1) (-1,1)
+(1,0) (2,1)
+(2)
+(0,1) (-1,1)
+(1,0) (2,1)
+(3)
+(0,-1) (1,0)
+(0,-3) (3,2)
+(4)
+(0,-1) (1,0)
+(0,-3) (3,2)
+(5)
+(4,5) (3,6)
+(6,4) (7,6)
+(6)
+(4,5) (3,6)
+(6,4) (7,6)
+(7)
+(4,3) (5,5)
+(5,1) (8,7)
+(8)
+(4,3) (5,5)
+(5,1) (8,7)
+```
+
+
+## バージョン
+### 言語
+- C++26
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
+
+
+## 関連項目
+- [`execution`](/reference/execution.md)
+- [`mdspan`](/reference/mdspan.md)
+- [`upper_triangle_t`](upper_triangle_t.md)
+- [`lower_triangle_t`](lower_triangle_t.md)
+
+
+## 参照
+- [P1673R13 A free function linear algebra interface based on the BLAS](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p1673r13.html)
+- [LAPACK: {he,sy}mm: Hermitian/hermitian matrix-matrix multiply](https://netlib.org/lapack/explore-html/d0/d16/group__hemm.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>symmetric_matrix_product -- linalg : 三角行列を対称行列に修正 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/symmetric_matrix_product.html"/>
      <id>eefba0f990e13b10ca9512973deb3f2cda889d73:reference/linalg/symmetric_matrix_product.md</id>
      <updated>2024-07-09T15:05:05+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/symmetric_matrix_product.md b/reference/linalg/symmetric_matrix_product.md
index 4928b2465..ecd5e66d5 100644
--- a/reference/linalg/symmetric_matrix_product.md
+++ b/reference/linalg/symmetric_matrix_product.md
@@ -112,13 +112,13 @@ namespace std::linalg {
 ## 概要
 行列同士の積を計算する。
 
-- (1): 三角行列`A`と行列`B`に対し、$C \leftarrow AB$
+- (1): 対称行列`A`と行列`B`に対し、$C \leftarrow AB$
 - (2): (1)を指定された実行ポリシーで実行する。
-- (3): 行列`A`と三角行列`B`に対し、$C \leftarrow AB$
+- (3): 行列`A`と対称行列`B`に対し、$C \leftarrow AB$
 - (4): (3)を指定された実行ポリシーで実行する。
-- (5): 三角行列`A`と行列`B`に対し、$C \leftarrow E + AB$
+- (5): 対称行列`A`と行列`B`に対し、$C \leftarrow E + AB$
 - (6): (5)を指定された実行ポリシーで実行する。
-- (7): 行列`A`と三角行列`B`に対し、$C \leftarrow E + AB$
+- (7): 行列`A`と対称行列`B`に対し、$C \leftarrow E + AB$
 - (8): (7)を指定された実行ポリシーで実行する。
 
 
@@ -142,10 +142,10 @@ namespace std::linalg {
 
 
 ## 効果
-- (1), (2): 三角行列`A`と行列`B`に対し、$C \leftarrow AB$
-- (3), (4): 行列`A`と三角行列`B`に対し、$C \leftarrow AB$
-- (5), (6): 三角行列`A`と行列`B`に対し、$C \leftarrow E + AB$
-- (7), (8): 行列`A`と三角行列`B`に対し、$C \leftarrow E + AB$
+- (1), (2): 対称行列`A`と行列`B`に対し、$C \leftarrow AB$
+- (3), (4): 行列`A`と対称行列`B`に対し、$C \leftarrow AB$
+- (5), (6): 対称行列`A`と行列`B`に対し、$C \leftarrow E + AB$
+- (7), (8): 行列`A`と対称行列`B`に対し、$C \leftarrow E + AB$
 
 
 ## 戻り値
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>linalg -- linalg : symmetric_matrix_productを追加 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg.html"/>
      <id>d837379c34e50fca26968cbe45c42a0747a2b8fc:reference/linalg.md</id>
      <updated>2024-07-08T19:34:18+09:00</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;linalg&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;linalg&lt;/span&gt;&lt;span class=&#34;cpp cpp26&#34; title=&#34;C++26で追加&#34;&gt;(C++26)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;linalg&amp;gt;&lt;/code&gt;ヘッダでは、線形代数(linear algebra)に関する基礎的な演算アルゴリズムを提供する。
ベクトルや行列の成分にアクセスするアルゴリズムは、多次元配列ビュー&lt;a href=&#34;mdspan/mdspan.html&#34;&gt; &lt;code&gt;std::mdspan&lt;/code&gt; &lt;/a&gt;を通してその要素にアクセスする。
本ヘッダが提供するエンティティは、すべて名前空間&lt;code&gt;std::linalg&lt;/code&gt;に属する。&lt;/p&gt;
&lt;p&gt;1次元データであるベクトル(vector)や2次元データである行列(matrix)に対して、線形代数分野のデファクトスタンダードとされる BLAS(Basic Linear Algebra Subprograms) 互換のアルゴリズム群、いくつかの LAPACK(Linear Algebra PACKage) 互換のアルゴリズムが提供される。
BLAS互換アルゴリズムは、演算対象データの次元数や計算オーダーに応じて3段階に区分される。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Level 1 BLAS : ベクトルーベクトルの演算&lt;/li&gt;
&lt;li&gt;Level 2 BLAS : 行列ーベクトルの演算&lt;/li&gt;
&lt;li&gt;Level 3 BLAS : 行列ー行列の演算&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例えば、2個の一般行列の積を求める&lt;code&gt;std::linalg::matrix_product&lt;/code&gt;はLevel 3 BLASルーチン&lt;code&gt;xGEMM&lt;/code&gt;に対応する。
（実際のBLASルーチン名は、浮動小数点数型の単精度&lt;code&gt;S&lt;/code&gt;／倍精度&lt;code&gt;D&lt;/code&gt;とそれぞれの複素数版&lt;code&gt;C&lt;/code&gt;,&lt;code&gt;Z&lt;/code&gt;として、プレフィックス&lt;code&gt;x&lt;/code&gt;部は文字4種類のいずれか。）&lt;/p&gt;
&lt;p&gt;また、&lt;code&gt;std::mdspan&lt;/code&gt;と組み合わせて利用する拡張機能が提供される。&lt;/p&gt;
&lt;h2&gt;共通要件&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;linalg&amp;gt;&lt;/code&gt;ヘッダが提供する演算アルゴリズムは、スカラ値およびベクトル／行列の要素型として線形代数値型(linear algebra value types)を取り扱う。&lt;/p&gt;
&lt;p&gt;線形代数値型はBLASが取り扱う&lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;&lt;a href=&#34;complex/complex.html&#34;&gt;std::complex&lt;/a&gt;&amp;lt;float&amp;gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&#34;complex/complex.html&#34;&gt;std::complex&lt;/a&gt;&amp;lt;double&amp;gt;&lt;/code&gt;をはじめ、&lt;code&gt;&lt;a href=&#34;concepts/semiregular.html&#34;&gt;semiregular&lt;/a&gt;&lt;/code&gt;のモデルであれば良い。
また、線形代数値型の値初期化は加法元（算術型であれば値&lt;code&gt;0&lt;/code&gt;）であること。&lt;/p&gt;
&lt;p&gt;プログラム定義型を利用する場合、演算アルゴリズムはカスタマイゼーションポイントとして&lt;code&gt;abs&lt;/code&gt;, &lt;code&gt;real&lt;/code&gt;, &lt;code&gt;imag&lt;/code&gt;, &lt;code&gt;conj&lt;/code&gt;を非修飾名で呼び出す。&lt;/p&gt;
&lt;h2&gt;&lt;code&gt;std::mdspan&lt;/code&gt;向け機能拡張&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/layout_blas_packed.html&#34;&gt;layout_blas_packed&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;行列要素のBLAS互換パックレイアウトに対応する&lt;a href=&#34;mdspan/LayoutMappingPolicy.html&#34;&gt;レイアウトマッピングポリシー&lt;/a&gt; (class template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/scaled_accessor.html&#34;&gt;scaled_accessor&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;scaled&lt;/code&gt;関数用の&lt;a href=&#34;mdspan/AccessorPolicy.html&#34;&gt;アクセサポリシー&lt;/a&gt; (class template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/scaled.html&#34;&gt;scaled&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;要素値をスカラー倍した読み取り専用&lt;code&gt;std::mdspan&lt;/code&gt;を作る (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/conjugated_accessor.html&#34;&gt;conjugated_accessor&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;conjugated&lt;/code&gt;関数用の&lt;a href=&#34;mdspan/AccessorPolicy.html&#34;&gt;アクセサポリシー&lt;/a&gt; (class template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/conjugated.html&#34;&gt;conjugated&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;読み取り専用の複素共役ビュー&lt;code&gt;std::mdspan&lt;/code&gt;を作る (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/layout_transpose.html&#34;&gt;layout_transpose&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;transposed&lt;/code&gt;関数用の&lt;a href=&#34;mdspan/LayoutMappingPolicy.html&#34;&gt;レイアウトマッピングポリシー&lt;/a&gt; (class template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/transposed.html&#34;&gt;transposed&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;2次元&lt;code&gt;std::mdspan&lt;/code&gt;の行列転置ビューを作る (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/conjugate_transposed.html&#34;&gt;conjugate_transposed&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;読み取り専用の複素共役転置ビュー&lt;code&gt;std::mdspan&lt;/code&gt;を作る (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;BLASの要件&lt;/h2&gt;
&lt;p&gt;BLAS 1, 2, 3のアルゴリズムでテンプレートパラメータが特に制約されていない場合、テンプレートパラメータの名前によって以下の制約を満たすとする。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;制約&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ExecutionPolicy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;is_execution_policy&amp;lt;ExecutionPolicy&amp;gt;::value == true&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Real&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;complex&amp;lt;Real&amp;gt;&lt;/code&gt;が規定できる型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Triangle&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;upper_triangle_t&lt;/code&gt;または&lt;code&gt;lower_triangle_t&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DiagonalStorage&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;implicit_unit_diagonal_t&lt;/code&gt;または&lt;code&gt;implicit_unit_diagonal_t&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;BLAS 1アルゴリズム&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;std::mpspan&lt;/code&gt;をパラメータに持つ、この節の全てのアルゴリズムの計算量は渡された&lt;code&gt;std::mdspan&lt;/code&gt;の&lt;code&gt;extents&lt;/code&gt;の積の最大値、つまりベクトルや行列の要素数の最大値に線形である。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/setup_givens_rotation_result.html&#34;&gt;setup_givens_rotation_result&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;setup_givens_rotation&lt;/code&gt;の結果型 (class template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/setup_givens_rotation.html&#34;&gt;setup_givens_rotation&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xLARTG: ギブンス回転をセットアップする (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/apply_givens_rotation.html&#34;&gt;apply_givens_rotation&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xROT: ベクトルにギブンス回転を適用する (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/swap_elements.html&#34;&gt;swap_elements&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xSWAP: 2つのベクトル／行列の要素を交換する (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/scale.html&#34;&gt;scale&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xSCAL: ベクトル／行列の要素にスカラ値を乗算する (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/copy.html&#34;&gt;copy&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xCOPY: ベクトル／行列の要素をコピーする (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/add.html&#34;&gt;add&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xAXPY: 2つのベクトル／行列の要素を加算する (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/dot.html&#34;&gt;dot&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xDOT, xDOTU: 2つのベクトルのドット積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/dotc.html&#34;&gt;dotc&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xDOTC: 2つのベクトルの複素共役ドット積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/sum_of_squares_result.html&#34;&gt;sum_of_squares_result&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vector_sum_of_squares&lt;/code&gt;の結果型 (class template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/vector_sum_of_squares.html&#34;&gt;vector_sum_of_squares&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xLASSQ: ベクトル要素の平方和を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/vector_two_norm.html&#34;&gt;vector_two_norm&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xNRM2: ベクトルのユークリッドノルム(Euclidean norm)を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/vector_abs_sum.html&#34;&gt;vector_abs_sum&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xASUM: ベクトル要素の絶対値和を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/vector_idx_abs_max.html&#34;&gt;vector_idx_abs_max&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xIAMAX: ベクトル要素のうち最大絶対値インデクスを返す (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/matrix_frob_norm.html&#34;&gt;matrix_frob_norm&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;行列のフロベニウスノルム(Frobenius norm)を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/matrix_one_norm.html&#34;&gt;matrix_one_norm&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;行列の1ノルム(One norm)を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/matrix_inf_norm.html&#34;&gt;matrix_inf_norm&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;行列の無限大ノルム(Infinity norm)を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;BLAS 2アルゴリズム&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/matrix_vector_product.html&#34;&gt;matrix_vector_product&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xGEMV: 一般行列とベクトルの積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/symmetric_matrix_vector_product.html&#34;&gt;symmetric_matrix_vector_product&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xSYMV: 対称行列とベクトルの積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/hermitian_matrix_vector_product.html&#34;&gt;hermitian_matrix_vector_product&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xHEMV: ハミルトニアン行列とベクトルの積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/triangular_matrix_vector_product.html&#34;&gt;triangular_matrix_vector_product&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xTRMV: 三角行列とベクトルの積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/triangular_matrix_vector_solve.html&#34;&gt;triangular_matrix_vector_solve&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xTRSV: 三角行列を係数とする行列方程式を解く (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/matrix_rank_1_update.html&#34;&gt;matrix_rank_1_update&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xGER, xGERU: 行列のRank-1更新 (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/matrix_rank_1_update_c.html&#34;&gt;matrix_rank_1_update_c&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xGERC: 複素行列のRank-1更新 (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/symmetric_matrix_rank_1_update.html&#34;&gt;symmetric_matrix_rank_1_update&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xSYR: 対称行列のRank-1更新 (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/hermitian_matrix_rank_1_update.html&#34;&gt;hermitian_matrix_rank_1_update&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xHER: ハミルトニアン行列のRank-1更新 (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/symmetric_matrix_rank_2_update.html&#34;&gt;symmetric_matrix_rank_2_update&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xSYR2: 対称行列のRank-2更新 (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/hermitian_matrix_rank_2_update.html&#34;&gt;hermitian_matrix_rank_2_update&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xHER2: ハミルトニアン行列のRank-2更新 (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;BLAS 3アルゴリズム&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/matrix_product.html&#34;&gt;matrix_product&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xGEMM: 2つの一般行列の積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/symmetric_matrix_product.html&#34;&gt;symmetric_matrix_product&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xSYMM: 対称行列と行列の積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hermitian_matrix_product&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xHEMM: ハミルトニアン行列と行列の積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;triangular_matrix_product&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xTRMM: 三角行列と行列の積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;triangular_matrix_left_product&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xTRMM: In-placeに三角行列と行列の積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;triangular_matrix_right_product&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xTRMM: In-placeに三角行列と行列の積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;symmetric_matrix_rank_k_update&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xSYRK: 対称行列のRank-k更新 (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hermitian_matrix_rank_k_update&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xHERK: ハミルトニアン行列のRank-k更新 (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;symmetric_matrix_rank_2k_update&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xSYR2K: 対称行列のRank-2k更新 (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hermitian_matrix_rank_2k_update&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xHER2K: ハミルトニアン行列のRank-2k更新 (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;triangular_matrix_matrix_left_solve&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xTRSM: 三角行列の連立一次方程式を解く (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;triangular_matrix_matrix_right_solve&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xTRSM: 三角行列の連立一次方程式を解く (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;タグ&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;linalg&amp;gt;&lt;/code&gt;ヘッダでは、行列の格納順序や三角行列の上下をタグを使って表現している。&lt;/p&gt;
&lt;h3&gt;格納順序&lt;/h3&gt;
&lt;p&gt;行列の格納順序を表すタグ。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/column_major_t.html&#34;&gt;column_major_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;列優先(column-major)を表すタグ型&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/column_major_t.html&#34;&gt;column_major&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;列優先(column-major)を表すタグ値&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/row_major_t.html&#34;&gt;row_major_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;行優先(row-major)を表すタグ型&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/row_major_t.html&#34;&gt;row_major&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;行優先(row-major)を表すタグ値&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;三角行列&lt;/h3&gt;
&lt;p&gt;上三角行列か下三角行列かを表すタグ。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/upper_triangle_t.html&#34;&gt;upper_triangle_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;上三角行列を表すタグ型&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/upper_triangle_t.html&#34;&gt;upper_triangle&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;上三角行列を表すタグ値&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/lower_triangle_t.html&#34;&gt;lower_triangle_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;下三角行列を表すタグ型&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/lower_triangle_t.html&#34;&gt;lower_triangle&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;下三角行列を表すタグ値&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;対角成分&lt;/h3&gt;
&lt;p&gt;行列の全ての対角成分を暗黙に乗法における単位元とみなすかどうかを表すタグ。みなした場合、行列の対角成分にはアクセスせず、値が乗法における単位元であるとして計算する。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/implicit_unit_diagonal_t.html&#34;&gt;implicit_unit_diagonal_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;全ての対角成分を暗黙に乗法における単位元とみなすタグ型&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/implicit_unit_diagonal_t.html&#34;&gt;implicit_unit_diagonal&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;全ての対角成分を暗黙に乗法における単位元とみなすタグ値&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/explicit_diagonal_t.html&#34;&gt;explicit_diagonal_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;全ての対角成分にアクセスするタグ型&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/explicit_diagonal_t.html&#34;&gt;explicit_diagonal&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;全ての対角成分にアクセスするタグ値&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++26&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;関連項目&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;mdspan.html&#34;&gt;&amp;lt;mdspan&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p1673r13.html&#34; target=&#34;_blank&#34;&gt;P1673R13 A free function linear algebra interface based on the BLAS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p1674r2.html&#34; target=&#34;_blank&#34;&gt;P1674R2: Evolving a Standard C++ Linear Algebra Library from the BLAS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/CppCon/CppCon2023/blob/main/Presentations/stdlinalg_linear_algebra_coming_to_standard_cpp.pdf&#34; target=&#34;_blank&#34;&gt;std::linalg: Linear Algebra Coming to Standard C++&lt;/a&gt;, CppCon 2023&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.netlib.org/blas/&#34; target=&#34;_blank&#34;&gt;BLAS (Basic Linear Algebra Subprograms)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://eel.is/c++draft/complex.numbers&#34; target=&#34;_blank&#34;&gt;Numerics library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>symmetric_matrix_product -- linalg : symmetric_matrix_productを追加 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/symmetric_matrix_product.html"/>
      <id>d837379c34e50fca26968cbe45c42a0747a2b8fc:reference/linalg/symmetric_matrix_product.md</id>
      <updated>2024-07-08T19:34:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/symmetric_matrix_product.md b/reference/linalg/symmetric_matrix_product.md
new file mode 100644
index 000000000..4928b2465
--- /dev/null
+++ b/reference/linalg/symmetric_matrix_product.md
@@ -0,0 +1,365 @@
+# symmetric_matrix_product
+
+
+* [mathjax enable]
+* linalg[meta header]
+* function template[meta id-type]
+* std::linalg[meta namespace]
+* cpp26[meta cpp]
+
+
+```cpp
+namespace std::linalg {
+  template&amp;lt;in-matrix InMat1,
+           class Triangle,
+           in-matrix InMat2,
+           out-matrix OutMat&amp;gt;
+  void symmetric_matrix_product(
+    InMat1 A,
+    Triangle t,
+    InMat2 B,
+    OutMat C); // (1)
+
+  template&amp;lt;class ExecutionPolicy,
+           in-matrix InMat1,
+           class Triangle,
+           in-matrix InMat2,
+           out-matrix OutMat&amp;gt;
+  void symmetric_matrix_product(
+    ExecutionPolicy&amp;amp;&amp;amp; exec,
+    InMat1 A,
+    Triangle t,
+    InMat2 B,
+    OutMat C); // (2)
+
+  template&amp;lt;in-matrix InMat1,
+           in-matrix InMat2,
+           class Triangle,
+           out-matrix OutMat&amp;gt;
+  void symmetric_matrix_product(
+    InMat1 A,
+    InMat2 B,
+    Triangle t,
+    OutMat C); // (3)
+
+  template&amp;lt;class ExecutionPolicy,
+           in-matrix InMat1,
+           in-matrix InMat2,
+           class Triangle,
+           out-matrix OutMat&amp;gt;
+  void symmetric_matrix_product(
+    ExecutionPolicy&amp;amp;&amp;amp; exec,
+    InMat1 A,
+    InMat2 B,
+    Triangle t,
+    OutMat C); // (4)
+
+  template&amp;lt;in-matrix InMat1,
+           class Triangle,
+           in-matrix InMat2,
+           in-matrix InMat3,
+           out-matrix OutMat&amp;gt;
+  void symmetric_matrix_product(
+    InMat1 A,
+    Triangle t,
+    InMat2 B,
+    InMat3 E,
+    OutMat C); // (5)
+
+  template&amp;lt;class ExecutionPolicy,
+           in-matrix InMat1,
+           class Triangle,
+           in-matrix InMat2,
+           in-matrix InMat3,
+           out-matrix OutMat&amp;gt;
+  void symmetric_matrix_product(
+    ExecutionPolicy&amp;amp;&amp;amp; exec,
+    InMat1 A,
+    Triangle t,
+    InMat2 B,
+    InMat3 E,
+    OutMat C); // (6)
+
+  template&amp;lt;in-matrix InMat1,
+           in-matrix InMat2,
+           class Triangle,
+           in-matrix InMat3,
+           out-matrix OutMat&amp;gt;
+  void symmetric_matrix_product(
+    InMat1 A,
+    InMat2 B,
+    Triangle t,
+    InMat3 E,
+    OutMat C); // (7)
+
+  template&amp;lt;class ExecutionPolicy,
+           in-matrix InMat1,
+           in-matrix InMat2,
+           class Triangle,
+           in-matrix InMat3,
+           out-matrix OutMat&amp;gt;
+  void symmetric_matrix_product(
+    ExecutionPolicy&amp;amp;&amp;amp; exec,
+    InMat1 A,
+    InMat2 B,
+    Triangle t,
+    InMat3 E,
+    OutMat C); // (8)
+}
+```
+
+
+## 概要
+行列同士の積を計算する。
+
+- (1): 三角行列`A`と行列`B`に対し、$C \leftarrow AB$
+- (2): (1)を指定された実行ポリシーで実行する。
+- (3): 行列`A`と三角行列`B`に対し、$C \leftarrow AB$
+- (4): (3)を指定された実行ポリシーで実行する。
+- (5): 三角行列`A`と行列`B`に対し、$C \leftarrow E + AB$
+- (6): (5)を指定された実行ポリシーで実行する。
+- (7): 行列`A`と三角行列`B`に対し、$C \leftarrow E + AB$
+- (8): (7)を指定された実行ポリシーで実行する。
+
+
+## 適格要件
+- 共通
+  + `Triangle`は[`upper_triangle_t`](upper_triangle_t.md)または[`lower_triangle_t`](lower_triangle_t.md)
+  + [`possibly-multipliable`](possibly-multipliable.md)`&amp;lt;decltype(A), decltype(B), decltype(C)&amp;gt;()`が`true`
+- (1), (2), (5), (6): `InMat1`(`A`の型)が[`layout_blas_packed`](layout_blas_packed.md)を持つなら、レイアウトの`Triangle`テンプレート引数とこの関数の`Triangle`テンプレート引数が同じ型
+- (1), (2), (5), (6): [`compatible-static-extents`](compatible-static-extents.md)`&amp;lt;decltype(A), decltype(A)&amp;gt;(0, 1)`が`true` (つまり`A`が正方行列であること)
+- (3), (4), (7), (8): `InMat2`(`B`の型)が[`layout_blas_packed`](layout_blas_packed.md)を持つなら、レイアウトの`Triangle`テンプレート引数とこの関数の`Triangle`テンプレート引数が同じ型
+- (3), (4), (7), (8): [`compatible-static-extents`](compatible-static-extents.md)`&amp;lt;decltype(B), decltype(B)&amp;gt;(0, 1)`が`true` (つまり`B`が正方行列であること)
+- (5), (6), (7), (8): [`possibly-addable`](possibly-addable.md)`&amp;lt;decltype(E),decltype(E),decltype(C)&amp;gt;()`が`true`
+
+
+## 事前条件
+- 共通
+  + [`multipliable`](multipliable.md)`(A, B, C) == true`
+- (1), (2), (5), (6): [`A.extent(0) == A.extent(1)`]
+- (3), (4), (7), (8): [`B.extent(0) == B.extent(1)`]
+- (5), (6), (7), (8): [`addable`](addable.md)`(E, E, C) == true`
+
+
+## 効果
+- (1), (2): 三角行列`A`と行列`B`に対し、$C \leftarrow AB$
+- (3), (4): 行列`A`と三角行列`B`に対し、$C \leftarrow AB$
+- (5), (6): 三角行列`A`と行列`B`に対し、$C \leftarrow E + AB$
+- (7), (8): 行列`A`と三角行列`B`に対し、$C \leftarrow E + AB$
+
+
+## 戻り値
+なし
+
+
+## 計算量
+$O(\verb|A.extent(0)| \times \verb|A.extent(1)| \times \verb|B.extent(1)|)$
+
+
+## 備考
+- (5), (6), (7), (8): `C`に`E`を入れても良い。
+
+
+## 例
+**[注意] 処理系にあるコンパイラで確認していないため、間違っているかもしれません。**
+
+```cpp example
+#include &amp;lt;array&amp;gt;
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;linalg&amp;gt;
+#include &amp;lt;mdspan&amp;gt;
+#include &amp;lt;vector&amp;gt;
+
+template &amp;lt;class Matrix&amp;gt;
+void print_mat(const Matrix&amp;amp; A) {
+  for(int i = 0; i &amp;lt; A.extent(0); ++i) {
+    for(int j = 0; j &amp;lt; A.extent(1) - 1; ++j) {
+      std::cout &amp;lt;&amp;lt; A[i, j] &amp;lt;&amp;lt; &amp;#39; &amp;#39;;
+    }
+    std::cout &amp;lt;&amp;lt; A[i, A.extent(1) - 1] &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
+  }
+}
+
+template &amp;lt;class Matrix&amp;gt;
+void init_mat(Matrix&amp;amp; A, typename Matrix::value_type geta = 1) {
+  for(int i = 0; i &amp;lt; A.extent(0); ++i) {
+    for(int j = 0; j &amp;lt; A.extent(1); ++j) {
+      A[i, j] = i * A.extent(1) + j + geta;
+    }
+  }
+}
+
+template &amp;lt;class Matrix&amp;gt;
+void init_symm_mat(Matrix&amp;amp; A) {
+  for(int i = 0; i &amp;lt; A.extent(0); ++i) {
+    for(int j = i; j &amp;lt; A.extent(1); ++j) {
+      A[i, j] = i * A.extent(1) + j;
+    }
+  }
+}
+
+int main()
+{
+  constexpr size_t N = 2;
+
+  std::vector&amp;lt;double&amp;gt; A_vec(N * N);
+  std::vector&amp;lt;double&amp;gt; B_vec(N * N);
+  std::vector&amp;lt;double&amp;gt; C_vec(N * N);
+  std::vector&amp;lt;double&amp;gt; E_vec(N * N);
+
+  std::mdspan C(C_vec.data(), N, N);
+  std::mdspan E(E_vec.data(), N, N);
+
+  init_mat(E, N * N);
+
+  {
+    std::mdspan&amp;lt;
+      double,
+      std::extents&amp;lt;size_t, N, N&amp;gt;,
+      std::linalg::layout_blas_packed&amp;lt;
+        std::linalg::upper_triangle_t,
+        std::linalg::row_major_t&amp;gt;
+    &amp;gt; A(A_vec.data());
+    std::mdspan B(B_vec.data(), N, N);
+
+    init_symm_mat(A);
+    init_mat(B);
+
+    // (1)
+    std::cout &amp;lt;&amp;lt; &amp;#34;(1)\n&amp;#34;;
+    std::linalg::symmetric_matrix_product(A, std::linalg::upper_triangle, B, C);
+    print_mat(C);
+
+    // (2)
+    std::cout &amp;lt;&amp;lt; &amp;#34;(2)\n&amp;#34;;
+    std::linalg::symmetric_matrix_product(std::execution::par, A, std::linalg::upper_triangle, B, C);
+    print_mat(C);
+  }
+
+  {
+    std::mdspan A(A_vec.data(), N, N);
+    std::mdspan&amp;lt;
+      double,
+      std::extents&amp;lt;size_t, N, N&amp;gt;,
+      std::linalg::layout_blas_packed&amp;lt;
+        std::linalg::upper_triangle_t,
+        std::linalg::row_major_t&amp;gt;
+    &amp;gt; B(B_vec.data());
+
+    init_mat(A);
+    init_symm_mat(B);
+
+    // (3)
+    std::cout &amp;lt;&amp;lt; &amp;#34;(3)\n&amp;#34;;
+    std::linalg::symmetric_matrix_product(A, B, std::linalg::upper_triangle, C);
+    print_mat(C);
+
+    // (4)
+    std::cout &amp;lt;&amp;lt; &amp;#34;(4)\n&amp;#34;;
+    std::linalg::symmetric_matrix_product(std::execution::par, A, B, std::linalg::upper_triangle, C);
+    print_mat(C);
+  }
+
+  {
+    std::mdspan&amp;lt;
+      double,
+      std::extents&amp;lt;size_t, N, N&amp;gt;,
+      std::linalg::layout_blas_packed&amp;lt;
+        std::linalg::upper_triangle_t,
+        std::linalg::row_major_t&amp;gt;
+    &amp;gt; A(A_vec.data());
+    std::mdspan B(B_vec.data(), N, N);
+
+    init_symm_mat(A);
+    init_mat(B);
+
+    // (5)
+    std::cout &amp;lt;&amp;lt; &amp;#34;(5)\n&amp;#34;;
+    std::linalg::symmetric_matrix_product(A, std::linalg::upper_triangle, B, E, C);
+    print_mat(C);
+
+    // (6)
+    std::cout &amp;lt;&amp;lt; &amp;#34;(6)\n&amp;#34;;
+    std::linalg::symmetric_matrix_product(std::execution::par, A, std::linalg::upper_triangle, B, E, C);
+    print_mat(C);
+  }
+
+  {
+    std::mdspan A(A_vec.data(), N, N);
+    std::mdspan&amp;lt;
+      double,
+      std::extents&amp;lt;size_t, N, N&amp;gt;,
+      std::linalg::layout_blas_packed&amp;lt;
+        std::linalg::upper_triangle_t,
+        std::linalg::row_major_t&amp;gt;
+    &amp;gt; B(B_vec.data());
+
+    init_mat(A);
+    init_symm_mat(B);
+
+    // (7)
+    std::cout &amp;lt;&amp;lt; &amp;#34;(7)\n&amp;#34;;
+    std::linalg::symmetric_matrix_product(A, B, std::linalg::upper_triangle, E, C);
+    print_mat(C);
+
+    // (8)
+    std::cout &amp;lt;&amp;lt; &amp;#34;(8)\n&amp;#34;;
+    std::linalg::symmetric_matrix_product(std::execution::par, A, B, std::linalg::upper_triangle, E, C);
+    print_mat(C);
+  }
+
+  return 0;
+}
+```
+
+
+### 出力
+```
+(1)
+7 8
+11 16
+(2)
+7 8
+11 16
+(3)
+5 8
+11 18
+(4)
+5 8
+11 18
+(5)
+11 13
+17 23
+(6)
+11 13
+17 23
+(7)
+9 13
+17 25
+(8)
+9 13
+17 25
+```
+
+
+## バージョン
+### 言語
+- C++26
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
+
+
+## 関連項目
+- [`execution`](/reference/execution.md)
+- [`mdspan`](/reference/mdspan.md)
+- [`upper_triangle_t`](upper_triangle_t.md)
+- [`lower_triangle_t`](lower_triangle_t.md)
+
+
+## 参照
+- [P1673R13 A free function linear algebra interface based on the BLAS](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p1673r13.html)
+- [LAPACK: {he,sy}mm: Hermitian/symmetric matrix-matrix multiply](https://netlib.org/lapack/explore-html/d0/d16/group__hemm.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>エイリアステンプレート [N2258] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/alias_templates.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/alias_templates.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/alias_templates.md b/lang/cpp11/alias_templates.md
index 2b3424901..c2108cbf7 100644
--- a/lang/cpp11/alias_templates.md
+++ b/lang/cpp11/alias_templates.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>alignas [N2341] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/alignas.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/alignas.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/alignas.md b/lang/cpp11/alignas.md
index 4786b90c9..a97dbd4a0 100644
--- a/lang/cpp11/alignas.md
+++ b/lang/cpp11/alignas.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>alignof [N2341] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/alignof.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/alignof.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/alignof.md b/lang/cpp11/alignof.md
index 35472e462..08731ddf9 100644
--- a/lang/cpp11/alignof.md
+++ b/lang/cpp11/alignof.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>属性構文 [N2761] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/attributes.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/attributes.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/attributes.md b/lang/cpp11/attributes.md
index ef465af36..803308f06 100644
--- a/lang/cpp11/attributes.md
+++ b/lang/cpp11/attributes.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>auto [N1984] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/auto.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/auto.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/auto.md b/lang/cpp11/auto.md
index 23907ac33..5273c1cbf 100644
--- a/lang/cpp11/auto.md
+++ b/lang/cpp11/auto.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>C99互換で導入された定義済みマクロ -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/c99_predefined_macros.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/c99_predefined_macros.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;C99互換で導入された定義済みマクロ&lt;/span&gt;&lt;span class=&#34;cpp cpp11&#34; title=&#34;C++11で追加&#34;&gt;(C++11)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;このページはC++11に採用された言語機能の変更を解説しています。&lt;/p&gt;
&lt;p&gt;のちのC++規格でさらに変更される場合があるため&lt;a href=&#34;#relative-page&#34;&gt;関連項目&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;定義済みマクロの値が、以下のように更新された：&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;マクロ名&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__STDC_HOSTED__&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;実装がホスト実装である場合は&lt;code&gt;1&lt;/code&gt;、そうでない場合（つまり、フリースタンディング実装である場合）は&lt;code&gt;0&lt;/code&gt;として定義される&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__STDC_VERSION__&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;標準Cのバージョンを表す値（C95 では &lt;code&gt;199409L&lt;/code&gt;、C99 では &lt;code&gt;199901L&lt;/code&gt;、C11 では &lt;code&gt;201112L&lt;/code&gt;、C90 では定義されていない）。&lt;br /&gt;このマクロが定義されているか否か、および、定義されている場合の値は実装依存である。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__STDC_ISO_10646__&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;wchar_t&lt;/code&gt;の文字が、Unicodeの規格であるISO/IEC 10646の、yyyymm年の仕様を満たしている場合に定義される。&lt;br /&gt;このマクロの値は、&lt;code&gt;yyyymmL&lt;/code&gt;の形式の整数値として定義される。yは年、mは月を表す。yとmそれぞれの個数は、桁数を表す。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;#relative-page&#34; id=&#34;relative-page&#34;&gt;関連項目&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;predefined_macros.html&#34;&gt;C++11 更新された定義済みマクロ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2004/n1653.htm&#34; target=&#34;_blank&#34;&gt;N1653 Working draft changes for C99 preprocessor synchronization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_defects.html#630&#34; target=&#34;_blank&#34;&gt;CWG Issue 630. Equality of narrow and wide character values in the basic character set&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>char16_tとchar32_t [N2249] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/char16_32.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/char16_32.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/char16_32.md b/lang/cpp11/char16_32.md
index 5e4af4f70..b60008aa3 100644
--- a/lang/cpp11/char16_32.md
+++ b/lang/cpp11/char16_32.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexpr [N2235] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/constexpr.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/constexpr.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/constexpr.md b/lang/cpp11/constexpr.md
index b2c08fd27..8e8b96c5f 100644
--- a/lang/cpp11/constexpr.md
+++ b/lang/cpp11/constexpr.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>decltype [N2343] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/decltype.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/decltype.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/decltype.md b/lang/cpp11/decltype.md
index 9eba0a241..05e9f974d 100644
--- a/lang/cpp11/decltype.md
+++ b/lang/cpp11/decltype.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>関数のdefault／delete宣言 [N2346] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/defaulted_and_deleted_functions.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/defaulted_and_deleted_functions.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/defaulted_and_deleted_functions.md b/lang/cpp11/defaulted_and_deleted_functions.md
index 737eded01..bb5bff003 100644
--- a/lang/cpp11/defaulted_and_deleted_functions.md
+++ b/lang/cpp11/defaulted_and_deleted_functions.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>委譲コンストラクタ [N1986] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/delegating_constructors.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/delegating_constructors.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/delegating_constructors.md b/lang/cpp11/delegating_constructors.md
index 95712392b..8bf2fa178 100644
--- a/lang/cpp11/delegating_constructors.md
+++ b/lang/cpp11/delegating_constructors.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>依存名に対するtypenameとtemplateの制限緩和 -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/dependent_name_specifier_outside_of_templates.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/dependent_name_specifier_outside_of_templates.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/dependent_name_specifier_outside_of_templates.md b/lang/cpp11/dependent_name_specifier_outside_of_templates.md
index adc15f438..96c267844 100644
--- a/lang/cpp11/dependent_name_specifier_outside_of_templates.md
+++ b/lang/cpp11/dependent_name_specifier_outside_of_templates.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>registerキーワードを非推奨化 -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/deprecation_of_the_register_keyword.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/deprecation_of_the_register_keyword.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/deprecation_of_the_register_keyword.md b/lang/cpp11/deprecation_of_the_register_keyword.md
index 6853e47bf..de0e1de6e 100644
--- a/lang/cpp11/deprecation_of_the_register_keyword.md
+++ b/lang/cpp11/deprecation_of_the_register_keyword.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>宣言時に要素数を指定した配列オブジェクトの、定義時の要素数を規定 -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/earlier_declarated_array_bounds.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/earlier_declarated_array_bounds.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/earlier_declarated_array_bounds.md b/lang/cpp11/earlier_declarated_array_bounds.md
index 94d746127..133f95327 100644
--- a/lang/cpp11/earlier_declarated_array_bounds.md
+++ b/lang/cpp11/earlier_declarated_array_bounds.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>明示的な型変換演算子のオーバーロード [N2437] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/explicit_conversion_operator.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/explicit_conversion_operator.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/explicit_conversion_operator.md b/lang/cpp11/explicit_conversion_operator.md
index 393523cdf..22d5b87b8 100644
--- a/lang/cpp11/explicit_conversion_operator.md
+++ b/lang/cpp11/explicit_conversion_operator.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>friend宣言できる対象を拡張 [N1791] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/extend_friend_targets.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/extend_friend_targets.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/extend_friend_targets.md b/lang/cpp11/extend_friend_targets.md
index 3452a098b..0a11daa11 100644
--- a/lang/cpp11/extend_friend_targets.md
+++ b/lang/cpp11/extend_friend_targets.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sizeof演算子にクラスの非静的メンバを、オブジェクトを作らずに指定できるようにする -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/extending_sizeof_to_apply_to_non_static_data_members_without_an_object.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/extending_sizeof_to_apply_to_non_static_data_members_without_an_object.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/extending_sizeof_to_apply_to_non_static_data_members_without_an_object.md b/lang/cpp11/extending_sizeof_to_apply_to_non_static_data_members_without_an_object.md
index 1b8e16d85..d13a9b3d0 100644
--- a/lang/cpp11/extending_sizeof_to_apply_to_non_static_data_members_without_an_object.md
+++ b/lang/cpp11/extending_sizeof_to_apply_to_non_static_data_members_without_an_object.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>extern template [N1987] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/extern_template.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/extern_template.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/extern_template.md b/lang/cpp11/extern_template.md
index c32818e01..e62ec385d 100644
--- a/lang/cpp11/extern_template.md
+++ b/lang/cpp11/extern_template.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>機能テストマクロ -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/feature_test_macros.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/feature_test_macros.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;機能テストマクロ&lt;/span&gt;&lt;span class=&#34;cpp cpp11&#34; title=&#34;C++11で追加&#34;&gt;(C++11)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;このページはC++11に採用された言語機能の変更を解説しています。&lt;/p&gt;
&lt;p&gt;のちのC++規格でさらに変更される場合があるため&lt;a href=&#34;#relative-page&#34;&gt;関連項目&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;SD-6 は C++11 の機能について以下のテストマクロを定義することを推奨している：&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;マクロ名&lt;/th&gt;
&lt;th&gt;値&lt;/th&gt;
&lt;th&gt;機能&lt;/th&gt;
&lt;th&gt;ヘッダ&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_alias_templates&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;200704&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;alias_templates.html&#34;&gt;エイリアステンプレート&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;predefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_attributes&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;200809&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;attributes.html&#34;&gt;属性&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;predefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_constexpr&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;200704&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;constexpr.html&#34;&gt;constexpr&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;predefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_decltype&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;200707&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;decltype.html&#34;&gt;decltype&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;predefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_delegating_constructors&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;200604&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;delegating_constructors.html&#34;&gt;委譲コンストラクタ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;predefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_inheriting_constructors&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;200802&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;inheriting_constructors.html&#34;&gt;継承コンストラクタ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;predefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_initializer_lists&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;200806&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;initializer_lists.html&#34;&gt;初期化子リスト&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;predefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lambdas&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;200907&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;lambda_expressions.html&#34;&gt;ラムダ式&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;predefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_nsdmi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;200809&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;non_static_data_member_initializers.html&#34;&gt;非静的メンバ変数初期化子&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;predefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_range_based_for&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;200907&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;range_based_for.html&#34;&gt;範囲for文&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;predefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_raw_strings&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;200710&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;raw_string_literals.html&#34;&gt;生文字列リテラル&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;predefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_ref_qualifiers&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;200710&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;ref_qualifier_for_this.html&#34;&gt;&lt;code&gt;*this&lt;/code&gt; のムーブセマンティクス&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;predefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_rvalue_references&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;200610&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;rvalue_ref_and_move_semantics.html&#34;&gt;右辺値参照&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;predefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_static_assert&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;200410&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;static_assert.html&#34;&gt;コンパイル時アサート&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;predefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_unicode_characters&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;200704&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;char16_32.html&#34;&gt;ユニコード文字&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;predefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_unicode_literals&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;200710&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;char16_32.html&#34;&gt;ユニコードリテラル&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;predefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_user_defined_literals&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;200809&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;user_defined_literals.html&#34;&gt;ユーザー定義リテラル&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;predefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_variadic_templates&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;200704&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;variadic_templates.html&#34;&gt;可変引数テンプレート&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;predefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__has_cpp_attribute(carries_dependency)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;200809&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;attributes.html#carries_dependency&#34;&gt;属性&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;predefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__has_cpp_attribute(noreturn)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;200809&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;attributes.html#noreturn&#34;&gt;属性&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;predefined&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://isocpp.org/std/standing-documents/sd-6-sg10-feature-test-recommendations#recs.cpp11&#34; target=&#34;_blank&#34;&gt;SD-6: SG10 Feature Test Recommendations: Standard C++&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>事前定義識別子__func__ [N1653] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/func.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/func.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/func.md b/lang/cpp11/func.md
index 403f0db99..e6a6baa91 100644
--- a/lang/cpp11/func.md
+++ b/lang/cpp11/func.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>入れ子名の指定にグローバルスコープ :: を付加することを許可 -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/global_scope_syntax_in_nested_name_specifier.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/global_scope_syntax_in_nested_name_specifier.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/global_scope_syntax_in_nested_name_specifier.md b/lang/cpp11/global_scope_syntax_in_nested_name_specifier.md
index 7eaa5fa38..8787c5e7c 100644
--- a/lang/cpp11/global_scope_syntax_in_nested_name_specifier.md
+++ b/lang/cpp11/global_scope_syntax_in_nested_name_specifier.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>継承コンストラクタ [N2540] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/inheriting_constructors.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/inheriting_constructors.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/inheriting_constructors.md b/lang/cpp11/inheriting_constructors.md
index e99d4013c..10dda8705 100644
--- a/lang/cpp11/inheriting_constructors.md
+++ b/lang/cpp11/inheriting_constructors.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>初期化子リスト [N2672] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/initializer_lists.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/initializer_lists.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/initializer_lists.md b/lang/cpp11/initializer_lists.md
index 962448cb4..fd0dffab9 100644
--- a/lang/cpp11/initializer_lists.md
+++ b/lang/cpp11/initializer_lists.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>インライン名前空間 [N2535] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/inline_namespaces.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/inline_namespaces.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/inline_namespaces.md b/lang/cpp11/inline_namespaces.md
index a25299be5..36986907a 100644
--- a/lang/cpp11/inline_namespaces.md
+++ b/lang/cpp11/inline_namespaces.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ラムダ式 [N2927] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/lambda_expressions.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/lambda_expressions.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/lambda_expressions.md b/lang/cpp11/lambda_expressions.md
index dd1bd263d..f1d58c96e 100644
--- a/lang/cpp11/lambda_expressions.md
+++ b/lang/cpp11/lambda_expressions.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ローカル型と無名型を、テンプレート引数として使用することを許可 [N2657] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/local_and_unnamed_type_as_template_arguments.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/local_and_unnamed_type_as_template_arguments.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/local_and_unnamed_type_as_template_arguments.md b/lang/cpp11/local_and_unnamed_type_as_template_arguments.md
index 8370caab9..4b7096e83 100644
--- a/lang/cpp11/local_and_unnamed_type_as_template_arguments.md
+++ b/lang/cpp11/local_and_unnamed_type_as_template_arguments.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>long long型 [N1811] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/long_long_type.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/long_long_type.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/long_long_type.md b/lang/cpp11/long_long_type.md
index 784b87306..4d38aaec0 100644
--- a/lang/cpp11/long_long_type.md
+++ b/lang/cpp11/long_long_type.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>noexcept [N3050] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/noexcept.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/noexcept.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/noexcept.md b/lang/cpp11/noexcept.md
index 3a4bfa56d..5bd496b72 100644
--- a/lang/cpp11/noexcept.md
+++ b/lang/cpp11/noexcept.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>非静的メンバ変数の初期化 [N2756] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/non_static_data_member_initializers.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/non_static_data_member_initializers.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/non_static_data_member_initializers.md b/lang/cpp11/non_static_data_member_initializers.md
index d2f6a64cb..991ae8f0b 100644
--- a/lang/cpp11/non_static_data_member_initializers.md
+++ b/lang/cpp11/non_static_data_member_initializers.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>nullptr [N2431] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/nullptr.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/nullptr.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/nullptr.md b/lang/cpp11/nullptr.md
index c36181e2f..509336fc4 100644
--- a/lang/cpp11/nullptr.md
+++ b/lang/cpp11/nullptr.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>overrideとfinal [N2928] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/override_final.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/override_final.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/override_final.md b/lang/cpp11/override_final.md
index 06fa189b6..a1d082e0a 100644
--- a/lang/cpp11/override_final.md
+++ b/lang/cpp11/override_final.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Pragma演算子 [N1653] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/pragma_operator.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/pragma_operator.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/pragma_operator.md b/lang/cpp11/pragma_operator.md
index 6e71a2faf..698fb535a 100644
--- a/lang/cpp11/pragma_operator.md
+++ b/lang/cpp11/pragma_operator.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>更新された定義済みマクロ -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/predefined_macros.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/predefined_macros.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;更新された定義済みマクロ&lt;/span&gt;&lt;span class=&#34;cpp cpp11&#34; title=&#34;C++11で追加&#34;&gt;(C++11)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;このページはC++11に採用された言語機能の変更を解説しています。&lt;/p&gt;
&lt;p&gt;のちのC++規格でさらに変更される場合があるため&lt;a href=&#34;#relative-page&#34;&gt;関連項目&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;定義済みマクロの値が、以下のように更新された：&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;マクロ名&lt;/th&gt;
&lt;th&gt;値&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cplusplus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201103L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;C++のバージョン値を表す&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;以下のマクロが新たに追加された：&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;マクロ名&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__STDCPP_STRICT_POINTER_SAFETY__&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;実装がポインタの厳密な安全性を持っている場合、整数値&lt;code&gt;1&lt;/code&gt;として定義される&lt;br /&gt;本マクロ定数はC++23で削除される&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__STDCPP_THREADS__&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;プログラムが複数のスレッドを実行できる場合、整数値&lt;code&gt;1&lt;/code&gt;として定義される&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__STDC_MB_MIGHT_NEQ_WC__&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;このマクロが整数型の定数&lt;code&gt;1&lt;/code&gt;として定義されている場合、基本文字集合に含まれる文字のリテラルが、&lt;code&gt;char&lt;/code&gt;と&lt;code&gt;wchar_t&lt;/code&gt;で異なる値を持つ可能性がある。&lt;br /&gt;このマクロが定義されない場合には&lt;code&gt;&#39;x&#39; == L&#39;x&#39;&lt;/code&gt;が&lt;code&gt;true&lt;/code&gt;であることが保証され、そうでなければされない。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;#relative-page&#34; id=&#34;relative-page&#34;&gt;関連項目&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;c99_predefined_macros.html&#34;&gt;C++11 C99互換で導入された定義済みマクロ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2693.html&#34; target=&#34;_blank&#34;&gt;N2693 Requirements on programs and backwards compatibility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_defects.html#1169&#34; target=&#34;_blank&#34;&gt;CWG Issue 1169. Missing feature macro for strict pointer safety&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2186r2.html&#34; target=&#34;_blank&#34;&gt;P2186R2 Removing Garbage Collection Support&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;C++23でのマクロ&lt;code&gt;__STDCPP_STRICT_POINTER_SAFETY__&lt;/code&gt;削除&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>範囲for文 [N2930] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/range_based_for.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/range_based_for.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/range_based_for.md b/lang/cpp11/range_based_for.md
index 17ee409e7..17a78d075 100644
--- a/lang/cpp11/range_based_for.md
+++ b/lang/cpp11/range_based_for.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>生文字列リテラル [N2442] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/raw_string_literals.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/raw_string_literals.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/raw_string_literals.md b/lang/cpp11/raw_string_literals.md
index 98ef7b863..20bdfe8f9 100644
--- a/lang/cpp11/raw_string_literals.md
+++ b/lang/cpp11/raw_string_literals.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>テンプレート再帰回数の制限緩和 -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/recursive_template_limit.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/recursive_template_limit.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/recursive_template_limit.md b/lang/cpp11/recursive_template_limit.md
index b0f6da923..e32a1a0fe 100644
--- a/lang/cpp11/recursive_template_limit.md
+++ b/lang/cpp11/recursive_template_limit.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>メンバ関数の左辺値／右辺値修飾 [N2439] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/ref_qualifier_for_this.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/ref_qualifier_for_this.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/ref_qualifier_for_this.md b/lang/cpp11/ref_qualifier_for_this.md
index ef6c41baf..aa174c9ce 100644
--- a/lang/cpp11/ref_qualifier_for_this.md
+++ b/lang/cpp11/ref_qualifier_for_this.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>参照への参照を折りたたむ -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/reference_collapsing.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/reference_collapsing.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/reference_collapsing.md b/lang/cpp11/reference_collapsing.md
index 2168a08d4..3afd95492 100644
--- a/lang/cpp11/reference_collapsing.md
+++ b/lang/cpp11/reference_collapsing.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>テンプレートのエクスポート機能を削除 -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/remove_export_templates.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/remove_export_templates.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/remove_export_templates.md b/lang/cpp11/remove_export_templates.md
index 1d7e79a08..6d4877a3b 100644
--- a/lang/cpp11/remove_export_templates.md
+++ b/lang/cpp11/remove_export_templates.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>POSIX用の名前空間を予約 -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/reserved_namespaces_for_posix.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/reserved_namespaces_for_posix.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;POSIX用の名前空間を予約&lt;/span&gt;&lt;span class=&#34;cpp cpp11&#34; title=&#34;C++11で追加&#34;&gt;(C++11)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;このページはC++11に採用された言語機能の変更を解説しています。&lt;/p&gt;
&lt;p&gt;のちのC++規格でさらに変更される場合があるため&lt;a href=&#34;#relative-page&#34;&gt;関連項目&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;将来の標準化のために、POSIX用の名前空間として&lt;code&gt;std::posix&lt;/code&gt;と&lt;code&gt;::posix&lt;/code&gt;を予約する。&lt;/p&gt;
&lt;p&gt;これらの名前空間に宣言や定義を追加した場合、そのプログラムの動作は未定義となる。&lt;/p&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2542.htm&#34; target=&#34;_blank&#34;&gt;N2542 Reserved namespaces for POSIX&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>整数に対する除算と剰余算の丸め結果を規定 -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/result_of_integer_division_and_modulo.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/result_of_integer_division_and_modulo.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/result_of_integer_division_and_modulo.md b/lang/cpp11/result_of_integer_division_and_modulo.md
index 29d0d4505..3408e1c7b 100644
--- a/lang/cpp11/result_of_integer_division_and_modulo.md
+++ b/lang/cpp11/result_of_integer_division_and_modulo.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>テンプレートの右山カッコ [N1757] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/right_angle_brackets.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/right_angle_brackets.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/right_angle_brackets.md b/lang/cpp11/right_angle_brackets.md
index 63abe5945..29920e67c 100644
--- a/lang/cpp11/right_angle_brackets.md
+++ b/lang/cpp11/right_angle_brackets.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>右辺値参照・ムーブセマンティクス [N2118] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/rvalue_ref_and_move_semantics.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/rvalue_ref_and_move_semantics.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/rvalue_ref_and_move_semantics.md b/lang/cpp11/rvalue_ref_and_move_semantics.md
index 07f6c01b4..6d27237e8 100644
--- a/lang/cpp11/rvalue_ref_and_move_semantics.md
+++ b/lang/cpp11/rvalue_ref_and_move_semantics.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>スコープを持つ列挙型 [N2347] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/scoped_enum.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/scoped_enum.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/scoped_enum.md b/lang/cpp11/scoped_enum.md
index 28340f4d2..b404da838 100644
--- a/lang/cpp11/scoped_enum.md
+++ b/lang/cpp11/scoped_enum.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>任意の式によるSFINAE [N2634] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/sfinae_expressions.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/sfinae_expressions.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/sfinae_expressions.md b/lang/cpp11/sfinae_expressions.md
index dd5682c0a..ab4907396 100644
--- a/lang/cpp11/sfinae_expressions.md
+++ b/lang/cpp11/sfinae_expressions.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンパイル時アサート [N1720] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/static_assert.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/static_assert.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/static_assert.md b/lang/cpp11/static_assert.md
index b11c71f39..0d76aaab1 100644
--- a/lang/cpp11/static_assert.md
+++ b/lang/cpp11/static_assert.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ブロックスコープを持つstatic変数初期化のスレッドセーフ化 [N2660] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/static_initialization_thread_safely.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/static_initialization_thread_safely.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/static_initialization_thread_safely.md b/lang/cpp11/static_initialization_thread_safely.md
index 8f0c46ff8..cc7deff90 100644
--- a/lang/cpp11/static_initialization_thread_safely.md
+++ b/lang/cpp11/static_initialization_thread_safely.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>文字列リテラルとワイド文字列リテラルの結合 -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/string_literal_concatenation.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/string_literal_concatenation.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/string_literal_concatenation.md b/lang/cpp11/string_literal_concatenation.md
index 3c980eb43..dd9f678ef 100644
--- a/lang/cpp11/string_literal_concatenation.md
+++ b/lang/cpp11/string_literal_concatenation.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>スレッドローカルストレージ [N2659] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/thread_local_storage.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/thread_local_storage.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/thread_local_storage.md b/lang/cpp11/thread_local_storage.md
index 52cc0a323..685fc26fa 100644
--- a/lang/cpp11/thread_local_storage.md
+++ b/lang/cpp11/thread_local_storage.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>列挙子の末尾へのカンマ付加を許可 -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/trailing_comma_following_enumerator_list.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/trailing_comma_following_enumerator_list.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/trailing_comma_following_enumerator_list.md b/lang/cpp11/trailing_comma_following_enumerator_list.md
index aa7bdd73a..1050fb231 100644
--- a/lang/cpp11/trailing_comma_following_enumerator_list.md
+++ b/lang/cpp11/trailing_comma_following_enumerator_list.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>戻り値の型を後置する関数宣言構文 [N2541] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/trailing_return_types.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/trailing_return_types.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/trailing_return_types.md b/lang/cpp11/trailing_return_types.md
index b12bcd419..3ccc8ea02 100644
--- a/lang/cpp11/trailing_return_types.md
+++ b/lang/cpp11/trailing_return_types.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>一様初期化 [N2672] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/uniform_initialization.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/uniform_initialization.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/uniform_initialization.md b/lang/cpp11/uniform_initialization.md
index b9705fa30..bb0902594 100644
--- a/lang/cpp11/uniform_initialization.md
+++ b/lang/cpp11/uniform_initialization.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>共用体の制限解除 [N2544] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/unrestricted_unions.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/unrestricted_unions.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/unrestricted_unions.md b/lang/cpp11/unrestricted_unions.md
index 8d3671031..1fde6b9e2 100644
--- a/lang/cpp11/unrestricted_unions.md
+++ b/lang/cpp11/unrestricted_unions.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ユーザー定義リテラル [N2765] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/user_defined_literals.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/user_defined_literals.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/user_defined_literals.md b/lang/cpp11/user_defined_literals.md
index 5970ee0ed..144f806af 100644
--- a/lang/cpp11/user_defined_literals.md
+++ b/lang/cpp11/user_defined_literals.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>UTF-8文字列リテラル [N2442] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/utf8_string_literals.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/utf8_string_literals.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/utf8_string_literals.md b/lang/cpp11/utf8_string_literals.md
index 8d1c9bf06..919685ca1 100644
--- a/lang/cpp11/utf8_string_literals.md
+++ b/lang/cpp11/utf8_string_literals.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>可変引数マクロ [N1653] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/variadic_macros.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/variadic_macros.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/variadic_macros.md b/lang/cpp11/variadic_macros.md
index 5049cca1b..efd3507d4 100644
--- a/lang/cpp11/variadic_macros.md
+++ b/lang/cpp11/variadic_macros.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>可変引数テンプレート [N2242] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/variadic_templates.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp11/variadic_templates.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/variadic_templates.md b/lang/cpp11/variadic_templates.md
index adf5bfb45..045a6d03d 100644
--- a/lang/cpp11/variadic_templates.md
+++ b/lang/cpp11/variadic_templates.md
@@ -5,7 +5,7 @@
 
 このページはC++11に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>2進数リテラル [N3472] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/binary_literals.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp14/binary_literals.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/binary_literals.md b/lang/cpp14/binary_literals.md
index 20a3d19da..b07e75791 100644
--- a/lang/cpp14/binary_literals.md
+++ b/lang/cpp14/binary_literals.md
@@ -5,7 +5,7 @@
 
 このページはC++14に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ネストする集成体初期化における波カッコ省略を許可 [N3653] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/brace_elision_in_array_temporary_initialization.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp14/brace_elision_in_array_temporary_initialization.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/brace_elision_in_array_temporary_initialization.md b/lang/cpp14/brace_elision_in_array_temporary_initialization.md
index ea09d709d..7218dae71 100644
--- a/lang/cpp14/brace_elision_in_array_temporary_initialization.md
+++ b/lang/cpp14/brace_elision_in_array_temporary_initialization.md
@@ -5,7 +5,7 @@
 
 このページはC++14に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>動的メモリ確保の省略の許可 -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/clarifying_memory_allocation.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp14/clarifying_memory_allocation.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/clarifying_memory_allocation.md b/lang/cpp14/clarifying_memory_allocation.md
index 039593c3c..a023eda46 100644
--- a/lang/cpp14/clarifying_memory_allocation.md
+++ b/lang/cpp14/clarifying_memory_allocation.md
@@ -5,7 +5,7 @@
 
 このページはC++14に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>decltype(auto) -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/decltype_auto.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp14/decltype_auto.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/decltype_auto.md b/lang/cpp14/decltype_auto.md
index 9bf9e8377..3e5d131c2 100644
--- a/lang/cpp14/decltype_auto.md
+++ b/lang/cpp14/decltype_auto.md
@@ -5,7 +5,7 @@
 
 このページはC++14に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>[[deprecated]]属性 [N3760] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/deprecated_attr.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp14/deprecated_attr.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/deprecated_attr.md b/lang/cpp14/deprecated_attr.md
index 724930191..0dfa33f04 100644
--- a/lang/cpp14/deprecated_attr.md
+++ b/lang/cpp14/deprecated_attr.md
@@ -5,7 +5,7 @@
 
 このページはC++14に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>数値リテラルの桁区切り文字 [N3781] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/digit_separators.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp14/digit_separators.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/digit_separators.md b/lang/cpp14/digit_separators.md
index 9e5e8ad11..c677b1915 100644
--- a/lang/cpp14/digit_separators.md
+++ b/lang/cpp14/digit_separators.md
@@ -5,7 +5,7 @@
 
 このページはC++14に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
@@ -142,4 +142,4 @@ C++14という言語バージョンは、C++11の仕様に対するバグ修正
 - Perl : [Underscores in numbers](http://www.perlmonks.org/?node=72112)
 - Ruby : [アンダーバーによる数値の区切り](http://www.rubylife.jp/ini/num/index2.html)
 - Java 7 : [Underscores in Numeric Literals](http://docs.oracle.com/javase/7/docs/technotes/guides/language/underscores-literals.html)
-- Ada : [Ada &amp;#39;83 Language Reference Manual](http://archive.adaic.com/standards/83lrm/html/lrm-02-04.html#2.4)
+- Ada : [Ada &amp;#39;83 Language Reference Manual](http://archive.adaic.com/standards/83lrm/html/lrm-02-04.html#2.4)
\ No newline at end of file
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>機能テストマクロ -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/feature_test_macros.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp14/feature_test_macros.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;機能テストマクロ&lt;/span&gt;&lt;span class=&#34;cpp cpp14&#34; title=&#34;C++14で追加&#34;&gt;(C++14)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;このページはC++14に採用された言語機能の変更を解説しています。&lt;/p&gt;
&lt;p&gt;のちのC++規格でさらに変更される場合があるため&lt;a href=&#34;#relative-page&#34;&gt;関連項目&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;SD-6 は C++14 の機能について以下のテストマクロを定義することを推奨している：&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;マクロ名&lt;/th&gt;
&lt;th&gt;値&lt;/th&gt;
&lt;th&gt;機能&lt;/th&gt;
&lt;th&gt;ヘッダ&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_aggregate_nsdmi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201304&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;メンバ初期化子と集約&lt;/td&gt;
&lt;td&gt;predefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_binary_literals&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201304&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;binary_literals.html&#34;&gt;二進数リテラル&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;predefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_constexpr&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201304&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;relaxing_constraints_on_constexpr.html&#34;&gt;&lt;code&gt;constexpr&lt;/code&gt;の制限緩和/&lt;code&gt;constexpr&lt;/code&gt; メンバ関数の暗黙的な &lt;code&gt;const&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;predefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_decltype_auto&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201304&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;return_type_deduction_for_normal_functions.html&#34;&gt;通常関数の戻り値型推論&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;predefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_generic_lambdas&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201304&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;generic_lambdas.html&#34;&gt;ジェネリックラムダ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;predefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_init_captures&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201304&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;initialize_capture.html&#34;&gt;ラムダ式の初期化キャプチャ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;predefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_chrono_udls&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201304&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/chrono/duration.html&#34;&gt;std::chrono::duration&lt;/a&gt;&lt;/code&gt; のユーザー定義リテラル (&lt;code&gt;&lt;a href=&#34;../../reference/chrono/duration/op_ns.html&#34;&gt;ns&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&#34;../../reference/chrono/duration/op_us.html&#34;&gt;us&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&#34;../../reference/chrono/duration/op_ms.html&#34;&gt;ms&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&#34;../../reference/chrono/duration/op_s.html&#34;&gt;s&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&#34;../../reference/chrono/duration/op_min.html&#34;&gt;min&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&#34;../../reference/chrono/duration/op_h.html&#34;&gt;h&lt;/a&gt;&lt;/code&gt;)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/chrono.html&#34;&gt;&amp;lt;chrono&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_complex_udls&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201309&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ユーザー定義虚数リテラル (&lt;code&gt;&lt;a href=&#34;../../reference/complex/complex/op_i.html&#34;&gt;i&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&#34;../../reference/complex/complex/op_if.html&#34;&gt;if&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&#34;../../reference/complex/complex/op_il.html&#34;&gt;il&lt;/a&gt;&lt;/code&gt;)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/complex.html&#34;&gt;&amp;lt;complex&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_exchange_function&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201304&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/utility/exchange.html&#34;&gt;std::exchange&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/utility.html&#34;&gt;&amp;lt;utility&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_generic_associative_lookup&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201304&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;連想配列 (&lt;code&gt;&lt;a href=&#34;../../reference/map/map.html&#34;&gt;std::map&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&#34;../../reference/map/multimap.html&#34;&gt;std::multimap&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&#34;../../reference/set/set.html&#34;&gt;std::set&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&#34;../../reference/set/multiset.html&#34;&gt;std::multiset&lt;/a&gt;&lt;/code&gt;) における異なる型の比較 (&lt;code&gt;count&lt;/code&gt;, &lt;code&gt;equal_range&lt;/code&gt;, &lt;code&gt;find&lt;/code&gt;, &lt;code&gt;lower_bound&lt;/code&gt;, &lt;code&gt;upper_bound&lt;/code&gt;)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/map.html&#34;&gt;&amp;lt;map&amp;gt;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&#34;../../reference/set.html&#34;&gt;&amp;lt;set&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_integer_sequence&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201304&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;../../reference/utility/integer_sequence.html&#34;&gt;コンパイル時整数列&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/utility.html&#34;&gt;&amp;lt;utility&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_integral_constant_callable&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201304&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits/integral_constant.html&#34;&gt;std::integral_constant&lt;/a&gt;&lt;/code&gt; に &lt;code&gt;operator()&lt;/code&gt; を追加&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits.html&#34;&gt;&amp;lt;type_traits&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_is_final&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201402&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits/is_final.html&#34;&gt;std::is_final&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits.html&#34;&gt;&amp;lt;type_traits&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_is_null_pointer&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201309&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits/is_null_pointer.html&#34;&gt;std::is_null_pointer&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits.html&#34;&gt;&amp;lt;type_traits&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_make_reverse_iterator&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201402&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/iterator/make_reverse_iterator.html&#34;&gt;std::make_reverse_iterator&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/iterator.html&#34;&gt;&amp;lt;iterator&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_make_unique&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201304&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/memory/make_unique.html&#34;&gt;std::make_unique&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/memory/make_unique.html&#34;&gt;&amp;lt;memory&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_null_iterators&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201304&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ヌル前方向イテレータ&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/algorithm.html&#34;&gt;&amp;lt;iterator&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_quoted_string_io&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201304&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/iomanip/quoted.html&#34;&gt;std::quoted&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/iomanip.html&#34;&gt;&amp;lt;iomanip&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_result_of_sfinae&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201210&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits/result_of.html&#34;&gt;std::result_of&lt;/a&gt;&lt;/code&gt; と SFINAE&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits.html&#34;&gt;&amp;lt;type_traits&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_robust_nonmodifying_seq_ops&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201304&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;シーケンスを変更しない操作をよりロバストに&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/algorithm.html&#34;&gt;&amp;lt;algorithm&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_shared_timed_mutex&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201402&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;shared_mutex&lt;/code&gt; を &lt;code&gt;&lt;a href=&#34;../../reference/shared_mutex/shared_timed_mutex.html&#34;&gt;shared_timed_mutex&lt;/a&gt;&lt;/code&gt; にリネーム&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/shared_mutex.html&#34;&gt;&amp;lt;shared_mutex&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_string_udls&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201304&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ユーザー定義 &lt;code&gt;&lt;a href=&#34;../../reference/string/basic_string/op_s.html&#34;&gt;std::string_literals::basic_string::sリテラル&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/string.html&#34;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_transformation_trait_aliases&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201304&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;型トレイトにエイリアステンプレートを追加&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits.html&#34;&gt;&amp;lt;type_traits&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_transparent_operators&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201210&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/functional.html&#34;&gt;&amp;lt;functional&amp;gt;&lt;/a&gt;&lt;/code&gt; の二項演算のデフォルトテンプレート引数を &lt;code&gt;void&lt;/code&gt; に&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/functional.html&#34;&gt;&amp;lt;functional&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_tuple_element_t&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201402&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/tuple/tuple_element.html&#34;&gt;std::tuple_element_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/utility.html&#34;&gt;&amp;lt;utility&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_tuples_by_type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201304&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;../../reference/tuple/tuple/get.html&#34;&gt;型による &lt;code&gt;std::tuple::get&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/utility.html&#34;&gt;&amp;lt;utility&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_return_type_deduction&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201304&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;return_type_deduction_for_normal_functions.html&#34;&gt;通常関数の戻り値型推論&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;predefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_sized_deallocation&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201309&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;sized_deallocation.html&#34;&gt;サイズ付きデアロケーション&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;predefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_variable_templates&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201304&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;variable_templates.html&#34;&gt;変数テンプレート&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;predefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__has_cpp_attribute(deprecated)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201309&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;deprecated_attr.html&#34;&gt;&lt;code&gt;[[deprecated]]&lt;/code&gt;属性&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;predefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__has_include(&amp;lt;shared_mutex&amp;gt;)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;../../reference/shared_mutex.html&#34;&gt;共有ロック&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;predefined&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://isocpp.org/std/standing-documents/sd-6-sg10-feature-test-recommendations#recs.cpp14&#34; target=&#34;_blank&#34;&gt;SD-6: SG10 Feature Test Recommendations: Standard C++&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ジェネリックラムダ [N3649] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/generic_lambdas.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp14/generic_lambdas.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/generic_lambdas.md b/lang/cpp14/generic_lambdas.md
index 71e85c56a..94b918f4e 100644
--- a/lang/cpp14/generic_lambdas.md
+++ b/lang/cpp14/generic_lambdas.md
@@ -5,7 +5,7 @@
 
 このページはC++14に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ラムダ式の初期化キャプチャ [N3648] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/initialize_capture.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp14/initialize_capture.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/initialize_capture.md b/lang/cpp14/initialize_capture.md
index bbd9a25d9..7b5e943ed 100644
--- a/lang/cpp14/initialize_capture.md
+++ b/lang/cpp14/initialize_capture.md
@@ -5,7 +5,7 @@
 
 このページはC++14に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>宣言時のメンバ初期化を持つ型の集成体初期化を許可 -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/member_initializers_and_aggregates.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp14/member_initializers_and_aggregates.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/member_initializers_and_aggregates.md b/lang/cpp14/member_initializers_and_aggregates.md
index d7a225482..8a208da14 100644
--- a/lang/cpp14/member_initializers_and_aggregates.md
+++ b/lang/cpp14/member_initializers_and_aggregates.md
@@ -5,7 +5,7 @@
 
 このページはC++14に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>リテラル演算子のスペースを省略可能とする -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/no_whitespace_literal_operators.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp14/no_whitespace_literal_operators.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/no_whitespace_literal_operators.md b/lang/cpp14/no_whitespace_literal_operators.md
index 3ab2981bb..5f5613fd7 100644
--- a/lang/cpp14/no_whitespace_literal_operators.md
+++ b/lang/cpp14/no_whitespace_literal_operators.md
@@ -5,7 +5,7 @@
 
 このページはC++14に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>nullptr_t型の定数式を非型テンプレートパラメータとすることを許可 -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/nontype_template_parameters_of_type_nullptr_t.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp14/nontype_template_parameters_of_type_nullptr_t.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/nontype_template_parameters_of_type_nullptr_t.md b/lang/cpp14/nontype_template_parameters_of_type_nullptr_t.md
index 274dc94f3..e26937a29 100644
--- a/lang/cpp14/nontype_template_parameters_of_type_nullptr_t.md
+++ b/lang/cpp14/nontype_template_parameters_of_type_nullptr_t.md
@@ -5,7 +5,7 @@
 
 このページはC++14に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>後置戻り値型をプレースホルダーにすることを許可 -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/placeholder_type_in_trailing_return_type.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp14/placeholder_type_in_trailing_return_type.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/placeholder_type_in_trailing_return_type.md b/lang/cpp14/placeholder_type_in_trailing_return_type.md
index d490d58b3..ce35c338d 100644
--- a/lang/cpp14/placeholder_type_in_trailing_return_type.md
+++ b/lang/cpp14/placeholder_type_in_trailing_return_type.md
@@ -5,7 +5,7 @@
 
 このページはC++14に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
@@ -56,4 +56,4 @@ int main()
 
 
 ## &amp;lt;a id=&amp;#34;relative-page&amp;#34; href=&amp;#34;#relative-page&amp;#34;&amp;gt;関連項目&amp;lt;/a&amp;gt;
-- [C++14 通常関数の戻り値型推論](return_type_deduction_for_normal_functions.md)
+- [C++14 通常関数の戻り値型推論](return_type_deduction_for_normal_functions.md)
\ No newline at end of file
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>更新された定義済みマクロ -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/predefined_macros.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp14/predefined_macros.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;更新された定義済みマクロ&lt;/span&gt;&lt;span class=&#34;cpp cpp14&#34; title=&#34;C++14で追加&#34;&gt;(C++14)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;このページはC++14に採用された言語機能の変更を解説しています。&lt;/p&gt;
&lt;p&gt;のちのC++規格でさらに変更される場合があるため&lt;a href=&#34;#relative-page&#34;&gt;関連項目&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;定義済みマクロの値が、以下のように更新された：&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;マクロ名&lt;/th&gt;
&lt;th&gt;値&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cplusplus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201402L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;C++のバージョン値を表す&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexprの制限緩和 [N3652] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/relaxing_constraints_on_constexpr.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp14/relaxing_constraints_on_constexpr.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/relaxing_constraints_on_constexpr.md b/lang/cpp14/relaxing_constraints_on_constexpr.md
index dacd6abad..2d65d8e3e 100644
--- a/lang/cpp14/relaxing_constraints_on_constexpr.md
+++ b/lang/cpp14/relaxing_constraints_on_constexpr.md
@@ -5,7 +5,7 @@
 
 このページはC++14に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>通常関数の戻り値型推論 [N3638] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/return_type_deduction_for_normal_functions.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp14/return_type_deduction_for_normal_functions.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/return_type_deduction_for_normal_functions.md b/lang/cpp14/return_type_deduction_for_normal_functions.md
index 05edc55cf..fe8dc74d5 100644
--- a/lang/cpp14/return_type_deduction_for_normal_functions.md
+++ b/lang/cpp14/return_type_deduction_for_normal_functions.md
@@ -5,7 +5,7 @@
 
 このページはC++14に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>サイズ付きデアロケーション [N3778] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/sized_deallocation.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp14/sized_deallocation.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/sized_deallocation.md b/lang/cpp14/sized_deallocation.md
index 9733d5fd9..dd98f00a9 100644
--- a/lang/cpp14/sized_deallocation.md
+++ b/lang/cpp14/sized_deallocation.md
@@ -5,7 +5,7 @@
 
 このページはC++14に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>変数テンプレート [N3651] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/variable_templates.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp14/variable_templates.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/variable_templates.md b/lang/cpp14/variable_templates.md
index 63d09298a..139b45ad0 100644
--- a/lang/cpp14/variable_templates.md
+++ b/lang/cpp14/variable_templates.md
@@ -5,7 +5,7 @@
 
 このページはC++14に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>全ての非型テンプレート引数の定数式評価を許可 [N4268] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/allow_constant_evaluation_for_all_non-type_template_arguments.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/allow_constant_evaluation_for_all_non-type_template_arguments.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/allow_constant_evaluation_for_all_non-type_template_arguments.md b/lang/cpp17/allow_constant_evaluation_for_all_non-type_template_arguments.md
index bb3aa3b22..dce9e1fb0 100644
--- a/lang/cpp17/allow_constant_evaluation_for_all_non-type_template_arguments.md
+++ b/lang/cpp17/allow_constant_evaluation_for_all_non-type_template_arguments.md
@@ -6,7 +6,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>変数テンプレートのデフォルトテンプレート引数を許可 -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/allow_default_template_arguments_of_variable_templates.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/allow_default_template_arguments_of_variable_templates.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/allow_default_template_arguments_of_variable_templates.md b/lang/cpp17/allow_default_template_arguments_of_variable_templates.md
index a61778131..95f72144d 100644
--- a/lang/cpp17/allow_default_template_arguments_of_variable_templates.md
+++ b/lang/cpp17/allow_default_template_arguments_of_variable_templates.md
@@ -5,7 +5,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>テンプレートテンプレートパラメータにtypenameキーワードの使用を許可 [N4051] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/allow_typename_in_a_template_template_parameter.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/allow_typename_in_a_template_template_parameter.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/allow_typename_in_a_template_template_parameter.md b/lang/cpp17/allow_typename_in_a_template_template_parameter.md
index 9150ce9b3..b545de5d6 100644
--- a/lang/cpp17/allow_typename_in_a_template_template_parameter.md
+++ b/lang/cpp17/allow_typename_in_a_template_template_parameter.md
@@ -5,7 +5,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>名前空間と列挙子への属性付加を許可 [N4266] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/attributes_for_namespaces_and_enumerators.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/attributes_for_namespaces_and_enumerators.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/attributes_for_namespaces_and_enumerators.md b/lang/cpp17/attributes_for_namespaces_and_enumerators.md
index f7b9ab09b..88efd883f 100644
--- a/lang/cpp17/attributes_for_namespaces_and_enumerators.md
+++ b/lang/cpp17/attributes_for_namespaces_and_enumerators.md
@@ -5,7 +5,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexpr ラムダ [P0170R1] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/constexpr_lambda.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/constexpr_lambda.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/constexpr_lambda.md b/lang/cpp17/constexpr_lambda.md
index a3c3d9b7e..5a118885d 100644
--- a/lang/cpp17/constexpr_lambda.md
+++ b/lang/cpp17/constexpr_lambda.md
@@ -6,7 +6,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>enum class変数の初期値として整数を指定する際の規則を調整 [P0138R2] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/construction_enum_class_values.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/construction_enum_class_values.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/construction_enum_class_values.md b/lang/cpp17/construction_enum_class_values.md
index 2f6b48e2b..97f69dffc 100644
--- a/lang/cpp17/construction_enum_class_values.md
+++ b/lang/cpp17/construction_enum_class_values.md
@@ -5,7 +5,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>非型テンプレートパラメータのauto宣言 [P0127R2] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/declaring_non-type_template_arguments_with_auto.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/declaring_non-type_template_arguments_with_auto.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/declaring_non-type_template_arguments_with_auto.md b/lang/cpp17/declaring_non-type_template_arguments_with_auto.md
index 7faa77fa0..7b4d8e2b6 100644
--- a/lang/cpp17/declaring_non-type_template_arguments_with_auto.md
+++ b/lang/cpp17/declaring_non-type_template_arguments_with_auto.md
@@ -6,7 +6,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>アライメント指定されたデータの動的メモリ確保 [P0035R4] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/dynamic_memory_allocation_for_over-aligned_data.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/dynamic_memory_allocation_for_over-aligned_data.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/dynamic_memory_allocation_for_over-aligned_data.md b/lang/cpp17/dynamic_memory_allocation_for_over-aligned_data.md
index ceb1daf17..2aed47381 100644
--- a/lang/cpp17/dynamic_memory_allocation_for_over-aligned_data.md
+++ b/lang/cpp17/dynamic_memory_allocation_for_over-aligned_data.md
@@ -5,7 +5,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>例外仕様を型システムの一部にする [P0012R1] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/exception_spec_be_part_of_the_type_system.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/exception_spec_be_part_of_the_type_system.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/exception_spec_be_part_of_the_type_system.md b/lang/cpp17/exception_spec_be_part_of_the_type_system.md
index 4ae6a5bba..245cb7cc0 100644
--- a/lang/cpp17/exception_spec_be_part_of_the_type_system.md
+++ b/lang/cpp17/exception_spec_be_part_of_the_type_system.md
@@ -5,7 +5,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>厳密な式の評価順 [P0145R3] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/expression_evaluation_order.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/expression_evaluation_order.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/expression_evaluation_order.md b/lang/cpp17/expression_evaluation_order.md
index bfe7a0791..048406bfd 100644
--- a/lang/cpp17/expression_evaluation_order.md
+++ b/lang/cpp17/expression_evaluation_order.md
@@ -5,7 +5,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>static_assert のメッセージ省略を許可 [N3928] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/extending_static_assert.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/extending_static_assert.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/extending_static_assert.md b/lang/cpp17/extending_static_assert.md
index 3fc1bc790..40eddc1be 100644
--- a/lang/cpp17/extending_static_assert.md
+++ b/lang/cpp17/extending_static_assert.md
@@ -5,7 +5,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>基底クラスのメンバ変数を集成体初期化するための波カッコを省略できるようにする [P0017R1] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/extension_to_aggregate_initialization.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/extension_to_aggregate_initialization.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/extension_to_aggregate_initialization.md b/lang/cpp17/extension_to_aggregate_initialization.md
index 7b42690e6..8e7221848 100644
--- a/lang/cpp17/extension_to_aggregate_initialization.md
+++ b/lang/cpp17/extension_to_aggregate_initialization.md
@@ -6,7 +6,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>[[fallthrough]]属性 [P0188R1] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/fallthrough.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/fallthrough.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/fallthrough.md b/lang/cpp17/fallthrough.md
index f809ea834..301ebec53 100644
--- a/lang/cpp17/fallthrough.md
+++ b/lang/cpp17/fallthrough.md
@@ -5,7 +5,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>機能テストマクロ -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/feature_test_macros.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/feature_test_macros.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;機能テストマクロ&lt;/span&gt;&lt;span class=&#34;cpp cpp17&#34; title=&#34;C++17で追加&#34;&gt;(C++17)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;このページはC++17に採用された言語機能の変更を解説しています。&lt;/p&gt;
&lt;p&gt;のちのC++規格でさらに変更される場合があるため&lt;a href=&#34;#relative-page&#34;&gt;関連項目&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;SD-6 は C++17 の機能について以下のテストマクロを定義することを推奨している：&lt;/p&gt;
&lt;h3&gt;言語機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;マクロ名&lt;/th&gt;
&lt;th&gt;値&lt;/th&gt;
&lt;th&gt;機能&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_hex_float&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201603&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;hexadecimal_floating_literals.html&#34;&gt;十六進浮動小数点数リテラル&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_inline_variables&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201606&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;inline_variables.html&#34;&gt;インライン変数&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_aligned_new&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201606&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;dynamic_memory_allocation_for_over-aligned_data.html&#34;&gt;アライメント指定されたデータの動的メモリ確保&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_guaranteed_copy_elision&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201606&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;guaranteed_copy_elision.html&#34;&gt;値のコピー省略を保証&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_noexcept_function_type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201510&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;exception_spec_be_part_of_the_type_system.html&#34;&gt;例外仕様を型システムの一部にする&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_fold_expressions&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201411&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;folding_expressions.html&#34;&gt;畳み込み式&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_constexpr&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201603&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;constexpr_lambda.html&#34;&gt;&lt;code&gt;constexpr&lt;/code&gt;ラムダ&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_if_constexpr&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201606&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;if_constexpr.html&#34;&gt;&lt;code&gt;if constexpr&lt;/code&gt;文&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_range_based_for&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201603&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;generalizing_the_range-based_for_loop.html&#34;&gt;範囲 &lt;code&gt;for&lt;/code&gt; ループの制限緩和&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_static_assert&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201411&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;extending_static_assert.html&#34;&gt;&lt;code&gt;static_assert&lt;/code&gt; のメッセージ省略を許可&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_deduction_guides&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201606&lt;/code&gt;&lt;br /&gt; &lt;code&gt;201611&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;type_deduction_for_class_templates.html&#34;&gt;クラステンプレートのテンプレート引数推論&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_nontype_template_parameter_auto&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201606&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;declaring_non-type_template_arguments_with_auto.html&#34;&gt;非型テンプレートパラメータの&lt;code&gt;auto&lt;/code&gt;宣言&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_namespace_attributes&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201411&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;attributes_for_namespaces_and_enumerators.html&#34;&gt;名前空間への属性付加を許可&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_enumerator_attributes&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201411&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;attributes_for_namespaces_and_enumerators.html&#34;&gt;列挙子への属性付加を許可&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_inheriting_constructors&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201511&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;継承コンストラクタの新仕様&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_variadic_using&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201611&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;pack_expansions_in_using.html&#34;&gt;&lt;code&gt;using&lt;/code&gt;宣言のパック展開&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__has_cpp_attribute(fallthrough)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;fallthrough.html&#34;&gt;&lt;code&gt;[[fallthrough]]&lt;/code&gt;属性&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__has_cpp_attribute(nodiscard)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;nodiscard.html&#34;&gt;&lt;code&gt;[[nodiscard]]&lt;/code&gt;属性&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__has_cpp_attribute(maybe_unused)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;maybe_unused.html&#34;&gt;&lt;code&gt;[[maybe_unused]]&lt;/code&gt;属性&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_structured_bindings&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201606&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;structured_bindings.html&#34;&gt;構造化束縛&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_aggregate_bases&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201603&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;extension_to_aggregate_initialization.html&#34;&gt;集成体初期化の拡張&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_nontype_template_args&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201411&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;allow_constant_evaluation_for_all_non-type_template_arguments.html&#34;&gt;非型テンプレートパラメータの定数式を評価&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_nested_namespace_definitions&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201411&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;nested_namespace.html&#34;&gt;入れ子名前空間の定義&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;ライブラリ&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;マクロ名&lt;/th&gt;
&lt;th&gt;値&lt;/th&gt;
&lt;th&gt;機能&lt;/th&gt;
&lt;th&gt;ヘッダ&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_byte&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201603&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/cstddef/byte.html&#34;&gt;std::byte&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/cstddef.html&#34;&gt;&amp;lt;cstddef&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_hardware_interference_size&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201703&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/new/hardware_destructive_interference_size.html&#34;&gt;std::hardware_destructive_interference_size&lt;/a&gt;&lt;/code&gt;と&lt;code&gt;&lt;a href=&#34;../../reference/new/hardware_constructive_interference_size.html&#34;&gt;std::hardware_constructive_interference_size&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/new.html&#34;&gt;&amp;lt;new&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_launder&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201606&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/new/launder.html&#34;&gt;std::launder()&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_uncaught_exceptions&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201411&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/exception/uncaught_exceptions.html&#34;&gt;std::uncaught_exceptions()&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/exception.html&#34;&gt;&amp;lt;exception&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_as_const&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201510&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/utility/as_const.html&#34;&gt;std::as_const()&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/utility.html&#34;&gt;&amp;lt;utility&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_make_from_tuple&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201606&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/tuple/make_from_tuple.html&#34;&gt;std::make_from_tuple()&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/utility.html&#34;&gt;&amp;lt;utility&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_apply&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201603&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/tuple/apply.html&#34;&gt;std::apply()&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/tuple.html&#34;&gt;&amp;lt;tuple&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_optional&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201606&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/optional/optional.html&#34;&gt;std::optional&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/optional.html&#34;&gt;&amp;lt;optional&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_any&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201606&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/any/any.html&#34;&gt;std::any&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/any.html&#34;&gt;&amp;lt;any&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_variant&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201606&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/variant/variant.html&#34;&gt;std::variant&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/variant.html&#34;&gt;&amp;lt;variant&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_memory_resource&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201603&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/memory_resource/memory_resource.html&#34;&gt;std::memory_resource&lt;/a&gt;&lt;/code&gt;と関連する機能&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/memory_resource.html&#34;&gt;&amp;lt;memory_resource&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_boyer_moore_searcher&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201603&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/functional/boyer_moore_searcher.html&#34;&gt;std::boyer_morre_searcher&lt;/a&gt;&lt;/code&gt;と関連する機能&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/functional.html&#34;&gt;&amp;lt;functional&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_string_view&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201606&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/string_view/basic_string_view.html&#34;&gt;std::string_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/string_view.html&#34;&gt;&amp;lt;string_view&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_sample&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201603&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/algorithm/sample.html&#34;&gt;std::sample()&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/algorithm.html&#34;&gt;&amp;lt;algorithm&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_addressof_constexpr&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201603&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/memory/addressof.html&#34;&gt;std::addressof()&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/memory.html&#34;&gt;&amp;lt;memory&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_raw_memory_algorithms&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201606&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/memory/uninitialized_default_construct.html&#34;&gt;std::uninitialized_default_construct()&lt;/a&gt;&lt;/code&gt;と関連する機能&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/memory.html&#34;&gt;&amp;lt;memory&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_transparent_operators&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201510&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/memory/owner_less.html&#34;&gt;std::owner_less&lt;/a&gt;&lt;/code&gt; の柔軟性向上&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/functional.html&#34;&gt;&amp;lt;functional&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;a href=&#34;../../reference/memory.html&#34;&gt;&amp;lt;memory&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_enable_shared_from_this&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201603&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/memory/enable_shared_from_this.html&#34;&gt;std::enable_shared_from_this&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/memory.html&#34;&gt;&amp;lt;memory&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_shared_ptr_weak_type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201606&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/memory/shared_ptr.html&#34;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt;クラスのメンバ型&lt;code&gt;weak_type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/memory.html&#34;&gt;&amp;lt;memory&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_shared_ptr_arrays&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201611&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/memory/shared_ptr.html&#34;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt;クラスの配列サポート&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/memory.html&#34;&gt;&amp;lt;memory&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_invoke&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201411&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/functional/invoke.html&#34;&gt;std::invoke()&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/functional.html&#34;&gt;&amp;lt;functional&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_not_fn&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201603&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/functional/not_fn.html&#34;&gt;std::not_fn()&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/functional.html&#34;&gt;&amp;lt;functional&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_void_t&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201411&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits/void_t.html&#34;&gt;std::void_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits.html&#34;&gt;&amp;lt;type_traits&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_bool_constant&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201505&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits/bool_constant.html&#34;&gt;std::bool_constant&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits.html&#34;&gt;&amp;lt;type_traits&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_type_trait_variable_templates&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201510&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;型トレイト変数テンプレート (&lt;code&gt;some_trait_v&amp;lt;T&amp;gt; = some_trait&amp;lt;T&amp;gt;::value&lt;/code&gt;)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits.html&#34;&gt;&amp;lt;type_traits&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_logical_traits&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201510&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;論理演算子型トレイト (&lt;code&gt;&lt;a href=&#34;../../reference/type_traits/conjunction.html&#34;&gt;std::conjunction&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&#34;../../reference/type_traits/disjunction.html&#34;&gt;std::disjunction&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&#34;../../reference/type_traits/negation.html&#34;&gt;std::negation&lt;/a&gt;&lt;/code&gt;)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits.html&#34;&gt;&amp;lt;type_traits&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_is_swappable&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201603&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits/is_swappable.html&#34;&gt;std::is_swappable&lt;/a&gt;&lt;/code&gt;と関連する機能&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits.html&#34;&gt;&amp;lt;type_traits&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_is_invocable&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201703&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits/is_invocable.html&#34;&gt;std::is_invocable&lt;/a&gt;&lt;/code&gt;と関連する機能&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits.html&#34;&gt;&amp;lt;type_traits&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_has_unique_object_representations&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201606&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits/has_unique_object_representations.html&#34;&gt;std::has_unique_object_representations&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits.html&#34;&gt;&amp;lt;type_traits&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_is_aggregate&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201703&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits/is_aggregate.html&#34;&gt;std::is_aggregate&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits.html&#34;&gt;&amp;lt;type_traits&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_chrono&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201510&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/chrono.html&#34;&gt;&amp;lt;chrono&amp;gt;&lt;/a&gt;&lt;/code&gt; の改良&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/chrono.html&#34;&gt;&amp;lt;chrono&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_execution&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201603&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/execution.html&#34;&gt;&amp;lt;execution&amp;gt;&lt;/a&gt;&lt;/code&gt; の追加&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/execution.html&#34;&gt;&amp;lt;execution&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_parallel_algorithm&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201603&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;並列アルゴリズム&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/algorithm.html&#34;&gt;&amp;lt;algorithm&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;a href=&#34;../../reference/numeric.html&#34;&gt;&amp;lt;numeric&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;a href=&#34;../../reference/memory.html&#34;&gt;&amp;lt;memory&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_to_chars&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201611&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/charconv/to_chars.html&#34;&gt;std::to_chars()&lt;/a&gt;&lt;/code&gt;と&lt;code&gt;&lt;a href=&#34;../../reference/charconv/from_chars.html&#34;&gt;std::from_chars()&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/charconv.html&#34;&gt;&amp;lt;charconv&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_allocator_traits_is_always_equal&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201411&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ライブラリ内の &lt;code&gt;noexcept&lt;/code&gt; のクリーンアップ&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/deque.html&#34;&gt;&amp;lt;deque&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;a href=&#34;../../reference/forward_list.html&#34;&gt;&amp;lt;forward_list&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;a href=&#34;../../reference/list.html&#34;&gt;&amp;lt;list&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;a href=&#34;../../reference/map.html&#34;&gt;&amp;lt;map&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;a href=&#34;../../reference/memory.html&#34;&gt;&amp;lt;memory&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;a href=&#34;../../reference/scoped_allocator.html&#34;&gt;&amp;lt;scoped_allocator&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;a href=&#34;../../reference/set.html&#34;&gt;&amp;lt;set&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;a href=&#34;../../reference/string.html&#34;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;a href=&#34;../../reference/unordered_map.html&#34;&gt;&amp;lt;unordered_map&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;a href=&#34;../../reference/unordered_set.html&#34;&gt;&amp;lt;unordered_set&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;a href=&#34;../../reference/vector.html&#34;&gt;&amp;lt;vector&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_incomplete_container_elements&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201505&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;標準コンテナについて不完全型を最小限サポート&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/forward_list.html&#34;&gt;&amp;lt;forward_list&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;a href=&#34;../../reference/list.html&#34;&gt;&amp;lt;list&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;a href=&#34;../../reference/vector.html&#34;&gt;&amp;lt;vector&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_map_try_emplace&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201411&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/map/map/try_emplace.html&#34;&gt;std::map::try_emplace()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&#34;../../reference/map/map/insert_or_assign.html&#34;&gt;std::map::insert_or_assign()&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/map.html&#34;&gt;&amp;lt;map&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_unordered_map_try_emplace&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201411&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/unordered_map/unordered_map/try_emplace.html&#34;&gt;std::unordered_map::try_emplace()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&#34;../../reference/unordered_map/unordered_map/insert_or_assign.html&#34;&gt;std::unordered_map::insert_or_assign()&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/unordered_map.html&#34;&gt;&amp;lt;unordered_map&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_node_extract&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201606&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;連想コンテナのsplice&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/map.html&#34;&gt;&amp;lt;map&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;a href=&#34;../../reference/set.html&#34;&gt;&amp;lt;set&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;a href=&#34;../../reference/unordered_map.html&#34;&gt;&amp;lt;unordered_map&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;&lt;a href=&#34;../../reference/unordered_set.html&#34;&gt;&amp;lt;unordered_set&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_array_constexpr&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201603&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;配列関係のランダムアクセスに&lt;code&gt;constexpr&lt;/code&gt;を追加&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/array.html&#34;&gt;&amp;lt;array&amp;gt;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&#34;../../reference/iterator.html&#34;&gt;&amp;lt;iterator&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_nonmember_container_access&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201411&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;非メンバ関数 &lt;code&gt;&lt;a href=&#34;../../reference/iterator/size.html&#34;&gt;std::size()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&#34;../../reference/iterator/empty.html&#34;&gt;std::empty()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&#34;../../reference/iterator/data.html&#34;&gt;std::data()&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/iterator.html&#34;&gt;&amp;lt;iterator&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_clamp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201603&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/algorithm/clamp.html&#34;&gt;std::clamp()&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/algorithm.html&#34;&gt;&amp;lt;algorithm&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_gcd_lcm&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201606&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/numeric/gcd.html&#34;&gt;std::gcd()&lt;/a&gt;&lt;/code&gt;と&lt;code&gt;&lt;a href=&#34;../../reference/numeric/lcm.html&#34;&gt;std::lcm()&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/numeric.html&#34;&gt;&amp;lt;numeric&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_hypot&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201603&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;3引数版の&lt;code&gt;&lt;a href=&#34;../../reference/cmath/hypot.html&#34;&gt;std::hypot()&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/cmath.html&#34;&gt;&amp;lt;cmath&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_math_special_functions&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201603&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;数学の特殊関数&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/cmath.html&#34;&gt;&amp;lt;cmath&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_filesystem&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201703&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ファイルシステムライブラリ&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/filesystem.html&#34;&gt;&amp;lt;filesystem&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_atomic_is_always_lock_free&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201603&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/atomic/atomic.html&#34;&gt;std::atomic&lt;/a&gt;&lt;/code&gt;クラスの静的メンバ定数&lt;code&gt;is_always_lock_free&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/atomic.html&#34;&gt;&amp;lt;atomic&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_shared_mutex&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201505&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/shared_mutex/shared_mutex.html&#34;&gt;std::shared_mutex&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/shared_mutex.html&#34;&gt;&amp;lt;shared_mutex&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_scoped_lock&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201703&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;可変個のミューテックスのロックを管理する&lt;code&gt;&lt;a href=&#34;../../reference/mutex/scoped_lock.html&#34;&gt;std::scoped_lock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/mutex.html&#34;&gt;&amp;lt;mutex&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://isocpp.org/std/standing-documents/sd-6-sg10-feature-test-recommendations#recs.cpp17&#34; target=&#34;_blank&#34;&gt;SD-6: SG10 Feature Test Recommendations: Standard C++&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>畳み込み式 [N4295] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/folding_expressions.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/folding_expressions.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/folding_expressions.md b/lang/cpp17/folding_expressions.md
index 408b05861..72d559fd6 100644
--- a/lang/cpp17/folding_expressions.md
+++ b/lang/cpp17/folding_expressions.md
@@ -5,7 +5,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>範囲 for ループの制限緩和 [P0184R0] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/generalizing_the_range-based_for_loop.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/generalizing_the_range-based_for_loop.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/generalizing_the_range-based_for_loop.md b/lang/cpp17/generalizing_the_range-based_for_loop.md
index 818f3b526..344ac8866 100644
--- a/lang/cpp17/generalizing_the_range-based_for_loop.md
+++ b/lang/cpp17/generalizing_the_range-based_for_loop.md
@@ -5,7 +5,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>値のコピー省略を保証 [P0135R1] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/guaranteed_copy_elision.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/guaranteed_copy_elision.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/guaranteed_copy_elision.md b/lang/cpp17/guaranteed_copy_elision.md
index df83a6b77..4cf9aeef9 100644
--- a/lang/cpp17/guaranteed_copy_elision.md
+++ b/lang/cpp17/guaranteed_copy_elision.md
@@ -6,7 +6,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>__has_include [P0061R1] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/has_include.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/has_include.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/has_include.md b/lang/cpp17/has_include.md
index 46c583c24..2cfaaba58 100644
--- a/lang/cpp17/has_include.md
+++ b/lang/cpp17/has_include.md
@@ -5,7 +5,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>十六進浮動小数点数リテラル [P0245R1] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/hexadecimal_floating_literals.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/hexadecimal_floating_literals.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/hexadecimal_floating_literals.md b/lang/cpp17/hexadecimal_floating_literals.md
index 914023b13..e976eef46 100644
--- a/lang/cpp17/hexadecimal_floating_literals.md
+++ b/lang/cpp17/hexadecimal_floating_literals.md
@@ -4,7 +4,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexpr if 文 [P0292R2] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/if_constexpr.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/if_constexpr.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/if_constexpr.md b/lang/cpp17/if_constexpr.md
index 48028fc0c..c2febe1f4 100644
--- a/lang/cpp17/if_constexpr.md
+++ b/lang/cpp17/if_constexpr.md
@@ -5,7 +5,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>インライン変数 [P0386R2] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/inline_variables.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/inline_variables.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/inline_variables.md b/lang/cpp17/inline_variables.md
index 937afd223..3afbdae0d 100644
--- a/lang/cpp17/inline_variables.md
+++ b/lang/cpp17/inline_variables.md
@@ -5,7 +5,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ラムダ式での*thisのコピーキャプチャ [P0018R3] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/lambda_capture_of_this_by_value.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/lambda_capture_of_this_by_value.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/lambda_capture_of_this_by_value.md b/lang/cpp17/lambda_capture_of_this_by_value.md
index 2e91fe9cb..027b4c939 100644
--- a/lang/cpp17/lambda_capture_of_this_by_value.md
+++ b/lang/cpp17/lambda_capture_of_this_by_value.md
@@ -5,7 +5,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>noexcept付きのラムダ式から変換する関数ポインタにnoexceptを付加する -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/lambda_to_noexcept_function_pointer.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/lambda_to_noexcept_function_pointer.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/lambda_to_noexcept_function_pointer.md b/lang/cpp17/lambda_to_noexcept_function_pointer.md
index c0532d9d1..0afb67e62 100644
--- a/lang/cpp17/lambda_to_noexcept_function_pointer.md
+++ b/lang/cpp17/lambda_to_noexcept_function_pointer.md
@@ -5,7 +5,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>[[maybe_unused]]属性 [P0212R1] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/maybe_unused.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/maybe_unused.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/maybe_unused.md b/lang/cpp17/maybe_unused.md
index 0c61865ae..0bbbbc5e6 100644
--- a/lang/cpp17/maybe_unused.md
+++ b/lang/cpp17/maybe_unused.md
@@ -5,7 +5,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>入れ子名前空間の定義 [N4230] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/nested_namespace.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/nested_namespace.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/nested_namespace.md b/lang/cpp17/nested_namespace.md
index 37c3df4f4..d84c561c4 100644
--- a/lang/cpp17/nested_namespace.md
+++ b/lang/cpp17/nested_namespace.md
@@ -5,7 +5,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>波括弧初期化の型推論の新規則 [N3922] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/new_rules_for_auto_deduction_from_braced-init-list.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/new_rules_for_auto_deduction_from_braced-init-list.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/new_rules_for_auto_deduction_from_braced-init-list.md b/lang/cpp17/new_rules_for_auto_deduction_from_braced-init-list.md
index 017d28e05..5627e23b2 100644
--- a/lang/cpp17/new_rules_for_auto_deduction_from_braced-init-list.md
+++ b/lang/cpp17/new_rules_for_auto_deduction_from_braced-init-list.md
@@ -5,7 +5,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>[[nodiscard]]属性 [P0189R1] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/nodiscard.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/nodiscard.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/nodiscard.md b/lang/cpp17/nodiscard.md
index 7346a5df0..a2d9bea3b 100644
--- a/lang/cpp17/nodiscard.md
+++ b/lang/cpp17/nodiscard.md
@@ -5,7 +5,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>不明な属性を無視する [P0283R2] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/non_standard_attributes.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/non_standard_attributes.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/non_standard_attributes.md b/lang/cpp17/non_standard_attributes.md
index c0fabc99d..b4843517b 100644
--- a/lang/cpp17/non_standard_attributes.md
+++ b/lang/cpp17/non_standard_attributes.md
@@ -5,7 +5,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>using宣言のパック展開 [P0195R2] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/pack_expansions_in_using.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/pack_expansions_in_using.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/pack_expansions_in_using.md b/lang/cpp17/pack_expansions_in_using.md
index c2b4a7e84..911ef2e1b 100644
--- a/lang/cpp17/pack_expansions_in_using.md
+++ b/lang/cpp17/pack_expansions_in_using.md
@@ -5,7 +5,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>更新された定義済みマクロ -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/predefined_macros.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/predefined_macros.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;更新された定義済みマクロ&lt;/span&gt;&lt;span class=&#34;cpp cpp17&#34; title=&#34;C++17で追加&#34;&gt;(C++17)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;このページはC++17に採用された言語機能の変更を解説しています。&lt;/p&gt;
&lt;p&gt;のちのC++規格でさらに変更される場合があるため&lt;a href=&#34;#relative-page&#34;&gt;関連項目&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;定義済みマクロの値が、以下のように更新された：&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;マクロ名&lt;/th&gt;
&lt;th&gt;値&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cplusplus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201703L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;C++のバージョン値を表す&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;新規マクロは以下：&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;マクロ名&lt;/th&gt;
&lt;th&gt;値&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__STDCPP_DEFAULT_NEW_ALIGNMENT__&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;実装定義&lt;/td&gt;
&lt;td&gt;動的メモリ確保時のデフォルトのアライメント値&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;#relative-page&#34; id=&#34;relative-page&#34;&gt;関連項目&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;dynamic_memory_allocation_for_over-aligned_data.html&#34;&gt;C++17 アライメント指定されたデータの動的メモリ確保&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>非推奨だった古い例外仕様を削除 [P0003R5] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/remove_deprecated_exception_specifications.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/remove_deprecated_exception_specifications.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/remove_deprecated_exception_specifications.md b/lang/cpp17/remove_deprecated_exception_specifications.md
index 8d645f045..9cbf8ee25 100644
--- a/lang/cpp17/remove_deprecated_exception_specifications.md
+++ b/lang/cpp17/remove_deprecated_exception_specifications.md
@@ -5,7 +5,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>非推奨だった bool 型に対するインクリメント演算子を削除 [P0002R1] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/remove_deprecated_increment_of_bool.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/remove_deprecated_increment_of_bool.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/remove_deprecated_increment_of_bool.md b/lang/cpp17/remove_deprecated_increment_of_bool.md
index 4888e6a5d..cb4a2fe81 100644
--- a/lang/cpp17/remove_deprecated_increment_of_bool.md
+++ b/lang/cpp17/remove_deprecated_increment_of_bool.md
@@ -5,7 +5,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>非推奨だったregisterキーワードを削除 [P0001R1] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/remove_deprecated_use_of_the_register_keyword.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/remove_deprecated_use_of_the_register_keyword.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/remove_deprecated_use_of_the_register_keyword.md b/lang/cpp17/remove_deprecated_use_of_the_register_keyword.md
index 4bbea0c54..e16ff1aa3 100644
--- a/lang/cpp17/remove_deprecated_use_of_the_register_keyword.md
+++ b/lang/cpp17/remove_deprecated_use_of_the_register_keyword.md
@@ -5,7 +5,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>トライグラフの削除 [N4086] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/removing_trigraphs.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/removing_trigraphs.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/removing_trigraphs.md b/lang/cpp17/removing_trigraphs.md
index 32b4e8580..ea8f27cc6 100644
--- a/lang/cpp17/removing_trigraphs.md
+++ b/lang/cpp17/removing_trigraphs.md
@@ -5,7 +5,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>参照メンバをもつクラスの置き換え [P0137R1] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/replacement_of_class_objects_containing_reference_members.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/replacement_of_class_objects_containing_reference_members.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/replacement_of_class_objects_containing_reference_members.md b/lang/cpp17/replacement_of_class_objects_containing_reference_members.md
index c14c128a5..c005c7767 100644
--- a/lang/cpp17/replacement_of_class_objects_containing_reference_members.md
+++ b/lang/cpp17/replacement_of_class_objects_containing_reference_members.md
@@ -5,7 +5,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>if文とswitch文の条件式と初期化を分離 [P0305R1] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/selection_statements_with_initializer.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/selection_statements_with_initializer.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/selection_statements_with_initializer.md b/lang/cpp17/selection_statements_with_initializer.md
index 853453de2..9015a1481 100644
--- a/lang/cpp17/selection_statements_with_initializer.md
+++ b/lang/cpp17/selection_statements_with_initializer.md
@@ -5,7 +5,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>構造化束縛 [P0217R3] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/structured_bindings.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/structured_bindings.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/structured_bindings.md b/lang/cpp17/structured_bindings.md
index c0b07bf72..ce661c693 100644
--- a/lang/cpp17/structured_bindings.md
+++ b/lang/cpp17/structured_bindings.md
@@ -5,7 +5,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>クラステンプレートのテンプレート引数推論 [P0091R3] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/type_deduction_for_class_templates.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/type_deduction_for_class_templates.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/type_deduction_for_class_templates.md b/lang/cpp17/type_deduction_for_class_templates.md
index 34ece2891..5f3edea73 100644
--- a/lang/cpp17/type_deduction_for_class_templates.md
+++ b/lang/cpp17/type_deduction_for_class_templates.md
@@ -5,7 +5,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>属性の名前空間指定に繰り返しをなくす [P0028R4] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/using_attribute_namespaces.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/using_attribute_namespaces.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/using_attribute_namespaces.md b/lang/cpp17/using_attribute_namespaces.md
index 5d944df0b..a587e9b7f 100644
--- a/lang/cpp17/using_attribute_namespaces.md
+++ b/lang/cpp17/using_attribute_namespaces.md
@@ -5,7 +5,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>UTF-8文字リテラル [N4267] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/utf8_character_literals.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp17/utf8_character_literals.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/utf8_character_literals.md b/lang/cpp17/utf8_character_literals.md
index e0efe041a..ca2bb8ce5 100644
--- a/lang/cpp17/utf8_character_literals.md
+++ b/lang/cpp17/utf8_character_literals.md
@@ -5,7 +5,7 @@
 
 このページはC++17に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>特殊化のアクセスチェック [P0692R1] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/access_checking_on_specializations.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/access_checking_on_specializations.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/access_checking_on_specializations.md b/lang/cpp20/access_checking_on_specializations.md
index e7e3e1126..74dcccd32 100644
--- a/lang/cpp20/access_checking_on_specializations.md
+++ b/lang/cpp20/access_checking_on_specializations.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>関数テンプレートに明示的に型指定した場合にADLで見つからない問題を修正 [P0846R0] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/adl_and_function_templates_that_are_not_visible.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/adl_and_function_templates_that_are_not_visible.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/adl_and_function_templates_that_are_not_visible.md b/lang/cpp20/adl_and_function_templates_that_are_not_visible.md
index 360530f8d..996c53ae4 100644
--- a/lang/cpp20/adl_and_function_templates_that_are_not_visible.md
+++ b/lang/cpp20/adl_and_function_templates_that_are_not_visible.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>丸カッコの値リストからの集成体初期化を許可 [P0960R3] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/allow_initializing_aggregates_from_a_parenthesized_list_of_values.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/allow_initializing_aggregates_from_a_parenthesized_list_of_values.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/allow_initializing_aggregates_from_a_parenthesized_list_of_values.md b/lang/cpp20/allow_initializing_aggregates_from_a_parenthesized_list_of_values.md
index eda127df3..28a702583 100644
--- a/lang/cpp20/allow_initializing_aggregates_from_a_parenthesized_list_of_values.md
+++ b/lang/cpp20/allow_initializing_aggregates_from_a_parenthesized_list_of_values.md
@@ -6,7 +6,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ラムダ式のキャプチャとして[=, this]を許可する [P0409R2] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/allow_lambda_capture_equal_this.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/allow_lambda_capture_equal_this.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/allow_lambda_capture_equal_this.md b/lang/cpp20/allow_lambda_capture_equal_this.md
index f2ca69bff..f125c03cb 100644
--- a/lang/cpp20/allow_lambda_capture_equal_this.md
+++ b/lang/cpp20/allow_lambda_capture_equal_this.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ラムダ式の初期化キャプチャでのパック展開を許可 [P0780R2] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/allow_pack_expansion_in_lambda_init_capture.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/allow_pack_expansion_in_lambda_init_capture.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/allow_pack_expansion_in_lambda_init_capture.md b/lang/cpp20/allow_pack_expansion_in_lambda_init_capture.md
index e4171c60f..300dd5820 100644
--- a/lang/cpp20/allow_pack_expansion_in_lambda_init_capture.md
+++ b/lang/cpp20/allow_pack_expansion_in_lambda_init_capture.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>friend指定された関数内から構造化束縛を使用して非公開メンバ変数にアクセスすることを許可 [P0969R0] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/allow_structured_bindings_to_accessible_members.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/allow_structured_bindings_to_accessible_members.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/allow_structured_bindings_to_accessible_members.md b/lang/cpp20/allow_structured_bindings_to_accessible_members.md
index 7eed7ff0d..94a6b8f19 100644
--- a/lang/cpp20/allow_structured_bindings_to_accessible_members.md
+++ b/lang/cpp20/allow_structured_bindings_to_accessible_members.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>定数式からの仮想関数の呼び出しを許可 [P1064R0] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/allow_virtual_function_calls_in_constant_expressions.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/allow_virtual_function_calls_in_constant_expressions.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/allow_virtual_function_calls_in_constant_expressions.md b/lang/cpp20/allow_virtual_function_calls_in_constant_expressions.md
index 6a6643aae..38fafeba3 100644
--- a/lang/cpp20/allow_virtual_function_calls_in_constant_expressions.md
+++ b/lang/cpp20/allow_virtual_function_calls_in_constant_expressions.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>定数式での`dynamic_cast`、多態的な`typeid`を許可 [P1327R1] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/allowing_dynamic_cast_polymorphic_typeid_in_constant_expressions.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/allowing_dynamic_cast_polymorphic_typeid_in_constant_expressions.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/allowing_dynamic_cast_polymorphic_typeid_in_constant_expressions.md b/lang/cpp20/allowing_dynamic_cast_polymorphic_typeid_in_constant_expressions.md
index 79fb171a6..723cff331 100644
--- a/lang/cpp20/allowing_dynamic_cast_polymorphic_typeid_in_constant_expressions.md
+++ b/lang/cpp20/allowing_dynamic_cast_polymorphic_typeid_in_constant_expressions.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>new式での配列要素数の推論 [P1009R2] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/array_size_deduction_in_new-expressions.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/array_size_deduction_in_new-expressions.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/array_size_deduction_in_new-expressions.md b/lang/cpp20/array_size_deduction_in_new-expressions.md
index 34a3005ac..cf15d21fc 100644
--- a/lang/cpp20/array_size_deduction_in_new-expressions.md
+++ b/lang/cpp20/array_size_deduction_in_new-expressions.md
@@ -6,7 +6,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>定数式内での共用体のアクティブメンバの変更を許可 [P1330R0] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/changing_the_active_member_of_a_union_inside_constexpr.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/changing_the_active_member_of_a_union_inside_constexpr.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/changing_the_active_member_of_a_union_inside_constexpr.md b/lang/cpp20/changing_the_active_member_of_a_union_inside_constexpr.md
index 6cd672333..e1a81ed04 100644
--- a/lang/cpp20/changing_the_active_member_of_a_union_inside_constexpr.md
+++ b/lang/cpp20/changing_the_active_member_of_a_union_inside_constexpr.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>UTF-8エンコーディングされた文字の型として`char8_t`を追加 [P0482R6] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/char8_t.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/char8_t.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/char8_t.md b/lang/cpp20/char8_t.md
index 3b1decd0a..5cd00f1fe 100644
--- a/lang/cpp20/char8_t.md
+++ b/lang/cpp20/char8_t.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>抽象型のチェック [P0929R2] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/checking_for_abstract_class_types.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/checking_for_abstract_class_types.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/checking_for_abstract_class_types.md b/lang/cpp20/checking_for_abstract_class_types.md
index 55f911cad..41a1ff9f7 100644
--- a/lang/cpp20/checking_for_abstract_class_types.md
+++ b/lang/cpp20/checking_for_abstract_class_types.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>集成体クラステンプレートのテンプレート引数推論 [P1816R0] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/class_template_argument_deduction_for_aggregates.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/class_template_argument_deduction_for_aggregates.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/class_template_argument_deduction_for_aggregates.md b/lang/cpp20/class_template_argument_deduction_for_aggregates.md
index 33d731174..d55445ee8 100644
--- a/lang/cpp20/class_template_argument_deduction_for_aggregates.md
+++ b/lang/cpp20/class_template_argument_deduction_for_aggregates.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>エイリアステンプレート経由でのクラステンプレートのテンプレート引数推論 [P1814R0] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/class_template_argument_deduction_for_alias_templates.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/class_template_argument_deduction_for_alias_templates.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/class_template_argument_deduction_for_alias_templates.md b/lang/cpp20/class_template_argument_deduction_for_alias_templates.md
index 848b543ca..fbd29c5cb 100644
--- a/lang/cpp20/class_template_argument_deduction_for_alias_templates.md
+++ b/lang/cpp20/class_template_argument_deduction_for_alias_templates.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>非型テンプレートパラメータとしてクラス型を許可する [P0732R2] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/class_types_in_non-type_template_parameters.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/class_types_in_non-type_template_parameters.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/class_types_in_non-type_template_parameters.md b/lang/cpp20/class_types_in_non-type_template_parameters.md
index 741e36484..743d86a47 100644
--- a/lang/cpp20/class_types_in_non-type_template_parameters.md
+++ b/lang/cpp20/class_types_in_non-type_template_parameters.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンセプト [P0734R0] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/concepts.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/concepts.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/concepts.md b/lang/cpp20/concepts.md
index 97d65c35c..fbf72869a 100644
--- a/lang/cpp20/concepts.md
+++ b/lang/cpp20/concepts.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>一貫比較 [P0515R3] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/consistent_comparison.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/consistent_comparison.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/consistent_comparison.md b/lang/cpp20/consistent_comparison.md
index 5b8cac2d3..92abbb27a 100644
--- a/lang/cpp20/consistent_comparison.md
+++ b/lang/cpp20/consistent_comparison.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンパイル時初期化を強制する`constinit`キーワードを追加 [P1143R2] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/constinit.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/constinit.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/constinit.md b/lang/cpp20/constinit.md
index 278c0de2d..3997d19d8 100644
--- a/lang/cpp20/constinit.md
+++ b/lang/cpp20/constinit.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ポインタから`bool`への変換を縮小変換とする [P1957R2] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/converting_from_pointer_to_bool_should_be_considered_narrowing.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/converting_from_pointer_to_bool_should_be_considered_narrowing.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/converting_from_pointer_to_bool_should_be_considered_narrowing.md b/lang/cpp20/converting_from_pointer_to_bool_should_be_considered_narrowing.md
index 2c03a7b4d..486be44f1 100644
--- a/lang/cpp20/converting_from_pointer_to_bool_should_be_considered_narrowing.md
+++ b/lang/cpp20/converting_from_pointer_to_bool_should_be_considered_narrowing.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コルーチン [P0912R5] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/coroutines.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/coroutines.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/coroutines.md b/lang/cpp20/coroutines.md
index a85f03595..cd7a359c2 100644
--- a/lang/cpp20/coroutines.md
+++ b/lang/cpp20/coroutines.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>状態を持たないラムダ式を、デフォルト構築可能、代入可能とする [P0624R2] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/default_constructible_and_assignable_stateless_lambdas.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/default_constructible_and_assignable_stateless_lambdas.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/default_constructible_and_assignable_stateless_lambdas.md b/lang/cpp20/default_constructible_and_assignable_stateless_lambdas.md
index 43c2c464d..9ada4dbec 100644
--- a/lang/cpp20/default_constructible_and_assignable_stateless_lambdas.md
+++ b/lang/cpp20/default_constructible_and_assignable_stateless_lambdas.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ビットフィールドのメンバ変数初期化 [P0683R1] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/default_member_initializers_for_bit_fields.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/default_member_initializers_for_bit_fields.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/default_member_initializers_for_bit_fields.md b/lang/cpp20/default_member_initializers_for_bit_fields.md
index 89b4aa3f7..571593211 100644
--- a/lang/cpp20/default_member_initializers_for_bit_fields.md
+++ b/lang/cpp20/default_member_initializers_for_bit_fields.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>[=]によるthisの暗黙のキャプチャを非推奨化 [P0806R2] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/deprecate_implicit_capture_of_this_via_defcopy.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/deprecate_implicit_capture_of_this_via_defcopy.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/deprecate_implicit_capture_of_this_via_defcopy.md b/lang/cpp20/deprecate_implicit_capture_of_this_via_defcopy.md
index a2006710a..75358f792 100644
--- a/lang/cpp20/deprecate_implicit_capture_of_this_via_defcopy.md
+++ b/lang/cpp20/deprecate_implicit_capture_of_this_via_defcopy.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>PODを非推奨化 [P0767R1] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/deprecate_pod.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/deprecate_pod.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;PODを非推奨化 [P0767R1]&lt;/span&gt;&lt;span class=&#34;cpp cpp20&#34; title=&#34;C++20で追加&#34;&gt;(C++20)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;このページはC++20に採用された言語機能の変更を解説しています。&lt;/p&gt;
&lt;p&gt;のちのC++規格でさらに変更される場合があるため&lt;a href=&#34;#relative-page&#34;&gt;関連項目&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;../../reference/type_traits/is_pod.html&#34;&gt;POD (Plain Old Data) という型の分類&lt;/a&gt;は、C++11において&lt;a href=&#34;../../reference/type_traits/is_trivial.html&#34;&gt;トリビアル型&lt;/a&gt;と&lt;a href=&#34;../../reference/type_traits/is_standard_layout.html&#34;&gt;スタンダードレイアウト型&lt;/a&gt;に用語が分割された。&lt;/p&gt;
&lt;p&gt;C++20では規格の文面に残っていた「POD」の使用をやめ、スタンダードレイアウト型などのほかの型分類に置き換えた。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;#relative-page&#34; id=&#34;relative-page&#34;&gt;関連項目&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits/is_pod.html&#34;&gt;is_pod&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits/aligned_storage.html&#34;&gt;aligned_storage&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits/aligned_union.html&#34;&gt;aligned_union&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;../../reference/cstddef/max_align_t.html&#34;&gt;max_align_t&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0767r1.html&#34; target=&#34;_blank&#34;&gt;P0767R1 Deprecate POD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2342.htm&#34; target=&#34;_blank&#34;&gt;N2342 POD&#39;s Revisited; Resolving Core Issue 568 (Revision 5)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://faithandbrave.hateblo.jp/entry/20081127/1227777378&#34; target=&#34;_blank&#34;&gt;C++0x POD再考 - Faith and Brave - C++で遊ぼう&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;C++11においてPODという用語が分割された文書&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>添字演算子内でのカンマ演算子の使用を非推奨化 [P1161R3] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/deprecate_uses_of_the_comma_operator_in_subscripting_expressions.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/deprecate_uses_of_the_comma_operator_in_subscripting_expressions.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/deprecate_uses_of_the_comma_operator_in_subscripting_expressions.md b/lang/cpp20/deprecate_uses_of_the_comma_operator_in_subscripting_expressions.md
index be7420c5b..367b697ea 100644
--- a/lang/cpp20/deprecate_uses_of_the_comma_operator_in_subscripting_expressions.md
+++ b/lang/cpp20/deprecate_uses_of_the_comma_operator_in_subscripting_expressions.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ほとんどの`volatile`を非推奨化 [P1152R4] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/deprecating_volatile.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/deprecating_volatile.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/deprecating_volatile.md b/lang/cpp20/deprecating_volatile.md
index 9586db0d6..6efb68a5a 100644
--- a/lang/cpp20/deprecating_volatile.md
+++ b/lang/cpp20/deprecating_volatile.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>指示付き初期化 [P0329R4] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/designated_initialization.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/designated_initialization.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/designated_initialization.md b/lang/cpp20/designated_initialization.md
index 257318aed..57e3f1491 100644
--- a/lang/cpp20/designated_initialization.md
+++ b/lang/cpp20/designated_initialization.md
@@ -6,7 +6,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>型の文脈でtypenameの省略を許可 [P0634R3] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/down_with_typename.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/down_with_typename.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/down_with_typename.md b/lang/cpp20/down_with_typename.md
index 332621f08..90eb921e4 100644
--- a/lang/cpp20/down_with_typename.md
+++ b/lang/cpp20/down_with_typename.md
@@ -6,7 +6,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>可変長データを扱うクラスの効率的なdelete [P0722R3] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/efficient_sized_delete_for_variable_sized_classes.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/efficient_sized_delete_for_variable_sized_classes.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/efficient_sized_delete_for_variable_sized_classes.md b/lang/cpp20/efficient_sized_delete_for_variable_sized_classes.md
index e995bf577..2dc51b768 100644
--- a/lang/cpp20/efficient_sized_delete_for_variable_sized_classes.md
+++ b/lang/cpp20/efficient_sized_delete_for_variable_sized_classes.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexpr関数内で未評価のインラインアセンブリを許可することによる組み込み関数のconstexpr有効化 [P1668R1] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/enabling_constexpr_intrinsics_by_permitting_unevaluated_inline-assembly_in_constexpr_functions.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/enabling_constexpr_intrinsics_by_permitting_unevaluated_inline-assembly_in_constexpr_functions.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/enabling_constexpr_intrinsics_by_permitting_unevaluated_inline-assembly_in_constexpr_functions.md b/lang/cpp20/enabling_constexpr_intrinsics_by_permitting_unevaluated_inline-assembly_in_constexpr_functions.md
index ecbff6e9f..7e6af1ac6 100644
--- a/lang/cpp20/enabling_constexpr_intrinsics_by_permitting_unevaluated_inline-assembly_in_constexpr_functions.md
+++ b/lang/cpp20/enabling_constexpr_intrinsics_by_permitting_unevaluated_inline-assembly_in_constexpr_functions.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>関数を条件付きでexplicitにする構文を追加 [P0892R2] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/explicit_bool.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/explicit_bool.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/explicit_bool.md b/lang/cpp20/explicit_bool.md
index c8e39641d..3f744c5f7 100644
--- a/lang/cpp20/explicit_bool.md
+++ b/lang/cpp20/explicit_bool.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>構造化束縛を拡張して通常の変数宣言のように使用できるようにする [P1091R3] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/extending_structured_bindings_to_be_more_like_variable_declarations.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/extending_structured_bindings_to_be_more_like_variable_declarations.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/extending_structured_bindings_to_be_more_like_variable_declarations.md b/lang/cpp20/extending_structured_bindings_to_be_more_like_variable_declarations.md
index 9d73404bc..d3999893f 100644
--- a/lang/cpp20/extending_structured_bindings_to_be_more_like_variable_declarations.md
+++ b/lang/cpp20/extending_structured_bindings_to_be_more_like_variable_declarations.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ジェネリックラムダのテンプレート構文 [P0428R2] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/familiar_template_syntax_for_generic_lambdas.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/familiar_template_syntax_for_generic_lambdas.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/familiar_template_syntax_for_generic_lambdas.md b/lang/cpp20/familiar_template_syntax_for_generic_lambdas.md
index bd1567078..5c8013d87 100644
--- a/lang/cpp20/familiar_template_syntax_for_generic_lambdas.md
+++ b/lang/cpp20/familiar_template_syntax_for_generic_lambdas.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>機能テストマクロ -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/feature_test_macros.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/feature_test_macros.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;機能テストマクロ&lt;/span&gt;&lt;span class=&#34;cpp cpp20&#34; title=&#34;C++20で追加&#34;&gt;(C++20)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;このページはC++20に採用された言語機能の変更を解説しています。&lt;/p&gt;
&lt;p&gt;のちのC++規格でさらに変更される場合があるため&lt;a href=&#34;#relative-page&#34;&gt;関連項目&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;h3&gt;言語機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;マクロ名&lt;/th&gt;
&lt;th&gt;値&lt;/th&gt;
&lt;th&gt;機能&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_aggregate_paren_init&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201902L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;allow_initializing_aggregates_from_a_parenthesized_list_of_values.html&#34;&gt;丸カッコの値リストからの集成体初期化を許可&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_char8_t&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201811L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;char8_t.html&#34;&gt;UTF-8エンコーディングされた文字の型として&lt;code&gt;char8_t&lt;/code&gt;を追加&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_concepts&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201907L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;concepts.html&#34;&gt;コンセプト&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_conditional_explicit&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201806L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;explicit_bool.html&#34;&gt;関数を条件付きで&lt;code&gt;explicit&lt;/code&gt;にする構文を追加&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_constexpr&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201907L&lt;/code&gt;&lt;br /&gt;&lt;code&gt;202002L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;allow_virtual_function_calls_in_constant_expressions.html&#34;&gt;定数式からの仮想関数の呼び出しを許可&lt;/a&gt;&lt;br /&gt;&lt;a href=&#34;allowing_dynamic_cast_polymorphic_typeid_in_constant_expressions.html&#34;&gt;定数式での&lt;code&gt;dynamic_cast&lt;/code&gt;、多態的な&lt;code&gt;typeid&lt;/code&gt;を許可&lt;/a&gt;&lt;br /&gt;&lt;a href=&#34;try-catch_blocks_in_constexpr_functions.html&#34;&gt;constexpr関数内でのtry-catchブロックを許可&lt;/a&gt;&lt;br /&gt;&lt;a href=&#34;changing_the_active_member_of_a_union_inside_constexpr.html&#34;&gt;定数式内での共用体のアクティブメンバの変更を許可&lt;/a&gt;&lt;br /&gt;&lt;a href=&#34;permitting_trivial_default_initialization_in_constexpr_contexts.html&#34;&gt;constexpr関数内でのトリビアルなデフォルト初期化を許可&lt;/a&gt;&lt;br /&gt;&lt;a href=&#34;enabling_constexpr_intrinsics_by_permitting_unevaluated_inline-assembly_in_constexpr_functions.html&#34;&gt;constexpr関数内で未評価のインラインアセンブリを許可することによる組み込み関数のconstexpr有効化&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_constexpr_dynamic_alloc&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201907L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;more_constexpr_containers.html&#34;&gt;可変サイズをもつコンテナの&lt;code&gt;constexpr&lt;/code&gt;化&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_constexpr_in_decltype&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201711L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;less_eager_instantiation_of_constexpr_functions.html&#34;&gt;評価されない文脈での定数式評価によって特殊メンバ関数がインスタンス化されることを規定&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_consteval&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201811L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;immediate_functions.html&#34;&gt;即時関数&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_constinit&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201907L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;constinit.html&#34;&gt;コンパイル時初期化を強制する&lt;code&gt;constinit&lt;/code&gt;キーワードを追加&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_deduction_guides&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201907L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;class_template_argument_deduction_for_aggregates.html&#34;&gt;集成体クラステンプレートのテンプレート引数推論&lt;/a&gt;&lt;br /&gt;&lt;a href=&#34;class_template_argument_deduction_for_alias_templates.html&#34;&gt;エイリアステンプレート経由でのクラステンプレートのテンプレート引数推論&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_designated_initializers&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201707L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;designated_initialization.html&#34;&gt;指示付き初期化&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_generic_lambdas&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201707L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;familiar_template_syntax_for_generic_lambdas.html&#34;&gt;ジェネリックラムダのテンプレート構文&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_impl_coroutine&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201902L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;coroutines.html&#34;&gt;コルーチン&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_impl_destroying_delete&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201806L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;efficient_sized_delete_for_variable_sized_classes.html&#34;&gt;可変長データを扱うクラスの効率的な&lt;code&gt;delete&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_impl_three_way_comparison&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201907L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;consistent_comparison.html&#34;&gt;一貫比較&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_init_captures&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201803L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;allow_pack_expansion_in_lambda_init_capture.html&#34;&gt;ラムダ式の初期化キャプチャでのパック展開を許可&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_modules&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201907L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;modules.html&#34;&gt;モジュール&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_nontype_template_args&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201911L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;class_types_in_non-type_template_parameters.html&#34;&gt;非型テンプレートパラメータとしてクラス型を許可する&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_using_enum&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201907L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;using_enum.html&#34;&gt;スコープ付き列挙型のusing宣言&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;ライブラリ&lt;/h3&gt;
&lt;p&gt;ライブラリの機能テストマクロは全て&lt;code&gt;&lt;a href=&#34;../../reference/version.html&#34;&gt;&amp;lt;version&amp;gt;&lt;/a&gt;&lt;/code&gt;でも提供される。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;マクロ名&lt;/th&gt;
&lt;th&gt;値&lt;/th&gt;
&lt;th&gt;機能&lt;/th&gt;
&lt;th&gt;ヘッダ&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_array_constexpr&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201803L&lt;/code&gt;&lt;br /&gt;&lt;code&gt;201806L&lt;/code&gt;&lt;br /&gt;&lt;code&gt;201811L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;std::array&lt;/code&gt;の完全&lt;code&gt;constexpr&lt;/code&gt;対応&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/iterator.html&#34;&gt;&amp;lt;iterator&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt;&lt;code&gt;&lt;a href=&#34;../../reference/array.html&#34;&gt;&amp;lt;array&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_assume_aligned&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201811L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/memory/assume_aligned.html&#34;&gt;std::assume_aligned()&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/memory.html&#34;&gt;&amp;lt;memory&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_atomic_flag_test&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201907L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/atomic/atomic_flag/test.html&#34;&gt;std::atomic_flag::test()&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/atomic.html&#34;&gt;&amp;lt;atomic&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_atomic_float&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201711L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;../../reference/atomic/atomic.html&#34;&gt;&lt;code&gt;std::atomic&lt;/code&gt;の浮動小数点数型に対する特殊化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/atomic.html&#34;&gt;&amp;lt;atomic&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_atomic_lock_free_type_aliases&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201907L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/atomic/atomic.html&#34;&gt;atomic_signed_lock_free/atomic_unsigned_lock_free&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/atomic.html&#34;&gt;&amp;lt;atomic&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_atomic_ref&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201806L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/atomic/atomic_ref.html&#34;&gt;std::atomic_ref&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/atomic.html&#34;&gt;&amp;lt;atomic&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_atomic_shared_ptr&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201711L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;../../reference/memory/atomic.html&#34;&gt;&lt;code&gt;std::atomic&lt;/code&gt;の&lt;code&gt;std::shared_ptr/std::weak_ptr&lt;/code&gt;に対する特殊化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/memory.html&#34;&gt;&amp;lt;memory&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_atomic_value_initialization&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201911L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;../../reference/atomic/atomic_flag/op_constructor.html&#34;&gt;&lt;code&gt;std::atomic_flag&lt;/code&gt;の値初期化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/atomic.html&#34;&gt;&amp;lt;atomic&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt;&lt;code&gt;&lt;a href=&#34;../../reference/memory.html&#34;&gt;&amp;lt;memory&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_atomic_wait&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201907L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/atomic/atomic/wait.html&#34;&gt;std::atomic::wait()&lt;/a&gt;&lt;/code&gt;、&lt;code&gt;&lt;a href=&#34;../../reference/atomic/atomic/notify_one.html&#34;&gt;std::atomic::notify_one()&lt;/a&gt;&lt;/code&gt;、&lt;code&gt;&lt;a href=&#34;../../reference/atomic/atomic/notify_all.html&#34;&gt;std::atomic::notify_all()&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/atomic.html&#34;&gt;&amp;lt;atomic&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_barrier&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201907L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/barrier.html&#34;&gt;&amp;lt;barrier&amp;gt;&lt;/a&gt;&lt;/code&gt;の追加&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/barrier.html&#34;&gt;&amp;lt;barrier&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_bind_front&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201811L&lt;/code&gt;&lt;br /&gt;&lt;code&gt;201907L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/functional/bind_front.html&#34;&gt;std::bind_front()&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/functional.html&#34;&gt;&amp;lt;functional&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_bit_cast&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201806L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/bit/bit_cast.html&#34;&gt;std::bit_cast()&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/bit.html&#34;&gt;&amp;lt;bit&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_bitops&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201907L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/bit.html&#34;&gt;&amp;lt;bit&amp;gt;&lt;/a&gt;&lt;/code&gt;の追加&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/bit.html&#34;&gt;&amp;lt;bit&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_bounded_array_traits&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201902L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits/is_bounded_array.html&#34;&gt;std::is_bounded_array&lt;/a&gt;&lt;/code&gt;、&lt;code&gt;&lt;a href=&#34;../../reference/type_traits/is_unbounded_array.html&#34;&gt;std::is_unbounded_array&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits.html&#34;&gt;&amp;lt;type_traits&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_char8_t&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201811L&lt;/code&gt;&lt;br /&gt;&lt;code&gt;201907L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;char8_t&lt;/code&gt;に対する特殊化の追加&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/atomic.html&#34;&gt;&amp;lt;atomic&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt;&lt;code&gt;&lt;a href=&#34;../../reference/filesystem.html&#34;&gt;&amp;lt;filesystem&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt;&lt;code&gt;&lt;a href=&#34;../../reference/istream.html&#34;&gt;&amp;lt;istream&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt;&lt;code&gt;&lt;a href=&#34;../../reference/limits.html&#34;&gt;&amp;lt;limits&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt;&lt;code&gt;&lt;a href=&#34;../../reference/locale.html&#34;&gt;&amp;lt;locale&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt;&lt;code&gt;&lt;a href=&#34;../../reference/ostream.html&#34;&gt;&amp;lt;ostream&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt;&lt;code&gt;&lt;a href=&#34;../../reference/string.html&#34;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt;&lt;code&gt;&lt;a href=&#34;../../reference/string_view.html&#34;&gt;&amp;lt;string_view&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_chrono&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201907L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;カレンダーとタイムゾーン&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/chrono.html&#34;&gt;&amp;lt;chrono&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_concepts&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;202002L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/concepts.html&#34;&gt;&amp;lt;concepts&amp;gt;&lt;/a&gt;&lt;/code&gt;の追加&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/concepts.html&#34;&gt;&amp;lt;concepts&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_constexpr_algorithms&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201806L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;多くのアルゴリズムに&lt;code&gt;constexpr&lt;/code&gt;を追加&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/algorithm.html&#34;&gt;&amp;lt;algorithm&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_constexpr_complex&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201711L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/complex/complex.html&#34;&gt;std::complex&lt;/a&gt;&lt;/code&gt;の&lt;code&gt;constexpr&lt;/code&gt;対応&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/complex.html&#34;&gt;&amp;lt;complex&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_constexpr_dynamic_alloc&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201907L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/memory/destroy_at.html&#34;&gt;std::destroy_at&lt;/a&gt;&lt;/code&gt;ファミリと&lt;code&gt;&lt;a href=&#34;../../reference/memory/allocator.html&#34;&gt;std::allocator&lt;/a&gt;&lt;/code&gt;/&lt;code&gt;&lt;a href=&#34;../../reference/memory/allocator_traits.html&#34;&gt;std::alocator_traits&lt;/a&gt;&lt;/code&gt;の&lt;code&gt;constexpr&lt;/code&gt;対応&lt;br /&gt;&lt;code&gt;&lt;a href=&#34;../../reference/memory/construct_at.html&#34;&gt;std::construct_at&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/memory.html&#34;&gt;&amp;lt;memory&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_constexpr_functional&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201907L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;std::invoke&lt;/code&gt;、&lt;code&gt;std::reference_wrapper&lt;/code&gt;、&lt;code&gt;std::not_fn&lt;/code&gt;、&lt;code&gt;std::bind_front&lt;/code&gt;、&lt;code&gt;std::bind&lt;/code&gt;、&lt;code&gt;std::mem_fn&lt;/code&gt;の&lt;code&gt;constexpr&lt;/code&gt;対応&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/functional.html&#34;&gt;&amp;lt;functional&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_constexpr_iterator&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201811L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/iterator/back_insert_iterator.html&#34;&gt;back_insert_iterator&lt;/a&gt;&lt;/code&gt;、&lt;code&gt;&lt;a href=&#34;../../reference/iterator/front_insert_iterator.html&#34;&gt;front_insert_iterator&lt;/a&gt;&lt;/code&gt;、&lt;code&gt;&lt;a href=&#34;../../reference/iterator/insert_iterator.html&#34;&gt;insert_iterator&lt;/a&gt;&lt;/code&gt;の&lt;code&gt;constexpr&lt;/code&gt;対応&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/iterator.html&#34;&gt;&amp;lt;iterator&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_constexpr_memory&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201811L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/memory/pointer_traits.html&#34;&gt;std::pointer_traits&lt;/a&gt;&lt;/code&gt;の&lt;code&gt;constexpr&lt;/code&gt;対応&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/memory.html&#34;&gt;&amp;lt;memory&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_constexpr_numeric&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201911L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/numeric.html&#34;&gt;&amp;lt;numeric&amp;gt;&lt;/a&gt;&lt;/code&gt;の数値アルゴリズムの&lt;code&gt;constexpr&lt;/code&gt;対応&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/numeric.html&#34;&gt;&amp;lt;numeric&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_constexpr_string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201907L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/string/basic_string.html&#34;&gt;std::string&lt;/a&gt;&lt;/code&gt;の&lt;code&gt;constexpr&lt;/code&gt;対応&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/string.html&#34;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_constexpr_string_view&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201811L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/string_view/basic_string_view/copy.html&#34;&gt;std::string_view::copy&lt;/a&gt;&lt;/code&gt;の&lt;code&gt;constexpr&lt;/code&gt;対応&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/string_view.html&#34;&gt;&amp;lt;string_view&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_constexpr_tuple&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201811L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/tuple/tuple.html&#34;&gt;std::tuple&lt;/a&gt;&lt;/code&gt;の&lt;code&gt;constexpr&lt;/code&gt;追加対応（一部のコンストラクタと代入演算子）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/tuple.html&#34;&gt;&amp;lt;tuple&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_constexpr_utility&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201811L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/utility/pair.html&#34;&gt;std::pair&lt;/a&gt;&lt;/code&gt;の&lt;code&gt;constexpr&lt;/code&gt;追加対応（一部のコンストラクタと代入演算子）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/utility.html&#34;&gt;&amp;lt;utility&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_constexpr_vector&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201907L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/vector/vector.html&#34;&gt;std::vector&lt;/a&gt;&lt;/code&gt;の&lt;code&gt;constexpr&lt;/code&gt;対応&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/vector.html&#34;&gt;&amp;lt;vector&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_coroutine&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201902L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/coroutine.html&#34;&gt;&amp;lt;coroutine&amp;gt;&lt;/a&gt;&lt;/code&gt;ヘッダの追加&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/coroutine.html&#34;&gt;&amp;lt;coroutine&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_destroying_delete&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201806L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/new/destroying_delete_t.html&#34;&gt;std::destroying_delete_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/new.html&#34;&gt;&amp;lt;new&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_endian&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201907L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/bit/endian.html&#34;&gt;std::endian&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/bit.html&#34;&gt;&amp;lt;bit&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_erase_if&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;202002L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;各コンテナに対する&lt;code&gt;std::erase&lt;/code&gt;、&lt;code&gt;std::erase_if&lt;/code&gt;の特殊化&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/string.html&#34;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt;&lt;code&gt;&lt;a href=&#34;../../reference/deque.html&#34;&gt;&amp;lt;deque&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt;&lt;code&gt;&lt;a href=&#34;../../reference/forward_list.html&#34;&gt;&amp;lt;forward_list&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt;&lt;code&gt;&lt;a href=&#34;../../reference/list.html&#34;&gt;&amp;lt;list&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt;&lt;code&gt;&lt;a href=&#34;../../reference/vector.html&#34;&gt;&amp;lt;vector&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt;&lt;code&gt;&lt;a href=&#34;../../reference/map.html&#34;&gt;&amp;lt;map&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt;&lt;code&gt;&lt;a href=&#34;../../reference/set.html&#34;&gt;&amp;lt;set&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt;&lt;code&gt;&lt;a href=&#34;../../reference/unordered_map.html&#34;&gt;&amp;lt;unordered_map&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt;&lt;code&gt;&lt;a href=&#34;../../reference/unordered_set.html&#34;&gt;&amp;lt;unordered_set&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_execution&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201902L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/execution/execution/execution_policy.html&#34;&gt;std::execution::unsequenced_policy&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/execution.html&#34;&gt;&amp;lt;execution&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_format&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201907L&lt;/code&gt;&lt;br /&gt;&lt;code&gt;202106L&lt;/code&gt;&lt;br /&gt;&lt;code&gt;202110L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt;ヘッダ&lt;br /&gt;コンパイル時フォーマット文字列検査/&lt;code&gt;&lt;a href=&#34;../../reference/format/vformat.html&#34;&gt;std::vformat&lt;/a&gt;&lt;/code&gt;のコードサイズ削減&lt;br /&gt;&lt;code&gt;std::chrono&lt;/code&gt;のフォーマットにおけるロケール指定の修正/&lt;code&gt;const&lt;/code&gt;だとフォーマットできない型に対する対応&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/format.html&#34;&gt;&amp;lt;format&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_generic_unordered_lookup&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201811L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;非順序連想コンテナの&lt;code&gt;find(), count(), contains(), equal_range()&lt;/code&gt;に対するHeterogeneous Overload追加&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/unordered_map.html&#34;&gt;&amp;lt;unordered_map&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt;&lt;code&gt;&lt;a href=&#34;../../reference/unordered_set.html&#34;&gt;&amp;lt;unordered_set&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_int_pow2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;202002L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;bit&amp;gt;&lt;/code&gt;の2の冪乗に関する操作を行う関数の名前変更&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/bit.html&#34;&gt;&amp;lt;bit&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_integer_comparison_functions&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;202002L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/utility/cmp_equal.html&#34;&gt;std::cmp_equal()&lt;/a&gt;&lt;/code&gt;等の整数比較関数と&lt;code&gt;&lt;a href=&#34;../../reference/utility/in_range.html&#34;&gt;std::in_range()&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/utility.html&#34;&gt;&amp;lt;utility&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_interpolate&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201902L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/cmath/lerp.html&#34;&gt;std::lerp()&lt;/a&gt;&lt;/code&gt;と&lt;code&gt;&lt;a href=&#34;../../reference/numeric/midpoint.html&#34;&gt;std::midpoint()&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/cmath.html&#34;&gt;&amp;lt;cmath&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt;&lt;code&gt;&lt;a href=&#34;../../reference/numeric.html&#34;&gt;&amp;lt;numeric&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_is_constant_evaluated&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201811L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits/is_constant_evaluated.html&#34;&gt;std::is_constant_evaluated()&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits.html&#34;&gt;&amp;lt;type_traits&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_is_layout_compatible&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201907L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits/is_layout_compatible.html&#34;&gt;std::is_layout_compatible&lt;/a&gt;&lt;/code&gt;と&lt;code&gt;&lt;a href=&#34;../../reference/type_traits/is_corresponding_member.html&#34;&gt;is_corresponding_member&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits.html&#34;&gt;&amp;lt;type_traits&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_is_nothrow_convertible&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201806L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits/is_nothrow_convertible.html&#34;&gt;std::is_nothrow_convertible&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits.html&#34;&gt;&amp;lt;type_traits&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_is_pointer_interconvertible&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201907L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits/is_corresponding_member.html&#34;&gt;std::is_corresponding_member&lt;/a&gt;&lt;/code&gt;と&lt;code&gt;&lt;a href=&#34;../../reference/type_traits/is_pointer_interconvertible_base_of.html&#34;&gt;std::is_pointer_interconvertible_base_of&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits.html&#34;&gt;&amp;lt;type_traits&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_jthread&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201911L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/thread/jthread.html&#34;&gt;std::jthread&lt;/a&gt;&lt;/code&gt;と&lt;code&gt;stop_token&lt;/code&gt;による協調的キャンセル機構&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/stop_token.html&#34;&gt;&amp;lt;stop_token&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt;&lt;code&gt;&lt;a href=&#34;../../reference/thread.html&#34;&gt;&amp;lt;thread&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_latch&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201907L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/latch/latch.html&#34;&gt;std::latch&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/latch.html&#34;&gt;&amp;lt;latch&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_list_remove_return_type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201806L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;std::list&lt;/code&gt;と&lt;code&gt;std::forward_list&lt;/code&gt;の&lt;code&gt;remove(), remove_if(), unique()&lt;/code&gt;の戻り値型変更&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/forward_list.html&#34;&gt;&amp;lt;forward_list&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt;&lt;code&gt;&lt;a href=&#34;../../reference/list.html&#34;&gt;&amp;lt;list&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_math_constants&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201907L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;数学定数&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/numbers.html&#34;&gt;&amp;lt;numbers&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_polymorphic_allocator&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201902L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/memory_resource/polymorphic_allocator.html&#34;&gt;std::pmr::polymorphic_allocator&lt;/a&gt;&lt;/code&gt;の改修&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/memory.html&#34;&gt;&amp;lt;memory&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_ranges&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201911L&lt;/code&gt;&lt;br /&gt;&lt;code&gt;202106L&lt;/code&gt;&lt;br /&gt;&lt;code&gt;202110L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;RangeライブラリとRangeアルゴリズム&lt;br /&gt;&lt;code&gt;&lt;a href=&#34;../../reference/ranges/view.html&#34;&gt;view&lt;/a&gt;&lt;/code&gt;コンセプトのデフォルト構築要求を削除&lt;br /&gt;所有権を持つ&lt;code&gt;view&lt;/code&gt;の許可と&lt;code&gt;&lt;a href=&#34;../../reference/ranges/owning_view.html&#34;&gt;owning_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/algorithm.html&#34;&gt;&amp;lt;algorithm&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt;&lt;code&gt;&lt;a href=&#34;../../reference/functional.html&#34;&gt;&amp;lt;functional&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt;&lt;code&gt;&lt;a href=&#34;../../reference/iterator.html&#34;&gt;&amp;lt;iterator&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt;&lt;code&gt;&lt;a href=&#34;../../reference/memory.html&#34;&gt;&amp;lt;memory&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt;&lt;code&gt;&lt;a href=&#34;../../reference/ranges.html&#34;&gt;&amp;lt;ranges&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_remove_cvref&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201711L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits/remove_cvref.html&#34;&gt;std::remove_cvref&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits.html&#34;&gt;&amp;lt;type_traits&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_semaphore&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201907L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/semaphore/counting_semaphore.html&#34;&gt;std::counting_semaphore&lt;/a&gt;&lt;/code&gt;と&lt;code&gt;std::binary_semaphore&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/semaphore.html&#34;&gt;&amp;lt;semaphore&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_shared_ptr_arrays&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201707L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/memory/make_shared.html&#34;&gt;std::make_shared&lt;/a&gt;&lt;/code&gt;と&lt;code&gt;&lt;a href=&#34;../../reference/memory/allocate_shared.html&#34;&gt;std::allocate_shared&lt;/a&gt;&lt;/code&gt;の配列対応&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/memory.html&#34;&gt;&amp;lt;memory&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_shift&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201806L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/algorithm/shift_left.html&#34;&gt;std::shift_left&lt;/a&gt;&lt;/code&gt;と&lt;code&gt;&lt;a href=&#34;../../reference/algorithm/shift_right.html&#34;&gt;std::shift_right&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/algorithm.html&#34;&gt;&amp;lt;algorithm&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_smart_ptr_for_overwrite&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;202002L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/memory/make_shared_for_overwrite.html&#34;&gt;std::make_shared_for_overwrite()&lt;/a&gt;&lt;/code&gt;と&lt;code&gt;&lt;a href=&#34;../../reference/memory/allocate_shared_for_overwrite.html&#34;&gt;std::allocate_shared_for_overwrite()&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/memory.html&#34;&gt;&amp;lt;memory&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_source_location&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201907L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/source_location/source_location.html&#34;&gt;std::source_location&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/source_location.html&#34;&gt;&amp;lt;source_location&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_span&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;202002L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/span/span.html&#34;&gt;std::span&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/span.html&#34;&gt;&amp;lt;span&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_ssize&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201902L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/iterator/ssize.html&#34;&gt;std::ssize()&lt;/a&gt;&lt;/code&gt;と&lt;code&gt;std::span&lt;/code&gt;で使用する整数型の符号なし（&lt;code&gt;size_t&lt;/code&gt;）への変更&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/iterator.html&#34;&gt;&amp;lt;iterator&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_starts_ends_with&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201711L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;std::string&lt;/code&gt;と&lt;code&gt;std::string_view&lt;/code&gt;の&lt;code&gt;starts_with()&lt;/code&gt;と&lt;code&gt;ends_with()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/string.html&#34;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt;&lt;code&gt;&lt;a href=&#34;../../reference/string_view.html&#34;&gt;&amp;lt;string_view&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_string_view&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201803L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;std::string&lt;/code&gt;と&lt;code&gt;std::string_view&lt;/code&gt;のイテレータの&lt;code&gt;constexpr&lt;/code&gt;対応&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/string.html&#34;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;br /&gt;&lt;code&gt;&lt;a href=&#34;../../reference/string_view.html&#34;&gt;&amp;lt;string_view&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_syncbuf&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201803L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;同期化出力ストリーム（&lt;code&gt;std::osyncstream&lt;/code&gt;）とバッファ（&lt;code&gt;std::syncbuf&lt;/code&gt;）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/syncstream.html&#34;&gt;&amp;lt;syncstream&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_three_way_comparison&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201907L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;標準ライブラリの三方比較演算子対応&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/compare.html&#34;&gt;&amp;lt;compare&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_to_address&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201711L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/memory/to_address.html&#34;&gt;std::to_address()&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/memory.html&#34;&gt;&amp;lt;memory&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_to_array&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201907L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/array/to_array.html&#34;&gt;std::to_array()&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/array.html&#34;&gt;&amp;lt;array&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_type_identity&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201806L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits/type_identity.html&#34;&gt;std::type_identity&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits.html&#34;&gt;&amp;lt;type_traits&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_unwrap_ref&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201811L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits/unwrap_reference.html&#34;&gt;std::unwrap_reference&lt;/a&gt;&lt;/code&gt;と&lt;code&gt;&lt;a href=&#34;../../reference/type_traits/unwrap_ref_decay.html&#34;&gt;std::unwrap_ref_decay&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits.html&#34;&gt;&amp;lt;type_traits&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://isocpp.org/std/standing-documents/sd-6-sg10-feature-test-recommendations&#34; target=&#34;_blank&#34;&gt;SD-FeatureTest: Feature-Test Macros and Policies - isocpp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>const修飾されたメンバポインタの制限を修正 [P0704R1] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/fixing_const_qualified_pointers_to_members.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/fixing_const_qualified_pointers_to_members.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/fixing_const_qualified_pointers_to_members.md b/lang/cpp20/fixing_const_qualified_pointers_to_members.md
index b5fb53549..054b5f288 100644
--- a/lang/cpp20/fixing_const_qualified_pointers_to_members.md
+++ b/lang/cpp20/fixing_const_qualified_pointers_to_members.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>autoパラメータによる関数テンプレートの簡易定義 -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/function_templates_with_auto_parameters.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/function_templates_with_auto_parameters.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/function_templates_with_auto_parameters.md b/lang/cpp20/function_templates_with_auto_parameters.md
index 445873b43..4a4109825 100644
--- a/lang/cpp20/function_templates_with_auto_parameters.md
+++ b/lang/cpp20/function_templates_with_auto_parameters.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>即時関数 [P1073R3] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/immediate_functions.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/immediate_functions.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/immediate_functions.md b/lang/cpp20/immediate_functions.md
index 4bcdff0d8..945957495 100644
--- a/lang/cpp20/immediate_functions.md
+++ b/lang/cpp20/immediate_functions.md
@@ -6,7 +6,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>未初期化領域への暗黙的なオブジェクト構築 -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/implicit_creation_of_objects_for_low-level_object_manipulation.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/implicit_creation_of_objects_for_low-level_object_manipulation.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/implicit_creation_of_objects_for_low-level_object_manipulation.md b/lang/cpp20/implicit_creation_of_objects_for_low-level_object_manipulation.md
index 632a6de5e..397f83ecf 100644
--- a/lang/cpp20/implicit_creation_of_objects_for_low-level_object_manipulation.md
+++ b/lang/cpp20/implicit_creation_of_objects_for_low-level_object_manipulation.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>空オブジェクトに対する最適化を支援する属性[[no_unique_address]] [P0840R2] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/language_support_for_empty_objects.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/language_support_for_empty_objects.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/language_support_for_empty_objects.md b/lang/cpp20/language_support_for_empty_objects.md
index f1b35705e..d7556df21 100644
--- a/lang/cpp20/language_support_for_empty_objects.md
+++ b/lang/cpp20/language_support_for_empty_objects.md
@@ -6,7 +6,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>評価されない文脈での定数式評価によって特殊メンバ関数がインスタンス化されることを規定 [P0859R0] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/less_eager_instantiation_of_constexpr_functions.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/less_eager_instantiation_of_constexpr_functions.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/less_eager_instantiation_of_constexpr_functions.md b/lang/cpp20/less_eager_instantiation_of_constexpr_functions.md
index 3628038c7..a5b2da250 100644
--- a/lang/cpp20/less_eager_instantiation_of_constexpr_functions.md
+++ b/lang/cpp20/less_eager_instantiation_of_constexpr_functions.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>確率が高い分岐と低い分岐を伝える属性 [[likely]], [[unlikely]] [P0479R5] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/likely_and_unlikely_attributes.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/likely_and_unlikely_attributes.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/likely_and_unlikely_attributes.md b/lang/cpp20/likely_and_unlikely_attributes.md
index f368c8873..c1b05c11e 100644
--- a/lang/cpp20/likely_and_unlikely_attributes.md
+++ b/lang/cpp20/likely_and_unlikely_attributes.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>char16_tとchar32_tの文字・文字列リテラルを、文字コードUTF-16/32に規定 [P1041R4] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/make_char16t_char32t_string_literals_be_utf16_32.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/make_char16t_char32t_string_literals_be_utf16_32.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;char16_tとchar32_tの文字・文字列リテラルを、文字コードUTF-16/32に規定 [P1041R4]&lt;/span&gt;&lt;span class=&#34;cpp cpp20&#34; title=&#34;C++20で追加&#34;&gt;(C++20)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;このページはC++20に採用された言語機能の変更を解説しています。&lt;/p&gt;
&lt;p&gt;のちのC++規格でさらに変更される場合があるため&lt;a href=&#34;#relative-page&#34;&gt;関連項目&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;C++11で追加された文字型&lt;a href=&#34;../cpp11/char16_32.html&#34;&gt;&lt;code&gt;char16_t&lt;/code&gt;と&lt;code&gt;char32_t&lt;/code&gt;&lt;/a&gt;の文字・文字列リテラルの文字コード、C++20からはUTF-16とUTF-32であることが規定される。&lt;/p&gt;
&lt;p&gt;これまでは、以下のような仕様であった：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;uchar&amp;gt;&lt;/code&gt;ヘッダでマクロ&lt;code&gt;__STDC_UTF_16__&lt;/code&gt;が定義される場合、&lt;code&gt;char16_t&lt;/code&gt;型の値はUTF-16の妥当なコードポイントを持つ。そうでない場合、&lt;code&gt;char16_t&lt;/code&gt;型の値は実装定義の文字コードとなる。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;uchar&amp;gt;&lt;/code&gt;ヘッダでマクロ&lt;code&gt;__STDC_UTF_32__&lt;/code&gt;が定義される場合、&lt;code&gt;char32_t&lt;/code&gt;型の値はUTF-32の妥当なコードポイントを持つ。そうでない場合、&lt;code&gt;char32_t&lt;/code&gt;型の値は実装定義の文字コードとなる。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;C++20では、無条件にUTF-16とUTF-32であることが規定される。&lt;/p&gt;
&lt;p&gt;なお、&lt;code&gt;u8&lt;/code&gt;プレフィックスをつけた文字・文字列リテラルは、UTF-8であることがこれまでに規定されていた。&lt;/p&gt;
&lt;h2&gt;この機能が必要になった背景・経緯&lt;/h2&gt;
&lt;p&gt;これまで、&lt;code&gt;&amp;lt;uchar&amp;gt;&lt;/code&gt;ヘッダのマクロ&lt;code&gt;__STDC_UTF_16__&lt;/code&gt;と&lt;code&gt;__STDC_UTF_32__&lt;/code&gt;が定義されている場合にのみ、&lt;code&gt;char16_t&lt;/code&gt;と&lt;code&gt;char32_t&lt;/code&gt;はUTF-16/UTF-32エンコーディングであると規定されていた。&lt;/p&gt;
&lt;p&gt;しかし、これらが定義されなかった場合にコンパイラがほかのエンコーディングを選択することが疑わしかった。また、&lt;code&gt;char16_t&lt;/code&gt;の仕様として「サロゲートペア」が含まれているが、その概念をもつ他のよく知られた文字コードはない。単一の文字を32ビットで表現する他のよく知られた文字コードもない。&lt;/p&gt;
&lt;p&gt;実際にはすべての実装でこれらの文字・文字列リテラルはUTF-16とUTF-32にエンコーディングされるため、要件を示すだけではなく、より明確にするために、&lt;code&gt;char16_t&lt;/code&gt;と&lt;code&gt;char32_t&lt;/code&gt;の文字・文字列リテラルがUTF-16とUTF-32文字コードであることを規定する。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;#relative-page&#34; id=&#34;relative-page&#34;&gt;関連項目&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../cpp11/char16_32.html&#34;&gt;C++11 &lt;code&gt;char16_t&lt;/code&gt;と&lt;code&gt;char32_t&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../cpp11/utf8_string_literals.html&#34;&gt;C++11 UTF-8文字列リテラル&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../cpp17/utf8_character_literals.html&#34;&gt;C++17 UTF-8文字リテラル&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1041r4.html&#34; target=&#34;_blank&#34;&gt;P1041R4 Make &lt;code&gt;char16_t&lt;/code&gt;/&lt;code&gt;char32_t&lt;/code&gt; string literals be UTF-16/32&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>モジュール [P1103R3] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/modules.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/modules.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/modules.md b/lang/cpp20/modules.md
index 08c718408..d1eade1b5 100644
--- a/lang/cpp20/modules.md
+++ b/lang/cpp20/modules.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>可変サイズをもつコンテナのconstexpr化 [P0784R7] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/more_constexpr_containers.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/more_constexpr_containers.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/more_constexpr_containers.md b/lang/cpp20/more_constexpr_containers.md
index b8d3fafa9..d6eb1a19e 100644
--- a/lang/cpp20/more_constexpr_containers.md
+++ b/lang/cpp20/more_constexpr_containers.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>入れ子名前空間定義でのインライン名前空間 [P1094R2] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/nested_inline_mamespaces.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/nested_inline_mamespaces.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/nested_inline_mamespaces.md b/lang/cpp20/nested_inline_mamespaces.md
index a7afbfdcf..49c1dde45 100644
--- a/lang/cpp20/nested_inline_mamespaces.md
+++ b/lang/cpp20/nested_inline_mamespaces.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>[[nodiscard]]をコンストラクタのオーバーロードごとに付加できるようにする -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/nodiscard_for_constructors.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/nodiscard_for_constructors.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/nodiscard_for_constructors.md b/lang/cpp20/nodiscard_for_constructors.md
index 85ba40bd0..bd3a0a979 100644
--- a/lang/cpp20/nodiscard_for_constructors.md
+++ b/lang/cpp20/nodiscard_for_constructors.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>[[nodiscard]]属性に理由となる文字列を付加できるようにする [P1301R4] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/nodiscard_should_have_a_reason.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/nodiscard_should_have_a_reason.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/nodiscard_should_have_a_reason.md b/lang/cpp20/nodiscard_should_have_a_reason.md
index e9d845f47..d50e28347 100644
--- a/lang/cpp20/nodiscard_should_have_a_reason.md
+++ b/lang/cpp20/nodiscard_should_have_a_reason.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>要素数不明の配列への変換を許可 [P0388R4] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/permit_conversions_to_arrays_of_unknown_bound.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/permit_conversions_to_arrays_of_unknown_bound.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/permit_conversions_to_arrays_of_unknown_bound.md b/lang/cpp20/permit_conversions_to_arrays_of_unknown_bound.md
index 1bdd5244e..61e5cf72c 100644
--- a/lang/cpp20/permit_conversions_to_arrays_of_unknown_bound.md
+++ b/lang/cpp20/permit_conversions_to_arrays_of_unknown_bound.md
@@ -6,7 +6,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexpr関数内でのトリビアルなデフォルト初期化を許可 [P1331R2] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/permitting_trivial_default_initialization_in_constexpr_contexts.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/permitting_trivial_default_initialization_in_constexpr_contexts.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/permitting_trivial_default_initialization_in_constexpr_contexts.md b/lang/cpp20/permitting_trivial_default_initialization_in_constexpr_contexts.md
index d3567af8a..2a6192d39 100644
--- a/lang/cpp20/permitting_trivial_default_initialization_in_constexpr_contexts.md
+++ b/lang/cpp20/permitting_trivial_default_initialization_in_constexpr_contexts.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>更新された定義済みマクロ -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/predefined_macros.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/predefined_macros.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;更新された定義済みマクロ&lt;/span&gt;&lt;span class=&#34;cpp cpp20&#34; title=&#34;C++20で追加&#34;&gt;(C++20)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;このページはC++20に採用された言語機能の変更を解説しています。&lt;/p&gt;
&lt;p&gt;のちのC++規格でさらに変更される場合があるため&lt;a href=&#34;#relative-page&#34;&gt;関連項目&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;定義済みマクロの値が、以下のように更新された：&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;マクロ名&lt;/th&gt;
&lt;th&gt;値&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cplusplus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;202002L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;C++のバージョン値を表す&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/n4859.html&#34; target=&#34;_blank&#34;&gt;N4859 Editors&#39; Report -- Programming Languages -- C++&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ユーザー宣言したコンストラクタを持つクラスの集成体初期化を禁止 [P1008R1] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/prohibit_aggregates_with_user-declared_constructors.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/prohibit_aggregates_with_user-declared_constructors.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/prohibit_aggregates_with_user-declared_constructors.md b/lang/cpp20/prohibit_aggregates_with_user-declared_constructors.md
index dad12cf5d..2a995d1ff 100644
--- a/lang/cpp20/prohibit_aggregates_with_user-declared_constructors.md
+++ b/lang/cpp20/prohibit_aggregates_with_user-declared_constructors.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>初期化式をともなう範囲for文 [P0614R1] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/range-based_for_statements_with_initializer.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/range-based_for_statements_with_initializer.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/range-based_for_statements_with_initializer.md b/lang/cpp20/range-based_for_statements_with_initializer.md
index a71755910..02e7dcd7d 100644
--- a/lang/cpp20/range-based_for_statements_with_initializer.md
+++ b/lang/cpp20/range-based_for_statements_with_initializer.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>構造化束縛した変数の参照キャプチャを許可 [P1381R1] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/reference_capture_of_structured_bindings.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/reference_capture_of_structured_bindings.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/reference_capture_of_structured_bindings.md b/lang/cpp20/reference_capture_of_structured_bindings.md
index 060659721..51656fbbe 100644
--- a/lang/cpp20/reference_capture_of_structured_bindings.md
+++ b/lang/cpp20/reference_capture_of_structured_bindings.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>範囲for文がカスタマイゼーションポイントを見つけるルールを緩和 [P0962R1] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/relaxing_the_range_for_loop_customization_point_finding_rules.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/relaxing_the_range_for_loop_customization_point_finding_rules.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/relaxing_the_range_for_loop_customization_point_finding_rules.md b/lang/cpp20/relaxing_the_range_for_loop_customization_point_finding_rules.md
index f7af4f4bc..f24a6e300 100644
--- a/lang/cpp20/relaxing_the_range_for_loop_customization_point_finding_rules.md
+++ b/lang/cpp20/relaxing_the_range_for_loop_customization_point_finding_rules.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>構造化束縛がカスタマイゼーションポイントを見つけるルールを緩和 [P0961R1] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/relaxing_the_structured_bindings_customization_point_finding_rules.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/relaxing_the_structured_bindings_customization_point_finding_rules.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/relaxing_the_structured_bindings_customization_point_finding_rules.md b/lang/cpp20/relaxing_the_structured_bindings_customization_point_finding_rules.md
index 62c18ce2a..a9ff87a99 100644
--- a/lang/cpp20/relaxing_the_structured_bindings_customization_point_finding_rules.md
+++ b/lang/cpp20/relaxing_the_structured_bindings_customization_point_finding_rules.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>throw()による例外送出しない指定を削除 -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/remove_deprecated_nothrow_exception_specification.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/remove_deprecated_nothrow_exception_specification.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/remove_deprecated_nothrow_exception_specification.md b/lang/cpp20/remove_deprecated_nothrow_exception_specification.md
index bab8f2cf8..088f25b9a 100644
--- a/lang/cpp20/remove_deprecated_nothrow_exception_specification.md
+++ b/lang/cpp20/remove_deprecated_nothrow_exception_specification.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>属性の名前空間を予約 -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/reserving_attribute_namespaces_for_future_use.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/reserving_attribute_namespaces_for_future_use.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;属性の名前空間を予約&lt;/span&gt;&lt;span class=&#34;cpp cpp20&#34; title=&#34;C++20で追加&#34;&gt;(C++20)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;このページはC++20に採用された言語機能の変更を解説しています。&lt;/p&gt;
&lt;p&gt;のちのC++規格でさらに変更される場合があるため&lt;a href=&#34;#relative-page&#34;&gt;関連項目&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;将来的に標準で定義する属性のために、以下の名前空間の属性を予約する：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;名前空間に属さない属性&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std&lt;/code&gt;および&lt;code&gt;std&lt;/code&gt; + 数字の名前空間の属性&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#relative-page&#34; id=&#34;relative-page&#34;&gt;関連項目&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../cpp11/attributes.html&#34;&gt;C++11 属性構文&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1908r1.pdf&#34; target=&#34;_blank&#34;&gt;P1908R1 Reserving Attribute Namespaces for Future Use&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>デフォルトのコピーコンストラクタと非constなコンストラクタが衝突する問題を修正 [P0641R2] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/resolving_const_mismatch_with_defaulted_copy_constructor.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/resolving_const_mismatch_with_defaulted_copy_constructor.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/resolving_const_mismatch_with_defaulted_copy_constructor.md b/lang/cpp20/resolving_const_mismatch_with_defaulted_copy_constructor.md
index 558609396..11ba585ac 100644
--- a/lang/cpp20/resolving_const_mismatch_with_defaulted_copy_constructor.md
+++ b/lang/cpp20/resolving_const_mismatch_with_defaulted_copy_constructor.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>符号付き整数型が2の補数表現であることを規定 [P1236R1] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/signed_integers_are_twos_complement.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/signed_integers_are_twos_complement.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/signed_integers_are_twos_complement.md b/lang/cpp20/signed_integers_are_twos_complement.md
index b8f277cf6..d8360109f 100644
--- a/lang/cpp20/signed_integers_are_twos_complement.md
+++ b/lang/cpp20/signed_integers_are_twos_complement.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>暗黙のラムダキャプチャを簡略化 [P0588R1] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/simplifying_implicit_lambda_capture.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/simplifying_implicit_lambda_capture.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/simplifying_implicit_lambda_capture.md b/lang/cpp20/simplifying_implicit_lambda_capture.md
index 2adf847c8..7470fc371 100644
--- a/lang/cpp20/simplifying_implicit_lambda_capture.md
+++ b/lang/cpp20/simplifying_implicit_lambda_capture.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexpr関数内でのtry-catchブロックを許可 [P1002R1] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/try-catch_blocks_in_constexpr_functions.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/try-catch_blocks_in_constexpr_functions.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/try-catch_blocks_in_constexpr_functions.md b/lang/cpp20/try-catch_blocks_in_constexpr_functions.md
index 390f029ff..82881aead 100644
--- a/lang/cpp20/try-catch_blocks_in_constexpr_functions.md
+++ b/lang/cpp20/try-catch_blocks_in_constexpr_functions.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Unicode標準への参照を更新 -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/update_the_reference_to_the_unicode_standard.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/update_the_reference_to_the_unicode_standard.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;Unicode標準への参照を更新&lt;/span&gt;&lt;span class=&#34;cpp cpp20&#34; title=&#34;C++20で追加&#34;&gt;(C++20)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;このページはC++20に採用された言語機能の変更を解説しています。&lt;/p&gt;
&lt;p&gt;のちのC++規格でさらに変更される場合があるため&lt;a href=&#34;#relative-page&#34;&gt;関連項目&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;Unicode標準 (ISO/IEC 10646) としてこれまで、「ISO/IEC 10646-1:1993, Information technology — Universal Multiple-Octet Coded Character Set (UCS) — Part 1: Architecture and Basic Multilingual Plane」が参照されていた。&lt;/p&gt;
&lt;p&gt;従来の古い仕様への参照は、非推奨化された古い機能のものであるとして残し、Unicode標準の最新仕様「ISO/IEC 10646, Information technology — Universal Coded Character Set (UCS)」を参照するよう追加する。&lt;/p&gt;
&lt;p&gt;Unicode標準で非推奨化された用語UCS2とUCS4の扱いは、以下のようになる：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UTC-32はUCS4と見なせるため、文字エンコーディングの説明ではUCS4の代わりにUTF-32を使用する&lt;/li&gt;
&lt;li&gt;ただしUTF-16はUCS2と見なすことができないため、古い機能のために古い仕様を参照するとして一部そのまま残す&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;実装が常に最新のUnicode標準を参照していることから、この変更によるユーザーへの直接的な影響はない。&lt;/p&gt;
&lt;h2&gt;この機能が必要になった背景・経緯&lt;/h2&gt;
&lt;p&gt;C++規格上ではISO/IEC 10646-1:1993を参照していても、実装は最新仕様に更新し続けていた。たとえば1996の仕様ではハングル文字のセットが削除されて別な位置に追加され、チベット文字が再追加された。実装はそれに対応している。&lt;/p&gt;
&lt;p&gt;また、C++標準が参照しているECMAScript標準でUnicode標準の参照が競合してしまう。&lt;/p&gt;
&lt;p&gt;Unicode標準での用語定義が変更されたことにも影響がある。UCS2とUCS4という用語が非推奨化されたために、その用語をC++標準が使用し続けることは望ましくない。&lt;/p&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1025r1.html&#34; target=&#34;_blank&#34;&gt;P1025R1 Update The Reference To The Unicode Standard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>スコープ付き列挙型のusing宣言 [P1099R5] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/using_enum.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/using_enum.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/using_enum.md b/lang/cpp20/using_enum.md
index f484e57a1..712164993 100644
--- a/lang/cpp20/using_enum.md
+++ b/lang/cpp20/using_enum.md
@@ -6,7 +6,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>可変引数が空でない場合のトークン置換 [P0306R4] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/va_opt.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/va_opt.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/va_opt.md b/lang/cpp20/va_opt.md
index 5b2367020..96d19e56f 100644
--- a/lang/cpp20/va_opt.md
+++ b/lang/cpp20/va_opt.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>評価されない文脈でのラムダ式 [P0315R4] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/wording_for_lambdas_in_unevaluated_contexts.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp20/wording_for_lambdas_in_unevaluated_contexts.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/wording_for_lambdas_in_unevaluated_contexts.md b/lang/cpp20/wording_for_lambdas_in_unevaluated_contexts.md
index 73d50d05e..4a220551d 100644
--- a/lang/cpp20/wording_for_lambdas_in_unevaluated_contexts.md
+++ b/lang/cpp20/wording_for_lambdas_in_unevaluated_contexts.md
@@ -5,7 +5,7 @@
 
 このページはC++20に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>elif/elifdef/elifndefのサポートを追加 [P2334R1] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/add_support_for_preprocessing_directives_elifdef_and_elifndef.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp23/add_support_for_preprocessing_directives_elifdef_and_elifndef.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/add_support_for_preprocessing_directives_elifdef_and_elifndef.md b/lang/cpp23/add_support_for_preprocessing_directives_elifdef_and_elifndef.md
index b08bfdd8d..50f00f7b5 100644
--- a/lang/cpp23/add_support_for_preprocessing_directives_elifdef_and_elifndef.md
+++ b/lang/cpp23/add_support_for_preprocessing_directives_elifdef_and_elifndef.md
@@ -5,7 +5,7 @@
 
 このページはC++23に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ラムダ式に対する属性 [P2173R1] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/attributes_on_lambda_expressions.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp23/attributes_on_lambda_expressions.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/attributes_on_lambda_expressions.md b/lang/cpp23/attributes_on_lambda_expressions.md
index 2f6f162d7..7ef22e236 100644
--- a/lang/cpp23/attributes_on_lambda_expressions.md
+++ b/lang/cpp23/attributes_on_lambda_expressions.md
@@ -5,7 +5,7 @@
 
 このページはC++23に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>静的な診断メッセージの文字エンコーディング [P2246R1] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/character_encoding_of_diagnostic_text.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp23/character_encoding_of_diagnostic_text.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;静的な診断メッセージの文字エンコーディング [P2246R1]&lt;/span&gt;&lt;span class=&#34;cpp cpp23&#34; title=&#34;C++23で追加&#34;&gt;(C++23)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;このページはC++23に採用された言語機能の変更を解説しています。&lt;/p&gt;
&lt;p&gt;のちのC++規格でさらに変更される場合があるため&lt;a href=&#34;#relative-page&#34;&gt;関連項目&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;C++23では、コンパイル時に診断メッセージを出力させる以下の機能について、ソースコードのエンコーディングが実行環境のエンコーディングで表現できない場合にどうするかの規定を見直す：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;static_assert&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[[deprecated]]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[[nodiscard]]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#error&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;C++20までは、「基本ソース文字集合に含まれない文字は出力する必要はない」という規定になっていたが、基本ソース文字集合と実行環境のエンコーディングは関係ないものであるため、この規定を削除することとした。&lt;/p&gt;
&lt;p&gt;この規定はC20でも導入され、C++もそれに追従することとした。&lt;/p&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2246r1.pdf&#34; target=&#34;_blank&#34;&gt;P2246R1 Character encoding of diagnostic text&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.open-std.org/jtc1/sc22/wg14/www/docs/n2563.pdf&#34; target=&#34;_blank&#34;&gt;WG14 N2563 Character encoding of diagnostic text&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>継承コンストラクタからのクラステンプレート引数の推論 [P2582R1] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/class_template_argument_deduction_from_inherited.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp23/class_template_argument_deduction_from_inherited.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/class_template_argument_deduction_from_inherited.md b/lang/cpp23/class_template_argument_deduction_from_inherited.md
index b6f22acbe..2e59fab64 100644
--- a/lang/cpp23/class_template_argument_deduction_from_inherited.md
+++ b/lang/cpp23/class_template_argument_deduction_from_inherited.md
@@ -5,7 +5,7 @@
 
 このページはC++23に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>文字リテラルエンコーディングを一貫させる [P2316R2] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/consistent_character_literal_encoding.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp23/consistent_character_literal_encoding.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/consistent_character_literal_encoding.md b/lang/cpp23/consistent_character_literal_encoding.md
index 716d42ac2..6e935b573 100644
--- a/lang/cpp23/consistent_character_literal_encoding.md
+++ b/lang/cpp23/consistent_character_literal_encoding.md
@@ -5,7 +5,7 @@
 
 このページはC++23に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexpr関数内でconsteval関数を呼び出せない問題を軽減 [P2564R3] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/consteval_needs_to_propagate_up.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp23/consteval_needs_to_propagate_up.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/consteval_needs_to_propagate_up.md b/lang/cpp23/consteval_needs_to_propagate_up.md
index 135fdb037..e3f7c3327 100644
--- a/lang/cpp23/consteval_needs_to_propagate_up.md
+++ b/lang/cpp23/consteval_needs_to_propagate_up.md
@@ -5,7 +5,7 @@
 
 このページはC++23に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>エスケープシーケンスの区切り [P2290R3] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/delimited_escape_sequences.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp23/delimited_escape_sequences.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/delimited_escape_sequences.md b/lang/cpp23/delimited_escape_sequences.md
index 667cb89c4..ce5ff8f59 100644
--- a/lang/cpp23/delimited_escape_sequences.md
+++ b/lang/cpp23/delimited_escape_sequences.md
@@ -5,7 +5,7 @@
 
 このページはC++23に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ラムダ式で()を省略できる条件を緩和 [P1102R2] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/down_with_lambda_parens.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp23/down_with_lambda_parens.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/down_with_lambda_parens.md b/lang/cpp23/down_with_lambda_parens.md
index d34ff34e3..d5b20422f 100644
--- a/lang/cpp23/down_with_lambda_parens.md
+++ b/lang/cpp23/down_with_lambda_parens.md
@@ -5,7 +5,7 @@
 
 このページはC++23に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>初期化文での型の別名宣言を許可 [P2360R0] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/extend_init_statement_to_allow_alias_declaration.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp23/extend_init_statement_to_allow_alias_declaration.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/extend_init_statement_to_allow_alias_declaration.md b/lang/cpp23/extend_init_statement_to_allow_alias_declaration.md
index 524a3aef6..484797e3e 100644
--- a/lang/cpp23/extend_init_statement_to_allow_alias_declaration.md
+++ b/lang/cpp23/extend_init_statement_to_allow_alias_declaration.md
@@ -5,7 +5,7 @@
 
 このページはC++23に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>機能テストマクロ -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/feature_test_macros.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp23/feature_test_macros.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;機能テストマクロ&lt;/span&gt;&lt;span class=&#34;cpp cpp23&#34; title=&#34;C++23で追加&#34;&gt;(C++23)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;このページはC++23に採用された言語機能の変更を解説しています。&lt;/p&gt;
&lt;p&gt;のちのC++規格でさらに変更される場合があるため&lt;a href=&#34;#relative-page&#34;&gt;関連項目&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;h3&gt;言語機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;マクロ名&lt;/th&gt;
&lt;th&gt;値&lt;/th&gt;
&lt;th&gt;機能&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;ライブラリ&lt;/h3&gt;
&lt;p&gt;ライブラリの機能テストマクロは全て&lt;code&gt;&lt;a href=&#34;../../reference/version.html&#34;&gt;&amp;lt;version&amp;gt;&lt;/a&gt;&lt;/code&gt;でも提供される。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;マクロ名&lt;/th&gt;
&lt;th&gt;値&lt;/th&gt;
&lt;th&gt;機能&lt;/th&gt;
&lt;th&gt;ヘッダ&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_ranges_as_const&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;202207L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ranges::cbegin&lt;/code&gt;が常に定数イテレータを返すようにする&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/ranges.html&#34;&gt;&amp;lt;ranges&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_ranges_fold&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;202207L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;fold&lt;/code&gt;アルゴリズム&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;../../reference/algorithm.html&#34;&gt;&amp;lt;algorithm&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://isocpp.org/std/standing-documents/sd-6-sg10-feature-test-recommendations&#34; target=&#34;_blank&#34;&gt;SD-FeatureTest: Feature-Test Macros and Policies - isocpp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>変数テンプレートの部分特殊化を許可 [P2096R2] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/generalized_wording_for_partial_specializations.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp23/generalized_wording_for_partial_specializations.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/generalized_wording_for_partial_specializations.md b/lang/cpp23/generalized_wording_for_partial_specializations.md
index 2c0a54ae7..8a8bd8ffa 100644
--- a/lang/cpp23/generalized_wording_for_partial_specializations.md
+++ b/lang/cpp23/generalized_wording_for_partial_specializations.md
@@ -5,7 +5,7 @@
 
 このページはC++23に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>if consteval [P1938R3] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/if_consteval.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp23/if_consteval.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/if_consteval.md b/lang/cpp23/if_consteval.md
index 2a4dde12c..7d8d7baae 100644
--- a/lang/cpp23/if_consteval.md
+++ b/lang/cpp23/if_consteval.md
@@ -5,7 +5,7 @@
 
 このページはC++23に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>複合文の末尾へのラベルを許可 [P2324R2] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/labels_at_the_end_of_compound_statements.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp23/labels_at_the_end_of_compound_statements.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/labels_at_the_end_of_compound_statements.md b/lang/cpp23/labels_at_the_end_of_compound_statements.md
index fcad6a6af..f61bdd74b 100644
--- a/lang/cpp23/labels_at_the_end_of_compound_statements.md
+++ b/lang/cpp23/labels_at_the_end_of_compound_statements.md
@@ -5,7 +5,7 @@
 
 このページはC++23に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>範囲for文が範囲初期化子内で生じた一時オブジェクトを延命することを規定 [P2718R0] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/lifetime_extension_in_range_based_for_loop.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp23/lifetime_extension_in_range_based_for_loop.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/lifetime_extension_in_range_based_for_loop.md b/lang/cpp23/lifetime_extension_in_range_based_for_loop.md
index e3ec77688..7e3e11524 100644
--- a/lang/cpp23/lifetime_extension_in_range_based_for_loop.md
+++ b/lang/cpp23/lifetime_extension_in_range_based_for_loop.md
@@ -6,7 +6,7 @@
 
 このページはC++23に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>(符号付き)size_tリテラルのためのサフィックス [P0330R8] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/literal_suffix_for_signed_size_t.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp23/literal_suffix_for_signed_size_t.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/literal_suffix_for_signed_size_t.md b/lang/cpp23/literal_suffix_for_signed_size_t.md
index e61c98564..a18ee9fd8 100644
--- a/lang/cpp23/literal_suffix_for_signed_size_t.md
+++ b/lang/cpp23/literal_suffix_for_signed_size_t.md
@@ -5,7 +5,7 @@
 
 このページはC++23に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>アクセス制御の異なるメンバ変数のレイアウトを宣言順に規定 [P1847R4] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/make_declaration_order_layout_mandated.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp23/make_declaration_order_layout_mandated.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/make_declaration_order_layout_mandated.md b/lang/cpp23/make_declaration_order_layout_mandated.md
index 22d80f260..1a663fa84 100644
--- a/lang/cpp23/make_declaration_order_layout_mandated.md
+++ b/lang/cpp23/make_declaration_order_layout_mandated.md
@@ -5,7 +5,7 @@
 
 このページはC++23に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>無意味なexport宣言を禁止する [P2615R1] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/meaningful_exports.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp23/meaningful_exports.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/meaningful_exports.md b/lang/cpp23/meaningful_exports.md
index 3313123f3..b4961a5c2 100644
--- a/lang/cpp23/meaningful_exports.md
+++ b/lang/cpp23/meaningful_exports.md
@@ -5,7 +5,7 @@
 
 このページはC++23に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>異なる文字エンコーディングをもつ文字列リテラルの連結を不適格とする [P2201R1] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/mixed_string_literal_concatenation.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp23/mixed_string_literal_concatenation.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/mixed_string_literal_concatenation.md b/lang/cpp23/mixed_string_literal_concatenation.md
index b647b464c..852d6d4ab 100644
--- a/lang/cpp23/mixed_string_literal_concatenation.md
+++ b/lang/cpp23/mixed_string_literal_concatenation.md
@@ -5,7 +5,7 @@
 
 このページはC++23に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>添字演算子の多次元サポート [P2128R6] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/multidimensional_subscript_operator.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp23/multidimensional_subscript_operator.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/multidimensional_subscript_operator.md b/lang/cpp23/multidimensional_subscript_operator.md
index ff6bf8e98..4d85b0a39 100644
--- a/lang/cpp23/multidimensional_subscript_operator.md
+++ b/lang/cpp23/multidimensional_subscript_operator.md
@@ -5,7 +5,7 @@
 
 このページはC++23に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>名前付きユニバーサルキャラクタ名 [P2071R2] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/named_universal_character_escapes.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp23/named_universal_character_escapes.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/named_universal_character_escapes.md b/lang/cpp23/named_universal_character_escapes.md
index 0efb58be2..2feee22a6 100644
--- a/lang/cpp23/named_universal_character_escapes.md
+++ b/lang/cpp23/named_universal_character_escapes.md
@@ -5,7 +5,7 @@
 
 このページはC++23に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>定数式の文脈でのboolへの縮小変換を許可 [P1401R5] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/narrowing_contextual_conversions_to_bool.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp23/narrowing_contextual_conversions_to_bool.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/narrowing_contextual_conversions_to_bool.md b/lang/cpp23/narrowing_contextual_conversions_to_bool.md
index b3ce704c2..36e45e712 100644
--- a/lang/cpp23/narrowing_contextual_conversions_to_bool.md
+++ b/lang/cpp23/narrowing_contextual_conversions_to_bool.md
@@ -5,7 +5,7 @@
 
 このページはC++23に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>定数式内での非リテラル変数、静的変数・スレッドローカル変数およびgotoとラベルの存在を許可する [P2242R3] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/non_literal_variables_in_constexpr_functions.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp23/non_literal_variables_in_constexpr_functions.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;定数式内での非リテラル変数、静的変数・スレッドローカル変数およびgotoとラベルの存在を許可する [P2242R3]&lt;/span&gt;&lt;span class=&#34;cpp cpp23&#34; title=&#34;C++23で追加&#34;&gt;(C++23)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;このページはC++23に採用された言語機能の変更を解説しています。&lt;/p&gt;
&lt;p&gt;のちのC++規格でさらに変更される場合があるため&lt;a href=&#34;#relative-page&#34;&gt;関連項目&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;constexpr&lt;/code&gt;関数が非リテラル変数、静的変数・スレッドローカル変数およびgoto文とラベルを含むことを許可する。&lt;/p&gt;
&lt;p&gt;ただし、これをコンパイル時に評価した場合、従来通りエラーとなる。
これらを含むコードパスは実行時にのみ通過するようにしなければならない。&lt;/p&gt;
&lt;h2&gt;この機能が必要になった背景・経緯&lt;/h2&gt;
&lt;p&gt;これまでは、&lt;code&gt;constexpr&lt;/code&gt;関数内には非リテラル変数、静的変数・スレッドローカル変数およびgoto文とラベルが含まれてはならなかった。
これは、&lt;code&gt;constexpr&lt;/code&gt;関数が定数式実行できない要素を含んではならないという意味で、理にかなった制限であった。&lt;/p&gt;
&lt;p&gt;しかし、C++20で&lt;code&gt;&lt;a href=&#34;../../reference/type_traits/is_constant_evaluated.html&#34;&gt;std::is_constant_evaluated&lt;/a&gt;&lt;/code&gt;によって定数式実行されるコードパスと実行時に通るコードパスを分けることが可能になり、状況が変化した。
定数式実行できないコードとはいえ、実行時にのみ通りコンパイル時には通らないコードパスに含まれていた場合にもプログラムが&lt;a class=&#34;cpprefjp-defined-word&#34;&gt;不適格&lt;/a&gt;となる、というのは直観に反する。&lt;/p&gt;
&lt;p&gt;よって、コンパイル時に評価されない限りにおいて、&lt;code&gt;constexpr&lt;/code&gt;関数内に非リテラル変数、静的変数・スレッドローカル変数およびgoto文とラベルを含むことが許可されることとなった。&lt;/p&gt;
&lt;p&gt;ただし、&lt;code&gt;constexpr&lt;/code&gt;内に存在することが許可されたものの定数式として評価できるわけではないので、これらの機能は依然としてコンパイル時に使用することはできない。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;#relative-page&#34; id=&#34;relative-page&#34;&gt;関連項目&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../cpp20/try-catch_blocks_in_constexpr_functions.html&#34;&gt;C++20 - constexpr関数内でのtry-catchブロックを許可&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../cpp20/enabling_constexpr_intrinsics_by_permitting_unevaluated_inline-assembly_in_constexpr_functions.html&#34;&gt;C++20 - constexpr関数内で未評価のインラインアセンブリを許可することによる組み込み関数のconstexpr有効化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;permitting_static_constexpr_variables_in_constexpr_functions.html&#34;&gt;C++23 - &lt;code&gt;constexpr&lt;/code&gt;関数内での&lt;code&gt;static constexpr&lt;/code&gt;変数を許可&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2242r3.html&#34; target=&#34;_blank&#34;&gt;P2242R3 - Non-literal variables (and labels and gotos) in constexpr functions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexpr関数内でのstatic constexpr変数を許可 [P2647R1] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/permitting_static_constexpr_variables_in_constexpr_functions.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp23/permitting_static_constexpr_variables_in_constexpr_functions.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/permitting_static_constexpr_variables_in_constexpr_functions.md b/lang/cpp23/permitting_static_constexpr_variables_in_constexpr_functions.md
index a1bacee1b..86f3ac78a 100644
--- a/lang/cpp23/permitting_static_constexpr_variables_in_constexpr_functions.md
+++ b/lang/cpp23/permitting_static_constexpr_variables_in_constexpr_functions.md
@@ -5,7 +5,7 @@
 
 このページはC++23に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コード内容の仮定をコンパイラに伝える`assume`属性 [P1774R8] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/portable_assumptions.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp23/portable_assumptions.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/portable_assumptions.md b/lang/cpp23/portable_assumptions.md
index 5e011eec5..e80c8e4ed 100644
--- a/lang/cpp23/portable_assumptions.md
+++ b/lang/cpp23/portable_assumptions.md
@@ -5,7 +5,7 @@
 
 このページはC++23に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>更新された定義済みマクロ -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/predefined_macros.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp23/predefined_macros.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;更新された定義済みマクロ&lt;/span&gt;&lt;span class=&#34;cpp cpp23&#34; title=&#34;C++23で追加&#34;&gt;(C++23)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;このページはC++23に採用された言語機能の変更を解説しています。&lt;/p&gt;
&lt;p&gt;のちのC++規格でさらに変更される場合があるため&lt;a href=&#34;#relative-page&#34;&gt;関連項目&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;定義済みマクロの値が、以下のように更新された：&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;マクロ名&lt;/th&gt;
&lt;th&gt;値&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cplusplus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;202302L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;C++のバージョン値を表す&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/n4951.html&#34; target=&#34;_blank&#34;&gt;N4951 Editors’ Report: Programming Languages — C++&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexpr関数が定数実行できない場合でも適格とする [P2448R2] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/relaxing_some_constexpr_restrictions.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp23/relaxing_some_constexpr_restrictions.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/relaxing_some_constexpr_restrictions.md b/lang/cpp23/relaxing_some_constexpr_restrictions.md
index 28be60df0..0dc0ed152 100644
--- a/lang/cpp23/relaxing_some_constexpr_restrictions.md
+++ b/lang/cpp23/relaxing_some_constexpr_restrictions.md
@@ -5,7 +5,7 @@
 
 このページはC++23に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>1ワイド文字に収まらないワイド文字リテラルを禁止する [P2362R3] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/remove_non_encodable_wide_character_literals_and_multicharacter_wide_character_literals.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp23/remove_non_encodable_wide_character_literals_and_multicharacter_wide_character_literals.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/remove_non_encodable_wide_character_literals_and_multicharacter_wide_character_literals.md b/lang/cpp23/remove_non_encodable_wide_character_literals_and_multicharacter_wide_character_literals.md
index bd9660542..d983554ab 100644
--- a/lang/cpp23/remove_non_encodable_wide_character_literals_and_multicharacter_wide_character_literals.md
+++ b/lang/cpp23/remove_non_encodable_wide_character_literals_and_multicharacter_wide_character_literals.md
@@ -5,7 +5,7 @@
 
 このページはC++23に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>暗黙的なムーブを簡略化 [P2266R3] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/simpler_implicit_move.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp23/simpler_implicit_move.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/simpler_implicit_move.md b/lang/cpp23/simpler_implicit_move.md
index b1359bab9..71b40f570 100644
--- a/lang/cpp23/simpler_implicit_move.md
+++ b/lang/cpp23/simpler_implicit_move.md
@@ -5,7 +5,7 @@
 
 このページはC++23に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>thisポインタをもつ必要のない演算子をstaticとして宣言できるようにする [P1169R4] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/static_operator.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp23/static_operator.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/static_operator.md b/lang/cpp23/static_operator.md
index 90d62ff87..d2a1b7262 100644
--- a/lang/cpp23/static_operator.md
+++ b/lang/cpp23/static_operator.md
@@ -5,7 +5,7 @@
 
 このページはC++23に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>汎用的なソースコードのエンコーディングとしてUTF-8をサポート [P2295R6] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/support_for_utf8_as_a_portable_source_file_encoding.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp23/support_for_utf8_as_a_portable_source_file_encoding.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;汎用的なソースコードのエンコーディングとしてUTF-8をサポート [P2295R6]&lt;/span&gt;&lt;span class=&#34;cpp cpp23&#34; title=&#34;C++23で追加&#34;&gt;(C++23)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;このページはC++23に採用された言語機能の変更を解説しています。&lt;/p&gt;
&lt;p&gt;のちのC++規格でさらに変更される場合があるため&lt;a href=&#34;#relative-page&#34;&gt;関連項目&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;C++20まで、ソースコードの文字集合は実装定義だったが、その仕様では移植性に問題があった。C++23からは、すべてのコンパイラはUTF-8文字コードのソースコードをサポートしなければならないことが規定される。&lt;/p&gt;
&lt;p&gt;コンパイラは、ほかの文字コードと区別するため、入力ファイルがUTF-8であることを決定する実装定義の手段をもたなければならない。つまり、BOM (バイトオーダーマーク) を認識するだけでは十分ではない。&lt;/p&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p2295r6.pdf&#34; target=&#34;_blank&#34;&gt;P2295R6 Support for UTF-8 as a portable source file encoding&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>行末スペースを無視するよう規定 [P2223R2] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/trimming_whitespaces_before_line_splicing.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp23/trimming_whitespaces_before_line_splicing.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/trimming_whitespaces_before_line_splicing.md b/lang/cpp23/trimming_whitespaces_before_line_splicing.md
index 1901ad5e6..5f97c4768 100644
--- a/lang/cpp23/trimming_whitespaces_before_line_splicing.md
+++ b/lang/cpp23/trimming_whitespaces_before_line_splicing.md
@@ -5,7 +5,7 @@
 
 このページはC++23に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>参照するPOSIX規格を更新 -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/update_normative_reference_to_posix.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp23/update_normative_reference_to_posix.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;参照するPOSIX規格を更新&lt;/span&gt;&lt;span class=&#34;cpp cpp23&#34; title=&#34;C++23で追加&#34;&gt;(C++23)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;このページはC++23に採用された言語機能の変更を解説しています。&lt;/p&gt;
&lt;p&gt;のちのC++規格でさらに変更される場合があるため&lt;a href=&#34;#relative-page&#34;&gt;関連項目&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;C++20まではPOSIX規格としてISO/IEC 9945:2003 (別名POSIX.1-2001 aka The Single UNIX Specification, version 3) を参照していた。&lt;/p&gt;
&lt;p&gt;しかし、標準C++の一部の機能はより新しいPOSIX規格の機能を使用していたため、ISO/IEC 9945:2003への参照を削除した上で、以下の3つの規格を参照するよう変更する：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ISO/IEC/IEEE 9945:20032009, Information Technology — Portable Operating System Interface (POSIX)&lt;/li&gt;
&lt;li&gt;ISO/IEC/IEEE 9945:2009/Cor 1:2013, Information Technology — Portable Operating System Interface (POSIX), Technical Corrigendum 1&lt;/li&gt;
&lt;li&gt;ISO/IEC/IEEE 9945:2009/Cor 2:2017, Information Technology — Portable Operating System Interface (POSIX), Technical Corrigendum 2&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;posix&lt;/code&gt;名前空間の予約に関してのPOSIX規格の参照もまた、ISO/IEC 9945からISO/IEC/IEEE 9945に変更する。&lt;/p&gt;
&lt;p&gt;また、POSIXの一部環境で非推奨となっている機能である&lt;code&gt;readdir_r()&lt;/code&gt;を参照していたところを、&lt;code&gt;readdir()&lt;/code&gt;に置き換える。&lt;/p&gt;
&lt;h2&gt;この機能が必要になった背景・経緯&lt;/h2&gt;
&lt;p&gt;ここでは、具体的に問題になった、標準C++が参照するPOSIXの機能を列挙する。&lt;/p&gt;
&lt;h3&gt;errno&lt;/h3&gt;
&lt;p&gt;C++03まで、&lt;code&gt;&lt;a href=&#34;../../reference/cerrno.html&#34;&gt;&amp;lt;cerrno&amp;gt;&lt;/a&gt;&lt;/code&gt;と&lt;code&gt;&amp;lt;errno.h&amp;gt;&lt;/code&gt;にはISO Cが要求する&lt;code&gt;EDOM&lt;/code&gt; (定義域エラー)、&lt;code&gt;ERANGE&lt;/code&gt; (値域エラー)、&lt;code&gt;errno&lt;/code&gt;といった必要最低限のマクロのみが含まれていた。&lt;/p&gt;
&lt;p&gt;C++11での&lt;code&gt;&lt;a href=&#34;../../reference/system_error.html&#34;&gt;&amp;lt;system_error&amp;gt;&lt;/a&gt;&lt;/code&gt;ライブラリの導入にともなって、「&lt;code&gt;&lt;a href=&#34;../../reference/cerrno.html&#34;&gt;&amp;lt;cerrno&amp;gt;&lt;/a&gt;&lt;/code&gt;で定義される内容は、&lt;code&gt;errno&lt;/code&gt;がマクロ定義されることを除いてPOSIXの&lt;code&gt;&amp;lt;errno.h&amp;gt;&lt;/code&gt;ヘッダと同じである」という規定となった。この規定のあとにマクロのリストが定義されるが、&lt;code&gt;ENOTRECOVERABLE&lt;/code&gt;と&lt;code&gt;EOWNERDEAD&lt;/code&gt;はPOSIXの2006規格、&lt;code&gt;ENOTSUP&lt;/code&gt;と&lt;code&gt;EOPNOTSUPP&lt;/code&gt;は2008規格で追加されたものだった。&lt;/p&gt;
&lt;p&gt;POSIXの2008年では標準C++で定義されるマクロのほかに&lt;code&gt;EDQUOT&lt;/code&gt;、&lt;code&gt;EMULTIHOP&lt;/code&gt;、&lt;code&gt;ENOLINK&lt;/code&gt;といった具体的な意味をもたない「予約済み」というだけのマクロももっている。すでに定義されている&lt;code&gt;ESTALE&lt;/code&gt;のようにそれらを標準C++に追加することは今後検討する必要はあるが、ここでは提案しない。&lt;/p&gt;
&lt;h3&gt;ファイルシステム&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;&lt;a href=&#34;../../reference/filesystem/path.html&#34;&gt;path&lt;/a&gt;&lt;/code&gt;クラスについて、POSIX.1-2008の4.12 Pathname ResolutionとPOSIX.1-2017の4.13 Pathname Resolutionを追加で参照する必要がある。&lt;/p&gt;
&lt;p&gt;ここで参照するほとんどの機能はPOSIX.1-2001に存在するが、ファイルの最終更新日時の&lt;code&gt;futimens()&lt;/code&gt;関数、ファイル権限の&lt;code&gt;fchmodat()&lt;/code&gt;関数は存在していない。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;truncate()&lt;/code&gt;と&lt;code&gt;statvfs()&lt;/code&gt;の機能はオプションであり、POSIXに準拠する環境に存在する必要がない。POSIX.1-2008ではこれらの機能がオプションではなくなった。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;stat()&lt;/code&gt;で使用される&lt;code&gt;S_ISVTX&lt;/code&gt;マクロはオプション機能であり、XSIの一部である。これはPOSIX.1-2008とPOSIX.1-2017でもオプションのままである。&lt;/p&gt;
&lt;p&gt;POSIX.1-2001のスレッドセーフ関数 (Thread-Safe Functions : TSF) オプションの一部である&lt;code&gt;readdir_r()&lt;/code&gt;を参照する注記もあるが、POSIX.1-2008ではBaseに移動されている。ただし、&lt;code&gt;readdir_r()&lt;/code&gt; APIの実装には欠陥があり、一部の実装では非推奨となっており、将来のバージョンから削除される可能性がある。ここでは&lt;code&gt;readdir_r()&lt;/code&gt;に固有のものに依存してはいないため、&lt;code&gt;readdir()&lt;/code&gt;を参照するよう変更する。&lt;/p&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2227r0.html&#34; target=&#34;_blank&#34;&gt;P2227R0 Update normative reference to POSIX&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>#warningのサポートを追加 [P2437R1] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/warning.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp23/warning.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/warning.md b/lang/cpp23/warning.md
index 4575a076d..fdc8f98fa 100644
--- a/lang/cpp23/warning.md
+++ b/lang/cpp23/warning.md
@@ -5,7 +5,7 @@
 
 このページはC++23に採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため関連項目を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>static_assertの診断メッセージにユーザーが生成した文字列の指定を許可 [P2741R3] -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/lang/cpp26/user-generated_static_assert_messages.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:lang/cpp26/user-generated_static_assert_messages.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp26/user-generated_static_assert_messages.md b/lang/cpp26/user-generated_static_assert_messages.md
index 76eb694c3..89b2aa3cb 100644
--- a/lang/cpp26/user-generated_static_assert_messages.md
+++ b/lang/cpp26/user-generated_static_assert_messages.md
@@ -5,7 +5,7 @@
 
 このページはC++26に採用される見込みの言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>page_title ((1行目の見出し1はページのタイトルです。修飾なしで記載してください) -- 言語機能 : 関連項目へのリンクミスを修正 #1292</title>
      <link href="https://cpprefjp.github.io/start_editing/lang_template_page.html"/>
      <id>641d6a7b3bf0cd6a0a80d64dc209a0c0ba244bbd:start_editing/lang_template_page.md</id>
      <updated>2024-07-08T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/start_editing/lang_template_page.md b/start_editing/lang_template_page.md
index 0e8d24234..212d17556 100644
--- a/start_editing/lang_template_page.md
+++ b/start_editing/lang_template_page.md
@@ -36,7 +36,7 @@
 
 このページはC++XXに採用された言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
@@ -47,7 +47,7 @@
 
 このページはC++26に採用される見込みの言語機能の変更を解説しています。
 
-のちのC++規格でさらに変更される場合があるため[関連項目](#relative_page)を参照してください。
+のちのC++規格でさらに変更される場合があるため[関連項目](#relative-page)を参照してください。
 
 &amp;lt;!-- last lang caution --&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
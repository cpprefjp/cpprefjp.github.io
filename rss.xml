<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2020-11-24T09:23:00.191846</updated>
  <id>78d6f158-4f28-4148-8733-88c1b76ac075</id>

  
    <entry>
      <title>get_future -- promise/packaged_taskのget_future : 書き込み操作と競合しない規定を記載</title>
      <link href="https://cpprefjp.github.io/reference/future/packaged_task/get_future.html"/>
      <id>d3f7df02ff5e2b0c1277f73719fb61f3366f7b44:reference/future/packaged_task/get_future.md</id>
      <updated>2020-11-24T18:18:20+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/future/packaged_task/get_future.md b/reference/future/packaged_task/get_future.md
index e1780cee8..3b8c52508 100644
--- a/reference/future/packaged_task/get_future.md
+++ b/reference/future/packaged_task/get_future.md
@@ -18,6 +18,26 @@ future&amp;lt;R&amp;gt; get_future();
 `*this`と同じ共有状態を持つ[`future`](../future.md)`&amp;lt;R&amp;gt;`オブジェクトを返す
 
 
+## 同期
+この関数の呼び出しでは、以下の呼び出しとのデータ競合は発生しない (C++20)：
+
+- [`operator()`](op_call.md)
+- [`make_ready_at_thread_exit()`](make_ready_at_thread_exit.md)
+
+これは、以下のようなケースをサポートするための規定：
+
+```cpp
+std::packaged_task&amp;lt;void()&amp;gt; p;
+std::thread t{ []{
+  p.get_future().wait();
+}};
+p();
+t.join();
+```
+* wait()[link /reference/future/future/wait.md]
+* p()[link op_call.md]
+
+
 ## 例外
 この関数は、以下のerror conditionを持つ[`future_error`](../future_error.md)例外オブジェクトを送出する可能性がある：
 
@@ -67,5 +87,5 @@ int main()
 
 
 ## 参照
-
+- [LWG Issue 2412. `promise::set_value()` and `promise::get_future()` should not race](https://wg21.cmeerw.net/lwg/issue2412)
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>get_future -- promise/packaged_taskのget_future : 書き込み操作と競合しない規定を記載</title>
      <link href="https://cpprefjp.github.io/reference/future/promise/get_future.html"/>
      <id>d3f7df02ff5e2b0c1277f73719fb61f3366f7b44:reference/future/promise/get_future.md</id>
      <updated>2020-11-24T18:18:20+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/future/promise/get_future.md b/reference/future/promise/get_future.md
index 7f9586986..c37c439d5 100644
--- a/reference/future/promise/get_future.md
+++ b/reference/future/promise/get_future.md
@@ -18,6 +18,27 @@ future&amp;lt;R&amp;gt; get_future();
 `*this`と同じ共有状態を持つ[`future`](../future.md)`&amp;lt;R&amp;gt;`オブジェクトを返す
 
 
+## 同期
+この関数の呼び出しでは、以下の呼び出しとのデータ競合は発生しない (C++20)：
+
+- [`set_value()`](set_value.md)
+- [`set_exception()`](set_exception.md)
+- [`set_value_at_thread_exit()`](set_value_at_thread_exit.md)
+- [`set_exception_at_thread_exit()`](set_exception_at_thread_exit.md)
+
+これは、以下のようなケースをサポートするための規定：
+
+```cpp
+std::promise&amp;lt;void&amp;gt; p;
+std::thread t{ []{
+  p.get_future().wait();
+}};
+p.set_value();
+t.join();
+```
+* wait()[link /reference/future/future/wait.md]
+* p.set_value()[link set_value.md]
+
 ## 例外
 この関数は、以下のerror conditionを持つ[`future_error`](../future_error.md)例外オブジェクトを送出する可能性がある：
 
@@ -79,5 +100,5 @@ int main()
 
 
 ## 参照
-
+- [LWG Issue 2412. `promise::set_value()` and `promise::get_future()` should not race](https://wg21.cmeerw.net/lwg/issue2412)
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator/ -- duration operator/ : オーバーロードの概要を記載</title>
      <link href="https://cpprefjp.github.io/reference/chrono/duration/op_divide.html"/>
      <id>6a85ba88a0a0d7d52971133a79fb455139da795f:reference/chrono/duration/op_divide.md</id>
      <updated>2020-11-24T18:08:58+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/duration/op_divide.md b/reference/chrono/duration/op_divide.md
index 8a7a4ee19..f0f7fea44 100644
--- a/reference/chrono/duration/op_divide.md
+++ b/reference/chrono/duration/op_divide.md
@@ -25,6 +25,9 @@ namespace chrono {
 ## 概要
 `duration`の除算を行う
 
+- (1) : `duration`を任意の算術型で除算する
+- (2) : `duration`を`duration`で除算する
+
 
 ## テンプレートパラメータ制約
 - (1) : [`is_convertible_v`](/reference/chrono/d)`&amp;lt;const Rep2&amp;amp;,` [`common_type_t`](/reference/type_traits/common_type.md)`&amp;lt;Rep1, Rep2&amp;gt;&amp;gt;`が`true`であり、かつ`Rep2`が`duration`の特殊化でないこと
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>pop -- recursive_directory_iterator::pop : 無効化の事後条件を過去にさかのぼって適用</title>
      <link href="https://cpprefjp.github.io/reference/filesystem/recursive_directory_iterator/pop.html"/>
      <id>2161c2be65072e3cda3c8043a07bf58634027b1c:reference/filesystem/recursive_directory_iterator/pop.md</id>
      <updated>2020-11-24T18:04:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/filesystem/recursive_directory_iterator/pop.md b/reference/filesystem/recursive_directory_iterator/pop.md
index 97ff756bb..d71229cb8 100644
--- a/reference/filesystem/recursive_directory_iterator/pop.md
+++ b/reference/filesystem/recursive_directory_iterator/pop.md
@@ -18,6 +18,10 @@ void pop(std::error_code&amp;amp; ec);
 [`depth()`](depth.md) `== 0`の場合は、`*this`に終端イテレータを代入する。そうでない場合は、そのディレクトリの走査を終了し、親ディレクトリに戻る。
 
 
+## 事後条件
+- `*this`のそれまでのあらゆるコピーは、`==`のドメインにおいて間接参照であることが要求されなくなる
+
+
 ## 例
 ```cpp example
 #include &amp;lt;iostream&amp;gt;
@@ -64,3 +68,7 @@ int main()
 - [Clang](/implementation.md#clang): 7.0
 - [GCC](/implementation.md#gcc): 8.1
 - [Visual C++](/implementation.md#visual_cpp):
+
+
+## 参照
+- [LWG Issue `recursive_directory_iterator::pop` must invalidate](https://wg21.cmeerw.net/lwg/issue3067)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>visit -- visit : 戻り値型が間違ってた問題へのissueを記載</title>
      <link href="https://cpprefjp.github.io/reference/variant/visit.html"/>
      <id>15f13889ab66000b14bdbf79815ce460f9f5e5ce:reference/variant/visit.md</id>
      <updated>2020-11-24T17:57:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/variant/visit.md b/reference/variant/visit.md
index 93b58edfb..d3c1c372c 100644
--- a/reference/variant/visit.md
+++ b/reference/variant/visit.md
@@ -195,3 +195,4 @@ HelloHello
 
 ## 参照
 - [P0655R1 `visit&amp;lt;R&amp;gt;`: Explicit Return Type for `visit`](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0655r1.pdf)
+- [LWG Issue 2970. Return type of `std::visit` misspecified](https://wg21.cmeerw.net/lwg/issue2970)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>what -- リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/filesystem/filesystem_error/what.html"/>
      <id>37290198e34bc2e9d6e0714c0c18a7b415b91fe4:reference/filesystem/filesystem_error/what.md</id>
      <updated>2020-11-24T17:53:48+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/filesystem/filesystem_error/what.md b/reference/filesystem/filesystem_error/what.md
index 7799638a6..1bd430f4d 100644
--- a/reference/filesystem/filesystem_error/what.md
+++ b/reference/filesystem/filesystem_error/what.md
@@ -16,7 +16,7 @@ const char* what() const noexcept override;
 ## 戻り値
 コンストラクタで設定されたエラー理由を含む未規定のフォーマットの実装定義の文字列を返す。
 
-実装は、[`system_error`](/reference/system_error/system_error.md)`::`[`what()`](/reference/system_error/system_error/what.md)で返される文字列とネイティブ形式の`path1`と`path2`を含める必要がある。
+実装は、[`system_error`](/reference/system_error/system_error.md)`::what()`で返される文字列とネイティブ形式の`path1`と`path2`を含める必要がある。
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
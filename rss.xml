<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2025-09-24T10:12:59.313067</updated>
  <id>0a826651-1090-4b9a-8478-fa58797d2076</id>

  
    <entry>
      <title>コンストラクタ -- filter_view::iterator のコードと説明を修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/filter_view/iterator/op_constructor.html"/>
      <id>e970be3588e21243d967790a37deb8481dd0c0bf:reference/ranges/filter_view/iterator/op_constructor.md</id>
      <updated>2025-09-24T19:08:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/filter_view/iterator/op_constructor.md b/reference/ranges/filter_view/iterator/op_constructor.md
index 1a84cc040..384af180f 100644
--- a/reference/ranges/filter_view/iterator/op_constructor.md
+++ b/reference/ranges/filter_view/iterator/op_constructor.md
@@ -24,6 +24,7 @@ constexpr iterator(filter_view&amp;amp; parent, iterator_t&amp;lt;V&amp;gt; current);        // (2)
 ```cpp example
 #include &amp;lt;ranges&amp;gt;
 #include &amp;lt;vector&amp;gt;
+#include &amp;lt;iostream&amp;gt;
 
 int main() {
   using std::ranges::filter_view;
@@ -33,16 +34,16 @@ int main() {
 
   filter_view fv{vec, [](int x){ return x % 2 == 0; }};
 
-  iterator_t&amp;lt;filter_view&amp;gt; i(fv, vec.begin());
+  iterator_t&amp;lt;decltype(fv)&amp;gt; i(fv, vec.begin());
 
-  std::cout &amp;lt;&amp;lt; *i &amp;lt;&amp;lt; `\n`;
+  std::cout &amp;lt;&amp;lt; *i &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
   i++;
-  std::cout &amp;lt;&amp;lt; *i &amp;lt;&amp;lt; `\n`;
+  std::cout &amp;lt;&amp;lt; *i &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
   i++;
-  std::cout &amp;lt;&amp;lt; *i &amp;lt;&amp;lt; `\n`;
+  std::cout &amp;lt;&amp;lt; *i &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
 }
 ```
-* iterator_t&amp;lt;filter_view&amp;gt;[color ff0000]
+* iterator_t&amp;lt;decltype(fv)&amp;gt;[color ff0000]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator-- -- filter_view::iterator のコードと説明を修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/filter_view/iterator/op_decrement.html"/>
      <id>e970be3588e21243d967790a37deb8481dd0c0bf:reference/ranges/filter_view/iterator/op_decrement.md</id>
      <updated>2025-09-24T19:08:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/filter_view/iterator/op_decrement.md b/reference/ranges/filter_view/iterator/op_decrement.md
index 6d8d25535..841b5b38f 100644
--- a/reference/ranges/filter_view/iterator/op_decrement.md
+++ b/reference/ranges/filter_view/iterator/op_decrement.md
@@ -6,13 +6,13 @@
 * cpp20[meta cpp]
 
 ```cpp
-constexpr iterator&amp;amp; operator++() requires bidirectional_range&amp;lt;V&amp;gt;;      // (1)
+constexpr iterator&amp;amp; operator--() requires bidirectional_range&amp;lt;V&amp;gt;;      // (1)
 constexpr iterator operator--(int) requires bidirectional_range&amp;lt;V&amp;gt;;    // (2)
 ```
 
 ## 概要
 
-イテレータを1つ進める。
+イテレータを1つ後方に進める。
 
 ## 効果
 
@@ -28,7 +28,7 @@ return *this;
 
 と等しい。
 
-(3)は、
+(2)は、
 ```cpp
 auto tmp = *this;
 --*this;
@@ -41,6 +41,7 @@ return tmp;
 ```cpp example
 #include &amp;lt;ranges&amp;gt;
 #include &amp;lt;vector&amp;gt;
+#include &amp;lt;iostream&amp;gt;
 
 int main() {
   using std::ranges::filter_view;
@@ -50,21 +51,22 @@ int main() {
 
   filter_view fv{vec, [](int x){ return x % 2 == 0; }};
 
-  iterator_t&amp;lt;filter_view&amp;gt; i(fv, vec.begin());
+  iterator_t&amp;lt;decltype(fv)&amp;gt; i(fv, vec.begin());
+  std::advance(i, 2);
 
-  std::cout &amp;lt;&amp;lt; *i &amp;lt;&amp;lt; `\n`;
+  std::cout &amp;lt;&amp;lt; *i &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
   i--;
-  std::cout &amp;lt;&amp;lt; *i &amp;lt;&amp;lt; `\n`;
+  std::cout &amp;lt;&amp;lt; *i &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
   i--;
-  std::cout &amp;lt;&amp;lt; *i &amp;lt;&amp;lt; `\n`;
+  std::cout &amp;lt;&amp;lt; *i &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
 }
 ```
 
 ### 出力
 ```
-0
-2
 4
+2
+0
 ```
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator* -- filter_view::iterator のコードと説明を修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/filter_view/iterator/op_deref.html"/>
      <id>e970be3588e21243d967790a37deb8481dd0c0bf:reference/ranges/filter_view/iterator/op_deref.md</id>
      <updated>2025-09-24T19:08:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/filter_view/iterator/op_deref.md b/reference/ranges/filter_view/iterator/op_deref.md
index 22bf342e6..17f179778 100644
--- a/reference/ranges/filter_view/iterator/op_deref.md
+++ b/reference/ranges/filter_view/iterator/op_deref.md
@@ -21,6 +21,7 @@ constexpr range_reference_t&amp;lt;V&amp;gt; operator*() const;
 ```cpp example
 #include &amp;lt;ranges&amp;gt;
 #include &amp;lt;vector&amp;gt;
+#include &amp;lt;iostream&amp;gt;
 
 int main() {
   using std::ranges::filter_view;
@@ -30,13 +31,13 @@ int main() {
 
   filter_view fv{vec, [](int x){ return x % 2 == 0; }};
 
-  iterator_t&amp;lt;filter_view&amp;gt; i(fv, vec.begin());
+  iterator_t&amp;lt;decltype(fv)&amp;gt; i(fv, vec.begin());
 
-  std::cout &amp;lt;&amp;lt; *i &amp;lt;&amp;lt; `\n`;
+  std::cout &amp;lt;&amp;lt; *i &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
   i++;
-  std::cout &amp;lt;&amp;lt; *i &amp;lt;&amp;lt; `\n`;
+  std::cout &amp;lt;&amp;lt; *i &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
   i++;
-  std::cout &amp;lt;&amp;lt; *i &amp;lt;&amp;lt; `\n`;
+  std::cout &amp;lt;&amp;lt; *i &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
 }
 ```
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator++ -- filter_view::iterator のコードと説明を修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/filter_view/iterator/op_increment.html"/>
      <id>e970be3588e21243d967790a37deb8481dd0c0bf:reference/ranges/filter_view/iterator/op_increment.md</id>
      <updated>2025-09-24T19:08:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/filter_view/iterator/op_increment.md b/reference/ranges/filter_view/iterator/op_increment.md
index f891251cf..942d55582 100644
--- a/reference/ranges/filter_view/iterator/op_increment.md
+++ b/reference/ranges/filter_view/iterator/op_increment.md
@@ -46,6 +46,7 @@ return tmp;
 ```cpp example
 #include &amp;lt;ranges&amp;gt;
 #include &amp;lt;vector&amp;gt;
+#include &amp;lt;iostream&amp;gt;
 
 int main() {
   using std::ranges::filter_view;
@@ -55,13 +56,13 @@ int main() {
 
   filter_view fv{vec, [](int x){ return x % 2 == 0; }};
 
-  iterator_t&amp;lt;filter_view&amp;gt; i(fv, vec.begin());
+  iterator_t&amp;lt;decltype(fv)&amp;gt; i(fv, vec.begin());
 
-  std::cout &amp;lt;&amp;lt; *i &amp;lt;&amp;lt; `\n`;
+  std::cout &amp;lt;&amp;lt; *i &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
   i++;
-  std::cout &amp;lt;&amp;lt; *i &amp;lt;&amp;lt; `\n`;
+  std::cout &amp;lt;&amp;lt; *i &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
   i++;
-  std::cout &amp;lt;&amp;lt; *i &amp;lt;&amp;lt; `\n`;
+  std::cout &amp;lt;&amp;lt; *i &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
 }
 ```
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>base -- コード例を修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/common_view/base.html"/>
      <id>7ad59de510e3da98863afb01138a995fb679f272:reference/ranges/common_view/base.md</id>
      <updated>2025-09-24T15:34:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/common_view/base.md b/reference/ranges/common_view/base.md
index bbd651c79..08a2cf5ba 100644
--- a/reference/ranges/common_view/base.md
+++ b/reference/ranges/common_view/base.md
@@ -31,16 +31,17 @@ constexpr V base() &amp;amp;&amp;amp;;             // (2) C++20
 int main() {
   std::vector&amp;lt;int&amp;gt; vec = {1, 2, 3, 4, 5};
   
-  auto taken = vec | std::views::take(3);
+  auto pred = [](int x) { return x &amp;lt;= 3; };
+  auto taken = vec | std::views::take_while(pred);
   std::ranges::common_view cv(taken);
   
   // (1) コピーして取得
   auto base1 = cv.base();
-  static_assert(std::same_as&amp;lt;decltype(base1), std::ranges::take_view&amp;lt;std::ranges::ref_view&amp;lt;std::vector&amp;lt;int&amp;gt;&amp;gt;&amp;gt;&amp;gt;);
+  static_assert(std::same_as&amp;lt;decltype(base1), std::ranges::take_while_view&amp;lt;std::ranges::ref_view&amp;lt;std::vector&amp;lt;int&amp;gt;&amp;gt;, decltype(pred)&amp;gt;&amp;gt;);
   
   // (2) ムーブして取得
   auto base2 = std::move(cv).base();
-  static_assert(std::same_as&amp;lt;decltype(base2), std::ranges::take_view&amp;lt;std::ranges::ref_view&amp;lt;std::vector&amp;lt;int&amp;gt;&amp;gt;&amp;gt;&amp;gt;);
+  static_assert(std::same_as&amp;lt;decltype(base2), std::ranges::take_while_view&amp;lt;std::ranges::ref_view&amp;lt;std::vector&amp;lt;int&amp;gt;&amp;gt;, decltype(pred)&amp;gt;&amp;gt;);
   
   // 取得したviewを使用
   for (int n : base1) {
@@ -51,8 +52,8 @@ int main() {
 ```
 * base[color ff0000]
 * std::ranges::common_view[link ../common_view.md]
-* std::views::take[link ../take_view.md]
-* std::ranges::take_view[link ../take_view.md]
+* std::views::take_while[link ../take_while_view.md]
+* std::ranges::take_while_view[link ../take_while_view.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>begin -- コード例を修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/common_view/begin.html"/>
      <id>7ad59de510e3da98863afb01138a995fb679f272:reference/ranges/common_view/begin.md</id>
      <updated>2025-09-24T15:34:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/common_view/begin.md b/reference/ranges/common_view/begin.md
index 0cd45f496..e70d880b9 100644
--- a/reference/ranges/common_view/begin.md
+++ b/reference/ranges/common_view/begin.md
@@ -43,7 +43,7 @@ int main() {
   std::vector&amp;lt;int&amp;gt; vec = {1, 2, 3, 4, 5};
   
   // common_rangeではないviewを作成
-  auto taken = vec | std::views::take(3);
+  auto taken = vec | std::views::take_while([](int x) { return x &amp;lt;= 3; });
   static_assert(!std::ranges::common_range&amp;lt;decltype(taken)&amp;gt;);
   
   // common_viewでラップ
@@ -66,7 +66,7 @@ int main() {
 * end[link end.md]
 * std::ranges::common_range[link ../common_range.md]
 * std::ranges::common_view[link ../common_view.md]
-* std::views::take[link ../take_view.md]
+* std::views::take_while[link ../take_while_view.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>end -- コード例を修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/common_view/end.html"/>
      <id>7ad59de510e3da98863afb01138a995fb679f272:reference/ranges/common_view/end.md</id>
      <updated>2025-09-24T15:34:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/common_view/end.md b/reference/ranges/common_view/end.md
index fd0432e74..23eac3589 100644
--- a/reference/ranges/common_view/end.md
+++ b/reference/ranges/common_view/end.md
@@ -45,7 +45,7 @@ int main() {
   std::vector&amp;lt;int&amp;gt; vec = {1, 2, 3, 4, 5};
   
   // common_rangeではないviewを作成
-  auto taken = vec | std::views::take(3);
+  auto taken = vec | std::views::take_while([](int x) { return x &amp;lt;= 3; });
   
   // common_viewでラップ
   std::ranges::common_view cv(taken);
@@ -65,7 +65,7 @@ int main() {
 * end[color ff0000]
 * begin[link begin.md]
 * std::ranges::common_view[link ../common_view.md]
-* std::views::take[link ../take_view.md]
+* std::views::take_while[link ../take_while_view.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- コード例を修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/common_view/op_constructor.html"/>
      <id>7ad59de510e3da98863afb01138a995fb679f272:reference/ranges/common_view/op_constructor.md</id>
      <updated>2025-09-24T15:34:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/common_view/op_constructor.md b/reference/ranges/common_view/op_constructor.md
index 1d469d14b..083f4a11f 100644
--- a/reference/ranges/common_view/op_constructor.md
+++ b/reference/ranges/common_view/op_constructor.md
@@ -36,7 +36,7 @@ int main() {
   std::ranges::common_view&amp;lt;std::ranges::empty_view&amp;lt;int&amp;gt;&amp;gt; cv1;
   
   // (2) 元となるRangeを受け取るコンストラクタ
-  auto taken = vec | std::views::take(3);
+  auto taken = vec | std::views::take_while([](int x) { return x &amp;lt;= 3; });
   std::ranges::common_view cv2(taken);
   
   for (int n : cv2) {
@@ -47,7 +47,7 @@ int main() {
 ```
 * std::ranges::common_view[color ff0000]
 * std::ranges::empty_view[link ../empty_view.md]
-* std::views::take[link ../take_view.md]
+* std::views::take_while[link ../take_while_view.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>推論補助 -- コード例を修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/common_view/op_deduction_guide.html"/>
      <id>7ad59de510e3da98863afb01138a995fb679f272:reference/ranges/common_view/op_deduction_guide.md</id>
      <updated>2025-09-24T15:34:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/common_view/op_deduction_guide.md b/reference/ranges/common_view/op_deduction_guide.md
index c97b4a09c..74e82646e 100644
--- a/reference/ranges/common_view/op_deduction_guide.md
+++ b/reference/ranges/common_view/op_deduction_guide.md
@@ -26,7 +26,8 @@ int main() {
   std::vector&amp;lt;int&amp;gt; vec = {1, 2, 3, 4, 5};
   
   // views::takeはcommon_rangeではない
-  auto taken = vec | std::views::take(3);
+  auto pred = [](int x) { return x &amp;lt;= 3; };
+  auto taken = vec | std::views::take_while(pred);
   
   // common_viewの型を明示的に指定する必要がない
   std::ranges::common_view cv{taken};
@@ -34,13 +35,13 @@ int main() {
   // 推論された型を確認
   static_assert(std::same_as&amp;lt;
     decltype(cv),
-    std::ranges::common_view&amp;lt;std::ranges::take_view&amp;lt;std::ranges::ref_view&amp;lt;std::vector&amp;lt;int&amp;gt;&amp;gt;&amp;gt;&amp;gt;
+    std::ranges::common_view&amp;lt;std::ranges::take_while_view&amp;lt;std::ranges::ref_view&amp;lt;std::vector&amp;lt;int&amp;gt;&amp;gt;, decltype(pred)&amp;gt;&amp;gt;
   &amp;gt;);
 }
 ```
 * std::ranges::common_view[color ff0000]
-* std::views::take[link ../take_view.md]
-* std::ranges::take_view[link ../take_view.md]
+* std::views::take_while[link ../take_while_view.md]
+* std::ranges::take_while_view[link ../take_while_view.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>size -- コード例を修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/common_view/size.html"/>
      <id>7ad59de510e3da98863afb01138a995fb679f272:reference/ranges/common_view/size.md</id>
      <updated>2025-09-24T15:34:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/common_view/size.md b/reference/ranges/common_view/size.md
index 662faf840..10563bc15 100644
--- a/reference/ranges/common_view/size.md
+++ b/reference/ranges/common_view/size.md
@@ -24,14 +24,14 @@ constexpr auto size() const
 ## 例
 ```cpp example
 #include &amp;lt;ranges&amp;gt;
-#include &amp;lt;vector&amp;gt;
+#include &amp;lt;list&amp;gt;
 #include &amp;lt;iostream&amp;gt;
 
 int main() {
-  std::vector&amp;lt;int&amp;gt; vec = {1, 2, 3, 4, 5};
+  std::list&amp;lt;int&amp;gt; ls = {1, 2, 3, 4, 5};
   
   // sized_rangeなviewを作成
-  auto taken = vec | std::views::take(3);
+  auto taken = std::views::counted(ls.begin(), 3);
   static_assert(std::ranges::sized_range&amp;lt;decltype(taken)&amp;gt;);
   
   // common_viewでラップ
@@ -48,7 +48,7 @@ int main() {
 * size[color ff0000]
 * std::ranges::sized_range[link ../sized_range.md]
 * std::ranges::common_view[link ../common_view.md]
-* std::views::take[link ../take_view.md]
+* std::views::counted[link ../counted.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>signed_integral -- コード修飾を修正</title>
      <link href="https://cpprefjp.github.io/reference/concepts/signed_integral.html"/>
      <id>00f29aa30c3aa31fda81da54c776610716b808d7:reference/concepts/signed_integral.md</id>
      <updated>2025-09-24T15:17:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/concepts/signed_integral.md b/reference/concepts/signed_integral.md
index 5a1ea6c0e..b58ee3c10 100644
--- a/reference/concepts/signed_integral.md
+++ b/reference/concepts/signed_integral.md
@@ -54,7 +54,7 @@ int main() {
   f&amp;lt;std::integral_constant&amp;lt;int, 1&amp;gt;&amp;gt;(&amp;#34;std::integral_constant&amp;lt;int, 1&amp;gt;&amp;#34;);
 }
 ```
-* std::integral[color ff0000]
+* std::signed_integral[color ff0000]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>matrix_rank_1_update_c -- コード修飾を修正</title>
      <link href="https://cpprefjp.github.io/reference/linalg/matrix_rank_1_update_c.html"/>
      <id>00f29aa30c3aa31fda81da54c776610716b808d7:reference/linalg/matrix_rank_1_update_c.md</id>
      <updated>2025-09-24T15:17:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/matrix_rank_1_update_c.md b/reference/linalg/matrix_rank_1_update_c.md
index 21cfe3ae9..0e24ef2af 100644
--- a/reference/linalg/matrix_rank_1_update_c.md
+++ b/reference/linalg/matrix_rank_1_update_c.md
@@ -143,7 +143,7 @@ int main()
 * v.extent[link /reference/mdspan/extents/extent.md]
 * y.extent[link /reference/mdspan/extents/extent.md]
 * std::complex[link /reference/complex/complex.md]
-* std::linalg::matrix_rank_1_update[color ff0000]
+* std::linalg::matrix_rank_1_update_c[color ff0000]
 
 
 ### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>triangular_matrix_right_product -- コード例を修正</title>
      <link href="https://cpprefjp.github.io/reference/linalg/triangular_matrix_right_product.html"/>
      <id>d5a10b5de5e50cca37d97fc16f7a5b690dbe8330:reference/linalg/triangular_matrix_right_product.md</id>
      <updated>2025-09-24T15:16:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/triangular_matrix_right_product.md b/reference/linalg/triangular_matrix_right_product.md
index d5f19ee85..7873a47d4 100644
--- a/reference/linalg/triangular_matrix_right_product.md
+++ b/reference/linalg/triangular_matrix_right_product.md
@@ -130,7 +130,7 @@ int main()
 
   // (1)
   std::cout &amp;lt;&amp;lt; &amp;#34;(1)\n&amp;#34;;
-  std::linalg::triangular_matrix_left_product(
+  std::linalg::triangular_matrix_right_product(
     A,
     std::linalg::upper_triangle,
     std::linalg::implicit_unit_diagonal,
@@ -140,7 +140,7 @@ int main()
   // (2)
   init_mat(C);
   std::cout &amp;lt;&amp;lt; &amp;#34;(2)\n&amp;#34;;
-  std::linalg::triangular_matrix_left_product(
+  std::linalg::triangular_matrix_right_product(
     std::execution::par,
     A,
     std::linalg::upper_triangle,
@@ -157,7 +157,7 @@ int main()
 * std::linalg::row_major_t[link /reference/linalg/row_major_t.md]
 * std::linalg::upper_triangle[link /reference/linalg/upper_triangle_t.md]
 * std::linalg::implicit_unit_diagonal[link /reference/linalg/implicit_unit_diagonal_t.md]
-* std::linalg::triangular_matrix_left_product[color ff0000]
+* std::linalg::triangular_matrix_right_product[color ff0000]
 
 
 ### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>when_all -- リンクを修正</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/when_all.html"/>
      <id>649d139b5b271d6f0215e62fea7922e61d8f1c64:reference/execution/execution/when_all.md</id>
      <updated>2025-09-23T01:01:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/when_all.md b/reference/execution/execution/when_all.md
index d61223b37..a04fca435 100644
--- a/reference/execution/execution/when_all.md
+++ b/reference/execution/execution/when_all.md
@@ -272,7 +272,7 @@ struct make-state {
 * atomic[link /reference/atomic/atomic.md]
 * stop_callback_for_t[link /reference/stop_token/stop_callback_for_t.md]
 * inplace_stop_source[link /reference/stop_token/inplace_stop_source.md]
-* stop_callback[link /reference/stop_token/stop_token.md]
+* stop_callback[link /reference/stop_token/stop_callback.md]
 * optional[link /reference/optional/optional.md]
 * nullopt[link /reference/optional/nullopt_t.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
</feed>
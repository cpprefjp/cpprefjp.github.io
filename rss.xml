<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2022-12-28T04:38:09.647172</updated>
  <id>dd7f419f-8100-466e-9ea5-23830c75688d</id>

  
    <entry>
      <title>operator&lt;=&gt; -- do small improvements</title>
      <link href="https://cpprefjp.github.io/reference/string_view/basic_string_view/op_compare_3way.html"/>
      <id>895deebb05fb9c1dd096663d55da046641f14727:reference/string_view/basic_string_view/op_compare_3way.md</id>
      <updated>2022-12-28T13:32:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string_view/basic_string_view/op_compare_3way.md b/reference/string_view/basic_string_view/op_compare_3way.md
index c9783d134..481609366 100644
--- a/reference/string_view/basic_string_view/op_compare_3way.md
+++ b/reference/string_view/basic_string_view/op_compare_3way.md
@@ -22,7 +22,7 @@ namespace std {
 
 
 ```cpp
-return static_cast&amp;lt;R&amp;gt;(lhs.compare(rhs) &amp;lt;=&amp;gt; 0);
+return static_cast&amp;lt;R&amp;gt;(x.compare(y) &amp;lt;=&amp;gt; 0);
 ```
 * compare[link compare.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;=&gt; -- do small improvements</title>
      <link href="https://cpprefjp.github.io/reference/tuple/tuple/op_compare_3way.html"/>
      <id>895deebb05fb9c1dd096663d55da046641f14727:reference/tuple/tuple/op_compare_3way.md</id>
      <updated>2022-12-28T13:32:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/tuple/tuple/op_compare_3way.md b/reference/tuple/tuple/op_compare_3way.md
index 6a52a35f9..58a1663e0 100644
--- a/reference/tuple/tuple/op_compare_3way.md
+++ b/reference/tuple/tuple/op_compare_3way.md
@@ -8,7 +8,7 @@
 namespace std {
   template&amp;lt;class... TTypes, class... UTypes&amp;gt;
   constexpr common_comparison_category_t&amp;lt;synth-three-way-result&amp;lt;TTypes, UTypes&amp;gt;...&amp;gt;
-    operator&amp;lt;=&amp;gt;(const tuple&amp;lt;TTypes...&amp;gt;&amp;amp;, const tuple&amp;lt;UTypes...&amp;gt;&amp;amp;); // (1) C++20
+    operator&amp;lt;=&amp;gt;(const tuple&amp;lt;TTypes...&amp;gt;&amp;amp; t, const tuple&amp;lt;UTypes...&amp;gt;&amp;amp; u); // (1) C++20
 }
 ```
 * tuple[link ../tuple.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;= -- some improvements regarding 3 way compare</title>
      <link href="https://cpprefjp.github.io/reference/set/set/op_greater_equal.html"/>
      <id>28d86d4343a3ca65b46f99fdd2d1a5b6abacac35:reference/set/set/op_greater_equal.md</id>
      <updated>2022-12-28T13:21:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/set/set/op_greater_equal.md b/reference/set/set/op_greater_equal.md
index 11d20fb00..616144e9f 100644
--- a/reference/set/set/op_greater_equal.md
+++ b/reference/set/set/op_greater_equal.md
@@ -5,6 +5,7 @@
 
 ```cpp
 namespace std {
+  // operator&amp;lt;=&amp;gt;により、以下の演算子が使用可能になる (C++20)
   template &amp;lt;class Key, class Compare, class Allocator&amp;gt;
   bool
     operator&amp;gt;=(const set&amp;lt;Key,Compare,Allocator&amp;gt;&amp;amp; x,
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt; -- some improvements regarding 3 way compare</title>
      <link href="https://cpprefjp.github.io/reference/string/basic_string/op_greater.html"/>
      <id>28d86d4343a3ca65b46f99fdd2d1a5b6abacac35:reference/string/basic_string/op_greater.md</id>
      <updated>2022-12-28T13:21:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string/basic_string/op_greater.md b/reference/string/basic_string/op_greater.md
index 5c045b87e..d2b484b7d 100644
--- a/reference/string/basic_string/op_greater.md
+++ b/reference/string/basic_string/op_greater.md
@@ -5,7 +5,7 @@
 
 ```cpp
 namespace std {
-  // operator==により、以下の演算子が使用可能になる (C++20)
+  // operator&amp;lt;=&amp;gt;により、以下の演算子が使用可能になる (C++20)
   template &amp;lt;class CharT, class Traits, class Allocator&amp;gt;
   bool
     operator&amp;gt;(const basic_string&amp;lt;CharT, Traits, Allocator&amp;gt;&amp;amp; a,
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt; -- some improvements regarding 3 way compare</title>
      <link href="https://cpprefjp.github.io/reference/string_view/basic_string_view/op_greater.html"/>
      <id>28d86d4343a3ca65b46f99fdd2d1a5b6abacac35:reference/string_view/basic_string_view/op_greater.md</id>
      <updated>2022-12-28T13:21:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string_view/basic_string_view/op_greater.md b/reference/string_view/basic_string_view/op_greater.md
index b220585b5..210a1d504 100644
--- a/reference/string_view/basic_string_view/op_greater.md
+++ b/reference/string_view/basic_string_view/op_greater.md
@@ -6,7 +6,7 @@
 
 ```cpp
 namespace std {
-  // operator==により、以下の演算子が使用可能になる (C++20)
+  // operator&amp;lt;=&amp;gt;により、以下の演算子が使用可能になる (C++20)
   template &amp;lt;class CharT, class Traits&amp;gt;
   constexpr bool operator&amp;gt;(basic_string_view&amp;lt;CharT, Traits&amp;gt; x,
                            basic_string_view&amp;lt;CharT, Traits&amp;gt; y) noexcept; // (1) C++17
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>count -- fix some typo regarding multiset</title>
      <link href="https://cpprefjp.github.io/reference/set/set/count.html"/>
      <id>f29a57aecb0b61c88bbb7b9c9724483545959d23:reference/set/set/count.md</id>
      <updated>2022-12-28T13:17:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/set/set/count.md b/reference/set/set/count.md
index c5a14830b..a9aae4791 100644
--- a/reference/set/set/count.md
+++ b/reference/set/set/count.md
@@ -44,7 +44,7 @@ int main()
 {
   // (1)
   {
-    std::multiset&amp;lt;std::string&amp;gt; s = { &amp;#34;Alice&amp;#34;, &amp;#34;Bob&amp;#34;, &amp;#34;Bob&amp;#34;, &amp;#34;Carol&amp;#34; };
+    std::set&amp;lt;std::string&amp;gt; s = { &amp;#34;Alice&amp;#34;, &amp;#34;Bob&amp;#34;, &amp;#34;Bob&amp;#34;, &amp;#34;Carol&amp;#34; };
 
     std::size_t n = s.count(&amp;#34;Bob&amp;#34;);
     std::cout &amp;lt;&amp;lt; n &amp;lt;&amp;lt; std::endl;
@@ -52,7 +52,7 @@ int main()
 
   // (2)
   {
-    std::multiset&amp;lt;std::string, std::less&amp;lt;&amp;gt;&amp;gt; s = { &amp;#34;Alice&amp;#34;, &amp;#34;Bob&amp;#34;, &amp;#34;Bob&amp;#34;, &amp;#34;Carol&amp;#34; };
+    std::set&amp;lt;std::string, std::less&amp;lt;&amp;gt;&amp;gt; s = { &amp;#34;Alice&amp;#34;, &amp;#34;Bob&amp;#34;, &amp;#34;Bob&amp;#34;, &amp;#34;Carol&amp;#34; };
 
     // std::lessのvoidに対する特殊化を使用することで、
     // 文字列リテラルをcount()関数の引数として渡した際に、
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>lower_bound -- fix some typo regarding multiset</title>
      <link href="https://cpprefjp.github.io/reference/set/set/lower_bound.html"/>
      <id>f29a57aecb0b61c88bbb7b9c9724483545959d23:reference/set/set/lower_bound.md</id>
      <updated>2022-12-28T13:17:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/set/set/lower_bound.md b/reference/set/set/lower_bound.md
index 409cc8670..b02867c4a 100644
--- a/reference/set/set/lower_bound.md
+++ b/reference/set/set/lower_bound.md
@@ -50,7 +50,7 @@ int main()
 {
   // (1)
   {
-    std::multiset&amp;lt;std::string&amp;gt; s = { &amp;#34;A&amp;#34;, &amp;#34;B&amp;#34;, &amp;#34;B&amp;#34;, &amp;#34;C&amp;#34;, &amp;#34;D&amp;#34; };
+    std::set&amp;lt;std::string&amp;gt; s = { &amp;#34;A&amp;#34;, &amp;#34;B&amp;#34;, &amp;#34;B&amp;#34;, &amp;#34;C&amp;#34;, &amp;#34;D&amp;#34; };
 
     // B以上D以下の範囲を取得
     decltype(s)::iterator it = s.lower_bound(&amp;#34;B&amp;#34;);
@@ -65,7 +65,7 @@ int main()
 
   // (2)
   {
-    std::multiset&amp;lt;std::string, std::less&amp;lt;&amp;gt;&amp;gt; s = { &amp;#34;A&amp;#34;, &amp;#34;B&amp;#34;, &amp;#34;B&amp;#34;, &amp;#34;C&amp;#34;, &amp;#34;D&amp;#34; };
+    std::set&amp;lt;std::string, std::less&amp;lt;&amp;gt;&amp;gt; s = { &amp;#34;A&amp;#34;, &amp;#34;B&amp;#34;, &amp;#34;B&amp;#34;, &amp;#34;C&amp;#34;, &amp;#34;D&amp;#34; };
 
     // std::lessのvoidに対する特殊化を使用することで、
     // 文字列リテラルをlower_bound()関数の引数として渡した際に、
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>upper_bound -- fix some typo regarding multiset</title>
      <link href="https://cpprefjp.github.io/reference/set/set/upper_bound.html"/>
      <id>f29a57aecb0b61c88bbb7b9c9724483545959d23:reference/set/set/upper_bound.md</id>
      <updated>2022-12-28T13:17:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/set/set/upper_bound.md b/reference/set/set/upper_bound.md
index 3d553bebb..5e2feb56b 100644
--- a/reference/set/set/upper_bound.md
+++ b/reference/set/set/upper_bound.md
@@ -50,7 +50,7 @@ int main()
 {
   // (1)
   {
-    std::multiset&amp;lt;std::string&amp;gt; s = { &amp;#34;A&amp;#34;, &amp;#34;B&amp;#34;, &amp;#34;B&amp;#34;, &amp;#34;C&amp;#34;, &amp;#34;D&amp;#34; };
+    std::set&amp;lt;std::string&amp;gt; s = { &amp;#34;A&amp;#34;, &amp;#34;B&amp;#34;, &amp;#34;B&amp;#34;, &amp;#34;C&amp;#34;, &amp;#34;D&amp;#34; };
 
     // B以上D以下の範囲を取得
     decltype(s)::iterator it = s.lower_bound(&amp;#34;B&amp;#34;);
@@ -65,7 +65,7 @@ int main()
 
   // (2)
   {
-    std::multiset&amp;lt;std::string, std::less&amp;lt;&amp;gt;&amp;gt; s = { &amp;#34;A&amp;#34;, &amp;#34;B&amp;#34;, &amp;#34;B&amp;#34;, &amp;#34;C&amp;#34;, &amp;#34;D&amp;#34; };
+    std::set&amp;lt;std::string, std::less&amp;lt;&amp;gt;&amp;gt; s = { &amp;#34;A&amp;#34;, &amp;#34;B&amp;#34;, &amp;#34;B&amp;#34;, &amp;#34;C&amp;#34;, &amp;#34;D&amp;#34; };
 
     // std::lessのvoidに対する特殊化を使用することで、
     // 文字列リテラルをlower_bound()関数の引数として渡した際に、
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator!= -- fix some typo regarding multiset</title>
      <link href="https://cpprefjp.github.io/reference/unordered_map/unordered_multimap/op_not_equal.html"/>
      <id>f29a57aecb0b61c88bbb7b9c9724483545959d23:reference/unordered_map/unordered_multimap/op_not_equal.md</id>
      <updated>2022-12-28T13:17:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_map/unordered_multimap/op_not_equal.md b/reference/unordered_map/unordered_multimap/op_not_equal.md
index f8631cdb7..73b81dadc 100644
--- a/reference/unordered_map/unordered_multimap/op_not_equal.md
+++ b/reference/unordered_map/unordered_multimap/op_not_equal.md
@@ -14,7 +14,7 @@ namespace std {
 ```
 
 ## 概要
-`unordered_multiset` オブジェクトを非等値比較する。
+`unordered_multimap` オブジェクトを非等値比較する。
 
 
 ## 要件
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>emplace -- fix meta id-type function to function template</title>
      <link href="https://cpprefjp.github.io/reference/any/any/emplace.html"/>
      <id>c8e54f61da41ecf4a3d7c7f3594529875c90959d:reference/any/any/emplace.md</id>
      <updated>2022-12-28T13:08:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/any/any/emplace.md b/reference/any/any/emplace.md
index cff768adc..992c0aeda 100644
--- a/reference/any/any/emplace.md
+++ b/reference/any/any/emplace.md
@@ -2,7 +2,7 @@
 * any[meta header]
 * std[meta namespace]
 * any[meta class]
-* function[meta id-type]
+* function template[meta id-type]
 * cpp17[meta cpp]
 
 ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>abs -- fix meta id-type function to function template</title>
      <link href="https://cpprefjp.github.io/reference/chrono/duration/abs.html"/>
      <id>c8e54f61da41ecf4a3d7c7f3594529875c90959d:reference/chrono/duration/abs.md</id>
      <updated>2022-12-28T13:08:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/duration/abs.md b/reference/chrono/duration/abs.md
index 241f59e18..d39b3e893 100644
--- a/reference/chrono/duration/abs.md
+++ b/reference/chrono/duration/abs.md
@@ -1,7 +1,7 @@
 # abs
 * chrono[meta header]
 * std::chrono[meta namespace]
-* function[meta id-type]
+* function template[meta id-type]
 * cpp17[meta cpp]
 
 ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ceil -- fix meta id-type function to function template</title>
      <link href="https://cpprefjp.github.io/reference/chrono/duration/ceil.html"/>
      <id>c8e54f61da41ecf4a3d7c7f3594529875c90959d:reference/chrono/duration/ceil.md</id>
      <updated>2022-12-28T13:08:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/duration/ceil.md b/reference/chrono/duration/ceil.md
index 62743e4f2..215ca108c 100644
--- a/reference/chrono/duration/ceil.md
+++ b/reference/chrono/duration/ceil.md
@@ -1,7 +1,7 @@
 # ceil
 * chrono[meta header]
 * std::chrono[meta namespace]
-* function[meta id-type]
+* function template[meta id-type]
 * cpp17[meta cpp]
 
 ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>floor -- fix meta id-type function to function template</title>
      <link href="https://cpprefjp.github.io/reference/chrono/duration/floor.html"/>
      <id>c8e54f61da41ecf4a3d7c7f3594529875c90959d:reference/chrono/duration/floor.md</id>
      <updated>2022-12-28T13:08:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/duration/floor.md b/reference/chrono/duration/floor.md
index 468375eb3..1017422f0 100644
--- a/reference/chrono/duration/floor.md
+++ b/reference/chrono/duration/floor.md
@@ -1,7 +1,7 @@
 # floor
 * chrono[meta header]
 * std::chrono[meta namespace]
-* function[meta id-type]
+* function template[meta id-type]
 * cpp17[meta cpp]
 
 ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>round -- fix meta id-type function to function template</title>
      <link href="https://cpprefjp.github.io/reference/chrono/duration/round.html"/>
      <id>c8e54f61da41ecf4a3d7c7f3594529875c90959d:reference/chrono/duration/round.md</id>
      <updated>2022-12-28T13:08:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/duration/round.md b/reference/chrono/duration/round.md
index 058f7c2e6..97d082f6b 100644
--- a/reference/chrono/duration/round.md
+++ b/reference/chrono/duration/round.md
@@ -1,7 +1,7 @@
 # round
 * chrono[meta header]
 * std::chrono[meta namespace]
-* function[meta id-type]
+* function template[meta id-type]
 * cpp17[meta cpp]
 
 ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ceil -- fix meta id-type function to function template</title>
      <link href="https://cpprefjp.github.io/reference/chrono/time_point/ceil.html"/>
      <id>c8e54f61da41ecf4a3d7c7f3594529875c90959d:reference/chrono/time_point/ceil.md</id>
      <updated>2022-12-28T13:08:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/time_point/ceil.md b/reference/chrono/time_point/ceil.md
index e33504bdc..3f4e9adaa 100644
--- a/reference/chrono/time_point/ceil.md
+++ b/reference/chrono/time_point/ceil.md
@@ -1,7 +1,7 @@
 # ceil
 * chrono[meta header]
 * std::chrono[meta namespace]
-* function[meta id-type]
+* function template[meta id-type]
 * cpp17[meta cpp]
 
 ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>floor -- fix meta id-type function to function template</title>
      <link href="https://cpprefjp.github.io/reference/chrono/time_point/floor.html"/>
      <id>c8e54f61da41ecf4a3d7c7f3594529875c90959d:reference/chrono/time_point/floor.md</id>
      <updated>2022-12-28T13:08:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/time_point/floor.md b/reference/chrono/time_point/floor.md
index a57b0fd0f..3094ef640 100644
--- a/reference/chrono/time_point/floor.md
+++ b/reference/chrono/time_point/floor.md
@@ -1,7 +1,7 @@
 # floor
 * chrono[meta header]
 * std::chrono[meta namespace]
-* function[meta id-type]
+* function template[meta id-type]
 * cpp17[meta cpp]
 
 ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>round -- fix meta id-type function to function template</title>
      <link href="https://cpprefjp.github.io/reference/chrono/time_point/round.html"/>
      <id>c8e54f61da41ecf4a3d7c7f3594529875c90959d:reference/chrono/time_point/round.md</id>
      <updated>2022-12-28T13:08:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/time_point/round.md b/reference/chrono/time_point/round.md
index 278ceb3ac..8b5f483cb 100644
--- a/reference/chrono/time_point/round.md
+++ b/reference/chrono/time_point/round.md
@@ -1,7 +1,7 @@
 # round
 * chrono[meta header]
 * std::chrono[meta namespace]
-* function[meta id-type]
+* function template[meta id-type]
 * cpp17[meta cpp]
 
 ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator() -- fix meta id-type function to function template</title>
      <link href="https://cpprefjp.github.io/reference/functional/boyer_moore_horspool_searcher/op_call.html"/>
      <id>c8e54f61da41ecf4a3d7c7f3594529875c90959d:reference/functional/boyer_moore_horspool_searcher/op_call.md</id>
      <updated>2022-12-28T13:08:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/functional/boyer_moore_horspool_searcher/op_call.md b/reference/functional/boyer_moore_horspool_searcher/op_call.md
index b9cea812b..22e9ee2ac 100644
--- a/reference/functional/boyer_moore_horspool_searcher/op_call.md
+++ b/reference/functional/boyer_moore_horspool_searcher/op_call.md
@@ -2,7 +2,7 @@
 * functional[meta header]
 * std[meta namespace]
 * boyer_moore_horspool_searcher[meta class]
-* function[meta id-type]
+* function template[meta id-type]
 * cpp17[meta cpp]
 
 ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator() -- fix meta id-type function to function template</title>
      <link href="https://cpprefjp.github.io/reference/functional/boyer_moore_searcher/op_call.html"/>
      <id>c8e54f61da41ecf4a3d7c7f3594529875c90959d:reference/functional/boyer_moore_searcher/op_call.md</id>
      <updated>2022-12-28T13:08:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/functional/boyer_moore_searcher/op_call.md b/reference/functional/boyer_moore_searcher/op_call.md
index 82134094e..c45c36981 100644
--- a/reference/functional/boyer_moore_searcher/op_call.md
+++ b/reference/functional/boyer_moore_searcher/op_call.md
@@ -2,7 +2,7 @@
 * functional[meta header]
 * std[meta namespace]
 * boyer_moore_searcher[meta class]
-* function[meta id-type]
+* function template[meta id-type]
 * cpp17[meta cpp]
 
 ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator() -- fix meta id-type function to function template</title>
      <link href="https://cpprefjp.github.io/reference/functional/default_searcher/op_call.html"/>
      <id>c8e54f61da41ecf4a3d7c7f3594529875c90959d:reference/functional/default_searcher/op_call.md</id>
      <updated>2022-12-28T13:08:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/functional/default_searcher/op_call.md b/reference/functional/default_searcher/op_call.md
index eef430234..f34654db1 100644
--- a/reference/functional/default_searcher/op_call.md
+++ b/reference/functional/default_searcher/op_call.md
@@ -2,7 +2,7 @@
 * functional[meta header]
 * std[meta namespace]
 * default_searcher[meta class]
-* function[meta id-type]
+* function template[meta id-type]
 * cpp17[meta cpp]
 
 ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>merge -- fix meta id-type function to function template</title>
      <link href="https://cpprefjp.github.io/reference/map/map/merge.html"/>
      <id>c8e54f61da41ecf4a3d7c7f3594529875c90959d:reference/map/map/merge.md</id>
      <updated>2022-12-28T13:08:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/map/map/merge.md b/reference/map/map/merge.md
index 55e7205aa..6ab9b6580 100644
--- a/reference/map/map/merge.md
+++ b/reference/map/map/merge.md
@@ -1,6 +1,6 @@
 # merge
 * map[meta header]
-* function[meta id-type]
+* function template[meta id-type]
 * std[meta namespace]
 * map[meta class]
 * cpp17[meta cpp]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>merge -- fix meta id-type function to function template</title>
      <link href="https://cpprefjp.github.io/reference/map/multimap/merge.html"/>
      <id>c8e54f61da41ecf4a3d7c7f3594529875c90959d:reference/map/multimap/merge.md</id>
      <updated>2022-12-28T13:08:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/map/multimap/merge.md b/reference/map/multimap/merge.md
index 62577ede8..fca7f2b74 100644
--- a/reference/map/multimap/merge.md
+++ b/reference/map/multimap/merge.md
@@ -1,6 +1,6 @@
 # merge
 * map[meta header]
-* function[meta id-type]
+* function template[meta id-type]
 * std[meta namespace]
 * multimap[meta class]
 * cpp17[meta cpp]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>make_shared -- fix meta id-type function to function template</title>
      <link href="https://cpprefjp.github.io/reference/memory/make_shared.html"/>
      <id>c8e54f61da41ecf4a3d7c7f3594529875c90959d:reference/memory/make_shared.md</id>
      <updated>2022-12-28T13:08:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/memory/make_shared.md b/reference/memory/make_shared.md
index 1020f5d3c..617cdd664 100644
--- a/reference/memory/make_shared.md
+++ b/reference/memory/make_shared.md
@@ -1,7 +1,7 @@
 # make_shared
 * memory[meta header]
 * std[meta namespace]
-* function[meta id-type]
+* function template[meta id-type]
 * cpp11[meta cpp]
 
 ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>destroy -- fix meta id-type function to function template</title>
      <link href="https://cpprefjp.github.io/reference/memory_resource/polymorphic_allocator/destroy.html"/>
      <id>c8e54f61da41ecf4a3d7c7f3594529875c90959d:reference/memory_resource/polymorphic_allocator/destroy.md</id>
      <updated>2022-12-28T13:08:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/memory_resource/polymorphic_allocator/destroy.md b/reference/memory_resource/polymorphic_allocator/destroy.md
index 1900f35be..aaaa2436d 100644
--- a/reference/memory_resource/polymorphic_allocator/destroy.md
+++ b/reference/memory_resource/polymorphic_allocator/destroy.md
@@ -1,6 +1,6 @@
 # destroy
 * memory_resource[meta header]
-* function[meta id-type]
+* function template[meta id-type]
 * std::pmr[meta namespace]
 * polymorphic_allocator[meta class]
 * cpp17[meta cpp]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>merge -- fix meta id-type function to function template</title>
      <link href="https://cpprefjp.github.io/reference/set/multiset/merge.html"/>
      <id>c8e54f61da41ecf4a3d7c7f3594529875c90959d:reference/set/multiset/merge.md</id>
      <updated>2022-12-28T13:08:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/set/multiset/merge.md b/reference/set/multiset/merge.md
index dd72f2d03..1beb41f4c 100644
--- a/reference/set/multiset/merge.md
+++ b/reference/set/multiset/merge.md
@@ -1,6 +1,6 @@
 # merge
 * set[meta header]
-* function[meta id-type]
+* function template[meta id-type]
 * std[meta namespace]
 * multiset[meta class]
 * cpp17[meta cpp]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>merge -- fix meta id-type function to function template</title>
      <link href="https://cpprefjp.github.io/reference/set/set/merge.html"/>
      <id>c8e54f61da41ecf4a3d7c7f3594529875c90959d:reference/set/set/merge.md</id>
      <updated>2022-12-28T13:08:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/set/set/merge.md b/reference/set/set/merge.md
index 128345222..77a3e8f1a 100644
--- a/reference/set/set/merge.md
+++ b/reference/set/set/merge.md
@@ -1,6 +1,6 @@
 # merge
 * set[meta header]
-* function[meta id-type]
+* function template[meta id-type]
 * std[meta namespace]
 * set[meta class]
 * cpp17[meta cpp]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>try_lock_shared_until -- fix meta id-type function to function template</title>
      <link href="https://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/try_lock_shared_until.html"/>
      <id>c8e54f61da41ecf4a3d7c7f3594529875c90959d:reference/shared_mutex/shared_timed_mutex/try_lock_shared_until.md</id>
      <updated>2022-12-28T13:08:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/shared_mutex/shared_timed_mutex/try_lock_shared_until.md b/reference/shared_mutex/shared_timed_mutex/try_lock_shared_until.md
index 254f3fa17..782990278 100644
--- a/reference/shared_mutex/shared_timed_mutex/try_lock_shared_until.md
+++ b/reference/shared_mutex/shared_timed_mutex/try_lock_shared_until.md
@@ -2,7 +2,7 @@
 * shared_mutex[meta header]
 * std[meta namespace]
 * shared_timed_mutex[meta class]
-* function[meta id-type]
+* function template[meta id-type]
 * cpp14[meta cpp]
 
 ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>apply -- fix meta id-type function to function template</title>
      <link href="https://cpprefjp.github.io/reference/tuple/apply.html"/>
      <id>c8e54f61da41ecf4a3d7c7f3594529875c90959d:reference/tuple/apply.md</id>
      <updated>2022-12-28T13:08:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/tuple/apply.md b/reference/tuple/apply.md
index 16b8f0053..6332df41c 100644
--- a/reference/tuple/apply.md
+++ b/reference/tuple/apply.md
@@ -1,6 +1,6 @@
 # apply
 * tuple[meta header]
-* function[meta id-type]
+* function template[meta id-type]
 * std[meta namespace]
 * cpp17[meta cpp]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;= -- fix meta id-type function to function template</title>
      <link href="https://cpprefjp.github.io/reference/tuple/tuple/op_less_equal.html"/>
      <id>c8e54f61da41ecf4a3d7c7f3594529875c90959d:reference/tuple/tuple/op_less_equal.md</id>
      <updated>2022-12-28T13:08:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/tuple/tuple/op_less_equal.md b/reference/tuple/tuple/op_less_equal.md
index 68f5653f8..6a7d4ed31 100644
--- a/reference/tuple/tuple/op_less_equal.md
+++ b/reference/tuple/tuple/op_less_equal.md
@@ -1,7 +1,7 @@
 # operator&amp;lt;=
 * tuple[meta header]
 * std[meta namespace]
-* function[meta id-type]
+* function template[meta id-type]
 * cpp11[meta cpp]
 
 ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>merge -- fix meta id-type function to function template</title>
      <link href="https://cpprefjp.github.io/reference/unordered_map/unordered_map/merge.html"/>
      <id>c8e54f61da41ecf4a3d7c7f3594529875c90959d:reference/unordered_map/unordered_map/merge.md</id>
      <updated>2022-12-28T13:08:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_map/unordered_map/merge.md b/reference/unordered_map/unordered_map/merge.md
index e9ae2f6fa..7cfb7d89f 100644
--- a/reference/unordered_map/unordered_map/merge.md
+++ b/reference/unordered_map/unordered_map/merge.md
@@ -1,6 +1,6 @@
 # merge
 * unordered_map[meta header]
-* function[meta id-type]
+* function template[meta id-type]
 * std[meta namespace]
 * unordered_map[meta class]
 * cpp17[meta cpp]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>merge -- fix meta id-type function to function template</title>
      <link href="https://cpprefjp.github.io/reference/unordered_map/unordered_multimap/merge.html"/>
      <id>c8e54f61da41ecf4a3d7c7f3594529875c90959d:reference/unordered_map/unordered_multimap/merge.md</id>
      <updated>2022-12-28T13:08:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_map/unordered_multimap/merge.md b/reference/unordered_map/unordered_multimap/merge.md
index 8bb678726..3531421bc 100644
--- a/reference/unordered_map/unordered_multimap/merge.md
+++ b/reference/unordered_map/unordered_multimap/merge.md
@@ -1,6 +1,6 @@
 # merge
 * unordered_map[meta header]
-* function[meta id-type]
+* function template[meta id-type]
 * std[meta namespace]
 * unordered_multimap[meta class]
 * cpp17[meta cpp]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>merge -- fix meta id-type function to function template</title>
      <link href="https://cpprefjp.github.io/reference/unordered_set/unordered_multiset/merge.html"/>
      <id>c8e54f61da41ecf4a3d7c7f3594529875c90959d:reference/unordered_set/unordered_multiset/merge.md</id>
      <updated>2022-12-28T13:08:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_set/unordered_multiset/merge.md b/reference/unordered_set/unordered_multiset/merge.md
index fb7265ff4..efa7a87a8 100644
--- a/reference/unordered_set/unordered_multiset/merge.md
+++ b/reference/unordered_set/unordered_multiset/merge.md
@@ -1,6 +1,6 @@
 # merge
 * unordered_set[meta header]
-* function[meta id-type]
+* function template[meta id-type]
 * std[meta namespace]
 * unordered_multiset[meta class]
 * cpp17[meta cpp]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>merge -- fix meta id-type function to function template</title>
      <link href="https://cpprefjp.github.io/reference/unordered_set/unordered_set/merge.html"/>
      <id>c8e54f61da41ecf4a3d7c7f3594529875c90959d:reference/unordered_set/unordered_set/merge.md</id>
      <updated>2022-12-28T13:08:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_set/unordered_set/merge.md b/reference/unordered_set/unordered_set/merge.md
index 5cf0aea37..bb2706440 100644
--- a/reference/unordered_set/unordered_set/merge.md
+++ b/reference/unordered_set/unordered_set/merge.md
@@ -1,6 +1,6 @@
 # merge
 * unordered_set[meta header]
-* function[meta id-type]
+* function template[meta id-type]
 * std[meta namespace]
 * unordered_set[meta class]
 * cpp17[meta cpp]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>emplace -- fix meta id-type function to function template</title>
      <link href="https://cpprefjp.github.io/reference/variant/variant/emplace.html"/>
      <id>c8e54f61da41ecf4a3d7c7f3594529875c90959d:reference/variant/variant/emplace.md</id>
      <updated>2022-12-28T13:08:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/variant/variant/emplace.md b/reference/variant/variant/emplace.md
index c214cc567..ef1b24907 100644
--- a/reference/variant/variant/emplace.md
+++ b/reference/variant/variant/emplace.md
@@ -2,7 +2,7 @@
 * variant[meta header]
 * std[meta namespace]
 * variant[meta class]
-* function[meta id-type]
+* function template[meta id-type]
 * cpp17[meta cpp]
 
 ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>get -- fix meta id-type function to function template</title>
      <link href="https://cpprefjp.github.io/reference/variant/variant/get.html"/>
      <id>c8e54f61da41ecf4a3d7c7f3594529875c90959d:reference/variant/variant/get.md</id>
      <updated>2022-12-28T13:08:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/variant/variant/get.md b/reference/variant/variant/get.md
index 684db4a69..a9247aa6c 100644
--- a/reference/variant/variant/get.md
+++ b/reference/variant/variant/get.md
@@ -1,7 +1,7 @@
 # get
 * variant[meta header]
 * std[meta namespace]
-* function[meta id-type]
+* function template[meta id-type]
 * cpp17[meta cpp]
 
 ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>get_if -- fix meta id-type function to function template</title>
      <link href="https://cpprefjp.github.io/reference/variant/variant/get_if.html"/>
      <id>c8e54f61da41ecf4a3d7c7f3594529875c90959d:reference/variant/variant/get_if.md</id>
      <updated>2022-12-28T13:08:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/variant/variant/get_if.md b/reference/variant/variant/get_if.md
index d2098295e..8b3ef6e49 100644
--- a/reference/variant/variant/get_if.md
+++ b/reference/variant/variant/get_if.md
@@ -1,7 +1,7 @@
 # get_if
 * variant[meta header]
 * std[meta namespace]
-* function[meta id-type]
+* function template[meta id-type]
 * cpp17[meta cpp]
 
 ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>特殊化のアクセスチェック -- 特殊化のアクセスチェック、完了 #722</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/access_checking_on_specializations.html"/>
      <id>24e88692a0a90b600a6d0aeff0070de510f72bb2:lang/cpp20/access_checking_on_specializations.md</id>
      <updated>2022-12-28T12:41:09+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/access_checking_on_specializations.md b/lang/cpp20/access_checking_on_specializations.md
index ac3ea1d84..fb23dfe79 100644
--- a/lang/cpp20/access_checking_on_specializations.md
+++ b/lang/cpp20/access_checking_on_specializations.md
@@ -3,26 +3,26 @@
 
 ## 概要
 
-クラス`C1`の内側で宣言されたクラス（ローカルクラス`impl`）が`private/protected`で宣言されている場合、テンプレートの文脈で`C1`の外側から`impl`を参照することは禁止されていた。しかし、実際にはほぼ全てのコンパイラでこれは許可されており、実際に使用されていた。
+クラス`C`の内側で宣言されたクラス（ローカルクラス`impl`）が`private/protected`で宣言されている場合、テンプレートの文脈で`C`の外側から`impl`を参照することは禁止されていた。しかし、実際にはほぼ全てのコンパイラでこれは許可されており、実際に使用されていた。
 
 ```cpp
 template&amp;lt;class T&amp;gt;
-struct trait;
+struct traits;
 
-class C1 {
+class C {
   class impl; // クラス内ローカルクラス
 };
 
 // C++17まではill-formed、しかし実際にはほぼ全てのコンパイラでエラーにならなかった
 // C++20からはok
 template&amp;lt;&amp;gt;
-struct trait&amp;lt;C1::impl&amp;gt;;
+struct traits&amp;lt;C::impl&amp;gt;;
 ```
 
 ただし、この`impl`がクラステンプレートになるとコンパイラによってはエラーとなっていた。
 
 ```cpp
-class C1 {
+class C {
   template&amp;lt;typename U&amp;gt;
   class impl{}; // クラス内ローカルクラステンプレート
 };
@@ -30,10 +30,10 @@ class C1 {
 // C++17まではill-formed、しかし一部のコンパイラではエラーにならなかった
 // C++20からはok
 template&amp;lt;&amp;gt;
-struct trait&amp;lt;C1::impl&amp;gt;;
+struct traits&amp;lt;C::impl&amp;gt;;
 ```
 
-C++20からはこれらの場合の挙動が標準化され、アクセス指定に関わらずローカルクラスをその親クラスの外側からテンプレートの文脈で参照することが許可されるようになる。
+C++20からはこれらの場合の挙動が標準化され、アクセス指定やテンプレートであるかに関わらずローカルクラスをその親クラスの外側からテンプレートの文脈で参照することが許可されるようになる。
 
 ## 仕様
 
@@ -89,7 +89,58 @@ struct std::iterator_traits&amp;lt;my_view&amp;lt;int&amp;gt;::my_view_iterator&amp;lt;T&amp;gt;&amp;gt;;
 そのため、C++20においてこの振る舞いを実装間で統一するために、テンプレートの文脈でプライベートローカルクラス（テンプレート）を参照することが許可された。
 
 ## 検討されたほかの選択肢
-(執筆中)
+
+この問題を解決する他の方法として、`friend`宣言を拡張してプライベートローカルクラスへのアクセスを明示的に許可しようとするものがあり、次のような3つのオプションが検討された
+
+1. プライベートローカルクラスを持つクラスで、そのローカルクラスを使用したテンプレート特殊化の`friend`宣言によってアクセス権を与える
+2. プライベートローカルクラス定義内で、自身を使用したテンプレート特殊化の`friend`宣言によってアクセス権を与える
+3. テンプレートの特殊化ではなくテンプレートの`friend`宣言によってアクセス権を与える
+
+```cpp
+namespace option1 {
+
+  class C {
+    template&amp;lt;typename U&amp;gt;
+    class impl;
+
+    // オプション1によるfriend宣言
+    template&amp;lt;class U&amp;gt;
+    friend struct trait&amp;lt;impl&amp;lt;U&amp;gt;&amp;gt;;
+  };
+}
+
+namespace option2 {
+
+  class C {
+    template&amp;lt;typename U&amp;gt;
+    class impl {
+
+      // オプション2によるfriend宣言
+      friend struct trait&amp;lt;impl&amp;gt;;
+    };
+  };
+}
+
+namespace option3 {
+
+  class C {
+    template&amp;lt;typename U&amp;gt;
+    class impl;
+
+    // オプション3によるfriend宣言
+    friend trait;
+  };
+}
+```
+
+オプション1とオプション2には次のような欠点がある
+
+1. 必要ない場合でも`trait`の定義にクラス`C`への特権アクセスを与えてしまう
+2. 1と同じ欠点に加えて、宣言のなされたローカルクラスではなくその外側のクラスに対するアクセス権が与えられるという点が奇妙（構文とその意味が一致していない）
+
+オプション3そのものには特に欠点は無かったが、このマイナーな問題を解決するためだけの言語機能となることや、全てのオプションにおいてその機能を追加したことによる影響を調査する必要があるなどの問題があった。
+
+この問題に関する既存の振る舞いは少なくとも15年間よく利用されるコンパイラで実装されており、特に問題なく利用されていた。この既存の振る舞いを標準化するだけならば、特定用途のための新しい言語機能を追加する必要がなく他の方法に比べて安全性が高いため、`friend`宣言を拡張する方向性は採用されなかった。
 
 ## 参照
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
</feed>
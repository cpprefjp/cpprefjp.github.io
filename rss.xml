<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2022-01-28T06:27:01.885900</updated>
  <id>4fad4927-a7f9-4b5a-af6c-e8eb42cb5eb1</id>

  
    <entry>
      <title>open -- Merge pull request #938 from cpprefjp/ACUVE-patch-1</title>
      <link href="https://cpprefjp.github.io/reference/fstream/basic_filebuf/open.html"/>
      <id>2d16c0f26db428c14b0a233ea2139adc3564272a:reference/fstream/basic_filebuf/open.md</id>
      <updated>2022-01-28T15:21:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/fstream/basic_filebuf/open.md b/reference/fstream/basic_filebuf/open.md
index a7b8fc461..16c107b79 100644
--- a/reference/fstream/basic_filebuf/open.md
+++ b/reference/fstream/basic_filebuf/open.md
@@ -23,7 +23,7 @@ basic_filebuf* open(const filesystem::path&amp;amp; s, ios_base::openmode mode); // (4)
 
 まず`mode &amp;amp; ~ios_base::ate`の結果からファイルの開くモードが決定される。`fopen`のモード文字列との対応は以下の通り。
 
-| `binary` | `in` | `out` | `trunc` | `ate` | 対応する`fopen`のモード文字列 |
+| `binary` | `in` | `out` | `trunc` | `app` | 対応する`fopen`のモード文字列 |
 |----------|------|-------|---------|-------|--------------------|
 |          |      | ○     |         |       | `&amp;#34;w&amp;#34;`              |
 |          |      | ○     |         | ○     | `&amp;#34;a&amp;#34;`              |
@@ -85,4 +85,4 @@ int main()
 ## 参照
 
 - [LGW issue 2676. Provide filesystem::path overloads for File-based streams](https://wg21.cmeerw.net/lwg/issue2676)
-- [LGW issue 2943. Problematic specification of the wide version of basic_filebuf::open](https://wg21.cmeerw.net/lwg/issue2943)
\ No newline at end of file
+- [LGW issue 2943. Problematic specification of the wide version of basic_filebuf::open](https://wg21.cmeerw.net/lwg/issue2943)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>open -- basic_filebuf::open: fix openmode table</title>
      <link href="https://cpprefjp.github.io/reference/fstream/basic_filebuf/open.html"/>
      <id>360323f708309fdb33e28800e003d1265ad0b381:reference/fstream/basic_filebuf/open.md</id>
      <updated>2022-01-28T15:03:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/fstream/basic_filebuf/open.md b/reference/fstream/basic_filebuf/open.md
index a7b8fc461..16c107b79 100644
--- a/reference/fstream/basic_filebuf/open.md
+++ b/reference/fstream/basic_filebuf/open.md
@@ -23,7 +23,7 @@ basic_filebuf* open(const filesystem::path&amp;amp; s, ios_base::openmode mode); // (4)
 
 まず`mode &amp;amp; ~ios_base::ate`の結果からファイルの開くモードが決定される。`fopen`のモード文字列との対応は以下の通り。
 
-| `binary` | `in` | `out` | `trunc` | `ate` | 対応する`fopen`のモード文字列 |
+| `binary` | `in` | `out` | `trunc` | `app` | 対応する`fopen`のモード文字列 |
 |----------|------|-------|---------|-------|--------------------|
 |          |      | ○     |         |       | `&amp;#34;w&amp;#34;`              |
 |          |      | ○     |         | ○     | `&amp;#34;a&amp;#34;`              |
@@ -85,4 +85,4 @@ int main()
 ## 参照
 
 - [LGW issue 2676. Provide filesystem::path overloads for File-based streams](https://wg21.cmeerw.net/lwg/issue2676)
-- [LGW issue 2943. Problematic specification of the wide version of basic_filebuf::open](https://wg21.cmeerw.net/lwg/issue2943)
\ No newline at end of file
+- [LGW issue 2943. Problematic specification of the wide version of basic_filebuf::open](https://wg21.cmeerw.net/lwg/issue2943)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>ACUVE / Toshiyuki Kato</name>
        <email>sub_chon@yahoo.co.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- P2325R3対応</title>
      <link href="https://cpprefjp.github.io/reference/iterator/back_insert_iterator/op_constructor.html"/>
      <id>63af7be0afee0faf4a99f701bb26666f6a995d3d:reference/iterator/back_insert_iterator/op_constructor.md</id>
      <updated>2022-01-25T17:01:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/back_insert_iterator/op_constructor.md b/reference/iterator/back_insert_iterator/op_constructor.md
index bc443c085..8279fdadb 100644
--- a/reference/iterator/back_insert_iterator/op_constructor.md
+++ b/reference/iterator/back_insert_iterator/op_constructor.md
@@ -5,10 +5,8 @@
 * function[meta id-type]
 
 ```cpp
-constexpr back_insert_iterator() noexcept = default;   // (1) C++20
-
-explicit back_insert_iterator(Container&amp;amp; x);           // (2) C++03
-explicit constexpr back_insert_iterator(Container&amp;amp; x); // (2) C++20
+explicit back_insert_iterator(Container&amp;amp; x);           // C++03
+explicit constexpr back_insert_iterator(Container&amp;amp; x); // C++20
 ```
 
 ## 概要
@@ -17,13 +15,14 @@ explicit constexpr back_insert_iterator(Container&amp;amp; x); // (2) C++20
 
 ## 効果
 
-- (1) : メンバ変数`container`を`nullptr`で初期化する。
-- (2) : `x`へのポインタをメンバ変数`container`に保持する。
-    - C++11まで : `x`へのポインタは、`&amp;amp;x`で取得する
-    - C++14以降 : `x`へのポインタは、[`std::addressof`](/reference/memory/addressof.md)`(x)`で取得する
+`x`へのポインタをメンバ変数`container`に保持する。
+
+- C++11まで : `x`へのポインタは、`&amp;amp;x`で取得する
+- C++14以降 : `x`へのポインタは、[`std::addressof`](/reference/memory/addressof.md)`(x)`で取得する
 
 
 ## 参照
 - [LWG Issue 2324. Insert iterator constructors should use `addressof()`](http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#2324)
 - [P1032R1 Misc `constexpr` bits](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1032r1.html)
 - [P0896R4 The One Ranges Proposal (was Merging the Ranges TS)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0896r4.pdf)
+- [P2325R3 Views should not be required to be default constructible](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2325r3.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- P2325R3対応</title>
      <link href="https://cpprefjp.github.io/reference/iterator/common_iterator/op_constructor.html"/>
      <id>63af7be0afee0faf4a99f701bb26666f6a995d3d:reference/iterator/common_iterator/op_constructor.md</id>
      <updated>2022-01-25T17:01:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/common_iterator/op_constructor.md b/reference/iterator/common_iterator/op_constructor.md
index 33b508012..8f7c68d63 100644
--- a/reference/iterator/common_iterator/op_constructor.md
+++ b/reference/iterator/common_iterator/op_constructor.md
@@ -6,7 +6,7 @@
 * cpp20[meta cpp]
 
 ```cpp
-constexpr common_iterator() = default;                        // (1)
+constexpr common_iterator() requires default_initializable&amp;lt;I&amp;gt; = default;  // (1)
 
 constexpr common_iterator(I i);                               // (2)
 
@@ -17,6 +17,7 @@ template&amp;lt;class I2, class S2&amp;gt;
            convertible_to&amp;lt;const S2&amp;amp;, S&amp;gt;
 constexpr common_iterator(const common_iterator&amp;lt;I2, S2&amp;gt;&amp;amp; x);  // (4)
 ```
+* default_initializable[link /reference/concepts/default_initializable.md]
 * convertible_to[link /reference/concepts/convertible_to.md]
 
 ## 概要
@@ -91,3 +92,4 @@ int main() {
 
 ## 参照
 - [P0896R4 The One Ranges Proposal (was Merging the Ranges TS)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0896r4.pdf)
+- [P2325R3 Views should not be required to be default constructible](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2325r3.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- P2325R3対応</title>
      <link href="https://cpprefjp.github.io/reference/iterator/counted_iterator/op_constructor.html"/>
      <id>63af7be0afee0faf4a99f701bb26666f6a995d3d:reference/iterator/counted_iterator/op_constructor.md</id>
      <updated>2022-01-25T17:01:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/counted_iterator/op_constructor.md b/reference/iterator/counted_iterator/op_constructor.md
index 815033008..4e47751e3 100644
--- a/reference/iterator/counted_iterator/op_constructor.md
+++ b/reference/iterator/counted_iterator/op_constructor.md
@@ -6,14 +6,15 @@
 * cpp20[meta cpp]
 
 ```cpp
-constexpr counted_iterator() = default;                     // (1)
+constexpr counted_iterator() requires default_initializable&amp;lt;I&amp;gt; = default; // (1)
 
-constexpr counted_iterator(I x, iter_difference_t&amp;lt;I&amp;gt; n);    // (2)
+constexpr counted_iterator(I x, iter_difference_t&amp;lt;I&amp;gt; n);                  // (2)
 
 template&amp;lt;class I2&amp;gt;
   requires convertible_to&amp;lt;const I2&amp;amp;, I&amp;gt;
-constexpr counted_iterator(const counted_iterator&amp;lt;I2&amp;gt;&amp;amp; x);  // (3)
+constexpr counted_iterator(const counted_iterator&amp;lt;I2&amp;gt;&amp;amp; x);                // (3)
 ```
+* default_initializable[link /reference/concepts/default_initializable.md]
 * iter_difference_t[link /reference/iterator/iter_difference_t.md]
 * convertible_to[link /reference/concepts/convertible_to.md]
 
@@ -71,3 +72,4 @@ int main() {
 
 ## 参照
 - [P0896R4 The One Ranges Proposal (was Merging the Ranges TS)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0896r4.pdf)
+- [P2325R3 Views should not be required to be default constructible](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2325r3.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- P2325R3対応</title>
      <link href="https://cpprefjp.github.io/reference/iterator/front_insert_iterator/op_constructor.html"/>
      <id>63af7be0afee0faf4a99f701bb26666f6a995d3d:reference/iterator/front_insert_iterator/op_constructor.md</id>
      <updated>2022-01-25T17:01:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/front_insert_iterator/op_constructor.md b/reference/iterator/front_insert_iterator/op_constructor.md
index 57d411b62..1ef1eb142 100644
--- a/reference/iterator/front_insert_iterator/op_constructor.md
+++ b/reference/iterator/front_insert_iterator/op_constructor.md
@@ -5,10 +5,8 @@
 * function[meta id-type]
 
 ```cpp
-constexpr front_insert_iterator() noexcept = default;   // (1) C++20
-
-explicit front_insert_iterator(Container&amp;amp; x);           // (2) C++03
-explicit constexpr front_insert_iterator(Container&amp;amp; x); // (2) C++20
+explicit front_insert_iterator(Container&amp;amp; x);           // C++03
+explicit constexpr front_insert_iterator(Container&amp;amp; x); // C++20
 ```
 
 ## 概要
@@ -17,13 +15,15 @@ explicit constexpr front_insert_iterator(Container&amp;amp; x); // (2) C++20
 
 ## 効果
 
-- (1) : メンバ変数`container`を`nullptr`で初期化する。
-- (2) : `x`へのポインタをメンバ変数`container`に保持する。
-    - C++11まで : `x`へのポインタは、`&amp;amp;x`で取得する
-    - C++14以降 : `x`へのポインタは、[`std::addressof`](/reference/memory/addressof.md)`(x)`で取得する
+`x`へのポインタをメンバ変数`container`に保持する。
+
+- C++11まで : `x`へのポインタは、`&amp;amp;x`で取得する
+- C++14以降 : `x`へのポインタは、[`std::addressof`](/reference/memory/addressof.md)`(x)`で取得する
 
 
 ## 参照
 - [LWG Issue 2324. Insert iterator constructors should use `addressof()`](http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#2324)
 - [P1032R1 Misc `constexpr` bits](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1032r1.html)
 - [P0896R4 The One Ranges Proposal (was Merging the Ranges TS)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0896r4.pdf)
+- [P2325R3 Views should not be required to be default constructible](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2325r3.html)
+
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- P2325R3対応</title>
      <link href="https://cpprefjp.github.io/reference/iterator/insert_iterator/op_constructor.html"/>
      <id>63af7be0afee0faf4a99f701bb26666f6a995d3d:reference/iterator/insert_iterator/op_constructor.md</id>
      <updated>2022-01-25T17:01:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/insert_iterator/op_constructor.md b/reference/iterator/insert_iterator/op_constructor.md
index b6c9bb117..683dfbe02 100644
--- a/reference/iterator/insert_iterator/op_constructor.md
+++ b/reference/iterator/insert_iterator/op_constructor.md
@@ -5,10 +5,8 @@
 * function[meta id-type]
 
 ```cpp
-insert_iterator() = default;                                              // (1) C++20
-
-insert_iterator(Container&amp;amp; x, typename Container::iterator i);            // (2) C++03
-constexpr insert_iterator(Container&amp;amp; x, ranges::iterator_t&amp;lt;Container&amp;gt; i); // (2) C++20
+insert_iterator(Container&amp;amp; x, typename Container::iterator i);            // C++03
+constexpr insert_iterator(Container&amp;amp; x, ranges::iterator_t&amp;lt;Container&amp;gt; i); // C++20
 ```
 * iterator_t[link /reference/ranges/iterator_t.md]
 
@@ -18,13 +16,13 @@ constexpr insert_iterator(Container&amp;amp; x, ranges::iterator_t&amp;lt;Container&amp;gt; i); // (2)
 
 ## 効果
 
-- (1) : メンバ変数`container`を`nullptr`で、挿入位置を示すイテレータ`i`を[`ranges::iterator_t`](/reference/ranges/iterator_t.md)`&amp;lt;Container&amp;gt;()`で初期化する。
-- (2) : コンテナ`x`へのポインタをメンバ変数`container`に保持し、挿入位置を示すイテレータ`i`をメンバ変数`iter`に保持する。
-    - C++11まで : `x`へのポインタは、`&amp;amp;x`で取得する
-    - C++14以降 : `x`へのポインタは、[`std::addressof`](/reference/memory/addressof.md)`(x)`で取得する
+コンテナ`x`へのポインタをメンバ変数`container`に保持し、挿入位置を示すイテレータ`i`をメンバ変数`iter`に保持する。
 
+- C++11まで : `x`へのポインタは、`&amp;amp;x`で取得する
+- C++14以降 : `x`へのポインタは、[`std::addressof`](/reference/memory/addressof.md)`(x)`で取得する
 
 ## 参照
 - [LWG Issue 2324. Insert iterator constructors should use `addressof()`](http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#2324)
 - [P1032R1 Misc `constexpr` bits](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1032r1.html)
 - [P0896R4 The One Ranges Proposal (was Merging the Ranges TS)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0896r4.pdf)
+- [P2325R3 Views should not be required to be default constructible](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2325r3.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- P2325R3対応</title>
      <link href="https://cpprefjp.github.io/reference/iterator/ostream_iterator/op_constructor.html"/>
      <id>63af7be0afee0faf4a99f701bb26666f6a995d3d:reference/iterator/ostream_iterator/op_constructor.md</id>
      <updated>2022-01-25T17:01:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/ostream_iterator/op_constructor.md b/reference/iterator/ostream_iterator/op_constructor.md
index 389e3ddf8..970aa62c9 100644
--- a/reference/iterator/ostream_iterator/op_constructor.md
+++ b/reference/iterator/ostream_iterator/op_constructor.md
@@ -44,3 +44,5 @@ int main()
 
 ## 参照
 - [LWG Issue 2576. `istream_iterator` and `ostream_iterator` should use `std::addressof`](https://wg21.cmeerw.net/lwg/issue2576)
+- [P0896R4 The One Ranges Proposal (was Merging the Ranges TS)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0896r4.pdf)
+- [P2325R3 Views should not be required to be default constructible](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2325r3.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- P2325R3対応</title>
      <link href="https://cpprefjp.github.io/reference/iterator/ostreambuf_iterator/op_constructor.html"/>
      <id>63af7be0afee0faf4a99f701bb26666f6a995d3d:reference/iterator/ostreambuf_iterator/op_constructor.md</id>
      <updated>2022-01-25T17:01:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/ostreambuf_iterator/op_constructor.md b/reference/iterator/ostreambuf_iterator/op_constructor.md
index 3b8912cae..af66a21ce 100644
--- a/reference/iterator/ostreambuf_iterator/op_constructor.md
+++ b/reference/iterator/ostreambuf_iterator/op_constructor.md
@@ -49,4 +49,5 @@ HelloHello
 
 ## 参照
 
-
+- [P0896R4 The One Ranges Proposal (was Merging the Ranges TS)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0896r4.pdf)
+- [P2325R3 Views should not be required to be default constructible](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2325r3.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>weakly_incrementable -- P2325R3対応</title>
      <link href="https://cpprefjp.github.io/reference/iterator/weakly_incrementable.html"/>
      <id>63af7be0afee0faf4a99f701bb26666f6a995d3d:reference/iterator/weakly_incrementable.md</id>
      <updated>2022-01-25T17:01:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/weakly_incrementable.md b/reference/iterator/weakly_incrementable.md
index 2f73f9da7..26e83ed1c 100644
--- a/reference/iterator/weakly_incrementable.md
+++ b/reference/iterator/weakly_incrementable.md
@@ -8,7 +8,7 @@
 namespace std {
   template&amp;lt;class I&amp;gt;
   concept weakly_incrementable =
-    default_initializable&amp;lt;I&amp;gt; &amp;amp;&amp;amp; movable&amp;lt;I&amp;gt; &amp;amp;&amp;amp;
+    movable&amp;lt;I&amp;gt; &amp;amp;&amp;amp;
     requires(I i) {
       typename iter_difference_t&amp;lt;I&amp;gt;;
       requires is-signed-integer-like&amp;lt;iter_difference_t&amp;lt;I&amp;gt;&amp;gt;;
@@ -17,7 +17,6 @@ namespace std {
     };
 }
 ```
-* default_initializable[link /reference/concepts/default_initializable.md]
 * movable[link /reference/concepts/movable.md]
 * iter_difference_t[link /reference/iterator/iter_difference_t.md]
 * is-signed-integer-like[link /reference/iterator/is_integer_like.md]
@@ -124,4 +123,4 @@ sample_not_incrementable is not weakly incrementable
 - [P0896R4 The One Ranges Proposal (was Merging the Ranges TS)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0896r4.pdf)
 - [P1522R1 Iterator Difference Type and Integer Overflow](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1522r1.pdf)
 - [P1207R4 Movability of single-pass iterators](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1207r4.pdf)
-
+- [P2325R3 Views should not be required to be default constructible](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2325r3.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>iota_view -- P2325R3対応</title>
      <link href="https://cpprefjp.github.io/reference/ranges/iota_view.html"/>
      <id>63af7be0afee0faf4a99f701bb26666f6a995d3d:reference/ranges/iota_view.md</id>
      <updated>2022-01-25T17:01:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/iota_view.md b/reference/ranges/iota_view.md
index 436f62bc2..1a09a5132 100644
--- a/reference/ranges/iota_view.md
+++ b/reference/ranges/iota_view.md
@@ -7,7 +7,7 @@
 ```cpp
 namespace std::ranges {
   template&amp;lt;weakly_incrementable W, semiregular Bound = unreachable_sentinel_t&amp;gt;
-    requires weakly-equality-comparable-with&amp;lt;W, Bound&amp;gt; &amp;amp;&amp;amp; semiregular&amp;lt;W&amp;gt;
+    requires weakly-equality-comparable-with&amp;lt;W, Bound&amp;gt; &amp;amp;&amp;amp; copyable&amp;lt;W&amp;gt;
   class iota_view : public view_interface&amp;lt;iota_view&amp;lt;W, Bound&amp;gt;&amp;gt; { …… }; // (1)
 
   namespace views {
@@ -17,7 +17,7 @@ namespace std::ranges {
 ```
 * is_object_v[link /reference/type_traits/is_object.md]
 * weakly_incrementable[link /reference/iterator/weakly_incrementable.md]
-* semiregular[link /reference/concepts/semiregular.md]
+* copyable[link /reference/concepts/copyable.md]
 * unreachable_sentinel_t[link /reference/iterator/unreachable_sentinel_t.md]
 * weakly-equality-comparable-with[link /reference/concepts/equality_comparable.md]
 * view_interface[link view_interface.md]
@@ -45,7 +45,7 @@ namespace std::ranges {
 
 ## テンプレートパラメータ制約
 - [`weakly_incrementable`](/reference/type_traits/is_object.md)`&amp;lt;W&amp;gt;`
-- [`semiregular`](/reference/concepts/semiregular.md)`&amp;lt;W&amp;gt;`
+- [`copyable`](/reference/concepts/copyable.md)`&amp;lt;W&amp;gt;`
 - [`semiregular`](/reference/concepts/semiregular.md)`&amp;lt;Bound&amp;gt;`
 - [`weakly-equality-comparable-with`](/reference/concepts/equality_comparable.md)`&amp;lt;W, Bound&amp;gt;`
 
@@ -118,3 +118,4 @@ int main() {
 ## 参照
 - [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
 - [C++20 ranges](https://techbookfest.org/product/5134506308665344)
+- [P2325R3 Views should not be required to be default constructible](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2325r3.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>view -- P2325R3対応</title>
      <link href="https://cpprefjp.github.io/reference/ranges/view.html"/>
      <id>63af7be0afee0faf4a99f701bb26666f6a995d3d:reference/ranges/view.md</id>
      <updated>2022-01-25T17:01:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/view.md b/reference/ranges/view.md
index 76c5b9965..104f3959b 100644
--- a/reference/ranges/view.md
+++ b/reference/ranges/view.md
@@ -7,12 +7,11 @@
 ```cpp
 namespace std::ranges {
   template&amp;lt;class T&amp;gt;
-  concept view = range&amp;lt;T&amp;gt; &amp;amp;&amp;amp; movable&amp;lt;T&amp;gt; &amp;amp;&amp;amp; default_initializable&amp;lt;T&amp;gt; &amp;amp;&amp;amp; enable_view&amp;lt;T&amp;gt;;
+  concept view = range&amp;lt;T&amp;gt; &amp;amp;&amp;amp; movable&amp;lt;T&amp;gt; &amp;amp;&amp;amp; enable_view&amp;lt;T&amp;gt;;
 }
 ```
 * range[link range.md]
 * movable[link /reference/concepts/movable.md]
-* default_initializable[link /reference/concepts/default_initializable.md]
 * enable_view[link enable_view.md]
 
 ## 概要
@@ -70,3 +69,4 @@ int main()
 ## 参照
 - [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
 - [C++20 ranges](https://techbookfest.org/product/5134506308665344)
+- [P2325R3 Views should not be required to be default constructible](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2325r3.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>span -- P2325R3対応</title>
      <link href="https://cpprefjp.github.io/reference/span/span.html"/>
      <id>63af7be0afee0faf4a99f701bb26666f6a995d3d:reference/span/span.md</id>
      <updated>2022-01-25T17:01:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/span/span.md b/reference/span/span.md
index d2253a126..f65f8daf0 100644
--- a/reference/span/span.md
+++ b/reference/span/span.md
@@ -8,10 +8,21 @@
 namespace std {
   template &amp;lt;class ElementType, size_t Extent = dynamic_extent&amp;gt;
   class span;
+
+
+  // viewコンセプトを有効化する
+  template&amp;lt;class ElementType, size_t Extent&amp;gt;
+  inline constexpr bool ranges::enable_view&amp;lt;span&amp;lt;ElementType, Extent&amp;gt;&amp;gt; = true;
+
+  // borrowed_rangeコンセプトを有効化する
+  template&amp;lt;class ElementType, size_t Extent&amp;gt;
+  inline constexpr bool ranges::enable_borrowed_range&amp;lt;span&amp;lt;ElementType, Extent&amp;gt;&amp;gt; = true;
 }
 ```
 * size_t[link /reference/cstddef/size_t.md]
 * dynamic_extent[link dynamic_extent.md]
+* enable_view[link /reference/ranges/enable_view.md]
+* enable_borrowed_range[link /reference/ranges/enable_borrowed_range.md]
 
 ## 概要
 `std::span`は、シーケンスの所有権を保持せず、部分シーケンスを参照するクラスである。
@@ -263,3 +274,5 @@ int main()
 - [P2051R0 C++ Standard Library Issues to be moved in Prague](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2051r0.html)
     - `const_iterator`, `const_reverse_iterator`, `cbegin()`, `cend()`, `crbegin()`, `crend()`を削除
 - [P2116R0 Remove tuple-like protocol support from fixed-extent `span`](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2116r0.html)
+- [P0896R4 The One Ranges Proposal (was Merging the Ranges TS)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0896r4.pdf)
+- [P2325R3 Views should not be required to be default constructible](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2325r3.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>replace -- Merge pull request #936 from Jumpaku/Jumpaku-patch-3</title>
      <link href="https://cpprefjp.github.io/reference/string/basic_string/replace.html"/>
      <id>10a3ed4a9209cb43584702a6a714c069cb6ce7b6:reference/string/basic_string/replace.md</id>
      <updated>2022-01-23T17:39:20+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string/basic_string/replace.md b/reference/string/basic_string/replace.md
index ec25752e6..5d5d89d8b 100644
--- a/reference/string/basic_string/replace.md
+++ b/reference/string/basic_string/replace.md
@@ -94,7 +94,7 @@ basic_string&amp;amp; replace(const_iterator i1,
 ## 効果
 - (1) : `replace(pos1, n1, str.`[`data()`](data.md)`, str.`[`size()`](size.md)`)`を呼び出す。
 - (2) :
-    - `n2`と`str.`[`size()`](size.md) `- pos2`のうち小さい方を`rlen`とする。`n == npos` の場合は、 `str.`[`size`](size.md)`() - pos2` が使用される。
+    - `n2`と`str.`[`size()`](size.md) `- pos2`のうち小さい方を`rlen`とする。`n2 == npos` の場合は、 `str.`[`size`](size.md)`() - pos2` が使用される。
     - `replace(pos1, n1, str.`[`data()`](data.md) `+ pos2, rlen)`を呼び出す。
 - (3) : `n1`と[`size()`](size.md) `- pos1`のうち小さい方を`xlen`とし、自身の`pos1`番目から`xlen`個の要素を、文字配列`s`の先頭`n2`文字で置き換える。
 - (4) : `replace(pos, n, s,` [`traits::length`](/reference/string/char_traits/length.md)`(s))`を呼び出す。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
</feed>
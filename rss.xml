<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2022-03-16T17:41:37.787251</updated>
  <id>85f47f0f-ee2a-4896-8869-0dde79a01337</id>

  
    <entry>
      <title>algorithm -- Merge pull request #956 from cpprefjp/rename_file</title>
      <link href="https://cpprefjp.github.io/reference/algorithm.html"/>
      <id>6a60d7e9c20307a9f04a207f5551332d0fbf6fe6:reference/algorithm.md</id>
      <updated>2022-03-17T02:37:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm.md b/reference/algorithm.md
index cd7232663..c8c52e457 100644
--- a/reference/algorithm.md
+++ b/reference/algorithm.md
@@ -145,7 +145,6 @@ ranges::sort(pv, {}, &amp;amp;Parson::name);
 | 名前 | 説明 | 対応バージョン |
 |-----------------------------------------------------|------------------------------------------|-------|
 | [`copy`](algorithm/copy.md)                       | 指定された範囲の要素をコピーする         | |
-| [`copy`](algorithm/copy.md)                       | 指定された範囲の要素をコピーする         | |
 | [`copy_n`](algorithm/copy_n.md)                   | 指定された数の要素をコピーする           | C++11 |
 | [`copy_if`](algorithm/copy_if.md)                 | 条件を満たす要素のみをコピーする         | C++11 |
 | [`copy_backward`](algorithm/copy_backward.md)     | 指定された範囲の要素を後ろからコピーする | |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>crend -- Merge pull request #956 from cpprefjp/rename_file</title>
      <link href="https://cpprefjp.github.io/reference/array/array/crend.html"/>
      <id>6a60d7e9c20307a9f04a207f5551332d0fbf6fe6:reference/array/array/crend.md</id>
      <updated>2022-03-17T02:37:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/array/array/crend.md b/reference/array/array/crend.md
index 1efac121b..c98811f79 100644
--- a/reference/array/array/crend.md
+++ b/reference/array/array/crend.md
@@ -14,7 +14,7 @@ constexpr const_reverse_iterator crend() const noexcept; // C++17
 
 先頭要素の前を指す読み取り専用逆イテレータを取得する。
 
-[`rend()`](rend.md)は非`const`な`array`オブジェクトに対して`reverse_iterator`を返し、`const`な`array`オブジェクトに対しては`const_reverse_iterator`を返すが、`cend()`は`const_reverse_iterator`を返すバージョンのみが提供されている。
+[`rend()`](rend.md)は非`const`な`array`オブジェクトに対して`reverse_iterator`を返し、`const`な`array`オブジェクトに対しては`const_reverse_iterator`を返すが、`crend()`は`const_reverse_iterator`を返すバージョンのみが提供されている。
 アルゴリズムにイテレータの組を渡す際、アルゴリズム内でデータの書き換えが起こらないというユーザーの意図を示す場合などに有用である。
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>forward_list -- Merge pull request #956 from cpprefjp/rename_file</title>
      <link href="https://cpprefjp.github.io/reference/forward_list/forward_list.html"/>
      <id>6a60d7e9c20307a9f04a207f5551332d0fbf6fe6:reference/forward_list/forward_list.md</id>
      <updated>2022-03-17T02:37:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/forward_list/forward_list.md b/reference/forward_list/forward_list.md
index c81522800..243e66af2 100644
--- a/reference/forward_list/forward_list.md
+++ b/reference/forward_list/forward_list.md
@@ -58,7 +58,7 @@ namespace std {
 | [`begin`](forward_list/begin.md) | 先頭要素を指すイテレータを取得する | C++11 |
 | [`end`](forward_list/end.md) | 末尾の次を指すイテレータを取得する | C++11 |
 | [`cbegin`](forward_list/cbegin.md) | 先頭要素を指す読み取り専用イテレータを取得する | C++11 |
-| [`cbefore_begin`](forward_list/before_cbegin.md) | 先頭要素の前を指す読み取り専用イテレータを取得する | C++11 |
+| [`cbefore_begin`](forward_list/cbefore_begin.md) | 先頭要素の前を指す読み取り専用イテレータを取得する | C++11 |
 | [`cend`](forward_list/cend.md) | 末尾の次を指す読み取り専用イテレータを取得する | C++11 |
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>cbefore_begin -- Merge pull request #956 from cpprefjp/rename_file</title>
      <link href="https://cpprefjp.github.io/reference/forward_list/forward_list/cbefore_begin.html"/>
      <id>6a60d7e9c20307a9f04a207f5551332d0fbf6fe6:reference/forward_list/forward_list/cbefore_begin.md</id>
      <updated>2022-03-17T02:37:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/forward_list/forward_list/cbefore_begin.md b/reference/forward_list/forward_list/cbefore_begin.md
new file mode 100644
index 000000000..33083f005
--- /dev/null
+++ b/reference/forward_list/forward_list/cbefore_begin.md
@@ -0,0 +1,78 @@
+# cbefore_begin
+* forward_list[meta header]
+* std[meta namespace]
+* forward_list[meta class]
+* function[meta id-type]
+* cpp11[meta cpp]
+
+```cpp
+const_iterator cbefore_begin() const noexcept;
+```
+
+## 概要
+先頭要素の前を指す読み取り専用イテレータを取得する。
+
+この関数は、[`insert_after()`](insert_after.md)メンバ関数で先頭に要素を挿入するために使用できる。
+
+
+## 戻り値
+先頭要素の前を指す読み取り専用イテレータを返す。
+
+
+## 例外
+投げない
+
+
+## 備考
+この関数によって返されるイテレータは、以下の特徴を持つ：
+
+- 間接参照できない
+- インクリメントすると[`cbegin()`](cbegin.md)と等値になる
+- [`cend()`](cend.md)と等値にはならない
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;forward_list&amp;gt;
+#include &amp;lt;algorithm&amp;gt;
+
+int main()
+{
+  std::forward_list&amp;lt;int&amp;gt; ls;
+
+  ls.push_front(3);
+  ls.insert_after(ls.cbefore_begin(), 1); // 先頭に挿入
+
+  std::for_each(ls.cbegin(), ls.cend(), [](int x) {
+    std::cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; std::endl;
+  });
+}
+```
+* cbefore_begin[color ff0000]
+* ls.push_front[link push_front.md]
+* ls.insert_after[link insert_after.md]
+* ls.cbegin()[link cbegin.md]
+* ls.cend()[link cend.md]
+
+
+### 出力
+```
+1
+3
+```
+
+## バージョン
+### 言語
+- C++11
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): 4.7.0
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): 2010, 2012, 2013, 2015, 2017
+
+
+## 参照
+
+
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>crend -- Merge pull request #956 from cpprefjp/rename_file</title>
      <link href="https://cpprefjp.github.io/reference/vector/vector/crend.html"/>
      <id>6a60d7e9c20307a9f04a207f5551332d0fbf6fe6:reference/vector/vector/crend.md</id>
      <updated>2022-03-17T02:37:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/vector/vector/crend.md b/reference/vector/vector/crend.md
index 387f9d58d..6c6d3f62d 100644
--- a/reference/vector/vector/crend.md
+++ b/reference/vector/vector/crend.md
@@ -12,7 +12,7 @@ const_reverse_iterator crend() const noexcept;
 ## 概要
 先頭要素の前を指す読み取り専用逆イテレータを取得する。
 
-[`rend`](rend.md)`()`は非`const`な`vector`オブジェクトに対して`reverse_iterator`を返し、`const`な`vector`オブジェクトに対しては`const_reverse_iterator`を返すが、`cend()`は`const_reverse_iterator`を返すバージョンのみが提供されている。
+[`rend`](rend.md)`()`は非`const`な`vector`オブジェクトに対して`reverse_iterator`を返し、`const`な`vector`オブジェクトに対しては`const_reverse_iterator`を返すが、`crend()`は`const_reverse_iterator`を返すバージョンのみが提供されている。
 
 アルゴリズムにイテレータの組を渡す際、アルゴリズム内でデータの書き換えが起こらないというユーザーの意図を示す場合などに有用である。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>algorithm -- rename before_cbegin.md to cbefore_begin.md.</title>
      <link href="https://cpprefjp.github.io/reference/algorithm.html"/>
      <id>a2f851790978bad125767f41bb03c8141558d989:reference/algorithm.md</id>
      <updated>2022-03-16T20:17:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm.md b/reference/algorithm.md
index cd7232663..c8c52e457 100644
--- a/reference/algorithm.md
+++ b/reference/algorithm.md
@@ -145,7 +145,6 @@ ranges::sort(pv, {}, &amp;amp;Parson::name);
 | 名前 | 説明 | 対応バージョン |
 |-----------------------------------------------------|------------------------------------------|-------|
 | [`copy`](algorithm/copy.md)                       | 指定された範囲の要素をコピーする         | |
-| [`copy`](algorithm/copy.md)                       | 指定された範囲の要素をコピーする         | |
 | [`copy_n`](algorithm/copy_n.md)                   | 指定された数の要素をコピーする           | C++11 |
 | [`copy_if`](algorithm/copy_if.md)                 | 条件を満たす要素のみをコピーする         | C++11 |
 | [`copy_backward`](algorithm/copy_backward.md)     | 指定された範囲の要素を後ろからコピーする | |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>crend -- rename before_cbegin.md to cbefore_begin.md.</title>
      <link href="https://cpprefjp.github.io/reference/array/array/crend.html"/>
      <id>a2f851790978bad125767f41bb03c8141558d989:reference/array/array/crend.md</id>
      <updated>2022-03-16T20:17:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/array/array/crend.md b/reference/array/array/crend.md
index 1efac121b..c98811f79 100644
--- a/reference/array/array/crend.md
+++ b/reference/array/array/crend.md
@@ -14,7 +14,7 @@ constexpr const_reverse_iterator crend() const noexcept; // C++17
 
 先頭要素の前を指す読み取り専用逆イテレータを取得する。
 
-[`rend()`](rend.md)は非`const`な`array`オブジェクトに対して`reverse_iterator`を返し、`const`な`array`オブジェクトに対しては`const_reverse_iterator`を返すが、`cend()`は`const_reverse_iterator`を返すバージョンのみが提供されている。
+[`rend()`](rend.md)は非`const`な`array`オブジェクトに対して`reverse_iterator`を返し、`const`な`array`オブジェクトに対しては`const_reverse_iterator`を返すが、`crend()`は`const_reverse_iterator`を返すバージョンのみが提供されている。
 アルゴリズムにイテレータの組を渡す際、アルゴリズム内でデータの書き換えが起こらないというユーザーの意図を示す場合などに有用である。
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>forward_list -- rename before_cbegin.md to cbefore_begin.md.</title>
      <link href="https://cpprefjp.github.io/reference/forward_list/forward_list.html"/>
      <id>a2f851790978bad125767f41bb03c8141558d989:reference/forward_list/forward_list.md</id>
      <updated>2022-03-16T20:17:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/forward_list/forward_list.md b/reference/forward_list/forward_list.md
index c81522800..243e66af2 100644
--- a/reference/forward_list/forward_list.md
+++ b/reference/forward_list/forward_list.md
@@ -58,7 +58,7 @@ namespace std {
 | [`begin`](forward_list/begin.md) | 先頭要素を指すイテレータを取得する | C++11 |
 | [`end`](forward_list/end.md) | 末尾の次を指すイテレータを取得する | C++11 |
 | [`cbegin`](forward_list/cbegin.md) | 先頭要素を指す読み取り専用イテレータを取得する | C++11 |
-| [`cbefore_begin`](forward_list/before_cbegin.md) | 先頭要素の前を指す読み取り専用イテレータを取得する | C++11 |
+| [`cbefore_begin`](forward_list/cbefore_begin.md) | 先頭要素の前を指す読み取り専用イテレータを取得する | C++11 |
 | [`cend`](forward_list/cend.md) | 末尾の次を指す読み取り専用イテレータを取得する | C++11 |
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>cbefore_begin -- rename before_cbegin.md to cbefore_begin.md.</title>
      <link href="https://cpprefjp.github.io/reference/forward_list/forward_list/cbefore_begin.html"/>
      <id>a2f851790978bad125767f41bb03c8141558d989:reference/forward_list/forward_list/cbefore_begin.md</id>
      <updated>2022-03-16T20:17:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/forward_list/forward_list/cbefore_begin.md b/reference/forward_list/forward_list/cbefore_begin.md
new file mode 100644
index 000000000..33083f005
--- /dev/null
+++ b/reference/forward_list/forward_list/cbefore_begin.md
@@ -0,0 +1,78 @@
+# cbefore_begin
+* forward_list[meta header]
+* std[meta namespace]
+* forward_list[meta class]
+* function[meta id-type]
+* cpp11[meta cpp]
+
+```cpp
+const_iterator cbefore_begin() const noexcept;
+```
+
+## 概要
+先頭要素の前を指す読み取り専用イテレータを取得する。
+
+この関数は、[`insert_after()`](insert_after.md)メンバ関数で先頭に要素を挿入するために使用できる。
+
+
+## 戻り値
+先頭要素の前を指す読み取り専用イテレータを返す。
+
+
+## 例外
+投げない
+
+
+## 備考
+この関数によって返されるイテレータは、以下の特徴を持つ：
+
+- 間接参照できない
+- インクリメントすると[`cbegin()`](cbegin.md)と等値になる
+- [`cend()`](cend.md)と等値にはならない
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;forward_list&amp;gt;
+#include &amp;lt;algorithm&amp;gt;
+
+int main()
+{
+  std::forward_list&amp;lt;int&amp;gt; ls;
+
+  ls.push_front(3);
+  ls.insert_after(ls.cbefore_begin(), 1); // 先頭に挿入
+
+  std::for_each(ls.cbegin(), ls.cend(), [](int x) {
+    std::cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; std::endl;
+  });
+}
+```
+* cbefore_begin[color ff0000]
+* ls.push_front[link push_front.md]
+* ls.insert_after[link insert_after.md]
+* ls.cbegin()[link cbegin.md]
+* ls.cend()[link cend.md]
+
+
+### 出力
+```
+1
+3
+```
+
+## バージョン
+### 言語
+- C++11
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): 4.7.0
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): 2010, 2012, 2013, 2015, 2017
+
+
+## 参照
+
+
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>crend -- rename before_cbegin.md to cbefore_begin.md.</title>
      <link href="https://cpprefjp.github.io/reference/vector/vector/crend.html"/>
      <id>a2f851790978bad125767f41bb03c8141558d989:reference/vector/vector/crend.md</id>
      <updated>2022-03-16T20:17:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/vector/vector/crend.md b/reference/vector/vector/crend.md
index 387f9d58d..6c6d3f62d 100644
--- a/reference/vector/vector/crend.md
+++ b/reference/vector/vector/crend.md
@@ -12,7 +12,7 @@ const_reverse_iterator crend() const noexcept;
 ## 概要
 先頭要素の前を指す読み取り専用逆イテレータを取得する。
 
-[`rend`](rend.md)`()`は非`const`な`vector`オブジェクトに対して`reverse_iterator`を返し、`const`な`vector`オブジェクトに対しては`const_reverse_iterator`を返すが、`cend()`は`const_reverse_iterator`を返すバージョンのみが提供されている。
+[`rend`](rend.md)`()`は非`const`な`vector`オブジェクトに対して`reverse_iterator`を返し、`const`な`vector`オブジェクトに対しては`const_reverse_iterator`を返すが、`crend()`は`const_reverse_iterator`を返すバージョンのみが提供されている。
 
 アルゴリズムにイテレータの組を渡す際、アルゴリズム内でデータの書き換えが起こらないというユーザーの意図を示す場合などに有用である。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>crend -- Merge pull request #952 from cpprefjp/fix_typos</title>
      <link href="https://cpprefjp.github.io/reference/deque/deque/crend.html"/>
      <id>3e4a8bc94ca142724e817800add6d0ef3f4e9c2f:reference/deque/deque/crend.md</id>
      <updated>2022-03-15T16:25:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/deque/deque/crend.md b/reference/deque/deque/crend.md
index 4a660e3da..32906938b 100644
--- a/reference/deque/deque/crend.md
+++ b/reference/deque/deque/crend.md
@@ -12,7 +12,7 @@ const_reverse_iterator crend() const noexcept;
 ## 概要
 先頭要素の前を指す読み取り専用逆イテレータを取得する。
 
-[`rend()`](rend.md)は非`const`な`deque`オブジェクトに対して`reverse_iterator`を返し、`const`な`deque`オブジェクトに対しては`const_reverse_iterator`を返すが、`cend()`は`const_reverse_iterator`を返すバージョンのみが提供されている。
+[`rend()`](rend.md)は非`const`な`deque`オブジェクトに対して`reverse_iterator`を返し、`const`な`deque`オブジェクトに対しては`const_reverse_iterator`を返すが、`crend()`は`const_reverse_iterator`を返すバージョンのみが提供されている。
 
 アルゴリズムにイテレータの組を渡す際、アルゴリズム内でデータの書き換えが起こらないというユーザーの意図を示す場合などに有用である。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>insert -- Merge pull request #952 from cpprefjp/fix_typos</title>
      <link href="https://cpprefjp.github.io/reference/deque/deque/insert.html"/>
      <id>3e4a8bc94ca142724e817800add6d0ef3f4e9c2f:reference/deque/deque/insert.md</id>
      <updated>2022-03-15T16:25:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/deque/deque/insert.md b/reference/deque/deque/insert.md
index ce7f3790e..21de19dbb 100644
--- a/reference/deque/deque/insert.md
+++ b/reference/deque/deque/insert.md
@@ -17,7 +17,7 @@ iterator insert(const_iterator position,
 
 template &amp;lt;class InputIterator&amp;gt;
 void insert(iterator position,
-            InputIterator first, InputIterator last);               // (4) C++11
+            InputIterator first, InputIterator last);               // (4) C++03
 template &amp;lt;class InputIterator&amp;gt;
 iterator insert(const_iterator position,
                 InputIterator first, InputIterator last);           // (4) C++11
@@ -47,7 +47,7 @@ iterator insert(const_iterator position, initializer_list&amp;lt;T&amp;gt; init); // (5) C++11
 
 
 ## 戻り値
-- C++03まで一番上のバージョンがのみ、新しい要素が挿入された場所を指すイテレータを返す。
+- C++03まで一番上のバージョンのみ、新しい要素が挿入された場所を指すイテレータを返す。
 - C++11以降新しい要素が挿入された場所を示すイテレータ。
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>data -- Merge pull request #952 from cpprefjp/fix_typos</title>
      <link href="https://cpprefjp.github.io/reference/iterator/data.html"/>
      <id>3e4a8bc94ca142724e817800add6d0ef3f4e9c2f:reference/iterator/data.md</id>
      <updated>2022-03-15T16:25:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/data.md b/reference/iterator/data.md
index 91a118310..ea54be6b5 100644
--- a/reference/iterator/data.md
+++ b/reference/iterator/data.md
@@ -69,13 +69,10 @@ int main()
 * std::data[color ff0000]
 * std::size[link size.md]
 
-### 出力
+### 出力例
 ```
-false
-false
-true
-false
-false
+array size:4 at 0x7fff0833f980
+array size:1 at 0x22e42b0
 ```
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>map -- Merge pull request #952 from cpprefjp/fix_typos</title>
      <link href="https://cpprefjp.github.io/reference/map/map.html"/>
      <id>3e4a8bc94ca142724e817800add6d0ef3f4e9c2f:reference/map/map.md</id>
      <updated>2022-03-15T16:25:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/map/map.md b/reference/map/map.md
index ef886967a..3da7115e3 100644
--- a/reference/map/map.md
+++ b/reference/map/map.md
@@ -67,14 +67,14 @@ namespace std {
 
 | 名前 | 説明 | 対応バージョン |
 |------------------------------|----------------------------------------------|-------|
-| [`begin`](map/begin.md)    | 先頭を指すイテレータを取得する               | |
-| [`cbegin`](map/cbegin.md)  | 先頭を指す読み取り専用イテレータを取得する   | C++11 |
-| [`end`](map/end.md)        | 末尾を指すイテレータを取得する               | |
-| [`cend`](map/cend.md)      | 末尾を指す読み取り専用イテレータを取得する   | C++11 |
-| [`rbegin`](map/rbegin.md)  | 末尾を指す逆イテレータを取得する             | |
-| [`crbegin`](map/rbegin.md) | 末尾を指す読み取り専用逆イテレータを取得する | C++11 |
-| [`rend`](map/rend.md)      | 先頭を指す逆イテレータを取得する             | |
-| [`crend`](map/rend.md)     | 先頭を指す読み取り専用逆イテレータを取得する | C++11 |
+| [`begin`](map/begin.md)     | 先頭を指すイテレータを取得する               | |
+| [`cbegin`](map/cbegin.md)   | 先頭を指す読み取り専用イテレータを取得する   | C++11 |
+| [`end`](map/end.md)         | 末尾を指すイテレータを取得する               | |
+| [`cend`](map/cend.md)       | 末尾を指す読み取り専用イテレータを取得する   | C++11 |
+| [`rbegin`](map/rbegin.md)   | 末尾を指す逆イテレータを取得する             | |
+| [`crbegin`](map/crbegin.md) | 末尾を指す読み取り専用逆イテレータを取得する | C++11 |
+| [`rend`](map/rend.md)       | 先頭を指す逆イテレータを取得する             | |
+| [`crend`](map/crend.md)     | 先頭を指す読み取り専用逆イテレータを取得する | C++11 |
 
 
 ### 領域
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>multimap -- Merge pull request #952 from cpprefjp/fix_typos</title>
      <link href="https://cpprefjp.github.io/reference/map/multimap.html"/>
      <id>3e4a8bc94ca142724e817800add6d0ef3f4e9c2f:reference/map/multimap.md</id>
      <updated>2022-03-15T16:25:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/map/multimap.md b/reference/map/multimap.md
index 7e613d36f..fdde7c31a 100644
--- a/reference/map/multimap.md
+++ b/reference/map/multimap.md
@@ -66,14 +66,14 @@ namespace std {
 
 | 名前 | 説明 | 対応バージョン |
 |------------------------------|----------------------------------------------|-------|
-| [`begin`](multimap/begin.md)    | 先頭を指すイテレータを取得する               | |
-| [`cbegin`](multimap/cbegin.md)  | 先頭を指す読み取り専用イテレータを取得する   | C++11 |
-| [`end`](multimap/end.md)        | 末尾を指すイテレータを取得する               | |
-| [`cend`](multimap/cend.md)      | 末尾を指す読み取り専用イテレータを取得する   | C++11 |
-| [`rbegin`](multimap/rbegin.md)  | 末尾を指す逆イテレータを取得する             | |
-| [`crbegin`](multimap/rbegin.md) | 末尾を指す読み取り専用逆イテレータを取得する | C++11 |
-| [`rend`](multimap/rend.md)      | 先頭を指す逆イテレータを取得する             | |
-| [`crend`](multimap/rend.md)     | 先頭を指す読み取り専用逆イテレータを取得する | C++11 |
+| [`begin`](multimap/begin.md)     | 先頭を指すイテレータを取得する               | |
+| [`cbegin`](multimap/cbegin.md)   | 先頭を指す読み取り専用イテレータを取得する   | C++11 |
+| [`end`](multimap/end.md)         | 末尾を指すイテレータを取得する               | |
+| [`cend`](multimap/cend.md)       | 末尾を指す読み取り専用イテレータを取得する   | C++11 |
+| [`rbegin`](multimap/rbegin.md)   | 末尾を指す逆イテレータを取得する             | |
+| [`crbegin`](multimap/crbegin.md) | 末尾を指す読み取り専用逆イテレータを取得する | C++11 |
+| [`rend`](multimap/rend.md)       | 先頭を指す逆イテレータを取得する             | |
+| [`crend`](multimap/crend.md)     | 先頭を指す読み取り専用逆イテレータを取得する | C++11 |
 
 
 ### 領域
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>uninitialized_copy_n -- Merge pull request #952 from cpprefjp/fix_typos</title>
      <link href="https://cpprefjp.github.io/reference/memory/uninitialized_copy_n.html"/>
      <id>3e4a8bc94ca142724e817800add6d0ef3f4e9c2f:reference/memory/uninitialized_copy_n.md</id>
      <updated>2022-03-15T16:25:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/memory/uninitialized_copy_n.md b/reference/memory/uninitialized_copy_n.md
index b46369e89..f2def28be 100644
--- a/reference/memory/uninitialized_copy_n.md
+++ b/reference/memory/uninitialized_copy_n.md
@@ -12,9 +12,10 @@ namespace std {
                          Size n,
                          ForwardIterator result); // (1) C++11
 
-  template &amp;lt;class InputIterator, class Size, class ForwardIterator&amp;gt;
+  template &amp;lt;class ExecutionPolicy, class InputIterator, class Size, class ForwardIterator&amp;gt;
   ForwardIterator
-    uninitialized_copy_n(InputIterator first,
+    uninitialized_copy_n(ExecutionPolicy&amp;amp;&amp;amp; exec,
+                         InputIterator first,
                          Size n,
                          ForwardIterator result); // (2) C++17
 }
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>insert_or_assign -- Merge pull request #951 from cpprefjp/fix-missing-link</title>
      <link href="https://cpprefjp.github.io/reference/unordered_map/unordered_map/insert_or_assign.html"/>
      <id>093da6beac870f412e4f589d7ee0f93a74731a92:reference/unordered_map/unordered_map/insert_or_assign.md</id>
      <updated>2022-03-14T21:38:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_map/unordered_map/insert_or_assign.md b/reference/unordered_map/unordered_map/insert_or_assign.md
index 1509cbaac..43e681187 100644
--- a/reference/unordered_map/unordered_map/insert_or_assign.md
+++ b/reference/unordered_map/unordered_map/insert_or_assign.md
@@ -51,9 +51,9 @@ iterator insert_or_assign(const_iterator hint, key_type&amp;amp;&amp;amp; k, M&amp;amp;&amp;amp; obj);
 
 
 ## 備考
-- 規格にはこの関数の例外安全性についての記載が無いが、[`emplace`](emplace.md) や [`emplace_hint`] と等価と考えて問題ないと思われる。
+- 規格にはこの関数の例外安全性についての記載が無いが、[`emplace`](emplace.md) や [`emplace_hint`](emplace_hint.md) と等価と考えて問題ないと思われる。
 
-- 規格にはこの関数が呼ばれた後のイテレータや要素へのポインタ・参照の有効性についての記載が無いが、[`emplace`](emplace.md) や [`emplace_hint`] と等価と考えて問題ないと思われる。
+- 規格にはこの関数が呼ばれた後のイテレータや要素へのポインタ・参照の有効性についての記載が無いが、[`emplace`](emplace.md) や [`emplace_hint`](emplace_hint.md) と等価と考えて問題ないと思われる。
 
 - このメンバ関数の[`機能テストマクロ`](/lang/cpp17/feature_test_macros.md)は以下の通り。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>crend -- fix some links and typos</title>
      <link href="https://cpprefjp.github.io/reference/deque/deque/crend.html"/>
      <id>70748511525a7f5512797cae70873523bcdfa6ec:reference/deque/deque/crend.md</id>
      <updated>2022-03-14T21:14:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/deque/deque/crend.md b/reference/deque/deque/crend.md
index 4a660e3da..32906938b 100644
--- a/reference/deque/deque/crend.md
+++ b/reference/deque/deque/crend.md
@@ -12,7 +12,7 @@ const_reverse_iterator crend() const noexcept;
 ## 概要
 先頭要素の前を指す読み取り専用逆イテレータを取得する。
 
-[`rend()`](rend.md)は非`const`な`deque`オブジェクトに対して`reverse_iterator`を返し、`const`な`deque`オブジェクトに対しては`const_reverse_iterator`を返すが、`cend()`は`const_reverse_iterator`を返すバージョンのみが提供されている。
+[`rend()`](rend.md)は非`const`な`deque`オブジェクトに対して`reverse_iterator`を返し、`const`な`deque`オブジェクトに対しては`const_reverse_iterator`を返すが、`crend()`は`const_reverse_iterator`を返すバージョンのみが提供されている。
 
 アルゴリズムにイテレータの組を渡す際、アルゴリズム内でデータの書き換えが起こらないというユーザーの意図を示す場合などに有用である。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>insert -- fix some links and typos</title>
      <link href="https://cpprefjp.github.io/reference/deque/deque/insert.html"/>
      <id>70748511525a7f5512797cae70873523bcdfa6ec:reference/deque/deque/insert.md</id>
      <updated>2022-03-14T21:14:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/deque/deque/insert.md b/reference/deque/deque/insert.md
index ce7f3790e..21de19dbb 100644
--- a/reference/deque/deque/insert.md
+++ b/reference/deque/deque/insert.md
@@ -17,7 +17,7 @@ iterator insert(const_iterator position,
 
 template &amp;lt;class InputIterator&amp;gt;
 void insert(iterator position,
-            InputIterator first, InputIterator last);               // (4) C++11
+            InputIterator first, InputIterator last);               // (4) C++03
 template &amp;lt;class InputIterator&amp;gt;
 iterator insert(const_iterator position,
                 InputIterator first, InputIterator last);           // (4) C++11
@@ -47,7 +47,7 @@ iterator insert(const_iterator position, initializer_list&amp;lt;T&amp;gt; init); // (5) C++11
 
 
 ## 戻り値
-- C++03まで一番上のバージョンがのみ、新しい要素が挿入された場所を指すイテレータを返す。
+- C++03まで一番上のバージョンのみ、新しい要素が挿入された場所を指すイテレータを返す。
 - C++11以降新しい要素が挿入された場所を示すイテレータ。
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>data -- fix some links and typos</title>
      <link href="https://cpprefjp.github.io/reference/iterator/data.html"/>
      <id>70748511525a7f5512797cae70873523bcdfa6ec:reference/iterator/data.md</id>
      <updated>2022-03-14T21:14:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/data.md b/reference/iterator/data.md
index 91a118310..ea54be6b5 100644
--- a/reference/iterator/data.md
+++ b/reference/iterator/data.md
@@ -69,13 +69,10 @@ int main()
 * std::data[color ff0000]
 * std::size[link size.md]
 
-### 出力
+### 出力例
 ```
-false
-false
-true
-false
-false
+array size:4 at 0x7fff0833f980
+array size:1 at 0x22e42b0
 ```
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>map -- fix some links and typos</title>
      <link href="https://cpprefjp.github.io/reference/map/map.html"/>
      <id>70748511525a7f5512797cae70873523bcdfa6ec:reference/map/map.md</id>
      <updated>2022-03-14T21:14:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/map/map.md b/reference/map/map.md
index ef886967a..3da7115e3 100644
--- a/reference/map/map.md
+++ b/reference/map/map.md
@@ -67,14 +67,14 @@ namespace std {
 
 | 名前 | 説明 | 対応バージョン |
 |------------------------------|----------------------------------------------|-------|
-| [`begin`](map/begin.md)    | 先頭を指すイテレータを取得する               | |
-| [`cbegin`](map/cbegin.md)  | 先頭を指す読み取り専用イテレータを取得する   | C++11 |
-| [`end`](map/end.md)        | 末尾を指すイテレータを取得する               | |
-| [`cend`](map/cend.md)      | 末尾を指す読み取り専用イテレータを取得する   | C++11 |
-| [`rbegin`](map/rbegin.md)  | 末尾を指す逆イテレータを取得する             | |
-| [`crbegin`](map/rbegin.md) | 末尾を指す読み取り専用逆イテレータを取得する | C++11 |
-| [`rend`](map/rend.md)      | 先頭を指す逆イテレータを取得する             | |
-| [`crend`](map/rend.md)     | 先頭を指す読み取り専用逆イテレータを取得する | C++11 |
+| [`begin`](map/begin.md)     | 先頭を指すイテレータを取得する               | |
+| [`cbegin`](map/cbegin.md)   | 先頭を指す読み取り専用イテレータを取得する   | C++11 |
+| [`end`](map/end.md)         | 末尾を指すイテレータを取得する               | |
+| [`cend`](map/cend.md)       | 末尾を指す読み取り専用イテレータを取得する   | C++11 |
+| [`rbegin`](map/rbegin.md)   | 末尾を指す逆イテレータを取得する             | |
+| [`crbegin`](map/crbegin.md) | 末尾を指す読み取り専用逆イテレータを取得する | C++11 |
+| [`rend`](map/rend.md)       | 先頭を指す逆イテレータを取得する             | |
+| [`crend`](map/crend.md)     | 先頭を指す読み取り専用逆イテレータを取得する | C++11 |
 
 
 ### 領域
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>multimap -- fix some links and typos</title>
      <link href="https://cpprefjp.github.io/reference/map/multimap.html"/>
      <id>70748511525a7f5512797cae70873523bcdfa6ec:reference/map/multimap.md</id>
      <updated>2022-03-14T21:14:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/map/multimap.md b/reference/map/multimap.md
index 7e613d36f..fdde7c31a 100644
--- a/reference/map/multimap.md
+++ b/reference/map/multimap.md
@@ -66,14 +66,14 @@ namespace std {
 
 | 名前 | 説明 | 対応バージョン |
 |------------------------------|----------------------------------------------|-------|
-| [`begin`](multimap/begin.md)    | 先頭を指すイテレータを取得する               | |
-| [`cbegin`](multimap/cbegin.md)  | 先頭を指す読み取り専用イテレータを取得する   | C++11 |
-| [`end`](multimap/end.md)        | 末尾を指すイテレータを取得する               | |
-| [`cend`](multimap/cend.md)      | 末尾を指す読み取り専用イテレータを取得する   | C++11 |
-| [`rbegin`](multimap/rbegin.md)  | 末尾を指す逆イテレータを取得する             | |
-| [`crbegin`](multimap/rbegin.md) | 末尾を指す読み取り専用逆イテレータを取得する | C++11 |
-| [`rend`](multimap/rend.md)      | 先頭を指す逆イテレータを取得する             | |
-| [`crend`](multimap/rend.md)     | 先頭を指す読み取り専用逆イテレータを取得する | C++11 |
+| [`begin`](multimap/begin.md)     | 先頭を指すイテレータを取得する               | |
+| [`cbegin`](multimap/cbegin.md)   | 先頭を指す読み取り専用イテレータを取得する   | C++11 |
+| [`end`](multimap/end.md)         | 末尾を指すイテレータを取得する               | |
+| [`cend`](multimap/cend.md)       | 末尾を指す読み取り専用イテレータを取得する   | C++11 |
+| [`rbegin`](multimap/rbegin.md)   | 末尾を指す逆イテレータを取得する             | |
+| [`crbegin`](multimap/crbegin.md) | 末尾を指す読み取り専用逆イテレータを取得する | C++11 |
+| [`rend`](multimap/rend.md)       | 先頭を指す逆イテレータを取得する             | |
+| [`crend`](multimap/crend.md)     | 先頭を指す読み取り専用逆イテレータを取得する | C++11 |
 
 
 ### 領域
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>uninitialized_copy_n -- fix some links and typos</title>
      <link href="https://cpprefjp.github.io/reference/memory/uninitialized_copy_n.html"/>
      <id>70748511525a7f5512797cae70873523bcdfa6ec:reference/memory/uninitialized_copy_n.md</id>
      <updated>2022-03-14T21:14:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/memory/uninitialized_copy_n.md b/reference/memory/uninitialized_copy_n.md
index b46369e89..f2def28be 100644
--- a/reference/memory/uninitialized_copy_n.md
+++ b/reference/memory/uninitialized_copy_n.md
@@ -12,9 +12,10 @@ namespace std {
                          Size n,
                          ForwardIterator result); // (1) C++11
 
-  template &amp;lt;class InputIterator, class Size, class ForwardIterator&amp;gt;
+  template &amp;lt;class ExecutionPolicy, class InputIterator, class Size, class ForwardIterator&amp;gt;
   ForwardIterator
-    uninitialized_copy_n(InputIterator first,
+    uninitialized_copy_n(ExecutionPolicy&amp;amp;&amp;amp; exec,
+                         InputIterator first,
                          Size n,
                          ForwardIterator result); // (2) C++17
 }
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
</feed>
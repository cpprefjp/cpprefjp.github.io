<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2024-05-13T09:40:38.577353</updated>
  <id>beddb412-53ed-42ec-9fcf-c1a8295d7cb6</id>

  
    <entry>
      <title>description -- コード修飾のミスを修正</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/stacktrace_entry/description.html"/>
      <id>b22d84d393aa1deb84ba6bc3566dbc9cc8c40389:reference/stacktrace/stacktrace_entry/description.md</id>
      <updated>2024-05-13T18:36:43+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/stacktrace_entry/description.md b/reference/stacktrace/stacktrace_entry/description.md
index a23b8ba6a..cdea0fe85 100644
--- a/reference/stacktrace/stacktrace_entry/description.md
+++ b/reference/stacktrace/stacktrace_entry/description.md
@@ -42,7 +42,7 @@ int main() {
   f();
 }
 ```
-* entry.source_file()[color ff0000]
+* entry.description()[color ff0000]
 * std::stacktrace[link /reference/stacktrace/basic_stacktrace.md]
 * current[link /reference/stacktrace/basic_stacktrace/current.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>source_line -- コード修飾のミスを修正</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/stacktrace_entry/source_line.html"/>
      <id>b22d84d393aa1deb84ba6bc3566dbc9cc8c40389:reference/stacktrace/stacktrace_entry/source_line.md</id>
      <updated>2024-05-13T18:36:43+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/stacktrace_entry/source_line.md b/reference/stacktrace/stacktrace_entry/source_line.md
index 0ddcb1d55..c5278df5b 100644
--- a/reference/stacktrace/stacktrace_entry/source_line.md
+++ b/reference/stacktrace/stacktrace_entry/source_line.md
@@ -44,7 +44,7 @@ int main() {
   f();
 }
 ```
-* entry.source_file()[color ff0000]
+* entry.source_line()[color ff0000]
 * std::stacktrace[link /reference/stacktrace/basic_stacktrace.md]
 * current[link /reference/stacktrace/basic_stacktrace/current.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>stacktrace_entry -- stacktrace_entry : description, source_file, source_lineを追加</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/stacktrace_entry.html"/>
      <id>56e4f9b24d73d5d0b111b5a5a6e6768edc5c5d5e:reference/stacktrace/stacktrace_entry.md</id>
      <updated>2024-05-13T18:30:36+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/stacktrace_entry.md b/reference/stacktrace/stacktrace_entry.md
index 70cfb395c..eeb157aa7 100644
--- a/reference/stacktrace/stacktrace_entry.md
+++ b/reference/stacktrace/stacktrace_entry.md
@@ -36,9 +36,9 @@ namespace std {
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`description`](stacktrace_entry/description.md.nolink) | このオブジェクトを説明する文字列を取得する | C++23 |
-| [`source_file`](stacktrace_entry/source_file.md.nolink) | ソースファイル名を取得する | C++23 |
-| [`source_line`](stacktrace_entry/source_line.md.nolink) | 行番号を取得する | C++23 |
+| [`description`](stacktrace_entry/description.md) | このオブジェクトを説明する文字列を取得する | C++23 |
+| [`source_file`](stacktrace_entry/source_file.md) | ソースファイル名を取得する | C++23 |
+| [`source_line`](stacktrace_entry/source_line.md) | 行番号を取得する | C++23 |
 
 
 ## メンバ型
@@ -109,14 +109,14 @@ int main() {
 * std::stacktrace_entry[color ff0000]
 * std::stacktrace[link basic_stacktrace.md]
 * current[link basic_stacktrace/current.md]
-* entry.description()[link stacktrace_entry/description.md.nolink]
-* entry.source_file()[link stacktrace_entry/source_file.md.nolink]
-* entry.source_line()[link stacktrace_entry/source_line.md.nolink]
+* entry.description()[link stacktrace_entry/description.md]
+* entry.source_file()[link stacktrace_entry/source_file.md]
+* entry.source_line()[link stacktrace_entry/source_line.md]
 
-### 出力例
+### 出力例 (GCC)
 ```
-g() at main.cpp:5
-main.cpp
+g()
+/app/example.cpp
 5
 ```
 
@@ -126,5 +126,5 @@ main.cpp
 
 ### 処理系
 - [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [GCC](/implementation.md#gcc): 12
 - [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>description -- stacktrace_entry : description, source_file, source_lineを追加</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/stacktrace_entry/description.html"/>
      <id>56e4f9b24d73d5d0b111b5a5a6e6768edc5c5d5e:reference/stacktrace/stacktrace_entry/description.md</id>
      <updated>2024-05-13T18:30:36+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/stacktrace_entry/description.md b/reference/stacktrace/stacktrace_entry/description.md
new file mode 100644
index 000000000..a23b8ba6a
--- /dev/null
+++ b/reference/stacktrace/stacktrace_entry/description.md
@@ -0,0 +1,62 @@
+# description
+* stacktrace[meta header]
+* std[meta namespace]
+* stacktrace_entry[meta class]
+* function[meta id-type]
+* cpp23[meta cpp]
+
+```cpp
+string description() const; // (1) C++23
+```
+* string[link /reference/string/basic_string.md]
+
+## 概要
+このオブジェクトを説明する文字列を取得する。
+
+
+## 戻り値
+`*this`で表される評価の説明、または空文字列を返す。
+
+
+## 例外
+内部のデータ構造、または結果文字列のためのメモリ確保ができない場合、[`std::bad_alloc`](/reference/new/bad_alloc.md)例外を送出する。
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;stacktrace&amp;gt;
+
+void g() {
+  std::stacktrace st = std::stacktrace::current();
+  std::stacktrace_entry entry = st[0];
+
+  std::cout &amp;lt;&amp;lt; entry.description() &amp;lt;&amp;lt; std::endl;
+}
+
+void f() {
+  g();
+}
+
+int main() {
+  f();
+}
+```
+* entry.source_file()[color ff0000]
+* std::stacktrace[link /reference/stacktrace/basic_stacktrace.md]
+* current[link /reference/stacktrace/basic_stacktrace/current.md]
+
+### 出力例 (GCC)
+```
+g()
+```
+
+
+## バージョン
+### 言語
+- C++23
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): 12
+- [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>source_file -- stacktrace_entry : description, source_file, source_lineを追加</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/stacktrace_entry/source_file.html"/>
      <id>56e4f9b24d73d5d0b111b5a5a6e6768edc5c5d5e:reference/stacktrace/stacktrace_entry/source_file.md</id>
      <updated>2024-05-13T18:30:36+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/stacktrace_entry/source_file.md b/reference/stacktrace/stacktrace_entry/source_file.md
new file mode 100644
index 000000000..b2951b1f7
--- /dev/null
+++ b/reference/stacktrace/stacktrace_entry/source_file.md
@@ -0,0 +1,62 @@
+# source_file
+* stacktrace[meta header]
+* std[meta namespace]
+* stacktrace_entry[meta class]
+* function[meta id-type]
+* cpp23[meta cpp]
+
+```cpp
+string source_file() const; // (1) C++23
+```
+* string[link /reference/string/basic_string.md]
+
+## 概要
+ソースファイル名を取得する。
+
+
+## 戻り値
+`*this`で表される評価の式または文を字句的に含むソースファイルの推定または実際の名前、または空文字列を返す。
+
+
+## 例外
+内部のデータ構造、または結果文字列のためのメモリ確保ができない場合、[`std::bad_alloc`](/reference/new/bad_alloc.md)例外を送出する。
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;stacktrace&amp;gt;
+
+void g() {
+  std::stacktrace st = std::stacktrace::current();
+  std::stacktrace_entry entry = st[0];
+
+  std::cout &amp;lt;&amp;lt; entry.source_file() &amp;lt;&amp;lt; std::endl;
+}
+
+void f() {
+  g();
+}
+
+int main() {
+  f();
+}
+```
+* entry.source_file()[color ff0000]
+* std::stacktrace[link /reference/stacktrace/basic_stacktrace.md]
+* current[link /reference/stacktrace/basic_stacktrace/current.md]
+
+### 出力例 (GCC)
+```
+/app/example.cpp
+```
+
+
+## バージョン
+### 言語
+- C++23
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): 12
+- [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>source_line -- stacktrace_entry : description, source_file, source_lineを追加</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/stacktrace_entry/source_line.html"/>
      <id>56e4f9b24d73d5d0b111b5a5a6e6768edc5c5d5e:reference/stacktrace/stacktrace_entry/source_line.md</id>
      <updated>2024-05-13T18:30:36+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/stacktrace_entry/source_line.md b/reference/stacktrace/stacktrace_entry/source_line.md
new file mode 100644
index 000000000..0ddcb1d55
--- /dev/null
+++ b/reference/stacktrace/stacktrace_entry/source_line.md
@@ -0,0 +1,64 @@
+# source_line
+* stacktrace[meta header]
+* std[meta namespace]
+* stacktrace_entry[meta class]
+* function[meta id-type]
+* cpp23[meta cpp]
+
+```cpp
+uint_least32_t source_line() const; // (1) C++23
+```
+* uint_least32_t[link /reference/cstdint/uint_least32_t.md]
+
+## 概要
+行番号を取得する。
+
+
+## 戻り値
+`*this`で表される評価に字句的に関連する`0`または`1`ベースの行番号を返す。
+
+[`source_file()`](source_file.md)が推定のソースファイル名を返す場合は推定の行番号を返し、[`source_file`](source_file.md)が実際のソースファイル名を返す場合は実際の行番号を返す。
+
+
+## 例外
+内部のデータ構造のメモリ確保ができない場合、[`std::bad_alloc`](/reference/new/bad_alloc.md)例外を送出する。
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;stacktrace&amp;gt;
+
+void g() {
+  std::stacktrace st = std::stacktrace::current();
+  std::stacktrace_entry entry = st[0];
+
+  std::cout &amp;lt;&amp;lt; entry.source_line() &amp;lt;&amp;lt; std::endl;
+}
+
+void f() {
+  g();
+}
+
+int main() {
+  f();
+}
+```
+* entry.source_file()[color ff0000]
+* std::stacktrace[link /reference/stacktrace/basic_stacktrace.md]
+* current[link /reference/stacktrace/basic_stacktrace/current.md]
+
+### 出力例 (GCC)
+```
+5
+```
+
+
+## バージョン
+### 言語
+- C++23
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): 12
+- [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>begin -- &lt;iterator&gt;のbegin / end : メンバ関数版とのちがいを記載</title>
      <link href="https://cpprefjp.github.io/reference/iterator/begin.html"/>
      <id>e349d0e6a3354108e9518857d4d11f4c784c7966:reference/iterator/begin.md</id>
      <updated>2024-05-13T17:54:08+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/begin.md b/reference/iterator/begin.md
index 75d79887c..e866c0373 100644
--- a/reference/iterator/begin.md
+++ b/reference/iterator/begin.md
@@ -29,6 +29,12 @@ namespace std {
 ## 概要
 範囲から先頭要素へのイテレータを取得する。
 
+この関数は、メンバ関数版の`begin()`とちがい、組み込み配列に対しても使用できる。
+
+- (1) : 非`const`のコンテナの、先頭要素へのイテレータを取得する
+- (2) : `const`のコンテナの、先頭要素へのイテレータを取得する
+- (3) : 組み込み配列の、先頭要素へのポインタを取得する
+
 
 ## 戻り値
 - (1) : `return c.begin();`
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>end -- &lt;iterator&gt;のbegin / end : メンバ関数版とのちがいを記載</title>
      <link href="https://cpprefjp.github.io/reference/iterator/end.html"/>
      <id>e349d0e6a3354108e9518857d4d11f4c784c7966:reference/iterator/end.md</id>
      <updated>2024-05-13T17:54:08+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/end.md b/reference/iterator/end.md
index 82ed3f6b8..d18b72256 100644
--- a/reference/iterator/end.md
+++ b/reference/iterator/end.md
@@ -29,6 +29,12 @@ namespace std {
 ## 概要
 範囲から、最後尾要素の次を指すイテレータを取得する。
 
+この関数は、メンバ関数版の`end()`とちがい、組み込み配列に対しても使用できる。
+
+- (1) : 非`const`のコンテナの、末尾要素の次を指すイテレータを取得する
+- (2) : `const`のコンテナの、末尾要素の次を指すイテレータを取得する
+- (3) : 組み込み配列の、末尾要素の次を指すポインタを取得する
+
 
 ## 戻り値
 - (1) : `return c.end();`
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>basic_stacktrace -- basic_stacktrace : GCCで動作確認</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace.html"/>
      <id>142f30311d60a885501d1d9414f339371aacc4e7:reference/stacktrace/basic_stacktrace.md</id>
      <updated>2024-05-13T16:11:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace.md b/reference/stacktrace/basic_stacktrace.md
index e318d6919..49bad48e2 100644
--- a/reference/stacktrace/basic_stacktrace.md
+++ b/reference/stacktrace/basic_stacktrace.md
@@ -173,11 +173,15 @@ int main() {
 ```
 * current()[link basic_stacktrace/current.md]
 
-#### 出力例
+#### 出力例 (GCC)
 ```
- 0# g() at main.cpp:5
- 1# f() at main.cpp:9
- 2# main at main.cpp:13
+   0#  g() at /app/example.cpp:5
+   1#  f() at /app/example.cpp:10
+   2# main at /app/example.cpp:14
+   3#      at :0
+   4# __libc_start_main at :0
+   5# _start at :0
+   6# 
 ```
 
 ### スタックトレースを出力するアサーションマクロを作る
@@ -208,9 +212,9 @@ int main() {
 * std::abort()[link /reference/cstdlib/abort.md]
 * std::cerr[link /reference/iostream/cerr.md]
 
-#### 出力例
+#### 出力例 (GCC)
 ```
-Expression &amp;#39;i &amp;gt;= 0&amp;#39; is false in f() at main.cpp:15
+Expression &amp;#39;i &amp;gt;= 0&amp;#39; is false in f(int) at /app/example.cpp:15
 ```
 
 ## バージョン
@@ -219,5 +223,12 @@ Expression &amp;#39;i &amp;gt;= 0&amp;#39; is false in f() at main.cpp:15
 
 ### 処理系
 - [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [GCC](/implementation.md#gcc): 12
 - [Visual C++](/implementation.md#visual_cpp): ??
+
+
+### 備考
+- GCCでは、以下のコンパイルオプションを追加で指定する必要がある：
+    - 13まで : `-lstdc++_libbacktrace`
+    - 14以降 : `-lstdc++exp`
+
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>at -- basic_stacktrace : GCCで動作確認</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/at.html"/>
      <id>142f30311d60a885501d1d9414f339371aacc4e7:reference/stacktrace/basic_stacktrace/at.md</id>
      <updated>2024-05-13T16:11:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/at.md b/reference/stacktrace/basic_stacktrace/at.md
index 8e34e8f89..02909efa8 100644
--- a/reference/stacktrace/basic_stacktrace/at.md
+++ b/reference/stacktrace/basic_stacktrace/at.md
@@ -42,9 +42,9 @@ int main() {
 * st.at[color ff0000]
 * current()[link current.md]
 
-### 出力例
+### 出力例 (GCC)
 ```
-g() at main.cpp:5
+ g() at /app/example.cpp:5
 ```
 
 
@@ -54,5 +54,5 @@ g() at main.cpp:5
 
 ### 処理系
 - [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [GCC](/implementation.md#gcc): 12
 - [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>begin -- basic_stacktrace : GCCで動作確認</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/begin.html"/>
      <id>142f30311d60a885501d1d9414f339371aacc4e7:reference/stacktrace/basic_stacktrace/begin.md</id>
      <updated>2024-05-13T16:11:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/begin.md b/reference/stacktrace/basic_stacktrace/begin.md
index 15fbe084f..e123f76ef 100644
--- a/reference/stacktrace/basic_stacktrace/begin.md
+++ b/reference/stacktrace/basic_stacktrace/begin.md
@@ -27,7 +27,7 @@ void g() {
   std::stacktrace st = std::stacktrace::current();
   std::for_each(st.begin(), st.end(), [](const std::stacktrace_entry&amp;amp; x) {
     std::cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; std::endl;
-  }):
+  });
 }
 
 void f() {
@@ -43,11 +43,15 @@ int main() {
 * current()[link current.md]
 * std::stacktrace_entry[link /reference/stacktrace/stacktrace_entry.md]
 
-### 出力
+### 出力例 (GCC)
 ```
-g() at main.cpp:6
-f() at main.cpp:13
-main at main.cpp:17
+ g() at /app/example.cpp:6
+ f() at /app/example.cpp:13
+main at /app/example.cpp:17
+     at :0
+__libc_start_main at :0
+_start at :0
+
 ```
 
 
@@ -57,5 +61,5 @@ main at main.cpp:17
 
 ### 処理系
 - [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [GCC](/implementation.md#gcc): 12
 - [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>cbegin -- basic_stacktrace : GCCで動作確認</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/cbegin.html"/>
      <id>142f30311d60a885501d1d9414f339371aacc4e7:reference/stacktrace/basic_stacktrace/cbegin.md</id>
      <updated>2024-05-13T16:11:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/cbegin.md b/reference/stacktrace/basic_stacktrace/cbegin.md
index b6eb5b65f..b93bfb169 100644
--- a/reference/stacktrace/basic_stacktrace/cbegin.md
+++ b/reference/stacktrace/basic_stacktrace/cbegin.md
@@ -27,7 +27,7 @@ void g() {
   std::stacktrace st = std::stacktrace::current();
   std::for_each(st.cbegin(), st.cend(), [](const std::stacktrace_entry&amp;amp; x) {
     std::cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; std::endl;
-  }):
+  });
 }
 
 void f() {
@@ -43,11 +43,15 @@ int main() {
 * current()[link current.md]
 * std::stacktrace_entry[link /reference/stacktrace/stacktrace_entry.md]
 
-### 出力
+### 出力例 (GCC)
 ```
-g() at main.cpp:6
-f() at main.cpp:13
-main at main.cpp:17
+ g() at /app/example.cpp:6
+ f() at /app/example.cpp:13
+main at /app/example.cpp:17
+     at :0
+__libc_start_main at :0
+_start at :0
+
 ```
 
 
@@ -57,5 +61,5 @@ main at main.cpp:17
 
 ### 処理系
 - [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [GCC](/implementation.md#gcc): 12
 - [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>cend -- basic_stacktrace : GCCで動作確認</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/cend.html"/>
      <id>142f30311d60a885501d1d9414f339371aacc4e7:reference/stacktrace/basic_stacktrace/cend.md</id>
      <updated>2024-05-13T16:11:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/cend.md b/reference/stacktrace/basic_stacktrace/cend.md
index 911dc7afb..22e8ae02e 100644
--- a/reference/stacktrace/basic_stacktrace/cend.md
+++ b/reference/stacktrace/basic_stacktrace/cend.md
@@ -27,7 +27,7 @@ void g() {
   std::stacktrace st = std::stacktrace::current();
   std::for_each(st.cbegin(), st.cend(), [](const std::stacktrace_entry&amp;amp; x) {
     std::cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; std::endl;
-  }):
+  });
 }
 
 void f() {
@@ -43,11 +43,15 @@ int main() {
 * current()[link current.md]
 * std::stacktrace_entry[link /reference/stacktrace/stacktrace_entry.md]
 
-### 出力
+### 出力例 (GCC)
 ```
-g() at main.cpp:6
-f() at main.cpp:13
-main at main.cpp:17
+ g() at /app/example.cpp:6
+ f() at /app/example.cpp:13
+main at /app/example.cpp:17
+     at :0
+__libc_start_main at :0
+_start at :0
+
 ```
 
 
@@ -57,5 +61,5 @@ main at main.cpp:17
 
 ### 処理系
 - [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [GCC](/implementation.md#gcc): 12
 - [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>crbegin -- basic_stacktrace : GCCで動作確認</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/crbegin.html"/>
      <id>142f30311d60a885501d1d9414f339371aacc4e7:reference/stacktrace/basic_stacktrace/crbegin.md</id>
      <updated>2024-05-13T16:11:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/crbegin.md b/reference/stacktrace/basic_stacktrace/crbegin.md
index 2c7dc6637..14e964e4a 100644
--- a/reference/stacktrace/basic_stacktrace/crbegin.md
+++ b/reference/stacktrace/basic_stacktrace/crbegin.md
@@ -30,7 +30,7 @@ void g() {
   std::stacktrace st = std::stacktrace::current();
   std::for_each(st.crbegin(), st.crend(), [](const std::stacktrace_entry&amp;amp; x) {
     std::cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; std::endl;
-  }):
+  });
 }
 
 void f() {
@@ -46,11 +46,15 @@ int main() {
 * current()[link current.md]
 * std::stacktrace_entry[link /reference/stacktrace/stacktrace_entry.md]
 
-### 出力
+### 出力例 (GCC)
 ```
-main at main.cpp:17
-f() at main.cpp:13
-g() at main.cpp:6
+
+_start at :0
+__libc_start_main at :0
+     at :0
+main at /app/example.cpp:17
+ f() at /app/example.cpp:13
+ g() at /app/example.cpp:6
 ```
 
 
@@ -60,5 +64,5 @@ g() at main.cpp:6
 
 ### 処理系
 - [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [GCC](/implementation.md#gcc): 12
 - [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>crend -- basic_stacktrace : GCCで動作確認</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/crend.html"/>
      <id>142f30311d60a885501d1d9414f339371aacc4e7:reference/stacktrace/basic_stacktrace/crend.md</id>
      <updated>2024-05-13T16:11:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/crend.md b/reference/stacktrace/basic_stacktrace/crend.md
index 35aee8444..b01ec1af1 100644
--- a/reference/stacktrace/basic_stacktrace/crend.md
+++ b/reference/stacktrace/basic_stacktrace/crend.md
@@ -30,7 +30,7 @@ void g() {
   std::stacktrace st = std::stacktrace::current();
   std::for_each(st.crbegin(), st.crend(), [](const std::stacktrace_entry&amp;amp; x) {
     std::cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; std::endl;
-  }):
+  });
 }
 
 void f() {
@@ -46,11 +46,15 @@ int main() {
 * current()[link current.md]
 * std::stacktrace_entry[link /reference/stacktrace/stacktrace_entry.md]
 
-### 出力
+### 出力例 (GCC)
 ```
-main at main.cpp:17
-f() at main.cpp:13
-g() at main.cpp:6
+
+_start at :0
+__libc_start_main at :0
+     at :0
+main at /app/example.cpp:17
+ f() at /app/example.cpp:13
+ g() at /app/example.cpp:6
 ```
 
 
@@ -60,5 +64,5 @@ g() at main.cpp:6
 
 ### 処理系
 - [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [GCC](/implementation.md#gcc): 12
 - [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>current -- basic_stacktrace : GCCで動作確認</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/current.html"/>
      <id>142f30311d60a885501d1d9414f339371aacc4e7:reference/stacktrace/basic_stacktrace/current.md</id>
      <updated>2024-05-13T16:11:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/current.md b/reference/stacktrace/basic_stacktrace/current.md
index c55d80f77..adfb85b77 100644
--- a/reference/stacktrace/basic_stacktrace/current.md
+++ b/reference/stacktrace/basic_stacktrace/current.md
@@ -67,11 +67,15 @@ int main() {
 ```
 * current()[color ff0000]
 
-#### 出力例
+#### 出力例 (GCC)
 ```
- 0# g() at main.cpp:5
- 1# f() at main.cpp:9
- 2# main at main.cpp:13
+   0#  g() at /app/example.cpp:5
+   1#  f() at /app/example.cpp:9
+   2# main at /app/example.cpp:13
+   3#      at :0
+   4# __libc_start_main at :0
+   5# _start at :0
+   6# 
 ```
 
 ### 現在位置からN個を除いたスタックトレースを取得する
@@ -93,10 +97,14 @@ int main() {
 ```
 * current[color ff0000]
 
-#### 出力例
+#### 出力例 (GCC)
 ```
- 0# f() at main.cpp:9
- 1# main at main.cpp:13
+   0#  f() at /app/example.cpp:9
+   1# main at /app/example.cpp:13
+   2#      at :0
+   3# __libc_start_main at :0
+   4# _start at :0
+   5# 
 ```
 
 ### 指定範囲のスタックトレースを取得する
@@ -118,10 +126,10 @@ int main() {
 ```
 * current[color ff0000]
 
-#### 出力例
+#### 出力例 (GCC)
 ```
- 0# f() at main.cpp:9
- 1# main at main.cpp:13
+   0#  f() at /app/example.cpp:9
+   1# main at /app/example.cpp:13
 ```
 
 
@@ -131,5 +139,5 @@ int main() {
 
 ### 処理系
 - [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [GCC](/implementation.md#gcc): 12
 - [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>empty -- basic_stacktrace : GCCで動作確認</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/empty.html"/>
      <id>142f30311d60a885501d1d9414f339371aacc4e7:reference/stacktrace/basic_stacktrace/empty.md</id>
      <updated>2024-05-13T16:11:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/empty.md b/reference/stacktrace/basic_stacktrace/empty.md
index 37b248853..aa6314c8b 100644
--- a/reference/stacktrace/basic_stacktrace/empty.md
+++ b/reference/stacktrace/basic_stacktrace/empty.md
@@ -52,5 +52,5 @@ int main() {
 
 ### 処理系
 - [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [GCC](/implementation.md#gcc): 12
 - [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>end -- basic_stacktrace : GCCで動作確認</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/end.html"/>
      <id>142f30311d60a885501d1d9414f339371aacc4e7:reference/stacktrace/basic_stacktrace/end.md</id>
      <updated>2024-05-13T16:11:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/end.md b/reference/stacktrace/basic_stacktrace/end.md
index c194a257d..3b273a803 100644
--- a/reference/stacktrace/basic_stacktrace/end.md
+++ b/reference/stacktrace/basic_stacktrace/end.md
@@ -27,7 +27,7 @@ void g() {
   std::stacktrace st = std::stacktrace::current();
   std::for_each(st.begin(), st.end(), [](const std::stacktrace_entry&amp;amp; x) {
     std::cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; std::endl;
-  }):
+  });
 }
 
 void f() {
@@ -43,11 +43,15 @@ int main() {
 * current()[link current.md]
 * std::stacktrace_entry[link /reference/stacktrace/stacktrace_entry.md]
 
-### 出力
+### 出力例 (GCC)
 ```
-g() at main.cpp:6
-f() at main.cpp:13
-main at main.cpp:17
+ g() at /app/example.cpp:6
+ f() at /app/example.cpp:13
+main at /app/example.cpp:17
+     at :0
+__libc_start_main at :0
+_start at :0
+
 ```
 
 
@@ -57,5 +61,5 @@ main at main.cpp:17
 
 ### 処理系
 - [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [GCC](/implementation.md#gcc): 12
 - [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>max_size -- basic_stacktrace : GCCで動作確認</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/get_allocator.html"/>
      <id>142f30311d60a885501d1d9414f339371aacc4e7:reference/stacktrace/basic_stacktrace/get_allocator.md</id>
      <updated>2024-05-13T16:11:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/get_allocator.md b/reference/stacktrace/basic_stacktrace/get_allocator.md
index 15c2029f2..e6861adca 100644
--- a/reference/stacktrace/basic_stacktrace/get_allocator.md
+++ b/reference/stacktrace/basic_stacktrace/get_allocator.md
@@ -43,5 +43,5 @@ int main() {
 
 ### 処理系
 - [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [GCC](/implementation.md#gcc): 12
 - [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>max_size -- basic_stacktrace : GCCで動作確認</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/max_size.html"/>
      <id>142f30311d60a885501d1d9414f339371aacc4e7:reference/stacktrace/basic_stacktrace/max_size.md</id>
      <updated>2024-05-13T16:11:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/max_size.md b/reference/stacktrace/basic_stacktrace/max_size.md
index f7224b35e..979231d71 100644
--- a/reference/stacktrace/basic_stacktrace/max_size.md
+++ b/reference/stacktrace/basic_stacktrace/max_size.md
@@ -43,3 +43,7 @@ int main() {
 - [Clang](/implementation.md#clang): ??
 - [GCC](/implementation.md#gcc): ??
 - [Visual C++](/implementation.md#visual_cpp): ??
+
+### 備考
+- GCCでは14時点でコンパイルエラーになる
+    - [Bug 115063 - compilation error: `std::basic_stracktrace::max_size()`](https://gcc.gnu.org/bugzilla/show_bug.cgi?id=115063)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator= -- basic_stacktrace : GCCで動作確認</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/op_assign.html"/>
      <id>142f30311d60a885501d1d9414f339371aacc4e7:reference/stacktrace/basic_stacktrace/op_assign.md</id>
      <updated>2024-05-13T16:11:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/op_assign.md b/reference/stacktrace/basic_stacktrace/op_assign.md
index db9c6f047..6a390f194 100644
--- a/reference/stacktrace/basic_stacktrace/op_assign.md
+++ b/reference/stacktrace/basic_stacktrace/op_assign.md
@@ -54,9 +54,9 @@ int main() {
 ```
 * current()[link current.md]
 
-### 出力例
+### 出力例 (GCC)
 ```
-g() at main.cpp:5
+ g() at /app/example.cpp:5
 ```
 
 
@@ -66,5 +66,5 @@ g() at main.cpp:5
 
 ### 処理系
 - [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [GCC](/implementation.md#gcc): 12
 - [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator[] -- basic_stacktrace : GCCで動作確認</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/op_at.html"/>
      <id>142f30311d60a885501d1d9414f339371aacc4e7:reference/stacktrace/basic_stacktrace/op_at.md</id>
      <updated>2024-05-13T16:11:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/op_at.md b/reference/stacktrace/basic_stacktrace/op_at.md
index 8b7d642cb..357b2a94a 100644
--- a/reference/stacktrace/basic_stacktrace/op_at.md
+++ b/reference/stacktrace/basic_stacktrace/op_at.md
@@ -46,9 +46,9 @@ int main() {
 * st[0][color ff0000]
 * current()[link current.md]
 
-### 出力例
+### 出力例 (GCC)
 ```
-g() at main.cpp:5
+ g() at /app/example.cpp:5
 ```
 
 
@@ -58,5 +58,5 @@ g() at main.cpp:5
 
 ### 処理系
 - [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [GCC](/implementation.md#gcc): 12
 - [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;=&gt; -- basic_stacktrace : GCCで動作確認</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/op_compare_3way.html"/>
      <id>142f30311d60a885501d1d9414f339371aacc4e7:reference/stacktrace/basic_stacktrace/op_compare_3way.md</id>
      <updated>2024-05-13T16:11:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/op_compare_3way.md b/reference/stacktrace/basic_stacktrace/op_compare_3way.md
index f99cede2e..542b1e549 100644
--- a/reference/stacktrace/basic_stacktrace/op_compare_3way.md
+++ b/reference/stacktrace/basic_stacktrace/op_compare_3way.md
@@ -67,7 +67,7 @@ int main() {
 
 ### 処理系
 - [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [GCC](/implementation.md#gcc): 12
 - [Visual C++](/implementation.md#visual_cpp): ??
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- basic_stacktrace : GCCで動作確認</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/op_constructor.html"/>
      <id>142f30311d60a885501d1d9414f339371aacc4e7:reference/stacktrace/basic_stacktrace/op_constructor.md</id>
      <updated>2024-05-13T16:11:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/op_constructor.md b/reference/stacktrace/basic_stacktrace/op_constructor.md
index 9c44b68ee..e07876802 100644
--- a/reference/stacktrace/basic_stacktrace/op_constructor.md
+++ b/reference/stacktrace/basic_stacktrace/op_constructor.md
@@ -103,5 +103,5 @@ int main() {
 
 ### 処理系
 - [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [GCC](/implementation.md#gcc): 12
 - [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator== -- basic_stacktrace : GCCで動作確認</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/op_equal.html"/>
      <id>142f30311d60a885501d1d9414f339371aacc4e7:reference/stacktrace/basic_stacktrace/op_equal.md</id>
      <updated>2024-05-13T16:11:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/op_equal.md b/reference/stacktrace/basic_stacktrace/op_equal.md
index e4038633f..e9a6f4f23 100644
--- a/reference/stacktrace/basic_stacktrace/op_equal.md
+++ b/reference/stacktrace/basic_stacktrace/op_equal.md
@@ -63,7 +63,7 @@ int main() {
 
 ### 処理系
 - [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [GCC](/implementation.md#gcc): 12
 - [Visual C++](/implementation.md#visual_cpp): ??
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;&lt; -- basic_stacktrace : GCCで動作確認</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/op_ostream.html"/>
      <id>142f30311d60a885501d1d9414f339371aacc4e7:reference/stacktrace/basic_stacktrace/op_ostream.md</id>
      <updated>2024-05-13T16:11:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/op_ostream.md b/reference/stacktrace/basic_stacktrace/op_ostream.md
index aae9af152..b6204faa5 100644
--- a/reference/stacktrace/basic_stacktrace/op_ostream.md
+++ b/reference/stacktrace/basic_stacktrace/op_ostream.md
@@ -45,11 +45,15 @@ int main() {
 ```
 * current()[link current.md]
 
-### 出力例
+### 出力例 (GCC)
 ```
- 0# g() at main.cpp:5
- 1# f() at main.cpp:9
- 2# main at main.cpp:13
+   0#  g() at /app/example.cpp:5
+   1#  f() at /app/example.cpp:9
+   2# main at /app/example.cpp:13
+   3#      at :0
+   4#      at :0
+   5# _start at :0
+   6# 
 ```
 
 
@@ -59,5 +63,5 @@ int main() {
 
 ### 処理系
 - [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [GCC](/implementation.md#gcc): 12
 - [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>rbegin -- basic_stacktrace : GCCで動作確認</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/rbegin.html"/>
      <id>142f30311d60a885501d1d9414f339371aacc4e7:reference/stacktrace/basic_stacktrace/rbegin.md</id>
      <updated>2024-05-13T16:11:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/rbegin.md b/reference/stacktrace/basic_stacktrace/rbegin.md
index dce03b134..0272902e3 100644
--- a/reference/stacktrace/basic_stacktrace/rbegin.md
+++ b/reference/stacktrace/basic_stacktrace/rbegin.md
@@ -30,7 +30,7 @@ void g() {
   std::stacktrace st = std::stacktrace::current();
   std::for_each(st.rbegin(), st.rend(), [](const std::stacktrace_entry&amp;amp; x) {
     std::cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; std::endl;
-  }):
+  });
 }
 
 void f() {
@@ -46,11 +46,15 @@ int main() {
 * current()[link current.md]
 * std::stacktrace_entry[link /reference/stacktrace/stacktrace_entry.md]
 
-### 出力
+### 出力例 (GCC)
 ```
-main at main.cpp:17
-f() at main.cpp:13
-g() at main.cpp:6
+
+_start at :0
+     at :0
+     at :0
+main at /app/example.cpp:17
+ f() at /app/example.cpp:13
+ g() at /app/example.cpp:6
 ```
 
 
@@ -60,5 +64,5 @@ g() at main.cpp:6
 
 ### 処理系
 - [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [GCC](/implementation.md#gcc): 12
 - [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>rend -- basic_stacktrace : GCCで動作確認</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/rend.html"/>
      <id>142f30311d60a885501d1d9414f339371aacc4e7:reference/stacktrace/basic_stacktrace/rend.md</id>
      <updated>2024-05-13T16:11:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/rend.md b/reference/stacktrace/basic_stacktrace/rend.md
index 0744d950f..62f37c8ed 100644
--- a/reference/stacktrace/basic_stacktrace/rend.md
+++ b/reference/stacktrace/basic_stacktrace/rend.md
@@ -30,7 +30,7 @@ void g() {
   std::stacktrace st = std::stacktrace::current();
   std::for_each(st.rbegin(), st.rend(), [](const std::stacktrace_entry&amp;amp; x) {
     std::cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; std::endl;
-  }):
+  });
 }
 
 void f() {
@@ -46,11 +46,15 @@ int main() {
 * current()[link current.md]
 * std::stacktrace_entry[link /reference/stacktrace/stacktrace_entry.md]
 
-### 出力
+### 出力例 (GCC)
 ```
-main at main.cpp:17
-f() at main.cpp:13
-g() at main.cpp:6
+
+_start at :0
+     at :0
+     at :0
+main at /app/example.cpp:17
+ f() at /app/example.cpp:13
+ g() at /app/example.cpp:6
 ```
 
 
@@ -60,5 +64,5 @@ g() at main.cpp:6
 
 ### 処理系
 - [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [GCC](/implementation.md#gcc): 12
 - [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>size -- basic_stacktrace : GCCで動作確認</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/size.html"/>
      <id>142f30311d60a885501d1d9414f339371aacc4e7:reference/stacktrace/basic_stacktrace/size.md</id>
      <updated>2024-05-13T16:11:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/size.md b/reference/stacktrace/basic_stacktrace/size.md
index 1d0adafb2..07476a203 100644
--- a/reference/stacktrace/basic_stacktrace/size.md
+++ b/reference/stacktrace/basic_stacktrace/size.md
@@ -40,12 +40,16 @@ int main() {
 * trace.size()[color ff0000]
 * current()[link current.md]
 
-#### 出力例
+#### 出力例 (GCC)
 ```
-3
- 0# g() at main.cpp:5
- 1# f() at main.cpp:11
- 2# main at main.cpp:15
+7
+   0#  g() at /app/example.cpp:5
+   1#  f() at /app/example.cpp:11
+   2# main at /app/example.cpp:15
+   3#      at :0
+   4#      at :0
+   5# _start at :0
+   6# 
 ```
 
 
@@ -71,10 +75,10 @@ int main() {
 * trace.size()[color ff0000]
 * current[link current.md]
 
-#### 出力例
+#### 出力例 (GCC)
 ```
 1
- 0# f() at main.cpp:11
+   0#  f() at /app/example.cpp:11
 ```
 
 
@@ -84,5 +88,5 @@ int main() {
 
 ### 処理系
 - [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [GCC](/implementation.md#gcc): 12
 - [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>swap -- basic_stacktrace : GCCで動作確認</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/swap.html"/>
      <id>142f30311d60a885501d1d9414f339371aacc4e7:reference/stacktrace/basic_stacktrace/swap.md</id>
      <updated>2024-05-13T16:11:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/swap.md b/reference/stacktrace/basic_stacktrace/swap.md
index 46ff167d3..da8d0404b 100644
--- a/reference/stacktrace/basic_stacktrace/swap.md
+++ b/reference/stacktrace/basic_stacktrace/swap.md
@@ -46,11 +46,15 @@ int main() {
 * a.swap[color ff0000]
 * current()[link current.md]
 
-### 出力例
+### 出力例 (GCC)
 ```
- 0# g() at main.cpp:6
- 1# f() at main.cpp:13
- 2# main at main.cpp:17
+   0#  g() at /app/example.cpp:6
+   1#  f() at /app/example.cpp:13
+   2# main at /app/example.cpp:17
+   3#      at :0
+   4#      at :0
+   5# _start at :0
+   6# 
 ```
 
 
@@ -60,5 +64,5 @@ int main() {
 
 ### 処理系
 - [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [GCC](/implementation.md#gcc): 12
 - [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>swap (非メンバ関数) -- basic_stacktrace : GCCで動作確認</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/swap_free.html"/>
      <id>142f30311d60a885501d1d9414f339371aacc4e7:reference/stacktrace/basic_stacktrace/swap_free.md</id>
      <updated>2024-05-13T16:11:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/swap_free.md b/reference/stacktrace/basic_stacktrace/swap_free.md
index 24797c8de..c63d6cf35 100644
--- a/reference/stacktrace/basic_stacktrace/swap_free.md
+++ b/reference/stacktrace/basic_stacktrace/swap_free.md
@@ -51,11 +51,15 @@ int main() {
 * std::swap[color ff0000]
 * current()[link current.md]
 
-### 出力例
+### 出力例 (GCC)
 ```
- 0# g() at main.cpp:6
- 1# f() at main.cpp:13
- 2# main at main.cpp:17
+   0#  g() at /app/example.cpp:6
+   1#  f() at /app/example.cpp:13
+   2# main at /app/example.cpp:17
+   3#      at :0
+   4#      at :0
+   5# _start at :0
+   6# 
 ```
 
 
@@ -65,5 +69,5 @@ int main() {
 
 ### 処理系
 - [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [GCC](/implementation.md#gcc): 12
 - [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>to_string -- basic_stacktrace : GCCで動作確認</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/to_string.html"/>
      <id>142f30311d60a885501d1d9414f339371aacc4e7:reference/stacktrace/basic_stacktrace/to_string.md</id>
      <updated>2024-05-13T16:11:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/to_string.md b/reference/stacktrace/basic_stacktrace/to_string.md
index ad35d05a0..130a11475 100644
--- a/reference/stacktrace/basic_stacktrace/to_string.md
+++ b/reference/stacktrace/basic_stacktrace/to_string.md
@@ -31,7 +31,7 @@ namespace std {
 #include &amp;lt;stacktrace&amp;gt;
 
 void g() {
-  std::string trace = std::stacktrace::current().to_string();
+  std::string trace = std::to_string(std::stacktrace::current());
   std::cout &amp;lt;&amp;lt; trace &amp;lt;&amp;lt; std::endl;
 }
 
@@ -43,14 +43,18 @@ int main() {
   f();
 }
 ```
-* to_string()[color ff0000]
+* std::to_string[color ff0000]
 * current()[link current.md]
 
-### 出力例
+### 出力例 (GCC)
 ```
- 0# g() at main.cpp:5
- 1# f() at main.cpp:10
- 2# main at main.cpp:14
+   0#  g() at /app/example.cpp:5
+   1#  f() at /app/example.cpp:10
+   2# main at /app/example.cpp:14
+   3#      at :0
+   4#      at :0
+   5# _start at :0
+   6# 
 ```
 
 
@@ -60,5 +64,5 @@ int main() {
 
 ### 処理系
 - [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [GCC](/implementation.md#gcc): 12
 - [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>assert -- assert : C++26対応として、カンマを含む式を条件式として指定できるようにした (close #1240)</title>
      <link href="https://cpprefjp.github.io/reference/cassert/assert.html"/>
      <id>ba9a49412500113f7235ff4e65dea28188a05dfc:reference/cassert/assert.md</id>
      <updated>2024-05-13T15:14:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cassert/assert.md b/reference/cassert/assert.md
index 3254fd500..d10ca3ce0 100644
--- a/reference/cassert/assert.md
+++ b/reference/cassert/assert.md
@@ -4,9 +4,11 @@
 
 ```cpp
 # if !defined(NDEBUG)
-  #define assert(expr) implementation-defined
+  #define assert(expr) implementation-defined // (1) C++03
+  #define assert(...) implementation-defined  // (1) C++26
 # else
-  #define assert(ignore) ((void)0)
+  #define assert(ignore) ((void)0)            // (2) C++03
+  #define assert(...) ((void)0)               // (2) C++26
 # endif
 ```
 
@@ -19,14 +21,18 @@
 
 
 ## 要件
-パラメータの式の型はスカラ型でなければならない。
+- C++14まで : パラメータの式の型はスカラ型でなければならない
+    - C言語への参照として定義されていた仕様では、`assert`は`void assert(scalar expression);`のような関数として定義されていた
 
 
 ## 効果
 - 有効な場合:
-    - パラメータの式を評価し、偽であった場合（`0`と等しい場合）、式をテキスト化したものに加え`__FILE__`, `__LINE__`, `__func__`の値を標準エラー出力に処理系定義の書式で書き込み、[`abort()`](/reference/cstdlib/abort.md)関数を呼び出してプログラムを異常終了させる。
+    - C++03 : パラメータの式を評価し、
+    - C++26 : 可変引数パラメータ`__VA_ARGS__`を`bool`に変換し、
+    - 真に評価された場合は、なにもしない
+    - そうでない場合（`0`と等しい場合）、式をテキスト化したもの、（[`std::source_location`](/reference/source_location/source_location.md)`::`[`current()`](/reference/source_location/source_location/current.md)で取得できるような) ソースファイル名、行番号、関数名を標準エラー出力に処理系定義の書式で書き込み、[`abort()`](/reference/cstdlib/abort.md)関数を呼び出してプログラムを異常終了させる
 - 無効な場合:
-    - パラメータの式は評価はされず、何もしない。
+    - パラメータの式は評価はされず、なにもしない
 
 このマクロは、定数式内で使用できる。(C++17)
 
@@ -89,6 +95,29 @@ int main()
 ```
 ```
 
+### カンマを含む条件式をassertマクロで使用する (C++26)
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;type_traits&amp;gt;
+
+template &amp;lt;class T&amp;gt;
+void f()
+{
+  assert(std::is_same_v&amp;lt;int, T&amp;gt;);   // C++26 : OK
+  assert((std::is_same_v&amp;lt;int, T&amp;gt;)); // C++23までは、カンマを含む式は全体を丸カッコで囲む必要がある
+}
+
+int main()
+{
+  f&amp;lt;int&amp;gt;();
+  f&amp;lt;double&amp;gt;();
+}
+```
+
+### 出力
+```
+```
+
 
 ## 参照
 - C++14 - 19.3 [assertions]
@@ -96,4 +125,5 @@ int main()
 - [What does it mean for C++ that assert takes a scalar argument?](https://groups.google.com/a/isocpp.org/d/topic/std-discussion/6EHDRo1A2EE/discussion)
   パラメータの式の型についての要件は参照規格であるCの規定によるものであり、「スカラ型」が[C++におけるスカラ型](/reference/type_traits/is_scalar.md)となるのか、あるいはCにおけるスカラ型の範囲に限定されるのか、少なくともC++14時点でははっきりしていない。
 - [LWG Issue 2234. `assert()` should allow usage in constant expressions](http://wg21.cmeerw.net/lwg/issue2234)
-
+- [P2264R7 Make `assert()` macro user friendly for C and C++](https://open-std.org/jtc1/sc22/wg21/docs/papers/2023/p2264r7.html)
+    - C++26から、カンマを含む式を条件式として使用できるようになった
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
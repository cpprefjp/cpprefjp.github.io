<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2020-09-30T07:51:10.501115</updated>
  <id>41936692-9dbd-4c66-8275-e93e59d40a9e</id>

  
    <entry>
      <title>アライメント指定されたデータの動的メモリ確保 -- C++17 定義済みマクロ : __STDCPP_DEFAULT_NEW_ALIGNMENT__を追加</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/dynamic_memory_allocation_for_over-aligned_data.html"/>
      <id>eae5a85357a2ee546c923123c06d7c6e0011b168:lang/cpp17/dynamic_memory_allocation_for_over-aligned_data.md</id>
      <updated>2020-09-30T16:46:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/dynamic_memory_allocation_for_over-aligned_data.md b/lang/cpp17/dynamic_memory_allocation_for_over-aligned_data.md
index cfee8f255..9be63837d 100644
--- a/lang/cpp17/dynamic_memory_allocation_for_over-aligned_data.md
+++ b/lang/cpp17/dynamic_memory_allocation_for_over-aligned_data.md
@@ -33,7 +33,7 @@ void* operator new(std::size_t size, std::align_val_t alignment);
 ```
 * std::align_val_t[link /reference/new/align_val_t.md]
 
-動的確保時になされるアライメントのデフォルト値は`__STDCPP_DEFAULT_NEW_ALIGNMENT__`で定義されている。これを超えるアライメント要求を持つクラスに対する[`new`](/reference/new/op_new.md)呼び出しは、[`align_val_t`](/reference/new/align_val_t.md)が渡された場合のもので解決される。また、対応するユーザー定義[`new`](/reference/new/op_new.md)が存在する場合、互換性のため呼び出しはそちらで解決される。もしユーザー定義`new`に`align_val_t`を取るものと取らないものがある場合、取るものが優先される。`delete`も同様である。
+動的確保時になされるアライメントのデフォルト値は[`__STDCPP_DEFAULT_NEW_ALIGNMENT__`](predefined_macros.md)で定義されている。これを超えるアライメント要求を持つクラスに対する[`new`](/reference/new/op_new.md)呼び出しは、[`align_val_t`](/reference/new/align_val_t.md)が渡された場合のもので解決される。また、対応するユーザー定義[`new`](/reference/new/op_new.md)が存在する場合、互換性のため呼び出しはそちらで解決される。もしユーザー定義`new`に`align_val_t`を取るものと取らないものがある場合、取るものが優先される。`delete`も同様である。
 
 `new T`の呼び出しが[`align_val_t`](/reference/new/align_val_t.md)を取る[`new`](/reference/new/op_new.md)で解決される場合、`align_val_t`の値は`alignof(T)`の結果になる。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>更新された定義済みマクロ -- C++17 定義済みマクロ : __STDCPP_DEFAULT_NEW_ALIGNMENT__を追加</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/predefined_macros.html"/>
      <id>eae5a85357a2ee546c923123c06d7c6e0011b168:lang/cpp17/predefined_macros.md</id>
      <updated>2020-09-30T16:46:49+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;更新された定義済みマクロ&lt;/span&gt;&lt;span class=&#34;cpp cpp17&#34; title=&#34;C++17で追加&#34;&gt;(C++17)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;定義済みマクロの値が、以下のように更新された：&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;マクロ名&lt;/th&gt;
&lt;th&gt;値&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cplusplus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;201703L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;C++のバージョン値を表す&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;新規マクロは以下：&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;マクロ名&lt;/th&gt;
&lt;th&gt;値&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__STDCPP_DEFAULT_NEW_ALIGNMENT__&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;実装定義&lt;/td&gt;
&lt;td&gt;動的メモリ確保時のデフォルトのアライメント値&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;関連項目&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/dynamic_memory_allocation_for_over-aligned_data.html&#34;&gt;C++17 アライメント指定されたデータの動的メモリ確保&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>unique -- Merge pull request #808 from cpprefjp/fix-list-unique-copy-paste-error</title>
      <link href="https://cpprefjp.github.io/reference/list/list/unique.html"/>
      <id>4a727e8ed8e0025cfd7c233e25e0e71b9351094f:reference/list/list/unique.md</id>
      <updated>2020-09-29T14:08:39+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/list/list/unique.md b/reference/list/list/unique.md
index c18cff223..6ad371e02 100644
--- a/reference/list/list/unique.md
+++ b/reference/list/list/unique.md
@@ -6,7 +6,7 @@
 
 ```cpp
 void unique();                          // (1) C++03
-size_type unique();                     // (1) C++03
+size_type unique();                     // (1) C++20
 
 template &amp;lt;class BinaryPredicate&amp;gt;
 void unique(BinaryPredicate pred);      // (2) C++03
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>unique -- C++03 -&gt; C++20</title>
      <link href="https://cpprefjp.github.io/reference/list/list/unique.html"/>
      <id>6ff36b1eb4aa83c0327099fbfa3845876a7fc33a:reference/list/list/unique.md</id>
      <updated>2020-09-29T12:53:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/list/list/unique.md b/reference/list/list/unique.md
index c18cff223..6ad371e02 100644
--- a/reference/list/list/unique.md
+++ b/reference/list/list/unique.md
@@ -6,7 +6,7 @@
 
 ```cpp
 void unique();                          // (1) C++03
-size_type unique();                     // (1) C++03
+size_type unique();                     // (1) C++20
 
 template &amp;lt;class BinaryPredicate&amp;gt;
 void unique(BinaryPredicate pred);      // (2) C++03
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>I</name>
        <email>wx257osn2@yahoo.co.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>exchange -- exchange : イディオムをまとめた記事へのリンクを追加</title>
      <link href="https://cpprefjp.github.io/reference/utility/exchange.html"/>
      <id>91625ad7374ac57d97b4c4137b85a25420c5bf67:reference/utility/exchange.md</id>
      <updated>2020-09-28T15:02:11+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/utility/exchange.md b/reference/utility/exchange.md
index fb2011855..5216ba12f 100644
--- a/reference/utility/exchange.md
+++ b/reference/utility/exchange.md
@@ -136,3 +136,4 @@ int main()
 - [N3608 exchange() utility function, revision 2](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3608.html)
 - [N3668 exchange() utility function, revision 3](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3668.html)
 - [P0202R3 Add Constexpr Modifiers to Functions in `&amp;lt;algorithm&amp;gt;` and `&amp;lt;utility&amp;gt;` Headers](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0202r3.html)
+- [`std::exchange` Patterns: Fast, Safe, Expressive, and Probably Underused](https://www.fluentcpp.com/2020/09/25/stdexchange-patterns-fast-safe-expressive-and-probably-underused/)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>indirectly_comparable -- indirectly_comparable : コード内リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/indirectly_comparable.html"/>
      <id>e9c3984672c3270518fbf35c8012348dc2772eeb:reference/iterator/indirectly_comparable.md</id>
      <updated>2020-09-25T16:11:14+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/indirectly_comparable.md b/reference/iterator/indirectly_comparable.md
index 80b780fc9..bb5ba4db4 100644
--- a/reference/iterator/indirectly_comparable.md
+++ b/reference/iterator/indirectly_comparable.md
@@ -58,7 +58,7 @@ int main() {
 ```
 * std::indirectly_comparable[color ff0000]
 * identity[link /reference/functional/identity.md]
-* greater[link /reference/functional/less.md]
+* less[link /reference/functional/less.md]
 * greater[link /reference/functional/greater.md]
 * iterator_t[link /reference/ranges/iterator_t.md.nolink]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
</feed>
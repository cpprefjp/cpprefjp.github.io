<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2025-05-05T15:04:19.998282</updated>
  <id>eb9a355c-9c70-401d-86c6-e3d8556adf40</id>

  
    <entry>
      <title>forwarding_query -- execution/forwarding_query: remove forbid chars</title>
      <link href="https://cpprefjp.github.io/reference/execution/forwarding_query.html"/>
      <id>7baad0148951dbf2404252dbfa98054f0aa114f1:reference/execution/forwarding_query.md</id>
      <updated>2025-05-05T23:59:56+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/forwarding_query.md b/reference/execution/forwarding_query.md
index 9421228d8..2d72071f7 100644
--- a/reference/execution/forwarding_query.md
+++ b/reference/execution/forwarding_query.md
@@ -50,7 +50,7 @@ namespace std {
 
 下記[クエリオブジェクト](queryable.md)に対する問い合わせは、`FWD-ENV`経由で転送されない。
 
-- [`execution​::​get_env`](execution/get_env.md)
+- [`execution::get_env`](execution/get_env.md)
 - [`executoin::get_forward_progress_guarantee`](executionget_forward_progress_guarantee.md.nolink)
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>execution -- execution: forwarding_query (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution.html"/>
      <id>1cb82c9590ce1f665e860086eea904461d1c7ffe:reference/execution/execution.md</id>
      <updated>2025-05-05T23:58:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution.md b/reference/execution/execution.md
index 27947d829..10a8dbed1 100644
--- a/reference/execution/execution.md
+++ b/reference/execution/execution.md
@@ -35,15 +35,15 @@ namespace std::execution {
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`forwarding_query`](forwarding_query.md.nolink) | クエリオブジェクトに転送問い合わせ可能か否かを返す (customization point object) | C++26 |
+| [`forwarding_query`](forwarding_query.md) | 対象クエリオブジェクトの転送可否を取得するクエリオブジェクト (customization point object) | C++26 |
 | [`get_allocator`](get_allocator.md) | アロケータ取得のクエリオブジェクト (customization point object) | C++26 |
 | [`get_stop_token`](get_stop_token.md) | 停止トークン取得のクエリオブジェクト (customization point object) | C++26 |
 | [`stop_token_of_t`](stop_token_of_t.md) | 指定型から停止トークン型を取得 (alias template) | C++26 |
 | [`execution::get_domain`](execution/get_domain.md) | 実行ドメイン取得のクエリオブジェクト (customization point object) | C++26 |
 | [`execution::get_scheduler`](execution/get_scheduler.md) | Scheduler取得のクエリオブジェクト (customization point object) | C++26 |
 | [`execution::get_delegation_scheduler`](execution/get_delegation_scheduler.md) | 委任Scheduler取得のクエリオブジェクト (customization point object) | C++26 |
-| [`execution::forward_progress_guarantee`](execution/forward_progress_guarantee.md.nolink) | 前進保証 (enum) | C++26 |
-| [`execution::get_forward_progress_guarantee`](execution/get_forward_progress_guarantee.md.nolink) | 前進保証取得のクエリオブジェクト (customization point object) | C++26 |
+| [`execution::forward_progress_guarantee`](execution/forward_progress_guarantee.md.nolink) | 前方進行保証 (enum) | C++26 |
+| [`execution::get_forward_progress_guarantee`](execution/get_forward_progress_guarantee.md.nolink) | 前方進行保証取得のクエリオブジェクト (customization point object) | C++26 |
 | [`execution::get_completion_scheduler`](execution/get_completion_scheduler.md) | 完了Scheduler取得のクエリオブジェクト (customization point object) | C++26 |
 | [`execution::get_env`](execution/get_env.md) | 環境取得のクエリオブジェクト (customization point object) | C++26 |
 | [`execution::env_of_t`](execution/env_of_t.md) | 指定型から環境型を取得 (alias template) | C++26 |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>get_completion_scheduler -- execution: forwarding_query (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/get_completion_scheduler.html"/>
      <id>1cb82c9590ce1f665e860086eea904461d1c7ffe:reference/execution/execution/get_completion_scheduler.md</id>
      <updated>2025-05-05T23:58:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/get_completion_scheduler.md b/reference/execution/execution/get_completion_scheduler.md
index 566ed4334..4a627a346 100644
--- a/reference/execution/execution/get_completion_scheduler.md
+++ b/reference/execution/execution/get_completion_scheduler.md
@@ -19,7 +19,7 @@ namespace std::execution {
 `get_completion_scheduler&amp;lt;completion-tag&amp;gt;`は、[Sender](sender.md)の[属性](get_env.md)から指定完了タグに関連付けられた完了Schedulerを取得する[クエリオブジェクト](../queryable.md)である。
 完了タグ`completion-tag`には、[`set_value_t`](set_value.md), [`set_error_t`](set_error.md), [`set_stopped_t`](set_stopped.md)のいずれかを指定する。
 
-コア定数式[`forwarding_query`](forwarding_query.md.nolink)`(get_completion_scheduler&amp;lt;completion-tag&amp;gt;)`は`true`値を返す。
+コア定数式[`forwarding_query`](../forwarding_query.md)`(get_completion_scheduler&amp;lt;completion-tag&amp;gt;)`は`true`値を返す。
 
 
 ### 完了Scheduler
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>get_delegation_scheduler -- execution: forwarding_query (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/get_delegation_scheduler.html"/>
      <id>1cb82c9590ce1f665e860086eea904461d1c7ffe:reference/execution/execution/get_delegation_scheduler.md</id>
      <updated>2025-05-05T23:58:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/get_delegation_scheduler.md b/reference/execution/execution/get_delegation_scheduler.md
index 4e5390083..17b242821 100644
--- a/reference/execution/execution/get_delegation_scheduler.md
+++ b/reference/execution/execution/get_delegation_scheduler.md
@@ -15,7 +15,7 @@ namespace std::execution {
 ## 概要
 `get_delegation_scheduler`は、[クエリ可能オブジェクト](../queryable.md)から委任[Scheduler](scheduler.md)を取得する[クエリオブジェクト](../queryable.md)である。
 
-コア定数式[`forwarding_query`](forwarding_query.md.nolink)`(get_delegation_scheduler)`は`true`値を返す。
+コア定数式[`forwarding_query`](../forwarding_query.md)`(get_delegation_scheduler)`は`true`値を返す。
 
 
 ## 効果
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>get_domain -- execution: forwarding_query (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/get_domain.html"/>
      <id>1cb82c9590ce1f665e860086eea904461d1c7ffe:reference/execution/execution/get_domain.md</id>
      <updated>2025-05-05T23:58:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/get_domain.md b/reference/execution/execution/get_domain.md
index c2162f2a9..dfbbe540f 100644
--- a/reference/execution/execution/get_domain.md
+++ b/reference/execution/execution/get_domain.md
@@ -15,7 +15,7 @@ namespace std::execution {
 ## 概要
 `get_domain`は、[クエリ可能オブジェクト](../queryable.md)から[実行ドメイン](default_domain.md)のタグ型を取得する[クエリオブジェクト](../queryable.md)である。
 
-コア定数式[`forwarding_query`](forwarding_query.md.nolink)`(get_domain)`は`true`値を返す。
+コア定数式[`forwarding_query`](../forwarding_query.md)`(get_domain)`は`true`値を返す。
 
 
 ## 効果
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>get_scheduler -- execution: forwarding_query (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/get_scheduler.html"/>
      <id>1cb82c9590ce1f665e860086eea904461d1c7ffe:reference/execution/execution/get_scheduler.md</id>
      <updated>2025-05-05T23:58:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/get_scheduler.md b/reference/execution/execution/get_scheduler.md
index bbca27bb1..b8a729419 100644
--- a/reference/execution/execution/get_scheduler.md
+++ b/reference/execution/execution/get_scheduler.md
@@ -15,7 +15,7 @@ namespace std::execution {
 ## 概要
 `get_scheduler`は、[クエリ可能オブジェクト](../queryable.md)から[Scheduler](scheduler.md)を取得する[クエリオブジェクト](../queryable.md)である。
 
-コア定数式[`forwarding_query`](forwarding_query.md.nolink)`(get_scheduler)`は`true`値を返す。
+コア定数式[`forwarding_query`](../forwarding_query.md)`(get_scheduler)`は`true`値を返す。
 
 
 ## 効果
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>impls-for -- execution: forwarding_query (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/impls-for.html"/>
      <id>1cb82c9590ce1f665e860086eea904461d1c7ffe:reference/execution/execution/impls-for.md</id>
      <updated>2025-05-05T23:58:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/impls-for.md b/reference/execution/execution/impls-for.md
index 2e1aaa8a2..784f56261 100644
--- a/reference/execution/execution/impls-for.md
+++ b/reference/execution/execution/impls-for.md
@@ -44,6 +44,7 @@ namespace std::execution {
     return env&amp;lt;&amp;gt;();
 }
 ```
+* FWD-ENV[link ../forwarding_query.md]
 * get_env[link get_env.md]
 * env&amp;lt;&amp;gt;[link env.md]
 
@@ -59,6 +60,7 @@ namespace std::execution {
   return FWD-ENV(get_env(rcvr));
 }
 ```
+* FWD-ENV[link ../forwarding_query.md]
 * get_env[link get_env.md]
 
 ### `get-state`メンバ
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>forwarding_query -- execution: forwarding_query (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/forwarding_query.html"/>
      <id>1cb82c9590ce1f665e860086eea904461d1c7ffe:reference/execution/forwarding_query.md</id>
      <updated>2025-05-05T23:58:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/forwarding_query.md b/reference/execution/forwarding_query.md
new file mode 100644
index 000000000..9421228d8
--- /dev/null
+++ b/reference/execution/forwarding_query.md
@@ -0,0 +1,73 @@
+# forwarding_query
+* execution[meta header]
+* cpo[meta id-type]
+* std[meta namespace]
+* cpp26[meta cpp]
+
+```cpp
+namespace std {
+  struct forwarding_query_t { unspecified };
+  inline constexpr forwarding_query_t forwarding_query{};
+}
+```
+* unspecified[italic]
+
+## 概要
+`forwarding_query`は、対象[クエリオブジェクト](queryable.md)に対してクエリ可能アダプタを通じて転送可能か否かを確認するクエリオブジェクトである。
+
+
+### 説明専用の式 `FWD-ENV`
+説明用の[クエリ可能オブジェクト](queryable.md)`env`、[クエリオブジェクト](queryable.md)`q`、パック式`as`に対して、式`FWD-ENV(env)`は下記の通り定義される。
+
+- `forwarding_query(q) == false`ならば、式`FWD-ENV(env).query(q, as...)`は不適格となる。
+- そうでなければ、式`FWD-ENV(env)`は式`env.query(q, as...)`と等価であり、その型は[`queryable`](queryable.md)を満たす。
+
+
+## 効果
+説明用の式`q`を`Q`型の[クエリオブジェクト](queryable.md)としたとき、呼び出し式`forwarding_query(q)`は下記と等価であり、`bool`型の値となる。
+
+- 式`q.query(forwarding_query)`が適格であれば、同式の`bool`値。
+    - `q`がコア定数式ならば、`q.query(forwarding_query)`もコア定数式となる。
+- そうではなく、[`derived_from`](/reference/concepts/derived_from.md)`&amp;lt;Q, forwarding_query_t&amp;gt; == true`ならば`true`
+- そうでなければ、`false`
+
+
+## カスタマイゼーションポイント
+[クエリ可能オブジェクト](queryable.md)`q`に対して式`q.query(forwarding_query)`が呼び出される。
+このとき`noexcept(q.query(forwarding_query)) == true`であること。
+
+
+## 備考
+下記[クエリオブジェクト](queryable.md)に対する問い合わせは、`FWD-ENV`経由で転送される。
+
+- `forwarding_query`自身
+- [`get_allocator`](get_allocator.md)
+- [`get_stop_token`](get_stop_token.md)
+- [`execution::get_domain`](execution/get_domain.md)
+- [`execution::get_scheduler`](execution/get_scheduler.md)
+- [`execution::get_delegation_scheduler`](execution/get_delegation_scheduler.md)
+- [`execution::get_completion_scheduler`](execution/get_completion_scheduler.md)
+
+下記[クエリオブジェクト](queryable.md)に対する問い合わせは、`FWD-ENV`経由で転送されない。
+
+- [`execution​::​get_env`](execution/get_env.md)
+- [`executoin::get_forward_progress_guarantee`](executionget_forward_progress_guarantee.md.nolink)
+
+
+## バージョン
+### 言語
+- C++26
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
+
+
+## 関連項目
+- [`impls-for`](execution/impls-for.md)
+
+
+## 参照
+- [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>get_allocator -- execution: forwarding_query (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/get_allocator.html"/>
      <id>1cb82c9590ce1f665e860086eea904461d1c7ffe:reference/execution/get_allocator.md</id>
      <updated>2025-05-05T23:58:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/get_allocator.md b/reference/execution/get_allocator.md
index 79932980c..4f0440975 100644
--- a/reference/execution/get_allocator.md
+++ b/reference/execution/get_allocator.md
@@ -15,7 +15,7 @@ namespace std {
 ## 概要
 `get_allocator`は、[クエリ可能オブジェクト](queryable.md)からアロケータを取得する[クエリオブジェクト](queryable.md)である。
 
-コア定数式[`forwarding_query`](forwarding_query.md.nolink)`(get_allocator)`は`true`値を返す。
+コア定数式[`forwarding_query`](forwarding_query.md)`(get_allocator)`は`true`値を返す。
 
 
 ## 効果
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>get_stop_token -- execution: forwarding_query (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/get_stop_token.html"/>
      <id>1cb82c9590ce1f665e860086eea904461d1c7ffe:reference/execution/get_stop_token.md</id>
      <updated>2025-05-05T23:58:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/get_stop_token.md b/reference/execution/get_stop_token.md
index feb7b4778..26e2be5aa 100644
--- a/reference/execution/get_stop_token.md
+++ b/reference/execution/get_stop_token.md
@@ -15,7 +15,7 @@ namespace std {
 ## 概要
 `get_stop_token`は、[クエリ可能オブジェクト](queryable.md)から[停止トークン](/reference/stop_token/stoppable_token.md)を取得する[クエリオブジェクト](queryable.md)である。
 
-コア定数式[`forwarding_query`](forwarding_query.md.nolink)`(get_stop_token)`は`true`値を返す。
+コア定数式[`forwarding_query`](forwarding_query.md)`(get_stop_token)`は`true`値を返す。
 
 
 ## 効果
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sync-wait-receiver -- execution: forwarding_query (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/this_thread/sync-wait-receiver.html"/>
      <id>1cb82c9590ce1f665e860086eea904461d1c7ffe:reference/execution/this_thread/sync-wait-receiver.md</id>
      <updated>2025-05-05T23:58:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/this_thread/sync-wait-receiver.md b/reference/execution/this_thread/sync-wait-receiver.md
index 28b5d3e38..4599e85ab 100644
--- a/reference/execution/this_thread/sync-wait-receiver.md
+++ b/reference/execution/this_thread/sync-wait-receiver.md
@@ -71,7 +71,7 @@ void set_error(Error&amp;amp;&amp;amp; err) &amp;amp;&amp;amp; noexcept
 
 説明用の式`err`に対して`decltype((err))`を型`Err`としたとき、式`AS-EXCEPT-PTR(err)`を下記の通り定義する。
 
-- [`decay_t`](/reference/type_traits/decay.md)`&amp;lt;Err&amp;gt;`が[`exception_ptr`](/reference/exception/exception_ptr.md)型と等しければ、`err`となる。このとき、事前条件として`!err == false`を満たすこと。
+- [`decay_t`](/reference/type_traits/decay.md)`&amp;lt;Err&amp;gt;`が[`exception_ptr`](/reference/exception/exception_ptr.md)型と等しければ、`err`となる。このとき、事前条件として`!err == false`であること。
 - そうではなく、[`decay_t`](/reference/type_traits/decay.md)`&amp;lt;Err&amp;gt;`が[`error_code`](/reference/system_error/error_code.md)型と等しければ、[`make_exception_ptr`](/reference/exception/make_exception_ptr.md)`(`[`system_error`](/reference/system_error/system_error.md)`(err))`となる。
 - そうでなければ、[`make_exception_ptr`](/reference/exception/make_exception_ptr.md)`(err)`となる。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>decays-to -- execution: decays-to,decayed-tuple,variant-or-empty (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/decays-to.html"/>
      <id>cef1c672e452f8d1edf9ca376b84761d197736bc:reference/execution/decays-to.md</id>
      <updated>2025-05-05T23:05:03+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/decays-to.md b/reference/execution/decays-to.md
new file mode 100644
index 000000000..f949e239d
--- /dev/null
+++ b/reference/execution/decays-to.md
@@ -0,0 +1,25 @@
+# decays-to
+* execution[meta header]
+* concept[meta id-type]
+* std[meta namespace]
+* cpp26[meta cpp]
+
+```cpp
+namespace std {
+  template&amp;lt;class From, class To&amp;gt;
+  concept decays-to = same_as&amp;lt;decay_t&amp;lt;From&amp;gt;, To&amp;gt;;  // exposition only
+}
+```
+* decay_t[link /reference/type_traits/decay.md]
+
+## 概要
+`decays-to`は、型`From`の[decay](/reference/type_traits/decay.md)結果が型`To`に一致することを表す説明専用のコンセプトである。
+
+
+## バージョン
+### 言語
+- C++26
+
+
+## 参照
+- [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>basic-operation -- execution: decays-to,decayed-tuple,variant-or-empty (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/basic-operation.html"/>
      <id>cef1c672e452f8d1edf9ca376b84761d197736bc:reference/execution/execution/basic-operation.md</id>
      <updated>2025-05-05T23:05:03+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/basic-operation.md b/reference/execution/execution/basic-operation.md
index a099fa36a..4133f39ad 100644
--- a/reference/execution/execution/basic-operation.md
+++ b/reference/execution/execution/basic-operation.md
@@ -40,6 +40,7 @@ namespace std::execution {
 * operation_state_t[link operation_state.md]
 * tag_of_t[link tag_of_t.md]
 * impls-for[link impls-for.md]
+* std::move[link /reference/utility/move.md]
 * see below[italic]
 
 ## 概要
@@ -71,6 +72,7 @@ nothrow-callable&amp;lt;decltype(impls-for&amp;lt;tag_of_t&amp;lt;Sndr&amp;gt;&amp;gt;::get-state), Sndr, Rcvr&amp;amp;&amp;gt; &amp;amp;&amp;amp;
 ```
 * impls-for[link impls-for.md]
 * tag_of_t[link tag_of_t.md]
+* nothrow-callable[link /reference/functional/nothrow-callable.md.nolink]
 * is_nothrow_move_constructible_v[link /reference/type_traits/is_nothrow_move_constructible.md]
 * is_nothrow_constructible_v[link /reference/type_traits/is_nothrow_constructible.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>basic-sender -- execution: decays-to,decayed-tuple,variant-or-empty (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/basic-sender.html"/>
      <id>cef1c672e452f8d1edf9ca376b84761d197736bc:reference/execution/execution/basic-sender.md</id>
      <updated>2025-05-05T23:05:03+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/basic-sender.md b/reference/execution/execution/basic-sender.md
index 5339aa682..e6f94ef1e 100644
--- a/reference/execution/execution/basic-sender.md
+++ b/reference/execution/execution/basic-sender.md
@@ -34,8 +34,10 @@ namespace std::execution {
 * sender_t[link sender.md]
 * index_sequence_for[link /reference/utility/index_sequence_for.md]
 * impls-for[link impls-for.md]
+* decays-to[link ../decays-to.md]
 * receiver[link receiver.md]
 * basic-operation[link basic-operation.md]
+* std::move[link /reference/utility/move.md]
 * this Self[link /lang/cpp23/deducing_this.md.nolink]
 * see below[italic]
 
@@ -84,6 +86,7 @@ using completion-signatures-for = see below;  // exposition only
 
 ## 関連項目
 - [`make-sender`](make-sender.md)
+- [`basic-operation`](basic-operation.md)
 - [`execution::sender`](sender.md)
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>decayed-tuple -- execution: decays-to,decayed-tuple,variant-or-empty (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/decayed-tuple.html"/>
      <id>cef1c672e452f8d1edf9ca376b84761d197736bc:reference/execution/execution/decayed-tuple.md</id>
      <updated>2025-05-05T23:05:03+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/decayed-tuple.md b/reference/execution/execution/decayed-tuple.md
new file mode 100644
index 000000000..6c2c486e1
--- /dev/null
+++ b/reference/execution/execution/decayed-tuple.md
@@ -0,0 +1,31 @@
+# decayed-tuple
+* execution[meta header]
+* std::execution[meta namespace]
+* type-alias[meta id-type]
+* cpp26[meta cpp]
+
+```cpp
+namespace std::execution {
+  template&amp;lt;class... Ts&amp;gt;
+  using decayed-tuple = tuple&amp;lt;decay_t&amp;lt;Ts&amp;gt;...&amp;gt;;  // exposition only
+}
+```
+* tuple[link /reference/tuple/tuple.md]
+* decay_t[link /reference/type_traits/decay.md]
+
+## 概要
+`decayed-tuple`は、型パラメータパック`Ts`から[decay](/reference/type_traits/decay.md)結果を要素型とする[`tuple`](/reference/tuple/tuple.md)型を作成する説明専用のエイリアステンプレートである。
+
+
+## バージョン
+### 言語
+- C++26
+
+
+## 関連項目
+- [`execution::value_types_of_t`](value_types_of_t.md)
+- [`this_thread::sync_wait`](../this_thread/sync_wait.md)
+
+
+## 参照
+- [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>error_types_of_t -- execution: decays-to,decayed-tuple,variant-or-empty (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/error_types_of_t.html"/>
      <id>cef1c672e452f8d1edf9ca376b84761d197736bc:reference/execution/execution/error_types_of_t.md</id>
      <updated>2025-05-05T23:05:03+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/error_types_of_t.md b/reference/execution/execution/error_types_of_t.md
index 10b6d9bcf..d3e6fe645 100644
--- a/reference/execution/execution/error_types_of_t.md
+++ b/reference/execution/execution/error_types_of_t.md
@@ -15,7 +15,7 @@ namespace std::execution {
 ```
 * env&amp;lt;&amp;gt;[link env.md]
 * sender_in[link sender_in.md]
-* variant-or-empty[link variant-or-empty.md.nolink]
+* variant-or-empty[link variant-or-empty.md]
 * gather-signatures[link gather-signatures.md]
 * set_error_t[link set_error.md]
 * completion_signatures_of_t[link completion_signatures_of_t.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>impls-for -- execution: decays-to,decayed-tuple,variant-or-empty (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/impls-for.html"/>
      <id>cef1c672e452f8d1edf9ca376b84761d197736bc:reference/execution/execution/impls-for.md</id>
      <updated>2025-05-05T23:05:03+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/impls-for.md b/reference/execution/execution/impls-for.md
index 68ee4ec98..2e1aaa8a2 100644
--- a/reference/execution/execution/impls-for.md
+++ b/reference/execution/execution/impls-for.md
@@ -107,6 +107,8 @@ namespace std::execution {
   Tag()(std::move(rcvr), std::forward&amp;lt;Args&amp;gt;(args)...);
 }
 ```
+* callable[link /reference/functional/callable.md.nolink]
+* std::move[link /reference/utility/move.md]
 
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>just -- execution: decays-to,decayed-tuple,variant-or-empty (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/just.html"/>
      <id>cef1c672e452f8d1edf9ca376b84761d197736bc:reference/execution/execution/just.md</id>
      <updated>2025-05-05T23:05:03+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/just.md b/reference/execution/execution/just.md
index d4e168243..f8183b819 100644
--- a/reference/execution/execution/just.md
+++ b/reference/execution/execution/just.md
@@ -36,9 +36,11 @@ namespace std::execution {
   };
 }
 ```
+* decayed-typeof[link decayed-typeof.md.nolink]
 * impls-for[link impls-for.md]
 * default-impls[link impls-for.md]
 * set_value[link set_value.md]
+* std::move[link /reference/utility/move.md]
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>product-type -- execution: decays-to,decayed-tuple,variant-or-empty (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/product-type.html"/>
      <id>cef1c672e452f8d1edf9ca376b84761d197736bc:reference/execution/execution/product-type.md</id>
      <updated>2025-05-05T23:05:03+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/product-type.md b/reference/execution/execution/product-type.md
index 7c2cd45bd..daa0b71a9 100644
--- a/reference/execution/execution/product-type.md
+++ b/reference/execution/execution/product-type.md
@@ -20,6 +20,7 @@ struct product-type {  // exposition only
     noexcept(see below);
 };
 ```
+* this Self[link /lang/cpp23/deducing_this.md.nolink]
 * see below[italic]
 
 ## 概要
@@ -33,18 +34,20 @@ struct product-type {  // exposition only
 template&amp;lt;size_t I, class Self&amp;gt;
 constexpr decltype(auto) get(this Self&amp;amp;&amp;amp; self) noexcept;
 ```
+* this Self[link /lang/cpp23/deducing_this.md.nolink]
 
 - 効果 : 下記と等価
 
-   ```cpp
-   auto&amp;amp; [...ts] = self;
-   return std::forward_like&amp;lt;Self&amp;gt;(ts...[I]);
-   ```
+    ```cpp
+    auto&amp;amp; [...ts] = self;
+    return std::forward_like&amp;lt;Self&amp;gt;(ts...[I]);
+    ```
 
 ```cpp
 template&amp;lt;class Self, class Fn&amp;gt;
 constexpr decltype(auto) apply(this Self&amp;amp;&amp;amp; self, Fn&amp;amp;&amp;amp; fn) noexcept(see below);
 ```
+* this Self[link /lang/cpp23/deducing_this.md.nolink]
 * see below[italic]
 
 - テンプレートパラメータ制約 : 下記`return`文の式が適格であること。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>prop -- execution: decays-to,decayed-tuple,variant-or-empty (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/prop.html"/>
      <id>cef1c672e452f8d1edf9ca376b84761d197736bc:reference/execution/execution/prop.md</id>
      <updated>2025-05-05T23:05:03+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/prop.md b/reference/execution/execution/prop.md
index 05055d8db..a54a73074 100644
--- a/reference/execution/execution/prop.md
+++ b/reference/execution/execution/prop.md
@@ -27,7 +27,7 @@ namespace std::execution {
 
 
 ## 適格要件
-説明用の`prop-like`テンプレートクラスを用いて、`QueryTag`と`ValueType`が`callable&amp;lt;QueryTag, prop-like&amp;lt;ValueType&amp;gt;&amp;gt;`のモデルであること。
+説明用の`prop-like`テンプレートクラスを用いて、`QueryTag`と`ValueType`が[`callable`](/reference/functional/callable.md.nolink)`&amp;lt;QueryTag, prop-like&amp;lt;ValueType&amp;gt;&amp;gt;`のモデルであること。
 
 ```cpp
 template&amp;lt;class ValueType&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>set_error -- execution: decays-to,decayed-tuple,variant-or-empty (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/set_error.html"/>
      <id>cef1c672e452f8d1edf9ca376b84761d197736bc:reference/execution/execution/set_error.md</id>
      <updated>2025-05-05T23:05:03+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/set_error.md b/reference/execution/execution/set_error.md
index f98c2cb99..97867367a 100644
--- a/reference/execution/execution/set_error.md
+++ b/reference/execution/execution/set_error.md
@@ -57,6 +57,7 @@ int main()
 ```
 * ex::set_error[color ff0000]
 * ex::receiver_t[link receiver.md]
+* std::move[link /reference/utility/move.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>set_stopped -- execution: decays-to,decayed-tuple,variant-or-empty (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/set_stopped.html"/>
      <id>cef1c672e452f8d1edf9ca376b84761d197736bc:reference/execution/execution/set_stopped.md</id>
      <updated>2025-05-05T23:05:03+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/set_stopped.md b/reference/execution/execution/set_stopped.md
index d3963f57b..8514e25fe 100644
--- a/reference/execution/execution/set_stopped.md
+++ b/reference/execution/execution/set_stopped.md
@@ -57,6 +57,7 @@ int main()
 ```
 * ex::set_stopped[color ff0000]
 * ex::receiver_t[link receiver.md]
+* std::move[link /reference/utility/move.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>set_value -- execution: decays-to,decayed-tuple,variant-or-empty (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/set_value.html"/>
      <id>cef1c672e452f8d1edf9ca376b84761d197736bc:reference/execution/execution/set_value.md</id>
      <updated>2025-05-05T23:05:03+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/set_value.md b/reference/execution/execution/set_value.md
index 65984ab5b..085ec50f3 100644
--- a/reference/execution/execution/set_value.md
+++ b/reference/execution/execution/set_value.md
@@ -57,6 +57,7 @@ int main()
 ```
 * ex::set_value[color ff0000]
 * ex::receiver_t[link receiver.md]
+* std::move[link /reference/utility/move.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>value_types_of_t -- execution: decays-to,decayed-tuple,variant-or-empty (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/value_types_of_t.html"/>
      <id>cef1c672e452f8d1edf9ca376b84761d197736bc:reference/execution/execution/value_types_of_t.md</id>
      <updated>2025-05-05T23:05:03+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/value_types_of_t.md b/reference/execution/execution/value_types_of_t.md
index 48bebc208..d2f0ec8b4 100644
--- a/reference/execution/execution/value_types_of_t.md
+++ b/reference/execution/execution/value_types_of_t.md
@@ -16,8 +16,8 @@ namespace std::execution {
 ```
 * env&amp;lt;&amp;gt;[link env.md]
 * sender_in[link sender_in.md]
-* decayed-tuple[link decayed-tuple.md.nolink]
-* variant-or-empty[link variant-or-empty.md.nolink]
+* decayed-tuple[link decayed-tuple.md]
+* variant-or-empty[link variant-or-empty.md]
 * gather-signatures[link gather-signatures.md]
 * set_value_t[link set_value.md]
 * completion_signatures_of_t[link completion_signatures_of_t.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>variant-or-empty -- execution: decays-to,decayed-tuple,variant-or-empty (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/variant-or-empty.html"/>
      <id>cef1c672e452f8d1edf9ca376b84761d197736bc:reference/execution/execution/variant-or-empty.md</id>
      <updated>2025-05-05T23:05:03+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/variant-or-empty.md b/reference/execution/execution/variant-or-empty.md
new file mode 100644
index 000000000..81dbe5e7b
--- /dev/null
+++ b/reference/execution/execution/variant-or-empty.md
@@ -0,0 +1,43 @@
+# variant-or-empty
+* execution[meta header]
+* std::execution[meta namespace]
+* type-alias[meta id-type]
+* cpp26[meta cpp]
+
+```cpp
+namespace std::execution {
+  template&amp;lt;class... Ts&amp;gt;
+  using variant-or-empty = see below;  // exposition only
+}
+```
+* see below[italic]
+
+## 概要
+`variant-or-empty`は、型パラメータパック`Ts`から[decay](/reference/type_traits/decay.md)結果を要素型とする[`variant`](/reference/variant/variant.md)型を作成する説明専用のエイリアステンプレートである。
+
+型`variant-or-empty&amp;lt;Ts...&amp;gt;`は下記の通り定義される。
+
+- `sizeof...(Ts) &amp;gt; 0`ならば、説明用のパック`Us`を[`decay_t`](/reference/type_traits/decay.md)`&amp;lt;Ts&amp;gt;...`から重複削除したものとしたとき、`variant-or-empty&amp;lt;Ts...&amp;gt;`は[`variant`](/reference/variant/variant.md)[`&amp;lt;Us...&amp;gt;`]型となる。
+- そうでなければ、`variant-or-empty&amp;lt;Ts...&amp;gt;`は下記の説明専用クラス型となる。
+
+    ```cpp
+    namespace std::execution {
+      struct empty-variant { // exposition only
+        empty-variant() = delete;
+      };
+    }
+    ```
+
+
+## バージョン
+### 言語
+- C++26
+
+
+## 関連項目
+- [`execution::value_types_of_t`](value_types_of_t.md)
+- [`execution::error_types_of_t`](error_types_of_t.md)
+
+
+## 参照
+- [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sync_wait -- execution: decays-to,decayed-tuple,variant-or-empty (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/this_thread/sync_wait.html"/>
      <id>cef1c672e452f8d1edf9ca376b84761d197736bc:reference/execution/this_thread/sync_wait.md</id>
      <updated>2025-05-05T23:05:03+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/this_thread/sync_wait.md b/reference/execution/this_thread/sync_wait.md
index bb13274dd..a82fc3256 100644
--- a/reference/execution/this_thread/sync_wait.md
+++ b/reference/execution/this_thread/sync_wait.md
@@ -53,7 +53,7 @@ namespace std::this_thread {
 * sync-wait-env[link sync-wait-env.md]
 * execution::value_types_of_t[link ../execution/value_types_of_t.md]
 * optional[link /reference/optional/optional.md]
-* decayed-tuple[link decayed-tuple.md.nolink]
+* decayed-tuple[link ../execution/decayed-tuple.md]
 * type_identity_t[link /reference/type_traits/type_identity.md]
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sync_wait_with_variant -- execution: decays-to,decayed-tuple,variant-or-empty (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/this_thread/sync_wait_with_variant.html"/>
      <id>cef1c672e452f8d1edf9ca376b84761d197736bc:reference/execution/this_thread/sync_wait_with_variant.md</id>
      <updated>2025-05-05T23:05:03+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/this_thread/sync_wait_with_variant.md b/reference/execution/this_thread/sync_wait_with_variant.md
index 1a60b4992..9754db1d4 100644
--- a/reference/execution/this_thread/sync_wait_with_variant.md
+++ b/reference/execution/this_thread/sync_wait_with_variant.md
@@ -57,7 +57,7 @@ namespace std::this_thread {
 ### Senderアルゴリズムタグ `sync_wait_with_variant`
 説明用の`sndr`を`decltype(`[`into_variant`](into_variant.md.nolink)`(sndr))`が`Sndr`型となる式とする。
 
-`callable&amp;lt;`[`sync_wait_t`](sync_wait.md)`, Sndr&amp;gt; == false`のとき、式`sync_wait_with_variant.apply_sender(sndr)`は不適格となる。
+[`callable`](/reference/functional/callable.md.nolink)`&amp;lt;`[`sync_wait_t`](sync_wait.md)`, Sndr&amp;gt; == false`のとき、式`sync_wait_with_variant.apply_sender(sndr)`は不適格となる。
 
 そうでなければ、式`sync_wait_with_variant.apply_sender(sndr)`は下記と等価。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>basic-operation -- execution: product-type (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/basic-operation.html"/>
      <id>b6538316195d92ec592dc5ad7335a4e3bd05a8d7:reference/execution/execution/basic-operation.md</id>
      <updated>2025-05-05T22:12:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/basic-operation.md b/reference/execution/execution/basic-operation.md
index 01387276c..a099fa36a 100644
--- a/reference/execution/execution/basic-operation.md
+++ b/reference/execution/execution/basic-operation.md
@@ -111,7 +111,7 @@ using indices-for = remove_reference_t&amp;lt;Sndr&amp;gt;::indices-for;  // exposition only
 
 説明専用の定数`connect-all`は、下記ラムダ式と等価な関数呼び出し可能なオブジェクトとして初期化される。
 
-- 全ての子Sender`child`とSenderアルゴリズム`sndr`の[Receiver](basic-receiver.md.nolink)を[接続(connect)](connect.md)し、結果の[Operation State](operation_state.md)リストを[`product-type`](product-type.md.nolink)型にまとめて返す。
+- 全ての子Sender`child`とSenderアルゴリズム`sndr`の[Receiver](basic-receiver.md.nolink)を[接続(connect)](connect.md)し、結果の[Operation State](operation_state.md)リストを[`product-type`](product-type.md)型にまとめて返す。
 
 ```cpp
 []&amp;lt;class Sndr, class Rcvr, size_t... Is&amp;gt;(
@@ -124,7 +124,7 @@ using indices-for = remove_reference_t&amp;lt;Sndr&amp;gt;::indices-for;  // exposition only
   }
 ```
 * index_sequence[link /reference/utility/index_sequence.md]
-* product-type[link product-type.md.nolink]
+* product-type[link product-type.md]
 * connect[link connect.md]
 * basic-receiver[link basic-receiver.md.nolink]
 * integral_constant[link /reference/type_traits/integral_constant.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>basic-sender -- execution: product-type (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/basic-sender.html"/>
      <id>b6538316195d92ec592dc5ad7335a4e3bd05a8d7:reference/execution/execution/basic-sender.md</id>
      <updated>2025-05-05T22:12:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/basic-sender.md b/reference/execution/execution/basic-sender.md
index f7a24b895..5339aa682 100644
--- a/reference/execution/execution/basic-sender.md
+++ b/reference/execution/execution/basic-sender.md
@@ -30,7 +30,7 @@ namespace std::execution {
   };
 }
 ```
-* product-type[link product-type.md.nolink]
+* product-type[link product-type.md]
 * sender_t[link sender.md]
 * index_sequence_for[link /reference/utility/index_sequence_for.md]
 * impls-for[link impls-for.md]
@@ -45,7 +45,7 @@ namespace std::execution {
 `basic-sender&amp;lt;Tag, Data, Child...&amp;gt;`は[`sender`](sender.md)のモデルであり、[Senderアルゴリズム構築](make-sender.md)の結果型として利用される。
 
 - `Tag` : [Senderアルゴリズムタグ](tag_of_t.md)（例：[`just`](just.md), [`then`](then.md.nolink)）
-- `Data` : Senderアルゴリズムに指定された追加の引数。複数個の引数は[`product-type`](product-type.md.nolink)型を用いて単一値として保持する。
+- `Data` : Senderアルゴリズムに指定された追加の引数。複数個の引数は[`product-type`](product-type.md)型を用いて単一値として保持する。
 - `Child` : 子Senderのリスト。Senderファクトリでは0個、Senderアダプタでは通常1個の子Senderを保持する。
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>just -- execution: product-type (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/just.html"/>
      <id>b6538316195d92ec592dc5ad7335a4e3bd05a8d7:reference/execution/execution/just.md</id>
      <updated>2025-05-05T22:12:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/just.md b/reference/execution/execution/just.md
index db4dad967..d4e168243 100644
--- a/reference/execution/execution/just.md
+++ b/reference/execution/execution/just.md
@@ -18,7 +18,7 @@ namespace std::execution {
 
 ## 効果
 - 呼び出し式`just(ts...)`は、`(`[`movable-value`](../movable-value.md)`&amp;lt;Ts&amp;gt; &amp;amp;&amp;amp;...) == false`のとき不適格となる。
-- そうでなければ、式[`make-sender`](make-sender.md)`(just,` [`product-type`](product-type.md.nolink)`{ts...})`と等価。
+- そうでなければ、式[`make-sender`](make-sender.md)`(just,` [`product-type`](product-type.md)`{ts...})`と等価。
 
 
 ### Senderアルゴリズムタグ `just`
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>make-sender -- execution: product-type (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/make-sender.html"/>
      <id>b6538316195d92ec592dc5ad7335a4e3bd05a8d7:reference/execution/execution/make-sender.md</id>
      <updated>2025-05-05T22:12:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/make-sender.md b/reference/execution/execution/make-sender.md
index a916dba62..5c2b8be44 100644
--- a/reference/execution/execution/make-sender.md
+++ b/reference/execution/execution/make-sender.md
@@ -16,7 +16,7 @@ constexpr auto make-sender(Tag tag, Data&amp;amp;&amp;amp; data, Child&amp;amp;&amp;amp;... child);
 [`sender`](sender.md)のモデルである説明専用クラステンプレート[`basic-sender`](basic-sender.md)のインスタンスを生成する。
 
 - `Tag` : [Senderアルゴリズムタグ](tag_of_t.md)（例：[`just`](just.md), [`then`](then.md.nolink)）
-- `Data` : Senderアルゴリズムに指定された追加の引数。複数個の引数は[`product-type`](product-type.md.nolink)型を用いて単一値として保持する。
+- `Data` : Senderアルゴリズムに指定された追加の引数。複数個の引数は[`product-type`](product-type.md)型を用いて単一値として保持する。
 - `Child` : 子Senderのリスト。Senderファクトリでは0個、Senderアダプタでは通常1個の子Senderを保持する。
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>product-type -- execution: product-type (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/product-type.html"/>
      <id>b6538316195d92ec592dc5ad7335a4e3bd05a8d7:reference/execution/execution/product-type.md</id>
      <updated>2025-05-05T22:12:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/product-type.md b/reference/execution/execution/product-type.md
new file mode 100644
index 000000000..7c2cd45bd
--- /dev/null
+++ b/reference/execution/execution/product-type.md
@@ -0,0 +1,72 @@
+# product-type
+* execution[meta header]
+* class template[meta id-type]
+* std::execution[meta namespace]
+* cpp26[meta cpp]
+
+```cpp
+template&amp;lt;class T0, class T1, ..., class Tn&amp;gt;
+struct product-type {  // exposition only
+  T0 t0;  // exposition only
+  T1 t1;  // exposition only
+  // ...
+  Tn tn;  // exposition only
+
+  template&amp;lt;size_t I, class Self&amp;gt;
+  constexpr decltype(auto) get(this Self&amp;amp;&amp;amp; self) noexcept;  // exposition only
+
+  template&amp;lt;class Self, class Fn&amp;gt;
+  constexpr decltype(auto) apply(this Self&amp;amp;&amp;amp; self, Fn&amp;amp;&amp;amp; fn) // exposition only
+    noexcept(see below);
+};
+```
+* see below[italic]
+
+## 概要
+`product-type`は、実行制御ライブラリの仕様定義で用いられる説明専用のクラステンプレートである。
+
+`product-type`型の式は[構造化束縛](/lang/cpp17/structured_bindings.md)における初期化子として利用できる。
+
+
+## クラス仕様
+```cpp
+template&amp;lt;size_t I, class Self&amp;gt;
+constexpr decltype(auto) get(this Self&amp;amp;&amp;amp; self) noexcept;
+```
+
+- 効果 : 下記と等価
+
+   ```cpp
+   auto&amp;amp; [...ts] = self;
+   return std::forward_like&amp;lt;Self&amp;gt;(ts...[I]);
+   ```
+
+```cpp
+template&amp;lt;class Self, class Fn&amp;gt;
+constexpr decltype(auto) apply(this Self&amp;amp;&amp;amp; self, Fn&amp;amp;&amp;amp; fn) noexcept(see below);
+```
+* see below[italic]
+
+- テンプレートパラメータ制約 : 下記`return`文の式が適格であること。
+- 効果 : 下記と等価
+
+    ```cpp
+    auto&amp;amp; [...ts] = self;
+    return std::forward&amp;lt;Fn&amp;gt;(fn)(std::forward_like&amp;lt;Self&amp;gt;(ts)...);
+    ```
+
+- 備考 : `noexcept`節の式は上記`return`文が潜在的に例外送出しないならば`true`に、そうでなければ`false`となる。
+
+
+## バージョン
+### 言語
+- C++26
+
+
+## 関連項目
+- [`basic-sender`](basic-sender.md)
+
+
+## 参照
+- [P2999R3 Sender Algorithm Customization](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p2999r3.html)
+- [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>basic-sender -- execution: movable-value (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/basic-sender.html"/>
      <id>ff009c0bd1c4202c152a95f4705a598b34c2f821:reference/execution/execution/basic-sender.md</id>
      <updated>2025-05-05T10:13:51+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/basic-sender.md b/reference/execution/execution/basic-sender.md
index 99c0e01c1..f7a24b895 100644
--- a/reference/execution/execution/basic-sender.md
+++ b/reference/execution/execution/basic-sender.md
@@ -63,7 +63,7 @@ is_nothrow_constructible_v&amp;lt;basic-operation&amp;lt;Self, Rcvr&amp;gt;, Self, Rcvr&amp;gt;
 
 説明専用のエイリアステンプレート`completion-signatures-for`は、下記の通り定義される。
 
-```
+```cpp
 template&amp;lt;class Sndr, class Env&amp;gt;
 using completion-signatures-for = see below;  // exposition only
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>just -- execution: movable-value (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/just.html"/>
      <id>ff009c0bd1c4202c152a95f4705a598b34c2f821:reference/execution/execution/just.md</id>
      <updated>2025-05-05T10:13:51+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/just.md b/reference/execution/execution/just.md
index 6bab6f104..db4dad967 100644
--- a/reference/execution/execution/just.md
+++ b/reference/execution/execution/just.md
@@ -17,7 +17,7 @@ namespace std::execution {
 
 
 ## 効果
-- 呼び出し式`just(ts...)`は、`(`[`movable-value`](movable-value.md.nolink)`&amp;lt;Ts&amp;gt; &amp;amp;&amp;amp;...) == false`のとき不適格となる。
+- 呼び出し式`just(ts...)`は、`(`[`movable-value`](../movable-value.md)`&amp;lt;Ts&amp;gt; &amp;amp;&amp;amp;...) == false`のとき不適格となる。
 - そうでなければ、式[`make-sender`](make-sender.md)`(just,` [`product-type`](product-type.md.nolink)`{ts...})`と等価。
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>make-sender -- execution: movable-value (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/make-sender.html"/>
      <id>ff009c0bd1c4202c152a95f4705a598b34c2f821:reference/execution/execution/make-sender.md</id>
      <updated>2025-05-05T10:13:51+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/make-sender.md b/reference/execution/execution/make-sender.md
index e25959418..a916dba62 100644
--- a/reference/execution/execution/make-sender.md
+++ b/reference/execution/execution/make-sender.md
@@ -22,7 +22,7 @@ constexpr auto make-sender(Tag tag, Data&amp;amp;&amp;amp; data, Child&amp;amp;&amp;amp;... child);
 
 ## 適格要件
 - [`semiregular`](/reference/concepts/semiregular.md)`&amp;lt;Tag&amp;gt; == true`
-- [`movable-value`](movable-value.md.nolink)`&amp;lt;Data&amp;gt; == true`
+- [`movable-value`](../movable-value.md)`&amp;lt;Data&amp;gt; == true`
 - `(`[`sender`](sender.md)`&amp;lt;Child&amp;gt; &amp;amp;&amp;amp; ...) == true`
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>movable-value -- execution: movable-value (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/movable-value.html"/>
      <id>ff009c0bd1c4202c152a95f4705a598b34c2f821:reference/execution/movable-value.md</id>
      <updated>2025-05-05T10:13:51+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/movable-value.md b/reference/execution/movable-value.md
new file mode 100644
index 000000000..39c5206fc
--- /dev/null
+++ b/reference/execution/movable-value.md
@@ -0,0 +1,32 @@
+# movable-value
+* execution[meta header]
+* concept[meta id-type]
+* std[meta namespace]
+* cpp26[meta cpp]
+
+```cpp
+namespace std {
+  template&amp;lt;class T&amp;gt;
+  concept movable-value =  // exposition only
+    move_constructible&amp;lt;decay_t&amp;lt;T&amp;gt;&amp;gt; &amp;amp;&amp;amp;
+    constructible_from&amp;lt;decay_t&amp;lt;T&amp;gt;, T&amp;gt; &amp;amp;&amp;amp;
+    (!is_array_v&amp;lt;remove_reference_t&amp;lt;T&amp;gt;&amp;gt;);
+}
+```
+* move_constructible[link /reference/concepts/move_constructible.md]
+* constructible_from[link /reference/concepts/constructible_from.md]
+* decay_t[link /reference/type_traits/decay.md]
+* is_array_v[link /reference/type_traits/is_array.md]
+* remove_reference_t[link /reference/type_traits/remove_reference.md]
+
+## 概要
+`movable-value`は、型`T`がムーブ構築可能な値であることを表す説明専用のコンセプトである。
+
+
+## バージョン
+### 言語
+- C++26
+
+
+## 参照
+- [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
</feed>
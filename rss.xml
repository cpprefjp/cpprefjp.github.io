<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2024-05-14T02:35:39.821931</updated>
  <id>757a1b3c-2eec-4228-8228-c8e22e5d190c</id>

  
    <entry>
      <title>description -- stacktrace_entryのクエリ関数 : 備考を追加</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/stacktrace_entry/description.html"/>
      <id>bdc9e06be50e4d7cd0b515219a34d3716b318eea:reference/stacktrace/stacktrace_entry/description.md</id>
      <updated>2024-05-14T11:31:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/stacktrace_entry/description.md b/reference/stacktrace/stacktrace_entry/description.md
index cdea0fe85..df22c7b73 100644
--- a/reference/stacktrace/stacktrace_entry/description.md
+++ b/reference/stacktrace/stacktrace_entry/description.md
@@ -22,6 +22,10 @@ string description() const; // (1) C++23
 内部のデータ構造、または結果文字列のためのメモリ確保ができない場合、[`std::bad_alloc`](/reference/new/bad_alloc.md)例外を送出する。
 
 
+## 備考
+- この関数はメモリ確保以外のエラーを「利用可能な情報がない」ものとして扱い、その場合は例外を送出しない
+
+
 ## 例
 ```cpp example
 #include &amp;lt;iostream&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>source_file -- stacktrace_entryのクエリ関数 : 備考を追加</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/stacktrace_entry/source_file.html"/>
      <id>bdc9e06be50e4d7cd0b515219a34d3716b318eea:reference/stacktrace/stacktrace_entry/source_file.md</id>
      <updated>2024-05-14T11:31:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/stacktrace_entry/source_file.md b/reference/stacktrace/stacktrace_entry/source_file.md
index b2951b1f7..7488b2429 100644
--- a/reference/stacktrace/stacktrace_entry/source_file.md
+++ b/reference/stacktrace/stacktrace_entry/source_file.md
@@ -22,6 +22,10 @@ string source_file() const; // (1) C++23
 内部のデータ構造、または結果文字列のためのメモリ確保ができない場合、[`std::bad_alloc`](/reference/new/bad_alloc.md)例外を送出する。
 
 
+## 備考
+- この関数はメモリ確保以外のエラーを「利用可能な情報がない」ものとして扱い、その場合は例外を送出しない
+
+
 ## 例
 ```cpp example
 #include &amp;lt;iostream&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>source_line -- stacktrace_entryのクエリ関数 : 備考を追加</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/stacktrace_entry/source_line.html"/>
      <id>bdc9e06be50e4d7cd0b515219a34d3716b318eea:reference/stacktrace/stacktrace_entry/source_line.md</id>
      <updated>2024-05-14T11:31:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/stacktrace_entry/source_line.md b/reference/stacktrace/stacktrace_entry/source_line.md
index c5278df5b..d6a9d62e7 100644
--- a/reference/stacktrace/stacktrace_entry/source_line.md
+++ b/reference/stacktrace/stacktrace_entry/source_line.md
@@ -24,6 +24,10 @@ uint_least32_t source_line() const; // (1) C++23
 内部のデータ構造のメモリ確保ができない場合、[`std::bad_alloc`](/reference/new/bad_alloc.md)例外を送出する。
 
 
+## 備考
+- この関数はメモリ確保以外のエラーを「利用可能な情報がない」ものとして扱い、その場合は例外を送出しない
+
+
 ## 例
 ```cpp example
 #include &amp;lt;iostream&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>print -- print/println : stdoutの例を改善</title>
      <link href="https://cpprefjp.github.io/reference/print/print.html"/>
      <id>92d7ba8fbc8ae96827a17cdee0e5f671554ebfa7:reference/print/print.md</id>
      <updated>2024-05-14T11:07:51+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/print/print.md b/reference/print/print.md
index 09e971a49..d23f0e61c 100644
--- a/reference/print/print.md
+++ b/reference/print/print.md
@@ -109,22 +109,23 @@ Hello 42 World
 ### モジュールをインポートする例
 ```cpp example
 import std;
-import std.compat;
+#include &amp;lt;cstdio&amp;gt;
 
 int main()
 {
-  std::print(&amp;#34;Hello {} World\n&amp;#34;, 42); // OK
+  std::print(&amp;#34;Hello {} World\n&amp;#34;, 42);
 
   // stdout / stderrはマクロとして定義される。
   // モジュールはマクロをエクスポートしないので、
-  // stdout / stderrは使用できない
-  // std::print(stdout, &amp;#34;Hello {} World\n&amp;#34;, 42); // エラー！stdoutが見つからない
+  // stdout / stderrを使用する場合は&amp;lt;cstdio&amp;gt;をインクルードする必要がある
+  std::println(stdout, &amp;#34;Hello {} World\n&amp;#34;, 42);
 }
 ```
 
 #### 出力
 ```
 Hello 42 World
+Hello 42 World
 ```
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>println -- print/println : stdoutの例を改善</title>
      <link href="https://cpprefjp.github.io/reference/print/println.html"/>
      <id>92d7ba8fbc8ae96827a17cdee0e5f671554ebfa7:reference/print/println.md</id>
      <updated>2024-05-14T11:07:51+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/print/println.md b/reference/print/println.md
index 9c005c6f0..969973215 100644
--- a/reference/print/println.md
+++ b/reference/print/println.md
@@ -77,22 +77,23 @@ Hello 42 World
 ### モジュールをインポートする例
 ```cpp example
 import std;
-import std.compat;
+#include &amp;lt;cstdio&amp;gt;
 
 int main()
 {
-  std::println(&amp;#34;Hello {} World&amp;#34;, 42); // OK
+  std::println(&amp;#34;Hello {} World&amp;#34;, 42);
 
   // stdout / stderrはマクロとして定義される。
   // モジュールはマクロをエクスポートしないので、
-  // stdout / stderrは使用できない
-  // std::println(stdout, &amp;#34;Hello {} World&amp;#34;, 42); // エラー！stdoutが見つからない
+  // stdout / stderrを使用する場合は&amp;lt;cstdio&amp;gt;をインクルードする必要がある
+  std::println(stdout, &amp;#34;Hello {} World&amp;#34;, 42);
 }
 ```
 
 #### 出力
 ```
 Hello 42 World
+Hello 42 World
 ```
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>print -- print関係の動作確認</title>
      <link href="https://cpprefjp.github.io/reference/ostream/print.html"/>
      <id>d6df9bd69cac139c32c816f9c33389b017405276:reference/ostream/print.md</id>
      <updated>2024-05-14T10:41:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ostream/print.md b/reference/ostream/print.md
index b0fe8d5cf..8b0f87013 100644
--- a/reference/ostream/print.md
+++ b/reference/ostream/print.md
@@ -94,10 +94,10 @@ Hello 42 World
 - C++23
 
 ### 処理系
-- [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [Clang](/implementation.md#clang): 19
+- [GCC](/implementation.md#gcc): 14
 - [ICC](/implementation.md#icc): ??
-- [Visual C++](/implementation.md#visual_cpp): ??
+- [Visual C++](/implementation.md#visual_cpp): 2022 Update 7
 
 
 ## 関連項目
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>println -- print関係の動作確認</title>
      <link href="https://cpprefjp.github.io/reference/ostream/println.html"/>
      <id>d6df9bd69cac139c32c816f9c33389b017405276:reference/ostream/println.md</id>
      <updated>2024-05-14T10:41:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ostream/println.md b/reference/ostream/println.md
index 3b9834ae4..d71760d28 100644
--- a/reference/ostream/println.md
+++ b/reference/ostream/println.md
@@ -62,10 +62,10 @@ Hello 42 World
 - C++23
 
 ### 処理系
-- [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [Clang](/implementation.md#clang): 19
+- [GCC](/implementation.md#gcc): 14
 - [ICC](/implementation.md#icc): ??
-- [Visual C++](/implementation.md#visual_cpp): ??
+- [Visual C++](/implementation.md#visual_cpp): 2022 Update 7
 
 
 ## 関連項目
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>vprint_nonunicode -- print関係の動作確認</title>
      <link href="https://cpprefjp.github.io/reference/ostream/vprint_nonunicode.html"/>
      <id>d6df9bd69cac139c32c816f9c33389b017405276:reference/ostream/vprint_nonunicode.md</id>
      <updated>2024-05-14T10:41:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ostream/vprint_nonunicode.md b/reference/ostream/vprint_nonunicode.md
index a2894b7f5..389bae194 100644
--- a/reference/ostream/vprint_nonunicode.md
+++ b/reference/ostream/vprint_nonunicode.md
@@ -41,10 +41,10 @@ namespace std {
 - C++23
 
 ### 処理系
-- [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [Clang](/implementation.md#clang): 19
+- [GCC](/implementation.md#gcc): 14
 - [ICC](/implementation.md#icc): ??
-- [Visual C++](/implementation.md#visual_cpp): ??
+- [Visual C++](/implementation.md#visual_cpp): 2022 Update 7
 
 
 ## 関連項目
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>vprint_unicode -- print関係の動作確認</title>
      <link href="https://cpprefjp.github.io/reference/ostream/vprint_unicode.html"/>
      <id>d6df9bd69cac139c32c816f9c33389b017405276:reference/ostream/vprint_unicode.md</id>
      <updated>2024-05-14T10:41:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ostream/vprint_unicode.md b/reference/ostream/vprint_unicode.md
index ecc6b6f57..28b93175b 100644
--- a/reference/ostream/vprint_unicode.md
+++ b/reference/ostream/vprint_unicode.md
@@ -53,10 +53,10 @@ namespace std {
 - C++23
 
 ### 処理系
-- [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [Clang](/implementation.md#clang): 19
+- [GCC](/implementation.md#gcc): 14
 - [ICC](/implementation.md#icc): ??
-- [Visual C++](/implementation.md#visual_cpp): ??
+- [Visual C++](/implementation.md#visual_cpp): 2022 Update 7
 
 
 ## 関連項目
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>print -- print関係の動作確認</title>
      <link href="https://cpprefjp.github.io/reference/print/print.html"/>
      <id>d6df9bd69cac139c32c816f9c33389b017405276:reference/print/print.md</id>
      <updated>2024-05-14T10:41:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/print/print.md b/reference/print/print.md
index d4f5dea23..09e971a49 100644
--- a/reference/print/print.md
+++ b/reference/print/print.md
@@ -132,10 +132,10 @@ Hello 42 World
 - C++23
 
 ### 処理系
-- [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [Clang](/implementation.md#clang): 19
+- [GCC](/implementation.md#gcc): 14
 - [ICC](/implementation.md#icc): ??
-- [Visual C++](/implementation.md#visual_cpp): ??
+- [Visual C++](/implementation.md#visual_cpp): 2022 Update 7
 
 
 ## 関連項目
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>println -- print関係の動作確認</title>
      <link href="https://cpprefjp.github.io/reference/print/println.html"/>
      <id>d6df9bd69cac139c32c816f9c33389b017405276:reference/print/println.md</id>
      <updated>2024-05-14T10:41:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/print/println.md b/reference/print/println.md
index 27f0d8dd2..9c005c6f0 100644
--- a/reference/print/println.md
+++ b/reference/print/println.md
@@ -100,10 +100,10 @@ Hello 42 World
 - C++23
 
 ### 処理系
-- [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [Clang](/implementation.md#clang): 19
+- [GCC](/implementation.md#gcc): 14
 - [ICC](/implementation.md#icc): ??
-- [Visual C++](/implementation.md#visual_cpp): ??
+- [Visual C++](/implementation.md#visual_cpp): 2022 Update 7
 
 
 ## 関連項目
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>vprint_nonunicode -- print関係の動作確認</title>
      <link href="https://cpprefjp.github.io/reference/print/vprint_nonunicode.html"/>
      <id>d6df9bd69cac139c32c816f9c33389b017405276:reference/print/vprint_nonunicode.md</id>
      <updated>2024-05-14T10:41:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/print/vprint_nonunicode.md b/reference/print/vprint_nonunicode.md
index d4d6fe31f..2d86cb036 100644
--- a/reference/print/vprint_nonunicode.md
+++ b/reference/print/vprint_nonunicode.md
@@ -51,10 +51,10 @@ namespace std {
 - C++23
 
 ### 処理系
-- [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [Clang](/implementation.md#clang): 19
+- [GCC](/implementation.md#gcc): 14
 - [ICC](/implementation.md#icc): ??
-- [Visual C++](/implementation.md#visual_cpp): ??
+- [Visual C++](/implementation.md#visual_cpp): 2022 Update 7
 
 
 ## 関連項目
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>vprint_unicode -- print関係の動作確認</title>
      <link href="https://cpprefjp.github.io/reference/print/vprint_unicode.html"/>
      <id>d6df9bd69cac139c32c816f9c33389b017405276:reference/print/vprint_unicode.md</id>
      <updated>2024-05-14T10:41:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/print/vprint_unicode.md b/reference/print/vprint_unicode.md
index bf5736b92..54d6984d3 100644
--- a/reference/print/vprint_unicode.md
+++ b/reference/print/vprint_unicode.md
@@ -66,10 +66,10 @@ namespace std {
 - C++23
 
 ### 処理系
-- [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [Clang](/implementation.md#clang): 19
+- [GCC](/implementation.md#gcc): 14
 - [ICC](/implementation.md#icc): ??
-- [Visual C++](/implementation.md#visual_cpp): ??
+- [Visual C++](/implementation.md#visual_cpp): 2022 Update 7
 
 
 ## 関連項目
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>stacktrace_entry -- stacktrace_entry : native_handleとoperator boolを追加</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/stacktrace_entry.html"/>
      <id>53ab5e996db66163a11ae4856253a7b8fa51dbec:reference/stacktrace/stacktrace_entry.md</id>
      <updated>2024-05-13T18:57:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/stacktrace_entry.md b/reference/stacktrace/stacktrace_entry.md
index eeb157aa7..8412dcdbc 100644
--- a/reference/stacktrace/stacktrace_entry.md
+++ b/reference/stacktrace/stacktrace_entry.md
@@ -28,8 +28,8 @@ namespace std {
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`native_handle`](stacktrace_entry/native_handle.md.nolink) | ハンドルを取得する | C++23 |
-| [`operator bool`](stacktrace_entry/op_bool.md.nolink) | 空でないかを判定する | C++23 |
+| [`native_handle`](stacktrace_entry/native_handle.md) | ハンドルを取得する | C++23 |
+| [`operator bool`](stacktrace_entry/op_bool.md) | 空でないかを判定する | C++23 |
 
 
 ### 照会
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>native_handle -- stacktrace_entry : native_handleとoperator boolを追加</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/stacktrace_entry/native_handle.html"/>
      <id>53ab5e996db66163a11ae4856253a7b8fa51dbec:reference/stacktrace/stacktrace_entry/native_handle.md</id>
      <updated>2024-05-13T18:57:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/stacktrace_entry/native_handle.md b/reference/stacktrace/stacktrace_entry/native_handle.md
new file mode 100644
index 000000000..d5b7f91cf
--- /dev/null
+++ b/reference/stacktrace/stacktrace_entry/native_handle.md
@@ -0,0 +1,65 @@
+# native_handle
+* stacktrace[meta header]
+* std[meta namespace]
+* stacktrace_entry[meta class]
+* function[meta id-type]
+* cpp23[meta cpp]
+
+```cpp
+constexpr native_handle_type native_handle() const noexcept; // (1) C++23
+```
+
+## 概要
+ハンドルを取得する。
+
+
+## 戻り値
+実装定義のハンドルを返す。
+
+
+## 備考
+- 変更されていない`stacktrace_entry`オブジェクトに対してこの関数を連続して呼び出すと、同じ値が返される
+- GCCでは、libstdc++の内部ライブラリ向けのポインタを整数値型[`std::uintptr_t`](/reference/cstdint/uintptr_t.md)の変換した型になっている
+    - `__glibcxx_backtrace_pcinfo()`など、内部ライブラリ用であるため、ユーザーがハンドルを便利に使えるようにはなっていない
+- MSVCでも内部ライブラリ向けの`void*`型ポインタになっている
+    - こちらも内部ライブラリ用であるため、ユーザーがハンドルを便利に使えるようにはなっていない
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;stacktrace&amp;gt;
+
+void g() {
+  std::stacktrace st = std::stacktrace::current();
+  std::stacktrace_entry entry = st[0];
+
+  std::cout &amp;lt;&amp;lt; entry.native_handle() &amp;lt;&amp;lt; std::endl;
+}
+
+void f() {
+  g();
+}
+
+int main() {
+  f();
+}
+```
+* entry.native_handle()[color ff0000]
+* std::stacktrace[link /reference/stacktrace/basic_stacktrace.md]
+* current[link /reference/stacktrace/basic_stacktrace/current.md]
+
+### 出力例 (GCC)
+```
+4199037
+```
+
+
+## バージョン
+### 言語
+- C++23
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): 12
+- [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator bool -- stacktrace_entry : native_handleとoperator boolを追加</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/stacktrace_entry/op_bool.html"/>
      <id>53ab5e996db66163a11ae4856253a7b8fa51dbec:reference/stacktrace/stacktrace_entry/op_bool.md</id>
      <updated>2024-05-13T18:57:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/stacktrace_entry/op_bool.md b/reference/stacktrace/stacktrace_entry/op_bool.md
new file mode 100644
index 000000000..28a6af0b3
--- /dev/null
+++ b/reference/stacktrace/stacktrace_entry/op_bool.md
@@ -0,0 +1,61 @@
+# operator bool
+* stacktrace[meta header]
+* std[meta namespace]
+* stacktrace_entry[meta class]
+* function[meta id-type]
+* cpp23[meta cpp]
+
+```cpp
+constexpr explicit operator bool() const noexcept; // (1) C++23
+```
+
+## 概要
+`stacktrace_entry`が空でないかを判定する。
+
+
+## 戻り値
+`*this`が空である場合のみ`false`を返す。
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;stacktrace&amp;gt;
+
+void g() {
+  std::stacktrace st = std::stacktrace::current();
+  std::stacktrace_entry entry = st[0];
+
+  if (entry) {
+    std::cout &amp;lt;&amp;lt; &amp;#34;not empty&amp;#34; &amp;lt;&amp;lt; std::endl;
+  }
+  else {
+    std::cout &amp;lt;&amp;lt; &amp;#34;empty&amp;#34; &amp;lt;&amp;lt; std::endl;
+  }
+}
+
+void f() {
+  g();
+}
+
+int main() {
+  f();
+}
+```
+* std::stacktrace[link /reference/stacktrace/basic_stacktrace.md]
+* current[link /reference/stacktrace/basic_stacktrace/current.md]
+
+### 出力
+```
+not empty
+```
+
+
+## バージョン
+### 言語
+- C++23
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): 12
+- [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>description -- コード修飾のミスを修正</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/stacktrace_entry/description.html"/>
      <id>b22d84d393aa1deb84ba6bc3566dbc9cc8c40389:reference/stacktrace/stacktrace_entry/description.md</id>
      <updated>2024-05-13T18:36:43+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/stacktrace_entry/description.md b/reference/stacktrace/stacktrace_entry/description.md
index a23b8ba6a..cdea0fe85 100644
--- a/reference/stacktrace/stacktrace_entry/description.md
+++ b/reference/stacktrace/stacktrace_entry/description.md
@@ -42,7 +42,7 @@ int main() {
   f();
 }
 ```
-* entry.source_file()[color ff0000]
+* entry.description()[color ff0000]
 * std::stacktrace[link /reference/stacktrace/basic_stacktrace.md]
 * current[link /reference/stacktrace/basic_stacktrace/current.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>source_line -- コード修飾のミスを修正</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/stacktrace_entry/source_line.html"/>
      <id>b22d84d393aa1deb84ba6bc3566dbc9cc8c40389:reference/stacktrace/stacktrace_entry/source_line.md</id>
      <updated>2024-05-13T18:36:43+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/stacktrace_entry/source_line.md b/reference/stacktrace/stacktrace_entry/source_line.md
index 0ddcb1d55..c5278df5b 100644
--- a/reference/stacktrace/stacktrace_entry/source_line.md
+++ b/reference/stacktrace/stacktrace_entry/source_line.md
@@ -44,7 +44,7 @@ int main() {
   f();
 }
 ```
-* entry.source_file()[color ff0000]
+* entry.source_line()[color ff0000]
 * std::stacktrace[link /reference/stacktrace/basic_stacktrace.md]
 * current[link /reference/stacktrace/basic_stacktrace/current.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2021-09-25T04:56:55.652468</updated>
  <id>473da0ee-e367-443f-afcf-c4f81e28864d</id>

  
    <entry>
      <title>output_range -- リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/output_range.html"/>
      <id>ea7e9f19651731a7cca6bfb869754f3c6fdda9ec:reference/ranges/output_range.md</id>
      <updated>2021-09-25T09:21:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/output_range.md b/reference/ranges/output_range.md
index 3427a3a1c..5b690747c 100644
--- a/reference/ranges/output_range.md
+++ b/reference/ranges/output_range.md
@@ -43,7 +43,7 @@ int main() {
 ```
 * ranges::output_range[color ff0000]
 * views::counted[link counted.md.nolink]
-* ostream_iterator[link reference/iterator/ostream_iterator.md]
+* ostream_iterator[link /reference/iterator/ostream_iterator.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>drop_view -- 構文エラー修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/drop_view.html"/>
      <id>9dcd70f11175a12bff1701d701acade1e450f3f8:reference/ranges/drop_view.md</id>
      <updated>2021-09-25T09:20:05+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/drop_view.md b/reference/ranges/drop_view.md
index 809d0e5a5..2219c0ace 100644
--- a/reference/ranges/drop_view.md
+++ b/reference/ranges/drop_view.md
@@ -42,7 +42,7 @@ namespace std {
 ## 効果
 
 - (2): `E`および`F`を式、型`T`を[`remove_cvref_t`](/reference/type_traits/remove_cvref.md)`&amp;lt;`[`decltype`](/lang/cpp11/decltype.md)`((E))&amp;gt;`、型`D`を[`range_difference_t`](range_difference_t.md)`&amp;lt;`[`decltype`](/lang/cpp11/decltype.md)`((E))&amp;gt;`とする。式`views::drop(E, F)`の効果は以下の通り
-    - [`decltype`](/lang/cpp11/decltype.md)`((F))`が[`convertible_to](/reference/concepts/convertible_to.md)`&amp;lt;D&amp;gt;`のモデルでなければ、呼び出しは不適格
+    - [`decltype`](/lang/cpp11/decltype.md)`((F))`が[`convertible_to`](/reference/concepts/convertible_to.md)`&amp;lt;D&amp;gt;`のモデルでなければ、呼び出しは不適格
     - `T`が[`ranges::empty_view`](empty_view.md)の特殊化であれば、`((void) F, `[`decay-copy`](/reference/exposition-only/decay-copy.md)`(E))`と等しい
     - `T`が[`random_access_range`](random_access_range.md)および[`sized_range`](sized_range.md)のモデルであり、かつ次のいずれかの特殊化であるとき、`T{`[`ranges::begin`](begin.md)`(E) + `[`min`](/reference/algorithm/min.md)`&amp;lt;D&amp;gt;(`[`ranges::size`](size.md)`(E), F), `[`ranges::end`](begin.md)`(E)}`と等しい。ただし、`E`は1度だけ評価される
         - [`span`](/reference/span/span.md) (ただし、`T::extent == `[`dynamic_extent`](/reference/span/dynamic_extent.md)であること)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>take_view -- 構文エラー修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/take_view.html"/>
      <id>9dcd70f11175a12bff1701d701acade1e450f3f8:reference/ranges/take_view.md</id>
      <updated>2021-09-25T09:20:05+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/take_view.md b/reference/ranges/take_view.md
index af290d114..78b4e9cf5 100644
--- a/reference/ranges/take_view.md
+++ b/reference/ranges/take_view.md
@@ -42,7 +42,7 @@ namespace std {
 ## 効果
 
 - (2): `E`および`F`を式、型`T`を[`remove_cvref_t`](/reference/type_traits/remove_cvref.md)`&amp;lt;`[`decltype`](/lang/cpp11/decltype.md)`((E))&amp;gt;`、型`D`を[`range_difference_t`](range_difference_t.md)`&amp;lt;`[`decltype`](/lang/cpp11/decltype.md)`((E))&amp;gt;`とする。式`views::take(E, F)`の効果は以下の通り
-    - [`decltype`](/lang/cpp11/decltype.md)`((F))`が[`convertible_to](/reference/concepts/convertible_to.md)`&amp;lt;D&amp;gt;`のモデルでなければ、呼び出しは不適格
+    - [`decltype`](/lang/cpp11/decltype.md)`((F))`が[`convertible_to`](/reference/concepts/convertible_to.md)`&amp;lt;D&amp;gt;`のモデルでなければ、呼び出しは不適格
     - `T`が[`ranges::empty_view`](empty_view.md)の特殊化であれば、`((void) F, `[`decay-copy`](/reference/exposition-only/decay-copy.md)`(E))`と等しい
     - `T`が[`random_access_range`](random_access_range.md)および[`sized_range`](sized_range.md)のモデルであり、かつ次のいずれかの特殊化であるとき、`T{`[`ranges::begin`](begin.md)`(E), `[`ranges::begin`](begin.md)`(E) + `[`min`](/reference/algorithm/min.md)`&amp;lt;D&amp;gt;(`[`ranges::size`](size.md)`(E), F)}`と等しい。ただし、`E`は1度だけ評価される
         - [`span`](/reference/span/span.md) (ただし、`T::extent == `[`dynamic_extent`](/reference/span/dynamic_extent.md)であること)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>common_iterator -- リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/common_iterator.html"/>
      <id>98278065e82b08dde907fb388b60096ffd606a88:reference/iterator/common_iterator.md</id>
      <updated>2021-09-25T09:18:06+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/common_iterator.md b/reference/iterator/common_iterator.md
index 2d8df7fa5..28f9ad745 100644
--- a/reference/iterator/common_iterator.md
+++ b/reference/iterator/common_iterator.md
@@ -114,7 +114,7 @@ int main() {
 ```
 * std::common_iterator[color ff0000]
 * views::iota[link /reference/ranges/iota_view.md]
-* views::take[link /reference/ranges/take_view.md.nolink]
+* views::take[link /reference/ranges/take_view.md]
 * iterator_t[link /reference/ranges/iterator_t.md]
 * sentinel_t[link /reference/ranges/sentinel_t.md]
 * ranges::begin[link /reference/ranges/begin.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/common_iterator/op_constructor.html"/>
      <id>98278065e82b08dde907fb388b60096ffd606a88:reference/iterator/common_iterator/op_constructor.md</id>
      <updated>2021-09-25T09:18:06+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/common_iterator/op_constructor.md b/reference/iterator/common_iterator/op_constructor.md
index 0a9ea28db..c6723f272 100644
--- a/reference/iterator/common_iterator/op_constructor.md
+++ b/reference/iterator/common_iterator/op_constructor.md
@@ -66,7 +66,7 @@ int main() {
 ```
 * std::common_iterator[color ff0000]
 * views::iota[link /reference/ranges/iota_view.md]
-* views::take[link /reference/ranges/take_view.md.nolink]
+* views::take[link /reference/ranges/take_view.md]
 * iterator_t[link /reference/ranges/iterator_t.md]
 * sentinel_t[link /reference/ranges/sentinel_t.md]
 * ranges::begin[link /reference/ranges/begin.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator* -- リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/common_iterator/op_deref.html"/>
      <id>98278065e82b08dde907fb388b60096ffd606a88:reference/iterator/common_iterator/op_deref.md</id>
      <updated>2021-09-25T09:18:06+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/common_iterator/op_deref.md b/reference/iterator/common_iterator/op_deref.md
index 9c257a189..04a8fce90 100644
--- a/reference/iterator/common_iterator/op_deref.md
+++ b/reference/iterator/common_iterator/op_deref.md
@@ -47,7 +47,7 @@ int main() {
 ```
 * *ci[color ff0000]
 * views::iota[link /reference/ranges/iota_view.md]
-* views::take[link /reference/ranges/take_view.md.nolink]
+* views::take[link /reference/ranges/take_view.md]
 * iterator_t[link /reference/ranges/iterator_t.md]
 * sentinel_t[link /reference/ranges/sentinel_t.md]
 * ranges::begin[link /reference/ranges/begin.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator== -- リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/common_iterator/op_equal.html"/>
      <id>98278065e82b08dde907fb388b60096ffd606a88:reference/iterator/common_iterator/op_equal.md</id>
      <updated>2021-09-25T09:18:06+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/common_iterator/op_equal.md b/reference/iterator/common_iterator/op_equal.md
index b38ec25e0..690e45778 100644
--- a/reference/iterator/common_iterator/op_equal.md
+++ b/reference/iterator/common_iterator/op_equal.md
@@ -85,7 +85,7 @@ int main() {
 }
 ```
 * views::iota[link /reference/ranges/iota_view.md]
-* views::take[link /reference/ranges/take_view.md.nolink]
+* views::take[link /reference/ranges/take_view.md]
 * iterator_t[link /reference/ranges/iterator_t.md]
 * sentinel_t[link /reference/ranges/sentinel_t.md]
 * ranges::begin[link /reference/ranges/begin.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator++ -- リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/common_iterator/op_increment.html"/>
      <id>98278065e82b08dde907fb388b60096ffd606a88:reference/iterator/common_iterator/op_increment.md</id>
      <updated>2021-09-25T09:18:06+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/common_iterator/op_increment.md b/reference/iterator/common_iterator/op_increment.md
index a2736cd30..d118441a9 100644
--- a/reference/iterator/common_iterator/op_increment.md
+++ b/reference/iterator/common_iterator/op_increment.md
@@ -64,7 +64,7 @@ int main() {
 ```
 * ++ci[color ff0000]
 * views::iota[link /reference/ranges/iota_view.md]
-* views::take[link /reference/ranges/take_view.md.nolink]
+* views::take[link /reference/ranges/take_view.md]
 * iterator_t[link /reference/ranges/iterator_t.md]
 * sentinel_t[link /reference/ranges/sentinel_t.md]
 * ranges::begin[link /reference/ranges/begin.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>counted_iterator -- リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/counted_iterator.html"/>
      <id>98278065e82b08dde907fb388b60096ffd606a88:reference/iterator/counted_iterator.md</id>
      <updated>2021-09-25T09:18:06+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/counted_iterator.md b/reference/iterator/counted_iterator.md
index 9ce2c7d11..a75053774 100644
--- a/reference/iterator/counted_iterator.md
+++ b/reference/iterator/counted_iterator.md
@@ -132,7 +132,7 @@ int main() {
 ## 関連項目
 
 - [`views::counted`](/reference/ranges/counted.md.nolink)
-- [`take_view`](/reference/ranges/take_view.md.nolink)
+- [`take_view`](/reference/ranges/take_view.md)
 
 ## 参照
 - [P0896R4 The One Ranges Proposal (was Merging the Ranges TS)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0896r4.pdf)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ranges -- &lt;ranges&gt; take_view, drop_viewを追加 #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges.html"/>
      <id>03210030276991aa7c0574c55b65b7cf7e872273:reference/ranges.md</id>
      <updated>2021-09-25T08:48:11+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges.md b/reference/ranges.md
index 21dfec9c9..bcd0bb678 100644
--- a/reference/ranges.md
+++ b/reference/ranges.md
@@ -192,10 +192,10 @@ range | adaptor(args...)
 
 ### take view
 
-| 名前                                      | 説明           | 対応バージョン |
-|-------------------------------------------|----------------|----------------|
-| [`take_view`](ranges/take_view.md.nolink) | 先頭から指定した個数だけ取り出すビュー (class template)     | C++20          |
-| [`take`](ranges/take.md.nolink)           | 先頭から指定した個数だけ取り出すビューを生成する (customization point object)  | C++20          |
+| 名前                               | 説明                                                                          | 対応バージョン |
+|------------------------------------|-------------------------------------------------------------------------------|----------------|
+| [`take_view`](ranges/take_view.md) | 先頭から指定した個数だけ取り出すビュー (class template)                       | C++20          |
+| [`take`](ranges/take_view.md)      | 先頭から指定した個数だけ取り出すビューを生成する (customization point object) | C++20          |
 
 ### take while view
 
@@ -206,10 +206,10 @@ range | adaptor(args...)
 
 ### drop view
 
-| 名前                                      | 説明           | 対応バージョン |
-|-------------------------------------------|----------------|----------------|
-| [`drop_view`](ranges/drop_view.md.nolink) | 先頭から指定した個数だけ除外するビュー (class template)     | C++20          |
-| [`drop`](ranges/drop.md.nolink)           | 先頭から指定した個数だけ除外するビューを生成する (customization point object)  | C++20          |
+| 名前                               | 説明                                                                          | 対応バージョン |
+|------------------------------------|-------------------------------------------------------------------------------|----------------|
+| [`drop_view`](ranges/drop_view.md) | 先頭から指定した個数だけ除外するビュー (class template)                       | C++20          |
+| [`drop`](ranges/drop_view.md)      | 先頭から指定した個数だけ除外するビューを生成する (customization point object) | C++20          |
 
 ### drop while view
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>drop_view -- &lt;ranges&gt; take_view, drop_viewを追加 #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges/drop_view.html"/>
      <id>03210030276991aa7c0574c55b65b7cf7e872273:reference/ranges/drop_view.md</id>
      <updated>2021-09-25T08:48:11+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/drop_view.md b/reference/ranges/drop_view.md
new file mode 100644
index 000000000..809d0e5a5
--- /dev/null
+++ b/reference/ranges/drop_view.md
@@ -0,0 +1,117 @@
+# drop_view
+* ranges[meta header]
+* std::ranges[meta namespace]
+* class template[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std {
+  namespace ranges {
+    template&amp;lt;view V&amp;gt;
+    class drop_view : public view_interface&amp;lt;drop_view&amp;lt;V&amp;gt;&amp;gt; { …… }; // (1)
+
+    namespace views {
+      inline constexpr /*unspecified*/ drop = /*unspecified*/;     // (2)
+    }
+  }
+
+  namespace views = ranges::views;
+}
+```
+* view[link view.md]
+* view_interface[link view_interface.md]
+
+## 概要
+- (1): 元のRangeの先頭から指定した個数の値を除去したRangeとして振る舞う[`view`](view.md)
+- (2): `drop_view`、または(1)の動作を実現する[`view`](view.md)を生成するRangeアダプタオブジェクト
+
+元のRangeの大きさを超える個数が指定された場合、`drop`が返す[`view`](view.md)は空になる。
+
+### Rangeコンセプト
+
+| borrowed | sized | output | input | forward | bidirectional | random_access | contiguous | common | viewable | view |
+|----------|-------|--------|-------|---------|---------------|---------------|------------|--------|----------|------|
+| (1)      | (1)   | (1)    | (1)   | (1)     | (1)           | (1)           | (1)        | (1)    | ○       | ○   |
+
+- (1): `V`に従う
+
+## テンプレートパラメータ制約
+
+- [`view`](view.md)`&amp;lt;V&amp;gt;`
+
+## 効果
+
+- (2): `E`および`F`を式、型`T`を[`remove_cvref_t`](/reference/type_traits/remove_cvref.md)`&amp;lt;`[`decltype`](/lang/cpp11/decltype.md)`((E))&amp;gt;`、型`D`を[`range_difference_t`](range_difference_t.md)`&amp;lt;`[`decltype`](/lang/cpp11/decltype.md)`((E))&amp;gt;`とする。式`views::drop(E, F)`の効果は以下の通り
+    - [`decltype`](/lang/cpp11/decltype.md)`((F))`が[`convertible_to](/reference/concepts/convertible_to.md)`&amp;lt;D&amp;gt;`のモデルでなければ、呼び出しは不適格
+    - `T`が[`ranges::empty_view`](empty_view.md)の特殊化であれば、`((void) F, `[`decay-copy`](/reference/exposition-only/decay-copy.md)`(E))`と等しい
+    - `T`が[`random_access_range`](random_access_range.md)および[`sized_range`](sized_range.md)のモデルであり、かつ次のいずれかの特殊化であるとき、`T{`[`ranges::begin`](begin.md)`(E) + `[`min`](/reference/algorithm/min.md)`&amp;lt;D&amp;gt;(`[`ranges::size`](size.md)`(E), F), `[`ranges::end`](begin.md)`(E)}`と等しい。ただし、`E`は1度だけ評価される
+        - [`span`](/reference/span/span.md) (ただし、`T::extent == `[`dynamic_extent`](/reference/span/dynamic_extent.md)であること)
+        - [`basic_string_view`](/reference/string_view/basic_string_view.md)
+        - [`ranges::iota_view`](iota_view.md)
+        - [`ranges::subrange`](subrange.md)
+    - それ以外のとき、`ranges::drop_view{E, F}`
+
+`drop_view`でラップする必要が無い型では`drop_view`を使わないようになっている。
+
+## メンバ関数
+
+| 名前                                             | 説明                             | 対応バージョン |
+|--------------------------------------------------|----------------------------------|----------------|
+| [`(constructor)`](drop_view/op_constructor.md.nolink)  | コンストラクタ                   | C++20          |
+| [`base`](drop_view/base.md.nolink)                     | `V`の参照を取得する              | C++20          |
+| [`begin`](drop_view/begin.md.nolink)                   | 先頭を指すイテレータを取得する   | C++20          |
+| [`end`](drop_view/end.md.nolink)                       | 番兵を取得する                   | C++20          |
+| [`size`](drop_view/size.md.nolink)                     | 要素数を取得する                 | C++20          |
+
+`r`を元のRangeとする。`size`は[`ranges::size`](size.md)`(r)`が有効な式であるときに定義される。
+
+## 継承しているメンバ関数
+
+| 名前                                         | 説明                              | 対応バージョン |
+|----------------------------------------------|-----------------------------------|----------------|
+| [`empty`](view_interface/empty.md)           | Rangeが空かどうかを判定する       | C++20          |
+| [`operator bool`](view_interface/op_bool.md) | Rangeが空でないかどうかを判定する | C++20          |
+| [`data`](view_interface/data.md)             | Rangeの先頭へのポインタを取得する | C++20          |
+| [`front`](view_interface/front.md)           | 先頭要素への参照を取得する        | C++20          |
+| [`back`](view_interface/back.md)             | 末尾要素への参照を取得する        | C++20          |
+| [`operator[]`](view_interface/op_at.md)      | 要素へアクセスする                | C++20          |
+
+## 推論補助
+
+| 名前                                                  | 説明                         | 対応バージョン |
+|-------------------------------------------------------|------------------------------|----------------|
+| [`(deduction_guide)`](drop_view/op_deduction_guide.md.nolink) | クラステンプレートの推論補助 | C++20          |
+
+## 例
+```cpp example
+#include &amp;lt;ranges&amp;gt;
+
+int main() {
+  using namespace std;
+
+  for (int i : views::iota(1, 10) | views::drop(5)) {
+    cout &amp;lt;&amp;lt; i;
+  }
+}
+```
+* views::drop[color ff0000]
+* views::iota[link iota_view.md]
+
+### 出力
+```
+6789
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 13.0.0
+- [GCC](/implementation.md#gcc): 10.1.0
+- [ICC](/implementation.md#icc): ?
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
+
+## 参照
+- [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
+- [C++20 ranges](https://techbookfest.org/product/5134506308665344)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>take_view -- &lt;ranges&gt; take_view, drop_viewを追加 #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges/take_view.html"/>
      <id>03210030276991aa7c0574c55b65b7cf7e872273:reference/ranges/take_view.md</id>
      <updated>2021-09-25T08:48:11+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/take_view.md b/reference/ranges/take_view.md
new file mode 100644
index 000000000..af290d114
--- /dev/null
+++ b/reference/ranges/take_view.md
@@ -0,0 +1,117 @@
+# take_view
+* ranges[meta header]
+* std::ranges[meta namespace]
+* class template[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std {
+  namespace ranges {
+    template&amp;lt;view V&amp;gt;
+    class take_view : public view_interface&amp;lt;take_view&amp;lt;V&amp;gt;&amp;gt; { …… }; // (1)
+
+    namespace views {
+      inline constexpr /*unspecified*/ take = /*unspecified*/;     // (2)
+    }
+  }
+
+  namespace views = ranges::views;
+}
+```
+* view[link view.md]
+* view_interface[link view_interface.md]
+
+## 概要
+- (1): 元のRangeの先頭から指定した個数の値を取り出す[`view`](view.md)
+- (2): `take_view`、または(1)の動作を実現する[`view`](view.md)を生成するRangeアダプタオブジェクト
+
+`take`で得られる[`view`](view.md)の大きさは、指定した個数に関わらず、元のRangeの大きさを超えることは無い。
+
+### Rangeコンセプト
+
+| borrowed | sized | output | input | forward | bidirectional | random_access | contiguous | common | viewable | view |
+|----------|-------|--------|-------|---------|---------------|---------------|------------|--------|----------|------|
+| (1)      | (1)   | (1)    | (1)   | (1)     | (1)           | (1)           | (1)        | (1)    | ○       | ○   |
+
+- (1): `V`に従う
+
+## テンプレートパラメータ制約
+
+- [`view`](view.md)`&amp;lt;V&amp;gt;`
+
+## 効果
+
+- (2): `E`および`F`を式、型`T`を[`remove_cvref_t`](/reference/type_traits/remove_cvref.md)`&amp;lt;`[`decltype`](/lang/cpp11/decltype.md)`((E))&amp;gt;`、型`D`を[`range_difference_t`](range_difference_t.md)`&amp;lt;`[`decltype`](/lang/cpp11/decltype.md)`((E))&amp;gt;`とする。式`views::take(E, F)`の効果は以下の通り
+    - [`decltype`](/lang/cpp11/decltype.md)`((F))`が[`convertible_to](/reference/concepts/convertible_to.md)`&amp;lt;D&amp;gt;`のモデルでなければ、呼び出しは不適格
+    - `T`が[`ranges::empty_view`](empty_view.md)の特殊化であれば、`((void) F, `[`decay-copy`](/reference/exposition-only/decay-copy.md)`(E))`と等しい
+    - `T`が[`random_access_range`](random_access_range.md)および[`sized_range`](sized_range.md)のモデルであり、かつ次のいずれかの特殊化であるとき、`T{`[`ranges::begin`](begin.md)`(E), `[`ranges::begin`](begin.md)`(E) + `[`min`](/reference/algorithm/min.md)`&amp;lt;D&amp;gt;(`[`ranges::size`](size.md)`(E), F)}`と等しい。ただし、`E`は1度だけ評価される
+        - [`span`](/reference/span/span.md) (ただし、`T::extent == `[`dynamic_extent`](/reference/span/dynamic_extent.md)であること)
+        - [`basic_string_view`](/reference/string_view/basic_string_view.md)
+        - [`ranges::iota_view`](iota_view.md)
+        - [`ranges::subrange`](subrange.md)
+    - それ以外のとき、`ranges::take_view{E, F}`
+
+`take_view`でラップする必要が無い型では`take_view`を使わないようになっている。
+
+## メンバ関数
+
+| 名前                                             | 説明                             | 対応バージョン |
+|--------------------------------------------------|----------------------------------|----------------|
+| [`(constructor)`](take_view/op_constructor.md.nolink)  | コンストラクタ                   | C++20          |
+| [`base`](take_view/base.md.nolink)                     | `V`の参照を取得する              | C++20          |
+| [`begin`](take_view/begin.md.nolink)                   | 先頭を指すイテレータを取得する   | C++20          |
+| [`end`](take_view/end.md.nolink)                       | 番兵を取得する                   | C++20          |
+| [`size`](take_view/size.md.nolink)                     | 要素数を取得する                 | C++20          |
+
+`r`を元のRangeとする。`size`は[`ranges::size`](size.md)`(r)`が有効な式であるときに定義される。
+
+## 継承しているメンバ関数
+
+| 名前                                         | 説明                              | 対応バージョン |
+|----------------------------------------------|-----------------------------------|----------------|
+| [`empty`](view_interface/empty.md)           | Rangeが空かどうかを判定する       | C++20          |
+| [`operator bool`](view_interface/op_bool.md) | Rangeが空でないかどうかを判定する | C++20          |
+| [`data`](view_interface/data.md)             | Rangeの先頭へのポインタを取得する | C++20          |
+| [`front`](view_interface/front.md)           | 先頭要素への参照を取得する        | C++20          |
+| [`back`](view_interface/back.md)             | 末尾要素への参照を取得する        | C++20          |
+| [`operator[]`](view_interface/op_at.md)      | 要素へアクセスする                | C++20          |
+
+## 推論補助
+
+| 名前                                                  | 説明                         | 対応バージョン |
+|-------------------------------------------------------|------------------------------|----------------|
+| [`(deduction_guide)`](take_view/op_deduction_guide.md.nolink) | クラステンプレートの推論補助 | C++20          |
+
+## 例
+```cpp example
+#include &amp;lt;ranges&amp;gt;
+
+int main() {
+  using namespace std;
+
+  for (int i : views::iota(1) | views::take(5)) {
+    cout &amp;lt;&amp;lt; i;
+  }
+}
+```
+* views::take[color ff0000]
+* views::iota[link iota_view.md]
+
+### 出力
+```
+12345
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 13.0.0
+- [GCC](/implementation.md#gcc): 10.1.0
+- [ICC](/implementation.md#icc): ?
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
+
+## 参照
+- [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
+- [C++20 ranges](https://techbookfest.org/product/5134506308665344)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>transform_view -- &lt;ranges&gt; take_view, drop_viewを追加 #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges/transform_view.html"/>
      <id>03210030276991aa7c0574c55b65b7cf7e872273:reference/ranges/transform_view.md</id>
      <updated>2021-09-25T08:48:11+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/transform_view.md b/reference/ranges/transform_view.md
index 6542bc238..607deaef9 100644
--- a/reference/ranges/transform_view.md
+++ b/reference/ranges/transform_view.md
@@ -67,7 +67,7 @@ namespace std {
 | [`end`](transform_view/end.md.nolink)                       | 番兵を取得する                   | C++20          |
 | [`size`](transform_view/size.md.nolink)                     | 要素数を取得する                 | C++20          |
 
-`r`を元のRangeとする。`size`、`data`は、それぞれ[`ranges::size`](size.md)`(r)`、[`ranges::data`](data.md)`(r)`が有効な式であるときに定義される。
+`r`を元のRangeとする。`size`は[`ranges::size`](size.md)`(r)`が有効な式であるときに定義される。
 
 ## 継承しているメンバ関数
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;&lt; -- string_view operator&lt;&lt; : テンプレートパラメータ名を統一</title>
      <link href="https://cpprefjp.github.io/reference/string_view/basic_string_view/op_ostream.html"/>
      <id>972d9eef12df5d22895beb29c7c5151be96a23c0:reference/string_view/basic_string_view/op_ostream.md</id>
      <updated>2021-09-24T15:36:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string_view/basic_string_view/op_ostream.md b/reference/string_view/basic_string_view/op_ostream.md
index 230f0a952..2ae0c4d97 100644
--- a/reference/string_view/basic_string_view/op_ostream.md
+++ b/reference/string_view/basic_string_view/op_ostream.md
@@ -8,7 +8,7 @@
 namespace std {
   template &amp;lt;class CharT, class Traits&amp;gt;
   std::basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp;
-    operator&amp;lt;&amp;lt;(std::basic_ostream&amp;lt;charT, traits&amp;gt;&amp;amp; os, std::basic_string_view&amp;lt;CharT, Traits&amp;gt; sv);
+    operator&amp;lt;&amp;lt;(std::basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; os, std::basic_string_view&amp;lt;CharT, Traits&amp;gt; sv);
 }
 ```
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
</feed>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2023-02-09T02:15:34.289945</updated>
  <id>9e34a970-6702-4abf-8677-adca05a1bf1a</id>

  
    <entry>
      <title>コンパイラの実装状況 -- Updated ICC ver for C++20</title>
      <link href="https://cpprefjp.github.io/implementation-status.html"/>
      <id>44a8e478d43dcbbc5711c05570cf15be16a451f1:implementation-status.md</id>
      <updated>2023-02-09T11:11:22+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;コンパイラの実装状況&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;このページでは、C++のバージョンごとの言語機能を、どのコンパイラがどのバージョンからサポートしているかをまとめる。&lt;/p&gt;
&lt;p&gt;ライブラリ機能については、本サイトのリファレンスで各機能を参照してもらいたい。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation-status.html#cpp11&#34;&gt;C++11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation-status.html#cpp14&#34;&gt;C++14&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation-status.html#cpp17&#34;&gt;C++17&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation-status.html#cpp20&#34;&gt;C++20&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation-status.html#cpp23&#34;&gt;C++23&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation-status.html#cpp11&#34; id=&#34;cpp11&#34;&gt;C++11言語機能の実装状況&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;言語機能&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;MSVC&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;N2341: &lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/alignas.html&#34;&gt;alignas&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;アライメント指定&lt;/td&gt;
&lt;td&gt;4.8&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2015&lt;br /&gt;2003あるいはそれ以前からある&lt;code&gt;__declspec(align(x))&lt;/code&gt;構文で代替可能。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2341: &lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/alignof.html&#34;&gt;alignof&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;アライメント取得&lt;/td&gt;
&lt;td&gt;4.5&lt;/td&gt;
&lt;td&gt;3.3&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2015&lt;br /&gt;2003あるいはそれ以前よりある&lt;code&gt;__alignof&lt;/code&gt;で代替可能。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N1984: &lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/auto.html&#34;&gt;auto&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;型推論&lt;/td&gt;
&lt;td&gt;4.4&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;2010&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2343: &lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/decltype.html&#34;&gt;decltype&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;式の型を取得&lt;/td&gt;
&lt;td&gt;4.3&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;13.0&lt;/td&gt;
&lt;td&gt;2010 (partial)&lt;br /&gt; 2012&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N1653: C99互換のプリプロセッサ&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/variadic_macros.html&#34;&gt;可変引数マクロ&lt;/a&gt;、&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/pragma_operator.html&#34;&gt;Pragma演算子&lt;/a&gt;、&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/func.html&#34;&gt;__func__&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;4.3&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.1&lt;/td&gt;
&lt;td&gt;2005 (partial): 可変引数のみ &lt;code&gt;_Pragma&lt;/code&gt;の代わりに&lt;code&gt;__pragma&lt;/code&gt;が存在する。&lt;br /&gt; 2019 Update 6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2235: &lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/constexpr.html&#34;&gt;constexpr&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;定数式&lt;/td&gt;
&lt;td&gt;4.6&lt;/td&gt;
&lt;td&gt;3.1&lt;/td&gt;
&lt;td&gt;13.0 (partial)&lt;br /&gt; 14.0&lt;/td&gt;
&lt;td&gt;2015 (partial)&lt;br /&gt; 2015 Update 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2346: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/defaulted_and_deleted_functions.html&#34;&gt;関数の&lt;code&gt;default/delete&lt;/code&gt;宣言&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;自動定義される特殊関数の制御&lt;/td&gt;
&lt;td&gt;4.4&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;2013: ムーブコンストラクタ・ムーブ代入演算子の&lt;code&gt;default&lt;/code&gt;は不可&lt;br /&gt; 2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N1986: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/delegating_constructors.html&#34;&gt;委譲コンストラクタ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コンストラクタから他のコンストラクタに処理を委譲する&lt;/td&gt;
&lt;td&gt;4.7&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2437: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/explicit_conversion_operator.html&#34;&gt;明示的な型変換演算子のオーバーロード&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;明示的な型変換が行われる場合にのみ呼び出される演算子をオーバーロードできるようにする&lt;/td&gt;
&lt;td&gt;4.5&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N1791: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/extend_friend_targets.html&#34;&gt;&lt;code&gt;friend&lt;/code&gt;宣言できる対象を拡張&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;テンプレートパラメータや型の別名を&lt;code&gt;friend&lt;/code&gt;宣言&lt;/td&gt;
&lt;td&gt;4.7&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.1 (partial) &lt;br /&gt; 12.0&lt;/td&gt;
&lt;td&gt;2010&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N1987: &lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/extern_template.html&#34;&gt;extern template&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;テンプレートのインスタンス化抑止&lt;/td&gt;
&lt;td&gt;3.3&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.1&lt;/td&gt;
&lt;td&gt;6.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2540: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/inheriting_constructors.html&#34;&gt;継承コンストラクタ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;基底クラスのコンストラクタを継承する&lt;/td&gt;
&lt;td&gt;4.8&lt;/td&gt;
&lt;td&gt;3.3&lt;/td&gt;
&lt;td&gt;15.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2927: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/lambda_expressions.html&#34;&gt;ラムダ式&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;関数オブジェクトをその場に書く&lt;/td&gt;
&lt;td&gt;4.5&lt;/td&gt;
&lt;td&gt;3.1&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;2010 (partial)&lt;br /&gt; 2012&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2657: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/local_and_unnamed_type_as_template_arguments.html&#34;&gt;ローカル型と無名型を、テンプレート引数として使用することを許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ローカルおよび無名として定義したクラスや列挙型を、テンプレート引数として渡せるようにする&lt;/td&gt;
&lt;td&gt;4.5&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;2010&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N1811: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/long_long_type.html&#34;&gt;&lt;code&gt;long long&lt;/code&gt;型&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;64ビット以上の大きさを持つ整数型&lt;/td&gt;
&lt;td&gt;4.3&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.1&lt;/td&gt;
&lt;td&gt;2003&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2535: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/inline_namespaces.html&#34;&gt;インライン名前空間&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ネストした名前空間に、透過的にアクセスする&lt;/td&gt;
&lt;td&gt;4.4&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2249: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/char16_32.html&#34;&gt;&lt;code&gt;char16_t&lt;/code&gt;と&lt;code&gt;char32_t&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;UTF-16とUTF-32の文字型&lt;/td&gt;
&lt;td&gt;4.4&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;12.1 (Windows: partial) &lt;br /&gt; 12.1 (GNU/Linux, macOS)&lt;br /&gt; 14.0&lt;/td&gt;
&lt;td&gt;2015&lt;br /&gt; 2010より組み込み型ではなく型の別名として存在する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2442: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/utf8_string_literals.html&#34;&gt;UTF-8文字列リテラル&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;char&lt;/code&gt;の文字列をUTF-8エンコーディングするプレフィックス&lt;/td&gt;
&lt;td&gt;4.5&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;12.1 (Windows: partial) &lt;br /&gt; 12.1 (GNU/Linux, macOS)&lt;br /&gt; 14.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2442: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/raw_string_literals.html&#34;&gt;生文字列リテラル&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;文字列リテラルにRプレフィックスを付けることで、エスケープシーケンスを無視する&lt;/td&gt;
&lt;td&gt;4.5&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2765: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/user_defined_literals.html&#34;&gt;ユーザー定義リテラル&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;リテラルのサフィックスをユーザー定義する&lt;/td&gt;
&lt;td&gt;4.7&lt;/td&gt;
&lt;td&gt;3.1&lt;/td&gt;
&lt;td&gt;15.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2541: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/trailing_return_types.html&#34;&gt;戻り値の型を後置する関数宣言構文&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;以下のような形式での関数宣言&lt;br /&gt; &lt;code&gt;auto f(arg_types...) -&amp;gt; return_type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;4.4&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;2010&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2431: &lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/nullptr.html&#34;&gt;nullptr&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ヌルポインタを表すポインタリテラル&lt;/td&gt;
&lt;td&gt;4.6&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;11.1&lt;/td&gt;
&lt;td&gt;2010&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N1757: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/right_angle_brackets.html&#34;&gt;テンプレートの右山カッコ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vector&amp;lt;basic_string&amp;lt;char&amp;gt;&amp;gt;&lt;/code&gt;のように、&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;をスペースを空けずに記述可能にする&lt;/td&gt;
&lt;td&gt;4.3&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.1&lt;/td&gt;
&lt;td&gt;2005&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2118: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/rvalue_ref_and_move_semantics.html&#34;&gt;右辺値参照・ムーブセマンティクス&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;右辺値によるオーバーロード、およびそれによるリソースの所有権移動&lt;/td&gt;
&lt;td&gt;4.3 (partial)&lt;br /&gt; 4.6&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;2010 (partial) ムーブコンストラクタと代入演算子の暗黙定義に対応していない。&lt;br /&gt; 2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N1720: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/static_assert.html&#34;&gt;コンパイル時アサート&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コンパイル時に条件式が真であることを表明する&lt;/td&gt;
&lt;td&gt;4.3&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.1&lt;/td&gt;
&lt;td&gt;2010&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2347: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/scoped_enum.html#extended-unscoped-enum&#34;&gt;&lt;code&gt;enum&lt;/code&gt;の先行宣言&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;4.6&lt;/td&gt;
&lt;td&gt;3.1&lt;/td&gt;
&lt;td&gt;11.1 (partial)&lt;br /&gt; 14.0&lt;/td&gt;
&lt;td&gt;2012&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2347: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/scoped_enum.html&#34;&gt;スコープを持つ列挙型&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;強い型付けとスコープを持つ列挙型&lt;/td&gt;
&lt;td&gt;4.4&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.1 (partial)&lt;br /&gt; 14.0&lt;/td&gt;
&lt;td&gt;2012&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2258: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/alias_templates.html&#34;&gt;エイリアステンプレート&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;テンプレートによって型の別名を定義する&lt;/td&gt;
&lt;td&gt;4.7&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;12.1&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2544: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/unrestricted_unions.html&#34;&gt;共用体の制限解除&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;共用体のメンバ変数として、クラスオブジェクトを持つ&lt;/td&gt;
&lt;td&gt;4.6&lt;/td&gt;
&lt;td&gt;3.1&lt;/td&gt;
&lt;td&gt;14.0(Linux系OSおよびMacのみ。Windowsは非対応)&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2242: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/variadic_templates.html&#34;&gt;可変引数テンプレート&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;任意の数のテンプレートパラメータを受け取れるようにする&lt;/td&gt;
&lt;td&gt;4.3 (partial)&lt;br /&gt; 4.4&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;12.1&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2930: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/range_based_for.html&#34;&gt;範囲for文&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;配列やコンテナといった範囲を表すオブジェクトを、簡潔に走査する&lt;/td&gt;
&lt;td&gt;4.6&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;13.0&lt;/td&gt;
&lt;td&gt;2012&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2928: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/override_final.html&#34;&gt;&lt;code&gt;override&lt;/code&gt;と&lt;code&gt;final&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;メンバ関数のオーバーライド指定、および派生クラスでのオーバーロードを禁止する指定&lt;/td&gt;
&lt;td&gt;4.7&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;2005 (partial): &lt;code&gt;override&lt;/code&gt;のみ。&lt;code&gt;final&lt;/code&gt;の代わりにsealedが存在する。ただし両者ともデストラクタには指定できない。&lt;br /&gt; 2012&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2761: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/attributes.html&#34;&gt;属性構文&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[[attr]]&lt;/code&gt;構文による、クラス、関数、変数の属性指定&lt;/td&gt;
&lt;td&gt;4.8&lt;/td&gt;
&lt;td&gt;3.3&lt;/td&gt;
&lt;td&gt;12.1&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2439: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/ref_qualifier_for_this.html&#34;&gt;メンバ関数の左辺値／右辺値修飾&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;オブジェクトが左辺値／右辺値の場合のみ呼び出し可能であることの指定&lt;/td&gt;
&lt;td&gt;4.8.1&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2756: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/non_static_data_member_initializers.html&#34;&gt;非静的メンバ変数の初期化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;メンバ変数を、宣言と同時に初期値指定する&lt;/td&gt;
&lt;td&gt;4.7&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2672: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/initializer_lists.html&#34;&gt;初期化子リスト&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;波括弧による初期化をユーザー定義する。&lt;code&gt;vector&amp;lt;int&amp;gt; v = {1, 2, 3};&lt;/code&gt;など。&lt;/td&gt;
&lt;td&gt;4.4&lt;/td&gt;
&lt;td&gt;3.1&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2672: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/uniform_initialization.html&#34;&gt;一様初期化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コンストラクタ呼び出しを波カッコで行う。 &lt;code&gt;T x { a, b, c };&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;4.4&lt;/td&gt;
&lt;td&gt;3.1&lt;/td&gt;
&lt;td&gt;13.0(partial)&lt;br /&gt; 14.0&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N3050: &lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/noexcept.html&#34;&gt;noexcept&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;関数の例外指定、例外を投げる可能性のある式かbool値を返す演算子&lt;/td&gt;
&lt;td&gt;4.6&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;13.0(partial)&lt;br /&gt;14.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2634: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/sfinae_expressions.html&#34;&gt;任意の式によるSFINAE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;特定の式が有効かどうかで、その関数をオーバーロード解決に含めるかどうかを決定する&lt;/td&gt;
&lt;td&gt;4.4&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;2015 Update 1 (partial)&lt;br /&gt; 2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2659: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/thread_local_storage.html&#34;&gt;スレッドローカルストレージ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;スレッドごとに異なる静的記憶域に保持される変数&lt;/td&gt;
&lt;td&gt;4.8&lt;/td&gt;
&lt;td&gt;3.3&lt;/td&gt;
&lt;td&gt;11.1 (partial)&lt;/td&gt;
&lt;td&gt;2010&lt;br /&gt; &lt;code&gt;__declspec(thread)&lt;/code&gt;属性での部分サポート&lt;br /&gt; 2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2660: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/static_initialization_thread_safely.html&#34;&gt;ブロックスコープを持つ&lt;code&gt;static&lt;/code&gt;変数初期化のスレッドセーフ化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;関数ローカルで定義した&lt;code&gt;static&lt;/code&gt;変数の初期化を、スレッドセーフにする&lt;/td&gt;
&lt;td&gt;4.3&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.0 (Lnux/macOS)&lt;br /&gt; 14.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;各処理系のC++11実装状況ページ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;全体的な対応状況： &lt;a href=&#34;http://web.archive.org/web/20160327011707/https://wiki.apache.org/stdcxx/C++0xCompilerSupport&#34; target=&#34;_blank&#34;&gt;C++0xCompilerSupport&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GCC： &lt;a href=&#34;https://gcc.gnu.org/projects/cxx-status.html#cxx11&#34; target=&#34;_blank&#34;&gt;C++11 Support in GCC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;libstdc++ : &lt;a href=&#34;https://gcc.gnu.org/onlinedocs/libstdc++/manual/status.html#status.iso.2011&#34; target=&#34;_blank&#34;&gt;C++ 2011&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Clang： &lt;a href=&#34;http://clang.llvm.org/cxx_status.html&#34; target=&#34;_blank&#34;&gt;C++98 and C++11 Support in Clang&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://clang.llvm.org/cxx_dr_status.html&#34; target=&#34;_blank&#34;&gt;C++ Defect Report Support in Clang&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ICC : &lt;a href=&#34;https://software.intel.com/en-us/articles/c0x-features-supported-by-intel-c-compiler&#34; target=&#34;_blank&#34;&gt;C++11 Features Supported by Intel® C++ Compiler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Visual C++ (MSVC):&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/ja-jp/cpp/visual-cpp-language-conformance&#34; target=&#34;_blank&#34;&gt;Visual C++ 言語への準拠&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/vcblog/2018/05/07/announcing-msvc-conforms-to-the-c-standard/&#34; target=&#34;_blank&#34;&gt;Announcing: MSVC Conforms to the C++ Standard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation-status.html#cpp14&#34; id=&#34;cpp14&#34;&gt;C++14言語機能の実装状況&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;言語機能&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;MSVC&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;N3472: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp14/binary_literals.html&#34;&gt;2進数リテラル&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2進数を表す&lt;code&gt;0b&lt;/code&gt; or &lt;code&gt;0B&lt;/code&gt;プレフィックスを付けた数値リテラルの記述を可能とする&lt;/td&gt;
&lt;td&gt;4.3(GNU)&lt;br /&gt; 4.9&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N3638: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp14/return_type_deduction_for_normal_functions.html&#34;&gt;通常関数の戻り値型推論&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;関数の戻り値型を&lt;code&gt;auto&lt;/code&gt;にすることで、&lt;code&gt;return&lt;/code&gt;文から戻り値の型を推論させる&lt;/td&gt;
&lt;td&gt;4.8(partial)&lt;br /&gt;4.9&lt;/td&gt;
&lt;td&gt;3.3(partial)&lt;br /&gt; 3.4&lt;/td&gt;
&lt;td&gt;15.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N3648: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp14/initialize_capture.html&#34;&gt;ラムダ式の初期化キャプチャ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;キャプチャに代入構文を導入し、一つの変数に複数のキャプチャ方法を指定可能にする&lt;/td&gt;
&lt;td&gt;4.9&lt;/td&gt;
&lt;td&gt;3.4&lt;/td&gt;
&lt;td&gt;15.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N3649: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp14/generic_lambdas.html&#34;&gt;ジェネリックラムダ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ラムダ式のパラメータを&lt;code&gt;auto&lt;/code&gt;にすることで、ジェネリックな関数呼び出し演算子を持つ関数オブジェクトを生成する&lt;/td&gt;
&lt;td&gt;4.9&lt;/td&gt;
&lt;td&gt;3.4&lt;/td&gt;
&lt;td&gt;16.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N3651: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp14/variable_templates.html&#34;&gt;変数テンプレート&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;変数定義時のテンプレート指定を可能にする。&lt;/td&gt;
&lt;td&gt;5.1&lt;/td&gt;
&lt;td&gt;3.4&lt;/td&gt;
&lt;td&gt;16.0&lt;/td&gt;
&lt;td&gt;2015 Update 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N3652: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp14/relaxing_constraints_on_constexpr.html&#34;&gt;&lt;code&gt;constexpr&lt;/code&gt;の制限緩和&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;if&lt;/code&gt;文、&lt;code&gt;switch&lt;/code&gt;文による条件分岐の許可。&lt;br /&gt;&lt;code&gt;for&lt;/code&gt;文、&lt;code&gt;while&lt;/code&gt;文、&lt;code&gt;do-while&lt;/code&gt;文によるループの許可。&lt;br /&gt;&lt;code&gt;void&lt;/code&gt;戻り値型の許可&lt;br /&gt;初期化を伴う変数宣言の許可。&lt;br /&gt;変数書き換えの許可。&lt;/td&gt;
&lt;td&gt;5.1&lt;/td&gt;
&lt;td&gt;3.3(partial) &lt;br /&gt; 3.4&lt;/td&gt;
&lt;td&gt;16.0&lt;/td&gt;
&lt;td&gt;2017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N3653: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp14/brace_elision_in_array_temporary_initialization.html&#34;&gt;宣言時のメンバ初期化を持つ型の集成体初期化を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;一様初期化と初期化子リストを組み合わせた際、二重に波カッコが必要となっていた仕様を緩和し、波カッコを省略できるようにする&lt;/td&gt;
&lt;td&gt;5.1&lt;/td&gt;
&lt;td&gt;3.3&lt;/td&gt;
&lt;td&gt;16.0&lt;/td&gt;
&lt;td&gt;2017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N3760: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp14/deprecated_attr.html&#34;&gt;&lt;code&gt;[[deprecated]]&lt;/code&gt;属性&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;非推奨の機能であることを示す属性。&lt;/td&gt;
&lt;td&gt;4.9&lt;/td&gt;
&lt;td&gt;3.4&lt;/td&gt;
&lt;td&gt;15.0&lt;br /&gt; (Linux/Mac OS)&lt;/td&gt;
&lt;td&gt;2015&lt;br /&gt;それ以前は&lt;code&gt;__declspec(deprecated)&lt;/code&gt;で代替可能&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N3781: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp14/digit_separators.html&#34;&gt;数値リテラルの桁区切り文字&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;シングルクォーテーションで数値リテラルを桁区切りする。&lt;/td&gt;
&lt;td&gt;4.9&lt;/td&gt;
&lt;td&gt;3.4&lt;/td&gt;
&lt;td&gt;16.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N3778: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp14/sized_deallocation.html&#34;&gt;サイズ付きデアロケーション&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;サイズをとる&lt;code&gt;delete&lt;/code&gt;演算子のオーバーロードを許可する。&lt;/td&gt;
&lt;td&gt;5.1&lt;/td&gt;
&lt;td&gt;3.4&lt;/td&gt;
&lt;td&gt;16.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;各処理系のC++14実装状況ページ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GCC: &lt;a href=&#34;https://gcc.gnu.org/projects/cxx-status.html#cxx14&#34; target=&#34;_blank&#34;&gt;C++14 Support in GCC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;libstdc++: &lt;a href=&#34;https://gcc.gnu.org/onlinedocs/libstdc++/manual/status.html#status.iso.2014&#34; target=&#34;_blank&#34;&gt;C++ 2014&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Clang: &lt;a href=&#34;http://clang.llvm.org/cxx_status.html&#34; target=&#34;_blank&#34;&gt;C++98, C++11, and C++14 Support in Clang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;libc++: &lt;a href=&#34;https://libcxx.llvm.org/Status/Cxx14.html&#34; target=&#34;_blank&#34;&gt;libc++ C++14 Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Visual C++ (MSVC):&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/ja-jp/cpp/visual-cpp-language-conformance&#34; target=&#34;_blank&#34;&gt;Visual C++ 言語への準拠&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/vcblog/2018/05/07/announcing-msvc-conforms-to-the-c-standard/&#34; target=&#34;_blank&#34;&gt;Announcing: MSVC Conforms to the C++ Standard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ICC: &lt;a href=&#34;https://software.intel.com/en-us/articles/c14-features-supported-by-intel-c-compiler&#34; target=&#34;_blank&#34;&gt;C++14 Features Supported by Intel C++ Compiler&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://software.intel.com/en-us/forums/topic/549502&#34; target=&#34;_blank&#34;&gt;Intel (R) Parallel Studio XE 2016 Beta program has begun&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation-status.html#cpp17&#34; id=&#34;cpp17&#34;&gt;C++17言語機能の実装状況&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;言語機能&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;MSVC&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;N3928: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/extending_static_assert.html&#34;&gt;メッセージなしの&lt;code&gt;static_assert&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;デフォルトの表明メッセージを使用する&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;3.5&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N4086: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/removing_trigraphs.html&#34;&gt;トライグラフを削除&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;5.1&lt;/td&gt;
&lt;td&gt;3.5&lt;/td&gt;
&lt;td&gt;19.1&lt;/td&gt;
&lt;td&gt;2010&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N4051: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/allow_typename_in_a_template_template_parameter.html&#34;&gt;テンプレートテンプレートパラメータに&lt;code&gt;typename&lt;/code&gt;を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;class&lt;/code&gt;キーワードしか使用できなかった部分に、&lt;code&gt;typename&lt;/code&gt;を許可&lt;/td&gt;
&lt;td&gt;5.0&lt;/td&gt;
&lt;td&gt;3.5&lt;/td&gt;
&lt;td&gt;17.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N3922: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/new_rules_for_auto_deduction_from_braced-init-list.html&#34;&gt;単一要素初期化子リストを&lt;code&gt;auto&lt;/code&gt;で受け取った場合の型を変更&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;initializer_list&amp;lt;T&amp;gt;&lt;/code&gt;だったのを&lt;code&gt;T&lt;/code&gt;に変更&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;3.8&lt;/td&gt;
&lt;td&gt;17.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N4295: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/folding_expressions.html&#34;&gt;畳み込み式&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;パラメータパックに対する2項演算の集積処理&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;3.6&lt;/td&gt;
&lt;td&gt;19.0&lt;/td&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N4267: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/utf8_character_literals.html&#34;&gt;UTF-8文字リテラル&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;文字列リテラルだけでなく、文字リテラルにもUTF-8指定できるようにする&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;3.6&lt;/td&gt;
&lt;td&gt;17.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N4230: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/nested_namespace.html&#34;&gt;入れ子名前空間の定義&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;namespace A::B {}&lt;/code&gt;のように、入れ子の名前空間を簡単に定義できるようにする&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;3.6&lt;/td&gt;
&lt;td&gt;17.0&lt;/td&gt;
&lt;td&gt;2015 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N4266: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/attributes_for_namespaces_and_enumerators.html&#34;&gt;名前空間と列挙子に属性の付加を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;名前空間の定義と、列挙型の各要素の定義に、属性を付けられるようにする&lt;/td&gt;
&lt;td&gt;名前空間は4.0&lt;br /&gt;列挙子は6&lt;/td&gt;
&lt;td&gt;3.6&lt;/td&gt;
&lt;td&gt;17.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N4268: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/allow_constant_evaluation_for_all_non-type_template_arguments.html&#34;&gt;全ての非型テンプレート引数の定数式評価を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ポインタの定数式評価として、配列からポインタへの変換や、関数から関数ポインタへの変換などを許可&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;3.6&lt;/td&gt;
&lt;td&gt;19.1&lt;/td&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0001R1: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/remove_deprecated_use_of_the_register_keyword.html&#34;&gt;非推奨だった&lt;code&gt;register&lt;/code&gt;キーワードを削除&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.8&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0002R1: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/remove_deprecated_increment_of_bool.html&#34;&gt;非推奨だった&lt;code&gt;bool&lt;/code&gt;型オブジェクトに対するインクリメントの仕様を削除&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.8&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0012R1: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/exception_spec_be_part_of_the_type_system.html&#34;&gt;例外仕様を型システムの一部にする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0061R1: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/has_include.html&#34;&gt;プリプロセッサでの条件式&lt;code&gt;__has_include&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;対象のインクルードファイルが存在するかをプリプロセス時に判定する&lt;/td&gt;
&lt;td&gt;5.0&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0136R1: &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0136r1.html&#34; target=&#34;_blank&#34;&gt;継承コンストラクタの新仕様&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;デフォルト引数を引き継ぐようにした&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0188R1: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/fallthrough.html&#34;&gt;&lt;code&gt;[[fallthrough]]&lt;/code&gt;属性&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;case&lt;/code&gt;節で&lt;code&gt;break&lt;/code&gt;や&lt;code&gt;return&lt;/code&gt;を書かなかった場合に、それが意図したフォールスルーであることをコンパイラに伝える属性&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0189R1: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/nodiscard.html&#34;&gt;&lt;code&gt;[[nodiscard]]&lt;/code&gt;属性&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;関数の戻り値を無視してはならないことをユーザーに伝える属性&lt;/td&gt;
&lt;td&gt;4.8からは&lt;code&gt;[[gnu::warn_unused_result]]&lt;/code&gt;を使用すること&lt;br /&gt; 7からサポート&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0212R1: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/maybe_unused.html&#34;&gt;&lt;code&gt;[[maybe_unused]]&lt;/code&gt;属性&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;使用しない可能性がある変数であることをコンパイラに伝える属性&lt;/td&gt;
&lt;td&gt;4.8からは&lt;code&gt;[[gnu::unused]]&lt;/code&gt;を使用すること&lt;br /&gt; 7からサポート&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0017R1: &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0017r1.html&#34; target=&#34;_blank&#34;&gt;基底クラスのメンバ変数を集成体初期化するための波カッコを省略できるようにする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;基底クラスのメンバを集成体初期化するために、&lt;code&gt;derived d {{42}};&lt;/code&gt;の代わりに&lt;code&gt;derived d {42};&lt;/code&gt;と書けるようにする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;19.1&lt;/td&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0170R1: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/constexpr_lambda.html&#34;&gt;ラムダ式を&lt;code&gt;constexpr&lt;/code&gt;として使用できるようにする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ラムダ式の関数オブジェクトが定数式の文脈で使用された場合に、それがコンパイル時に評価されるようにする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;19.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0184R0: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/generalizing_the_range-based_for_loop.html&#34;&gt;範囲for文のための&lt;code&gt;begin()&lt;/code&gt;と&lt;code&gt;end()&lt;/code&gt;関数が、異なる型を返すことを許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;begin()&lt;/code&gt;と&lt;code&gt;end()&lt;/code&gt;が異なるイテレータ型を返せるようにすることで、終端イテレータを定義しやすくする&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0018R3: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/lambda_capture_of_this_by_value.html&#34;&gt;ラムダ式での&lt;code&gt;*this&lt;/code&gt;のコピーキャプチャ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;キャプチャリストに&lt;code&gt;*this&lt;/code&gt;を指定することで、&lt;code&gt;*this&lt;/code&gt;をコピーキャプチャする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;19.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0138R2: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/construction_enum_class_values.html&#34;&gt;&lt;code&gt;enum class&lt;/code&gt;変数の初期値として整数を指定する際の規則を調整&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;キャストを使用することなく整数を初期値として使用し、&lt;code&gt;E e{0};&lt;/code&gt;のような初期化を許可&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;19.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0245R1: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/hexadecimal_floating_literals.html&#34;&gt;浮動小数点数の16進数リテラル&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hexfloat&lt;/code&gt;マニピュレータや&lt;code&gt;printf()&lt;/code&gt;の16進数出力に合わせて、浮動小数点数のリテラルも16進数表記できるようにする&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0028R4: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/using_attribute_namespaces.html&#34;&gt;属性の名前空間指定に繰り返しをなくす&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[[using CC: opt(1), debug]]&lt;/code&gt;のように属性の名前空間宣言をまとめて行う&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0035R4: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/dynamic_memory_allocation_for_over-aligned_data.html&#34;&gt;アライメント指定されたデータの動的メモリ確保&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;operator new&lt;/code&gt;と&lt;code&gt;operator delete&lt;/code&gt;でアライメント値を取得できるようにする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0091R3: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/type_deduction_for_class_templates.html&#34;&gt;クラステンプレートのテンプレート引数推論&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コンストラクタの引数からクラスのテンプレート引数を推論できるようにする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;19.1&lt;/td&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0127R2: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/declaring_non-type_template_arguments_with_auto.html&#34;&gt;非型テンプレート引数の&lt;code&gt;auto&lt;/code&gt;宣言&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;template &amp;lt;typename T, T x&amp;gt;&lt;/code&gt;という冗長なコードを&lt;code&gt;template &amp;lt;auto x&amp;gt;&lt;/code&gt;のようにして受けられるようにし、&lt;br /&gt; &lt;code&gt;X&amp;lt;3&amp;gt;; X&amp;lt;true&amp;gt;; X&amp;lt;&#39;a&#39;&amp;gt;&lt;/code&gt;のように定数を簡潔に渡せるようにする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;19.1&lt;/td&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0135R1: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/guaranteed_copy_elision.html&#34;&gt;値のコピー省略を保証&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;一時オブジェクトをコピーする際に、単純な値を持つクラスであればコピーが省略されることを保証する&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;19.1&lt;/td&gt;
&lt;td&gt;2017 Update 6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0145R3: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/expression_evaluation_order.html&#34;&gt;厳密な式の評価順&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;式の項が評価される順序を厳密に規定する。&lt;br /&gt; &lt;code&gt;b = a;&lt;/code&gt;の式が右から順番(a, bの順)に評価される&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;19.1&lt;/td&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0283R2: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/non_standard_attributes.html&#34;&gt;不明な属性を無視する&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;実装が知らない名前空間の属性は無視する&lt;/td&gt;
&lt;td&gt;4.8&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0292R2: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/if_constexpr.html&#34;&gt;constexpr if文&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;if constexpr(cond)&lt;/code&gt;とすることで、そのif文はコンパイル時に処理される&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;19.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0296R2: &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0296r2.html&#34; target=&#34;_blank&#34;&gt;処理の進行保証&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;並行処理に関して「処理の進行」を明確に定義&lt;br /&gt; (TODO:言葉の定義だけなので実装状況ページからは取り除く)&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0386R2: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/inline_variables.html&#34;&gt;インライン変数&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;インライン指定を関数だけでなく変数にも指定できるようにする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;19.0&lt;/td&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0391R0: &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0391r0.html&#34; target=&#34;_blank&#34;&gt;templated entityという用語を導入&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;(TODO:言葉の定義だけなので実装状況ページからは取り除く)&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0217R3: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/structured_bindings.html&#34;&gt;構造化束縛&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;タプルやユーザー定義型を分解して受け取れるようにする&lt;br /&gt; &lt;code&gt;tuple&amp;lt;int, string&amp;gt; f();&lt;/code&gt; &lt;br /&gt; &lt;code&gt;const auto [a, b] = f(); // aはintの値、bはstringの値&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0305R1: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/selection_statements_with_initializer.html&#34;&gt;if文とswitch文の条件式と初期化を分離&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;if (init; condition)&lt;/code&gt;のように初期化と条件式を分けて記述できるようにする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0137R1: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/replacement_of_class_objects_containing_reference_members.html&#34;&gt;参照メンバをもつクラスの置き換え&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;参照型メンバや&lt;code&gt;const&lt;/code&gt;メンバ変数を含むクラスについてこれまで結果は未定義とされていた配置&lt;code&gt;new&lt;/code&gt;によるオブジェクトの置き換えを条件付きで可能とする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;6.0&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0003R5: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/remove_deprecated_exception_specifications.html&#34;&gt;非推奨だった例外仕様を削除&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;noexcept&lt;/code&gt;が入ったことによって非推奨になった&lt;code&gt;throw&lt;/code&gt;キーワードによる例外仕様を削除&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0195R2: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/pack_expansions_in_using.html&#34;&gt;using宣言でのパック展開&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;パラメータパックの型を基底クラスとして指定した場合に、&lt;code&gt;using&lt;/code&gt;宣言に基底クラスのパラメータパックを指定できるようにする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0512R0: &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0512r0.pdf&#34; target=&#34;_blank&#34;&gt;クラステンプレート引数の推論仕様を調整&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;5.0&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0490R0: &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0490r0.html&#34; target=&#34;_blank&#34;&gt;Committee Draftに対するNational Body Commentへの対応&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0522R0: &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0522r0.html&#34; target=&#34;_blank&#34;&gt;テンプレートテンプレート引数のマッチングにおいて、互換性のあるテンプレートを除外&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4 (partial)&lt;/td&gt;
&lt;td&gt;19.1&lt;/td&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;各処理系のC++17実装状況ページ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GCC: &lt;a href=&#34;https://gcc.gnu.org/projects/cxx-status.html#cxx17&#34; target=&#34;_blank&#34;&gt;C++17 Support in GCC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Clang: &lt;a href=&#34;http://clang.llvm.org/cxx_status.html&#34; target=&#34;_blank&#34;&gt;C++ Support in Clang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;libc++ : &lt;a href=&#34;https://libcxx.llvm.org/Status/Cxx17.html&#34; target=&#34;_blank&#34;&gt;libc++ C++17 Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Visual C++ (MSVC):&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/ja-jp/cpp/visual-cpp-language-conformance&#34; target=&#34;_blank&#34;&gt;Visual C++ 言語への準拠&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/vcblog/2018/05/07/announcing-msvc-conforms-to-the-c-standard/&#34; target=&#34;_blank&#34;&gt;Announcing: MSVC Conforms to the C++ Standard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ICC: &lt;a href=&#34;https://software.intel.com/en-us/articles/c17-features-supported-by-intel-c-compiler&#34; target=&#34;_blank&#34;&gt;C++17 Features Supported by Intel C++ Compiler&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation-status.html#cpp20&#34; id=&#34;cpp20&#34;&gt;C++20言語機能の実装状況&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;言語機能&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;MSVC&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;P0683R1: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/default_member_initializers_for_bit_fields.html&#34;&gt;ビットフィールドのメンバ変数初期化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ビットフィールドメンバ変数のデフォルト値を設定する構文を追加する&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;6.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0409R2: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/allow_lambda_capture_equal_this.html&#34;&gt;ラムダ式のキャプチャとして&lt;code&gt;[=, this]&lt;/code&gt;を許可する&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;デフォルトコピーキャプチャと&lt;code&gt;this&lt;/code&gt;ポインタのコピーキャプチャを両方指定できるようにする&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;6.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0806R2: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/deprecate_implicit_capture_of_this_via_defcopy.html&#34;&gt;&lt;code&gt;[=]&lt;/code&gt;による&lt;code&gt;this&lt;/code&gt;の暗黙のキャプチャを非推奨化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コピーのデフォルトキャプチャでは、&lt;code&gt;this&lt;/code&gt;ポインタをキャプチャされなくする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0428R2: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/familiar_template_syntax_for_generic_lambdas.html&#34;&gt;ジェネリックラムダのテンプレート構文&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ジェネリックラムダでテンプレートパラメータを定義できるようにする&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0704R1: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/fixing_const_qualified_pointers_to_members.html&#34;&gt;&lt;code&gt;const&lt;/code&gt;修飾されたメンバポインタの制限を修正&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;.*&lt;/code&gt;演算子での左辺値の&lt;code&gt;const&lt;/code&gt;メンバ関数呼び出しを許可する&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;6.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0306R4: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/va_opt.html&#34;&gt;可変引数が空でない場合のトークン置換&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;プリプロセッサの置換で可変引数が空の場合に余計なカンマが付いてしまう問題に対処&lt;/td&gt;
&lt;td&gt;8 (partial, &lt;code&gt;#__VA_OPT__&lt;/code&gt;による文字列化が未サポート)&lt;/td&gt;
&lt;td&gt;6.0&lt;br /&gt; 9.0 (&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1042r1.html&#34; target=&#34;_blank&#34;&gt;p1042&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0329R4: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/designated_initialization.html&#34;&gt;指示付き初期化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;6.0 (partial)&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0734R0: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/concepts.html&#34;&gt;コンセプト&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;テンプレートパラメータに対する制約を行う&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;10.0 (partial)&lt;/td&gt;
&lt;td&gt;2021.6&lt;/td&gt;
&lt;td&gt;2019 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0614R1: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/range-based_for_statements_with_initializer.html&#34;&gt;初期化式をともなう範囲for文&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;範囲for文スコープで使用する変数の初期化のための構文を追加&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0588R1: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/simplifying_implicit_lambda_capture.html&#34;&gt;暗黙のラムダキャプチャを簡略化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ラムダ式のキャプチャに関する仕様整理&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0846R0: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/adl_and_function_templates_that_are_not_visible.html&#34;&gt;関数テンプレートに明示的に型指定した場合にADLで見つからない問題を修正&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;名前空間内の関数テンプレートをテンプレート引数指定かつ非修飾・ADLで正しく呼び出せるよう修正&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0641R2: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/resolving_const_mismatch_with_defaulted_copy_constructor.html&#34;&gt;デフォルトのコピーコンストラクタと非&lt;code&gt;const&lt;/code&gt;なコンストラクタが衝突する問題を修正&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;非&lt;code&gt;const&lt;/code&gt;なオブジェクトをとるコンストラクタを定義すると、そのクラスをラップしたクラスのコピーコンストラクタが&lt;a class=&#34;cpprefjp-defined-word&#34;&gt;不適格&lt;/a&gt;になってしまう問題を修正&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0859R0: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/less_eager_instantiation_of_constexpr_functions.html&#34;&gt;評価されない文脈での定数式評価によって特殊メンバ関数がインスタンス化されることを規定&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;sizeof&lt;/code&gt;や&lt;code&gt;decltype&lt;/code&gt;などの評価されない文脈において定数式評価を行った場合に、ムーブコンストラクタのような特殊メンバ関数が定義されることを規定&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Partial in 2019 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0515R3: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/consistent_comparison.html&#34;&gt;一貫比較&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;三方比較演算子によって比較演算子の自動生成を行うようにする&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;8.0 (partial)&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0692R1: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/access_checking_on_specializations.html&#34;&gt;特殊化のアクセスチェック&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;partial&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0624R2: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/default_constructible_and_assignable_stateless_lambdas.html&#34;&gt;状態を持たないラムダ式を、デフォルト構築可能、代入可能とする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;キャプチャしていないラムダ式をデフォルト構築・代入可能にする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0767R1: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/deprecate_pod.html&#34;&gt;PODを非推奨化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;PODという用語を非推奨化する&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0315R4: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/wording_for_lambdas_in_unevaluated_contexts.html&#34;&gt;評価されない文脈でのラムダ式&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;評価されない文脈でもラムダ式を書くことができるようにする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;Partial&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0840R2: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/language_support_for_empty_objects.html&#34;&gt;空オブジェクトを言語サポート&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[[no_unique_address]]&lt;/code&gt;属性を導入し、空の型のオブジェクトをほかのオブジェクトと共有する最適化を許可する&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 9 &lt;sup&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation-status.html#note-t1-1&#34; id=&#34;note_ref-t1-1&#34;&gt;†1&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0962R1: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/relaxing_the_range_for_loop_customization_point_finding_rules.html&#34;&gt;範囲for文がカスタマイゼーションポイントを見つけるルールを緩和&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;begin()&lt;/code&gt;/&lt;code&gt;end()&lt;/code&gt;メンバ関数のどちらかが見つからなかった場合に非メンバ関数の&lt;code&gt;begin()&lt;/code&gt;/&lt;code&gt;end()&lt;/code&gt;を探しにいく&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0969R0: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/allow_structured_bindings_to_accessible_members.html&#34;&gt;friend指定された関数内から構造化束縛を使用して非公開メンバ変数にアクセスすることを許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;構造化束縛の仕様として公開メンバ変数のみを取り出せるようになっていたが、friend指定された関数からは非公開メンバ変数にもアクセスできるようにする&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0961R1: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/relaxing_the_structured_bindings_customization_point_finding_rules.html&#34;&gt;構造化束縛がカスタマイゼーションポイントを見つけるルールを緩和&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;非テンプレートの&lt;code&gt;get()&lt;/code&gt;メンバ関数が見つかった場合は、非メンバ関数の&lt;code&gt;get()&lt;/code&gt;を探しにいく&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0634R3: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/down_with_typename.html&#34;&gt;型の文脈で&lt;code&gt;typename&lt;/code&gt;の省略を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;型しか現れない文脈では、依存名を解決するための&lt;code&gt;typename&lt;/code&gt;キーワードを省略できるようにする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;2021.4 (2021.6 は未対応)&lt;/td&gt;
&lt;td&gt;2019 Update 9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0780R2: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/allow_pack_expansion_in_lambda_init_capture.html&#34;&gt;ラムダ式の初期化キャプチャでのパック展開を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[...args = std::move(args)]&lt;/code&gt;のようなキャプチャを許可&lt;/td&gt;
&lt;td&gt;9&lt;br /&gt;10&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;2021.7&lt;/td&gt;
&lt;td&gt;2019 Update 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0479R5: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/likely_and_unlikely_attributes.html&#34;&gt;確率が高い分岐と低い分岐を伝える属性 &lt;code&gt;[[likely]]&lt;/code&gt;, &lt;code&gt;[[unlikely]]&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;条件分岐の最適化ヒントを与える属性&lt;/td&gt;
&lt;td&gt;9 (partial, &lt;code&gt;switch&lt;/code&gt; 文のみ可能)&lt;br /&gt; 10&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;2021.7&lt;/td&gt;
&lt;td&gt;2019 Update 6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0929R2: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/checking_for_abstract_class_types.html&#34;&gt;抽象型のチェック&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;関数の宣言段階では、パラメータおよび戻り値型が抽象型かどうかをチェックしないようにする&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0732R2: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/class_types_in_non-type_template_parameters.html&#34;&gt;非型テンプレートパラメータとしてクラス型を許可する&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;定数式として使用できる型を広く非型テンプレートパラメータとして使用できるようにする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;partial&lt;/td&gt;
&lt;td&gt;2022.2 Partial&lt;/td&gt;
&lt;td&gt;2019 Update 6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0722R3: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/efficient_sized_delete_for_variable_sized_classes.html&#34;&gt;可変長データを扱うクラスの効率的な&lt;code&gt;delete&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;クラスの&lt;code&gt;delete&lt;/code&gt;演算子が呼び出される前にデストラクタが呼ばれないようにするオプションを追加&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;6.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1064R0: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/allow_virtual_function_calls_in_constant_expressions.html&#34;&gt;定数式からの仮想関数の呼び出しを許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;仮想関数に&lt;code&gt;constexpr&lt;/code&gt;を付けられない制限を解除&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1327R1: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/allowing_dynamic_cast_polymorphic_typeid_in_constant_expressions.html&#34;&gt;定数式での&lt;code&gt;dynamic_cast&lt;/code&gt;、多態的な&lt;code&gt;typeid&lt;/code&gt;を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;定数式での動的多態を許可&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1002R1: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/try-catch_blocks_in_constexpr_functions.html&#34;&gt;constexpr関数内でのtry-catchブロックを許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;constexpr関数内でtry-catchブロックを書けるようにする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;2021.4 (2021.6 は未対応)&lt;/td&gt;
&lt;td&gt;2019 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1073R3: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/immediate_functions.html&#34;&gt;即時関数&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;consteval&lt;/code&gt;キーワードを追加し、常に定数式評価されるよう指定できるようにする&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1330R0: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/changing_the_active_member_of_a_union_inside_constexpr.html&#34;&gt;定数式内での共用体のアクティブメンバの変更を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;共用体メンバの書き換えを定数式内で行えるようにする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1008R1: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/prohibit_aggregates_with_user-declared_constructors.html&#34;&gt;ユーザー宣言したコンストラクタを持つクラスの集成体初期化を禁止&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コンストラクタが&lt;code&gt;delete&lt;/code&gt;／&lt;code&gt;default&lt;/code&gt;宣言されているクラスを、集成体初期化によってコンストラクタ呼び出しを回避して構築できてしまっていた技法を禁止&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0892R2: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/explicit_bool.html&#34;&gt;関数を条件付きで&lt;code&gt;explicit&lt;/code&gt;にする構文を追加&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;explicit(true)&lt;/code&gt;のように&lt;code&gt;explicit&lt;/code&gt;に真理値パラメータを指定できるようにする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1236R1: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/signed_integers_are_twos_complement.html&#34;&gt;符号付き整数型が2の補数表現であることを規定&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;符号付き整数型のビット表現を2の補数に規定する&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0482R6: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/char8_t.html&#34;&gt;UTF-8エンコーディングされた文字の型として&lt;code&gt;char8_t&lt;/code&gt;を追加&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;UTF-8エンコードされた文字かどうかでオーバーロード・特殊化をできるようにする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;7 (&lt;code&gt;-fchar8_t&lt;/code&gt;オプションが必要)&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1094R2: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/nested_inline_mamespaces.html&#34;&gt;入れ子名前空間定義でのインライン名前空間&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;namespace ns1::inline ns2::ns3 {}&lt;/code&gt;のように、入れ子名前空間を定義する式にインライン名前空間の指定を含められるようにする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1091R3: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/extending_structured_bindings_to_be_more_like_variable_declarations.html&#34;&gt;構造化束縛を拡張して通常の変数宣言のように使用できるようにする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;記憶域指定子として&lt;code&gt;static&lt;/code&gt;と&lt;code&gt;thread_local&lt;/code&gt;の指定を許可&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;8.0 (partial)&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1381R1: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/reference_capture_of_structured_bindings.html&#34;&gt;構造化束縛した変数の参照キャプチャを許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;構造化束縛をした変数は特殊な扱いのためラムダ式で参照キャプチャできない規定となっていたがこれを許可する&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;8.0 (partial)&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0960R3: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/allow_initializing_aggregates_from_a_parenthesized_list_of_values.html&#34;&gt;丸カッコの値リストからの集成体初期化を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;T x{1, 2, 3};&lt;/code&gt;と同様に&lt;code&gt;T x(1, 2, 3);&lt;/code&gt;でも集成体初期化できるようにする&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1009R2: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/array_size_deduction_in_new-expressions.html&#34;&gt;&lt;code&gt;new&lt;/code&gt;式での配列要素数の推論&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;double* p = new double[]{1,2,3};&lt;/code&gt;を許可&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1041R4: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/make_char16t_char32t_string_literals_be_utf16_32.html&#34;&gt;&lt;code&gt;char16_t&lt;/code&gt;と&lt;code&gt;char32_t&lt;/code&gt;の文字・文字列リテラルを、文字コードUTF-16/32に規定&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;__STDC_UTF_16__&lt;/code&gt;、&lt;code&gt;__STDC_UTF_32__&lt;/code&gt;の定義に関係なく、&lt;code&gt;char16_t&lt;/code&gt;、&lt;code&gt;char32_t&lt;/code&gt;のリテラルをUTF-16/32文字コードに規定する&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1103R3: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/modules.html&#34;&gt;モジュール&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ヘッダファイル・ソースファイル、インクルードに変わる仕組みとしてモジュールを導入する&lt;/td&gt;
&lt;td&gt;11 (&lt;code&gt;-fmodules-ts&lt;/code&gt;が必要)&lt;/td&gt;
&lt;td&gt;15&lt;br /&gt;8.0 partial (&lt;code&gt;-fmodules&lt;/code&gt;, &lt;code&gt;-fmodules-ts&lt;/code&gt;が必要)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0912R5: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/coroutines.html&#34;&gt;コルーチン&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;関数実行を中断・再開する仕組みとしてコルーチンを導入する&lt;/td&gt;
&lt;td&gt;10 (&lt;code&gt;-fcoroutines&lt;/code&gt;が必要)&lt;/td&gt;
&lt;td&gt;8.0 (partial)&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1161R3: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/deprecate_uses_of_the_comma_operator_in_subscripting_expressions.html&#34;&gt;添字演算子内でのカンマ演算子の使用を非推奨化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ar[i, j]&lt;/code&gt;を非推奨化。&lt;code&gt;ar[(i, j)]&lt;/code&gt;はOK&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;2021.6&lt;/td&gt;
&lt;td&gt;2019 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1331R2: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/permitting_trivial_default_initialization_in_constexpr_contexts.html&#34;&gt;constexpr関数内でのトリビアルなデフォルト初期化を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;constexpr関数内でのデフォルト初期化を許可し、未初期化値を読むことのみ禁止する&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;10.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0848R3: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/conditionally_trivial_special_member_functions.md.nolink&#34;&gt;条件付きで特殊メンバ関数をトリビアルに定義するように&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;制約によってトリビアルな特殊メンバ関数と非トリビアルな特殊メンバ関数をオーバーロードできるようにする&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;16 Partial (consepts 未実装部あり)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1301R4: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/nodiscard_should_have_a_reason.html&#34;&gt;&lt;code&gt;[[nodiscard]]&lt;/code&gt;属性に理由となる文字列を付加できるようにする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;関数の戻り値を無視してはならない理由を関数宣言に持たせ、警告メッセージに役立てる&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;2021.6&lt;/td&gt;
&lt;td&gt;2019 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1099R5: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/using_enum.html&#34;&gt;スコープ付き列挙型のusing宣言&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;using enum EnumType;&lt;/code&gt;もしくは&lt;code&gt;using EnumType::enumerator&lt;/code&gt;とすることで、列挙値のスコープ指定を省略できるようにする&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1816R0: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/class_template_argument_deduction_for_aggregates.html&#34;&gt;集成体クラステンプレートのテンプレート引数推論&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;クラステンプレートのテンプレート引数推論はコンストラクタ引数から推論されるが、集成体初期化からも推論できるようにする&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1668R1: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/enabling_constexpr_intrinsics_by_permitting_unevaluated_inline-assembly_in_constexpr_functions.html&#34;&gt;constexpr関数内で未評価のインラインアセンブリを許可することによる組み込み関数のconstexpr有効化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コンパイル時に評価されない場合にconstexpr関数にasm定義を含めることを許可&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;10.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0388R4: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/permit_conversions_to_arrays_of_unknown_bound.html&#34;&gt;要素数不明の配列への変換を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;要素数が判明している配列から、要素数が不明の配列への変換を許可&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;2021.6&lt;/td&gt;
&lt;td&gt;2019 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1143R2: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/constinit.html&#34;&gt;コンパイル時初期化を強制する&lt;code&gt;constinit&lt;/code&gt;キーワードを追加&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;初期化のみコンパイル時におわらせたい場合に使用する&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;10.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1152R4: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/deprecating_volatile.html&#34;&gt;ほとんどの&lt;code&gt;volatile&lt;/code&gt;を非推奨化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;volatile&lt;/code&gt;の有用な機能のみを残し、効果が疑わしい、または壊れている機能を非推奨化する&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;10.0&lt;/td&gt;
&lt;td&gt;2021.6&lt;/td&gt;
&lt;td&gt;2019 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1814R0: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/class_template_argument_deduction_for_alias_templates.html&#34;&gt;エイリアステンプレート経由でのクラステンプレートのテンプレート引数推論&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;エイリアステンプレートからクラステンプレートのテンプレート引数を推論できるようにする&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0784R7: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/more_constexpr_containers.html&#34;&gt;可変サイズをもつコンテナの&lt;code&gt;constexpr&lt;/code&gt;化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;constexpr&lt;/code&gt;記憶域をもつメモリアロケータの存在を考慮することで、可変サイズをもつコンテナをコンパイル時に使用できるようにする&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;10.0&lt;/td&gt;
&lt;td&gt;2021.6&lt;/td&gt;
&lt;td&gt;2019 Update 9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1957R2: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/converting_from_pointer_to_bool_should_be_considered_narrowing.html&#34;&gt;ポインタから&lt;code&gt;bool&lt;/code&gt;への変換を縮小変換とする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ポインタから&lt;code&gt;bool&lt;/code&gt;値への変換を縮小変換と規定することで、意図しない変換を防止する&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;11.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation-status.html#note_ref-t1-1&#34; id=&#34;note-t1-1&#34;&gt;&lt;strong&gt;^&lt;/strong&gt;&lt;/a&gt; 不明な属性として無視されなくなっただけで期待する効果は得られない。完全に実装されるまでは、代わりに&lt;code&gt;&lt;a href=&#34;https://devblogs.microsoft.com/cppblog/msvc-cpp20-and-the-std-cpp20-switch/#msvc-extensions-and-abi&#34; target=&#34;_blank&#34;&gt;[[msvc::no_unique_address]]&lt;/a&gt;&lt;/code&gt;を使用できる。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;各処理系のC++20実装状況ページ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GCC: &lt;a href=&#34;https://gcc.gnu.org/projects/cxx-status.html#cxx20&#34; target=&#34;_blank&#34;&gt;C++20 Support in GCC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Clang: &lt;a href=&#34;http://clang.llvm.org/cxx_status.html&#34; target=&#34;_blank&#34;&gt;C++ Support in Clang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;libstdc++: &lt;a href=&#34;https://gcc.gnu.org/onlinedocs/libstdc++/manual/status.html#status.iso.2020&#34; target=&#34;_blank&#34;&gt;C++ 2020 Implementation Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;libc++: &lt;a href=&#34;https://libcxx.llvm.org/Status/Cxx20.html&#34; target=&#34;_blank&#34;&gt;libc++ C++20 Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Visual C++ (MSVC):&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/ja-jp/cpp/visual-cpp-language-conformance&#34; target=&#34;_blank&#34;&gt;Visual C++ 言語への準拠&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/STL/wiki/Changelog&#34; target=&#34;_blank&#34;&gt;次リリース情報(VS2019,2022) - Change log&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ICC: &lt;a href=&#34;https://www.intel.com/content/www/us/en/developer/articles/technical/c20-features-supported-by-intel-cpp-compiler.html&#34; target=&#34;_blank&#34;&gt;C++20 Features Supported by Intel® C++ Compiler&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation-status.html#cpp23&#34; id=&#34;cpp23&#34;&gt;C++23言語機能の実装状況&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;言語機能&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;MSVC&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;P0330R8: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23/literal_suffix_for_signed_size_t.html&#34;&gt;(符号付き)&lt;code&gt;size_t&lt;/code&gt;リテラルのためのサフィックス&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;42z&lt;/code&gt;/&lt;code&gt;42Z&lt;/code&gt;とすることで&lt;code&gt;size_t&lt;/code&gt;に対応する符号付き整数型のリテラルとする&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2290R3: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23/delimited_escape_sequences.md.nolink&#34;&gt;エスケープシーケンスの区切り&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;エスケープシーケンスの範囲を明確にする構文を追加する&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2266R3: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23/simpler_implicit_move.md.nolink&#34;&gt;暗黙的なムーブを簡略化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;参照を返す関数の&lt;code&gt;return&lt;/code&gt;文で暗黙的にムーブされない問題を修正&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1467R9: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23/extended_floating_point_types_and_standard_names.md.nolink&#34;&gt;浮動小数点数型の拡張&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;実装による拡張浮動小数点型の定義を許可する&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1787R6: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23/declarations_and_where_to_find_them.md.nolink&#34;&gt;スコープと名前ルックアップの仕様整理&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;複雑で不完全になっているスコープと名前ルックアップの仕様を整理し、一部の問題を解決する&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2615R1: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23/meaningful_exports.md.nolink&#34;&gt;無意味なexport宣言を禁止する&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2360R0: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23/extend_init_statement_to_allow_alias_declaration.md.nolink&#34;&gt;初期化文での型の別名宣言を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;for (using T = int; T e : v) {}&lt;/code&gt;を許可&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2718R0: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23/lifetime_extension_in_range_based_for_loop.md.nolink&#34;&gt;範囲for文が範囲への参照を延命することを規定&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2324R2: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23/labels_at_the_end_of_compound_statements.md.nolink&#34;&gt;関数末尾のラベルを許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;C互換のため、関数末尾でのgoto文のラベルを許可する&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0847R7: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23/deducing_this.md.nolink&#34;&gt;自身のオブジェクトを明示的にパラメータとして指定する&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;メンバ関数が&lt;code&gt;*this&lt;/code&gt;の型・オブジェクトをパラメータとしてとり、&lt;code&gt;*this&lt;/code&gt;オブジェクトがconst/非const、左辺値/右辺値であるかをメンバ関数内で識別できるようにする&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;2022 Update 2 (partial)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1847R4: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23/make_declaration_order_layout_mandated.md.nolink&#34;&gt;アクセス制御の異なるメンバ変数のレイアウトを宣言順に規定&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;アクセス制御の異なるメンバ変数のレイアウトが実装によって異なっていたため仕様を規定&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2128R6: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23/multidimensional_subscript_operator.nd.nolink&#34;&gt;添字演算子の多次元サポート&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;operator[](int x, int y, int z)&lt;/code&gt;のように添字演算子のオーバーロードで複数のパラメータをとることを許可&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1169R4: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23/static_operator.md.nolink&#34;&gt;&lt;code&gt;this&lt;/code&gt;ポインタをもつ必要のない演算子を&lt;code&gt;static&lt;/code&gt;として宣言できるようにする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2201R1 : &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23/mixed_string_literal_concatenation.md.nolink&#34;&gt;異なる文字エンコーディングをもつ文字列リテラルの連結を不適格とする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;auto a = u8&#34;&#34; L&#34;&#34;;&lt;/code&gt;のような異なる文字エンコーディング同士での文字列リテラルを連結を禁止する&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2029R4: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23/numeric_and_universal_character_escapes_in_character_and_string_literals.md.nolink&#34;&gt;文字・文字列リテラル中の数値・ユニバーサルキャラクタのエスケープに関する問題解決&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2362R3: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23/remove_non_encodable_wide_character_literals_and_multicharacter_wide_character_literals.md.nolink&#34;&gt;1ワイド文字に収まらないワイド文字リテラルを禁止する&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;エンコード結果として&lt;code&gt;wchar_t&lt;/code&gt;の大きさに収まらないワイド文字リテラルを禁止する&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2071R2: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23/named_universal_character_escapes.md.nolink&#34;&gt;名前付きユニバーサルキャラクタ名&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;16進数のユニバーサルキャラクタだけでなく、その文字の名前を入力できるようにする&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2096R2: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23/generalized_wording_for_partial_specializations.md.nolink&#34;&gt;部分特殊化の汎用化仕様&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;変数テンプレートの部分特殊化を許可するために部分特殊化の仕様を汎用化&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2582R1: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23/class_template_argument_deduction_from_inherited.md.nolink&#34;&gt;継承コンストラクタからのクラステンプレート引数の推論&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1938R3 : &lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23/if_consteval.md.nolink&#34;&gt;if consteval&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;コンパイル時の文脈かどうかで分岐させる&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1401R5 : &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23/narrowing_contextual_conversions_to_bool.md.nolink&#34;&gt;定数式の文脈での&lt;code&gt;bool&lt;/code&gt;への縮小変換を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;if constexpr(flags &amp;amp; Flags::Exec)&lt;/code&gt;や&lt;code&gt;static_assert(N);&lt;/code&gt;を許可&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2242R3: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23/non_literal_variables_in_constexpr_functions.md.nolink&#34;&gt;定数式内での非リテラル変数の使用を含められないようにする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;定数式内で静的変数・スレッドローカル変数およびgoto文とラベルを含められない制限を設ける&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2246R1: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23/character_encoding_of_diagnostic_text.md.nolink&#34;&gt;静的な診断メッセージの文字エンコーディング&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;static_assert&lt;/code&gt;や&lt;code&gt;[[deprecated]]&lt;/code&gt;などの診断メッセージの文字集合に関する要件をなくす&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2448R2: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23/relaxing_some_constexpr_restrictions.md.nolink&#34;&gt;&lt;code&gt;constexpr&lt;/code&gt;関数のすべての引数が定数実行できない場合でも適格とする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2647R1: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23/permitting_static_constexpr_variables_in_constexpr_functions.md.nolink&#34;&gt;&lt;code&gt;constexpr&lt;/code&gt;関数内での&lt;code&gt;static constexpr&lt;/code&gt;変数を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2564R3: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23/consteval_needs_to_propagate_up.md.nolink&#34;&gt;&lt;code&gt;constexpr&lt;/code&gt;関数内で&lt;code&gt;consteval&lt;/code&gt;関数を呼び出せない問題を緩和&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1102R2: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23/down_with_lambda_parens.md.nolink&#34;&gt;ラムダ式で&lt;code&gt;()&lt;/code&gt;を省略できる条件を緩和&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;キャプチャや修飾をともなってもパラメータリストが空であれば&lt;code&gt;()&lt;/code&gt;を省略できる&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2173R1: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23/attributes_on_lambda_expressions.md.nolink&#34;&gt;ラムダ式に対する属性&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ラムダ式のいくつかの箇所に属性を記述できるようにする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1774R8: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23/portable_assumptions.html&#34;&gt;コード内容の仮定をコンパイラに伝えるassume属性&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;最適化のために、コードの仮定をコンパイラに伝える属性を標準化する&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2316R2: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23/consistent_character_literal_encoding.md.nolink&#34;&gt;文字リテラルエンコーディングを一貫させる&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;プリプロセッサの条件式での文字リテラルの扱いをC++式と同様にする&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2334R1: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23/add_support_for_preprocessing_directives_elifdef_and_elifndef.md.nolink&#34;&gt;&lt;code&gt;elif&lt;/code&gt;/&lt;code&gt;elifdef&lt;/code&gt;/&lt;code&gt;elifndef&lt;/code&gt;のサポートを追加&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#if&lt;/code&gt;/&lt;code&gt;#ifdef&lt;/code&gt;/&lt;code&gt;#ifndef&lt;/code&gt;に対応する複数条件命令のサポートを追加する&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2437R1: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23/warning.md.nolink&#34;&gt;&lt;code&gt;#warning&lt;/code&gt;のサポートを追加&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;多くのC++コンパイラが実装していたプリプロセス時の警告&lt;code&gt;#warning message&lt;/code&gt;を正式サポート&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2295R6: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23/support_for_utf8_as_a_portable_source_file_encoding.md.nolink&#34;&gt;汎用的なソースコードのエンコーディングとしてUTF-8をサポート&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;2019 Update 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2223R2: &lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23/trimming_whitespaces_before_line_splicing.md.nolink&#34;&gt;行末スペースを無視するよう規定&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;行末が&lt;code&gt;\&lt;/code&gt;でおわっていた場合にMSVCは行の継続をしない実装になっていたため動作を共通化するため仕様を規定&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;各処理系のC++23実装状況ページ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GCC: &lt;a href=&#34;https://gcc.gnu.org/projects/cxx-status.html#cxx23&#34; target=&#34;_blank&#34;&gt;C++23 Support in GCC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Clang: &lt;a href=&#34;https://clang.llvm.org/cxx_status.html#cxx23&#34; target=&#34;_blank&#34;&gt;C++2b implementation status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Visual C++ (MSVC):&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://en.cppreference.com/w/cpp/23&#34; target=&#34;_blank&#34;&gt;C++23 - cppreference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/STL/wiki/Changelog&#34; target=&#34;_blank&#34;&gt;次リリース情報(VS2019,2022) - Change log&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akiko Kawai</name>
        <email>haruka.sao@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>expected -- expected/expected.void: コンストラクタ,デストラクタ(#1066)</title>
      <link href="https://cpprefjp.github.io/reference/expected/expected.html"/>
      <id>996f8d3679187e3abf7240299e2609f33975c35d:reference/expected/expected.md</id>
      <updated>2023-02-09T10:25:10+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/expected/expected.md b/reference/expected/expected.md
index 21b53d030..935410167 100644
--- a/reference/expected/expected.md
+++ b/reference/expected/expected.md
@@ -6,10 +6,11 @@
 
 ```cpp
 namespace std {
+  // プライマリテンプレート
   template&amp;lt;class T, class E&amp;gt;
   class expected;
 
-  // T=cv void 部分特殊化
+  // T=cv void 部分特殊化テンプレート
   template&amp;lt;class T, class E&amp;gt;
     requires is_void_v&amp;lt;T&amp;gt;
   class expected&amp;lt;T, E&amp;gt;;
@@ -27,7 +28,7 @@ namespace std {
 - 型`E`はCpp17Destructible要件を満たすこと。
 
 
-## メンバ関数
+## メンバ関数（プライマリテンプレート）
 ### 構築・破棄
 
 | 名前            | 説明           | 対応バージョン |
@@ -73,6 +74,52 @@ namespace std {
 | [`operator!=`](expected/op_not_equal.md) | 非等値比較 | C++23 |
 
 
+## メンバ関数（T=cv void 部分特殊化テンプレート）
+### 構築・破棄
+
+| 名前            | 説明           | 対応バージョン |
+|-----------------|----------------|-------|
+| [`(constructor)`](expected.void/op_constructor.md) | コンストラクタ | C++23 |
+| [`(destructor)`](expected.void/op_destructor.md)   | デストラクタ | C++23 |
+
+### 代入
+
+| 名前            | 説明           | 対応バージョン |
+|-----------------|----------------|-------|
+| [`operator=`](expected.void/op_assign.md.nolink) | 代入演算子 | C++23 |
+| [`emplace`](expected.void/emplace.md.nolink) | 正常値型のコンストラクタ引数から直接構築する | C++23 |
+| [`swap`](expected.void/swap.md.nolink) | 他の`expected`オブジェクトとデータを入れ替える | C++23 |
+
+### 値の観測
+
+| 名前            | 説明           | 対応バージョン |
+|-----------------|----------------|-------|
+| [`operator*`](expected.void/op_deref.md.nolink) | 正常値への間接参照 | C++23 |
+| [`operator bool`](expected.void/op_bool.md.nolink) | 正常値を保持しているかを判定する | C++23 |
+| [`has_value`](expected.void/has_value.md.nolink) | 正常値を保持しているかを判定する | C++23 |
+| [`value`](expected.void/value.md.nolink) | 正常値を取得する | C++23 |
+| [`error`](expected.void/error.md.nolink) | エラー値を取得する | C++23 |
+| [`error_or`](expected.void/error_or.md.nolink) | エラー値もしくは指定された値を取得する | C++23 |
+
+（`expected&amp;lt;cv void, E&amp;gt;` 部分特殊化では、演算子オーバーロード`operator-&amp;gt;`およびメンバ関数`value`は提供されない。）
+
+### モナド操作
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`and_then`](expected.void/and_then.md.nolink) | 正常値に対して関数を適用する | C++23 |
+| [`or_else`](expected.void/or_else.md.nolink) | エラー値に対して関数を適用する | C++23 |
+| [`transform`](expected.void/transform.md.nolink) | 正常値を変換する | C++23 |
+| [`transform_error`](expected.void/transform_error.md.nolink) | エラー値を変換する | C++23 |
+
+### 比較
+
+| 名前         | 説明       | 対応バージョン |
+|--------------|------------|-------|
+| [`operator==`](expected.void/op_equal.md.nolink) | 等値比較 | C++23 |
+| [`operator!=`](expected.void/op_not_equal.md.nolink) | 非等値比較 | C++23 |
+
+
 ## メンバ型
 
 | 名前              | 説明            | 対応バージョン |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- expected/expected.void: コンストラクタ,デストラクタ(#1066)</title>
      <link href="https://cpprefjp.github.io/reference/expected/expected.void/op_constructor.html"/>
      <id>996f8d3679187e3abf7240299e2609f33975c35d:reference/expected/expected.void/op_constructor.md</id>
      <updated>2023-02-09T10:25:10+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/expected/expected.void/op_constructor.md b/reference/expected/expected.void/op_constructor.md
new file mode 100644
index 000000000..778760f7a
--- /dev/null
+++ b/reference/expected/expected.void/op_constructor.md
@@ -0,0 +1,259 @@
+# コンストラクタ
+* expected[meta header]
+* function[meta id-type]
+* std[meta namespace]
+* expected[meta class]
+* cpp23[meta cpp]
+
+```cpp
+// expected&amp;lt;cv void, E&amp;gt;部分特殊化
+constexpr expected();                                   // (1)
+constexpr expected(const expected&amp;amp; rhs);                // (2)
+constexpr expected(expected&amp;amp;&amp;amp; rhs) noexcept(see below); // (3)
+
+template&amp;lt;class U, class G&amp;gt;
+constexpr explicit(see below) expected(const expected&amp;lt;U, G&amp;gt;&amp;amp; rhs); // (4)
+template&amp;lt;class U, class G&amp;gt;
+constexpr explicit(see below) expected(expected&amp;lt;U, G&amp;gt;&amp;amp;&amp;amp; rhs);      // (5)
+
+template&amp;lt;class G&amp;gt;
+constexpr explicit(see below) expected(const unexpected&amp;lt;G&amp;gt;&amp;amp; e); // (6)
+template&amp;lt;class G&amp;gt;
+constexpr explicit(see below) expected(unexpected&amp;lt;G&amp;gt;&amp;amp;&amp;amp; e);      // (7)
+
+constexpr explicit expected(in_place_t) noexcept; // (8)
+
+template&amp;lt;class... Args&amp;gt;
+constexpr explicit expected(unexpect_t, Args&amp;amp;&amp;amp;... args); // (9)
+template&amp;lt;class U, class... Args&amp;gt;
+constexpr explicit expected(unexpect_t, initializer_list&amp;lt;U&amp;gt; il, Args&amp;amp;&amp;amp;... args); // (10)
+```
+* see below[italic]
+* unexpected[link ../unexpected.md]
+* unexpect_t[link ../unexpect_t.md]
+* in_place_t[link /reference/utility/in_place_t.md]
+* initializer_list[link /reference/initializer_list/initializer_list.md]
+
+## 概要
+- (1) : 正常値を保持する。
+- (2) : コピーコンストラクタ。
+- (3) : ムーブコンストラクタ。
+- (4) : 変換可能な`expected&amp;lt;cv void, G&amp;gt;`オブジェクトからコピー構築する。
+- (5) : 変換可能な`expected&amp;lt;cv void, G&amp;gt;`オブジェクトからムーブ構築する。
+- (6) : 変換可能な[`unexpected`](../unexpected.md)オブジェクトかエラー値をコピー構築する。
+- (7) : 変換可能な[`unexpected`](../unexpected.md)オブジェクトからエラー値をムーブ構築する。
+- (8) : 正常値を保持する。
+- (9) : エラー値型`E`のコンストラクタ引数として任意個の引数を受け取って、コンストラクタ内で型`E`のオブジェクトをエラー値として生成し、保持する。
+- (10) : エラー値型`E`のコンストラクタ引数として初期化子リストと任意個の引数を受け取って、コンストラクタ内で型`E`のオブジェクトをエラー値として生成し、保持する。
+
+
+## テンプレートパラメータ制約
+- (3) : [`is_move_constructible_v`](/reference/type_traits/is_move_constructible.md)`&amp;lt;E&amp;gt; == true`
+- (4) : 次の制約を全て満たすこと
+    - [`is_void_v`](/reference/type_traits/is_void.md)`&amp;lt;U&amp;gt; == true`
+    - [`is_constructible_v`](/reference/type_traits/is_constructible.md)`&amp;lt;E, const G&amp;amp;&amp;gt; == true`
+    - [`is_constructible_v`](/reference/type_traits/is_constructible.md)`&amp;lt;`[`unexpected`](../unexpected.md)`&amp;lt;E&amp;gt;, expected&amp;lt;U, G&amp;gt;&amp;amp;&amp;gt; == false`
+    - [`is_constructible_v`](/reference/type_traits/is_constructible.md)`&amp;lt;`[`unexpected`](../unexpected.md)`&amp;lt;E&amp;gt;, expected&amp;lt;U, G&amp;gt;&amp;gt; == false`
+    - [`is_constructible_v`](/reference/type_traits/is_constructible.md)`&amp;lt;`[`unexpected`](../unexpected.md)`&amp;lt;E&amp;gt;, const expected&amp;lt;U, G&amp;gt;&amp;amp;&amp;gt; == false`
+    - [`is_constructible_v`](/reference/type_traits/is_constructible.md)`&amp;lt;`[`unexpected`](../unexpected.md)`&amp;lt;E&amp;gt;, const expected&amp;lt;U, G&amp;gt;&amp;gt; == false`
+- (5) : 次の制約を全て満たすこと
+    - [`is_void_v`](/reference/type_traits/is_void.md)`&amp;lt;U&amp;gt; == true`
+    - [`is_constructible_v`](/reference/type_traits/is_constructible.md)`&amp;lt;E, G&amp;gt; == true`
+    - [`is_constructible_v`](/reference/type_traits/is_constructible.md)`&amp;lt;`[`unexpected`](../unexpected.md)`&amp;lt;E&amp;gt;, expected&amp;lt;U, G&amp;gt;&amp;amp;&amp;gt; == false`
+    - [`is_constructible_v`](/reference/type_traits/is_constructible.md)`&amp;lt;`[`unexpected`](../unexpected.md)`&amp;lt;E&amp;gt;, expected&amp;lt;U, G&amp;gt;&amp;gt; == false`
+    - [`is_constructible_v`](/reference/type_traits/is_constructible.md)`&amp;lt;`[`unexpected`](../unexpected.md)`&amp;lt;E&amp;gt;, const expected&amp;lt;U, G&amp;gt;&amp;amp;&amp;gt; == false`
+    - [`is_constructible_v`](/reference/type_traits/is_constructible.md)`&amp;lt;`[`unexpected`](../unexpected.md)`&amp;lt;E&amp;gt;, const expected&amp;lt;U, G&amp;gt;&amp;gt; == false`
+- (6) : [`is_constructible_v`](/reference/type_traits/is_constructible.md)`&amp;lt;E, const G&amp;amp;&amp;gt; == true`
+- (7) : [`is_constructible_v`](/reference/type_traits/is_constructible.md)`&amp;lt;E, G&amp;gt; == true`
+- (9) : [`is_constructible_v`](/reference/type_traits/is_constructible.md)`&amp;lt;E, Args...&amp;gt; == true`
+- (10) : [`is_constructible_v`](/reference/type_traits/is_constructible.md)`&amp;lt;E,` [`initializer_list`](/reference/initializer_list/initializer_list.md)`&amp;lt;U&amp;gt;&amp;amp;, Args...&amp;gt; == true`
+
+
+## 効果
+- (1) : 正常値を保持する。
+- (2) : `rhs`がエラー値を保持していれば、`rhs.`[`error()`](error.md.nolink)でエラー値を直接非リスト初期化する。
+- (3) : `rhs`がエラー値を保持していれば、[`std::move`](/reference/utility/move.md)`(rhs.`[`error()`](error.md.nolink)`)`でエラー値を直接非リスト初期化する。
+- (4) : `rhs`がエラー値を保持していれば、[`std::forward`](/reference/utility/forward.md)`&amp;lt;const G&amp;amp;&amp;gt;(rhs.`[`error()`](error.md.nolink)`)`でエラー値を直接非リスト初期化する。
+- (5) : `rhs`がエラー値を保持していれば、[`std::forward`](/reference/utility/forward.md)`&amp;lt;G&amp;gt;(rhs.`[`error()`](error.md.nolink)`)`でエラー値を直接非リスト初期化する。
+- (6) : [`std::forward`](/reference/utility/forward.md)`&amp;lt;const G&amp;amp;&amp;gt;(e.`[`error()`](../unexpected/error.md.nolink)`)`でエラー値を直接非リスト初期化する。
+- (7) : [`std::forward`](/reference/utility/forward.md)`&amp;lt;G&amp;gt;(e.`[`error()`](../unexpected/error.md.nolink)`)`でエラー値を直接非リスト初期化する。
+- (9) : [`std::forward`](/reference/utility/forward.md)`&amp;lt;Args&amp;gt;(args)...`でエラー値を直接非リスト初期化する。
+- (10) : `il,` [`std::forward`](/reference/utility/forward.md)`&amp;lt;Args&amp;gt;(args)...`でエラー値を直接非リスト初期化する。
+
+
+## 事後条件
+- (1) : 正常値を保持している。
+- (2) : `rhs`が正常値を保持する場合は`*this`も正常値を保持し、`rhs`がエラー値を保持する場合は`*this`もエラー値を保持する。
+- (3) : `rhs`が正常値を保持する場合は`*this`も正常値を保持し、`rhs`がエラー値を保持する場合は`*this`もエラー値を保持する。`rhs.`[`has_value()`](has_value.md.nolink)は変化しない。
+- (4), (5) : `rhs`が正常値を保持する場合は`*this`も正常値を保持し、`rhs`がエラー値を保持する場合は`*this`もエラー値を保持する。`rhs.`[`has_value()`](has_value.md.nolink)は変化しない。
+- (6), (7) : エラー値を保持している。
+- (8) : 正常値を保持している。
+- (9), (10) : エラー値を保持している。
+
+
+## 例外
+- (2) : エラー値型の初期化から送出される例外。
+- (3) : エラー値型の初期化から送出される例外。
+    - [`is_nothrow_move_constructible_v`](/reference/type_traits/is_nothrow_move_constructible.md)`&amp;lt;E&amp;gt;`であれば、ムーブコンストラクタはnoexpcet指定される。
+- (4), (5) : エラー値型の初期化から送出される例外。
+- (6), (7) : エラー値型の初期化から送出される例外。
+- (8) : 投げない。
+- (9), (10) : エラー値型の初期化から送出される例外。
+
+
+## delete定義される条件
+- (2) : `!`[`is_copy_constructible_v`](/reference/type_traits/is_copy_constructible.md)`&amp;lt;E&amp;gt;`
+
+
+## トリビアルに定義される条件
+- (2) : [`is_trivially_copy_constructible_v`](/reference/type_traits/is_trivially_copy_constructible.md)`&amp;lt;E&amp;gt;`
+- (3) : [`is_trivially_move_constructible_v`](/reference/type_traits/is_trivially_move_constructible.md)`&amp;lt;E&amp;gt;`
+
+
+## explicitになる条件
+- (4) : `!`[`is_convertible_v`](/reference/type_traits/is_convertible.md)`&amp;lt;const G&amp;amp;, E&amp;gt;`
+- (5) : `!`[`is_convertible_v`](/reference/type_traits/is_convertible.md)`&amp;lt;G, E&amp;gt;`
+- (6) : `!`[`is_convertible_v`](/reference/type_traits/is_convertible.md)`&amp;lt;const G&amp;amp;, E&amp;gt;`
+- (7) : `!`[`is_convertible_v`](/reference/type_traits/is_convertible.md)`&amp;lt;G, E&amp;gt;`
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;expected&amp;gt;
+#include &amp;lt;memory&amp;gt;
+#include &amp;lt;string&amp;gt;
+#include &amp;lt;string_view&amp;gt;
+#include &amp;lt;tuple&amp;gt;
+#include &amp;lt;utility&amp;gt;
+#include &amp;lt;vector&amp;gt;
+
+// std::pair型から2要素std::tuple型へはコピー変換可能
+using IntPair  = std::pair&amp;lt;int, int&amp;gt;;
+using IntTuple = std::tuple&amp;lt;int, int&amp;gt;;
+
+// std::unique_ptr型からstd::shared_ptr型へはムーブ変換可能
+using UniquePtr = std::unique_ptr&amp;lt;int&amp;gt;;
+using SharedPtr = std::shared_ptr&amp;lt;int&amp;gt;;
+
+// 引数リスト または 初期化子リスト＋引数リスト から構築可能な型
+struct ComplexType {
+  std::string data;
+  std::vector&amp;lt;int&amp;gt; seq;
+
+  ComplexType(const char* ptr, size_t len)
+    : data(ptr, len) {}
+  ComplexType(std::initializer_list&amp;lt;int&amp;gt; il, std::string_view sv)
+    : data(sv), seq(il) {} 
+};
+
+int main()
+{
+  // (1) デフォルトコンストラクタ
+  {
+    std::expected&amp;lt;void, int&amp;gt; x;
+    assert(x.has_value());
+  }
+
+  // (2) コピーコンストラクタ
+  {
+    std::expected&amp;lt;void, int&amp;gt; srcV;
+    std::expected&amp;lt;void, int&amp;gt; dstV = srcV;
+    assert(srcV.has_value() &amp;amp;&amp;amp; dstV.has_value());
+
+    std::expected&amp;lt;void, int&amp;gt; srcE = std::unexpected{42};
+    std::expected&amp;lt;void, int&amp;gt; dstE = srcE;
+    assert(!srcE.has_value() &amp;amp;&amp;amp; !dstE.has_value());
+    assert(srcE.error() == 42 &amp;amp;&amp;amp; dstE.error() == 42);
+  }
+
+  // (3) ムーブコンストラクタ
+  {
+    std::expected&amp;lt;void, std::string&amp;gt; srcV;
+    std::expected&amp;lt;void, std::string&amp;gt; dstV = std::move(srcV);
+    assert(srcV.has_value() &amp;amp;&amp;amp; dstV.has_value());
+
+    std::expected&amp;lt;void, std::string&amp;gt; srcE = std::unexpected{&amp;#34;Oops&amp;#34;};
+    std::expected&amp;lt;void, std::string&amp;gt; dstE = std::move(srcE);
+    assert(!srcE.has_value() &amp;amp;&amp;amp; !dstE.has_value());
+    assert(dstE.error() == &amp;#34;Oops&amp;#34;);
+    // srcE.error()はstd::stringムーブ後の未規定の値
+  }
+
+  // (4) 変換コピー構築
+  {
+    std::expected&amp;lt;void, IntPair&amp;gt;  src = std::unexpected{IntPair{1, 2}};
+    std::expected&amp;lt;void, IntTuple&amp;gt; dst = src;
+    assert(!src.has_value() &amp;amp;&amp;amp; !dst.has_value());
+    assert((dst.error() == IntTuple{1, 2}));
+  }
+
+  // (5) 変換ムーブ構築
+  {
+    std::expected&amp;lt;void, UniquePtr&amp;gt; src = std::unexpected{std::make_unique&amp;lt;int&amp;gt;(42)};
+    std::expected&amp;lt;void, SharedPtr&amp;gt; dst = std::move(src);
+    assert(!src.has_value() &amp;amp;&amp;amp; !dst.has_value());
+    assert(*dst.error() == 42);
+    assert(src.error() == nullptr);
+    // ムーブ後のstd::unique_ptr型はnullptrが保証される
+  }
+
+  // (6),(7) エラー値の変換コピー／ムーブ構築
+  {
+    std::unexpected&amp;lt;IntPair&amp;gt; src1{std::in_place, 1, 2};
+    std::expected&amp;lt;void, IntTuple&amp;gt; dst1 = src1;
+    assert(not dst1.has_value());
+    assert((dst1.error() == IntTuple{1, 2}));
+
+    UniquePtr src2 = std::make_unique&amp;lt;int&amp;gt;(42);
+    std::expected&amp;lt;void, SharedPtr&amp;gt; dst2 = std::unexpected{std::move(src2)};
+    assert(not dst2.has_value());
+    assert(*dst2.error() == 42);
+  }
+
+  // (8) 正常値(void)を直接構築
+  {
+    std::expected&amp;lt;void, int&amp;gt; x1{std::in_place};
+    assert(x1.has_value());
+  }
+
+  // (9),(10) 引数リストからエラー値を直接構築
+  {
+    std::expected&amp;lt;void, ComplexType&amp;gt; x1{std::unexpect, &amp;#34;C++&amp;#34;, 1};
+    assert(not x1.has_value());
+    assert(x1.error().data == &amp;#34;C&amp;#34;);
+    // &amp;#34;C++&amp;#34;より長さ1の文字列が構築されている
+
+    std::expected&amp;lt;void, ComplexType&amp;gt; x2{std::unexpect, {11, 14, 17, 20, 23}, &amp;#34;C++&amp;#34;};
+    assert(not x2.has_value());
+    assert(x2.error().data == &amp;#34;C++&amp;#34;);
+    assert((x2.error().seq == std::vector&amp;lt;int&amp;gt;{11, 14, 17, 20, 23}));
+  }
+}
+```
+* has_value()[link has_value.md.nolink]
+* value()[link value.md.nolink]
+* error()[link error.md.nolink]
+* std::unexpected[link ../unexpected.md]
+* std::unexpect[link ../unexpect_t.md]
+* std::in_place[link /reference/utility/in_place_t.md]
+* std::make_unique[link /reference/memory/make_unique.md]
+
+### 出力
+```
+```
+
+
+## バージョン
+### 言語
+- C++23
+
+### 処理系
+- [Clang](/implementation.md#clang): 16.0
+- [GCC](/implementation.md#gcc): 12.1
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
+
+
+## 参照
+- [P0323R12 std::expected](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p0323r12.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>デストラクタ -- expected/expected.void: コンストラクタ,デストラクタ(#1066)</title>
      <link href="https://cpprefjp.github.io/reference/expected/expected.void/op_destructor.html"/>
      <id>996f8d3679187e3abf7240299e2609f33975c35d:reference/expected/expected.void/op_destructor.md</id>
      <updated>2023-02-09T10:25:10+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/expected/expected.void/op_destructor.md b/reference/expected/expected.void/op_destructor.md
new file mode 100644
index 000000000..9e18dce50
--- /dev/null
+++ b/reference/expected/expected.void/op_destructor.md
@@ -0,0 +1,37 @@
+# デストラクタ
+* expected[meta header]
+* function[meta id-type]
+* std[meta namespace]
+* expected[meta class]
+* cpp23[meta cpp]
+
+```cpp
+// expected&amp;lt;cv void, E&amp;gt;部分特殊化
+constexpr ~expected();
+```
+
+## 概要
+`expected`オブジェクトを破棄する。
+
+
+## 効果
+エラー値を保持している場合は、エラー値オブジェクトのデストラクタを呼び出す。
+
+
+## トリビアルに定義される条件
+[`is_trivially_destructible_v`](/reference/type_traits/is_trivially_destructible.md)`&amp;lt;E&amp;gt;`
+
+
+## バージョン
+### 言語
+- C++23
+
+### 処理系
+- [Clang](/implementation.md#clang): 16.0
+- [GCC](/implementation.md#gcc): 12.1
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
+
+
+## 参照
+- [P0323R12 std::expected](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p0323r12.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- expected/expected.void: コンストラクタ,デストラクタ(#1066)</title>
      <link href="https://cpprefjp.github.io/reference/expected/expected/op_constructor.html"/>
      <id>996f8d3679187e3abf7240299e2609f33975c35d:reference/expected/expected/op_constructor.md</id>
      <updated>2023-02-09T10:25:10+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/expected/expected/op_constructor.md b/reference/expected/expected/op_constructor.md
index 2d9634ce5..34e9931df 100644
--- a/reference/expected/expected/op_constructor.md
+++ b/reference/expected/expected/op_constructor.md
@@ -149,8 +149,8 @@ constexpr bool converts-from-any-cvref =
 
 
 ## explicitになる条件
-- (4) : `!`[`is_convertible_v`](/reference/type_traits/is_constructible.md)`&amp;lt;const U&amp;amp;, T&amp;gt; || !`[`is_convertible_v`](/reference/type_traits/is_constructible.md)`&amp;lt;const G&amp;amp;, E&amp;gt;`
-- (5) : `!`[`is_convertible_v`](/reference/type_traits/is_constructible.md)`&amp;lt;U, T&amp;gt; || !`[`is_convertible_v`](/reference/type_traits/is_constructible.md)`&amp;lt;G, E&amp;gt;`
+- (4) : `!`[`is_convertible_v`](/reference/type_traits/is_convertible.md)`&amp;lt;const U&amp;amp;, T&amp;gt; || !`[`is_convertible_v`](/reference/type_traits/is_convertible.md)`&amp;lt;const G&amp;amp;, E&amp;gt;`
+- (5) : `!`[`is_convertible_v`](/reference/type_traits/is_convertible.md)`&amp;lt;U, T&amp;gt; || !`[`is_convertible_v`](/reference/type_traits/is_convertible.md)`&amp;lt;G, E&amp;gt;`
 - (6) : `!`[`is_convertible_v`](/reference/type_traits/is_convertible.md)`&amp;lt;U, T&amp;gt;`
 - (7) : `!`[`is_convertible_v`](/reference/type_traits/is_convertible.md)`&amp;lt;const G&amp;amp;, E&amp;gt;`
 - (8) : `!`[`is_convertible_v`](/reference/type_traits/is_convertible.md)`&amp;lt;G, E&amp;gt;`
@@ -162,6 +162,7 @@ constexpr bool converts-from-any-cvref =
 #include &amp;lt;expected&amp;gt;
 #include &amp;lt;memory&amp;gt;
 #include &amp;lt;string&amp;gt;
+#include &amp;lt;string_view&amp;gt;
 #include &amp;lt;tuple&amp;gt;
 #include &amp;lt;utility&amp;gt;
 #include &amp;lt;vector&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>from_chars -- from_chars : コード修飾修正</title>
      <link href="https://cpprefjp.github.io/reference/charconv/from_chars.html"/>
      <id>ebf409bfcb1665f5256addfed394b0b3221817e4:reference/charconv/from_chars.md</id>
      <updated>2023-02-07T15:28:10+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/charconv/from_chars.md b/reference/charconv/from_chars.md
index 32e8a8975..8a4ff6a9a 100644
--- a/reference/charconv/from_chars.md
+++ b/reference/charconv/from_chars.md
@@ -312,12 +312,12 @@ int main() {
 }
 ```
 * std::from_chars[color ff0000]
-* enable_view[link /reference/ranges/contiguous_range.md]
-* enable_view[link /reference/ranges/range_value_t.md]
-* enable_view[link /reference/ranges/begin.md]
-* enable_view[link /reference/ranges/end.md]
-* enable_view[link /reference/memory/to_address.md]
-* enable_view[link /reference/format/format.md]
+* contiguous_range[link /reference/ranges/contiguous_range.md]
+* range_value_t[link /reference/ranges/range_value_t.md]
+* begin[link /reference/ranges/begin.md]
+* end[link /reference/ranges/end.md]
+* to_address[link /reference/memory/to_address.md]
+* format[link /reference/format/format.md]
 
 #### 出力
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>from_chars -- from_chars : to_addressを使用する例を追加</title>
      <link href="https://cpprefjp.github.io/reference/charconv/from_chars.html"/>
      <id>318a70e4d2307d898ab08bd12c9f40258aa0a004:reference/charconv/from_chars.md</id>
      <updated>2023-02-07T15:26:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/charconv/from_chars.md b/reference/charconv/from_chars.md
index 3c0106a9b..32e8a8975 100644
--- a/reference/charconv/from_chars.md
+++ b/reference/charconv/from_chars.md
@@ -31,7 +31,7 @@ namespace std {
 C++標準はこれら関数の実装の詳細について何も規定しない。これは、各実装において可能な最も高速なアルゴリズムが選択されることを意図しての事である。
 
 ## 要件
-- 全て : 出力イテレータ範囲`[first, last)`は有効な範囲であること（charのオブジェクトが構築済みであり、連続していること）。
+- 全て : 入力イテレータ範囲`[first, last)`は有効な範囲であること（charのオブジェクトが構築済みであり、連続していること）。
 - (1) : `base`は2～36までの値であること。
 - (2)～(4)  : `fmt`は[`chars_format`](../charconv/chars_format.md)の列挙値のうちの一つであること。
 
@@ -87,6 +87,8 @@ C++標準はこれら関数の実装の詳細について何も規定しない
 
 ## 例
 
+### 基本の使用例
+
 ```cpp example
 #include &amp;lt;iostream&amp;gt;
 #include &amp;lt;charconv&amp;gt;
@@ -228,7 +230,7 @@ int main()
 ```
 * std::from_chars[color ff0000]
 
-### 出力例（VS2019 preview4.1）
+#### 出力例（VS2019 preview4.1）
 ```
 123456789
 65535
@@ -242,6 +244,90 @@ nan
 -inf
 ```
 
+### イテレータ範囲からの変換（C++20）
+
+入力文字列はポインタによる範囲で指定する必要があるが、`std::string`等のイテレータは必ずしもポインタとは限らず、そのままでは使いづらいことがある。その様なとき、C++20の[`std::to_address`](/reference/memory/to_address.md)を使用すると安全かつ簡易にこの関数でイテレータを使用できる。
+
+```cpp
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;ranges&amp;gt;
+#include &amp;lt;memory&amp;gt;
+#include &amp;lt;optional&amp;gt;
+#include &amp;lt;format&amp;gt;
+#include &amp;lt;vector&amp;gt;
+#include &amp;lt;string&amp;gt;
+#include &amp;lt;charconv&amp;gt;
+
+// contiguousな文字列範囲内の数値をdoubleへ変換する
+template&amp;lt;std::ranges::contiguous_range R&amp;gt;
+  requires std::same_as&amp;lt;char, std::ranges::range_value_t&amp;lt;R&amp;gt;&amp;gt;
+auto str_to_double(R&amp;amp;&amp;amp; r) -&amp;gt; std::optional&amp;lt;double&amp;gt; {
+  double out;
+
+  // 範囲のイテレータ（ポインタではない場合がある）
+  auto it = std::ranges::begin(r);
+  auto end = std::ranges::end(r);
+
+  // to_addressでイテレータをポインタへ変換して渡す
+  if (auto [ptr, ec] = std::from_chars(std::to_address(it), std::to_address(end), out, std::chars_format::general); ec != std::errc{}) {
+    return std::nullopt;
+  }
+
+  return out;
+}
+
+int main() {
+  std::string str = &amp;#34;3.1415926535897932384626433832795 is pi&amp;#34;;
+  
+  if (auto opt = str_to_double(str); opt) {
+    std::cout &amp;lt;&amp;lt; std::format(&amp;#34;{:.15f}\n&amp;#34;, *opt);
+  } else {
+    std::cout &amp;lt;&amp;lt; &amp;#34;conversion failed.\n&amp;#34;;
+  }
+
+  std::string_view strview = &amp;#34;2.7182818284590452353602874 is e&amp;#34;;
+  
+  if (auto opt = str_to_double(strview); opt) {
+    std::cout &amp;lt;&amp;lt; std::format(&amp;#34;{:.15f}\n&amp;#34;, *opt);
+  } else {
+    std::cout &amp;lt;&amp;lt; &amp;#34;conversion failed.\n&amp;#34;;
+  }
+
+  const char cstr[] = &amp;#34;1.10001e-01 is Liouville number&amp;#34;;
+  std::vector&amp;lt;char&amp;gt; strvec(cstr, std::ranges::end(cstr));
+  
+  if (auto opt = str_to_double(strvec); opt) {
+    std::cout &amp;lt;&amp;lt; std::format(&amp;#34;{:.15f}\n&amp;#34;, *opt);
+  } else {
+    std::cout &amp;lt;&amp;lt; &amp;#34;conversion failed.\n&amp;#34;;
+  }
+
+  std::span sp{cstr};
+  
+  if (auto opt = str_to_double(sp); opt) {
+    std::cout &amp;lt;&amp;lt; std::format(&amp;#34;{:.15f}\n&amp;#34;, *opt);
+  } else {
+    std::cout &amp;lt;&amp;lt; &amp;#34;conversion failed.\n&amp;#34;;
+  }
+}
+```
+* std::from_chars[color ff0000]
+* enable_view[link /reference/ranges/contiguous_range.md]
+* enable_view[link /reference/ranges/range_value_t.md]
+* enable_view[link /reference/ranges/begin.md]
+* enable_view[link /reference/ranges/end.md]
+* enable_view[link /reference/memory/to_address.md]
+* enable_view[link /reference/format/format.md]
+
+#### 出力
+
+```
+3.141592653589793
+2.718281828459045
+0.110001000000000
+0.110001000000000
+```
+
 ## バージョン
 ### 言語
 - C++17
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>クラステンプレートのテンプレート引数推論 -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/type_deduction_for_class_templates.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:lang/cpp17/type_deduction_for_class_templates.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/type_deduction_for_class_templates.md b/lang/cpp17/type_deduction_for_class_templates.md
index a6c5bcc05..6f5012924 100644
--- a/lang/cpp17/type_deduction_for_class_templates.md
+++ b/lang/cpp17/type_deduction_for_class_templates.md
@@ -193,7 +193,7 @@ int main()
 * wp.lock()[link /reference/memory/weak_ptr/lock.md]
 * std::make_tuple[link /reference/tuple/make_tuple.md]
 * std::promise[link /reference/future/promise.md]
-* p.get_future()[link /reference/future/promise/get_future.md]
+* pro.get_future()[link /reference/future/promise/get_future.md]
 * std::future[link /reference/future/future.md]
 
 #### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>equal -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_equal.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/algorithm/ranges_equal.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_equal.md b/reference/algorithm/ranges_equal.md
index 57026ce10..8b5fbc371 100644
--- a/reference/algorithm/ranges_equal.md
+++ b/reference/algorithm/ranges_equal.md
@@ -44,10 +44,6 @@ namespace std::ranges {
 * indirectly_comparable[link /reference/iterator/indirectly_comparable.md]
 * input_range[link /reference/ranges/input_range.md]
 * iterator_t[link /reference/ranges/iterator_t.md]
-* invoke[link /reference/functional/invoke.md]
-* begin[link /reference/ranges/begin.md]
-* end[link /reference/ranges/end.md]
-* ref[link /reference/functional/ref.md]
 
 ## 概要
 2つの範囲を等値比較する。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>fill_n -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_fill_n.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/algorithm/ranges_fill_n.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_fill_n.md b/reference/algorithm/ranges_fill_n.md
index 4916416db..690d0ad50 100644
--- a/reference/algorithm/ranges_fill_n.md
+++ b/reference/algorithm/ranges_fill_n.md
@@ -41,7 +41,7 @@ int main() {
   std::ranges::fill_n(std::ostream_iterator&amp;lt;int&amp;gt;(std::cout, &amp;#34;,&amp;#34;), 10, 3);
 }
 ```
-* std::fill_n[color ff0000]
+* std::ranges::fill_n[color ff0000]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>find -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_find.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/algorithm/ranges_find.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_find.md b/reference/algorithm/ranges_find.md
index d7d1df6a9..deb2ea76b 100644
--- a/reference/algorithm/ranges_find.md
+++ b/reference/algorithm/ranges_find.md
@@ -104,7 +104,6 @@ inline constexpr find_impl find;
 * ranges::equal_to[link /reference/functional/ranges_equal_to.md]
 * input_range[link /reference/ranges/input_range.md]
 * projected[link /reference/iterator/projected.md]
-* invoke[link /reference/functional/invoke.md]
 * begin[link /reference/ranges/begin.md]
 * end[link /reference/ranges/end.md]
 * ref[link /reference/functional/ref.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>generate -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_generate.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/algorithm/ranges_generate.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_generate.md b/reference/algorithm/ranges_generate.md
index c07e9c82b..174670b73 100644
--- a/reference/algorithm/ranges_generate.md
+++ b/reference/algorithm/ranges_generate.md
@@ -69,7 +69,7 @@ int main() {
   }
 }
 ```
-* std::generate[color ff0000]
+* std::ranges::generate[color ff0000]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>generate_n -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_generate_n.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/algorithm/ranges_generate_n.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_generate_n.md b/reference/algorithm/ranges_generate_n.md
index 04ff5213f..69e58346d 100644
--- a/reference/algorithm/ranges_generate_n.md
+++ b/reference/algorithm/ranges_generate_n.md
@@ -55,7 +55,7 @@ int main() {
   std::ranges::generate_n(std::ostream_iterator&amp;lt;int&amp;gt;(std::cout, &amp;#34;,&amp;#34;), 10, [&amp;amp;n]{ auto t = n; n *= 2; return t; });
 }
 ```
-* std::generate_n[color ff0000]
+* std::ranges::generate_n[color ff0000]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>max_element -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_max_element.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/algorithm/ranges_max_element.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_max_element.md b/reference/algorithm/ranges_max_element.md
index 267aee7f7..86a6dab8b 100644
--- a/reference/algorithm/ranges_max_element.md
+++ b/reference/algorithm/ranges_max_element.md
@@ -30,7 +30,6 @@ namespace std::ranges {
 * indirect_strict_weak_order[link /reference/iterator/indirect_strict_weak_order.md]
 * projected[link /reference/iterator/projected.md]
 * ranges::less[link /reference/functional/ranges_less.md]
-* initializer_list[link /reference/initializer_list/initializer_list.md]
 * forward_range[link /reference/ranges/forward_range.md]
 * iterator_t[link /reference/ranges/iterator_t.md]
 * borrowed_iterator_t[link /reference/ranges/borrowed_iterator_t.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>min_element -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_min_element.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/algorithm/ranges_min_element.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_min_element.md b/reference/algorithm/ranges_min_element.md
index 27966205a..3b758bc3a 100644
--- a/reference/algorithm/ranges_min_element.md
+++ b/reference/algorithm/ranges_min_element.md
@@ -30,7 +30,6 @@ namespace std::ranges {
 * indirect_strict_weak_order[link /reference/iterator/indirect_strict_weak_order.md]
 * projected[link /reference/iterator/projected.md]
 * ranges::less[link /reference/functional/ranges_less.md]
-* initializer_list[link /reference/initializer_list/initializer_list.md]
 * forward_range[link /reference/ranges/forward_range.md]
 * iterator_t[link /reference/ranges/iterator_t.md]
 * borrowed_iterator_t[link /reference/ranges/borrowed_iterator_t.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>minmax_element -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_minmax_element.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/algorithm/ranges_minmax_element.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_minmax_element.md b/reference/algorithm/ranges_minmax_element.md
index cb0d2b76e..69b9cb6af 100644
--- a/reference/algorithm/ranges_minmax_element.md
+++ b/reference/algorithm/ranges_minmax_element.md
@@ -31,7 +31,6 @@ namespace std::ranges {
 * indirect_strict_weak_order[link /reference/iterator/indirect_strict_weak_order.md]
 * projected[link /reference/iterator/projected.md]
 * ranges::less[link /reference/functional/ranges_less.md]
-* initializer_list[link /reference/initializer_list/initializer_list.md]
 * forward_range[link /reference/ranges/forward_range.md]
 * iterator_t[link /reference/ranges/iterator_t.md]
 * borrowed_iterator_t[link /reference/ranges/borrowed_iterator_t.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>mismatch -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_mismatch.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/algorithm/ranges_mismatch.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_mismatch.md b/reference/algorithm/ranges_mismatch.md
index 71f550a11..d366cdcd9 100644
--- a/reference/algorithm/ranges_mismatch.md
+++ b/reference/algorithm/ranges_mismatch.md
@@ -46,14 +46,9 @@ namespace std::ranges {
 * ranges::equal_to[link /reference/functional/ranges_equal_to.md]
 * identity[link /reference/functional/identity.md]
 * indirectly_comparable[link /reference/iterator/indirectly_comparable.md]
-* subrange[link /reference/ranges/subrange.md]
 * input_range[link /reference/ranges/input_range.md]
 * iterator_t[link /reference/ranges/iterator_t.md]
 * borrowed_iterator_t[link /reference/ranges/borrowed_iterator_t.md]
-* invoke[link /reference/functional/invoke.md]
-* begin[link /reference/ranges/begin.md]
-* end[link /reference/ranges/end.md]
-* ref[link /reference/functional/ref.md]
 
 
 ## 概要
@@ -156,7 +151,6 @@ inline constexpr mismatch_impl mismatch;
 * ranges::equal_to[link /reference/functional/ranges_equal_to.md]
 * identity[link /reference/functional/identity.md]
 * indirectly_comparable[link /reference/iterator/indirectly_comparable.md]
-* subrange[link /reference/ranges/subrange.md]
 * input_range[link /reference/ranges/input_range.md]
 * iterator_t[link /reference/ranges/iterator_t.md]
 * borrowed_iterator_t[link /reference/ranges/borrowed_iterator_t.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>move_backward -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_move_backward.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/algorithm/ranges_move_backward.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_move_backward.md b/reference/algorithm/ranges_move_backward.md
index a49dc8227..f649a4a92 100644
--- a/reference/algorithm/ranges_move_backward.md
+++ b/reference/algorithm/ranges_move_backward.md
@@ -96,7 +96,7 @@ int main() {
 ```
 * std::ranges::move_backward[color ff0000]
 * v.emplace_back[link /reference/vector/vector/emplace_back.md]
-* std::move[link move.md]
+* std::ranges::move[link ranges_move.md]
 * std::views::take[link /reference/ranges/take_view.md]
 
 ### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>prev_permutation -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_prev_permutation.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/algorithm/ranges_prev_permutation.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_prev_permutation.md b/reference/algorithm/ranges_prev_permutation.md
index ae00858a1..fde526063 100644
--- a/reference/algorithm/ranges_prev_permutation.md
+++ b/reference/algorithm/ranges_prev_permutation.md
@@ -90,7 +90,7 @@ int main ()
   } while (std::ranges::prev_permutation(v).found);
 }
 ```
-* std::prev_permutation[color ff0000]
+* std::ranges::prev_permutation[color ff0000]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>remove_copy_if -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_remove_copy_if.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/algorithm/ranges_remove_copy_if.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_remove_copy_if.md b/reference/algorithm/ranges_remove_copy_if.md
index f6a052879..423a93b34 100644
--- a/reference/algorithm/ranges_remove_copy_if.md
+++ b/reference/algorithm/ranges_remove_copy_if.md
@@ -83,7 +83,7 @@ int main() {
   std::ranges::remove_copy_if(v, std::ostream_iterator&amp;lt;int&amp;gt;(std::cout, &amp;#34;,&amp;#34;), [](int x) { return x%2 != 0; });
 }
 ```
-* std::remove_copy_if[color ff0000]
+* std::ranges::remove_copy_if[color ff0000]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>rotate -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_rotate.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/algorithm/ranges_rotate.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_rotate.md b/reference/algorithm/ranges_rotate.md
index 6fbe6715f..23d234695 100644
--- a/reference/algorithm/ranges_rotate.md
+++ b/reference/algorithm/ranges_rotate.md
@@ -69,7 +69,6 @@ int main() {
 ```
 * std::ranges::rotate[color ff0000]
 * str.begin()[link /reference/string/basic_string/begin.md]
-* str.end()[link /reference/string/basic_string/end.md]
 
 #### 出力
 ```
@@ -119,7 +118,6 @@ int main()
 * std::ranges::rotate[color ff0000]
 * std::ranges::copy[link ranges_copy.md]
 * seq.begin()[link /reference/vector/vector/begin.md]
-* seq.end[link /reference/vector/vector/end.md]
 * seq.assign[link /reference/vector/vector/assign.md]
 * std::swap[link /reference/utility/swap.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>rotate_copy -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_rotate_copy.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/algorithm/ranges_rotate_copy.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_rotate_copy.md b/reference/algorithm/ranges_rotate_copy.md
index 87cfa3d3e..0331ba610 100644
--- a/reference/algorithm/ranges_rotate_copy.md
+++ b/reference/algorithm/ranges_rotate_copy.md
@@ -74,7 +74,6 @@ int main() {
 ```
 * std::ranges::rotate_copy[color ff0000]
 * str.begin()[link /reference/string/basic_string/begin.md]
-* str.end()[link /reference/string/basic_string/end.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>set_difference -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_set_difference.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/algorithm/ranges_set_difference.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_set_difference.md b/reference/algorithm/ranges_set_difference.md
index d93ad1ab2..b65e42f67 100644
--- a/reference/algorithm/ranges_set_difference.md
+++ b/reference/algorithm/ranges_set_difference.md
@@ -110,7 +110,6 @@ int main()
 ```
 * std::ranges::set_difference[color ff0000]
 * std::multiset[link /reference/set/multiset.md]
-* begin()[link /reference/set/set/begin.md]
 * end()[link /reference/set/set/end.md]
 * std::inserter[link /reference/iterator/inserter.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>set_symmetric_difference -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_set_symmetric_difference.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/algorithm/ranges_set_symmetric_difference.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_set_symmetric_difference.md b/reference/algorithm/ranges_set_symmetric_difference.md
index e823c3f1e..523137d70 100644
--- a/reference/algorithm/ranges_set_symmetric_difference.md
+++ b/reference/algorithm/ranges_set_symmetric_difference.md
@@ -118,7 +118,6 @@ int main()
 ```
 * std::ranges::set_symmetric_difference[color ff0000]
 * std::multiset[link /reference/set/multiset.md]
-* begin()[link /reference/set/set/begin.md]
 * end()[link /reference/set/set/end.md]
 * std::inserter[link /reference/iterator/inserter.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>shift_left -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_shift_left.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/algorithm/ranges_shift_left.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_shift_left.md b/reference/algorithm/ranges_shift_left.md
index 019b11dd2..468fc8311 100644
--- a/reference/algorithm/ranges_shift_left.md
+++ b/reference/algorithm/ranges_shift_left.md
@@ -87,7 +87,7 @@ int main()
   std::cout &amp;lt;&amp;lt; std::endl;
 }
 ```
-* std::shift_left[color ff0000]
+* std::ranges::shift_left[color ff0000]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>shuffle -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_shuffle.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/algorithm/ranges_shuffle.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_shuffle.md b/reference/algorithm/ranges_shuffle.md
index 28130bad0..a804b5fe6 100644
--- a/reference/algorithm/ranges_shuffle.md
+++ b/reference/algorithm/ranges_shuffle.md
@@ -112,8 +112,6 @@ int main() {
 }
 ```
 * std::ranges::shuffle[color ff0000]
-* input.begin()[link /reference/string/basic_string/begin.md]
-* input.end()[link /reference/string/basic_string/end.md]
 
 #### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>stable_sort -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_stable_sort.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/algorithm/ranges_stable_sort.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_stable_sort.md b/reference/algorithm/ranges_stable_sort.md
index 2564b1bc7..584ce90ea 100644
--- a/reference/algorithm/ranges_stable_sort.md
+++ b/reference/algorithm/ranges_stable_sort.md
@@ -77,7 +77,7 @@ int main()
   std::cout &amp;lt;&amp;lt; std::endl;
 }
 ```
-* std::stable_sort[color ff0000]
+* std::ranges::stable_sort[color ff0000]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>starts_with -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_starts_with.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/algorithm/ranges_starts_with.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_starts_with.md b/reference/algorithm/ranges_starts_with.md
index 8331f84c9..562269501 100644
--- a/reference/algorithm/ranges_starts_with.md
+++ b/reference/algorithm/ranges_starts_with.md
@@ -111,7 +111,6 @@ inline constexpr starts_with_impl starts_with;
 * iterator_t[link /reference/ranges/iterator_t.md]
 * move[link /reference/utility/move.md]
 * mismatch[link ranges_mismatch.md]
-* invoke[link /reference/functional/invoke.md]
 * begin[link /reference/ranges/begin.md]
 * end[link /reference/ranges/end.md]
 * ref[link /reference/functional/ref.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>transform -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_transform.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/algorithm/ranges_transform.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_transform.md b/reference/algorithm/ranges_transform.md
index 9586ce3e7..dbb995a60 100644
--- a/reference/algorithm/ranges_transform.md
+++ b/reference/algorithm/ranges_transform.md
@@ -179,7 +179,7 @@ int main() {
   std::vector&amp;lt;std::string&amp;gt; result;
 
   // v1[n] の文字を v2[n] 回繰り返した文字列を返す
-  std::ranges::transform(v1, v2, std::back_inserter(result), [](char a, int b) { return std::string(b, a); });
+  std::ranges::transform(v1, v2, std::back_inserter(result), [](char a, int b) { return std::to_string(b, a); });
 
   for (const std::string&amp;amp; s : result) {
     std::cout &amp;lt;&amp;lt; s &amp;lt;&amp;lt; std::endl;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>transform -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/transform.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/algorithm/transform.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/transform.md b/reference/algorithm/transform.md
index 2fde7dbbf..3c49dc84c 100644
--- a/reference/algorithm/transform.md
+++ b/reference/algorithm/transform.md
@@ -136,7 +136,7 @@ int main() {
 
   // v1[n] の文字を v2[n] 回繰り返した文字列を返す
   std::transform(v1.begin(), v1.end(), v2.begin(), std::back_inserter(result),
-    [](char a, int b) { return std::string(b, a); });
+    [](char a, int b) { return std::to_string(b, a); });
 
   std::for_each(result.begin(), result.end(),
     [](const std::string&amp;amp; s) { std::cout &amp;lt;&amp;lt; s &amp;lt;&amp;lt; std::endl; });
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator|= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/atomic/atomic_ref/op_or_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/atomic/atomic_ref/op_or_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/atomic/atomic_ref/op_or_assign.md b/reference/atomic/atomic_ref/op_or_assign.md
index 5b54a8848..2abc2f024 100644
--- a/reference/atomic/atomic_ref/op_or_assign.md
+++ b/reference/atomic/atomic_ref/op_or_assign.md
@@ -47,8 +47,7 @@ int main()
   std::cout &amp;lt;&amp;lt; std::bitset&amp;lt;4&amp;gt;(value).to_string() &amp;lt;&amp;lt; std::endl;
 }
 ```
-* x |= b;[color ff0000]
-* x.load()[link load.md]
+* x |= 0b1110;[color ff0000]
 * to_string()[link /reference/bitset/bitset/to_string.md]
 
 #### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>DBL_EPSILON -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/cfloat/dbl_epsilon.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/cfloat/dbl_epsilon.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cfloat/dbl_epsilon.md b/reference/cfloat/dbl_epsilon.md
index 818330fea..348fdb0d5 100644
--- a/reference/cfloat/dbl_epsilon.md
+++ b/reference/cfloat/dbl_epsilon.md
@@ -40,7 +40,7 @@ int main()
   std::cout &amp;lt;&amp;lt; std::pow(FLT_RADIX, 1 - DBL_MANT_DIG) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
 }
 ```
-* sts::setprecision[link /reference/iomanip/setprecision.md]
+* std::setprecision[link /reference/iomanip/setprecision.md]
 * DBL_EPSILON[color ff0000]
 * FLT_RADIX[link flt_radix.md]
 * DBL_DIG[link dbl_dig.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>DBL_MAX -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/cfloat/dbl_max.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/cfloat/dbl_max.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cfloat/dbl_max.md b/reference/cfloat/dbl_max.md
index b66ef3ac2..113a856a7 100644
--- a/reference/cfloat/dbl_max.md
+++ b/reference/cfloat/dbl_max.md
@@ -41,7 +41,7 @@ int main()
   std::cout &amp;lt;&amp;lt; (1 - std::pow(FLT_RADIX, -DBL_MANT_DIG)) * std::pow(FLT_RADIX, DBL_MAX_EXP - 1) * FLT_RADIX &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
 }
 ```
-* sts::setprecision[link /reference/iomanip/setprecision.md]
+* std::setprecision[link /reference/iomanip/setprecision.md]
 * DBL_MAX[color ff0000]
 * FLT_RADIX[link flt_radix.md]
 * DBL_DIG[link dbl_dig.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>DBL_MIN -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/cfloat/dbl_min.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/cfloat/dbl_min.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cfloat/dbl_min.md b/reference/cfloat/dbl_min.md
index e42b2efb4..71b01434b 100644
--- a/reference/cfloat/dbl_min.md
+++ b/reference/cfloat/dbl_min.md
@@ -41,7 +41,7 @@ int main()
   std::cout &amp;lt;&amp;lt; std::pow(FLT_RADIX, DBL_MIN_EXP - 1) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
 }
 ```
-* sts::setprecision[link /reference/iomanip/setprecision.md]
+* std::setprecision[link /reference/iomanip/setprecision.md]
 * DBL_MIN[color ff0000]
 * FLT_RADIX[link flt_radix.md]
 * DBL_DIG[link dbl_dig.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>DBL_TRUE_MIN -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/cfloat/dbl_true_min.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/cfloat/dbl_true_min.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cfloat/dbl_true_min.md b/reference/cfloat/dbl_true_min.md
index ab8a9ebd7..61c29a52f 100644
--- a/reference/cfloat/dbl_true_min.md
+++ b/reference/cfloat/dbl_true_min.md
@@ -36,7 +36,7 @@ int main()
 }
 ```
 * DBL_TRUE_MIN[color ff0000]
-* sts::setprecision[link /reference/iomanip/setprecision.md]
+* std::setprecision[link /reference/iomanip/setprecision.md]
 * DBL_DIG[link dbl_dig.md]
 * DBL_HAS_SUBNORM[link dbl_has_subnorm.md]
 * DBL_MIN[link dbl_min.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>FLT_EPSILON -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/cfloat/flt_epsilon.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/cfloat/flt_epsilon.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cfloat/flt_epsilon.md b/reference/cfloat/flt_epsilon.md
index 418909ec4..fa5e040ff 100644
--- a/reference/cfloat/flt_epsilon.md
+++ b/reference/cfloat/flt_epsilon.md
@@ -40,7 +40,7 @@ int main()
   std::cout &amp;lt;&amp;lt; std::pow(FLT_RADIX, 1 - FLT_MANT_DIG) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
 }
 ```
-* sts::setprecision[link /reference/iomanip/setprecision.md]
+* std::setprecision[link /reference/iomanip/setprecision.md]
 * FLT_EPSILON[color ff0000]
 * FLT_RADIX[link flt_radix.md]
 * FLT_DIG[link flt_dig.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>FLT_MIN -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/cfloat/flt_min.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/cfloat/flt_min.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cfloat/flt_min.md b/reference/cfloat/flt_min.md
index c41100e25..16c00f672 100644
--- a/reference/cfloat/flt_min.md
+++ b/reference/cfloat/flt_min.md
@@ -41,7 +41,7 @@ int main()
   std::cout &amp;lt;&amp;lt; std::pow((float)FLT_RADIX, (float)(FLT_MIN_EXP - 1)) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
 }
 ```
-* sts::setprecision[link /reference/iomanip/setprecision.md]
+* std::setprecision[link /reference/iomanip/setprecision.md]
 * FLT_MIN[color ff0000]
 * FLT_RADIX[link flt_radix.md]
 * FLT_DIG[link flt_dig.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>FLT_TRUE_MIN -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/cfloat/flt_true_min.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/cfloat/flt_true_min.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cfloat/flt_true_min.md b/reference/cfloat/flt_true_min.md
index ef514f534..8ae3aceae 100644
--- a/reference/cfloat/flt_true_min.md
+++ b/reference/cfloat/flt_true_min.md
@@ -36,7 +36,7 @@ int main()
 }
 ```
 * FLT_TRUE_MIN[color ff0000]
-* sts::setprecision[link /reference/iomanip/setprecision.md]
+* std::setprecision[link /reference/iomanip/setprecision.md]
 * FLT_DIG[link flt_dig.md]
 * FLT_HAS_SUBNORM[link flt_has_subnorm.md]
 * FLT_MIN[link flt_min.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>LDBL_EPSILON -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/cfloat/ldbl_epsilon.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/cfloat/ldbl_epsilon.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cfloat/ldbl_epsilon.md b/reference/cfloat/ldbl_epsilon.md
index 113b99cd5..b5a0f4572 100644
--- a/reference/cfloat/ldbl_epsilon.md
+++ b/reference/cfloat/ldbl_epsilon.md
@@ -40,7 +40,7 @@ int main()
   std::cout &amp;lt;&amp;lt; std::pow(FLT_RADIX, 1 - LDBL_MANT_DIG) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
 }
 ```
-* sts::setprecision[link /reference/iomanip/setprecision.md]
+* std::setprecision[link /reference/iomanip/setprecision.md]
 * LDBL_EPSILON[color ff0000]
 * FLT_RADIX[link flt_radix.md]
 * LDBL_DIG[link ldbl_dig.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>LDBL_MAX -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/cfloat/ldbl_max.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/cfloat/ldbl_max.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cfloat/ldbl_max.md b/reference/cfloat/ldbl_max.md
index 02490dfca..242f51a1e 100644
--- a/reference/cfloat/ldbl_max.md
+++ b/reference/cfloat/ldbl_max.md
@@ -41,7 +41,7 @@ int main()
   std::cout &amp;lt;&amp;lt; (1 - std::pow((long double)FLT_RADIX, -LDBL_MANT_DIG)) * std::pow((long double)FLT_RADIX, LDBL_MAX_EXP - 1) * FLT_RADIX &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
 }
 ```
-* sts::setprecision[link /reference/iomanip/setprecision.md]
+* std::setprecision[link /reference/iomanip/setprecision.md]
 * LDBL_MAX[color ff0000]
 * FLT_RADIX[link flt_radix.md]
 * LDBL_DIG[link ldbl_dig.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>LDBL_MAX_EXP -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/cfloat/ldbl_max_exp.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/cfloat/ldbl_max_exp.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cfloat/ldbl_max_exp.md b/reference/cfloat/ldbl_max_exp.md
index 337a096eb..b11622990 100644
--- a/reference/cfloat/ldbl_max_exp.md
+++ b/reference/cfloat/ldbl_max_exp.md
@@ -39,7 +39,7 @@ int main()
   std::cout &amp;lt;&amp;lt; std::pow((long double)FLT_RADIX, LDBL_MAX_EXP) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
 }
 ```
-* sts::setprecision[link /reference/iomanip/setprecision.md]
+* std::setprecision[link /reference/iomanip/setprecision.md]
 * LDBL_MAX_EXP[color ff0000]
 * FLT_RADIX[link flt_radix.md]
 * LDBL_DIG[link ldbl_dig.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>LDBL_MIN -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/cfloat/ldbl_min.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/cfloat/ldbl_min.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cfloat/ldbl_min.md b/reference/cfloat/ldbl_min.md
index 102c9f6b0..f3aaa736b 100644
--- a/reference/cfloat/ldbl_min.md
+++ b/reference/cfloat/ldbl_min.md
@@ -41,7 +41,7 @@ int main()
   std::cout &amp;lt;&amp;lt; std::pow((long double)FLT_RADIX, LDBL_MIN_EXP - 1) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
 }
 ```
-* sts::setprecision[link /reference/iomanip/setprecision.md]
+* std::setprecision[link /reference/iomanip/setprecision.md]
 * LDBL_MIN[color ff0000]
 * FLT_RADIX[link flt_radix.md]
 * LDBL_DIG[link ldbl_dig.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>LDBL_TRUE_MIN -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/cfloat/ldbl_true_min.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/cfloat/ldbl_true_min.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cfloat/ldbl_true_min.md b/reference/cfloat/ldbl_true_min.md
index 982fe0831..154ea8609 100644
--- a/reference/cfloat/ldbl_true_min.md
+++ b/reference/cfloat/ldbl_true_min.md
@@ -36,7 +36,7 @@ int main()
 }
 ```
 * LDBL_TRUE_MIN[color ff0000]
-* sts::setprecision[link /reference/iomanip/setprecision.md]
+* std::setprecision[link /reference/iomanip/setprecision.md]
 * LDBL_DIG[link ldbl_dig.md]
 * LDBL_HAS_SUBNORM[link ldbl_has_subnorm.md]
 * LDBL_MIN[link ldbl_min.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ambiguous_local_time -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/chrono/ambiguous_local_time.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/chrono/ambiguous_local_time.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/ambiguous_local_time.md b/reference/chrono/ambiguous_local_time.md
index 550444298..371f21141 100644
--- a/reference/chrono/ambiguous_local_time.md
+++ b/reference/chrono/ambiguous_local_time.md
@@ -39,8 +39,6 @@ os &amp;lt;&amp;lt; tp &amp;lt;&amp;lt; &amp;#34; is ambiguous. It could be\n&amp;#34;
 
 return os.str().c_str();
 ```
-* local_seconds[link local_time.md]
-* time_since_epoch()[link time_point/time_since_epoch.md]
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>gps_time -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/chrono/gps_time.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/chrono/gps_time.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/gps_time.md b/reference/chrono/gps_time.md
index 0e962cd38..a995ab593 100644
--- a/reference/chrono/gps_time.md
+++ b/reference/chrono/gps_time.md
@@ -149,7 +149,6 @@ int main()
 }
 ```
 * chrono::from_stream[color ff0000]
-* offset.count()[link duration/count.md]
 
 #### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>local_time -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/chrono/local_time.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/chrono/local_time.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/local_time.md b/reference/chrono/local_time.md
index 05a89e765..db628b009 100644
--- a/reference/chrono/local_time.md
+++ b/reference/chrono/local_time.md
@@ -162,7 +162,6 @@ int main()
 }
 ```
 * chrono::from_stream[color ff0000]
-* offset.count()[link duration/count.md]
 
 #### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>locate_zone -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/chrono/locate_zone.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/chrono/locate_zone.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/locate_zone.md b/reference/chrono/locate_zone.md
index 99f64aee9..7ae502cfc 100644
--- a/reference/chrono/locate_zone.md
+++ b/reference/chrono/locate_zone.md
@@ -22,7 +22,7 @@ namespace std::chrono {
 return get_tzdb().locate_zone(tz_name);
 ```
 * get_tzdb()[link get_tzdb.md]
-* locate_zone()[link tzdb/locate_zone.md]
+* locate_zone[link tzdb/locate_zone.md]
 
 
 ## 例外
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator/ -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_weekday/op_append.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/chrono/month_weekday/op_append.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_weekday/op_append.md b/reference/chrono/month_weekday/op_append.md
index 99a05ef9e..7cafb9f77 100644
--- a/reference/chrono/month_weekday/op_append.md
+++ b/reference/chrono/month_weekday/op_append.md
@@ -48,7 +48,7 @@ int main()
 * March[link /reference/chrono/month_constants.md]
 * Sunday[link /reference/chrono/weekday_constants.md]
 * 2020y[link /reference/chrono/year/op_y.md]
-* chrono::year_month_weekday[link /reference/chrono/year_month_weekday.md]
+* year_month_weekday[link /reference/chrono/year_month_weekday.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator/ -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_weekday_last/op_append.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/chrono/month_weekday_last/op_append.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_weekday_last/op_append.md b/reference/chrono/month_weekday_last/op_append.md
index 7063980e1..0bb75e882 100644
--- a/reference/chrono/month_weekday_last/op_append.md
+++ b/reference/chrono/month_weekday_last/op_append.md
@@ -49,7 +49,7 @@ int main()
 * Sunday[link /reference/chrono/weekday_constants.md]
 * 2020y[link /reference/chrono/year/op_y.md]
 * last[link /reference/chrono/last_spec.md]
-* chrono::year_month_weekday_last[link /reference/chrono/year_month_weekday_last.md]
+* year_month_weekday_last[link /reference/chrono/year_month_weekday_last.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_weekday_last/op_constructor.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/chrono/month_weekday_last/op_constructor.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_weekday_last/op_constructor.md b/reference/chrono/month_weekday_last/op_constructor.md
index 56da899b8..9da56b9bd 100644
--- a/reference/chrono/month_weekday_last/op_constructor.md
+++ b/reference/chrono/month_weekday_last/op_constructor.md
@@ -15,7 +15,6 @@ month_weekday_last(const month_weekday_last&amp;amp;) = default; // (3) C++20
 month_weekday_last(month_weekday_last&amp;amp;&amp;amp;) = default;      // (4) C++20
 ```
 * chrono::month[link /reference/chrono/month.md]
-* chrono::weekday_indexed[link /reference/chrono/weekday_indexed.md]
 
 ## 概要
 - (1) : デフォルトコンストラクタ。定義されない
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>tai_time -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/chrono/tai_time.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/chrono/tai_time.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/tai_time.md b/reference/chrono/tai_time.md
index eeb23338a..d4b24f107 100644
--- a/reference/chrono/tai_time.md
+++ b/reference/chrono/tai_time.md
@@ -148,7 +148,6 @@ int main()
 }
 ```
 * chrono::from_stream[color ff0000]
-* offset.count()[link duration/count.md]
 
 #### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt; -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/chrono/time_point/op_greater.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/chrono/time_point/op_greater.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/time_point/op_greater.md b/reference/chrono/time_point/op_greater.md
index 11c637ad3..14a0914a8 100644
--- a/reference/chrono/time_point/op_greater.md
+++ b/reference/chrono/time_point/op_greater.md
@@ -26,7 +26,7 @@ namespace chrono {
 ```cpp
 return lhs.time_since_epoch() &amp;gt; rhs.time_since_poch();
 ```
-* time_since_spoch[link /reference/chrono/time_point/time_since_epoch.md]
+* time_since_epoch[link /reference/chrono/time_point/time_since_epoch.md]
 
 ## 例
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/chrono/time_point/op_greater_equal.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/chrono/time_point/op_greater_equal.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/time_point/op_greater_equal.md b/reference/chrono/time_point/op_greater_equal.md
index 429be0847..1cc342489 100644
--- a/reference/chrono/time_point/op_greater_equal.md
+++ b/reference/chrono/time_point/op_greater_equal.md
@@ -26,7 +26,7 @@ namespace chrono {
 ```cpp
 return lhs.time_since_epoch() &amp;lt; rhs.time_since_poch();
 ```
-* time_since_spoch[link /reference/chrono/time_point/time_since_epoch.md]
+* time_since_epoch[link /reference/chrono/time_point/time_since_epoch.md]
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt; -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/chrono/time_point/op_less.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/chrono/time_point/op_less.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/time_point/op_less.md b/reference/chrono/time_point/op_less.md
index 2acc74a0f..cd84040b3 100644
--- a/reference/chrono/time_point/op_less.md
+++ b/reference/chrono/time_point/op_less.md
@@ -26,7 +26,7 @@ namespace chrono {
 ```cpp
 return lhs.time_since_epoch() &amp;lt; rhs.time_since_poch();
 ```
-* time_since_spoch[link /reference/chrono/time_point/time_since_epoch.md]
+* time_since_epoch[link /reference/chrono/time_point/time_since_epoch.md]
 
 ## 例
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/chrono/time_point/op_less_equal.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/chrono/time_point/op_less_equal.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/time_point/op_less_equal.md b/reference/chrono/time_point/op_less_equal.md
index f5883d03f..b7d141b4e 100644
--- a/reference/chrono/time_point/op_less_equal.md
+++ b/reference/chrono/time_point/op_less_equal.md
@@ -26,7 +26,7 @@ namespace chrono {
 ```cpp
 return lhs.time_since_epoch() &amp;lt;= rhs.time_since_poch();
 ```
-* time_since_spoch[link /reference/chrono/time_point/time_since_epoch.md]
+* time_since_epoch[link /reference/chrono/time_point/time_since_epoch.md]
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>round -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/chrono/time_point/round.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/chrono/time_point/round.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/time_point/round.md b/reference/chrono/time_point/round.md
index 8b5f483cb..e504ce44f 100644
--- a/reference/chrono/time_point/round.md
+++ b/reference/chrono/time_point/round.md
@@ -20,7 +20,7 @@ namespace std::chrono {
 ```cpp
 return time_point&amp;lt;Clock, ToDuration&amp;gt;{round&amp;lt;ToDuration&amp;gt;(tp.time_since_epoch())};
 ```
-* ceil[link /reference/chrono/duration/ceil.md]
+* round[link /reference/chrono/duration/round.md]
 * tp.time_since_epoch()[link time_since_epoch.md]
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>to_local -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/chrono/time_zone/to_local.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/chrono/time_zone/to_local.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/time_zone/to_local.md b/reference/chrono/time_zone/to_local.md
index 81c93601b..da1f251f7 100644
--- a/reference/chrono/time_zone/to_local.md
+++ b/reference/chrono/time_zone/to_local.md
@@ -53,7 +53,6 @@ int main()
 * time_since_epoch()[link /reference/chrono/time_point/time_since_epoch.md]
 * chrono::locate_zone[link /reference/chrono/locate_zone.md]
 * 9h[link /reference/chrono/duration/op_h.md]
-* chrono::sys_time[link /reference/chrono/sys_time.md]
 * chrono::floor[link /reference/chrono/time_point/floor.md]
 
 ### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>to_sys -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/chrono/utc_clock/to_sys.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/chrono/utc_clock/to_sys.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/utc_clock/to_sys.md b/reference/chrono/utc_clock/to_sys.md
index 589cd28fd..3ed3614fe 100644
--- a/reference/chrono/utc_clock/to_sys.md
+++ b/reference/chrono/utc_clock/to_sys.md
@@ -44,7 +44,6 @@ int main()
 * to_sys[color ff0000]
 * from_sys[link from_sys.md]
 * sys_days[link /reference/chrono/sys_time.md]
-* system_clock[link /reference/chrono/system_clock.md]
 * July[link /reference/chrono/month_constants.md]
 * time_since_epoch()[link /reference/chrono/time_point/time_since_epoch.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator[] -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/chrono/weekday/op_at.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/chrono/weekday/op_at.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/weekday/op_at.md b/reference/chrono/weekday/op_at.md
index db488a35b..8ac1c59ec 100644
--- a/reference/chrono/weekday/op_at.md
+++ b/reference/chrono/weekday/op_at.md
@@ -55,8 +55,8 @@ int main()
   }
 }
 ```
-* chrono::Sunday[link /reference/chrono/weekday_constants.md]
-* chrono::November[link /reference/chrono/month_constants.md]
+* Sunday[link /reference/chrono/weekday_constants.md]
+* November[link /reference/chrono/month_constants.md]
 * last[link /reference/chrono/last_spec.md]
 * year_month_weekday[link /reference/chrono/year_month_weekday.md]
 * year_month_weekday_last[link /reference/chrono/year_month_weekday_last.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>year_month_day -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/chrono/year_month_day.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day.md b/reference/chrono/year_month_day.md
index 89c9eef9f..9ada4327f 100644
--- a/reference/chrono/year_month_day.md
+++ b/reference/chrono/year_month_day.md
@@ -280,7 +280,6 @@ int main()
 ```
 * 1985y[link year/op_y.md]
 * 1954y[link year/op_y.md]
-* 2000y[link year/op_y.md]
 * date.ok()[link year_month_day/ok.md]
 * year()[link year_month_day/year.md]
 * month()[link year_month_day/month.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>formatter -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/formatter.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/chrono/year_month_weekday/formatter.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/formatter.md b/reference/chrono/year_month_weekday/formatter.md
index 9e3624c77..4fb268236 100644
--- a/reference/chrono/year_month_weekday/formatter.md
+++ b/reference/chrono/year_month_weekday/formatter.md
@@ -37,7 +37,6 @@ int main() {
 }
 ```
 * std::format[link /reference/chrono/format.md]
-* std::locale[link /reference/locale/locale.md]
 * 2020y[link /reference/chrono/year/op_y.md]
 * chrono::Sunday[link /reference/chrono/weekday_constants.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator-= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/op_minus_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/chrono/year_month_weekday/op_minus_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/op_minus_assign.md b/reference/chrono/year_month_weekday/op_minus_assign.md
index d6c2bf7fb..50351c88c 100644
--- a/reference/chrono/year_month_weekday/op_minus_assign.md
+++ b/reference/chrono/year_month_weekday/op_minus_assign.md
@@ -54,7 +54,7 @@ int main()
   assert(chrono::year_month_day{chrono::sys_days{date}} == 2020y/3/8);
 }
 ```
-* 2019y[link /reference/chrono/year/op_y.md]
+* 2021y[link /reference/chrono/year/op_y.md]
 * 2020y[link /reference/chrono/year/op_y.md]
 * chrono::Sunday[link /reference/chrono/weekday_constants.md]
 * chrono::year_month_day[link /reference/chrono/year_month_day.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator+ -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/op_plus.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/chrono/year_month_weekday/op_plus.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/op_plus.md b/reference/chrono/year_month_weekday/op_plus.md
index 4557d5389..233de3cc2 100644
--- a/reference/chrono/year_month_weekday/op_plus.md
+++ b/reference/chrono/year_month_weekday/op_plus.md
@@ -55,7 +55,7 @@ return ymwd + dm;
 - (3) :
 
 ```cpp
-return (ymwd.year() + dy) / ywmd.month() / ywmd.weekday_indexed();
+return (ymwd.year() + dy) / ymwd.month() / ymwd.weekday_indexed();
 ```
 * ymwd.year()[link year.md]
 * ymwd.month()[link month.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>formatter -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday_last/formatter.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/chrono/year_month_weekday_last/formatter.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday_last/formatter.md b/reference/chrono/year_month_weekday_last/formatter.md
index 12ff5ce70..b80f0f0b5 100644
--- a/reference/chrono/year_month_weekday_last/formatter.md
+++ b/reference/chrono/year_month_weekday_last/formatter.md
@@ -37,7 +37,6 @@ int main() {
 }
 ```
 * std::format[link /reference/chrono/format.md]
-* std::locale[link /reference/locale/locale.md]
 * 2020y[link /reference/chrono/year/op_y.md]
 * chrono::Sunday[link /reference/chrono/weekday_constants.md]
 * chrono::last[link /reference/chrono/last_spec.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator-= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday_last/op_minus_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/chrono/year_month_weekday_last/op_minus_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday_last/op_minus_assign.md b/reference/chrono/year_month_weekday_last/op_minus_assign.md
index 741835a6b..f2eff1915 100644
--- a/reference/chrono/year_month_weekday_last/op_minus_assign.md
+++ b/reference/chrono/year_month_weekday_last/op_minus_assign.md
@@ -54,7 +54,7 @@ int main()
   assert(chrono::year_month_day{chrono::sys_days{date}} == 2020y/3/29);
 }
 ```
-* 2019y[link /reference/chrono/year/op_y.md]
+* 2021y[link /reference/chrono/year/op_y.md]
 * 2020y[link /reference/chrono/year/op_y.md]
 * chrono::Sunday[link /reference/chrono/weekday_constants.md]
 * chrono::last[link /reference/chrono/last_spec.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator+ -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday_last/op_plus.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/chrono/year_month_weekday_last/op_plus.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday_last/op_plus.md b/reference/chrono/year_month_weekday_last/op_plus.md
index 7f0ead02c..9fc1604de 100644
--- a/reference/chrono/year_month_weekday_last/op_plus.md
+++ b/reference/chrono/year_month_weekday_last/op_plus.md
@@ -55,7 +55,7 @@ return ymwdl + dm;
 - (3) :
 
 ```cpp
-return (ymwdl.year() + dy) / ywmdl.month() / ywmdl.weekday_last();
+return (ymwdl.year() + dy) / ymwdl.month() / ymwdl.weekday_last();
 ```
 * ymwdl.year()[link year.md]
 * ymwdl.month()[link month.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>weekday_last -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday_last/weekday_last.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/chrono/year_month_weekday_last/weekday_last.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday_last/weekday_last.md b/reference/chrono/year_month_weekday_last/weekday_last.md
index 680c42839..620553fc9 100644
--- a/reference/chrono/year_month_weekday_last/weekday_last.md
+++ b/reference/chrono/year_month_weekday_last/weekday_last.md
@@ -34,7 +34,7 @@ int main()
 }
 ```
 * date.weekday_last()[color ff0000]
-* chrono::weekday_indexed[link /reference/chrono/weekday_indexed.md]
+* chrono::weekday_last[link /reference/chrono/weekday_last.md]
 * 2020y[link /reference/chrono/year/op_y.md]
 * chrono::Sunday[link /reference/chrono/weekday_constants.md]
 * chrono::last[link /reference/chrono/last_spec.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>推論補助 -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/chrono/zoned_time/op_deduction_guide.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/chrono/zoned_time/op_deduction_guide.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/zoned_time/op_deduction_guide.md b/reference/chrono/zoned_time/op_deduction_guide.md
index ab6784e80..c937d247c 100644
--- a/reference/chrono/zoned_time/op_deduction_guide.md
+++ b/reference/chrono/zoned_time/op_deduction_guide.md
@@ -128,7 +128,6 @@ int main()
 ```
 * chrono::locate_zone[link /reference/chrono/locate_zone.md]
 * chrono::floor[link /reference/chrono/time_point/floor.md]
-* time_since_epoch()[link /reference/chrono/time_point/time_since_epoch.md]
 * chrono::system_clock[link /reference/chrono/system_clock.md]
 * now()[link /reference/chrono/system_clock/now.md]
 * chrono::time_zone[link /reference/chrono/time_zone.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>hypot -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/cmath/hypot.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/cmath/hypot.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/hypot.md b/reference/cmath/hypot.md
index 72e81ace9..041d83f2c 100644
--- a/reference/cmath/hypot.md
+++ b/reference/cmath/hypot.md
@@ -20,7 +20,7 @@ namespace std {
   float hypot(float x, float y, float z);                         // (8) C++17 から
   long double hypot(long double x, long double y, long double z); // (9) C++17 から
 
-  Promoted hypot(Arithmetic1 x, Arithmetic2 y, Arithmetic2 z);    // (10) C++17 から
+  Promoted hypot(Arithmetic1 x, Arithmetic2 y, Arithmetic3 z);    // (10) C++17 から
 }
 ```
 * Promoted[italic]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>compare_three_way_result -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/compare/compare_three_way_result.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/compare/compare_three_way_result.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/compare/compare_three_way_result.md b/reference/compare/compare_three_way_result.md
index 8af93a5ed..edf34bbac 100644
--- a/reference/compare/compare_three_way_result.md
+++ b/reference/compare/compare_three_way_result.md
@@ -78,7 +78,7 @@ int main()
   std::cout &amp;lt;&amp;lt; (t1 &amp;gt;= t2) &amp;lt;&amp;lt; std::endl;
 }
 ```
-* compare_three_way_result_t[color ff0000]
+* compare_three_way_result[color ff0000]
 * type_identity[link /reference/type_traits/type_identity.md]
 
 ### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>three_way_comparable -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/compare/three_way_comparable.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/compare/three_way_comparable.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/compare/three_way_comparable.md b/reference/compare/three_way_comparable.md
index 2ca9e777a..49c44dd75 100644
--- a/reference/compare/three_way_comparable.md
+++ b/reference/compare/three_way_comparable.md
@@ -60,7 +60,6 @@ concept three_way_comparable =
 * partial_ordering[link /reference/compare/partial_ordering.md]
 * weakly-equality-comparable-with[link /reference/concepts/equality_comparable.md]
 * remove_reference_t[link /reference/type_traits/remove_reference.md]
-* convertible_to[link /reference/concepts/convertible_to.md]
 
 - (2) : 以下のように定義される。
 
@@ -82,7 +81,6 @@ concept three_way_comparable_with =
 * partial_ordering[link /reference/compare/partial_ordering.md]
 * weakly-equality-comparable-with[link /reference/concepts/equality_comparable.md]
 * remove_reference_t[link /reference/type_traits/remove_reference.md]
-* convertible_to[link /reference/concepts/convertible_to.md]
 * common_reference_with[link /reference/concepts/common_reference_with.md]
 * common_reference_t[link /reference/type_traits/common_reference.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>common_with -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/concepts/common_with.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/concepts/common_with.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/concepts/common_with.md b/reference/concepts/common_with.md
index bed016ee0..83ab9c767 100644
--- a/reference/concepts/common_with.md
+++ b/reference/concepts/common_with.md
@@ -72,7 +72,7 @@ int main()
   f&amp;lt;std::pair&amp;lt;int&amp;amp;, double&amp;amp;&amp;gt;, std::pair&amp;lt;int, double&amp;gt;&amp;gt;();
 }
 ```
-* std::common_reference_with[color ff0000]
+* std::common_with[color ff0000]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>relation -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/concepts/relation.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/concepts/relation.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/concepts/relation.md b/reference/concepts/relation.md
index 12affba43..9bb2bb729 100644
--- a/reference/concepts/relation.md
+++ b/reference/concepts/relation.md
@@ -12,9 +12,7 @@ namespace std {
     predicate&amp;lt;R, T, U&amp;gt; &amp;amp;&amp;amp; predicate&amp;lt;R, U, T&amp;gt;;
 }
 ```
-* regular_invocable[link /reference/concepts/invocable.md]
-* boolean-testable[link /reference/concepts/boolean-testable.md]
-* invoke_result_t[link /reference/type_traits/invoke_result.md]
+* predicate[link predicate.md]
 
 ## 概要
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>swappable -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/concepts/swappable.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/concepts/swappable.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/concepts/swappable.md b/reference/concepts/swappable.md
index 236c0c4be..45216dac3 100644
--- a/reference/concepts/swappable.md
+++ b/reference/concepts/swappable.md
@@ -21,8 +21,8 @@ namespace std {
 }
 ```
 * swap[link /reference/concepts/swap.md]
-* remove_reference_t[link /reference/type_traits/remove_reference.md]
 * common_reference_with[link /reference/concepts/common_reference_with.md]
+* std::forward[link /reference/utility/forward.md]
 
 ## 概要
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>totally_ordered -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/concepts/totally_ordered.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/concepts/totally_ordered.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/concepts/totally_ordered.md b/reference/concepts/totally_ordered.md
index c2148ab63..feaab818d 100644
--- a/reference/concepts/totally_ordered.md
+++ b/reference/concepts/totally_ordered.md
@@ -22,8 +22,6 @@ namespace std {
     partially-ordered-with&amp;lt;T, U&amp;gt;;
 }
 ```
-* boolean[link /reference/concepts/boolean-testable.md]
-* common_reference_with[link /reference/concepts/common_reference_with.md]
 * common_reference_t[link /reference/type_traits/common_reference.md]
 * equality_comparable[link /reference/concepts/equality_comparable.md]
 * equality_comparable_with[link /reference/concepts/equality_comparable.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>coroutine_handle -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/coroutine/coroutine_handle.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/coroutine/coroutine_handle.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/coroutine/coroutine_handle.md b/reference/coroutine/coroutine_handle.md
index da8306f0c..2070d733d 100644
--- a/reference/coroutine/coroutine_handle.md
+++ b/reference/coroutine/coroutine_handle.md
@@ -20,7 +20,6 @@ namespace std {
   };
 }
 ```
-* hash[link /reference/functional/hash.md]
 
 ## 概要
 コルーチンに対応するコルーチンハンドル。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>bad_exception -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/exception/bad_exception.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/exception/bad_exception.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/exception/bad_exception.md b/reference/exception/bad_exception.md
index 6dde72828..a2ce7399a 100644
--- a/reference/exception/bad_exception.md
+++ b/reference/exception/bad_exception.md
@@ -74,7 +74,7 @@ int main()
 * std::bad_exception[color ff0000]
 * std::runtime_error[link /reference/stdexcept.md]
 * std::invalid_argument[link /reference/stdexcept.md]
-* std::unexpected[link unexpected.md]
+* std::set_unexpected[link set_unexpected.md]
 
 
 #### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>error_or -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/expected/expected/error_or.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/expected/expected/error_or.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/expected/expected/error_or.md b/reference/expected/expected/error_or.md
index e455fd330..e99602e94 100644
--- a/reference/expected/expected/error_or.md
+++ b/reference/expected/expected/error_or.md
@@ -39,7 +39,7 @@ int main()
   std::cout &amp;lt;&amp;lt; y.error_or(&amp;#34;-&amp;#34;) &amp;lt;&amp;lt; std::endl;
 }
 ```
-* error_or()[color ff0000]
+* error_or[color ff0000]
 * std::unexpected[link ../unexpected.md]
 
 ### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>value_or -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/expected/expected/value_or.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/expected/expected/value_or.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/expected/expected/value_or.md b/reference/expected/expected/value_or.md
index 5922c5ec9..e7431122a 100644
--- a/reference/expected/expected/value_or.md
+++ b/reference/expected/expected/value_or.md
@@ -39,7 +39,7 @@ int main()
   std::cout &amp;lt;&amp;lt; y.value_or(0) &amp;lt;&amp;lt; std::endl;
 }
 ```
-* value_or()[color ff0000]
+* value_or[color ff0000]
 * std::unexpected[link ../unexpected.md]
 
 ### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>equivalent -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/filesystem/equivalent.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/filesystem/equivalent.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/filesystem/equivalent.md b/reference/filesystem/equivalent.md
index 70b54435a..0105fafc5 100644
--- a/reference/filesystem/equivalent.md
+++ b/reference/filesystem/equivalent.md
@@ -11,7 +11,6 @@ namespace std::filesystem {
 }
 ```
 * path[link path.md]
-* std::uintmax_t[link /reference/cstdint/uintmax_t.md]
 
 ## 概要
 2つのエンティティが等価かを確認する。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_empty -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/filesystem/is_empty.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/filesystem/is_empty.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/filesystem/is_empty.md b/reference/filesystem/is_empty.md
index e1f58b814..da4477e9d 100644
--- a/reference/filesystem/is_empty.md
+++ b/reference/filesystem/is_empty.md
@@ -63,7 +63,6 @@ int main()
 ```
 * fs::is_empty[color ff0000]
 * fs::create_directory[link create_directory.md]
-* fs::status[link status.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>format_to -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/format/format_to.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/format/format_to.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/format/format_to.md b/reference/format/format_to.md
index cfa27ed94..d9f82b0c1 100644
--- a/reference/format/format_to.md
+++ b/reference/format/format_to.md
@@ -71,7 +71,6 @@ return vformat_to(out, fmt.str, make_format_args(args...));
 // (3), (4)
 return vformat_to(out, loc, fmt.str, make_wformat_args(args...));
 ```
-* basic_format_context[link basic_format_context.md]
 * vformat_to[link vformat_to.md]
 * make_format_args[link make_format_args.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>range_formatter -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/format/range_formatter.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/format/range_formatter.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/format/range_formatter.md b/reference/format/range_formatter.md
index 71ff8a66f..f838252ef 100644
--- a/reference/format/range_formatter.md
+++ b/reference/format/range_formatter.md
@@ -127,7 +127,6 @@ int main()
 * std::format_context[link basic_format_context.md]
 * fctx.out()[link basic_format_context/out.md]
 * fctx.advance_to[link basic_format_context/advance_to.md]
-* std::format_to[link format_to.md]
 * std::format[link format.md]
 * underlying()[link range_formatter/underlying.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>splice_after -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/forward_list/forward_list/splice_after.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/forward_list/forward_list/splice_after.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/forward_list/forward_list/splice_after.md b/reference/forward_list/forward_list/splice_after.md
index c49b9f8fb..cf07b4860 100644
--- a/reference/forward_list/forward_list/splice_after.md
+++ b/reference/forward_list/forward_list/splice_after.md
@@ -110,7 +110,6 @@ int main()
 ```
 * splice_after[color ff0000]
 * begin()[link begin.md]
-* end()[link end.md]
 * std::move[link /reference/utility/move.md]
 * std::next[link /reference/iterator/next.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>close -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/fstream/basic_filebuf/close.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/fstream/basic_filebuf/close.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/fstream/basic_filebuf/close.md b/reference/fstream/basic_filebuf/close.md
index 25921a85f..fded21519 100644
--- a/reference/fstream/basic_filebuf/close.md
+++ b/reference/fstream/basic_filebuf/close.md
@@ -51,7 +51,7 @@ int main()
 * std::fstream[link /reference/fstream/basic_fstream.md]
 * std::filebuf[link /reference/fstream/basic_filebuf.md]
 * rdbuf()[link /reference/fstream/basic_fstream/rdbuf.md]
-* open()[link /reference/fstream/basic_filebuf/open.md]
+* open[link /reference/fstream/basic_filebuf/open.md]
 * close()[color ff0000]
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>open -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/fstream/basic_filebuf/open.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/fstream/basic_filebuf/open.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/fstream/basic_filebuf/open.md b/reference/fstream/basic_filebuf/open.md
index 465cfec12..b7d1bf237 100644
--- a/reference/fstream/basic_filebuf/open.md
+++ b/reference/fstream/basic_filebuf/open.md
@@ -72,10 +72,10 @@ int main()
   }
 }
 ```
+* buf-&amp;gt;open[color ff0000]
 * std::fstream[link /reference/fstream/basic_fstream.md]
 * std::filebuf[link /reference/fstream/basic_filebuf.md]
 * rdbuf()[link /reference/fstream/basic_fstream/rdbuf.md]
-* buf-&amp;gt;open()[color ff0000]
 
 ## バージョン
 ### 言語
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>basic_fstream -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/fstream/basic_fstream.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/fstream/basic_fstream.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/fstream/basic_fstream.md b/reference/fstream/basic_fstream.md
index 786074803..d0c1c530d 100644
--- a/reference/fstream/basic_fstream.md
+++ b/reference/fstream/basic_fstream.md
@@ -13,7 +13,7 @@ namespace std {
 }
 ```
 * char_traits[link /reference/string/char_traits.md]
-* basic_istream[link /reference/istream/basic_istream.md]
+* basic_iostream[link /reference/istream/basic_iostream.md]
 
 ## 概要
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>packaged_task -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/future/packaged_task.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/future/packaged_task.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/future/packaged_task.md b/reference/future/packaged_task.md
index fba1ebee6..c8c024c48 100644
--- a/reference/future/packaged_task.md
+++ b/reference/future/packaged_task.md
@@ -102,7 +102,7 @@ int main()
 * std::packaged_task[color ff0000]
 * task.get_future()[link packaged_task/get_future.md]
 * std::future[link future.md]
-* std::f.get()[link future/get.md]
+* f.get()[link future/get.md]
 * std::move[link /reference/utility/move.md]
 * t.detach()[link /reference/thread/thread/detach.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>clear -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/ios/basic_ios/clear.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/ios/basic_ios/clear.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ios/basic_ios/clear.md b/reference/ios/basic_ios/clear.md
index 70665a3d7..9fd2f5d4c 100644
--- a/reference/ios/basic_ios/clear.md
+++ b/reference/ios/basic_ios/clear.md
@@ -44,7 +44,6 @@ void clear(iostate state = goodbit) {
 * goodbit[link ../ios_base/type-iostate.md]
 * badbit[link ../ios_base/type-iostate.md]
 * failure[link ../ios_base/failure.md]
-* ios_base[link ../ios_base.md]
 
 ## 戻り値
 なし
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>fill -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/ios/basic_ios/fill.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/ios/basic_ios/fill.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ios/basic_ios/fill.md b/reference/ios/basic_ios/fill.md
index f0be0154f..49dcdfed7 100644
--- a/reference/ios/basic_ios/fill.md
+++ b/reference/ios/basic_ios/fill.md
@@ -9,7 +9,6 @@ char_type fill() const;                 // (1)
 
 char_type fill(char_type fillch);       // (2)
 ```
-* basic_ios[link ../basic_ios.md]
 
 ## 概要
 埋め文字を取得・設定する。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>register_callback -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/ios/ios_base/register_callback.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/ios/ios_base/register_callback.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ios/ios_base/register_callback.md b/reference/ios/ios_base/register_callback.md
index 2c96dc2a7..3f5baa92f 100644
--- a/reference/ios/ios_base/register_callback.md
+++ b/reference/ios/ios_base/register_callback.md
@@ -78,7 +78,6 @@ int main()
 }
 ```
 * std::ios_base[link ../ios_base.md]
-* std::basic_ios[link ../basic_ios.md]
 * std::stringstream[link ../../sstream/basic_stringstream.md.nolink]
 * erase_event[link type-event.md]
 * copyfmt_event[link type-event.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>event -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/ios/ios_base/type-event.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/ios/ios_base/type-event.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ios/ios_base/type-event.md b/reference/ios/ios_base/type-event.md
index 85b00a0e1..1c62cd590 100644
--- a/reference/ios/ios_base/type-event.md
+++ b/reference/ios/ios_base/type-event.md
@@ -66,7 +66,6 @@ int main()
 }
 ```
 * std::ios_base[link ../ios_base.md]
-* std::basic_ios[link ../basic_ios.md]
 * std::stringstream[link ../../sstream/basic_stringstream.md.nolink]
 * event[color ff0000]
 * erase_event[color ff0000]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>fmtflags -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/ios/ios_base/type-fmtflags.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/ios/ios_base/type-fmtflags.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ios/ios_base/type-fmtflags.md b/reference/ios/ios_base/type-fmtflags.md
index 69a6e3ea0..b1cca8cf2 100644
--- a/reference/ios/ios_base/type-fmtflags.md
+++ b/reference/ios/ios_base/type-fmtflags.md
@@ -150,7 +150,6 @@ int main()
 * std::oct[link ../oct.md]
 * std::dec[link ../dec.md]
 * showbase[color ff0000]
-* uppercase[color ff0000]
 * basefield[color ff0000]
 * hex[color ff0000]
 * oct[color ff0000]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>iostream_category -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/ios/iostream_category.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/ios/iostream_category.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ios/iostream_category.md b/reference/ios/iostream_category.md
index 742e1ff19..14a73c589 100644
--- a/reference/ios/iostream_category.md
+++ b/reference/ios/iostream_category.md
@@ -46,7 +46,7 @@ int main()
 * std::iostream_category[color ff0000]
 * std::error_category[link /reference/system_error/error_category.md]
 * cat.name()[link /reference/system_error/error_category/name.md]
-* cat.message()[link /reference/system_error/error_category/message.md]
+* cat.message[link /reference/system_error/error_category/message.md]
 * std::io_errc::stream[link io_errc.md]
 
 ### 出力例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>seekg -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/istream/basic_istream/seekg.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/istream/basic_istream/seekg.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/istream/basic_istream/seekg.md b/reference/istream/basic_istream/seekg.md
index 96d35213c..949ee5a3a 100644
--- a/reference/istream/basic_istream/seekg.md
+++ b/reference/istream/basic_istream/seekg.md
@@ -106,7 +106,7 @@ basic_istream&amp;lt;CharT, Traits&amp;gt;&amp;amp; seekg(off_type off, seekdir dir) {
 * eofbit[link /reference/ios/ios_base/type-iostate.md]
 * sentry[link sentry.md]
 * rdbuf()[link /reference/ios/basic_ios/rdbuf.md]
-* pubseekpos()[link /reference/streambuf/basic_streambuf/pubseekpos.md.nolink]
+* pubseekpos[link /reference/streambuf/basic_streambuf/pubseekpos.md.nolink]
 * ios_base[link /reference/ios/ios_base.md]
 * in[link /reference/ios/ios_base/type-openmode.md]
 * failbit[link /reference/ios/ios_base/type-iostate.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/istream/basic_istream/sentry/op_constructor.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/istream/basic_istream/sentry/op_constructor.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/istream/basic_istream/sentry/op_constructor.md b/reference/istream/basic_istream/sentry/op_constructor.md
index 7ef708132..09712203f 100644
--- a/reference/istream/basic_istream/sentry/op_constructor.md
+++ b/reference/istream/basic_istream/sentry/op_constructor.md
@@ -7,7 +7,6 @@
 ```cpp
 explicit sentry(basic_istream&amp;amp; is, bool noskipws = false);
 ```
-* char_traits[link ../../../string/char_traits.md]
 * basic_istream[link ../../basic_istream.md]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>iter_swap -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/iterator/common_iterator/iter_swap.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/iterator/common_iterator/iter_swap.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/common_iterator/iter_swap.md b/reference/iterator/common_iterator/iter_swap.md
index ce4688b2b..b1a62876b 100644
--- a/reference/iterator/common_iterator/iter_swap.md
+++ b/reference/iterator/common_iterator/iter_swap.md
@@ -16,7 +16,8 @@ namespace std {
   };
 }
 ```
-* move_iterator[link /reference/iterator/move_iterator.md]
+* input_or_output_iterator[link /reference/iterator/input_or_output_iterator.md]
+* sentinel_for[link /reference/iterator/sentinel_for.md]
 * indirectly_swappable[link /reference/iterator/indirectly_swappable.md]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/iterator/common_iterator/op_constructor.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/iterator/common_iterator/op_constructor.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/common_iterator/op_constructor.md b/reference/iterator/common_iterator/op_constructor.md
index 8f7c68d63..260568aee 100644
--- a/reference/iterator/common_iterator/op_constructor.md
+++ b/reference/iterator/common_iterator/op_constructor.md
@@ -71,7 +71,7 @@ int main() {
 * iterator_t[link /reference/ranges/iterator_t.md]
 * sentinel_t[link /reference/ranges/sentinel_t.md]
 * ranges::begin[link /reference/ranges/begin.md]
-* seranges::end[link /reference/ranges/end.md]
+* ranges::end[link /reference/ranges/end.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>counted_iterator -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/iterator/counted_iterator.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/iterator/counted_iterator.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/counted_iterator.md b/reference/iterator/counted_iterator.md
index 23d5a7a9f..766955b16 100644
--- a/reference/iterator/counted_iterator.md
+++ b/reference/iterator/counted_iterator.md
@@ -29,7 +29,6 @@ namespace std {
 }
 ```
 * input_or_output_iterator[link /reference/iterator/input_or_output_iterator.md]
-* sentinel_for[link /reference/iterator/sentinel_for.md]
 * incrementable_traits[link /reference/iterator/incrementable_traits.md]
 * iter_difference_t[link /reference/iterator/iter_difference_t.md]
 * input_iterator[link /reference/iterator/input_iterator.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>base -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/iterator/counted_iterator/base.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/iterator/counted_iterator/base.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/counted_iterator/base.md b/reference/iterator/counted_iterator/base.md
index f29c64b22..b70286fa7 100644
--- a/reference/iterator/counted_iterator/base.md
+++ b/reference/iterator/counted_iterator/base.md
@@ -9,7 +9,6 @@
 constexpr const I&amp;amp; base() const &amp;amp; noexcept;  // (1)
 constexpr I base() &amp;amp;&amp;amp;;  // (2)
 ```
-* copy_constructible[link /reference/concepts/copy_constructible.md]
 
 ## 概要
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>max_digits10 -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/limits/numeric_limits/max_digits10.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/limits/numeric_limits/max_digits10.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/limits/numeric_limits/max_digits10.md b/reference/limits/numeric_limits/max_digits10.md
index 1a2a47893..c59e97981 100644
--- a/reference/limits/numeric_limits/max_digits10.md
+++ b/reference/limits/numeric_limits/max_digits10.md
@@ -82,7 +82,7 @@ int main()
 ```
 * max_digits10[color ff0000]
 * digits10[link digits10.md]
-* std::stringstring[link /reference/sstream/basic_stringstream.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
 * precision[link /reference/ios/ios_base/precision.md]
 * std::scientific[link /reference/ios/scientific.md]
 * s.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>destroy -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/memory/ranges_destroy.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/memory/ranges_destroy.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/memory/ranges_destroy.md b/reference/memory/ranges_destroy.md
index 22139a999..4799f5fd1 100644
--- a/reference/memory/ranges_destroy.md
+++ b/reference/memory/ranges_destroy.md
@@ -15,10 +15,10 @@ namespace std::ranges {
   constexpr borrowed_iterator_t&amp;lt;R&amp;gt; destroy(R&amp;amp;&amp;amp; r) noexcept; // (2) C++20
 }
 ```
-* no-throw-forward-iterator[link no-throw-forward-iterator.md]
+* no-throw-input-iterator[link no-throw-input-iterator.md]
 * no-throw-sentinel[link no-throw-sentinel.md]
 * destructible[link /reference/concepts/destructible.md]
-* no-throw-forward-range[link no-throw-forward-range.md]
+* no-throw-input-range[link no-throw-input-range.md]
 * range_value_t[link /reference/ranges/range_value_t.md]
 * borrowed_iterator_t[link /reference/ranges/borrowed_iterator_t.md]
 
@@ -33,11 +33,11 @@ namespace std::ranges {
 
 ## テンプレートパラメータ制約
 - (1):
-    - `I`が[`no-throw-forward-iterator`](no-throw-forward-iterator.md)である
+    - `I`が[`no-throw-input-iterator`](no-throw-input-iterator.md)である
     - `S`が[`I`に対する例外を投げない番兵](no-throw-sentinel.md)である
     - `I`の要素型が、[破棄可能](/reference/concepts/destructible.md)である
 - (2):
-    - `R`が[`no-throw-forward-range`](no-throw-forward-range.md)である
+    - `R`が[`no-throw-input-range`](no-throw-input-range.md)である
     - `R`の要素型が、[破棄可能](/reference/concepts/destructible.md)である
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>destroy_n -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/memory/ranges_destroy_n.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/memory/ranges_destroy_n.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/memory/ranges_destroy_n.md b/reference/memory/ranges_destroy_n.md
index 5b89f82e9..3e1ca1afc 100644
--- a/reference/memory/ranges_destroy_n.md
+++ b/reference/memory/ranges_destroy_n.md
@@ -11,7 +11,7 @@ namespace std::ranges {
   constexpr I destroy_n(I first, iter_difference_t&amp;lt;I&amp;gt; n) noexcept; // (1) C++20
 }
 ```
-* no-throw-forward-iterator[link no-throw-forward-iterator.md]
+* no-throw-input-iterator[link no-throw-input-iterator.md]
 * destructible[link /reference/concepts/destructible.md]
 * iter_value_t[link /reference/iterator/iter_value_t.md]
 * iter_difference_t[link /reference/iterator/iter_difference_t.md]
@@ -24,7 +24,7 @@ namespace std::ranges {
 
 ## テンプレートパラメータ制約
 - (1):
-    - `I`が[`no-throw-forward-iterator`](no-throw-forward-iterator.md)である
+    - `I`が[`no-throw-input-iterator`](no-throw-input-iterator.md)である
     - `I`の要素型が、[破棄可能](/reference/concepts/destructible.md)である
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>uninitialized_copy_n -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/memory/ranges_uninitialized_copy_n.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/memory/ranges_uninitialized_copy_n.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/memory/ranges_uninitialized_copy_n.md b/reference/memory/ranges_uninitialized_copy_n.md
index 499506e34..74ca629bc 100644
--- a/reference/memory/ranges_uninitialized_copy_n.md
+++ b/reference/memory/ranges_uninitialized_copy_n.md
@@ -99,7 +99,6 @@ int main()
 }
 ```
 * std::ranges::uninitialized_copy_n[color ff0000]
-* std::ranges::subrange[link /reference/ranges/subrange.md]
 * std::allocator[link allocator.md]
 * alloc.allocate[link allocator/allocate.md]
 * std::ranges::destroy_n[link ranges_destroy_n.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>uninitialized_fill_n -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/memory/ranges_uninitialized_fill_n.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/memory/ranges_uninitialized_fill_n.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/memory/ranges_uninitialized_fill_n.md b/reference/memory/ranges_uninitialized_fill_n.md
index d22580b08..8b4a686ce 100644
--- a/reference/memory/ranges_uninitialized_fill_n.md
+++ b/reference/memory/ranges_uninitialized_fill_n.md
@@ -69,7 +69,6 @@ int main()
 }
 ```
 * std::ranges::uninitialized_fill_n[color ff0000]
-* std::ranges::subrange[link /reference/ranges/subrange.md]
 * std::allocator[link allocator.md]
 * alloc.allocate[link allocator/allocate.md]
 * std::ranges::destroy_n[link ranges_destroy_n.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>uninitialized_move_n -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/memory/ranges_uninitialized_move_n.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/memory/ranges_uninitialized_move_n.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/memory/ranges_uninitialized_move_n.md b/reference/memory/ranges_uninitialized_move_n.md
index 70f40c0c6..5dbc814bb 100644
--- a/reference/memory/ranges_uninitialized_move_n.md
+++ b/reference/memory/ranges_uninitialized_move_n.md
@@ -99,7 +99,6 @@ int main()
 }
 ```
 * std::ranges::uninitialized_move_n[color ff0000]
-* std::ranges::subrange[link /reference/ranges/subrange.md]
 * std::allocator[link allocator.md]
 * alloc.allocate[link allocator/allocate.md]
 * std::ranges::destroy_n[link ranges_destroy_n.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>unique -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/memory/shared_ptr/unique.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/memory/shared_ptr/unique.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/memory/shared_ptr/unique.md b/reference/memory/shared_ptr/unique.md
index 3cb4ef22c..9702cde3f 100644
--- a/reference/memory/shared_ptr/unique.md
+++ b/reference/memory/shared_ptr/unique.md
@@ -22,7 +22,7 @@ bool unique() const noexcept;
 ```cpp
 use_count() == 1
 ```
-* get()[link get.md]
+* use_count()[link use_count.md]
 
 
 ## 備考
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>memory_resource -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/memory_resource/memory_resource.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/memory_resource/memory_resource.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/memory_resource/memory_resource.md b/reference/memory_resource/memory_resource.md
index cd62481fb..1ad1d604c 100644
--- a/reference/memory_resource/memory_resource.md
+++ b/reference/memory_resource/memory_resource.md
@@ -148,8 +148,8 @@ int main(){
 ```
 * std::pmr::memory_resource[color ff0000]
 * std::byte[link /reference/cstddef/byte.md]
-* std::allocate[link /reference/memory_resource/memory_resource/allocate.md]
-* std::deallocate[link /reference/memory_resource/memory_resource/deallocate.md]
+* allocate[link /reference/memory_resource/memory_resource/allocate.md]
+* deallocate[link /reference/memory_resource/memory_resource/deallocate.md]
 * std::bad_alloc[link /reference/new/bad_alloc.md]
 * std::max_align_t[link /reference/cstddef/max_align_t.md]
 * std::uintptr_t[link /reference/cstdint/uintptr_t.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>construct -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/memory_resource/polymorphic_allocator/construct.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/memory_resource/polymorphic_allocator/construct.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/memory_resource/polymorphic_allocator/construct.md b/reference/memory_resource/polymorphic_allocator/construct.md
index fb8992747..da2b4f6eb 100644
--- a/reference/memory_resource/polymorphic_allocator/construct.md
+++ b/reference/memory_resource/polymorphic_allocator/construct.md
@@ -344,8 +344,6 @@ int main()
 * destroy[link destroy.md]
 * std::pmr::monotonic_buffer_resource[link /reference/memory_resource/monotonic_buffer_resource.md]
 * std::pmr::string[link /reference/string/basic_string.md]
-* std::piecewise_construct[link /reference/utility/piecewise_construct_t.md]
-* std::make_tuple[link /reference/tuple/make_tuple.md]
 
 ### C++17 における出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>new_object -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/memory_resource/polymorphic_allocator/new_object.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/memory_resource/polymorphic_allocator/new_object.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/memory_resource/polymorphic_allocator/new_object.md b/reference/memory_resource/polymorphic_allocator/new_object.md
index 7f166a872..8af71512b 100644
--- a/reference/memory_resource/polymorphic_allocator/new_object.md
+++ b/reference/memory_resource/polymorphic_allocator/new_object.md
@@ -9,9 +9,6 @@
 template &amp;lt;class T, class... CtorArgs&amp;gt;
 [[nodiscard]] T* new_object(CtorArgs&amp;amp;&amp;amp;... ctor_args);
 ```
-* pair[link /reference/utility/pair.md]
-* tuple[link /reference/tuple/tuple.md]
-* piecewise_construct_t[link /reference/utility/piecewise_construct_t.md]
 
 ## 概要
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>upstream_resource -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/memory_resource/pool_resource/upstream_resource.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/memory_resource/pool_resource/upstream_resource.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/memory_resource/pool_resource/upstream_resource.md b/reference/memory_resource/pool_resource/upstream_resource.md
index 6990115cc..97a30aaa1 100644
--- a/reference/memory_resource/pool_resource/upstream_resource.md
+++ b/reference/memory_resource/pool_resource/upstream_resource.md
@@ -8,7 +8,7 @@
 ```cpp
 memory_resource* upstream_resource() const;
 ```
-* memory_source[link /reference/memory_resource/memory_resource.md]
+* memory_resource[link /reference/memory_resource/memory_resource.md]
 
 ## 概要
 利用中の上流メモリリソースを取得する。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>lock -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/mutex/mutex/lock.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/mutex/mutex/lock.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/mutex/mutex/lock.md b/reference/mutex/mutex/lock.md
index c87114841..89cab1e46 100644
--- a/reference/mutex/mutex/lock.md
+++ b/reference/mutex/mutex/lock.md
@@ -63,7 +63,7 @@ int main()
 }
 ```
 * lock()[color ff0000]
-* mutx_.unlock()[link unlock.md]
+* mtx_.unlock()[link unlock.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>hardware_constructive_interference_size -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/new/hardware_constructive_interference_size.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/new/hardware_constructive_interference_size.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/new/hardware_constructive_interference_size.md b/reference/new/hardware_constructive_interference_size.md
index f11553710..4d4d0820a 100644
--- a/reference/new/hardware_constructive_interference_size.md
+++ b/reference/new/hardware_constructive_interference_size.md
@@ -42,7 +42,6 @@ int main()
 }
 ```
 * std::hardware_constructive_interference_size[color ff0000]
-* threads.push_back[link /reference/vector/vector/push_back.md]
 
 
 ### 出力例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>back -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/queue/queue/back.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/queue/queue/back.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/queue/queue/back.md b/reference/queue/queue/back.md
index fdbb96f69..a5ce04366 100644
--- a/reference/queue/queue/back.md
+++ b/reference/queue/queue/back.md
@@ -44,7 +44,7 @@ int main() {
 }
 ```
 * back()[color ff0000]
-* q.push[link push.md]
+* que.push[link push.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>borrowed_subrange_t -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/ranges/borrowed_subrange_t.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/ranges/borrowed_subrange_t.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/borrowed_subrange_t.md b/reference/ranges/borrowed_subrange_t.md
index 165e437dd..9e06a88c0 100644
--- a/reference/ranges/borrowed_subrange_t.md
+++ b/reference/ranges/borrowed_subrange_t.md
@@ -57,7 +57,6 @@ int main() {
 * ranges::range[link range.md]
 * ranges::begin[link begin.md]
 * ranges::end[link end.md]
-* ranges::range_value_t[link range_value_t.md]
 * ranges::dangling[link dangling.md]
 * ranges::subrange[link subrange.md]
 * borrowed_range[link borrowed_range.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>common_view -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/ranges/common_view.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/ranges/common_view.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/common_view.md b/reference/ranges/common_view.md
index c80a81076..a0aad31c0 100644
--- a/reference/ranges/common_view.md
+++ b/reference/ranges/common_view.md
@@ -170,9 +170,7 @@ namespace std::ranges {
 * sentinel_t[link sentinel_t.md]
 * ranges::begin[link begin.md]
 * ranges::end[link end.md]
-* ranges::empty[link empty.md]
 * ranges::size[link size.md]
-* ranges::data[link data.md]
 * views::all_t[link all.md]
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>copyable-box -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/ranges/copyable_box.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/ranges/copyable_box.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/copyable_box.md b/reference/ranges/copyable_box.md
index fca994b36..236cfbacb 100644
--- a/reference/ranges/copyable_box.md
+++ b/reference/ranges/copyable_box.md
@@ -46,7 +46,7 @@ constexpr copyable-box&amp;amp; operator=(copyable-box&amp;amp;&amp;amp; that) noexcept(is_nothrow_move_
 }
 ```
 * copyable-box[italic]
-* is_nothrow_copy_constructible_v[link /reference/type_traits/is_nothrow_copy_constructible.md]
+* is_nothrow_move_constructible_v[link /reference/type_traits/is_nothrow_move_constructible.md]
 * addressof[link /reference/memory/addressof.md]
 * emplace[link /reference/optional/optional/emplace.md]
 * reset[link /reference/optional/optional/reset.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>elements_view -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/ranges/elements_view.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/ranges/elements_view.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/elements_view.md b/reference/ranges/elements_view.md
index d71cbb8d3..934b911e4 100644
--- a/reference/ranges/elements_view.md
+++ b/reference/ranges/elements_view.md
@@ -79,7 +79,6 @@ concept has-tuple-element =
 * tuple_element_t[link /reference/tuple/tuple_element.md]
 * get[link /reference/tuple/tuple/get.md]
 * convertible_to[link /reference/concepts/convertible_to.md]
-* remove_reference_t[link /reference/type_traits/remove_reference.md]
 * tuple-like[link /reference/tuple/tuple-like.md]
 * tuple_size_v[link /reference/tuple/tuple_size.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>iota_view -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/ranges/iota_view.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/ranges/iota_view.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/iota_view.md b/reference/ranges/iota_view.md
index 7b9b77a84..57461ad5d 100644
--- a/reference/ranges/iota_view.md
+++ b/reference/ranges/iota_view.md
@@ -15,7 +15,6 @@ namespace std::ranges {
   }
 }
 ```
-* is_object_v[link /reference/type_traits/is_object.md]
 * weakly_incrementable[link /reference/iterator/weakly_incrementable.md]
 * copyable[link /reference/concepts/copyable.md]
 * unreachable_sentinel_t[link /reference/iterator/unreachable_sentinel_t.md]
@@ -44,7 +43,7 @@ namespace std::ranges {
 - (3): `W`と`Bound`が等しいとき
 
 ## テンプレートパラメータ制約
-- [`weakly_incrementable`](/reference/type_traits/is_object.md)`&amp;lt;W&amp;gt;`
+- [`weakly_incrementable`](/reference/iterator/weakly_incrementable.md)`&amp;lt;W&amp;gt;`
 - [`copyable`](/reference/concepts/copyable.md)`&amp;lt;W&amp;gt;`
 - [`semiregular`](/reference/concepts/semiregular.md)`&amp;lt;Bound&amp;gt;`
 - [`weakly-equality-comparable-with`](/reference/concepts/equality_comparable.md)`&amp;lt;W, Bound&amp;gt;`
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>iterator -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/ranges/iota_view/iterator.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/ranges/iota_view/iterator.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/iota_view/iterator.md b/reference/ranges/iota_view/iterator.md
index 37473b1c2..e59a769b3 100644
--- a/reference/ranges/iota_view/iterator.md
+++ b/reference/ranges/iota_view/iterator.md
@@ -191,7 +191,6 @@ namespace std::ranges {
 * totally_ordered[link /reference/concepts/totally_ordered.md]
 * three_way_comparable[link /reference/compare/three_way_comparable.md]
 * is_nothrow_copy_constructible_v[link /reference/type_traits/is_nothrow_copy_constructible.md]
-* unreachable_sentinel_t[link /reference/iterator/unreachable_sentinel_t.md]
 * weakly-equality-comparable-with[link /reference/concepts/equality_comparable.md]
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>owning_view -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/ranges/owning_view.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/ranges/owning_view.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/owning_view.md b/reference/ranges/owning_view.md
index 404178683..19ab8dc65 100644
--- a/reference/ranges/owning_view.md
+++ b/reference/ranges/owning_view.md
@@ -140,11 +140,7 @@ namespace std::ranges {
 ```
 * is-initializer-list[italic]
 * range[link range.md]
-* is_object_v[link /reference/type_traits/is_object.md]
 * default_initializable[link /reference/concepts/default_initializable.md]
-* declval[link /reference/utility/declval.md]
-* std::forward[link /reference/utility/forward.md]
-* addressof[link /reference/memory/addressof.md]
 * iterator_t[link iterator_t.md]
 * sentinel_t[link sentinel_t.md]
 * ranges::begin[link begin.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ref_view -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/ranges/ref_view.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/ranges/ref_view.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/ref_view.md b/reference/ranges/ref_view.md
index b18013976..a68fbf672 100644
--- a/reference/ranges/ref_view.md
+++ b/reference/ranges/ref_view.md
@@ -123,7 +123,6 @@ namespace std::ranges {
   ref_view(R&amp;amp;) -&amp;gt; ref_view&amp;lt;R&amp;gt;;
 }
 ```
-* is-initializer-list[italic]
 * range[link range.md]
 * is_object_v[link /reference/type_traits/is_object.md]
 * convertible_to[link /reference/concepts/convertible_to.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>iterator -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/ranges/repeat_view/iterator.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/ranges/repeat_view/iterator.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/repeat_view/iterator.md b/reference/ranges/repeat_view/iterator.md
index 8116fd500..621a15c90 100644
--- a/reference/ranges/repeat_view/iterator.md
+++ b/reference/ranges/repeat_view/iterator.md
@@ -118,8 +118,6 @@ namespace std::ranges {
 * random_access_iterator_tag[link /reference/iterator/iterator_tag.md]
 * is-signed-integer-like[link /reference/iterator/is_integer_like.md]
 * iota_diff_t[link /reference/ranges/iota_view/iota_diff_t.md]
-* incrementable[link /reference/iterator/incrementable.md]
-* weakly-equality-comparable-with[link /reference/concepts/equality_comparable.md]
 
 ## バージョン
 ### 言語
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>reverse_view -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/ranges/reverse_view.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/ranges/reverse_view.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/reverse_view.md b/reference/ranges/reverse_view.md
index 734be3926..8f25ad909 100644
--- a/reference/ranges/reverse_view.md
+++ b/reference/ranges/reverse_view.md
@@ -158,13 +158,11 @@ namespace std::ranges {
 * view_interface[link view_interface.md]
 * common_range[link common_range.md]
 * sized_range[link sized_range.md]
-* copyable[link /reference/concepts/copyable.md]
 * default_initializable[link /reference/concepts/default_initializable.md]
 * copy_constructible[link /reference/concepts/copy_constructible.md]
 * reverse_iterator[link /reference/iterator/reverse_iterator.md]
 * make_reverse_iterator[link /reference/iterator/make_reverse_iterator.md]
 * iterator_t[link iterator_t.md]
-* sentinel_t[link sentinel_t.md]
 * ranges::next[link /reference/iterator/ranges_next.md]
 * ranges::begin[link begin.md]
 * ranges::end[link end.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>simple-view -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/ranges/simple-view.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/ranges/simple-view.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/simple-view.md b/reference/ranges/simple-view.md
index d31987cb2..b3c0e4cb5 100644
--- a/reference/ranges/simple-view.md
+++ b/reference/ranges/simple-view.md
@@ -10,7 +10,7 @@ template&amp;lt;class R&amp;gt;
     same_as&amp;lt;iterator_t&amp;lt;R&amp;gt;, iterator_t&amp;lt;const R&amp;gt;&amp;gt; &amp;amp;&amp;amp;
     same_as&amp;lt;sentinel_t&amp;lt;R&amp;gt;, sentinel_t&amp;lt;const R&amp;gt;&amp;gt;;
 ```
-* same-as[link /reference/concepts/same_as.md]
+* same_as[link /reference/concepts/same_as.md]
 * view[link view.md]
 * range[link range.md]
 * iterator_t[link iterator_t.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>推論補助 -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/ranges/subrange/op_deduction_guide.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/ranges/subrange/op_deduction_guide.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/subrange/op_deduction_guide.md b/reference/ranges/subrange/op_deduction_guide.md
index af57c5962..8b9be3a37 100644
--- a/reference/ranges/subrange/op_deduction_guide.md
+++ b/reference/ranges/subrange/op_deduction_guide.md
@@ -29,15 +29,10 @@ namespace std::ranges {
 * iterator_t[link /reference/ranges/iterator_t.md]
 * sentinel_t[link /reference/ranges/sentinel_t.md]
 * sized_range[link /reference/ranges/sized_range.md]
-* convertible_to[link /reference/concepts/convertible_to.md]
 * iter_difference_t[link /reference/iterator/iter_difference_t.md]
 * sized_sentinel_for[link /reference/iterator/sized_sentinel_for.md]
 * sentinel_for[link /reference/iterator/sentinel_for.md]
-* tuple_element_t[link /reference/tuple/tuple_element.md]
-* StoreSize[italic][link op_constructor.md]
-* iterator-sentinel-pair[italic][link ../subrange.md]
-* convertible-to-non-slicing[italic][link convertible-to-non-slicing.md]
-* make-unsigned-like-t[italic][link /reference/type_traits/make_unsigned.md]
+* make-unsigned-like-t[link /reference/type_traits/make_unsigned.md]
 
 ## 概要
 [`subrange`](../subrange.md)クラステンプレートの型推論補助。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>match_results -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/regex/match_results.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/regex/match_results.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/regex/match_results.md b/reference/regex/match_results.md
index 3897b3602..c6d15df40 100644
--- a/reference/regex/match_results.md
+++ b/reference/regex/match_results.md
@@ -163,7 +163,7 @@ int main()
 * m.size()[link match_results/size.md]
 * m.prefix()[link match_results/prefix.md]
 * m.suffix()[link match_results/suffix.md]
-* m.str()[link match_results/str.md]
+* m.str[link match_results/str.md]
 * m.position[link match_results/position.md]
 * m.length[link match_results/length.md]
 * m.format[link match_results/format.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>prefix -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/regex/match_results/prefix.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/regex/match_results/prefix.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/regex/match_results/prefix.md b/reference/regex/match_results/prefix.md
index 69caec91e..dcac90ba1 100644
--- a/reference/regex/match_results/prefix.md
+++ b/reference/regex/match_results/prefix.md
@@ -99,7 +99,6 @@ int main()
 * std::smatch[link ../match_results.md]
 * std::regex_match[link ../regex_match.md]
 * std::regex_search[link ../regex_search.md]
-* std::regex_iterator[link ../regex_iterator.md]
 * std::sregex_iterator[link ../regex_iterator.md]
 * sub.str()[link str.md]
 * std::ssub_match[link ../sub_match.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>suffix -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/regex/match_results/suffix.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/regex/match_results/suffix.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/regex/match_results/suffix.md b/reference/regex/match_results/suffix.md
index 0eefad0d7..d4c608ccf 100644
--- a/reference/regex/match_results/suffix.md
+++ b/reference/regex/match_results/suffix.md
@@ -99,7 +99,6 @@ int main()
 * std::smatch[link ../match_results.md]
 * std::regex_match[link ../regex_match.md]
 * std::regex_search[link ../regex_search.md]
-* std::regex_iterator[link ../regex_iterator.md]
 * std::sregex_iterator[link ../regex_iterator.md]
 * sub.str()[link str.md]
 * std::ssub_match[link ../sub_match.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>insert -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/set/multiset/insert.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/set/multiset/insert.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/set/multiset/insert.md b/reference/set/multiset/insert.md
index 27c82a341..d0259c30c 100644
--- a/reference/set/multiset/insert.md
+++ b/reference/set/multiset/insert.md
@@ -21,7 +21,6 @@ void insert(initializer_list&amp;lt;value_type&amp;gt; init);                // (6)
 iterator insert(node_type&amp;amp;&amp;amp; nh);                               // (7) C++17
 iterator insert(const_iterator hint, node_type&amp;amp;&amp;amp; nh);          // (8) C++17
 ```
-* pair[link /reference/utility/pair.md]
 * initializer_list[link /reference/initializer_list/initializer_list.md]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>value_comp -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/set/multiset/value_comp.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/set/multiset/value_comp.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/set/multiset/value_comp.md b/reference/set/multiset/value_comp.md
index 17122f729..4c5322a65 100644
--- a/reference/set/multiset/value_comp.md
+++ b/reference/set/multiset/value_comp.md
@@ -38,7 +38,6 @@ int main()
 }
 ```
 * value_comp()[color ff0000]
-* insert[link insert.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>value_comp -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/set/set/value_comp.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/set/set/value_comp.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/set/set/value_comp.md b/reference/set/set/value_comp.md
index 4baa4d3a8..ad583b225 100644
--- a/reference/set/set/value_comp.md
+++ b/reference/set/set/value_comp.md
@@ -38,7 +38,6 @@ int main()
 }
 ```
 * value_comp()[color ff0000]
-* insert[link insert.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator bool -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/shared_mutex/shared_lock/op_bool.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/shared_mutex/shared_lock/op_bool.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/shared_mutex/shared_lock/op_bool.md b/reference/shared_mutex/shared_lock/op_bool.md
index bf3c3197f..746257591 100644
--- a/reference/shared_mutex/shared_lock/op_bool.md
+++ b/reference/shared_mutex/shared_lock/op_bool.md
@@ -72,7 +72,6 @@ int main()
 * std::shared_timed_mutex[link /reference/shared_mutex/shared_timed_mutex.md]
 * std::defer_lock[link /reference/mutex/defer_lock.md]
 * lock.lock()[link /reference/shared_mutex/shared_timed_mutex/lock.md]
-* lock.unlock()[link /reference/shared_mutex/shared_timed_mutex/unlock.md]
 
 ### 出力
 ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/span/span/op_constructor.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/span/span/op_constructor.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/span/span/op_constructor.md b/reference/span/span/op_constructor.md
index 39633c584..68321161d 100644
--- a/reference/span/span/op_constructor.md
+++ b/reference/span/span/op_constructor.md
@@ -254,15 +254,12 @@ int main()
 * s4.size()[link size.md]
 * s4.data()[link data.md]
 * v.data()[link /reference/vector/vector/data.md]
-* cv.size()[link /reference/vector/vector/size.md]
-* cv.data()[link /reference/vector/vector/data.md]
 * ar.size()[link /reference/array/array/size.md]
 * ar.data()[link /reference/array/array/data.md]
 * car.size()[link /reference/array/array/size.md]
 * car.data()[link /reference/array/array/data.md]
 * str.size()[link /reference/string/basic_string/size.md]
 * str.data()[link /reference/string/basic_string/data.md]
-* std::move[link /reference/utility/move.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>current -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/current.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/stacktrace/basic_stacktrace/current.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/current.md b/reference/stacktrace/basic_stacktrace/current.md
index f1a5e8f9b..c55d80f77 100644
--- a/reference/stacktrace/basic_stacktrace/current.md
+++ b/reference/stacktrace/basic_stacktrace/current.md
@@ -91,7 +91,7 @@ int main() {
   f();
 }
 ```
-* current()[color ff0000]
+* current[color ff0000]
 
 #### 出力例
 ```
@@ -116,7 +116,7 @@ int main() {
   f();
 }
 ```
-* current()[color ff0000]
+* current[color ff0000]
 
 #### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>max_size -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/max_size.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/stacktrace/basic_stacktrace/max_size.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/max_size.md b/reference/stacktrace/basic_stacktrace/max_size.md
index 3e633e70f..f7224b35e 100644
--- a/reference/stacktrace/basic_stacktrace/max_size.md
+++ b/reference/stacktrace/basic_stacktrace/max_size.md
@@ -24,7 +24,7 @@ size_type max_size() const noexcept; // (1) C++23
 
 int main() {
   std::stacktrace trace{};
-  std::cout &amp;lt;&amp;lt; tract.max_size() &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; trace.max_size() &amp;lt;&amp;lt; std::endl;
 }
 ```
 * trace.max_size()[color ff0000]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>size -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/size.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/stacktrace/basic_stacktrace/size.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/size.md b/reference/stacktrace/basic_stacktrace/size.md
index 5cf95e4b0..1d0adafb2 100644
--- a/reference/stacktrace/basic_stacktrace/size.md
+++ b/reference/stacktrace/basic_stacktrace/size.md
@@ -69,7 +69,7 @@ int main() {
 }
 ```
 * trace.size()[color ff0000]
-* current()[link current.md]
+* current[link current.md]
 
 #### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>stacktrace_entry -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/stacktrace_entry.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/stacktrace/stacktrace_entry.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/stacktrace_entry.md b/reference/stacktrace/stacktrace_entry.md
index d9f8533b9..70cfb395c 100644
--- a/reference/stacktrace/stacktrace_entry.md
+++ b/reference/stacktrace/stacktrace_entry.md
@@ -108,7 +108,7 @@ int main() {
 ```
 * std::stacktrace_entry[color ff0000]
 * std::stacktrace[link basic_stacktrace.md]
-* current()[link basic_stacktrace/current.md]
+* current[link basic_stacktrace/current.md]
 * entry.description()[link stacktrace_entry/description.md.nolink]
 * entry.source_file()[link stacktrace_entry/source_file.md.nolink]
 * entry.source_line()[link stacktrace_entry/source_line.md.nolink]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/stop_token/stop_source/op_constructor.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/stop_token/stop_source/op_constructor.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stop_token/stop_source/op_constructor.md b/reference/stop_token/stop_source/op_constructor.md
index 7dd5abbf4..72e7496eb 100644
--- a/reference/stop_token/stop_source/op_constructor.md
+++ b/reference/stop_token/stop_source/op_constructor.md
@@ -54,7 +54,6 @@ int main()
 }
 ```
 * std::move[link /reference/utility/move.md]
-* std::stop_token[link ../stop_token.md]
 * std::stop_source[link ../stop_source.md]
 * std::nostopstate[link ../nostopstate.md]
 * stop_requested()[link stop_requested.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>request_stop -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/stop_token/stop_source/request_stop.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/stop_token/stop_source/request_stop.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stop_token/stop_source/request_stop.md b/reference/stop_token/stop_source/request_stop.md
index afe778625..45fd15118 100644
--- a/reference/stop_token/stop_source/request_stop.md
+++ b/reference/stop_token/stop_source/request_stop.md
@@ -112,9 +112,8 @@ int main()
 * stop_callback[link ../stop_callback.md]
 * get_token()[link get_token.md]
 * request_stop()[link request_stop.md]
-* stop_requested()[link stop_requested.md]
 * condition_variable_any[link /reference/condition_variable/condition_variable_any.md]
-* wait()[link /reference/condition_variable/condition_variable_any/wait.md]
+* cv.wait[link /reference/condition_variable/condition_variable_any/wait.md]
 * std::this_thread::sleep_for[link /reference/thread/this_thread/sleep_for.md]
 
 ### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>stop_requested -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/stop_token/stop_source/stop_requested.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/stop_token/stop_source/stop_requested.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stop_token/stop_source/stop_requested.md b/reference/stop_token/stop_source/stop_requested.md
index 1cd9cbb9c..eb4091139 100644
--- a/reference/stop_token/stop_source/stop_requested.md
+++ b/reference/stop_token/stop_source/stop_requested.md
@@ -39,7 +39,7 @@ int main()
 }
 ```
 * stop_source[link ../stop_source.md]
-* nostopstate[link ../nostopstate.md]
+* std::nostopstate[link ../nostopstate.md]
 * stop_requested()[link stop_requested.md]
 * request_stop()[link request_stop.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>stop_requested -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/stop_token/stop_token/stop_requested.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/stop_token/stop_token/stop_requested.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stop_token/stop_token/stop_requested.md b/reference/stop_token/stop_token/stop_requested.md
index 0651da66e..e8de4ea6f 100644
--- a/reference/stop_token/stop_token/stop_requested.md
+++ b/reference/stop_token/stop_token/stop_requested.md
@@ -55,7 +55,6 @@ int main()
 ```
 * std::stop_token[link ../stop_token.md]
 * std::stop_source[link ../stop_source.md]
-* nostopstate[link ../nostopstate.md]
 * stop_requested()[link stop_requested.md]
 * request_stop()[link ../stop_source/request_stop.md]
 * get_token()[link ../stop_source/get_token.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>swap -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/stop_token/stop_token/swap.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/stop_token/stop_token/swap.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stop_token/stop_token/swap.md b/reference/stop_token/stop_token/swap.md
index 518a88261..23aeee229 100644
--- a/reference/stop_token/stop_token/swap.md
+++ b/reference/stop_token/stop_token/swap.md
@@ -42,7 +42,6 @@ int main()
 * swap[color ff0000]
 * std::stop_token[link ../stop_token.md]
 * std::stop_source[link ../stop_source.md]
-* request_stop()[link ../stop_source/request_stop.md]
 * stop_possible()[link stop_possible.md]
 
 ### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>swap (非メンバ関数) -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/stop_token/stop_token/swap_free.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/stop_token/stop_token/swap_free.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stop_token/stop_token/swap_free.md b/reference/stop_token/stop_token/swap_free.md
index 3def20a87..d0f7e8f37 100644
--- a/reference/stop_token/stop_token/swap_free.md
+++ b/reference/stop_token/stop_token/swap_free.md
@@ -50,10 +50,9 @@ int main()
   assert(st2.stop_possible() == true);
 }
 ```
-* std::swap[color ff0000]
+* swap[color ff0000]
 * std::stop_token[link ../stop_token.md]
 * std::stop_source[link ../stop_source.md]
-* request_stop()[link ../stop_source/request_stop.md]
 * stop_possible()[link stop_possible.md]
 
 ### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>make_from_tuple -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/tuple/make_from_tuple.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/tuple/make_from_tuple.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/tuple/make_from_tuple.md b/reference/tuple/make_from_tuple.md
index f4028bfcf..b11772dab 100644
--- a/reference/tuple/make_from_tuple.md
+++ b/reference/tuple/make_from_tuple.md
@@ -60,7 +60,6 @@ constexpr T make_from_tuple(Tuple&amp;amp;&amp;amp; t) {
 * std::forward[link /reference/utility/forward.md]
 * std::make_index_sequence[link /reference/utility/make_index_sequence.md]
 * std::index_sequence[link /reference/utility/index_sequence.md]
-* std::decay_t[link /reference/type_traits/decay.md]
 
 ## 例
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>basic_common_reference -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/type_traits/basic_common_reference.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/type_traits/basic_common_reference.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/type_traits/basic_common_reference.md b/reference/type_traits/basic_common_reference.md
index 9bef863b6..75f11fdf2 100644
--- a/reference/type_traits/basic_common_reference.md
+++ b/reference/type_traits/basic_common_reference.md
@@ -70,7 +70,7 @@ int main()
   static_assert(std::same_as&amp;lt;std::common_reference_t&amp;lt;U, T&amp;gt;, B&amp;amp;&amp;gt;);
 }
 ```
-* std::basic_common_reference[color ff0000]
+* basic_common_reference[color ff0000]
 * std::same_as[link /reference/concepts/same_as.md]
 * std::common_reference_t[link common_reference.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_invocable_r -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/type_traits/is_invocable_r.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/type_traits/is_invocable_r.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/type_traits/is_invocable_r.md b/reference/type_traits/is_invocable_r.md
index f32c28aba..6620732bf 100644
--- a/reference/type_traits/is_invocable_r.md
+++ b/reference/type_traits/is_invocable_r.md
@@ -62,19 +62,18 @@ struct S {
 
 int main()
 {
-	using R = const S&amp;amp;;
+  using R = const S&amp;amp;;
 
-	std::cout &amp;lt;&amp;lt; &amp;#34;1&amp;#34; &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; &amp;#34;1&amp;#34; &amp;lt;&amp;lt; std::endl;
 
-	// INVOKE、つまり std::invoke の返り値である S が
-	// R に束縛されて R の寿命と同じ寿命に延長された上で std::invoke_r の返り値となる
-	// しかし R の寿命はこの1文の間だけなので、S もこの1文が終了する際に破棄される
-	const S&amp;amp; a = std::invoke_r&amp;lt;R&amp;gt;([]() { return S{}; });
-	
-	std::cout &amp;lt;&amp;lt; &amp;#34;2&amp;#34; &amp;lt;&amp;lt; std::endl;
+  // INVOKE、つまり std::invoke の返り値である S が
+  // R に束縛されて R の寿命と同じ寿命に延長された上で std::invoke_r の返り値となる
+  // しかし R の寿命はこの1文の間だけなので、S もこの1文が終了する際に破棄される
+  const S&amp;amp; a = std::invoke_r&amp;lt;R&amp;gt;([]() { return S{}; });
+
+  std::cout &amp;lt;&amp;lt; &amp;#34;2&amp;#34; &amp;lt;&amp;lt; std::endl;
 }
 ```
-* std::is_invocable_r[color ff0000]
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt; -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/typeindex/type_index/op_greater.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/typeindex/type_index/op_greater.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/typeindex/type_index/op_greater.md b/reference/typeindex/type_index/op_greater.md
index 803ef7193..b444bd0c0 100644
--- a/reference/typeindex/type_index/op_greater.md
+++ b/reference/typeindex/type_index/op_greater.md
@@ -54,7 +54,6 @@ int main()
 }
 ```
 * std::greater&amp;lt;std::type_index&amp;gt;[color ff0000]
-* std::greater_equal&amp;lt;std::type_index&amp;gt;[color ff0000]
 * s.insert[link /reference/set/set/insert.md]
 * s.begin()[link /reference/set/set/begin.md]
 * s.end()[link /reference/set/set/end.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt; -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/typeindex/type_index/op_less.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/typeindex/type_index/op_less.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/typeindex/type_index/op_less.md b/reference/typeindex/type_index/op_less.md
index 770787bd1..2e57c4b14 100644
--- a/reference/typeindex/type_index/op_less.md
+++ b/reference/typeindex/type_index/op_less.md
@@ -53,7 +53,6 @@ int main()
 }
 ```
 * std::less&amp;lt;std::type_index&amp;gt;[color ff0000]
-* std::greater_equal&amp;lt;std::type_index&amp;gt;[color ff0000]
 * s.insert[link /reference/set/set/insert.md]
 * s.begin()[link /reference/set/set/begin.md]
 * s.end()[link /reference/set/set/end.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/typeindex/type_index/op_less_equal.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/typeindex/type_index/op_less_equal.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/typeindex/type_index/op_less_equal.md b/reference/typeindex/type_index/op_less_equal.md
index 0469fba02..7a9b94334 100644
--- a/reference/typeindex/type_index/op_less_equal.md
+++ b/reference/typeindex/type_index/op_less_equal.md
@@ -54,7 +54,6 @@ int main()
 }
 ```
 * std::less_equal&amp;lt;std::type_index&amp;gt;[color ff0000]
-* std::greater_equal&amp;lt;std::type_index&amp;gt;[color ff0000]
 * s.insert[link /reference/set/set/insert.md]
 * s.begin()[link /reference/set/set/begin.md]
 * s.end()[link /reference/set/set/end.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>insert -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/unordered_map/unordered_map/insert.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/unordered_map/unordered_map/insert.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_map/unordered_map/insert.md b/reference/unordered_map/unordered_map/insert.md
index 81f309137..3abc7efe2 100644
--- a/reference/unordered_map/unordered_map/insert.md
+++ b/reference/unordered_map/unordered_map/insert.md
@@ -218,7 +218,6 @@ int main()
 ```
 * insert[color ff0000]
 * um.cbegin()[link cbegin.md]
-* um.cend()[link cend.md]
 * fl.cbegin()[link /reference/forward_list/forward_list/cbegin.md]
 * fl.cend()[link /reference/forward_list/forward_list/cend.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator!= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/unordered_map/unordered_map/op_not_equal.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/unordered_map/unordered_map/op_not_equal.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_map/unordered_map/op_not_equal.md b/reference/unordered_map/unordered_map/op_not_equal.md
index 7377c00c9..076e24022 100644
--- a/reference/unordered_map/unordered_map/op_not_equal.md
+++ b/reference/unordered_map/unordered_map/op_not_equal.md
@@ -66,7 +66,6 @@ int main()
   return 0;
 }
 ```
-* insert[link insert.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>insert -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/unordered_map/unordered_multimap/insert.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/unordered_map/unordered_multimap/insert.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_map/unordered_multimap/insert.md b/reference/unordered_map/unordered_multimap/insert.md
index ddac0d8b6..b0e30bd35 100644
--- a/reference/unordered_map/unordered_multimap/insert.md
+++ b/reference/unordered_map/unordered_multimap/insert.md
@@ -206,7 +206,6 @@ int main()
 ```
 * insert[color ff0000]
 * um.cbegin()[link cbegin.md]
-* um.cend()[link cend.md]
 * fl.cbegin()[link /reference/forward_list/forward_list/cbegin.md]
 * fl.cend()[link /reference/forward_list/forward_list/cend.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>unordered_multiset -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/unordered_set/unordered_multiset.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/unordered_set/unordered_multiset.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_set/unordered_multiset.md b/reference/unordered_set/unordered_multiset.md
index 620a65564..8b6ce610f 100644
--- a/reference/unordered_set/unordered_multiset.md
+++ b/reference/unordered_set/unordered_multiset.md
@@ -232,8 +232,8 @@ int main()
 ```
 * std::unordered_multiset[color ff0000]
 * std::ostream[link /reference/ostream.md]
-* us.insert[link unordered_multiset/insert.md]
-* us.erase[link unordered_multiset/erase.md]
+* ums.insert[link unordered_multiset/insert.md]
+* ums.erase[link unordered_multiset/erase.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>bucket -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/unordered_set/unordered_multiset/bucket.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/unordered_set/unordered_multiset/bucket.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_set/unordered_multiset/bucket.md b/reference/unordered_set/unordered_multiset/bucket.md
index d939147d4..e744de4d7 100644
--- a/reference/unordered_set/unordered_multiset/bucket.md
+++ b/reference/unordered_set/unordered_multiset/bucket.md
@@ -59,8 +59,8 @@ int main()
 }
 ```
 * bucket[color ff0000]
-* us.bucket_count()[link bucket_count.md]
-* us.bucket_size[link bucket_size.md]
+* ums.bucket_count()[link bucket_count.md]
+* ums.bucket_size[link bucket_size.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/unordered_set/unordered_multiset/erase.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/unordered_set/unordered_multiset/erase.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_set/unordered_multiset/erase.md b/reference/unordered_set/unordered_multiset/erase.md
index 683a634b6..88cb5415f 100644
--- a/reference/unordered_set/unordered_multiset/erase.md
+++ b/reference/unordered_set/unordered_multiset/erase.md
@@ -117,8 +117,6 @@ int main()
 ```
 * erase[color ff0000]
 * std::ostream[link /reference/ostream/basic_ostream.md]
-* ums.begin()[link begin.md]
-* ums.end()[link end.md]
 * std::next[link /reference/iterator/next.md]
 * ums.cbegin()[link cbegin.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>insert -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/unordered_set/unordered_multiset/insert.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/unordered_set/unordered_multiset/insert.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_set/unordered_multiset/insert.md b/reference/unordered_set/unordered_multiset/insert.md
index 5847a7f22..422261a0d 100644
--- a/reference/unordered_set/unordered_multiset/insert.md
+++ b/reference/unordered_set/unordered_multiset/insert.md
@@ -160,7 +160,6 @@ int main()
 * c.cbegin()[link cbegin.md]
 * c.cend()[link cend.md]
 * ums.cbegin()[link cbegin.md]
-* ums.cend()[link cend.md]
 * fl.cbegin()[link /reference/forward_list/forward_list/cbegin.md]
 * fl.cend()[link /reference/forward_list/forward_list/cend.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/unordered_set/unordered_set/erase.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/unordered_set/unordered_set/erase.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_set/unordered_set/erase.md b/reference/unordered_set/unordered_set/erase.md
index 835a8e0e1..8a6c214ac 100644
--- a/reference/unordered_set/unordered_set/erase.md
+++ b/reference/unordered_set/unordered_set/erase.md
@@ -116,8 +116,6 @@ int main()
 ```
 * erase[color ff0000]
 * std::ostream[link /reference/ostream/basic_ostream.md]
-* us.begin()[link begin.md]
-* us.end()[link end.md]
 * std::next[link /reference/iterator/next.md]
 * us.cbegin()[link cbegin.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>insert -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/unordered_set/unordered_set/insert.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/unordered_set/unordered_set/insert.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_set/unordered_set/insert.md b/reference/unordered_set/unordered_set/insert.md
index 245d184a8..20e168442 100644
--- a/reference/unordered_set/unordered_set/insert.md
+++ b/reference/unordered_set/unordered_set/insert.md
@@ -174,7 +174,6 @@ int main()
 * c.begin()[link begin.md]
 * c.end()[link end.md]
 * us.begin()[link begin.md]
-* us.end()[link end.md]
 * second[link /reference/utility/pair.md]
 * first[link /reference/utility/pair.md]
 * fl.cbegin()[link /reference/forward_list/forward_list/cbegin.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>index_sequence -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/utility/index_sequence.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/utility/index_sequence.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/utility/index_sequence.md b/reference/utility/index_sequence.md
index 13e4bfab4..7de93bbe6 100644
--- a/reference/utility/index_sequence.md
+++ b/reference/utility/index_sequence.md
@@ -39,7 +39,6 @@ int main()
 }
 ```
 * std::index_sequence[color ff0000]
-* std::integer_sequence[link integer_sequence.md]
 
 ## 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>common_type -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/utility/pair/common_type.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/utility/pair/common_type.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/utility/pair/common_type.md b/reference/utility/pair/common_type.md
index d71b1ec73..eb41b6690 100644
--- a/reference/utility/pair/common_type.md
+++ b/reference/utility/pair/common_type.md
@@ -16,7 +16,6 @@ namespace std {
 * common_type[link /reference/type_traits/common_type.md]
 * pair[link ../pair.md]
 * common_type_t[link /reference/type_traits/common_type.md]
-* tuple-like[link /reference/tuple/tuple-like.md]
 
 ## 概要
 [`pair`](../pair.md)について、どちらからも変換可能な共通の型を取得できるようにする[`common_type`](/reference/type_traits/common_type.md)の特殊化である。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/gslice_array/op_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/gslice_array/op_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/gslice_array/op_assign.md b/reference/valarray/gslice_array/op_assign.md
index 83c56618a..8956c508d 100644
--- a/reference/valarray/gslice_array/op_assign.md
+++ b/reference/valarray/gslice_array/op_assign.md
@@ -13,7 +13,6 @@ public:
   void operator=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; ar) const;               // (2)
   void operator=(const T&amp;amp; value) const;                        // (3)
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator/= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/gslice_array/op_divide_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/gslice_array/op_divide_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/gslice_array/op_divide_assign.md b/reference/valarray/gslice_array/op_divide_assign.md
index 716a0e850..25e661c61 100644
--- a/reference/valarray/gslice_array/op_divide_assign.md
+++ b/reference/valarray/gslice_array/op_divide_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator/=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;&lt;= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/gslice_array/op_left_shift_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/gslice_array/op_left_shift_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/gslice_array/op_left_shift_assign.md b/reference/valarray/gslice_array/op_left_shift_assign.md
index 6506d5c20..6f8a6ba80 100644
--- a/reference/valarray/gslice_array/op_left_shift_assign.md
+++ b/reference/valarray/gslice_array/op_left_shift_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator&amp;lt;&amp;lt;=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator-= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/gslice_array/op_minus_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/gslice_array/op_minus_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/gslice_array/op_minus_assign.md b/reference/valarray/gslice_array/op_minus_assign.md
index 4180b1807..db6649ed9 100644
--- a/reference/valarray/gslice_array/op_minus_assign.md
+++ b/reference/valarray/gslice_array/op_minus_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator-=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator%= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/gslice_array/op_modulo_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/gslice_array/op_modulo_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/gslice_array/op_modulo_assign.md b/reference/valarray/gslice_array/op_modulo_assign.md
index 28f0ce8b1..c651381f1 100644
--- a/reference/valarray/gslice_array/op_modulo_assign.md
+++ b/reference/valarray/gslice_array/op_modulo_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator%=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator*= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/gslice_array/op_multiply_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/gslice_array/op_multiply_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/gslice_array/op_multiply_assign.md b/reference/valarray/gslice_array/op_multiply_assign.md
index d974c8a24..0520146af 100644
--- a/reference/valarray/gslice_array/op_multiply_assign.md
+++ b/reference/valarray/gslice_array/op_multiply_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator*=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator|= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/gslice_array/op_or_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/gslice_array/op_or_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/gslice_array/op_or_assign.md b/reference/valarray/gslice_array/op_or_assign.md
index cd2da73de..ebf23be14 100644
--- a/reference/valarray/gslice_array/op_or_assign.md
+++ b/reference/valarray/gslice_array/op_or_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator|=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator+= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/gslice_array/op_plus_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/gslice_array/op_plus_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/gslice_array/op_plus_assign.md b/reference/valarray/gslice_array/op_plus_assign.md
index 3c24b3432..08712a3e5 100644
--- a/reference/valarray/gslice_array/op_plus_assign.md
+++ b/reference/valarray/gslice_array/op_plus_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator+=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt;= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/gslice_array/op_right_shift_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/gslice_array/op_right_shift_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/gslice_array/op_right_shift_assign.md b/reference/valarray/gslice_array/op_right_shift_assign.md
index 32d3076fa..56e1bb5c0 100644
--- a/reference/valarray/gslice_array/op_right_shift_assign.md
+++ b/reference/valarray/gslice_array/op_right_shift_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator&amp;gt;&amp;gt;=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator^= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/gslice_array/op_xor_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/gslice_array/op_xor_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/gslice_array/op_xor_assign.md b/reference/valarray/gslice_array/op_xor_assign.md
index 31d28cf28..5073075cf 100644
--- a/reference/valarray/gslice_array/op_xor_assign.md
+++ b/reference/valarray/gslice_array/op_xor_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator^=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&amp;= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/indirect_array/op_and_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/indirect_array/op_and_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/indirect_array/op_and_assign.md b/reference/valarray/indirect_array/op_and_assign.md
index f5dc0c7fb..79d646b82 100644
--- a/reference/valarray/indirect_array/op_and_assign.md
+++ b/reference/valarray/indirect_array/op_and_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator&amp;amp;=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/indirect_array/op_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/indirect_array/op_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/indirect_array/op_assign.md b/reference/valarray/indirect_array/op_assign.md
index c5725cabb..46d1556ca 100644
--- a/reference/valarray/indirect_array/op_assign.md
+++ b/reference/valarray/indirect_array/op_assign.md
@@ -13,7 +13,6 @@ public:
   void operator=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; ar) const;                   // (2)
   void operator=(const T&amp;amp; value) const;                            // (3)
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator/= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/indirect_array/op_divide_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/indirect_array/op_divide_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/indirect_array/op_divide_assign.md b/reference/valarray/indirect_array/op_divide_assign.md
index 3b3b9ac63..944af8ba7 100644
--- a/reference/valarray/indirect_array/op_divide_assign.md
+++ b/reference/valarray/indirect_array/op_divide_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator/=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;&lt;= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/indirect_array/op_left_shift_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/indirect_array/op_left_shift_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/indirect_array/op_left_shift_assign.md b/reference/valarray/indirect_array/op_left_shift_assign.md
index 069e93666..715312a25 100644
--- a/reference/valarray/indirect_array/op_left_shift_assign.md
+++ b/reference/valarray/indirect_array/op_left_shift_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator&amp;lt;&amp;lt;=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator-= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/indirect_array/op_minus_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/indirect_array/op_minus_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/indirect_array/op_minus_assign.md b/reference/valarray/indirect_array/op_minus_assign.md
index c0bff5da9..d026e5706 100644
--- a/reference/valarray/indirect_array/op_minus_assign.md
+++ b/reference/valarray/indirect_array/op_minus_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator-=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator%= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/indirect_array/op_modulo_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/indirect_array/op_modulo_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/indirect_array/op_modulo_assign.md b/reference/valarray/indirect_array/op_modulo_assign.md
index 928453203..0fca7c331 100644
--- a/reference/valarray/indirect_array/op_modulo_assign.md
+++ b/reference/valarray/indirect_array/op_modulo_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator%=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator*= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/indirect_array/op_multiply_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/indirect_array/op_multiply_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/indirect_array/op_multiply_assign.md b/reference/valarray/indirect_array/op_multiply_assign.md
index 2414ae93f..cd2844a89 100644
--- a/reference/valarray/indirect_array/op_multiply_assign.md
+++ b/reference/valarray/indirect_array/op_multiply_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator*=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator|= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/indirect_array/op_or_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/indirect_array/op_or_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/indirect_array/op_or_assign.md b/reference/valarray/indirect_array/op_or_assign.md
index 16f922e36..2189c7a81 100644
--- a/reference/valarray/indirect_array/op_or_assign.md
+++ b/reference/valarray/indirect_array/op_or_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator|=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator+= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/indirect_array/op_plus_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/indirect_array/op_plus_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/indirect_array/op_plus_assign.md b/reference/valarray/indirect_array/op_plus_assign.md
index 7074528ae..d9d257ed1 100644
--- a/reference/valarray/indirect_array/op_plus_assign.md
+++ b/reference/valarray/indirect_array/op_plus_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator+=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt;= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/indirect_array/op_right_shift_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/indirect_array/op_right_shift_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/indirect_array/op_right_shift_assign.md b/reference/valarray/indirect_array/op_right_shift_assign.md
index 62848b0ab..6f4f7724d 100644
--- a/reference/valarray/indirect_array/op_right_shift_assign.md
+++ b/reference/valarray/indirect_array/op_right_shift_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator&amp;gt;&amp;gt;=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator^= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/indirect_array/op_xor_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/indirect_array/op_xor_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/indirect_array/op_xor_assign.md b/reference/valarray/indirect_array/op_xor_assign.md
index da1b57e48..102831572 100644
--- a/reference/valarray/indirect_array/op_xor_assign.md
+++ b/reference/valarray/indirect_array/op_xor_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator^=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&amp;= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/mask_array/op_and_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/mask_array/op_and_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/mask_array/op_and_assign.md b/reference/valarray/mask_array/op_and_assign.md
index 6be7430d4..c113dc4b8 100644
--- a/reference/valarray/mask_array/op_and_assign.md
+++ b/reference/valarray/mask_array/op_and_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator&amp;amp;=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/mask_array/op_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/mask_array/op_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/mask_array/op_assign.md b/reference/valarray/mask_array/op_assign.md
index 2e724f2bb..6874cd06c 100644
--- a/reference/valarray/mask_array/op_assign.md
+++ b/reference/valarray/mask_array/op_assign.md
@@ -13,7 +13,6 @@ public:
   void operator=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; ar) const;           // (2)
   void operator=(const T&amp;amp; value) const;                    // (3)
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator/= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/mask_array/op_divide_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/mask_array/op_divide_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/mask_array/op_divide_assign.md b/reference/valarray/mask_array/op_divide_assign.md
index 132427af7..3c67846bd 100644
--- a/reference/valarray/mask_array/op_divide_assign.md
+++ b/reference/valarray/mask_array/op_divide_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator/=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;&lt;= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/mask_array/op_left_shift_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/mask_array/op_left_shift_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/mask_array/op_left_shift_assign.md b/reference/valarray/mask_array/op_left_shift_assign.md
index 49b18383c..34fea5766 100644
--- a/reference/valarray/mask_array/op_left_shift_assign.md
+++ b/reference/valarray/mask_array/op_left_shift_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator&amp;lt;&amp;lt;=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator-= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/mask_array/op_minus_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/mask_array/op_minus_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/mask_array/op_minus_assign.md b/reference/valarray/mask_array/op_minus_assign.md
index f5f47b2f3..4a99535fa 100644
--- a/reference/valarray/mask_array/op_minus_assign.md
+++ b/reference/valarray/mask_array/op_minus_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator-=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator%= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/mask_array/op_modulo_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/mask_array/op_modulo_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/mask_array/op_modulo_assign.md b/reference/valarray/mask_array/op_modulo_assign.md
index 0e7981020..8dc002c99 100644
--- a/reference/valarray/mask_array/op_modulo_assign.md
+++ b/reference/valarray/mask_array/op_modulo_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator%=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator*= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/mask_array/op_multiply_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/mask_array/op_multiply_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/mask_array/op_multiply_assign.md b/reference/valarray/mask_array/op_multiply_assign.md
index 8d8052c33..5921024e4 100644
--- a/reference/valarray/mask_array/op_multiply_assign.md
+++ b/reference/valarray/mask_array/op_multiply_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator*=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator|= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/mask_array/op_or_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/mask_array/op_or_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/mask_array/op_or_assign.md b/reference/valarray/mask_array/op_or_assign.md
index 57afe32b8..985fb61dc 100644
--- a/reference/valarray/mask_array/op_or_assign.md
+++ b/reference/valarray/mask_array/op_or_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator|=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator+= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/mask_array/op_plus_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/mask_array/op_plus_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/mask_array/op_plus_assign.md b/reference/valarray/mask_array/op_plus_assign.md
index d1e21473b..c5ba128c6 100644
--- a/reference/valarray/mask_array/op_plus_assign.md
+++ b/reference/valarray/mask_array/op_plus_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator+=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
@@ -48,7 +47,6 @@ int main()
   }
 }
 ```
-* to_string()[link /reference/bitset/bitset/to_string.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt;= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/mask_array/op_right_shift_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/mask_array/op_right_shift_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/mask_array/op_right_shift_assign.md b/reference/valarray/mask_array/op_right_shift_assign.md
index 49736513e..d571bb3e5 100644
--- a/reference/valarray/mask_array/op_right_shift_assign.md
+++ b/reference/valarray/mask_array/op_right_shift_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator&amp;gt;&amp;gt;=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator^= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/mask_array/op_xor_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/mask_array/op_xor_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/mask_array/op_xor_assign.md b/reference/valarray/mask_array/op_xor_assign.md
index 3e5eebc12..724deb22f 100644
--- a/reference/valarray/mask_array/op_xor_assign.md
+++ b/reference/valarray/mask_array/op_xor_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator^=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&amp;= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/slice_array/op_and_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/slice_array/op_and_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/slice_array/op_and_assign.md b/reference/valarray/slice_array/op_and_assign.md
index cd70f86a3..77b14b209 100644
--- a/reference/valarray/slice_array/op_and_assign.md
+++ b/reference/valarray/slice_array/op_and_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator&amp;amp;=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/slice_array/op_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/slice_array/op_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/slice_array/op_assign.md b/reference/valarray/slice_array/op_assign.md
index 9895dd713..b9e795ef7 100644
--- a/reference/valarray/slice_array/op_assign.md
+++ b/reference/valarray/slice_array/op_assign.md
@@ -13,7 +13,6 @@ public:
   void operator=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; ar) const;             // (2)
   void operator=(const T&amp;amp; value) const;                      // (3)
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator/= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/slice_array/op_divide_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/slice_array/op_divide_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/slice_array/op_divide_assign.md b/reference/valarray/slice_array/op_divide_assign.md
index 8a6efa108..e2ee7796d 100644
--- a/reference/valarray/slice_array/op_divide_assign.md
+++ b/reference/valarray/slice_array/op_divide_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator/=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;&lt;= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/slice_array/op_left_shift_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/slice_array/op_left_shift_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/slice_array/op_left_shift_assign.md b/reference/valarray/slice_array/op_left_shift_assign.md
index 6d4e07b47..b827f5bc6 100644
--- a/reference/valarray/slice_array/op_left_shift_assign.md
+++ b/reference/valarray/slice_array/op_left_shift_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator&amp;lt;&amp;lt;=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator-= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/slice_array/op_minus_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/slice_array/op_minus_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/slice_array/op_minus_assign.md b/reference/valarray/slice_array/op_minus_assign.md
index bed07d5a9..22bcdcc5d 100644
--- a/reference/valarray/slice_array/op_minus_assign.md
+++ b/reference/valarray/slice_array/op_minus_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator-=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator%= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/slice_array/op_modulo_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/slice_array/op_modulo_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/slice_array/op_modulo_assign.md b/reference/valarray/slice_array/op_modulo_assign.md
index 7b9f42ced..8566a53d7 100644
--- a/reference/valarray/slice_array/op_modulo_assign.md
+++ b/reference/valarray/slice_array/op_modulo_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator%=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator*= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/slice_array/op_multiply_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/slice_array/op_multiply_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/slice_array/op_multiply_assign.md b/reference/valarray/slice_array/op_multiply_assign.md
index 141339316..63b1eab61 100644
--- a/reference/valarray/slice_array/op_multiply_assign.md
+++ b/reference/valarray/slice_array/op_multiply_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator*=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator|= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/slice_array/op_or_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/slice_array/op_or_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/slice_array/op_or_assign.md b/reference/valarray/slice_array/op_or_assign.md
index 2815e6671..26cd27f90 100644
--- a/reference/valarray/slice_array/op_or_assign.md
+++ b/reference/valarray/slice_array/op_or_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator|=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator+= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/slice_array/op_plus_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/slice_array/op_plus_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/slice_array/op_plus_assign.md b/reference/valarray/slice_array/op_plus_assign.md
index 276832b40..2b266753a 100644
--- a/reference/valarray/slice_array/op_plus_assign.md
+++ b/reference/valarray/slice_array/op_plus_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator+=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt;= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/slice_array/op_right_shift_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/slice_array/op_right_shift_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/slice_array/op_right_shift_assign.md b/reference/valarray/slice_array/op_right_shift_assign.md
index 0bb47395e..bddb0eea2 100644
--- a/reference/valarray/slice_array/op_right_shift_assign.md
+++ b/reference/valarray/slice_array/op_right_shift_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator&amp;gt;&amp;gt;=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator^= -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/valarray/slice_array/op_xor_assign.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/valarray/slice_array/op_xor_assign.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/slice_array/op_xor_assign.md b/reference/valarray/slice_array/op_xor_assign.md
index 18e40b7dd..cfdd90146 100644
--- a/reference/valarray/slice_array/op_xor_assign.md
+++ b/reference/valarray/slice_array/op_xor_assign.md
@@ -7,7 +7,6 @@
 ```cpp
 void operator^=(const ValOrProxy&amp;lt;T&amp;gt;&amp;amp; xs) const;
 ```
-* valarray[link /reference/valarray/valarray.md]
 * ValOrProxy[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>emplace -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/reference/variant/variant/emplace.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:reference/variant/variant/emplace.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/variant/variant/emplace.md b/reference/variant/variant/emplace.md
index c8529d306..53483df85 100644
--- a/reference/variant/variant/emplace.md
+++ b/reference/variant/variant/emplace.md
@@ -173,7 +173,7 @@ int main()
 * std::get[link get.md]
 * std::holds_alternative[link /reference/variant/holds_alternative.md]
 * index()[link index.md]
-* std::in_place_index[link /reference/utility/in_place_index_t.md]
+* in_place_index[link /reference/utility/in_place_index_t.md]
 
 #### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>はじめてのコントリビュート -- Merge pull request #1120 from cpprefjp/code_qualify_check</title>
      <link href="https://cpprefjp.github.io/start_editing.html"/>
      <id>af734687d2af9bd0bad0b0d6168c6ae9e5de0d31:start_editing.md</id>
      <updated>2023-02-06T18:07:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/start_editing.md b/start_editing.md
index 963c862fb..c3e0f467f 100644
--- a/start_editing.md
+++ b/start_editing.md
@@ -48,6 +48,9 @@ buildアクションで、MarkdownからHTMLへの変換と、GitHub Pagesへの
     - ページが消滅した場合は、代替となるものがあれば差し替え、なければInternet Archiveに変更する
     - 一時的にアクセスできない場合は、時間を置いてアクセスできるようになったらissueを閉じる
     - 海外からのアクセス (GitHub Actions) を拒否しているページもあるため、そのようなページは個別にチェックから外す ([link_check.py](https://github.com/cpprefjp/site/blob/master/.github/workflows/script/link_check.py)の`IGNORE_LIST`に追加する)
+- コード修飾の誤り検出 (code qualify checkアクション)
+    - コードブロック中のコードを修飾しているのに、その修飾対象がない場合に、エラーが発生する
+    - [GitHub Actionsの実行ログ](https://github.com/cpprefjp/site/actions/workflows/code_qualify_check.yml)で、どのページのどのコード修飾が不正かがわかるので、それを修正すること
 
 
 ### 自動反映ツール
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
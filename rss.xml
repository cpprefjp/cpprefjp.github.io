<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2025-09-01T09:00:37.178650</updated>
  <id>d4c85453-0d2f-42a2-891e-2a6fd3393088</id>

  
    <entry>
      <title>allocator-aware-forward -- リンクミスを修正 (close #1526)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/allocator-aware-forward.html"/>
      <id>07c5ad841f0e4a14ea94bb101ed53b0da3a43e11:reference/execution/execution/allocator-aware-forward.md</id>
      <updated>2025-09-01T17:56:30+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/allocator-aware-forward.md b/reference/execution/execution/allocator-aware-forward.md
index f44627569..4637c1d7d 100644
--- a/reference/execution/execution/allocator-aware-forward.md
+++ b/reference/execution/execution/allocator-aware-forward.md
@@ -39,4 +39,4 @@ decltype(auto) allocator-aware-forward(T&amp;amp;&amp;amp; obj, Context&amp;amp;&amp;amp; context);
 
 
 ## 参照
-- [P3433R1 Allocator Support for Operation States](https://open-std.org/jtc1/sc22/wg21/docs/papers/2025/p3433r1.pdf0)
+- [P3433R1 Allocator Support for Operation States](https://open-std.org/jtc1/sc22/wg21/docs/papers/2025/p3433r1.pdf)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>impls-for -- リンクミスを修正 (close #1526)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/impls-for.html"/>
      <id>07c5ad841f0e4a14ea94bb101ed53b0da3a43e11:reference/execution/execution/impls-for.md</id>
      <updated>2025-09-01T17:56:30+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/impls-for.md b/reference/execution/execution/impls-for.md
index 13639a940..72f754f83 100644
--- a/reference/execution/execution/impls-for.md
+++ b/reference/execution/execution/impls-for.md
@@ -147,5 +147,5 @@ static consteval void default-impls::check-types();
 
 ## 参照
 - [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
-- [P3433R1 Allocator Support for Operation States](https://open-std.org/jtc1/sc22/wg21/docs/papers/2025/p3433r1.pdf0)
+- [P3433R1 Allocator Support for Operation States](https://open-std.org/jtc1/sc22/wg21/docs/papers/2025/p3433r1.pdf)
 - [P3557R3 High-Quality Sender Diagnostics with Constexpr Exceptions](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2025/p3557r3.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>let_value -- リンクミスを修正 (close #1526)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/let_value.html"/>
      <id>07c5ad841f0e4a14ea94bb101ed53b0da3a43e11:reference/execution/execution/let_value.md</id>
      <updated>2025-09-01T17:56:30+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/let_value.md b/reference/execution/execution/let_value.md
index 5582e4a11..a21829bfa 100644
--- a/reference/execution/execution/let_value.md
+++ b/reference/execution/execution/let_value.md
@@ -440,7 +440,7 @@ catch 0
 - [P2999R3 Sender Algorithm Customization](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p2999r3.html)
 - [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
 - [P3396R1 std::execution wording fixes](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p3396r1.html)
-- [P3433R1 Allocator Support for Operation States](https://open-std.org/jtc1/sc22/wg21/docs/papers/2025/p3433r1.pdf0)
+- [P3433R1 Allocator Support for Operation States](https://open-std.org/jtc1/sc22/wg21/docs/papers/2025/p3433r1.pdf)
 - [P3557R3 High-Quality Sender Diagnostics with Constexpr Exceptions](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2025/p3557r3.html)
 - [LWG 4203. Constraints on `get-state` functions are incorrect](https://cplusplus.github.io/LWG/issue4203)
 - [LWG 4204. specification of `as-sndr2(Sig)` in [exec.let] is incomplete](https://cplusplus.github.io/LWG/issue4204)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>非型テンプレートパラメータのauto宣言 [P0127R2] -- 文章中やコメントの全角スペースを半角スペースに置換</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/declaring_non-type_template_arguments_with_auto.html"/>
      <id>b78f6ab9e1f491262de91af28beb2c36b0cc4c49:lang/cpp17/declaring_non-type_template_arguments_with_auto.md</id>
      <updated>2025-08-31T21:46:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/declaring_non-type_template_arguments_with_auto.md b/lang/cpp17/declaring_non-type_template_arguments_with_auto.md
index 046baebd9..26de00e2a 100644
--- a/lang/cpp17/declaring_non-type_template_arguments_with_auto.md
+++ b/lang/cpp17/declaring_non-type_template_arguments_with_auto.md
@@ -47,7 +47,7 @@ A&amp;lt;3.14&amp;gt;; // コンパイルエラー (浮動小数点数は渡せない)
 - オブジェクトへの左辺値参照または関数への左辺値参照
 - メンバへのポインタ
 -  [`std::nullptr_t`](/reference/cstddef/nullptr_t.md)
-- プレースホルダ型を含む型　&amp;lt;-- この行が追加された
+- プレースホルダ型を含む型 &amp;lt;-- この行が追加された
 
 なお、[temp.param]/4 は C++20 で変更予定である。[Working Draft, Standard](http://eel.is/c++draft/temp.param)を参照。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>year_month_day -- 文章中やコメントの全角スペースを半角スペースに置換</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day.html"/>
      <id>b78f6ab9e1f491262de91af28beb2c36b0cc4c49:reference/chrono/year_month_day.md</id>
      <updated>2025-08-31T21:46:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day.md b/reference/chrono/year_month_day.md
index 13001ffd7..8615859ba 100644
--- a/reference/chrono/year_month_day.md
+++ b/reference/chrono/year_month_day.md
@@ -226,7 +226,7 @@ chrono::year_month_day unix_time_to_ymd(std::time_t unixtime) {
 
 int main()
 {
-  // UNIX時間での現在日時を取得　
+  // UNIX時間での現在日時を取得
   std::time_t now = std::time(nullptr);
   chrono::year_month_day date = unix_time_to_ymd(now);
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>pow -- 文章中やコメントの全角スペースを半角スペースに置換</title>
      <link href="https://cpprefjp.github.io/reference/complex/complex/pow.html"/>
      <id>b78f6ab9e1f491262de91af28beb2c36b0cc4c49:reference/complex/complex/pow.md</id>
      <updated>2025-08-31T21:46:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/complex/complex/pow.md b/reference/complex/complex/pow.md
index 8135bf4e0..92f483eaf 100644
--- a/reference/complex/complex/pow.md
+++ b/reference/complex/complex/pow.md
@@ -120,8 +120,8 @@ pow( (1,2), (3,4) ) = (0.12901,0.0339241)
 
 ### 備考
 - libstdc++ では、バージョンによって C++11 モードの挙動が異なる。
-	- 4.3.6 では第 2 引数が `int` のオーバーロード (4) が無効化されていない。また、追加のオーバーロード (5) は `complex&amp;lt;T&amp;gt;` でない方の引数の型が算術型でなくても、算術型への暗黙の型変換が可能であれば、適用されてしまう。さらに、追加のオーバーロード (5) の結果型は、引数の型が `complex&amp;lt;float&amp;gt;` と整数型の場合、`complex&amp;lt;float&amp;gt;`　になってしまう。
-	- 4.4.7、4.5.4 では、第 2 引数が `int` のオーバーロード (4) は無効化されているが、追加のオーバーロード (5) は `complex&amp;lt;T&amp;gt;` でない方の引数の型が算術型でなくても、算術型への暗黙の型変換が可能であれば、適用されてしまう。さらに、追加のオーバーロード (5) の結果型は、引数の型が `complex&amp;lt;float&amp;gt;` と整数型の場合、`complex&amp;lt;float&amp;gt;`　になってしまう。
+	- 4.3.6 では第 2 引数が `int` のオーバーロード (4) が無効化されていない。また、追加のオーバーロード (5) は `complex&amp;lt;T&amp;gt;` でない方の引数の型が算術型でなくても、算術型への暗黙の型変換が可能であれば、適用されてしまう。さらに、追加のオーバーロード (5) の結果型は、引数の型が `complex&amp;lt;float&amp;gt;` と整数型の場合、`complex&amp;lt;float&amp;gt;` になってしまう。
+	- 4.4.7、4.5.4 では、第 2 引数が `int` のオーバーロード (4) は無効化されているが、追加のオーバーロード (5) は `complex&amp;lt;T&amp;gt;` でない方の引数の型が算術型でなくても、算術型への暗黙の型変換が可能であれば、適用されてしまう。さらに、追加のオーバーロード (5) の結果型は、引数の型が `complex&amp;lt;float&amp;gt;` と整数型の場合、`complex&amp;lt;float&amp;gt;` になってしまう。
 	- 4.6.4 から 4.8.2 の間は第 2 引数が `int` のオーバーロード (4) は無効化されている。また、追加のオーバーロード (5) は、引数の型が `complex&amp;lt;T&amp;gt;` と算術型でなければ適用されない。（最も規格に準拠した挙動である）
 	- 4.9.0 では第 2 引数が `int` のオーバーロード (5) は無効化されていないが、追加のオーバーロード (5) は、引数の型が `complex&amp;lt;T&amp;gt;` と算術型でなければ適用されない。
 	なお、いずれのバージョンでも C++03 モードでは追加のオーバーロード (5) は無効化されている。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>equality_comparable -- 文章中やコメントの全角スペースを半角スペースに置換</title>
      <link href="https://cpprefjp.github.io/reference/concepts/equality_comparable.html"/>
      <id>b78f6ab9e1f491262de91af28beb2c36b0cc4c49:reference/concepts/equality_comparable.md</id>
      <updated>2025-08-31T21:46:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/concepts/equality_comparable.md b/reference/concepts/equality_comparable.md
index 668b8078d..63fc1fde0 100644
--- a/reference/concepts/equality_comparable.md
+++ b/reference/concepts/equality_comparable.md
@@ -62,7 +62,7 @@ concept equality_comparable_with =
 - (1) : `T`のオブジェクト`a, b`について次の条件を満たす場合に限って、型`T`は`equality_comparable`のモデルである。
     - `bool(a == b)`は`a, b`の値が等値である場合に`true`となり、それ以外の場合は`false`となる
 
-- (2) :　`const remove_reference_t&amp;lt;T&amp;gt;, const remove_reference_t&amp;lt;U&amp;gt;`型の左辺値`t, u`及び`C = common_reference_t&amp;lt;const remove_reference_t&amp;lt;T&amp;gt;&amp;amp;, const remove_reference_t&amp;lt;U&amp;gt;&amp;amp;&amp;gt;`について次の条件を満たす場合に限って、型`T, U`は`equality_comparable_with`のモデルである。
+- (2) : `const remove_reference_t&amp;lt;T&amp;gt;, const remove_reference_t&amp;lt;U&amp;gt;`型の左辺値`t, u`及び`C = common_reference_t&amp;lt;const remove_reference_t&amp;lt;T&amp;gt;&amp;amp;, const remove_reference_t&amp;lt;U&amp;gt;&amp;amp;&amp;gt;`について次の条件を満たす場合に限って、型`T, U`は`equality_comparable_with`のモデルである。
     - `bool(t == u) == bool(C(t) == C(u))`が`true`であること
 
 - `weakly-equality-comparable-with` : `const remove_reference_t&amp;lt;T&amp;gt;, const remove_reference_t&amp;lt;U&amp;gt;`型の左辺値`t, u`について次の条件を満たす場合に限って、型`T, U`は`weakly-equality-comparable-with`のモデルである。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>totally_ordered -- 文章中やコメントの全角スペースを半角スペースに置換</title>
      <link href="https://cpprefjp.github.io/reference/concepts/totally_ordered.html"/>
      <id>b78f6ab9e1f491262de91af28beb2c36b0cc4c49:reference/concepts/totally_ordered.md</id>
      <updated>2025-08-31T21:46:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/concepts/totally_ordered.md b/reference/concepts/totally_ordered.md
index e9f34d82b..fb64dfd41 100644
--- a/reference/concepts/totally_ordered.md
+++ b/reference/concepts/totally_ordered.md
@@ -36,7 +36,7 @@ namespace std {
     - `bool(a &amp;lt;= b) == !bool(b &amp;lt; a)`が`true`であること
     - `bool(a &amp;gt;= b) == !bool(a &amp;lt; b)`が`true`であること
 
-- (2) :　`const remove_reference_t&amp;lt;T&amp;gt;, const remove_reference_t&amp;lt;U&amp;gt;`型の左辺値`t, u`及び`C = common_reference_t&amp;lt;const remove_reference_t&amp;lt;T&amp;gt;&amp;amp;, const remove_reference_t&amp;lt;U&amp;gt;&amp;amp;&amp;gt;`について次の条件を満たす場合に限って、型`T, U`は`totally_ordered_with`のモデルである。
+- (2) : `const remove_reference_t&amp;lt;T&amp;gt;, const remove_reference_t&amp;lt;U&amp;gt;`型の左辺値`t, u`及び`C = common_reference_t&amp;lt;const remove_reference_t&amp;lt;T&amp;gt;&amp;amp;, const remove_reference_t&amp;lt;U&amp;gt;&amp;amp;&amp;gt;`について次の条件を満たす場合に限って、型`T, U`は`totally_ordered_with`のモデルである。
     - `bool(t &amp;lt;  u) == bool(C(t) &amp;lt;  C(u))`が`true`であること
     - `bool(t &amp;gt;  u) == bool(C(t) &amp;gt;  C(u))`が`true`であること
     - `bool(t &amp;gt;= u) == bool(C(t) &amp;gt;= C(u))`が`true`であること
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>atof -- 文章中やコメントの全角スペースを半角スペースに置換</title>
      <link href="https://cpprefjp.github.io/reference/cstdlib/atof.html"/>
      <id>b78f6ab9e1f491262de91af28beb2c36b0cc4c49:reference/cstdlib/atof.md</id>
      <updated>2025-08-31T21:46:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstdlib/atof.md b/reference/cstdlib/atof.md
index 4a54ad8b0..6adb2eaf8 100644
--- a/reference/cstdlib/atof.md
+++ b/reference/cstdlib/atof.md
@@ -18,7 +18,7 @@ namespace std {
 - 空白文字から始まる場合、最初の非空白文字から変換する。
 - `0x` または `0X` の場合、空白でない16進数として処理する。
 - `e`または`E`は、それより前を基数、その後ろを指数として処理する。
-- \+　、\-は変換後の符号に適用される。
+- \+ 、\-は変換後の符号に適用される。
 - `INF`または`INFINITY`(大小文字区別せず)は`inf`を返す。
 - NAN(大小文字区別せず)はそれ以前の数値を返す。もし以前の数値がないなら、`nan`を返す。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>atoi,atol,atoll -- 文章中やコメントの全角スペースを半角スペースに置換</title>
      <link href="https://cpprefjp.github.io/reference/cstdlib/atoi_atol_atoll.html"/>
      <id>b78f6ab9e1f491262de91af28beb2c36b0cc4c49:reference/cstdlib/atoi_atol_atoll.md</id>
      <updated>2025-08-31T21:46:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstdlib/atoi_atol_atoll.md b/reference/cstdlib/atoi_atol_atoll.md
index 00e59ca87..c2420dab8 100644
--- a/reference/cstdlib/atoi_atol_atoll.md
+++ b/reference/cstdlib/atoi_atol_atoll.md
@@ -21,7 +21,7 @@ namespace std {
 
 空白文字から始まる場合、最初の非空白文字から変換する。
 
-\+　、\-は変換後の符号に適用される。
+\+ 、\-は変換後の符号に適用される。
 
 
 変換不可能ならば0を返す。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>rend -- 文章中やコメントの全角スペースを半角スペースに置換</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map/rend.html"/>
      <id>b78f6ab9e1f491262de91af28beb2c36b0cc4c49:reference/flat_map/flat_map/rend.md</id>
      <updated>2025-08-31T21:46:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map/rend.md b/reference/flat_map/flat_map/rend.md
index ce633acd2..f77850a43 100644
--- a/reference/flat_map/flat_map/rend.md
+++ b/reference/flat_map/flat_map/rend.md
@@ -63,7 +63,7 @@ int main()
 
 ## 関連項目
 
-| 名前 | 説明　|
+| 名前 | 説明 |
 |------------------------------|--------------------------------------------|
 | [`flat_map::begin`](begin.md)     | 先頭を指すイテレータを取得する |
 | [`flat_map::end`](end.md)         | 末尾の次を指すイテレータを取得する |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>rend -- 文章中やコメントの全角スペースを半角スペースに置換</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_multimap/rend.html"/>
      <id>b78f6ab9e1f491262de91af28beb2c36b0cc4c49:reference/flat_map/flat_multimap/rend.md</id>
      <updated>2025-08-31T21:46:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_multimap/rend.md b/reference/flat_map/flat_multimap/rend.md
index 1d15efc30..d9c371100 100644
--- a/reference/flat_map/flat_multimap/rend.md
+++ b/reference/flat_map/flat_multimap/rend.md
@@ -61,7 +61,7 @@ int main()
 
 ## 関連項目
 
-| 名前 | 説明　|
+| 名前 | 説明 |
 |----------------------------------------|--------------------------------------------|
 | [`flat_multimap::begin`](begin.md)     | 先頭を指すイテレータを取得する |
 | [`flat_multimap::end`](end.md)         | 末尾の次を指すイテレータを取得する |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>rend -- 文章中やコメントの全角スペースを半角スペースに置換</title>
      <link href="https://cpprefjp.github.io/reference/flat_set/flat_multiset/rend.html"/>
      <id>b78f6ab9e1f491262de91af28beb2c36b0cc4c49:reference/flat_set/flat_multiset/rend.md</id>
      <updated>2025-08-31T21:46:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_set/flat_multiset/rend.md b/reference/flat_set/flat_multiset/rend.md
index d558a8e81..9e5d1f744 100644
--- a/reference/flat_set/flat_multiset/rend.md
+++ b/reference/flat_set/flat_multiset/rend.md
@@ -56,7 +56,7 @@ int main()
 
 ## 関連項目
 
-| 名前 | 説明　|
+| 名前 | 説明 |
 |-----------------------------------|-----------------------------|
 | [`flat_multiset::begin`](begin.md)     | 先頭を指すイテレータを取得する |
 | [`flat_multiset::end`](end.md)         | 末尾の次を指すイテレータを取得する |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>rend -- 文章中やコメントの全角スペースを半角スペースに置換</title>
      <link href="https://cpprefjp.github.io/reference/flat_set/flat_set/rend.html"/>
      <id>b78f6ab9e1f491262de91af28beb2c36b0cc4c49:reference/flat_set/flat_set/rend.md</id>
      <updated>2025-08-31T21:46:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_set/flat_set/rend.md b/reference/flat_set/flat_set/rend.md
index 5980906ec..6ba74bfb3 100644
--- a/reference/flat_set/flat_set/rend.md
+++ b/reference/flat_set/flat_set/rend.md
@@ -55,7 +55,7 @@ int main()
 
 ## 関連項目
 
-| 名前 | 説明　|
+| 名前 | 説明 |
 |-----------------------------------|-----------------------------|
 | [`flat_set::begin`](begin.md)     | 先頭を指すイテレータを取得する |
 | [`flat_set::end`](end.md)         | 末尾の次を指すイテレータを取得する |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>event -- 文章中やコメントの全角スペースを半角スペースに置換</title>
      <link href="https://cpprefjp.github.io/reference/ios/ios_base/type-event.html"/>
      <id>b78f6ab9e1f491262de91af28beb2c36b0cc4c49:reference/ios/ios_base/type-event.md</id>
      <updated>2025-08-31T21:46:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ios/ios_base/type-event.md b/reference/ios/ios_base/type-event.md
index 87cdf46f3..ca56907ac 100644
--- a/reference/ios/ios_base/type-event.md
+++ b/reference/ios/ios_base/type-event.md
@@ -9,7 +9,7 @@ enum event { erase_event, imbue_event, copyfmt_event };
 ```
 
 ## 概要
-`event` は　[`register_callback`](register_callback.md) で登録した [`event_callback`](type-event_callback.md) 型のコールバック関数を呼び出す際に、当該関数を呼び出すきっかけとなったイベントの種類を表すための列挙型である。  
+`event` は [`register_callback`](register_callback.md) で登録した [`event_callback`](type-event_callback.md) 型のコールバック関数を呼び出す際に、当該関数を呼び出すきっかけとなったイベントの種類を表すための列挙型である。  
 `event` には以下の表のような列挙子値が存在する。
 
 | 列挙子          | 発生したイベント |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>event_callback -- 文章中やコメントの全角スペースを半角スペースに置換</title>
      <link href="https://cpprefjp.github.io/reference/ios/ios_base/type-event_callback.html"/>
      <id>b78f6ab9e1f491262de91af28beb2c36b0cc4c49:reference/ios/ios_base/type-event_callback.md</id>
      <updated>2025-08-31T21:46:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ios/ios_base/type-event_callback.md b/reference/ios/ios_base/type-event_callback.md
index 723f9a00b..36c314850 100644
--- a/reference/ios/ios_base/type-event_callback.md
+++ b/reference/ios/ios_base/type-event_callback.md
@@ -11,7 +11,7 @@ using event_callback = void(*)(event ev, ios_base&amp;amp; str, int index);
 * ios_base[link ../ios_base.md]
 
 ## 概要
-`event_callback` は　[`register_callback`](register_callback.md) で登録するコールバック関数を表す型である。  
+`event_callback` は [`register_callback`](register_callback.md) で登録するコールバック関数を表す型である。  
 イベントが発生して当該関数が呼ばれる際には、`ev` には発生したイベントの種類（[`event`](type-event.md)）が、`str` にはイベントが発生したストリームが、`index` には [`register_callback`](register_callback.md) での登録時に指定した値がそれぞれ渡される。
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>fmtflags -- 文章中やコメントの全角スペースを半角スペースに置換</title>
      <link href="https://cpprefjp.github.io/reference/ios/ios_base/type-fmtflags.html"/>
      <id>b78f6ab9e1f491262de91af28beb2c36b0cc4c49:reference/ios/ios_base/type-fmtflags.md</id>
      <updated>2025-08-31T21:46:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ios/ios_base/type-fmtflags.md b/reference/ios/ios_base/type-fmtflags.md
index f367166b4..b2e4f08a0 100644
--- a/reference/ios/ios_base/type-fmtflags.md
+++ b/reference/ios/ios_base/type-fmtflags.md
@@ -34,7 +34,7 @@ using fmtflags = T1;
 | `uppercase` | 特定の小文字の出力を大文字の出力にする。（`scientific` の `E` や &amp;lt;code&amp;gt;hex &amp;amp;#124; showbase&amp;lt;/code&amp;gt; の `0X` など） |
 
 
-また、上記に加えて、[`setf`](setf.md)`()` の第 2 引数や　[`unsetf`](unsetf.md)`()` の引数に使用するため、 以下のように組み合わせた定数も [`ios_base`](../ios_base.md) の静的メンバ定数として定義されている。
+また、上記に加えて、[`setf`](setf.md)`()` の第 2 引数や [`unsetf`](unsetf.md)`()` の引数に使用するため、 以下のように組み合わせた定数も [`ios_base`](../ios_base.md) の静的メンバ定数として定義されている。
 
 | 定数 | 値 |
 |------|----------------------|
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>mapping -- 文章中やコメントの全角スペースを半角スペースに置換</title>
      <link href="https://cpprefjp.github.io/reference/linalg/layout_transpose/mapping.html"/>
      <id>b78f6ab9e1f491262de91af28beb2c36b0cc4c49:reference/linalg/layout_transpose/mapping.md</id>
      <updated>2025-08-31T21:46:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/layout_transpose/mapping.md b/reference/linalg/layout_transpose/mapping.md
index 7ee2cb39c..10e1191f2 100644
--- a/reference/linalg/layout_transpose/mapping.md
+++ b/reference/linalg/layout_transpose/mapping.md
@@ -49,7 +49,7 @@ namespace std::linalg {
 | `extents` | 多次元配列のサイズ`extents_`を取得する | C++26 |
 | `required_span_size` | `nested-mapping_.required_span_size()` | C++26 |
 | [`operator()`](mapping/op_call.md) | 多次元配列インデクスから要素位置へ変換する | C++26 |
-| `nested_mapping` | 入れ子レイアウトマッピング`nested-mapping_`を取得する　| C++26 |
+| `nested_mapping` | 入れ子レイアウトマッピング`nested-mapping_`を取得する | C++26 |
 | [`stride`](mapping/stride.md) | 指定次元のストライド幅を取得する | C++26 |
 | `is_unique`     | `nested-mapping_.is_unique()` | C++26 |
 | `is_exhaustive` | `nested-mapping_.is_exhaustive()` | C++26 |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>rend -- 文章中やコメントの全角スペースを半角スペースに置換</title>
      <link href="https://cpprefjp.github.io/reference/map/map/rend.html"/>
      <id>b78f6ab9e1f491262de91af28beb2c36b0cc4c49:reference/map/map/rend.md</id>
      <updated>2025-08-31T21:46:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/map/map/rend.md b/reference/map/map/rend.md
index f18e49216..4c4c53ca7 100644
--- a/reference/map/map/rend.md
+++ b/reference/map/map/rend.md
@@ -62,7 +62,7 @@ int main()
 
 ## 関連項目
 
-| 名前 | 説明　|
+| 名前 | 説明 |
 |------------------------------|--------------------------------------------|
 | [`map::begin`](begin.md)     | 先頭を指すイテレータを取得する |
 | [`map::end`](end.md)         | 末尾の次を指すイテレータを取得する |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>rend -- 文章中やコメントの全角スペースを半角スペースに置換</title>
      <link href="https://cpprefjp.github.io/reference/map/multimap/rend.html"/>
      <id>b78f6ab9e1f491262de91af28beb2c36b0cc4c49:reference/map/multimap/rend.md</id>
      <updated>2025-08-31T21:46:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/map/multimap/rend.md b/reference/map/multimap/rend.md
index a0aa668b6..aa1eb7c50 100644
--- a/reference/map/multimap/rend.md
+++ b/reference/map/multimap/rend.md
@@ -63,7 +63,7 @@ int main()
 
 ## 関連項目
 
-| 名前 | 説明　|
+| 名前 | 説明 |
 |-----------------------------------|-------------------------------------------|
 | [`multimap::begin`](begin.md)     | 先頭を指すイテレータを取得する |
 | [`multimap::end`](end.md)         | 末尾の次を指すイテレータを取得する |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>推論補助 -- 文章中やコメントの全角スペースを半角スペースに置換</title>
      <link href="https://cpprefjp.github.io/reference/mdspan/mdspan/op_deduction_guide.html"/>
      <id>b78f6ab9e1f491262de91af28beb2c36b0cc4c49:reference/mdspan/mdspan/op_deduction_guide.md</id>
      <updated>2025-08-31T21:46:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/mdspan/mdspan/op_deduction_guide.md b/reference/mdspan/mdspan/op_deduction_guide.md
index 32d8a168f..9ecf050d6 100644
--- a/reference/mdspan/mdspan/op_deduction_guide.md
+++ b/reference/mdspan/mdspan/op_deduction_guide.md
@@ -89,7 +89,7 @@ int main()
 {
   int arr[] = {1, 2, 3, 4, 5, 6};
 
-  { // (1) :　1次元配列型から型推論
+  { // (1) : 1次元配列型から型推論
     std::mdspan m1{arr};
     static_assert(m1.rank() == 1 &amp;amp;&amp;amp; m1.rank_dynamic() == 0);
     static_assert(m1.static_extent(0) == 6);
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>submdspan -- 文章中やコメントの全角スペースを半角スペースに置換</title>
      <link href="https://cpprefjp.github.io/reference/mdspan/submdspan.html"/>
      <id>b78f6ab9e1f491262de91af28beb2c36b0cc4c49:reference/mdspan/submdspan.md</id>
      <updated>2025-08-31T21:46:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/mdspan/submdspan.md b/reference/mdspan/submdspan.md
index faeaf0c4a..8182673ba 100644
--- a/reference/mdspan/submdspan.md
+++ b/reference/mdspan/submdspan.md
@@ -235,7 +235,7 @@ int main()
   // 3 4
   // 5 6
 
-  // 行優先レイアウト std::layout_right　を維持
+  // 行優先レイアウト std::layout_right を維持
   auto row0 = std::submdspan(mat, 0, std::full_extent);
   // 1 2
   auto row12 = std::submdspan(mat, std::pair{1,3}, std::full_extent);
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>queue -- 文章中やコメントの全角スペースを半角スペースに置換</title>
      <link href="https://cpprefjp.github.io/reference/queue/queue.html"/>
      <id>b78f6ab9e1f491262de91af28beb2c36b0cc4c49:reference/queue/queue.md</id>
      <updated>2025-08-31T21:46:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/queue/queue.md b/reference/queue/queue.md
index 246e26c86..19ef4b48c 100644
--- a/reference/queue/queue.md
+++ b/reference/queue/queue.md
@@ -59,7 +59,7 @@ namespace std {
 
 ## メンバ型
 
-| 名前 | 説明 |　対応バージョン |
+| 名前 | 説明 | 対応バージョン |
 |-------------------|------------------------------|-------|
 | `value_type`      | `Container::value_type`      | |
 | `reference`       | `Container::reference`       | C++11 |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>showmanyc -- 文章中やコメントの全角スペースを半角スペースに置換</title>
      <link href="https://cpprefjp.github.io/reference/streambuf/basic_streambuf/showmanyc.html"/>
      <id>b78f6ab9e1f491262de91af28beb2c36b0cc4c49:reference/streambuf/basic_streambuf/showmanyc.md</id>
      <updated>2025-08-31T21:46:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/streambuf/basic_streambuf/showmanyc.md b/reference/streambuf/basic_streambuf/showmanyc.md
index 67000accf..9cfdc7ee1 100644
--- a/reference/streambuf/basic_streambuf/showmanyc.md
+++ b/reference/streambuf/basic_streambuf/showmanyc.md
@@ -49,8 +49,8 @@ public:
 int main() {
     dummy_buf buf{};
     std::cout &amp;lt;&amp;lt; buf.in_avail() &amp;lt;&amp;lt; std::endl;  // 残2文字
-    buf.sbumpc();  //　1文字進める
-    buf.sbumpc();  //　1文字進める
+    buf.sbumpc();  // 1文字進める
+    buf.sbumpc();  // 1文字進める
     std::cout &amp;lt;&amp;lt; buf.in_avail() &amp;lt;&amp;lt; std::endl;  // 残0文字。in_avail()からshowmanyc()が呼ばれる
 }
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>swap -- 文章中やコメントの全角スペースを半角スペースに置換</title>
      <link href="https://cpprefjp.github.io/reference/unordered_map/unordered_multimap/swap.html"/>
      <id>b78f6ab9e1f491262de91af28beb2c36b0cc4c49:reference/unordered_map/unordered_multimap/swap.md</id>
      <updated>2025-08-31T21:46:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_map/unordered_multimap/swap.md b/reference/unordered_map/unordered_multimap/swap.md
index 25502c954..e34e8782a 100644
--- a/reference/unordered_map/unordered_multimap/swap.md
+++ b/reference/unordered_map/unordered_multimap/swap.md
@@ -36,7 +36,7 @@ void swap(unordered_multimap&amp;amp; x)
 
 
 ## 例外
-コンテナの `key_equal` と　`hasher` のオブジェクト（それぞれ [`key_eq`](key_eq.md)`()` と [`hash_function`](hash_function.md)`()` が返すオブジェクト）の [`swap`](/reference/utility/swap.md)`()` が例外を投げなければ、例外を投げない。
+コンテナの `key_equal` と `hasher` のオブジェクト（それぞれ [`key_eq`](key_eq.md)`()` と [`hash_function`](hash_function.md)`()` が返すオブジェクト）の [`swap`](/reference/utility/swap.md)`()` が例外を投げなければ、例外を投げない。
 
 
 ## 計算量
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>swap -- 文章中やコメントの全角スペースを半角スペースに置換</title>
      <link href="https://cpprefjp.github.io/reference/unordered_set/unordered_multiset/swap.html"/>
      <id>b78f6ab9e1f491262de91af28beb2c36b0cc4c49:reference/unordered_set/unordered_multiset/swap.md</id>
      <updated>2025-08-31T21:46:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_set/unordered_multiset/swap.md b/reference/unordered_set/unordered_multiset/swap.md
index 7c0d78c93..a3343d264 100644
--- a/reference/unordered_set/unordered_multiset/swap.md
+++ b/reference/unordered_set/unordered_multiset/swap.md
@@ -36,7 +36,7 @@ void swap(unordered_multiset&amp;amp; x)
 
 
 ## 例外
-コンテナの `key_equal` と　`hasher` のオブジェクト（それぞれ [`key_eq`](key_eq.md)`()` と [`hash_function`](hash_function.md)`()` が返すオブジェクト）の [`swap`](/reference/utility/swap.md)`()` が例外を投げなければ、例外を投げない。
+コンテナの `key_equal` と `hasher` のオブジェクト（それぞれ [`key_eq`](key_eq.md)`()` と [`hash_function`](hash_function.md)`()` が返すオブジェクト）の [`swap`](/reference/utility/swap.md)`()` が例外を投げなければ、例外を投げない。
 
 
 ## 計算量
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>swap -- 文章中やコメントの全角スペースを半角スペースに置換</title>
      <link href="https://cpprefjp.github.io/reference/unordered_set/unordered_set/swap.html"/>
      <id>b78f6ab9e1f491262de91af28beb2c36b0cc4c49:reference/unordered_set/unordered_set/swap.md</id>
      <updated>2025-08-31T21:46:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_set/unordered_set/swap.md b/reference/unordered_set/unordered_set/swap.md
index b1f0a38d3..828948859 100644
--- a/reference/unordered_set/unordered_set/swap.md
+++ b/reference/unordered_set/unordered_set/swap.md
@@ -36,7 +36,7 @@ void swap(unordered_set&amp;amp; x)
 
 
 ## 例外
-コンテナの `key_equal` と　`hasher` のオブジェクト（それぞれ [`key_eq`](key_eq.md)`()` と [`hash_function`](hash_function.md)`()` が返すオブジェクト）の [`swap`](/reference/utility/swap.md)`()` が例外を投げなければ、例外を投げない。
+コンテナの `key_equal` と `hasher` のオブジェクト（それぞれ [`key_eq`](key_eq.md)`()` と [`hash_function`](hash_function.md)`()` が返すオブジェクト）の [`swap`](/reference/utility/swap.md)`()` が例外を投げなければ、例外を投げない。
 
 
 ## 計算量
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>let_value -- コード中の全角スペースを修正</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/let_value.html"/>
      <id>d5e5ead4e5d1f3cf958c4d472adb5f7dedc1d6cb:reference/execution/execution/let_value.md</id>
      <updated>2025-08-31T21:40:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/let_value.md b/reference/execution/execution/let_value.md
index 04eb86aa8..5582e4a11 100644
--- a/reference/execution/execution/let_value.md
+++ b/reference/execution/execution/let_value.md
@@ -134,7 +134,7 @@ namespace std::execution {
 using LetFn = remove_cvref_t&amp;lt;data-type&amp;lt;Sndr&amp;gt;&amp;gt;;
 auto cs = get_completion_signatures&amp;lt;child-type&amp;lt;Sndr&amp;gt;, FWD-ENV-T(Env)...&amp;gt;();
 auto fn = []&amp;lt;class... Ts&amp;gt;(decayed-typeof&amp;lt;set-cpo&amp;gt;(*)(Ts...)) {
-  if constexpr (!is-valid-let-sender) 　// see below
+  if constexpr (!is-valid-let-sender) // see below
     throw unspecified-exception();
 };
 cs.for-each(overload-set(fn, [](auto){}));
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>parallel_scheduler -- コード中の全角スペースを修正</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/parallel_scheduler.html"/>
      <id>d5e5ead4e5d1f3cf958c4d472adb5f7dedc1d6cb:reference/execution/execution/parallel_scheduler.md</id>
      <updated>2025-08-31T21:40:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/parallel_scheduler.md b/reference/execution/execution/parallel_scheduler.md
index 47dc63b2a..b6f7f2361 100644
--- a/reference/execution/execution/parallel_scheduler.md
+++ b/reference/execution/execution/parallel_scheduler.md
@@ -84,7 +84,7 @@ namespace ex = std::execution;
 
 int main()
 {
-　ex::scheduler auto sch = ex::get_parallel_scheduler();
+  ex::scheduler auto sch = ex::get_parallel_scheduler();
   static_assert(std::same_as&amp;lt;decltype(sch), ex::parallel_scheduler&amp;gt;);
 }
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>when_all -- コード中の全角スペースを修正</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/when_all.html"/>
      <id>d5e5ead4e5d1f3cf958c4d472adb5f7dedc1d6cb:reference/execution/execution/when_all.md</id>
      <updated>2025-08-31T21:40:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/when_all.md b/reference/execution/execution/when_all.md
index 77723717c..d61223b37 100644
--- a/reference/execution/execution/when_all.md
+++ b/reference/execution/execution/when_all.md
@@ -368,7 +368,7 @@ int main()
   // snd1,snd2両方の完了を待機するSender
   ex::sender auto sndr = ex::when_all(snd1, snd2);
 
-　auto result = std::this_thread::sync_wait(sndr);
+  auto result = std::this_thread::sync_wait(sndr);
   // result := optional&amp;lt;tuple&amp;lt;string,int,char&amp;gt;&amp;gt;型
   std::println(&amp;#34;result={}&amp;#34;, result.value());
 }
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>find_end -- 対応しない丸カッコを修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_find_end.html"/>
      <id>66b00196a36570e03c49c65359ada7fb1ff60599:reference/algorithm/ranges_find_end.md</id>
      <updated>2025-08-31T21:36:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_find_end.md b/reference/algorithm/ranges_find_end.md
index ef0bc69de..fb9caa812 100644
--- a/reference/algorithm/ranges_find_end.md
+++ b/reference/algorithm/ranges_find_end.md
@@ -46,7 +46,7 @@ namespace std::ranges {
 
 
 ## 戻り値
-- (1): `[first1,last1 - (last2 - first2))` 内のイテレータ `i` があるとき、0 以上 `last2 - first2` 未満の全ての整数 `n` について、それぞれ `*(i + n) == *(first2 + n)` もしくは `invoke(pred, invoke(proj1, *(i + n)), invoke(proj2, *(first2 + n)))) != false` であるようなサブシーケンスを探し、見つかった **最後の** サブシーケンス`{i, i + (i == last1 ? 0 : last2 - first2)}`を返す。そのようなイテレータが見つからない、もしくは `[first2,last2)` が空である場合は `{last1, last1}` を返す。
+- (1): `[first1,last1 - (last2 - first2))` 内のイテレータ `i` があるとき、0 以上 `last2 - first2` 未満の全ての整数 `n` について、それぞれ `*(i + n) == *(first2 + n)` もしくは `invoke(pred, invoke(proj1, *(i + n)), invoke(proj2, *(first2 + n))) != false` であるようなサブシーケンスを探し、見つかった **最後の** サブシーケンス`{i, i + (i == last1 ? 0 : last2 - first2)}`を返す。そのようなイテレータが見つからない、もしくは `[first2,last2)` が空である場合は `{last1, last1}` を返す。
 - (2): `first1 = begin(r1)`, `last1 = end(r1)`, `first2 = begin(r2)`, `last2 = end(r2)`の下で(1)と等しい。
 
 ## 計算量
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>remove_copy -- 対応しない丸カッコを修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_remove_copy.html"/>
      <id>66b00196a36570e03c49c65359ada7fb1ff60599:reference/algorithm/ranges_remove_copy.md</id>
      <updated>2025-08-31T21:36:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_remove_copy.md b/reference/algorithm/ranges_remove_copy.md
index 5766aa8f0..68e13f9ee 100644
--- a/reference/algorithm/ranges_remove_copy.md
+++ b/reference/algorithm/ranges_remove_copy.md
@@ -85,7 +85,7 @@ namespace std::ranges {
 - (2): Rangeを直接指定する
 
 ## 事前条件
-- `[first,last)` と `[result,result + (last - first)` は重なってはならない。
+- `[first,last)` と `[result,result + (last - first))` は重なってはならない。
 
 ## 効果
 `[first,last)` 内にあるイテレータ `i` について、[`invoke`](/reference/functional/invoke.md)`(proj, *i) == value` でない要素を `result` へコピーする
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>remove_copy_if -- 対応しない丸カッコを修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_remove_copy_if.html"/>
      <id>66b00196a36570e03c49c65359ada7fb1ff60599:reference/algorithm/ranges_remove_copy_if.md</id>
      <updated>2025-08-31T21:36:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_remove_copy_if.md b/reference/algorithm/ranges_remove_copy_if.md
index 810f918c2..2f0c10842 100644
--- a/reference/algorithm/ranges_remove_copy_if.md
+++ b/reference/algorithm/ranges_remove_copy_if.md
@@ -43,7 +43,7 @@ namespace std::ranges {
 - (2): Rangeを直接指定する
 
 ## 事前条件
-- `[first,last)` と `[result,result + (last - first)` は重なってはならない。
+- `[first,last)` と `[result,result + (last - first))` は重なってはならない。
 
 
 ## 効果
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>remove_copy -- 対応しない丸カッコを修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/remove_copy.html"/>
      <id>66b00196a36570e03c49c65359ada7fb1ff60599:reference/algorithm/remove_copy.md</id>
      <updated>2025-08-31T21:36:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/remove_copy.md b/reference/algorithm/remove_copy.md
index a7d0807a7..0d68759f1 100644
--- a/reference/algorithm/remove_copy.md
+++ b/reference/algorithm/remove_copy.md
@@ -62,7 +62,7 @@ namespace std {
 
 
 ## 事前条件
-- `[first,last)` と `[result,result + (last - first)` は重なってはならない。
+- `[first,last)` と `[result,result + (last - first))` は重なってはならない。
 
 
 ## 効果
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>remove_copy_if -- 対応しない丸カッコを修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/remove_copy_if.html"/>
      <id>66b00196a36570e03c49c65359ada7fb1ff60599:reference/algorithm/remove_copy_if.md</id>
      <updated>2025-08-31T21:36:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/remove_copy_if.md b/reference/algorithm/remove_copy_if.md
index aafd67fa6..02d1c216b 100644
--- a/reference/algorithm/remove_copy_if.md
+++ b/reference/algorithm/remove_copy_if.md
@@ -39,7 +39,7 @@ namespace std {
 
 
 ## 事前条件
-- `[first,last)` と `[result,result + (last - first)` は重なってはならない
+- `[first,last)` と `[result,result + (last - first))` は重なってはならない
 
 
 ## 効果
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>assert -- 対応しない丸カッコを修正</title>
      <link href="https://cpprefjp.github.io/reference/cassert/assert.html"/>
      <id>66b00196a36570e03c49c65359ada7fb1ff60599:reference/cassert/assert.md</id>
      <updated>2025-08-31T21:36:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cassert/assert.md b/reference/cassert/assert.md
index 0971cf000..edb1e9195 100644
--- a/reference/cassert/assert.md
+++ b/reference/cassert/assert.md
@@ -30,7 +30,7 @@
     - C++03 : パラメータの式を評価し、
     - C++26 : 可変引数パラメータ`__VA_ARGS__`を`bool`に変換し、
     - 真に評価された場合は、なにもしない
-    - そうでない場合（`0`と等しい場合）、式をテキスト化したもの、（[`std::source_location`](/reference/source_location/source_location.md)`::`[`current()`](/reference/source_location/source_location/current.md)で取得できるような) ソースファイル名、行番号、関数名を標準エラー出力に処理系定義の書式で書き込み、[`abort()`](/reference/cstdlib/abort.md)関数を呼び出してプログラムを異常終了させる
+    - そうでない場合（`0`と等しい場合）、式をテキスト化したもの、（[`std::source_location`](/reference/source_location/source_location.md)`::`[`current()`](/reference/source_location/source_location/current.md)で取得できるような）ソースファイル名、行番号、関数名を標準エラー出力に処理系定義の書式で書き込み、[`abort()`](/reference/cstdlib/abort.md)関数を呼び出してプログラムを異常終了させる
 - 無効な場合:
     - パラメータの式は評価はされず、なにもしない
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>format -- 対応しない丸カッコを修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/format.html"/>
      <id>66b00196a36570e03c49c65359ada7fb1ff60599:reference/chrono/format.md</id>
      <updated>2025-08-31T21:36:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/format.md b/reference/chrono/format.md
index afb745343..a630dc839 100644
--- a/reference/chrono/format.md
+++ b/reference/chrono/format.md
@@ -45,7 +45,7 @@ chronoライブラリではこれに加え、たとえばデフォルトでは
 | `%b` | ロケール依存の月の略称。&amp;lt;br/&amp;gt; 値に有効な月が含まれていない場合、[`std::format_error`](/reference/format/format_error.md)例外を送出する | `&amp;#34;Apr&amp;#34;`, `&amp;#34;4月&amp;#34;` |
 | `%B` | ロケール依存の月の完全名。&amp;lt;br/&amp;gt; 値に有効な月が含まれていない場合、[`std::format_error`](/reference/format/format_error.md)例外を送出する | `&amp;#34;April&amp;#34;`, `&amp;#34;4月&amp;#34;` |
 | `%c` | ロケール依存の日付・時間の表現。改良コマンド`%Ec`を指定すると、異なる表現を出力する | `&amp;#34;Fri Apr 24 17:14:44 2020&amp;#34;`&amp;lt;br/&amp;gt; `&amp;#34;2020年04月24日 17時14分44秒&amp;#34;` |
-| `%C` | 100で切り下げ除算した年 (世紀)。結果が10進数で1桁の場合、先頭に`0`がつく。改良コマンド`%EC`を指定すると、ロケール依存の世紀の異なる表現を出力する | 2020年では`&amp;#34;20&amp;#34;`) |
+| `%C` | 100で切り下げ除算した年 (世紀)。結果が10進数で1桁の場合、先頭に`0`がつく。改良コマンド`%EC`を指定すると、ロケール依存の世紀の異なる表現を出力する | 2020年では`&amp;#34;20&amp;#34;` |
 | `%d` | 10進数での月の日。結果が10進数で1桁の場合、先頭に`0`がつく。改良コマンド`%Od`を指定すると、ロケール依存の異なる表現を出力する | `&amp;#34;24&amp;#34;` |
 | `%D` | `%m/%d/%y`と等価 | `&amp;#34;04/24/20&amp;#34;` |
 | `%e` | 10進数での月の日。結果が10進数で1桁の場合、先頭にスペースがつく。改良コマンド`%Oe`を指定すると、ロケール依存の異なる表現を出力する | `&amp;#34; 1&amp;#34;` |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>system_clock -- 対応しない丸カッコを修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/system_clock.html"/>
      <id>66b00196a36570e03c49c65359ada7fb1ff60599:reference/chrono/system_clock.md</id>
      <updated>2025-08-31T21:36:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/system_clock.md b/reference/chrono/system_clock.md
index 5cd997425..ec323b9c0 100644
--- a/reference/chrono/system_clock.md
+++ b/reference/chrono/system_clock.md
@@ -22,8 +22,8 @@ namespace chrono {
 
 `system_clock`のエポックは、以下である：
 
-- C++17 以前の場合、`system_clock` のエポックがどの時間を指しているかは未規定だが、ほとんどの処理系は UNIX 時間（1970年1月1日0時0分0秒)を指している
-- C++20 以降の場合、`system_clock` のエポックは必ず UNIX 時間（1970年1月1日0時0分0秒)を指す
+- C++17 以前の場合、`system_clock` のエポックがどの時間を指しているかは未規定だが、ほとんどの処理系は UNIX 時間（1970年1月1日0時0分0秒）を指している
+- C++20 以降の場合、`system_clock` のエポックは必ず UNIX 時間（1970年1月1日0時0分0秒）を指す
 
 
 ### うるう秒の扱い
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>beta -- 対応しない丸カッコを修正</title>
      <link href="https://cpprefjp.github.io/reference/cmath/beta.html"/>
      <id>66b00196a36570e03c49c65359ada7fb1ff60599:reference/cmath/beta.md</id>
      <updated>2025-08-31T21:36:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/beta.md b/reference/cmath/beta.md
index 08b495321..ce97c597d 100644
--- a/reference/cmath/beta.md
+++ b/reference/cmath/beta.md
@@ -91,7 +91,7 @@ beta(2, 4)      = 0.05
 ### 備考
 #### GCC (libstdc++)
 GCC 7.1.0–8.0.0 では `beta` は [`exp`](exp.md) と [`lgamma`](lgamma.md) を用いて
-$ |\mathrm{B}(x, y)| = \exp(\ln |\Gamma(x) \Gamma(y) / \Gamma(x + y)|)) $
+$ |\mathrm{B}(x, y)| = \exp(\ln |\Gamma(x) \Gamma(y) / \Gamma(x + y)|) $
 を計算する。
 `x &amp;lt; 0 || y &amp;lt; 0` でも定義域エラーを報告せずに値を返すが、戻り値は必ず正になる。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>strong_ordering -- 対応しない丸カッコを修正</title>
      <link href="https://cpprefjp.github.io/reference/compare/strong_ordering.html"/>
      <id>66b00196a36570e03c49c65359ada7fb1ff60599:reference/compare/strong_ordering.md</id>
      <updated>2025-08-31T21:36:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/compare/strong_ordering.md b/reference/compare/strong_ordering.md
index f0a37196d..ec99dda78 100644
--- a/reference/compare/strong_ordering.md
+++ b/reference/compare/strong_ordering.md
@@ -22,7 +22,7 @@ namespace std {
   //静的メンバ定数の定義（初期化している値は説明のためのもの）
   inline constexpr strong_ordering strong_ordering::less(-1);
   inline constexpr strong_ordering strong_ordering::equal(0);
-  inline constexpr strong_ordering strong_ordering::equivalent(0));
+  inline constexpr strong_ordering strong_ordering::equivalent(0);
   inline constexpr strong_ordering strong_ordering::greater(1);
 }
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>cstdint -- 対応しない丸カッコを修正</title>
      <link href="https://cpprefjp.github.io/reference/cstdint.html"/>
      <id>66b00196a36570e03c49c65359ada7fb1ff60599:reference/cstdint.md</id>
      <updated>2025-08-31T21:36:04+09:00</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;cstdint&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;cstdint&lt;/span&gt;&lt;span class=&#34;cpp cpp11&#34; title=&#34;C++11で追加&#34;&gt;(C++11)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;cstdint&amp;gt;&lt;/code&gt;ヘッダでは、ビット数が規定された整数型の別名、およびマクロを提供する。これらの機能は、&lt;code&gt;std&lt;/code&gt;名前空間に属することを除いてC言語の標準ライブラリ&lt;code&gt;&amp;lt;stdint.h&amp;gt;&lt;/code&gt;ヘッダと同じである。&lt;/p&gt;
&lt;p&gt;本ヘッダはフリースタンディング環境でも提供される。&lt;/p&gt;
&lt;h2&gt;符号付き整数型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;型&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int8_t.html&#34;&gt;int8_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;8ビット幅の符号付き整数(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int16_t.html&#34;&gt;int16_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;16ビット幅の符号付き整数(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int32_t.html&#34;&gt;int32_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;32ビット幅の符号付き整数(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int64_t.html&#34;&gt;int64_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;64ビット幅の符号付き整数(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int_fast8_t.html&#34;&gt;int_fast8_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;少なくても8ビット幅を持ち、演算が高速な符号付き整数&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int_fast16_t.html&#34;&gt;int_fast16_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;少なくても16ビット幅を持ち、演算が高速な符号付き整数&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int_fast32_t.html&#34;&gt;int_fast32_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;少なくても32ビット幅を持ち、演算が高速な符号付き整数&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int_fast64_t.html&#34;&gt;int_fast64_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;少なくても64ビット幅を持ち、演算が高速な符号付き整数&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int_least8_t.html&#34;&gt;int_least8_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;少なくても8ビット幅を持つ、最小の符号付き整数&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int_least16_t.html&#34;&gt;int_least16_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;少なくても16ビット幅を持つ、最小の符号付き整数&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int_least32_t.html&#34;&gt;int_least32_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;少なくても32ビット幅を持つ、最小の符号付き整数&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int_least64_t.html&#34;&gt;int_least64_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;少なくても64ビット幅を持つ、最小の符号付き整数&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/intmax_t.html&#34;&gt;intmax_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;最も大きい符号付き整数型&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/intptr_t.html&#34;&gt;intptr_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ポインタサイズの符号付き整数型(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;符号なし整数型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;型&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/uint8_t.html&#34;&gt;uint8_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;8ビット幅の符号なし整数(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/uint16_t.html&#34;&gt;uint16_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;16ビット幅の符号なし整数(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/uint32_t.html&#34;&gt;uint32_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;32ビット幅の符号なし整数(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/uint64_t.html&#34;&gt;uint64_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;64ビット幅の符号なし整数(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/uint_fast8_t.html&#34;&gt;uint_fast8_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;少なくても8ビット幅を持ち、演算が高速な符号なし整数&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/uint_fast16_t.html&#34;&gt;uint_fast16_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;少なくても16ビット幅を持ち、演算が高速な符号なし整数&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/uint_fast32_t.html&#34;&gt;uint_fast32_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;少なくても32ビット幅を持ち、演算が高速な符号なし整数&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/uint_fast64_t.html&#34;&gt;uint_fast64_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;少なくても64ビット幅を持ち、演算が高速な符号なし整数&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/uint_least8_t.html&#34;&gt;uint_least8_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;少なくても8ビット幅を持つ、最小の符号なし整数&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/uint_least16_t.html&#34;&gt;uint_least16_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;少なくても16ビット幅を持つ、最小の符号なし整数&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/uint_least32_t.html&#34;&gt;uint_least32_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;少なくても32ビット幅を持つ、最小の符号なし整数&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/uint_least64_t.html&#34;&gt;uint_least64_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;少なくても64ビット幅を持つ、最小の符号なし整数&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/uintmax_t.html&#34;&gt;uintmax_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;最も大きい符号なし整数型&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/uintptr_t.html&#34;&gt;uintptr_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ポインタサイズの符号なし整数型(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;以下のマクロは、整数型の限界値を表す。&lt;/p&gt;
&lt;h2&gt;符号付き整数型用の限界値マクロ&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;マクロ&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int8_min.html&#34;&gt;INT8_MIN&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int8_t&lt;/code&gt;の最小値(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int8_max.html&#34;&gt;INT8_MAX&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int8_t&lt;/code&gt;の最大値(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int16_min.html&#34;&gt;INT16_MIN&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int16_t&lt;/code&gt;の最小値(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int16_max.html&#34;&gt;INT16_MAX&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int16_t&lt;/code&gt;の最大値(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int32_min.html&#34;&gt;INT32_MIN&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int32_t&lt;/code&gt;の最小値(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int32_max.html&#34;&gt;INT32_MAX&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int32_t&lt;/code&gt;の最大値(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int64_min.html&#34;&gt;INT64_MIN&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int64_t&lt;/code&gt;の最小値(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int64_max.html&#34;&gt;INT64_MAX&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int64_t&lt;/code&gt;の最大値(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int_fast8_min.html&#34;&gt;INT_FAST8_MIN&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int_fast8_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int_fast8_max.html&#34;&gt;INT_FAST8_MAX&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int_fast8_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int_fast16_min.html&#34;&gt;INT_FAST16_MIN&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int_fast16_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int_fast16_max.html&#34;&gt;INT_FAST16_MAX&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int_fast16_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int_fast32_min.html&#34;&gt;INT_FAST32_MIN&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int_fast32_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int_fast32_max.html&#34;&gt;INT_FAST32_MAX&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int_fast32_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int_fast64_min.html&#34;&gt;INT_FAST64_MIN&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int_fast64_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int_fast64_max.html&#34;&gt;INT_FAST64_MAX&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int_fast64_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int_least8_min.html&#34;&gt;INT_LEAST8_MIN&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int_least8_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int_least8_max.html&#34;&gt;INT_LEAST8_MAX&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int_least8_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int_least16_min.html&#34;&gt;INT_LEAST16_MIN&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int_least16_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int_least16_max.html&#34;&gt;INT_LEAST16_MAX&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int_least16_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int_least32_min.html&#34;&gt;INT_LEAST32_MIN&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int_least32_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int_least32_max.html&#34;&gt;INT_LEAST32_MAX&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int_least32_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int_least64_min.html&#34;&gt;INT_LEAST64_MIN&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int_least64_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/int_least64_max.html&#34;&gt;INT_LEAST64_MAX&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int_least64_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/intmax_min.html&#34;&gt;INTMAX_MIN&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;intmax_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/intmax_max.html&#34;&gt;INTMAX_MAX&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;intmax_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/intptr_min.html&#34;&gt;INTPTR_MIN&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;intptr_t&lt;/code&gt;の最小値(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/intptr_max.html&#34;&gt;INTPTR_MAX&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;intptr_t&lt;/code&gt;の最大値(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/ptrdiff_min.html&#34;&gt;PTRDIFF_MIN&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstddef/ptrdiff_t.html&#34;&gt;ptrdiff_t&lt;/a&gt;&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/ptrdiff_max.html&#34;&gt;PTRDIFF_MAX&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstddef/ptrdiff_t.html&#34;&gt;ptrdiff_t&lt;/a&gt;&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/sig_atomic_min.html&#34;&gt;SIG_ATOMIC_MIN&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;sig_atomic_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/sig_atomic_max.html&#34;&gt;SIG_ATOMIC_MAX&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;sig_atomic_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/wchar_min.html&#34;&gt;WCHAR_MIN&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;wchar_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/wchar_max.html&#34;&gt;WCHAR_MAX&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;wchar_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/wint_min.html&#34;&gt;WINT_MIN&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;wint_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/wint_max.html&#34;&gt;WINT_MAX&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;wint_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;符号なし整数型用の限界値マクロ&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;マクロ&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/uint8_max.html&#34;&gt;UINT8_MAX&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint8_t&lt;/code&gt;の最大値(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/uint16_max.html&#34;&gt;UINT16_MAX&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint16_t&lt;/code&gt;の最大値(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/uint32_max.html&#34;&gt;UINT32_MAX&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint32_t&lt;/code&gt;の最大値(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/uint64_max.html&#34;&gt;UINT64_MAX&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint64_t&lt;/code&gt;の最大値(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/uint_fast8_max.html&#34;&gt;UINT_FAST8_MAX&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint_fast8_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/uint_fast16_max.html&#34;&gt;UINT_FAST16_MAX&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint_fast16_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/uint_fast32_max.html&#34;&gt;UINT_FAST32_MAX&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint_fast32_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/uint_fast64_max.html&#34;&gt;UINT_FAST64_MAX&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint_fast64_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/uint_least8_max.html&#34;&gt;UINT_LEAST8_MAX&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint_least8_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/uint_least16_max.html&#34;&gt;UINT_LEAST16_MAX&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint_least16_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/uint_least32_max.html&#34;&gt;UINT_LEAST32_MAX&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint_least32_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/uint_least64_max.html&#34;&gt;UINT_LEAST64_MAX&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint_least64_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/uintmax_max.html&#34;&gt;UINTMAX_MAX&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uintmax_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/uintptr_max.html&#34;&gt;UINTPTR_MAX&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uintptr_t&lt;/code&gt;の最大値(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdint/size_max.html&#34;&gt;SIZE_MAX&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstddef/size_t.html&#34;&gt;size_t&lt;/a&gt;&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;符号付き整数型用の定数値マクロ&lt;/h2&gt;
&lt;p&gt;以下のマクロは、各整数型の定数値を表す関数マクロである。&lt;br /&gt;
例： &lt;code&gt;int8_t x = INT8_C(1);&lt;/code&gt;  &lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;マクロ&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;INT8_C(n)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;8ビット幅を持つ、符号付き整数型の定数値(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;INT16_C(n)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;16ビット幅を持つ、符号付き整数型の定数値(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;INT32_C(n)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;32ビット幅を持つ、符号付き整数型の定数値(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;INT64_C(n)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;64ビット幅を持つ、符号付き整数型の定数値(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;INTMAX_C(n)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;最も大きい符号付き整数型の定数値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;符号なし整数型用の定数値マクロ&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;マクロ&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UINT8_C(n)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;8ビット幅を持つ、符号なし整数型の定数値(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UINT16_C(n)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;16ビット幅を持つ、符号なし整数型の定数値(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UINT32_C(n)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;32ビット幅を持つ、符号なし整数型の定数値(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UINT64_C(n)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;64ビット幅を持つ、符号なし整数型の定数値(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UINTMAX_C(n)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;最も大きい符号なし整数型の定数値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;備考&lt;/h2&gt;
&lt;h3&gt;&lt;a id=&#34;stdc-macros&#34;&gt;&lt;/a&gt;&lt;code&gt;__STDC_LIMIT_MACROS&lt;/code&gt;, &lt;code&gt;__STDC_CONSTANT_MACROS&lt;/code&gt; マクロについて&lt;/h3&gt;
&lt;p&gt;C99 の 7.18.3 &lt;code&gt;&amp;lt;stdint.h&amp;gt;&lt;/code&gt; についての脚注で、同ヘッダを C++ でコンパイルする場合に限界値マクロ、定数値マクロを得るためにはこれらのマクロを事前に定義する必要があるものとされていた。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Footnote 219, 220: C++ implementations should define these macros only when &lt;code&gt;__STDC_LIMIT_MACROS&lt;/code&gt; is defined before &lt;code&gt;&amp;lt;stdint.h&amp;gt;&lt;/code&gt; is included.&lt;/p&gt;
&lt;p&gt;Footnote 222: C++ implementations should define these macros only when &lt;code&gt;__STDC_CONSTANT_MACROS&lt;/code&gt; is defined before &lt;code&gt;&amp;lt;stdint.h&amp;gt;&lt;/code&gt; is included.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;しかしその後の C 規格改定でこの脚注は削除され、 C11 では触れられていない。 C++11 は（ C++14 も） C99 を参照規格としているが、 &lt;a href=&#34;https://github.com/cplusplus/draft/blob/0b7593f0e716910bab7c1511533b2f9b5a886de1/source/support.tex#L1263&#34; target=&#34;_blank&#34;&gt;18.4.1 [cstdint.syn] p2&lt;/a&gt; に注釈として、これらのマクロは採用されていないことが明記されている。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The macros defined by &lt;code&gt;&amp;lt;cstdint&amp;gt;&lt;/code&gt; are provided unconditionally. In particular, the symbols &lt;code&gt;__STDC_LIMIT_MACROS&lt;/code&gt; and
&lt;code&gt;__STDC_CONSTANT_MACROS&lt;/code&gt; (mentioned in footnotes 219, 220, and 222 in
the C standard) play no role in C++.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;おそらく上記 C99 の脚注のため、 C++ 処理系によってはヘッダ &lt;code&gt;&amp;lt;stdint.h&amp;gt;&lt;/code&gt; および &lt;code&gt;&amp;lt;cstdint&amp;gt;&lt;/code&gt; での限界値マクロ、定数値マクロの提供にこれらマクロの定義が必要となっているかもしれない。（特に C++03 対応の処理系が拡張として C99 由来のこれらヘッダを提供していた場合など。）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;glibc に対するバグ報告（修正は 2013/05/21 ）
  &lt;a href=&#34;https://sourceware.org/bugzilla/show_bug.cgi?id=15366&#34; target=&#34;_blank&#34;&gt;Bug 15366 – Per C11 and C++11, &lt;code&gt;&amp;lt;stdint.h&amp;gt;&lt;/code&gt; should not look at &lt;code&gt;__STDC_LIMIT_MACROS&lt;/code&gt; or &lt;code&gt;__STDC_CONSTANT_MACROS&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/986426/what-do-stdc-limit-macros-and-stdc-constant-macros-mean&#34; target=&#34;_blank&#34;&gt;What do __STDC_LIMIT_MACROS and __STDC_CONSTANT_MACROS mean? - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2004/n1568.htm&#34; target=&#34;_blank&#34;&gt;N1568 Proposed additions to TR-1 to improve compatibility with C99&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2005/n1835.pdf&#34; target=&#34;_blank&#34;&gt;N1835 &lt;code&gt;&amp;lt;stdint.h&amp;gt;&lt;/code&gt; for C++&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sender -- 対応しない丸カッコを修正</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/sender.html"/>
      <id>66b00196a36570e03c49c65359ada7fb1ff60599:reference/execution/execution/sender.md</id>
      <updated>2025-08-31T21:36:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/sender.md b/reference/execution/execution/sender.md
index 12b11c6be..e915cd2c3 100644
--- a/reference/execution/execution/sender.md
+++ b/reference/execution/execution/sender.md
@@ -59,7 +59,7 @@ inline constexpr bool enable_sender = enable-sender&amp;lt;Sndr&amp;gt;;
 ```cpp
 template&amp;lt;class Sndr&amp;gt;
 concept sender =
-  enable_sender&amp;lt;remove_cvref_t&amp;lt;Sndr&amp;gt;&amp;gt;) &amp;amp;&amp;amp;
+  enable_sender&amp;lt;remove_cvref_t&amp;lt;Sndr&amp;gt;&amp;gt; &amp;amp;&amp;amp;
   requires (const remove_cvref_t&amp;lt;Sndr&amp;gt;&amp;amp; sndr) {
     { get_env(sndr) } -&amp;gt; queryable;
   } &amp;amp;&amp;amp;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>not_fn -- 対応しない丸カッコを修正</title>
      <link href="https://cpprefjp.github.io/reference/functional/not_fn.html"/>
      <id>66b00196a36570e03c49c65359ada7fb1ff60599:reference/functional/not_fn.md</id>
      <updated>2025-08-31T21:36:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/functional/not_fn.md b/reference/functional/not_fn.md
index 391149c77..14ed76fd8 100644
--- a/reference/functional/not_fn.md
+++ b/reference/functional/not_fn.md
@@ -75,7 +75,7 @@ private:
 ## 戻り値(C++20)
 結果オブジェクト`g`に対する関数呼び出し式の引数パック`call_args`としたとき
 
-- (1) : `fd`を[`std::forward`](/reference/utility/forward.md)`&amp;lt;F&amp;gt;(f))`で直接非リスト初期化した`FD`型のオブジェクトに対して
+- (1) : `fd`を[`std::forward`](/reference/utility/forward.md)`&amp;lt;F&amp;gt;(f)`で直接非リスト初期化した`FD`型のオブジェクトに対して
     - 関数呼び出し式の結果が`!`[`invoke`](invoke.md)`(fd, call_args...)`に等しい、完全転送呼び出しラッパー(perfect forwarding call wrapper)オブジェクトを返す。
 - (2) :
     - 関数呼び出し式の結果が`!`[`invoke`](invoke.md)`(f, call_args...)`に等しい、状態を持たない完全転送呼び出しラッパー(perfect forwarding call wrapper)オブジェクトを返す。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>generator -- 対応しない丸カッコを修正</title>
      <link href="https://cpprefjp.github.io/reference/generator/generator.html"/>
      <id>66b00196a36570e03c49c65359ada7fb1ff60599:reference/generator/generator.md</id>
      <updated>2025-08-31T21:36:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/generator/generator.md b/reference/generator/generator.md
index 236c8f103..4ba98f5de 100644
--- a/reference/generator/generator.md
+++ b/reference/generator/generator.md
@@ -204,7 +204,7 @@ std::generator&amp;lt;int&amp;gt; ints()
 
 int main()
 {
-  for (int n : ints())) {
+  for (int n : ints()) {
     std::cout &amp;lt;&amp;lt; n &amp;lt;&amp;lt; &amp;#39; &amp;#39;;
   }
 }
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>推論補助 -- 対応しない丸カッコを修正</title>
      <link href="https://cpprefjp.github.io/reference/mdspan/extents/op_deduction_guide.html"/>
      <id>66b00196a36570e03c49c65359ada7fb1ff60599:reference/mdspan/extents/op_deduction_guide.md</id>
      <updated>2025-08-31T21:36:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/mdspan/extents/op_deduction_guide.md b/reference/mdspan/extents/op_deduction_guide.md
index 53ad5c712..1ba83d137 100644
--- a/reference/mdspan/extents/op_deduction_guide.md
+++ b/reference/mdspan/extents/op_deduction_guide.md
@@ -16,7 +16,7 @@ namespace std {
 
 
 ## テンプレートパラメータ制約
-[`is_convertible_v`](/reference/type_traits/is_convertible.md)`&amp;lt;Integrals, size_t&amp;gt; &amp;amp;&amp;amp; ...)`が`true`であること。
+`(`[`is_convertible_v`](/reference/type_traits/is_convertible.md)`&amp;lt;Integrals, size_t&amp;gt; &amp;amp;&amp;amp; ...)`が`true`であること。
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>make_shared -- 対応しない丸カッコを修正</title>
      <link href="https://cpprefjp.github.io/reference/memory/make_shared.html"/>
      <id>66b00196a36570e03c49c65359ada7fb1ff60599:reference/memory/make_shared.md</id>
      <updated>2025-08-31T21:36:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/memory/make_shared.md b/reference/memory/make_shared.md
index 9be943d80..c391ef254 100644
--- a/reference/memory/make_shared.md
+++ b/reference/memory/make_shared.md
@@ -40,7 +40,7 @@ namespace std {
 
 配列タイプのオブジェクトがデフォルトの初期値を持つように指定されている場合、これはオブジェクトの各配列要素がデフォルトの初期値を持つ（値初期化される）ことを意味すると解釈される。
 
-非配列型`U`の（サブ）オブジェクトが、`v`または`U(l ...)`の初期値を持つように指定されている場合(`l...`はコンストラクタ引数のリスト）、`make_shared`は、式`::new (pv) U(v)`または`::new (pv) U(l...)`を使用して、この（サブ）オブジェクトを初期化する。ここで、`pv`の型は`void*`であり、型`U`のオブジェクトを保持するのに適したストレージを指す。
+非配列型`U`の（サブ）オブジェクトが、`v`または`U(l ...)`の初期値を持つように指定されている場合（`l...`はコンストラクタ引数のリスト）、`make_shared`は、式`::new (pv) U(v)`または`::new (pv) U(l...)`を使用して、この（サブ）オブジェクトを初期化する。ここで、`pv`の型は`void*`であり、型`U`のオブジェクトを保持するのに適したストレージを指す。
 
 非配列型`U`の（サブ）オブジェクトがデフォルトの初期値を持つように指定されている場合、この関数は、式 `::new (pv) U()`を使用してこの（サブ）オブジェクトを初期化する。`void*`は型`U`のオブジェクトを保持するのに適したストレージを指す。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>negative_binomial_distribution -- 対応しない丸カッコを修正</title>
      <link href="https://cpprefjp.github.io/reference/random/negative_binomial_distribution.html"/>
      <id>66b00196a36570e03c49c65359ada7fb1ff60599:reference/random/negative_binomial_distribution.md</id>
      <updated>2025-08-31T21:36:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/negative_binomial_distribution.md b/reference/random/negative_binomial_distribution.md
index 6ce54bcde..0157ccc87 100644
--- a/reference/random/negative_binomial_distribution.md
+++ b/reference/random/negative_binomial_distribution.md
@@ -13,7 +13,7 @@ namespace std {
 
 ## 概要
 `negative_binomial_distribution`は、離散確率分布の一種である、負の二項分布を表すクラスである。  
-二項分布([`binomial_distribution`](binomial_distribution.md)が「確率pで成功する事象をt回試行し、成功回数を取得する」のに対し、負の二項分布は「確率pで成功する事象がk回成功するまでに失敗した回数を取得する」ということを行う。  
+二項分布([`binomial_distribution`](binomial_distribution.md))が「確率pで成功する事象をt回試行し、成功回数を取得する」のに対し、負の二項分布は「確率pで成功する事象がk回成功するまでに失敗した回数を取得する」ということを行う。  
 
 
 負の二項分布は、実装によって「k回成功するまでに試行した回数を取得する」ものと、「k回成功するまでに失敗した回数を取得する」もの、2つのバリエーションが存在する。`std::negative_binomial_distribution`クラスは後者である。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>adjacent_view -- 対応しない丸カッコを修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/adjacent_view.html"/>
      <id>66b00196a36570e03c49c65359ada7fb1ff60599:reference/ranges/adjacent_view.md</id>
      <updated>2025-08-31T21:36:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/adjacent_view.md b/reference/ranges/adjacent_view.md
index d9c9591b5..a977bf0cd 100644
--- a/reference/ranges/adjacent_view.md
+++ b/reference/ranges/adjacent_view.md
@@ -43,7 +43,7 @@ namespace std::ranges {
 
 - (2): 式`views::adjacent&amp;lt;N&amp;gt;(E)`の効果は次の通り
     - `N` &amp;gt; 0 のとき、`adjacent_view&amp;lt;`[`views::all_t`](all.md)`&amp;lt;decltype((E))&amp;gt;, N&amp;gt;(E)` と等しい
-    - `N` = 0 のとき、`auto((void)E,` [`views::empty`](empty_view.md)`&amp;lt;`[`tuple`](/reference/tuple/tuple.md)`&amp;lt;&amp;gt;&amp;gt;))` と等しい
+    - `N` = 0 のとき、`auto((void)E,` [`views::empty`](empty_view.md)`&amp;lt;`[`tuple`](/reference/tuple/tuple.md)`&amp;lt;&amp;gt;&amp;gt;)` と等しい
 
 
 ## メンバ関数
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator== -- 対応しない丸カッコを修正</title>
      <link href="https://cpprefjp.github.io/reference/regex/match_results/op_equal.html"/>
      <id>66b00196a36570e03c49c65359ada7fb1ff60599:reference/regex/match_results/op_equal.md</id>
      <updated>2025-08-31T21:36:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/regex/match_results/op_equal.md b/reference/regex/match_results/op_equal.md
index 0183158d8..e116a1913 100644
--- a/reference/regex/match_results/op_equal.md
+++ b/reference/regex/match_results/op_equal.md
@@ -24,7 +24,7 @@ namespace std {
     - `m1.`[`empty`](empty.md)`() &amp;amp;&amp;amp; m2.`[`empty`](empty.md)`()` である。
     - `!m1.`[`empty`](empty.md)`() &amp;amp;&amp;amp; !m2.`[`empty`](empty.md)`()`、かつ、以下の条件をすべて満たす。
         - `m1.`[`prefix`](prefix.md)`() == m2.`[`prefix`](prefix.md)`()`
-        - `m1.`[`size`](size.md)`() == m2.`[`size`](size.md)`() &amp;amp;&amp;amp;` [`equal`](../../algorithm/equal.md)`(m1.`[`begin`](begin.md)`(), m1.`[`end`](end.md)`(), m2.`[`begin`](begin.md)`()`
+        - `m1.`[`size`](size.md)`() == m2.`[`size`](size.md)`() &amp;amp;&amp;amp;` [`equal`](../../algorithm/equal.md)`(m1.`[`begin`](begin.md)`(), m1.`[`end`](end.md)`(), m2.`[`begin`](begin.md)`())`
         - `m1.`[`suffix`](suffix.md)`() == m2.`[`suffix`](suffix.md)`()`
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- 対応しない丸カッコを修正</title>
      <link href="https://cpprefjp.github.io/reference/span/span/op_constructor.html"/>
      <id>66b00196a36570e03c49c65359ada7fb1ff60599:reference/span/span/op_constructor.md</id>
      <updated>2025-08-31T21:36:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/span/span/op_constructor.md b/reference/span/span/op_constructor.md
index 5b084d70e..c4481a62f 100644
--- a/reference/span/span/op_constructor.md
+++ b/reference/span/span/op_constructor.md
@@ -79,7 +79,7 @@ constexpr explicit(extent != dynamic_extent)
         - [`std::is_convertible_v`](/reference/type_traits/is_convertible.md)`&amp;lt;End, size_t&amp;gt;` が `false`であること
 - (4), (5), (6) :
     - `extent ==` [`dynamic_extent`](/reference/span/dynamic_extent.md) `|| N == extent`が`true`であること
-    - [`remove_pointer_t`](/reference/type_traits/remove_pointer.md)`&amp;lt;decltype(`[`data`](/reference/iterator/data.md)`(arr)))&amp;gt;`を型`U`であるとして、
+    - [`remove_pointer_t`](/reference/type_traits/remove_pointer.md)`&amp;lt;decltype(`[`data`](/reference/iterator/data.md)`(arr))&amp;gt;`を型`U`であるとして、
         - [`is_convertible_v`](/reference/type_traits/is_convertible.md)`&amp;lt;U(*)[], element_type(*)[]&amp;gt;`が`true`であること (この制約の意図は、配列の要素型から`element_type`へ、修飾の変換のみを許可すること)
 - (7) :
     - 型 `U` を [`std::remove_reference_t`](/reference/type_traits/remove_reference.md)`&amp;lt;`[`std::iter_reference_t`](/reference/iterator/iter_reference_t.md)`&amp;lt;R&amp;gt;&amp;gt;`とするとき
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>invoke_result -- 対応しない丸カッコを修正</title>
      <link href="https://cpprefjp.github.io/reference/type_traits/invoke_result.html"/>
      <id>66b00196a36570e03c49c65359ada7fb1ff60599:reference/type_traits/invoke_result.md</id>
      <updated>2025-08-31T21:36:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/type_traits/invoke_result.md b/reference/type_traits/invoke_result.md
index f8ee93eff..f68818925 100644
--- a/reference/type_traits/invoke_result.md
+++ b/reference/type_traits/invoke_result.md
@@ -30,7 +30,7 @@ namespace std {
 メンバ型`type`が定義される場合、以下と同じ型となる：
 
 ```cpp
-decltype(std::invoke(std::declval&amp;lt;F&amp;gt;(), std::declval&amp;lt;ArgsTypes&amp;gt;()...)
+decltype(std::invoke(std::declval&amp;lt;F&amp;gt;(), std::declval&amp;lt;ArgsTypes&amp;gt;()...))
 ```
 
 ## 備考
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>page_title (1行目の見出し1はページのタイトルです。修飾なしで記載してください) -- 対応しない丸カッコを修正</title>
      <link href="https://cpprefjp.github.io/start_editing/comparison_operator_template_page.html"/>
      <id>66b00196a36570e03c49c65359ada7fb1ff60599:start_editing/comparison_operator_template_page.md</id>
      <updated>2025-08-31T21:36:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/start_editing/comparison_operator_template_page.md b/start_editing/comparison_operator_template_page.md
index 8a134c590..112993dbd 100644
--- a/start_editing/comparison_operator_template_page.md
+++ b/start_editing/comparison_operator_template_page.md
@@ -1,4 +1,4 @@
-# page_title ((1行目の見出し1はページのタイトルです。修飾なしで記載してください)
+# page_title (1行目の見出し1はページのタイトルです。修飾なしで記載してください)
 
 ([cpprefjpを編集するには](/start_editing.md) および [cpprefjpでのMarkdown記法の制限と拡張](markdown_cpprefjp.md) を先に読んで下さい。)
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>page_title (1行目の見出し1はページのタイトルです。修飾なしで記載してください) -- 対応しない丸カッコを修正</title>
      <link href="https://cpprefjp.github.io/start_editing/concept_template_page.html"/>
      <id>66b00196a36570e03c49c65359ada7fb1ff60599:start_editing/concept_template_page.md</id>
      <updated>2025-08-31T21:36:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/start_editing/concept_template_page.md b/start_editing/concept_template_page.md
index baca27922..7a21b8089 100644
--- a/start_editing/concept_template_page.md
+++ b/start_editing/concept_template_page.md
@@ -1,4 +1,4 @@
-# page_title ((1行目の見出し1はページのタイトルです。修飾なしで記載してください)
+# page_title (1行目の見出し1はページのタイトルです。修飾なしで記載してください)
 
 ([cpprefjpを編集するには](/start_editing.md) および [cpprefjpでのMarkdown記法の制限と拡張](markdown_cpprefjp.md) を先に読んで下さい。)
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>page_title (1行目の見出し1はページのタイトルです。修飾なしで記載してください) -- 対応しない丸カッコを修正</title>
      <link href="https://cpprefjp.github.io/start_editing/cpo_template_page.html"/>
      <id>66b00196a36570e03c49c65359ada7fb1ff60599:start_editing/cpo_template_page.md</id>
      <updated>2025-08-31T21:36:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/start_editing/cpo_template_page.md b/start_editing/cpo_template_page.md
index 50f2eac09..b2cef3b05 100644
--- a/start_editing/cpo_template_page.md
+++ b/start_editing/cpo_template_page.md
@@ -1,4 +1,4 @@
-# page_title ((1行目の見出し1はページのタイトルです。修飾なしで記載してください)
+# page_title (1行目の見出し1はページのタイトルです。修飾なしで記載してください)
 
 ([cpprefjpを編集するには](/start_editing.md) および [cpprefjpでのMarkdown記法の制限と拡張](markdown_cpprefjp.md) を先に読んで下さい。)
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>page_title (1行目の見出し1はページのタイトルです。修飾なしで記載してください) -- 対応しない丸カッコを修正</title>
      <link href="https://cpprefjp.github.io/start_editing/function_template_page.html"/>
      <id>66b00196a36570e03c49c65359ada7fb1ff60599:start_editing/function_template_page.md</id>
      <updated>2025-08-31T21:36:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/start_editing/function_template_page.md b/start_editing/function_template_page.md
index 6d08557e8..5f4de1fea 100644
--- a/start_editing/function_template_page.md
+++ b/start_editing/function_template_page.md
@@ -1,4 +1,4 @@
-# page_title ((1行目の見出し1はページのタイトルです。修飾なしで記載してください)
+# page_title (1行目の見出し1はページのタイトルです。修飾なしで記載してください)
 
 ([cpprefjpを編集するには](/start_editing.md) および [cpprefjpでのMarkdown記法の制限と拡張](markdown_cpprefjp.md) を先に読んで下さい。)
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>page_title (1行目の見出し1はページのタイトルです。修飾なしで記載してください) -- 対応しない丸カッコを修正</title>
      <link href="https://cpprefjp.github.io/start_editing/header_template_page.html"/>
      <id>66b00196a36570e03c49c65359ada7fb1ff60599:start_editing/header_template_page.md</id>
      <updated>2025-08-31T21:36:04+09:00</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;header_name&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;page_title (1行目の見出し1はページのタイトルです。修飾なしで記載してください)&lt;/span&gt;&lt;span class=&#34;cpp cpp17&#34; title=&#34;C++17で追加&#34;&gt;(C++17)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;(&lt;a href=&#34;../start_editing.html&#34;&gt;cpprefjpを編集するには&lt;/a&gt; および &lt;a href=&#34;markdown_cpprefjp.html&#34;&gt;cpprefjpでのMarkdown記法の制限と拡張&lt;/a&gt; を先に読んで下さい。)&lt;/p&gt;
&lt;p&gt;(
  サンプルコードは文章中のどの部分で書いても大丈夫です。閲覧者の理解を助けるために必要だと感じたところで入れてください。
  その際拡張構文である&lt;code&gt;example&lt;/code&gt;タグをルールに従って付け、コンパイル・実行可能にすることを検討してください。
)&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;(ここには、このヘッダファイル(ライブラリ)の概要を記述します。必須事項です。)&lt;/p&gt;
&lt;p&gt;(必要な項目を省略する場合には、「(執筆中)」と書いておいてください。)&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: 1.9 &lt;span aria-label=&#34;検証済&#34; role=&#34;img&#34; title=&#34;検証済&#34;&gt;✅&lt;/span&gt;, 2.9 &lt;span aria-label=&#34;検証済&#34; role=&#34;img&#34; title=&#34;検証済&#34;&gt;✅&lt;/span&gt;, 3.0 &lt;span aria-label=&#34;検証済&#34; role=&#34;img&#34; title=&#34;検証済&#34;&gt;✅&lt;/span&gt;, 3.1 &lt;span aria-label=&#34;検証済&#34; role=&#34;img&#34; title=&#34;検証済&#34;&gt;✅&lt;/span&gt;, 3.2 &lt;span aria-label=&#34;検証済&#34; role=&#34;img&#34; title=&#34;検証済&#34;&gt;✅&lt;/span&gt;, 3.3 &lt;span aria-label=&#34;検証済&#34; role=&#34;img&#34; title=&#34;検証済&#34;&gt;✅&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: 4.3.6 &lt;span aria-label=&#34;検証済&#34; role=&#34;img&#34; title=&#34;検証済&#34;&gt;✅&lt;/span&gt;, 4.4.7 &lt;span aria-label=&#34;検証済&#34; role=&#34;img&#34; title=&#34;検証済&#34;&gt;✅&lt;/span&gt;, 4.5.3 &lt;span aria-label=&#34;検証済&#34; role=&#34;img&#34; title=&#34;検証済&#34;&gt;✅&lt;/span&gt;, 4.6.3 &lt;span aria-label=&#34;検証済&#34; role=&#34;img&#34; title=&#34;検証済&#34;&gt;✅&lt;/span&gt;, 4.7.2 &lt;span aria-label=&#34;検証済&#34; role=&#34;img&#34; title=&#34;検証済&#34;&gt;✅&lt;/span&gt;, 4.8.1 &lt;span aria-label=&#34;検証済&#34; role=&#34;img&#34; title=&#34;検証済&#34;&gt;✅&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: 10.1 &lt;span aria-label=&#34;検証済&#34; role=&#34;img&#34; title=&#34;検証済&#34;&gt;✅&lt;/span&gt;, 11.0 &lt;span aria-label=&#34;検証済&#34; role=&#34;img&#34; title=&#34;検証済&#34;&gt;✅&lt;/span&gt;, 11.1 &lt;span aria-label=&#34;検証済&#34; role=&#34;img&#34; title=&#34;検証済&#34;&gt;✅&lt;/span&gt;, 12.0 &lt;span aria-label=&#34;検証済&#34; role=&#34;img&#34; title=&#34;検証済&#34;&gt;✅&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: 2003 &lt;span aria-label=&#34;検証済&#34; role=&#34;img&#34; title=&#34;検証済&#34;&gt;✅&lt;/span&gt;, 2005 &lt;span aria-label=&#34;検証済&#34; role=&#34;img&#34; title=&#34;検証済&#34;&gt;✅&lt;/span&gt;, 2008 &lt;span aria-label=&#34;検証済&#34; role=&#34;img&#34; title=&#34;検証済&#34;&gt;✅&lt;/span&gt;, 2010 &lt;span aria-label=&#34;検証済&#34; role=&#34;img&#34; title=&#34;検証済&#34;&gt;✅&lt;/span&gt;, 2012 &lt;span aria-label=&#34;検証済&#34; role=&#34;img&#34; title=&#34;検証済&#34;&gt;✅&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(ここには、そのヘッダファイルが存在する言語のバージョンと、確認がとれたコンパイラとそのバージョンを記述します。)&lt;br /&gt;
(これらの項目を削除した場合、C++03のあらゆる環境で使用できることを意味します。)&lt;/p&gt;
&lt;h2&gt;関連項目&lt;/h2&gt;
&lt;p&gt;(ここには、その機能と関連のあるcpprefjpサイト内の項目へのリンクを記述します。とくに必要がないと判断した場合、項目を削除してください。)&lt;/p&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;p&gt;(ここには、その関数・変数・定数を理解するにあたっての参考資料や、関連する機能へのリンクを記述します。とくに必要がないと判断した場合、項目を削除してください。)&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>page_title (1行目の見出し1はページのタイトルです。修飾なしで記載してください) -- 対応しない丸カッコを修正</title>
      <link href="https://cpprefjp.github.io/start_editing/lang_template_page.html"/>
      <id>66b00196a36570e03c49c65359ada7fb1ff60599:start_editing/lang_template_page.md</id>
      <updated>2025-08-31T21:36:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/start_editing/lang_template_page.md b/start_editing/lang_template_page.md
index 9dad3f21f..6f41aad21 100644
--- a/start_editing/lang_template_page.md
+++ b/start_editing/lang_template_page.md
@@ -1,4 +1,4 @@
-# page_title ((1行目の見出し1はページのタイトルです。修飾なしで記載してください)
+# page_title (1行目の見出し1はページのタイトルです。修飾なしで記載してください)
 
 ([cpprefjpを編集するには](/start_editing.md) および [cpprefjpでのMarkdown記法の制限と拡張](markdown_cpprefjp.md) を先に読んで下さい。)
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>page_title (1行目の見出し1はページのタイトルです。修飾なしで記載してください) -- 対応しない丸カッコを修正</title>
      <link href="https://cpprefjp.github.io/start_editing/module_template_page.html"/>
      <id>66b00196a36570e03c49c65359ada7fb1ff60599:start_editing/module_template_page.md</id>
      <updated>2025-08-31T21:36:04+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;page_title (1行目の見出し1はページのタイトルです。修飾なしで記載してください)&lt;/span&gt;&lt;span class=&#34;cpp cpp26&#34; title=&#34;C++26で追加&#34;&gt;(C++26)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;(&lt;a href=&#34;../start_editing.html&#34;&gt;cpprefjpを編集するには&lt;/a&gt; および &lt;a href=&#34;markdown_cpprefjp.html&#34;&gt;cpprefjpでのMarkdown記法の制限と拡張&lt;/a&gt; を先に読んで下さい。)&lt;/p&gt;
&lt;p&gt;(
  サンプルコードは文章中のどの部分で書いても大丈夫です。閲覧者の理解を助けるために必要だと感じたところで入れてください。
  その際拡張構文である&lt;code&gt;example&lt;/code&gt;タグをルールに従って付け、コンパイル・実行可能にすることを検討してください。
)&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;(ここには、このモジュール(ライブラリ)の概要を記述します。必須事項です。)&lt;/p&gt;
&lt;p&gt;(必要な項目を省略する場合には、「(執筆中)」と書いておいてください。)&lt;/p&gt;
&lt;p&gt;(当面の間、モジュールだけで提供されるライブラリはないため、記事はヘッダー(/reference)が中心となります。モジュールのページでは、モジュールがどのヘッダーファイルに対応するのかを説明します。)&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++26&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ?&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: ?&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ?&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: ?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(ここには、そのモジュールが存在する言語のバージョンと、確認がとれたコンパイラとそのバージョンを記述します。)&lt;br /&gt;
(これらの項目を削除した場合、C++03のあらゆる環境で使用できることを意味します。)&lt;/p&gt;
&lt;h2&gt;関連項目&lt;/h2&gt;
&lt;p&gt;(ここには、その機能と関連のあるcpprefjpサイト内の項目へのリンクを記述します。とくに必要がないと判断した場合、項目を削除してください。)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../lang/cpp20/modules.html&#34;&gt;モジュール&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;p&gt;(ここには、その関数・変数・定数を理解するにあたっての参考資料や、関連する機能へのリンクを記述します。とくに必要がないと判断した場合、項目を削除してください。)&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>page_title (1行目の見出し1はページのタイトルです。修飾なしで記載してください) -- 対応しない丸カッコを修正</title>
      <link href="https://cpprefjp.github.io/start_editing/named_requirement_template_page.html"/>
      <id>66b00196a36570e03c49c65359ada7fb1ff60599:start_editing/named_requirement_template_page.md</id>
      <updated>2025-08-31T21:36:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/start_editing/named_requirement_template_page.md b/start_editing/named_requirement_template_page.md
index 3f7f13085..fe39a9b0e 100644
--- a/start_editing/named_requirement_template_page.md
+++ b/start_editing/named_requirement_template_page.md
@@ -1,4 +1,4 @@
-# page_title ((1行目の見出し1はページのタイトルです。修飾なしで記載してください)
+# page_title (1行目の見出し1はページのタイトルです。修飾なしで記載してください)
 
 ([cpprefjpを編集するには](/start_editing.md) および [cpprefjpでのMarkdown記法の制限と拡張](markdown_cpprefjp.md) を先に読んで下さい。)
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>page_title (1行目の見出し1はページのタイトルです。修飾なしで記載してください) -- 対応しない丸カッコを修正</title>
      <link href="https://cpprefjp.github.io/start_editing/type-type_template_page.html"/>
      <id>66b00196a36570e03c49c65359ada7fb1ff60599:start_editing/type-type_template_page.md</id>
      <updated>2025-08-31T21:36:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/start_editing/type-type_template_page.md b/start_editing/type-type_template_page.md
index 98a4455ce..b67913eb2 100644
--- a/start_editing/type-type_template_page.md
+++ b/start_editing/type-type_template_page.md
@@ -1,4 +1,4 @@
-# page_title ((1行目の見出し1はページのタイトルです。修飾なしで記載してください)
+# page_title (1行目の見出し1はページのタイトルです。修飾なしで記載してください)
 
 ([cpprefjpを編集するには](/start_editing.md) および [cpprefjpでのMarkdown記法の制限と拡張](markdown_cpprefjp.md) を先に読んで下さい。)
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>flags -- 欠けたコードを修正</title>
      <link href="https://cpprefjp.github.io/reference/regex/basic_regex/flags.html"/>
      <id>b3855d825b0216806e95278d5f0048ed0c107035:reference/regex/basic_regex/flags.md</id>
      <updated>2025-08-31T21:06:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/regex/basic_regex/flags.md b/reference/regex/basic_regex/flags.md
index 0011209df..5e462ac12 100644
--- a/reference/regex/basic_regex/flags.md
+++ b/reference/regex/basic_regex/flags.md
@@ -26,7 +26,7 @@ flag_type flags() const;
 #include &amp;lt;iostream&amp;gt;
 #include &amp;lt;regex&amp;gt;
 
-#define PRINTFLAG(f, FLAG) (std::cout &amp;lt;&amp;lt; #FLAG &amp;#34; is &amp;#34; &amp;lt;&amp;lt; (f &amp;amp; std::regex_constants::FLAG ? &amp;#34;set&amp;#34; : &amp;#34;n
+#define PRINTFLAG(f, FLAG) (std::cout &amp;lt;&amp;lt; #FLAG &amp;#34; is &amp;#34; &amp;lt;&amp;lt; (f &amp;amp; std::regex_constants::FLAG ? &amp;#34;set&amp;#34; : &amp;#34;not set&amp;#34;) &amp;lt;&amp;lt; std::endl)
 
 void print(std::regex_constants::syntax_option_type f)
 {
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
</feed>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="http://cpprefjp.github.io" />
  <updated>2015-09-18T00:00:27.264256</updated>
  <id>5c99fab0-a9d0-4d1d-b8bb-d95aca5d073a</id>

  
    <entry>
      <title>lookup_classname (C++11) -- Markdown構文のミスを修正</title>
      <link href="http://cpprefjp.github.io/reference/regex/regex_traits/lookup_classname.html"/>
      <id>31ce1d4bc36ee1a210b28ade377e6cc9050a2f52:reference/regex/regex_traits/lookup_classname.md</id>
      <updated>2015-09-17 16:37:58 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;function&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;regex&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;&lt;span class=&#34;class&#34; title=&#34;class regex_traits&#34;&gt;regex_traits::&lt;/span&gt;lookup_classname (C++11)&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;ForwardIterator&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
char_class_type lookup_classname(ForwardIterator first,
                                 ForwardIterator last,
                                 &lt;span style=&#34;color: #B00040&#34;&gt;bool&lt;/span&gt; icase &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #008000&#34;&gt;false&lt;/span&gt;) &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt;;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;与えられた文字の範囲に対応するクラス名を取得する。&lt;/p&gt;
&lt;h2&gt;戻り値&lt;/h2&gt;
&lt;p&gt;文字の範囲&lt;code&gt;[first, last)&lt;/code&gt;からなるクラス名文字列に対応する、未規定のクラス値を返す。&lt;/p&gt;
&lt;p&gt;パラメータ&lt;code&gt;icase&lt;/code&gt;が&lt;code&gt;true&lt;/code&gt;である場合は、大文字・小文字を無視してクラス名の比較が行われる。&lt;/p&gt;
&lt;p&gt;与えられたクラス名に対応する値がない場合、&lt;code&gt;char_class_type()&lt;/code&gt;を返す。&lt;/p&gt;
&lt;h2&gt;備考&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;regex_traits&amp;lt;char&amp;gt;&lt;/code&gt;と&lt;code&gt;regex_traits&amp;lt;wchar_t&amp;gt;&lt;/code&gt;に対しては、少なくても以下のクラス名は許可される：&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;クラス名&lt;/th&gt;
&lt;th&gt;クラスを表すビットマスク値&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&#34;alnum&#34;&lt;/code&gt;/&lt;code&gt;L&#34;alnum&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale/ctype_base.html&#34;&gt;&lt;code&gt;ctype_base::alnum&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;英字・数字にマッチする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&#34;alpha&#34;&lt;/code&gt;/&lt;code&gt;L&#34;alpha&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale/ctype_base.html&#34;&gt;&lt;code&gt;ctype_base::alpha&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;英字にマッチする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&#34;blank&#34;&lt;/code&gt;/&lt;code&gt;L&#34;blank&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale/ctype_base.html&#34;&gt;&lt;code&gt;ctype_base::blank&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ブランク文字にマッチする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&#34;cntrl&#34;&lt;/code&gt;/&lt;code&gt;L&#34;cntrl&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale/ctype_base.html&#34;&gt;&lt;code&gt;ctype_base::cntrl&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;制御文字にマッチする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&#34;digit&#34;&lt;/code&gt;/&lt;code&gt;L&#34;digit&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale/ctype_base.html&#34;&gt;&lt;code&gt;ctype_base::digit&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;数字にマッチする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&#34;d&#34;&lt;/code&gt;/&lt;code&gt;L&#34;d&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale/ctype_base.html&#34;&gt;&lt;code&gt;ctype_base::digit&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;数字にマッチする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&#34;graph&#34;&lt;/code&gt;/&lt;code&gt;L&#34;graph&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale/ctype_base.html&#34;&gt;&lt;code&gt;ctype_base::graph&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;図形文字にマッチする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&#34;lower&#34;&lt;/code&gt;/&lt;code&gt;L&#34;lower&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale/ctype_base.html&#34;&gt;&lt;code&gt;ctype_base::lower&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;英小文字にマッチする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&#34;print&#34;&lt;/code&gt;/&lt;code&gt;L&#34;print&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale/ctype_base.html&#34;&gt;&lt;code&gt;ctype_base::print&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;印字可能文字にマッチする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&#34;punct&#34;&lt;/code&gt;/&lt;code&gt;L&#34;punct&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale/ctype_base.html&#34;&gt;&lt;code&gt;ctype_base::punct&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;区切り文字にマッチする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&#34;space&#34;&lt;/code&gt;/&lt;code&gt;L&#34;space&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale/ctype_base.html&#34;&gt;&lt;code&gt;ctype_base::space&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;空白類文字にマッチする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&#34;s&#34;&lt;/code&gt;/&lt;code&gt;L&#34;s&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale/ctype_base.html&#34;&gt;&lt;code&gt;ctype_base::space&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;空白類文字にマッチする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&#34;upper&#34;&lt;/code&gt;/&lt;code&gt;L&#34;upper&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale/ctype_base.html&#34;&gt;&lt;code&gt;ctype_base::upper&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;英大文字にマッチする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&#34;w&#34;&lt;/code&gt;/&lt;code&gt;L&#34;w&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale/ctype_base.html&#34;&gt;&lt;code&gt;ctype_base::alnum&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;英字・数字にマッチする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&#34;xdigit&#34;&lt;/code&gt;/&lt;code&gt;L&#34;xdigit&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale/ctype_base.html&#34;&gt;&lt;code&gt;ctype_base::xdigit&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;十六進数字にマッチする&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;regex&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;string&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;regex_traits&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; traits;

  &lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;string&lt;/a&gt; class_name &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;alnum&#34;&lt;/span&gt;; &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 正規表現中で[[:alnum:]]のように入力するクラス名&lt;/span&gt;

  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 文字&#39;a&#39;がアルファベットと数字のクラスに含まれているかを判定する&lt;/span&gt;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;regex_traits&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;::&lt;/span&gt;char_class_type class_value &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt;
    traits.lookup_classname(class_name.&lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string/begin.html&#34;&gt;begin()&lt;/a&gt;, class_name.&lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string/end.html&#34;&gt;end()&lt;/a&gt;);
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;if&lt;/span&gt; (traits.&lt;a href=&#34;http://cpprefjp.github.io/reference/regex/regex_traits/isctype.html&#34;&gt;isctype&lt;/a&gt;(&lt;span style=&#34;color: #BA2121&#34;&gt;&#39;a&#39;&lt;/span&gt;, class_value)) {
    &lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&#39;a&#39; is alpha-numeric class&#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/endl.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl&lt;/a&gt;;
  }
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;else&lt;/span&gt; {
    &lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&#39;a&#39; is not alpha-numeric class&#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/endl.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl&lt;/a&gt;;
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;&#39;a&#39; is alpha-numeric class
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: -&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang, C++11 mode&lt;/a&gt;: 3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: -&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++11 mode&lt;/a&gt;: 4.9.0, 4.9.1, 4.9.2, 5.0.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: ??&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>regex_traits (C++11) -- 関数名が間違っていた。 s/istype/isctype/</title>
      <link href="http://cpprefjp.github.io/reference/regex/regex_traits.html"/>
      <id>cf9ef8c64d65f116bb20b21887147eca0bd006d6:reference/regex/regex_traits.md</id>
      <updated>2015-09-17 16:35:09 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;class template&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;regex&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;regex_traits (C++11)&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;CharT&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;struct&lt;/span&gt; regex_traits;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;regex_traits&lt;/code&gt;は、正規表現ライブラリ&lt;code&gt;&amp;lt;regex&amp;gt;&lt;/code&gt;クラス内で使用される、文字とその変換の規則に関する特性を表すクラスである。&lt;/p&gt;
&lt;p&gt;このクラスと同じインタフェースのクラスを実装することで、特定の文字コードの場合に、正規表現の振る舞いをカスタマイズできる。&lt;/p&gt;
&lt;h2&gt;メンバ関数&lt;/h2&gt;
&lt;h3&gt;構築・破棄&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;(constructor)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;コンストラクタ&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;~regex_traits() = default;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;デストラクタ&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;regex_traits&amp;amp; operator=(const regex_traits&amp;amp;) = default;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;regex_traits&amp;amp; operator=(regex_traits&amp;amp;&amp;amp;) = default;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;代入演算子&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;変換&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;translate&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;与えられた文字と同等の文字を取得する&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;translate_nocase&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;与えられた文字列と大文字・小文字を区別せずに同等な文字列を取得する&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;与えられた範囲を、並べ替えのキーとして使用する、文字のシーケンスに変換する&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;transform_primary&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;与えられた文字の範囲を、並べ替えのキーとして使用する、大文字・小文字を区別しない文字のシーケンスに変換する&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;lookup_collatename&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;与えられた文字の範囲に対応する照合名を取得する&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/regex/regex_traits/lookup_classname.html&#34;&gt;&lt;code&gt;lookup_classname&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;与えられた文字の範囲に対応するクラス名を取得する&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/regex/regex_traits/isctype.html&#34;&gt;&lt;code&gt;isctype&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;文字が特定のクラスに属しているかを判定する&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;value&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字の整数表現を取得する&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;imbue&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ロケールを設定する&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;getloc&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ロケールを取得する&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;静的メンバ関数&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;length&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列の長さを取得する&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;メンバ型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;char_type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;テンプレートパラメータ&lt;code&gt;CharT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;string_type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;char_type&lt;/code&gt;文字を要素とする文字列型 &lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string.html&#34;&gt;&lt;code&gt;std::basic_string&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;char_type&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;locale_type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ロケール型 &lt;a href=&#34;http://cpprefjp.github.io/reference/locale/locale.html&#34;&gt;&lt;code&gt;std::locale&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;char_class_type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;正規表現の文字クラス名を表す、実装定義のビットマスク型&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;regex&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;string&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;regex_traits&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; traits;

  &lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;string&lt;/a&gt; class_name &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;alnum&#34;&lt;/span&gt;; &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 正規表現中で[[:alnum:]]のように入力するクラス名&lt;/span&gt;

  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 文字&#39;a&#39;がアルファベットと数字のクラスに含まれているかを判定する&lt;/span&gt;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;if&lt;/span&gt; (traits.&lt;a href=&#34;http://cpprefjp.github.io/reference/regex/regex_traits/isctype.html&#34;&gt;isctype&lt;/a&gt;(&lt;span style=&#34;color: #BA2121&#34;&gt;&#39;a&#39;&lt;/span&gt;, traits.&lt;a href=&#34;http://cpprefjp.github.io/reference/regex/regex_traits/lookup_classname.html&#34;&gt;lookup_classname&lt;/a&gt;(class_name.&lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string/begin.html&#34;&gt;begin()&lt;/a&gt;, class_name.&lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string/end.html&#34;&gt;end()&lt;/a&gt;))) {
    &lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&#39;a&#39; is alpha-numeric class&#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/endl.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl&lt;/a&gt;;
  }
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;else&lt;/span&gt; {
    &lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&#39;a&#39; is not alpha-numeric class&#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/endl.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl&lt;/a&gt;;
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;&#39;a&#39; is alpha-numeric class
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: -&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang, C++11 mode&lt;/a&gt;: 3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: -&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++11 mode&lt;/a&gt;: 4.9.0, 4.9.1, 4.9.2, 5.0.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: ??&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>istype (C++11) -- 関数名が間違っていた。 s/istype/isctype/</title>
      <link href="http://cpprefjp.github.io/reference/regex/regex_traits/isctype.html"/>
      <id>cf9ef8c64d65f116bb20b21887147eca0bd006d6:reference/regex/regex_traits/isctype.md</id>
      <updated>2015-09-17 16:35:09 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;function&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;regex&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;&lt;span class=&#34;class&#34; title=&#34;class regex_traits&#34;&gt;regex_traits::&lt;/span&gt;istype (C++11)&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #B00040&#34;&gt;bool&lt;/span&gt; isctype(char_type c, char_class_type f) &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt;;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;文字&lt;code&gt;c&lt;/code&gt;がクラス&lt;code&gt;f&lt;/code&gt;に属しているかを判定する。&lt;/p&gt;
&lt;h2&gt;戻り値&lt;/h2&gt;
&lt;p&gt;ビットマスクのクラス値&lt;code&gt;f&lt;/code&gt;に含まれるいずれかのクラスに文字&lt;code&gt;c&lt;/code&gt;が属していれば&lt;code&gt;true&lt;/code&gt;、そうでなければ&lt;code&gt;false&lt;/code&gt;を返す。&lt;/p&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;regex&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;string&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;regex_traits&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; traits;

  &lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;string&lt;/a&gt; class_name &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;alnum&#34;&lt;/span&gt;; &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 正規表現中で[[:alnum:]]のように入力するクラス名&lt;/span&gt;

  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 文字&#39;a&#39;がアルファベットと数字のクラスに含まれているかを判定する&lt;/span&gt;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;regex_traits&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;::&lt;/span&gt;char_class_type class_value &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt;
    traits.&lt;a href=&#34;http://cpprefjp.github.io/reference/regex/regex_traits/lookup_classname.html&#34;&gt;lookup_classname&lt;/a&gt;(class_name.&lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string/begin.html&#34;&gt;begin()&lt;/a&gt;, class_name.&lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string/end.html&#34;&gt;end()&lt;/a&gt;);
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;if&lt;/span&gt; (traits.isctype(&lt;span style=&#34;color: #BA2121&#34;&gt;&#39;a&#39;&lt;/span&gt;, class_value)) {
    &lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&#39;a&#39; is alpha-numeric class&#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/endl.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl&lt;/a&gt;;
  }
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;else&lt;/span&gt; {
    &lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&#39;a&#39; is not alpha-numeric class&#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/endl.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl&lt;/a&gt;;
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;&#39;a&#39; is alpha-numeric class
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: -&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang, C++11 mode&lt;/a&gt;: 3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: -&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++11 mode&lt;/a&gt;: 4.9.0, 4.9.1, 4.9.2, 5.0.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: ??&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>istype.md -- 関数名が間違っていた。 s/istype/isctype/</title>
      <link href="http://cpprefjp.github.io/reference/regex/regex_traits/istype.html"/>
      <id>cf9ef8c64d65f116bb20b21887147eca0bd006d6:reference/regex/regex_traits/istype.md</id>
      <updated>2015-09-17 16:35:09 +0900</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/regex/regex_traits/istype.md b/reference/regex/regex_traits/istype.md
deleted file mode 100644
index 13a024b..0000000
--- a/reference/regex/regex_traits/istype.md
+++ /dev/null
@@ -1,67 +0,0 @@
-#istype (C++11)
-* regex[meta header]
-* std[meta namespace]
-* regex_traits[meta class]
-* function[meta id-type]
-
-```cpp
-bool isctype(char_type c, char_class_type f) const;
-```
-
-
-##概要
-文字`c`がクラス`f`に属しているかを判定する。
-
-
-##戻り値
-ビットマスクのクラス値`f`に含まれるいずれかのクラスに文字`c`が属していれば`true`、そうでなければ`false`を返す。
-
-
-##例
-```cpp
-#include &amp;lt;iostream&amp;gt;
-#include &amp;lt;regex&amp;gt;
-#include &amp;lt;string&amp;gt;
-
-int main()
-{
-  std::regex_traits&amp;lt;char&amp;gt; traits;
-  
-  std::string class_name = &amp;#34;alnum&amp;#34;; // 正規表現中で[[:alnum:]]のように入力するクラス名
-  
-  // 文字&amp;#39;a&amp;#39;がアルファベットと数字のクラスに含まれているかを判定する
-  std::regex_traits&amp;lt;char&amp;gt;::char_class_type class_value =
-    traits.lookup_classname(class_name.begin(), class_name.end());
-  if (traits.isctype(&amp;#39;a&amp;#39;, class_value)) {
-    std::cout &amp;lt;&amp;lt; &amp;#34;&amp;#39;a&amp;#39; is alpha-numeric class&amp;#34; &amp;lt;&amp;lt; std::endl;
-  }
-  else {
-    std::cout &amp;lt;&amp;lt; &amp;#34;&amp;#39;a&amp;#39; is not alpha-numeric class&amp;#34; &amp;lt;&amp;lt; std::endl;
-  }
-}
-```
-* std::string[link /reference/string/basic_string.md]
-* begin()[link /reference/string/basic_string/begin.md]
-* end()[link /reference/string/basic_string/end.md]
-* lookup_classname[link ./lookup_classname.md]
-* std::cout[link /reference/iostream/cout.md]
-* std::endl[link /reference/ostream/endl.md]
-
-###出力
-```
-&amp;#39;a&amp;#39; is alpha-numeric class
-```
-
-
-##バージョン
-###言語
-- C++11
-
-###処理系
-- [Clang](/implementation.md#clang): -
-- [Clang, C++11 mode](/implementation.md#clang): 3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6
-- [GCC](/implementation.md#gcc): -
-- [GCC, C++11 mode](/implementation.md#gcc): 4.9.0, 4.9.1, 4.9.2, 5.0.0
-- [ICC](/implementation.md#icc): ??
-- [Visual C++](/implementation.md#visual_cpp): ??
-
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>regex_traits (C++11) -- regex_traits : lookup_classnameとistypeを追加(#215, #216)</title>
      <link href="http://cpprefjp.github.io/reference/regex/regex_traits.html"/>
      <id>b97af465d84209737109e7918ed65be7116ffb2d:reference/regex/regex_traits.md</id>
      <updated>2015-09-17 16:31:19 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;class template&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;regex&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;regex_traits (C++11)&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;CharT&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;struct&lt;/span&gt; regex_traits;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;regex_traits&lt;/code&gt;は、正規表現ライブラリ&lt;code&gt;&amp;lt;regex&amp;gt;&lt;/code&gt;クラス内で使用される、文字とその変換の規則に関する特性を表すクラスである。&lt;/p&gt;
&lt;p&gt;このクラスと同じインタフェースのクラスを実装することで、特定の文字コードの場合に、正規表現の振る舞いをカスタマイズできる。&lt;/p&gt;
&lt;h2&gt;メンバ関数&lt;/h2&gt;
&lt;h3&gt;構築・破棄&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;(constructor)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;コンストラクタ&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;~regex_traits() = default;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;デストラクタ&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;regex_traits&amp;amp; operator=(const regex_traits&amp;amp;) = default;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;regex_traits&amp;amp; operator=(regex_traits&amp;amp;&amp;amp;) = default;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;代入演算子&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;変換&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;translate&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;与えられた文字と同等の文字を取得する&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;translate_nocase&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;与えられた文字列と大文字・小文字を区別せずに同等な文字列を取得する&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;与えられた範囲を、並べ替えのキーとして使用する、文字のシーケンスに変換する&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;transform_primary&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;与えられた文字の範囲を、並べ替えのキーとして使用する、大文字・小文字を区別しない文字のシーケンスに変換する&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;lookup_collatename&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;与えられた文字の範囲に対応する照合名を取得する&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/regex/regex_traits/lookup_classname.html&#34;&gt;&lt;code&gt;lookup_classname&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;与えられた文字の範囲に対応するクラス名を取得する&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/regex/regex_traits/istype.html&#34;&gt;&lt;code&gt;istype&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;文字が特定のクラスに属しているかを判定する&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;value&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字の整数表現を取得する&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;imbue&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ロケールを設定する&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;getloc&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ロケールを取得する&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;静的メンバ関数&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;length&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列の長さを取得する&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;メンバ型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;char_type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;テンプレートパラメータ&lt;code&gt;CharT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;string_type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;char_type&lt;/code&gt;文字を要素とする文字列型 &lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string.html&#34;&gt;&lt;code&gt;std::basic_string&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;char_type&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;locale_type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ロケール型 &lt;a href=&#34;http://cpprefjp.github.io/reference/locale/locale.html&#34;&gt;&lt;code&gt;std::locale&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;char_class_type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;正規表現の文字クラス名を表す、実装定義のビットマスク型&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;regex&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;string&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;regex_traits&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; traits;

  &lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;string&lt;/a&gt; class_name &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;alnum&#34;&lt;/span&gt;; &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 正規表現中で[[:alnum:]]のように入力するクラス名&lt;/span&gt;

  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 文字&#39;a&#39;がアルファベットと数字のクラスに含まれているかを判定する&lt;/span&gt;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;if&lt;/span&gt; (traits.&lt;a href=&#34;http://cpprefjp.github.io/reference/regex/regex_traits/isctype.html&#34;&gt;isctype&lt;/a&gt;(&lt;span style=&#34;color: #BA2121&#34;&gt;&#39;a&#39;&lt;/span&gt;, traits.&lt;a href=&#34;http://cpprefjp.github.io/reference/regex/regex_traits/lookup_classname.html&#34;&gt;lookup_classname&lt;/a&gt;(class_name.&lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string/begin.html&#34;&gt;begin()&lt;/a&gt;, class_name.&lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string/end.html&#34;&gt;end()&lt;/a&gt;))) {
    &lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&#39;a&#39; is alpha-numeric class&#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/endl.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl&lt;/a&gt;;
  }
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;else&lt;/span&gt; {
    &lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&#39;a&#39; is not alpha-numeric class&#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/endl.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl&lt;/a&gt;;
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;&#39;a&#39; is alpha-numeric class
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: -&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang, C++11 mode&lt;/a&gt;: 3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: -&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++11 mode&lt;/a&gt;: 4.9.0, 4.9.1, 4.9.2, 5.0.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: ??&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>istype (C++11) -- regex_traits : lookup_classnameとistypeを追加(#215, #216)</title>
      <link href="http://cpprefjp.github.io/reference/regex/regex_traits/istype.html"/>
      <id>b97af465d84209737109e7918ed65be7116ffb2d:reference/regex/regex_traits/istype.md</id>
      <updated>2015-09-17 16:31:19 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;function&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;regex&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;&lt;span class=&#34;class&#34; title=&#34;class regex_traits&#34;&gt;regex_traits::&lt;/span&gt;istype (C++11)&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #B00040&#34;&gt;bool&lt;/span&gt; isctype(char_type c, char_class_type f) &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt;;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;文字&lt;code&gt;c&lt;/code&gt;がクラス&lt;code&gt;f&lt;/code&gt;に属しているかを判定する。&lt;/p&gt;
&lt;h2&gt;戻り値&lt;/h2&gt;
&lt;p&gt;ビットマスクのクラス値&lt;code&gt;f&lt;/code&gt;に含まれるいずれかのクラスに文字&lt;code&gt;c&lt;/code&gt;が属していれば&lt;code&gt;true&lt;/code&gt;、そうでなければ&lt;code&gt;false&lt;/code&gt;を返す。&lt;/p&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;regex&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;string&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;regex_traits&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; traits;

  &lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;string&lt;/a&gt; class_name &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;alnum&#34;&lt;/span&gt;; &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 正規表現中で[[:alnum:]]のように入力するクラス名&lt;/span&gt;

  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 文字&#39;a&#39;がアルファベットと数字のクラスに含まれているかを判定する&lt;/span&gt;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;regex_traits&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;::&lt;/span&gt;char_class_type class_value &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt;
    traits.&lt;a href=&#34;http://cpprefjp.github.io/reference/regex/regex_traits/lookup_classname.html&#34;&gt;lookup_classname&lt;/a&gt;(class_name.&lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string/begin.html&#34;&gt;begin()&lt;/a&gt;, class_name.&lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string/end.html&#34;&gt;end()&lt;/a&gt;);
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;if&lt;/span&gt; (traits.isctype(&lt;span style=&#34;color: #BA2121&#34;&gt;&#39;a&#39;&lt;/span&gt;, class_value)) {
    &lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&#39;a&#39; is alpha-numeric class&#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/endl.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl&lt;/a&gt;;
  }
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;else&lt;/span&gt; {
    &lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&#39;a&#39; is not alpha-numeric class&#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/endl.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl&lt;/a&gt;;
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;&#39;a&#39; is alpha-numeric class
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: -&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang, C++11 mode&lt;/a&gt;: 3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: -&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++11 mode&lt;/a&gt;: 4.9.0, 4.9.1, 4.9.2, 5.0.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: ??&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>lookup_classname (C++11) -- regex_traits : lookup_classnameとistypeを追加(#215, #216)</title>
      <link href="http://cpprefjp.github.io/reference/regex/regex_traits/lookup_classname.html"/>
      <id>b97af465d84209737109e7918ed65be7116ffb2d:reference/regex/regex_traits/lookup_classname.md</id>
      <updated>2015-09-17 16:31:19 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;function&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;regex&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;&lt;span class=&#34;class&#34; title=&#34;class regex_traits&#34;&gt;regex_traits::&lt;/span&gt;lookup_classname (C++11)&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;ForwardIterator&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
char_class_type lookup_classname(ForwardIterator first,
                                 ForwardIterator last,
                                 &lt;span style=&#34;color: #B00040&#34;&gt;bool&lt;/span&gt; icase &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #008000&#34;&gt;false&lt;/span&gt;) &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt;;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;与えられた文字の範囲に対応するクラス名を取得する。&lt;/p&gt;
&lt;h2&gt;戻り値&lt;/h2&gt;
&lt;p&gt;文字の範囲&lt;code&gt;[first, last)&lt;/code&gt;からなるクラス名文字列に対応する、未規定のクラス値を返す。&lt;/p&gt;
&lt;p&gt;パラメータ&lt;code&gt;icase&lt;/code&gt;が&lt;code&gt;true&lt;/code&gt;である場合は、大文字・小文字を無視してクラス名の比較が行われる。&lt;/p&gt;
&lt;p&gt;与えられたクラス名に対応する値がない場合、&lt;code&gt;char_class_type()&lt;/code&gt;を返す。&lt;/p&gt;
&lt;h2&gt;備考&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;regex_traits&amp;lt;char&amp;gt;&lt;/code&gt;と&lt;code&gt;regex_traits&amp;lt;wchar_t&amp;gt;&lt;/code&gt;に対しては、少なくても以下のクラス名は許可される：&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;クラス名&lt;/th&gt;
&lt;th&gt;クラスを表すビットマスク値&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&#34;alnum&#34;&lt;/code&gt;/&lt;code&gt;L&#34;alnum&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale/ctype_base.md]&#34;&gt;&lt;code&gt;ctype_base::alnum&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;英字・数字にマッチする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&#34;alpha&#34;&lt;/code&gt;/&lt;code&gt;L&#34;alpha&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale/ctype_base.md]&#34;&gt;&lt;code&gt;ctype_base::alpha&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;英字にマッチする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&#34;blank&#34;&lt;/code&gt;/&lt;code&gt;L&#34;blank&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale/ctype_base.md]&#34;&gt;&lt;code&gt;ctype_base::blank&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ブランク文字にマッチする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&#34;cntrl&#34;&lt;/code&gt;/&lt;code&gt;L&#34;cntrl&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale/ctype_base.md]&#34;&gt;&lt;code&gt;ctype_base::cntrl&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;制御文字にマッチする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&#34;digit&#34;&lt;/code&gt;/&lt;code&gt;L&#34;digit&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale/ctype_base.md]&#34;&gt;&lt;code&gt;ctype_base::digit&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;数字にマッチする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&#34;d&#34;&lt;/code&gt;/&lt;code&gt;L&#34;d&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale/ctype_base.md]&#34;&gt;&lt;code&gt;ctype_base::digit&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;数字にマッチする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&#34;graph&#34;&lt;/code&gt;/&lt;code&gt;L&#34;graph&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale/ctype_base.md]&#34;&gt;&lt;code&gt;ctype_base::graph&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;図形文字にマッチする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&#34;lower&#34;&lt;/code&gt;/&lt;code&gt;L&#34;lower&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale/ctype_base.md]&#34;&gt;&lt;code&gt;ctype_base::lower&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;英小文字にマッチする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&#34;print&#34;&lt;/code&gt;/&lt;code&gt;L&#34;print&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale/ctype_base.md]&#34;&gt;&lt;code&gt;ctype_base::print&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;印字可能文字にマッチする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&#34;punct&#34;&lt;/code&gt;/&lt;code&gt;L&#34;punct&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale/ctype_base.md]&#34;&gt;&lt;code&gt;ctype_base::punct&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;区切り文字にマッチする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&#34;space&#34;&lt;/code&gt;/&lt;code&gt;L&#34;space&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale/ctype_base.md]&#34;&gt;&lt;code&gt;ctype_base::space&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;空白類文字にマッチする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&#34;s&#34;&lt;/code&gt;/&lt;code&gt;L&#34;s&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale/ctype_base.md]&#34;&gt;&lt;code&gt;ctype_base::space&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;空白類文字にマッチする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&#34;upper&#34;&lt;/code&gt;/&lt;code&gt;L&#34;upper&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale/ctype_base.md]&#34;&gt;&lt;code&gt;ctype_base::upper&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;英大文字にマッチする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&#34;w&#34;&lt;/code&gt;/&lt;code&gt;L&#34;w&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale/ctype_base.md]&#34;&gt;&lt;code&gt;ctype_base::alnum&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;英字・数字にマッチする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&#34;xdigit&#34;&lt;/code&gt;/&lt;code&gt;L&#34;xdigit&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale/ctype_base.md]&#34;&gt;&lt;code&gt;ctype_base::xdigit&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;十六進数字にマッチする&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;regex&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;string&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;regex_traits&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; traits;

  &lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;string&lt;/a&gt; class_name &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;alnum&#34;&lt;/span&gt;; &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 正規表現中で[[:alnum:]]のように入力するクラス名&lt;/span&gt;

  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 文字&#39;a&#39;がアルファベットと数字のクラスに含まれているかを判定する&lt;/span&gt;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;regex_traits&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;::&lt;/span&gt;char_class_type class_value &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt;
    traits.lookup_classname(class_name.&lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string/begin.html&#34;&gt;begin()&lt;/a&gt;, class_name.&lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string/end.html&#34;&gt;end()&lt;/a&gt;);
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;if&lt;/span&gt; (traits.&lt;a href=&#34;http://cpprefjp.github.io/reference/regex/regex_traits/isctype.html&#34;&gt;isctype&lt;/a&gt;(&lt;span style=&#34;color: #BA2121&#34;&gt;&#39;a&#39;&lt;/span&gt;, class_value)) {
    &lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&#39;a&#39; is alpha-numeric class&#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/endl.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl&lt;/a&gt;;
  }
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;else&lt;/span&gt; {
    &lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&#39;a&#39; is not alpha-numeric class&#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/endl.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl&lt;/a&gt;;
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;&#39;a&#39; is alpha-numeric class
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: -&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang, C++11 mode&lt;/a&gt;: 3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: -&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++11 mode&lt;/a&gt;: 4.9.0, 4.9.1, 4.9.2, 5.0.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: ??&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>thread (C++11) -- threadヘッダ : &lt;br/&gt;タグを使うのはよくないので、改行 + 入れ子の箇条書きにした。</title>
      <link href="http://cpprefjp.github.io/reference/thread.html"/>
      <id>6e753227da9010b372d46f8d0a9da2dd969d0b26:reference/thread.md</id>
      <updated>2015-09-17 15:55:07 +0900</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;thread&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;thread (C++11)&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;thread&amp;gt;&lt;/code&gt;ヘッダはマルチスレッド制御に関するクラス・関数を定義する。 
スレッドサポートはC++11にて導入された。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/thread/thread.html&#34;&gt;&lt;code&gt;thread&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;スレッド クラス(class)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/thread/thread/id.html&#34;&gt;&lt;code&gt;thread::id&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;スレッド識別子 クラス(class)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/thread/this_thread.html&#34;&gt;&lt;code&gt;this_thread&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;現スレッドの制御機能を提供する名前空間 (namespace)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++0x mode&lt;/a&gt;: 4.6.3, 4.7.0&lt;/li&gt;
&lt;li&gt;GCC／pthread環境でスレッドサポートを有効化するには -pthread オプション指定が必要。（GCC 4.7.0で確認）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.decadent.org.uk/pipermail/cpp-threads/&#34; target=&#34;_blank&#34;&gt;The cpp-threads Archives&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;以前、C++標準の言語とライブラリに並行プログラミングの提案を行うため使用されていたメーリングリストのアーカイブです。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>fisher_f_distribution (C++11) -- tsvファイルへのリンクを修正</title>
      <link href="http://cpprefjp.github.io/reference/random/fisher_f_distribution.html"/>
      <id>f5d9313ad0ce507e585ec3172e9312afb9ff3b89:reference/random/fisher_f_distribution.md</id>
      <updated>2015-09-17 03:23:17 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;class template&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;random&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;fisher_f_distribution (C++11)&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;RealType&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;fisher_f_distribution&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;fisher_f_distribution&lt;/code&gt;は、連続確率分布の一種である、フィッシャーのF分布を生成するクラスである。以下の密度関数に基いて、浮動小数点数の乱数を生成する：  &lt;/p&gt;
&lt;p&gt;$$ p(x|m,n) = \frac{\Gamma ((m+n)/2)}{\Gamma (m/2) \Gamma (n/2)} \cdot \big(\frac{m}{n} \big) ^{m/2} \cdot x^{(m/2)-1} \cdot \big( 1 + \frac{mx}{n} \big) ^{-(m+n)/2} $$&lt;/p&gt;
&lt;p&gt;この密度関数におけるmとnは、自由度(degrees of freedom)を意味し、2つの独立したカイ二乗分布を除算したものを結果として生成する。&lt;/p&gt;
&lt;p&gt;以下のような用途で使用できる：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2つの標本の分散比を求める。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;テンプレートパラメータは、以下を意味する：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;RealType&lt;/code&gt; : 生成する実数の型。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;メンバ関数&lt;/h2&gt;
&lt;h3&gt;構築・リセット&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/random/fisher_f_distribution/op_constructor.html&#34;&gt;&lt;code&gt;(constructor)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コンストラクタ&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;~fisher_f_distribution() = default;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;デストラクタ&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/random/fisher_f_distribution/reset.html&#34;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;状態をリセットする&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;生成&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/random/fisher_f_distribution/op_call.html&#34;&gt;&lt;code&gt;operator()&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;乱数を生成する&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;プロパティ&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/random/fisher_f_distribution/m.html&#34;&gt;&lt;code&gt;m&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;自由度mを取得する&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/random/fisher_f_distribution/n.html&#34;&gt;&lt;code&gt;n&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;自由度nを取得する&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/random/fisher_f_distribution/param.html&#34;&gt;&lt;code&gt;param&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;分布のパラメータを取得／設定する&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/random/fisher_f_distribution/min.html&#34;&gt;&lt;code&gt;min&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;生成する範囲の最小値を取得する&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/random/fisher_f_distribution/max.html&#34;&gt;&lt;code&gt;max&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;生成する範囲の最大値を取得する&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;メンバ型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;型&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;result_type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;乱数生成結果の実数型 &lt;code&gt;RealType&lt;/code&gt;。&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;param_type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;分布パラメータの型。未規定。&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;非メンバ関数&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/random/fisher_f_distribution/op_equal.html&#34;&gt;&lt;code&gt;operator==&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;等値比較&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/random/fisher_f_distribution/op_not_equal.html&#34;&gt;&lt;code&gt;operator!=&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;非等値比較&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/random/fisher_f_distribution/op_ostream.html&#34;&gt;&lt;code&gt;operator&amp;lt;&amp;lt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ストリームへの出力&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/random/fisher_f_distribution/op_istream.html&#34;&gt;&lt;code&gt;operator&amp;gt;&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ストリームからの入力&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;fstream&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;random&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;random_device seed_gen;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;default_random_engine engine(seed_gen());

  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 自由度5と10で分布させる&lt;/span&gt;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;fisher_f_distribution&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; dist(&lt;span style=&#34;color: #666666&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;10&lt;/span&gt;);

  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;ofstream file(&lt;span style=&#34;color: #BA2121&#34;&gt;&#34;fisher_f_distribution.tsv&#34;&lt;/span&gt;);
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color: #B00040&#34;&gt;size_t&lt;/span&gt; n &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;0&lt;/span&gt;; n &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;256&lt;/span&gt;; &lt;span style=&#34;color: #666666&#34;&gt;++&lt;/span&gt;n) {
    &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// F分布で乱数を生成する&lt;/span&gt;
    &lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt; result &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; dist(engine);
    file &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; result &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;color: #BB6622; font-weight: bold&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;/span&gt;;
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;このプログラムによってある時に得られた結果（&lt;a href=&#34;https://github.com/cpprefjp/image/raw/master/reference/random/fisher_f_distribution/fisher_f_distribution.tsv&#34; target=&#34;_blank&#34;&gt;fisher_f_distribution.tsv&lt;/a&gt;）を図示する。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/cpprefjp/image/raw/master/reference/random/fisher_f_distribution/fisher_f_distribution.png&#34; /&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++0x mode&lt;/a&gt;: 4.6.1&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;参考&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://ja.wikipedia.org/wiki/F%E5%88%86%E5%B8%83&#34; target=&#34;_blank&#34;&gt;F分布 - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ipc.shimane-u.ac.jp/food/kobayasi/biometry9_2011.html&#34; target=&#34;_blank&#34;&gt;第９回　カイ二乗分布とＦ分布&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Mitsuru Kariya</name>
        <email>kariya_mitsuru@hotmail.com</email>
      </author>
    </entry>
  
</feed>
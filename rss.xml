<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2025-04-25T03:12:52.122211</updated>
  <id>d7179324-9079-4ac6-848e-b30130c5e6c2</id>

  
    <entry>
      <title>INT_FAST64_MIN -- reference/cstdint/int_fast64_min.md: Created sample program</title>
      <link href="https://cpprefjp.github.io/reference/cstdint/int_fast64_min.html"/>
      <id>c476d9c300d2e3d7a7bff81733057a31a33a037e:reference/cstdint/int_fast64_min.md</id>
      <updated>2025-04-25T12:09:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstdint/int_fast64_min.md b/reference/cstdint/int_fast64_min.md
index 0131bce40..54a861717 100644
--- a/reference/cstdint/int_fast64_min.md
+++ b/reference/cstdint/int_fast64_min.md
@@ -8,7 +8,52 @@
 ```
 
 ## 概要
-[`int_fast64_t`](int_fast64_t.md) の最小値。
+[`int_fast64_t`](int_fast64_t.md) の最小値を表す定数。
+
+[`std::numeric_limits`](/reference/limits/numeric_limits.md)`&amp;lt;int_fast64_t&amp;gt;::`[`min()`](/reference/limits/numeric_limits/min.md) と等しい。
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;cstdint&amp;gt;
+#include &amp;lt;limits&amp;gt;
+
+int main()
+{
+  std::cout &amp;lt;&amp;lt; &amp;#34;INT_FAST64_MIN: &amp;#34; &amp;lt;&amp;lt; INT_FAST64_MIN &amp;lt;&amp;lt; std::endl;
+  
+  // numeric_limitsによる値と一致することを確認
+  std::cout &amp;lt;&amp;lt; &amp;#34;numeric_limits&amp;lt;int_fast64_t&amp;gt;::min(): &amp;#34;
+            &amp;lt;&amp;lt; std::numeric_limits&amp;lt;std::int_fast64_t&amp;gt;::min() &amp;lt;&amp;lt; std::endl;
+  
+  std::cout &amp;lt;&amp;lt; &amp;#34;INT_FAST64_MIN == numeric_limits&amp;lt;int_fast64_t&amp;gt;::min(): &amp;#34;
+            &amp;lt;&amp;lt; std::boolalpha
+            &amp;lt;&amp;lt; (INT_FAST64_MIN == std::numeric_limits&amp;lt;std::int_fast64_t&amp;gt;::min()) &amp;lt;&amp;lt; std::endl;
+  
+  // 型の確認
+  std::int_fast64_t min_value = INT_FAST64_MIN;
+  std::cout &amp;lt;&amp;lt; &amp;#34;型を通したときの値: &amp;#34; &amp;lt;&amp;lt; min_value &amp;lt;&amp;lt; std::endl;
+  
+  // アンダーフローの確認
+  std::int_fast64_t value = INT_FAST64_MIN;
+  std::cout &amp;lt;&amp;lt; &amp;#34;INT_FAST64_MIN: &amp;#34; &amp;lt;&amp;lt; value &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; &amp;#34;INT_FAST64_MIN - 1: &amp;#34; &amp;lt;&amp;lt; value - 1 &amp;lt;&amp;lt; std::endl;
+  
+  return 0;
+}
+```
+
+### 出力例
+```
+INT_FAST64_MIN: -9223372036854775808
+numeric_limits&amp;lt;int_fast64_t&amp;gt;::min(): -9223372036854775808
+INT_FAST64_MIN == numeric_limits&amp;lt;int_fast64_t&amp;gt;::min(): true
+型を通したときの値: -9223372036854775808
+INT_FAST64_MIN: -9223372036854775808
+INT_FAST64_MIN - 1: 9223372036854775807
+```
+
+この出力例は処理系によって異なる場合がある。特に、`int_fast64_t`の実際の型が処理系によって異なる可能性があるため、最小値やアンダーフロー動作も異なることがある。
 
 ## バージョン
 ### 言語
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>rotarymars</name>
        <email>s.goto2050@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>INT_FAST64_MAX -- reference/cstdint/int_fast64_max.md: Created sample program</title>
      <link href="https://cpprefjp.github.io/reference/cstdint/int_fast64_max.html"/>
      <id>d57130512739ec1b5cf71789440e7228709d52e6:reference/cstdint/int_fast64_max.md</id>
      <updated>2025-04-25T12:09:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstdint/int_fast64_max.md b/reference/cstdint/int_fast64_max.md
index c01b4e58a..baf452a18 100644
--- a/reference/cstdint/int_fast64_max.md
+++ b/reference/cstdint/int_fast64_max.md
@@ -8,7 +8,52 @@
 ```
 
 ## 概要
-[`int_fast64_t`](int_fast64_t.md) の最大値。
+[`int_fast64_t`](int_fast64_t.md) の最大値を表す定数。
+
+[`std::numeric_limits`](/reference/limits/numeric_limits.md)`&amp;lt;int_fast64_t&amp;gt;::`[`max()`](/reference/limits/numeric_limits/max.md) と等しい。
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;cstdint&amp;gt;
+#include &amp;lt;limits&amp;gt;
+
+int main()
+{
+  std::cout &amp;lt;&amp;lt; &amp;#34;INT_FAST64_MAX: &amp;#34; &amp;lt;&amp;lt; INT_FAST64_MAX &amp;lt;&amp;lt; std::endl;
+  
+  // numeric_limitsによる値と一致することを確認
+  std::cout &amp;lt;&amp;lt; &amp;#34;numeric_limits&amp;lt;int_fast64_t&amp;gt;::max(): &amp;#34;
+            &amp;lt;&amp;lt; std::numeric_limits&amp;lt;std::int_fast64_t&amp;gt;::max() &amp;lt;&amp;lt; std::endl;
+  
+  std::cout &amp;lt;&amp;lt; &amp;#34;INT_FAST64_MAX == numeric_limits&amp;lt;int_fast64_t&amp;gt;::max(): &amp;#34;
+            &amp;lt;&amp;lt; std::boolalpha
+            &amp;lt;&amp;lt; (INT_FAST64_MAX == std::numeric_limits&amp;lt;std::int_fast64_t&amp;gt;::max()) &amp;lt;&amp;lt; std::endl;
+  
+  // 型の確認
+  std::int_fast64_t max_value = INT_FAST64_MAX;
+  std::cout &amp;lt;&amp;lt; &amp;#34;型を通したときの値: &amp;#34; &amp;lt;&amp;lt; max_value &amp;lt;&amp;lt; std::endl;
+  
+  // オーバーフローの確認
+  std::int_fast64_t value = INT_FAST64_MAX;
+  std::cout &amp;lt;&amp;lt; &amp;#34;INT_FAST64_MAX: &amp;#34; &amp;lt;&amp;lt; value &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; &amp;#34;INT_FAST64_MAX + 1: &amp;#34; &amp;lt;&amp;lt; value + 1 &amp;lt;&amp;lt; std::endl;
+  
+  return 0;
+}
+```
+
+### 出力例
+```
+INT_FAST64_MAX: 9223372036854775807
+numeric_limits&amp;lt;int_fast64_t&amp;gt;::max(): 9223372036854775807
+INT_FAST64_MAX == numeric_limits&amp;lt;int_fast64_t&amp;gt;::max(): true
+型を通したときの値: 9223372036854775807
+INT_FAST64_MAX: 9223372036854775807
+INT_FAST64_MAX + 1: -9223372036854775808
+```
+
+この出力例は処理系によって異なる場合がある。特に、`int_fast64_t`の実際の型が処理系によって異なる可能性があるため、最大値やオーバーフロー動作も異なることがある。
 
 ## バージョン
 ### 言語
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>rotarymars</name>
        <email>s.goto2050@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>int_fast32_t -- reference/cstdint/int_fast32_t.md: Added sample program</title>
      <link href="https://cpprefjp.github.io/reference/cstdint/int_fast32_t.html"/>
      <id>4bfaf75608fd0a80343511fc15e11da5dc357971:reference/cstdint/int_fast32_t.md</id>
      <updated>2025-04-25T11:18:45+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstdint/int_fast32_t.md b/reference/cstdint/int_fast32_t.md
index 1722d6746..d8893f688 100644
--- a/reference/cstdint/int_fast32_t.md
+++ b/reference/cstdint/int_fast32_t.md
@@ -16,6 +16,55 @@ namespace std {
 
 [`int32_t`](int32_t.md)型が環境によっては定義されないため、そのような状況でこの型を使用する。
 
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;cstdint&amp;gt;
+#include &amp;lt;type_traits&amp;gt;
+#include &amp;lt;limits&amp;gt;
+
+int main()
+{
+  // int_fast32_tの使用例
+  std::int_fast32_t value = 1234567890;
+  
+  // 値を出力
+  std::cout &amp;lt;&amp;lt; &amp;#34;value: &amp;#34; &amp;lt;&amp;lt; value &amp;lt;&amp;lt; std::endl;
+  
+  // サイズを確認（処理系によって異なる可能性がある）
+  std::cout &amp;lt;&amp;lt; &amp;#34;size of int_fast32_t: &amp;#34; &amp;lt;&amp;lt; sizeof(std::int_fast32_t) &amp;lt;&amp;lt; &amp;#34; bytes&amp;#34; &amp;lt;&amp;lt; std::endl;
+  
+  // 最小値と最大値
+  std::cout &amp;lt;&amp;lt; &amp;#34;minimum value: &amp;#34; &amp;lt;&amp;lt; std::numeric_limits&amp;lt;std::int_fast32_t&amp;gt;::min() &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; &amp;#34;maximum value: &amp;#34; &amp;lt;&amp;lt; std::numeric_limits&amp;lt;std::int_fast32_t&amp;gt;::max() &amp;lt;&amp;lt; std::endl;
+  
+  // int32_tとの比較
+  std::cout &amp;lt;&amp;lt; &amp;#34;int_fast32_t is the same as int32_t: &amp;#34; 
+            &amp;lt;&amp;lt; std::is_same&amp;lt;std::int_fast32_t, std::int32_t&amp;gt;::value &amp;lt;&amp;lt; std::endl;
+            
+  // 演算の例（オーバーフローに注意）
+  std::int_fast32_t a = 2000000000;
+  std::int_fast32_t b = 1000000000;
+  std::int_fast32_t sum = a + b;  // 処理系によってはオーバーフローの可能性あり
+  
+  std::cout &amp;lt;&amp;lt; &amp;#34;2000000000 + 1000000000 = &amp;#34; &amp;lt;&amp;lt; sum &amp;lt;&amp;lt; std::endl;
+  
+  return 0;
+}
+```
+
+### 出力例
+```
+value: 1234567890
+size of int_fast32_t: 4 bytes
+minimum value: -2147483648
+maximum value: 2147483647
+int_fast32_t is the same as int32_t: 0
+2000000000 + 1000000000 = -1294967296
+```
+
+この出力例は特定の環境に依存しており、処理系によって異なる可能性があります。特に、`int_fast32_t`のサイズやオーバーフロー動作は処理系によって異なることがある。
+
 ## バージョン
 ### 言語
 - C++11
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>rotarymars</name>
        <email>s.goto2050@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>INT_FAST32_MIN -- reference/cstdint/int_fast32_min.md: Created sample program</title>
      <link href="https://cpprefjp.github.io/reference/cstdint/int_fast32_min.html"/>
      <id>4bc9af54fa0f656bfecb75f7a75688b7e4ea1c4c:reference/cstdint/int_fast32_min.md</id>
      <updated>2025-04-25T11:12:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstdint/int_fast32_min.md b/reference/cstdint/int_fast32_min.md
index 405db6e92..60e4457d9 100644
--- a/reference/cstdint/int_fast32_min.md
+++ b/reference/cstdint/int_fast32_min.md
@@ -8,7 +8,52 @@
 ```
 
 ## 概要
-[`int_fast32_t`](int_fast32_t.md) の最小値。
+[`int_fast32_t`](int_fast32_t.md) の最小値を表す定数。
+
+[`std::numeric_limits`](/reference/limits/numeric_limits.md)`&amp;lt;int_fast32_t&amp;gt;::`[`min()`](/reference/limits/numeric_limits/min.md) と等しい。
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;cstdint&amp;gt;
+#include &amp;lt;limits&amp;gt;
+
+int main()
+{
+  std::cout &amp;lt;&amp;lt; &amp;#34;INT_FAST32_MIN: &amp;#34; &amp;lt;&amp;lt; INT_FAST32_MIN &amp;lt;&amp;lt; std::endl;
+  
+  // numeric_limitsによる値と一致することを確認
+  std::cout &amp;lt;&amp;lt; &amp;#34;numeric_limits&amp;lt;int_fast32_t&amp;gt;::min(): &amp;#34;
+            &amp;lt;&amp;lt; std::numeric_limits&amp;lt;std::int_fast32_t&amp;gt;::min() &amp;lt;&amp;lt; std::endl;
+  
+  std::cout &amp;lt;&amp;lt; &amp;#34;INT_FAST32_MIN == numeric_limits&amp;lt;int_fast32_t&amp;gt;::min(): &amp;#34;
+            &amp;lt;&amp;lt; std::boolalpha
+            &amp;lt;&amp;lt; (INT_FAST32_MIN == std::numeric_limits&amp;lt;std::int_fast32_t&amp;gt;::min()) &amp;lt;&amp;lt; std::endl;
+  
+  // 型の確認
+  std::int_fast32_t min_value = INT_FAST32_MIN;
+  std::cout &amp;lt;&amp;lt; &amp;#34;型を通したときの値: &amp;#34; &amp;lt;&amp;lt; min_value &amp;lt;&amp;lt; std::endl;
+  
+  // アンダーフローの確認
+  std::int_fast32_t value = INT_FAST32_MIN;
+  std::cout &amp;lt;&amp;lt; &amp;#34;INT_FAST32_MIN: &amp;#34; &amp;lt;&amp;lt; value &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; &amp;#34;INT_FAST32_MIN - 1: &amp;#34; &amp;lt;&amp;lt; value - 1 &amp;lt;&amp;lt; std::endl;
+  
+  return 0;
+}
+```
+
+### 出力例
+```
+INT_FAST32_MIN: -2147483648
+numeric_limits&amp;lt;int_fast32_t&amp;gt;::min(): -2147483648
+INT_FAST32_MIN == numeric_limits&amp;lt;int_fast32_t&amp;gt;::min(): true
+型を通したときの値: -2147483648
+INT_FAST32_MIN: -2147483648
+INT_FAST32_MIN - 1: 2147483647
+```
+
+この出力例は処理系によって異なる場合がある。特に、`int_fast32_t`の実際の型が処理系によって異なる可能性があるため、最小値やアンダーフロー動作も異なることがある。
 
 ## バージョン
 ### 言語
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>rotarymars</name>
        <email>s.goto2050@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>INT_FAST32_MAX -- reference/cstdint/int_fast32_max.md: Created sample program</title>
      <link href="https://cpprefjp.github.io/reference/cstdint/int_fast32_max.html"/>
      <id>84b6c7375c4cd9d82bae4f023599a34fb59f7b5d:reference/cstdint/int_fast32_max.md</id>
      <updated>2025-04-25T11:00:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstdint/int_fast32_max.md b/reference/cstdint/int_fast32_max.md
index f864bcb2a..771414cc5 100644
--- a/reference/cstdint/int_fast32_max.md
+++ b/reference/cstdint/int_fast32_max.md
@@ -8,7 +8,52 @@
 ```
 
 ## 概要
-[`int_fast32_t`](int_fast32_t.md) の最大値。
+[`int_fast32_t`](int_fast32_t.md) の最大値を表す定数。
+
+[`std::numeric_limits`](/reference/limits/numeric_limits.md)`&amp;lt;int_fast32_t&amp;gt;::`[`max()`](/reference/limits/numeric_limits/max.md) と等しい。
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;cstdint&amp;gt;
+#include &amp;lt;limits&amp;gt;
+
+int main()
+{
+  std::cout &amp;lt;&amp;lt; &amp;#34;INT_FAST32_MAX: &amp;#34; &amp;lt;&amp;lt; INT_FAST32_MAX &amp;lt;&amp;lt; std::endl;
+  
+  // numeric_limitsによる値と一致することを確認
+  std::cout &amp;lt;&amp;lt; &amp;#34;numeric_limits&amp;lt;int_fast32_t&amp;gt;::max(): &amp;#34;
+            &amp;lt;&amp;lt; std::numeric_limits&amp;lt;std::int_fast32_t&amp;gt;::max() &amp;lt;&amp;lt; std::endl;
+  
+  std::cout &amp;lt;&amp;lt; &amp;#34;INT_FAST32_MAX == numeric_limits&amp;lt;int_fast32_t&amp;gt;::max(): &amp;#34;
+            &amp;lt;&amp;lt; std::boolalpha
+            &amp;lt;&amp;lt; (INT_FAST32_MAX == std::numeric_limits&amp;lt;std::int_fast32_t&amp;gt;::max()) &amp;lt;&amp;lt; std::endl;
+  
+  // 型の確認
+  std::int_fast32_t max_value = INT_FAST32_MAX;
+  std::cout &amp;lt;&amp;lt; &amp;#34;型を通したときの値: &amp;#34; &amp;lt;&amp;lt; max_value &amp;lt;&amp;lt; std::endl;
+  
+  // オーバーフローの確認
+  std::int_fast32_t value = INT_FAST32_MAX;
+  std::cout &amp;lt;&amp;lt; &amp;#34;INT_FAST32_MAX: &amp;#34; &amp;lt;&amp;lt; value &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; &amp;#34;INT_FAST32_MAX + 1: &amp;#34; &amp;lt;&amp;lt; value + 1 &amp;lt;&amp;lt; std::endl;
+  
+  return 0;
+}
+```
+
+### 出力例
+```
+INT_FAST32_MAX: 2147483647
+numeric_limits&amp;lt;int_fast32_t&amp;gt;::max(): 2147483647
+INT_FAST32_MAX == numeric_limits&amp;lt;int_fast32_t&amp;gt;::max(): true
+型を通したときの値: 2147483647
+INT_FAST32_MAX: 2147483647
+INT_FAST32_MAX + 1: -2147483648
+```
+
+この出力例は処理系によって異なる場合がある。特に、`int_fast32_t`の実際の型が処理系によって異なる可能性があるため、最大値やオーバーフロー動作も異なることがある。
 
 ## バージョン
 ### 言語
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>rotarymars</name>
        <email>s.goto2050@gmail.com</email>
      </author>
    </entry>
  
</feed>
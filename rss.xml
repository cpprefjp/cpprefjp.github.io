<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2020-05-22T02:12:11.846306</updated>
  <id>b2f4f978-55cf-4caf-bab9-2adf6c9e3eea</id>

  
    <entry>
      <title>enable_shared_from_this -- Merge pull request #761 from ysk24ok/fix_typo_in_enable_shared_from_this</title>
      <link href="https://cpprefjp.github.io/reference/memory/enable_shared_from_this.html"/>
      <id>2be092b30694710082db7d624fa8be12b8404275:reference/memory/enable_shared_from_this.md</id>
      <updated>2020-05-22T11:08:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/memory/enable_shared_from_this.md b/reference/memory/enable_shared_from_this.md
index 587119a1f..bec49a50c 100644
--- a/reference/memory/enable_shared_from_this.md
+++ b/reference/memory/enable_shared_from_this.md
@@ -12,7 +12,7 @@ namespace std {
 ```
 
 ## 概要
-`enable_shared_from_this`は、[`shared_ptr`](/reference/memory/shared_ptr.md)で関しているオブジェクトの`this`ポインタを、[`shared_ptr`](/reference/memory/shared_ptr.md)として扱うことを可能にするためのクラスである。
+`enable_shared_from_this`は、[`shared_ptr`](/reference/memory/shared_ptr.md)で管理しているオブジェクトの`this`ポインタを、[`shared_ptr`](/reference/memory/shared_ptr.md)として扱うことを可能にするためのクラスである。
 
 `this`ポインタを単純に`shared_ptr&amp;lt;T&amp;gt;(this)`としてしまうと、参照カウントが増えず、`delete`が2重に呼ばれてしまいバグを引き起こすことになるため、そうならないようにこのクラスを使用して`this`を扱う。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>enable_shared_from_this -- Fix typo in reference/memory/enable_shared_from_this.md</title>
      <link href="https://cpprefjp.github.io/reference/memory/enable_shared_from_this.html"/>
      <id>168f3d2fe822735949e4e30fabe05d354d88fd4a:reference/memory/enable_shared_from_this.md</id>
      <updated>2020-05-22T09:39:45+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/memory/enable_shared_from_this.md b/reference/memory/enable_shared_from_this.md
index 587119a1f..bec49a50c 100644
--- a/reference/memory/enable_shared_from_this.md
+++ b/reference/memory/enable_shared_from_this.md
@@ -12,7 +12,7 @@ namespace std {
 ```
 
 ## 概要
-`enable_shared_from_this`は、[`shared_ptr`](/reference/memory/shared_ptr.md)で関しているオブジェクトの`this`ポインタを、[`shared_ptr`](/reference/memory/shared_ptr.md)として扱うことを可能にするためのクラスである。
+`enable_shared_from_this`は、[`shared_ptr`](/reference/memory/shared_ptr.md)で管理しているオブジェクトの`this`ポインタを、[`shared_ptr`](/reference/memory/shared_ptr.md)として扱うことを可能にするためのクラスである。
 
 `this`ポインタを単純に`shared_ptr&amp;lt;T&amp;gt;(this)`としてしまうと、参照カウントが増えず、`delete`が2重に呼ばれてしまいバグを引き起こすことになるため、そうならないようにこのクラスを使用して`this`を扱う。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yusuke NISHIOKA</name>
        <email>yusuke.nishioka@retrieva.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>gcd -- gcd : コピペミスを修正</title>
      <link href="https://cpprefjp.github.io/reference/numeric/gcd.html"/>
      <id>821c055e85acf54e5d23f0943adef4bdd09b6cd9:reference/numeric/gcd.md</id>
      <updated>2020-05-19T18:19:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/numeric/gcd.md b/reference/numeric/gcd.md
index b3a2f6bac..5c979c673 100644
--- a/reference/numeric/gcd.md
+++ b/reference/numeric/gcd.md
@@ -85,7 +85,7 @@ gcd&amp;lt;int32_t, int32_t&amp;gt;(-2147483648, -2147483648)   -2147483648
 gcd&amp;lt;uint32_t, uint32_t&amp;gt;(-2147483648, -2147483648) 2147483648
 ```
 
-### 3つ以上の値に対する最小公倍数を求める
+### 3つ以上の値に対する最大公約数を求める
 ```cpp example
 #include &amp;lt;cassert&amp;gt;
 #include &amp;lt;numeric&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>gcd -- gcd, lcm : サンプルコードをWandbox実行できるよう修正</title>
      <link href="https://cpprefjp.github.io/reference/numeric/gcd.html"/>
      <id>e3824c20dfdd6b92c44ed6913e8ad1e07d138d25:reference/numeric/gcd.md</id>
      <updated>2020-05-19T18:05:10+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/numeric/gcd.md b/reference/numeric/gcd.md
index b281374e8..b3a2f6bac 100644
--- a/reference/numeric/gcd.md
+++ b/reference/numeric/gcd.md
@@ -55,7 +55,7 @@ int main() {
 ```
 
 ### 負の最大公約数
-```cpp
+```cpp example
 #include &amp;lt;iostream&amp;gt;
 #include &amp;lt;numeric&amp;gt;
 #include &amp;lt;cstdint&amp;gt;
@@ -86,7 +86,7 @@ gcd&amp;lt;uint32_t, uint32_t&amp;gt;(-2147483648, -2147483648) 2147483648
 ```
 
 ### 3つ以上の値に対する最小公倍数を求める
-```cpp
+```cpp example
 #include &amp;lt;cassert&amp;gt;
 #include &amp;lt;numeric&amp;gt;
 #include &amp;lt;vector&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>lcm -- gcd, lcm : サンプルコードをWandbox実行できるよう修正</title>
      <link href="https://cpprefjp.github.io/reference/numeric/lcm.html"/>
      <id>e3824c20dfdd6b92c44ed6913e8ad1e07d138d25:reference/numeric/lcm.md</id>
      <updated>2020-05-19T18:05:10+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/numeric/lcm.md b/reference/numeric/lcm.md
index 1e0942dd3..9f016c24b 100644
--- a/reference/numeric/lcm.md
+++ b/reference/numeric/lcm.md
@@ -62,7 +62,7 @@ int main() {
 ```
 
 ### オーバーフローしやすい状況の例
-```cpp
+```cpp example
 #include &amp;lt;iostream&amp;gt;
 #include &amp;lt;cstdint&amp;gt;
 #include &amp;lt;numeric&amp;gt;
@@ -95,7 +95,7 @@ improved lcm(20000, 40000) 40000
 ```
 
 ### 3つ以上の値に対する最小公倍数を求める
-```cpp
+```cpp example
 #include &amp;lt;cassert&amp;gt;
 #include &amp;lt;numeric&amp;gt;
 #include &amp;lt;vector&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>lcm -- lcm : 実装で使用されている実装について記載</title>
      <link href="https://cpprefjp.github.io/reference/numeric/lcm.html"/>
      <id>29e6175e8fa449dcddb76c56755988dea70f7306:reference/numeric/lcm.md</id>
      <updated>2020-05-19T18:00:33+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/numeric/lcm.md b/reference/numeric/lcm.md
index 2a2e31261..1e0942dd3 100644
--- a/reference/numeric/lcm.md
+++ b/reference/numeric/lcm.md
@@ -35,6 +35,11 @@ namespace std {
 投げない。
 
 
+## 備考
+- この関数は、公式通りに `abs(m * n) / gcd(m, n)` として実装すると、`m * n`の箇所でオーバーフローしやすい。実装によっては、式を改良することでオーバーフローしにくいようになっている場合がある
+    - GCC (libstdc++), Clang (libc++), Visual C++ : オーバーフローしにくい改良版の式として`abs(m) / gcd(m, n) * abs(n)`という実装が使用されている
+
+
 ## 例
 ### 基本的な使い方
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
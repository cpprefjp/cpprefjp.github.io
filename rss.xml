<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2024-04-15T14:39:13.685932</updated>
  <id>844191da-780c-49f5-82c7-8e426cd84235</id>

  
    <entry>
      <title>parent_path -- parent_path() : パス名末尾/の挙動について追記</title>
      <link href="https://cpprefjp.github.io/reference/filesystem/path/parent_path.html"/>
      <id>ee8e4dcb4e6cbedc3d0bfa3f3903137349bcc2fd:reference/filesystem/path/parent_path.md</id>
      <updated>2024-04-15T14:46:20+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/filesystem/path/parent_path.md b/reference/filesystem/path/parent_path.md
index 70f644153..54dbd7913 100644
--- a/reference/filesystem/path/parent_path.md
+++ b/reference/filesystem/path/parent_path.md
@@ -32,6 +32,7 @@ int main()
   fs::path ps[] = {
     &amp;#34;/foo/bar.txt&amp;#34;, // ファイル名を含むパス
     &amp;#34;/foo/bar/&amp;#34;,    // ディレクトリパス
+    &amp;#34;/foo/bar&amp;#34;,     // ディレクトリパス（末尾/なし）
     &amp;#34;/&amp;#34;             // ルートパスのみ (ルートパスの親はルートパスなのでそのまま返る)
   };
 
@@ -46,6 +47,7 @@ int main()
 ```
 &amp;#34;/foo/bar.txt&amp;#34; : &amp;#34;/foo&amp;#34;
 &amp;#34;/foo/bar/&amp;#34; : &amp;#34;/foo/bar&amp;#34;
+&amp;#34;/foo/bar&amp;#34; : &amp;#34;/foo&amp;#34;
 &amp;#34;/&amp;#34; : &amp;#34;/&amp;#34;
 ```
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>nextafter -- Merge pull request #1266 from yknishidate/master</title>
      <link href="https://cpprefjp.github.io/reference/cmath/nextafter.html"/>
      <id>c18cdd781de7d8c2792f9f24fe83a0931700a6df:reference/cmath/nextafter.md</id>
      <updated>2024-04-11T21:00:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/nextafter.md b/reference/cmath/nextafter.md
index abecec649..f7c91349f 100644
--- a/reference/cmath/nextafter.md
+++ b/reference/cmath/nextafter.md
@@ -61,7 +61,7 @@ namespace std {
 
 
 ## 戻り値
-パラメータ`x`の値をパラメータ`x`の方向に、表現可能な最小の値だけ進めた値を返す。
+パラメータ`x`の値をパラメータ`y`の方向に、表現可能な最小の値だけ進めた値を返す。
 
 `x`と`y`が等値である場合、`y`を返す。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>nextafter -- nextafterの説明を修正</title>
      <link href="https://cpprefjp.github.io/reference/cmath/nextafter.html"/>
      <id>329b44ce48b582b4ca9c35fdb311eaa446be0017:reference/cmath/nextafter.md</id>
      <updated>2024-04-11T08:11:45+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/nextafter.md b/reference/cmath/nextafter.md
index abecec649..f7c91349f 100644
--- a/reference/cmath/nextafter.md
+++ b/reference/cmath/nextafter.md
@@ -61,7 +61,7 @@ namespace std {
 
 
 ## 戻り値
-パラメータ`x`の値をパラメータ`x`の方向に、表現可能な最小の値だけ進めた値を返す。
+パラメータ`x`の値をパラメータ`y`の方向に、表現可能な最小の値だけ進めた値を返す。
 
 `x`と`y`が等値である場合、`y`を返す。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuki Nishidate</name>
        <email>asta18425@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>read -- Add links to basic_istream/read.md</title>
      <link href="https://cpprefjp.github.io/reference/istream/basic_istream/read.html"/>
      <id>02654819aabef357f7e08a1a38297e049613767c:reference/istream/basic_istream/read.md</id>
      <updated>2024-04-07T21:44:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/istream/basic_istream/read.md b/reference/istream/basic_istream/read.md
index 829f0e153..ffd997e0e 100644
--- a/reference/istream/basic_istream/read.md
+++ b/reference/istream/basic_istream/read.md
@@ -15,14 +15,14 @@ basic_istream&amp;lt;CharT, Traits&amp;gt;&amp;amp; read(char_type* s, streamsize n);
 実引数として配列要素へのポインタ`s`とその要素数`n`を受け取る。
 [`get`](get.md)メンバ関数などと異なり、`s`の末尾にヌル文字を書き込む処理がない。
 
-また、`n`文字より少ない段階でEOFに達した場合を入力失敗として扱う（`failbit`を立てる）点も、他の多くのメンバ関数と異なる。
+また、`n`文字より少ない段階でEOFに達した場合を入力失敗として扱う（[`failbit`](../../ios/ios_base/type-iostate.md)を立てる）点も、他の多くのメンバ関数と異なる。
 
 ## 効果
-1. `sentry`オブジェクトを構築する。`sentry`オブジェクトが失敗を示した場合、何もしない。
-1. `good()`メンバ関数を呼び出して`false`であったら、`setstate(failbit)`を呼び出して終了する。
+1. [`sentry`](sentry.md)オブジェクトを構築する。[`sentry`](sentry.md)オブジェクトが失敗を示した場合、何もしない。
+1. [`good`](../../ios/basic_ios/good.md)`()`メンバ関数を呼び出して`false`であったら、[`setstate`](../../ios/basic_ios/setstate.md)`(`[`failbit`](../../ios/ios_base/type-iostate.md)`)`を呼び出して終了する。
 1. 以下のいずれかを満たすまで、文字を入力して書き込む。
     - 実引数で指定された`n`文字まで入力した。
-    - EOFに達した。この場合、`setstate(failbit | eofbit)`を呼び出す。
+    - EOFに達した。この場合、[`setstate`](../../ios/basic_ios/setstate.md)`(`[`failbit`](../../ios/ios_base/type-iostate.md)` | `[`eofbit`](../../ios/ios_base/type-iostate.md)`)`を呼び出す。
 
 ## 戻り値
 `*this`
@@ -84,6 +84,12 @@ basic_istream&amp;lt;CharT, Traits&amp;gt;&amp;amp; read(char_type* s, streamsize n) {
   return *this;
 }
 ```
+* iostate[link ../../ios/ios_base/type-iostate.md]
+* failbit[link ../../ios/ios_base/type-iostate.md]
+* eofbit[link ../../ios/ios_base/type-iostate.md]
+* sentry[link sentry.md]
+* good[link ../../ios/basic_ios/good.md]
+* setstate[link ../../ios/basic_ios/setstate.md]
 
 ## バージョン
 ### 言語
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>enumerate_view -- Update enumerate_view.md</title>
      <link href="https://cpprefjp.github.io/reference/ranges/enumerate_view.html"/>
      <id>ea628fa7aba80cecce9af40d6ef9da8dbae9e0d6:reference/ranges/enumerate_view.md</id>
      <updated>2024-04-07T19:32:10+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/enumerate_view.md b/reference/ranges/enumerate_view.md
index 9f9682c54..86e2d9003 100644
--- a/reference/ranges/enumerate_view.md
+++ b/reference/ranges/enumerate_view.md
@@ -21,7 +21,7 @@ namespace std::ranges {
 
 `enumerate_view`はインデックスを付ける[`view`](view.md)。
 
-`enumerate_view`の要素は、インデックスと元のRangeの要素からなる[`tuple`](/reference/tuple/tuple.md)である。
+`enumerate_view`の要素は、インデックスと元のRangeの要素からなる[`tuple`](/reference/tuple/tuple.md) ([`tuple`](/reference/tuple/tuple.md)`&amp;lt;`[`range_difference_t`](range_difference_t.md)`&amp;lt;Base&amp;gt;, `[`range_value_t`](range_value_t.md)`&amp;lt;Base&amp;gt;&amp;gt;`)である。
 
 - (1): `enumerate_view`のクラス定義
 - (2): `enumerate_view`を生成するRangeアダプタオブジェクト
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
</feed>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2020-11-04T11:13:21.945047</updated>
  <id>0b048fd0-ba63-4c08-ae4a-502bca897581</id>

  
    <entry>
      <title>operator local_days -- year_month_weekday_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day/op_local_days.html"/>
      <id>33b32b7353d7951903347996f873c7496a59925b:reference/chrono/year_month_day/op_local_days.md</id>
      <updated>2020-11-04T20:09:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day/op_local_days.md b/reference/chrono/year_month_day/op_local_days.md
index 5045f69dd..dc9362328 100644
--- a/reference/chrono/year_month_day/op_local_days.md
+++ b/reference/chrono/year_month_day/op_local_days.md
@@ -39,15 +39,15 @@ using namespace std::chrono_literals;
 
 int main()
 {
-  // year_month_dayからlocal_daysへの暗黙変換
-  chrono::local_days date {2020y/3/1};
+  // year_month_dayからlocal_daysへの明示的変換
+  chrono::local_days date{2020y/3/1};
   std::cout &amp;lt;&amp;lt; date &amp;lt;&amp;lt; std::endl;
 
   // 日だけ範囲外に大きくなった場合でも、ローカル日付を求められる
-  chrono::local_days over_day {2019y/2/29};
+  chrono::local_days over_day{2019y/2/29};
   std::cout &amp;lt;&amp;lt; over_day &amp;lt;&amp;lt; std::endl;
 
-  chrono::local_days over_min_day {2020y/1/0};
+  chrono::local_days over_min_day{2020y/1/0};
   std::cout &amp;lt;&amp;lt; over_min_day &amp;lt;&amp;lt; std::endl;
 }
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator local_days -- year_month_weekday_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day_last/op_local_days.html"/>
      <id>33b32b7353d7951903347996f873c7496a59925b:reference/chrono/year_month_day_last/op_local_days.md</id>
      <updated>2020-11-04T20:09:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day_last/op_local_days.md b/reference/chrono/year_month_day_last/op_local_days.md
index fbc85a9db..399ab3c09 100644
--- a/reference/chrono/year_month_day_last/op_local_days.md
+++ b/reference/chrono/year_month_day_last/op_local_days.md
@@ -33,7 +33,6 @@ using namespace std::chrono_literals;
 
 int main()
 {
-  // year_month_day_lastからlocal_daysへの暗黙変換
   chrono::local_days date {2020y/2/chrono::last};
   std::cout &amp;lt;&amp;lt; date &amp;lt;&amp;lt; std::endl;
 }
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>formatter -- year_month_weekday_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/formatter.html"/>
      <id>33b32b7353d7951903347996f873c7496a59925b:reference/chrono/year_month_weekday/formatter.md</id>
      <updated>2020-11-04T20:09:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/formatter.md b/reference/chrono/year_month_weekday/formatter.md
index a560a3859..9e3624c77 100644
--- a/reference/chrono/year_month_weekday/formatter.md
+++ b/reference/chrono/year_month_weekday/formatter.md
@@ -39,6 +39,7 @@ int main() {
 * std::format[link /reference/chrono/format.md]
 * std::locale[link /reference/locale/locale.md]
 * 2020y[link /reference/chrono/year/op_y.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator local_days -- year_month_weekday_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/op_local_days.html"/>
      <id>33b32b7353d7951903347996f873c7496a59925b:reference/chrono/year_month_weekday/op_local_days.md</id>
      <updated>2020-11-04T20:09:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/op_local_days.md b/reference/chrono/year_month_weekday/op_local_days.md
index 2a6d3a91f..3b96c571a 100644
--- a/reference/chrono/year_month_weekday/op_local_days.md
+++ b/reference/chrono/year_month_weekday/op_local_days.md
@@ -33,7 +33,6 @@ using namespace std::chrono_literals;
 
 int main()
 {
-  // year_month_dayからlocal_daysへの暗黙変換
   chrono::local_days date1{2020y/3/chrono::Sunday[1]};
   assert(chrono::year_month_day{date1} == 2020y/3/1);
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>year_month_weekday_last -- year_month_weekday_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday_last.html"/>
      <id>33b32b7353d7951903347996f873c7496a59925b:reference/chrono/year_month_weekday_last.md</id>
      <updated>2020-11-04T20:09:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday_last.md b/reference/chrono/year_month_weekday_last.md
index d31be4a4b..6fe32ef01 100644
--- a/reference/chrono/year_month_weekday_last.md
+++ b/reference/chrono/year_month_weekday_last.md
@@ -25,7 +25,7 @@ namespace std::chrono {
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`(constructor)`](year_month_weekday_last/op_constructor.md.nolink) | コンストラクタ | C++20 |
+| [`(constructor)`](year_month_weekday_last/op_constructor.md) | コンストラクタ | C++20 |
 | `year_month_weekday_last&amp;amp; operator=(const year_month_weekday_last&amp;amp;) = default;`&amp;lt;br/&amp;gt; `year_month_weekday_last&amp;amp; operator=(year_month_weekday_last&amp;amp;&amp;amp;) = default;` | 代入演算子 | C++20 |
 
 
@@ -33,33 +33,33 @@ namespace std::chrono {
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`operator+=`](year_month_weekday_last/op_plus_assign.md.nolink)  | 加算の複合代入 | C++20 |
-| [`operator-=`](year_month_weekday_last/op_minus_assign.md.nolink) | 減算の複合代入 | C++20 |
+| [`operator+=`](year_month_weekday_last/op_plus_assign.md)  | 加算の複合代入 | C++20 |
+| [`operator-=`](year_month_weekday_last/op_minus_assign.md) | 減算の複合代入 | C++20 |
 
 
 ### 観測
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`year`](year_month_weekday_last/year.md.nolink)       | 年要素を取得する | C++20 |
-| [`month`](year_month_weekday_last/month.md.nolink)     | 月要素を取得する | C++20 |
-| [`weekday`](year_month_weekday_last/weekday.md.nolink) | 曜日要素を取得する | C++20 |
-| [`weekday_last`](year_month_weekday_last/weekday_last.md.nolink) | 月の最終曜日要素を取得する | C++20 |
+| [`year`](year_month_weekday_last/year.md)       | 年要素を取得する | C++20 |
+| [`month`](year_month_weekday_last/month.md)     | 月要素を取得する | C++20 |
+| [`weekday`](year_month_weekday_last/weekday.md) | 曜日要素を取得する | C++20 |
+| [`weekday_last`](year_month_weekday_last/weekday_last.md) | 月の最終曜日要素を取得する | C++20 |
 
 
 ### 変換
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`operator sys_days`](year_month_weekday_last/op_sys_days.md.nolink)     | システム時間の日付への型変換演算子 | C++20 |
-| [`operator local_days`](year_month_weekday_last/op_local_days.md.nolink) | ローカル時間の日付への型変換演算子 | C++20 |
+| [`operator sys_days`](year_month_weekday_last/op_sys_days.md)     | システム時間の日付への型変換演算子 | C++20 |
+| [`operator local_days`](year_month_weekday_last/op_local_days.md) | ローカル時間の日付への型変換演算子 | C++20 |
 
 
 ### 検証
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`ok`](year_month_weekday_last/ok.md.nolink) | 値が範囲に収まっているか判定する | C++20 |
+| [`ok`](year_month_weekday_last/ok.md) | 値が範囲に収まっているか判定する | C++20 |
 
 
 ## 非メンバ関数
@@ -67,15 +67,15 @@ namespace std::chrono {
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`operator+`](year_month_weekday_last/op_plus.md.nolink)  | 加算 | C++20 |
-| [`operator-`](year_month_weekday_last/op_minus.md.nolink) | 減算 | C++20 |
+| [`operator+`](year_month_weekday_last/op_plus.md)  | 加算 | C++20 |
+| [`operator-`](year_month_weekday_last/op_minus.md) | 減算 | C++20 |
 
 
 ### 比較演算
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`operator==`](year_month_weekday_last/op_equal.md.nolink) | 等値比較を行う | C++20 |
+| [`operator==`](year_month_weekday_last/op_equal.md) | 等値比較を行う | C++20 |
 | `bool operator!=(const year_month_weekday_last&amp;amp;, const year_month_weekday_last&amp;amp;) noexcept;` | 非等値比較を行う (`==`により使用可能) | C++20 |
 
 
@@ -83,14 +83,14 @@ namespace std::chrono {
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`operator&amp;lt;&amp;lt;`](year_month_weekday_last/op_ostream.md.nolink) | 出力ストリームに出力する | C++20 |
+| [`operator&amp;lt;&amp;lt;`](year_month_weekday_last/op_ostream.md) | 出力ストリームに出力する | C++20 |
 
 
 ## 文字列フォーマット
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`formatter`](year_month_weekday_last/formatter.md.nolink) | [`std::formatter`](/reference/format/formatter.md)クラスの特殊化 | C++20 |
+| [`formatter`](year_month_weekday_last/formatter.md) | [`std::formatter`](/reference/format/formatter.md)クラスの特殊化 | C++20 |
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>formatter -- year_month_weekday_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday_last/formatter.html"/>
      <id>33b32b7353d7951903347996f873c7496a59925b:reference/chrono/year_month_weekday_last/formatter.md</id>
      <updated>2020-11-04T20:09:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday_last/formatter.md b/reference/chrono/year_month_weekday_last/formatter.md
new file mode 100644
index 000000000..12ff5ce70
--- /dev/null
+++ b/reference/chrono/year_month_weekday_last/formatter.md
@@ -0,0 +1,63 @@
+# formatter
+* chrono[meta header]
+* std[meta namespace]
+* class[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std {
+  template &amp;lt;class charT&amp;gt;
+  struct formatter&amp;lt;chrono::year_month_weekday_last, charT&amp;gt;;
+}
+```
+
+## 概要
+`year_month_weekday_last`クラスに対する[`std::formatter`](/reference/format/formatter.md)クラステンプレートの特殊化。
+
+[`month`](/reference/chrono/month/formatter.md)、[`year`](/reference/chrono/year/formatter.md)で利用可能なフォーマットフラグを使用できる。
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+#include &amp;lt;format&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main() {
+  chrono::year_month_weekday_last date = 2020y/2/chrono::Sunday[chrono::last];
+
+  // デフォルトフォーマットはoperator&amp;lt;&amp;lt;と同じ
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;1 : {}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;2 : {:%Y/%b}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;3 : {:%Y年%m月}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+}
+```
+* std::format[link /reference/chrono/format.md]
+* std::locale[link /reference/locale/locale.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* chrono::last[link /reference/chrono/last_spec.md]
+
+### 出力
+```
+1 : 2020/Mar/Sun[last]
+2 : 2020/Mar
+3 : 2020年03月
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): (9.0時点で実装なし)
+- [GCC](/implementation.md#gcc): (9.2時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 関連項目
+- [chronoの`std::format()`](/reference/chrono/format.md) (フォーマットの詳細)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>month -- year_month_weekday_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday_last/month.html"/>
      <id>33b32b7353d7951903347996f873c7496a59925b:reference/chrono/year_month_weekday_last/month.md</id>
      <updated>2020-11-04T20:09:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday_last/month.md b/reference/chrono/year_month_weekday_last/month.md
new file mode 100644
index 000000000..b012d935e
--- /dev/null
+++ b/reference/chrono/year_month_weekday_last/month.md
@@ -0,0 +1,54 @@
+# month
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_weekday_last[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr chrono::month month() const noexcept; // (1) C++20
+```
+* chrono::month[link /reference/chrono/month.md]
+
+## 概要
+月要素を取得する。
+
+
+## 戻り値
+コンストラクタで設定されて保持している月オブジェクトを返す。
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::year_month_weekday_last date = 2020y/3/chrono::Sunday[chrono::last];
+  chrono::month m = date.month();
+  assert(m == chrono::March);
+}
+```
+* date.month()[color ff0000]
+* chrono::month[link /reference/chrono/month.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::March[link /reference/chrono/month_constants.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* chrono::last[link /reference/chrono/last_spec.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ok -- year_month_weekday_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday_last/ok.html"/>
      <id>33b32b7353d7951903347996f873c7496a59925b:reference/chrono/year_month_weekday_last/ok.md</id>
      <updated>2020-11-04T20:09:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday_last/ok.md b/reference/chrono/year_month_weekday_last/ok.md
new file mode 100644
index 000000000..fcf6d0ede
--- /dev/null
+++ b/reference/chrono/year_month_weekday_last/ok.md
@@ -0,0 +1,52 @@
+# ok
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_weekday_last[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr bool ok() const noexcept; // (1) C++20
+```
+
+## 概要
+`year_month_weekday_last`オブジェクトの値が有効な日付の範囲内かを判定する。
+
+
+## 戻り値
+以下の全ての条件を満たす場合にこの関数は`true`を返し、そうでなければ`false`を返す：
+
+- [`year()`](year.md)メンバ関数によって返されるオブジェクト`y`の[`ok()`](/reference/chrono/year/ok.md)が`true`
+- [`month()`](month.md)メンバ関数によって返されるオブジェクト`m`の[`ok()`](/reference/chrono/month/ok.md)が`true`
+- [`weekday_last()`](weekday_last.md)メンバ関数によって返されるオブジェクト`wdl`の[`ok()`](/reference/chrono/weekday_last/ok.md)が`true`
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  assert((2020y/3/chrono::Sunday[chrono::last]).ok() == true);
+}
+```
+* ok()[color ff0000]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* chrono::last[link /reference/chrono/last_spec.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- year_month_weekday_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday_last/op_constructor.html"/>
      <id>33b32b7353d7951903347996f873c7496a59925b:reference/chrono/year_month_weekday_last/op_constructor.md</id>
      <updated>2020-11-04T20:09:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday_last/op_constructor.md b/reference/chrono/year_month_weekday_last/op_constructor.md
new file mode 100644
index 000000000..071ebb61a
--- /dev/null
+++ b/reference/chrono/year_month_weekday_last/op_constructor.md
@@ -0,0 +1,73 @@
+# コンストラクタ
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_weekday_last[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+year_month_weekday_last() = delete;                                // (1) C++20
+
+constexpr year_month_weekday_last(
+  const chrono::year&amp;amp; y,
+  const chrono::month&amp;amp; m,
+  const chrono::weekday_last&amp;amp; wdl) noexcept;                       // (2) C++20
+
+year_month_weekday_last(const year_month_weekday_last&amp;amp;) = default; // (3) C++20
+year_month_weekday_last(year_month_weekday_last&amp;amp;&amp;amp;) = default;      // (4) C++20
+```
+* chrono::year[link /reference/chrono/year.md]
+* chrono::month[link /reference/chrono/month.md]
+* chrono::weekday_last[link /reference/chrono/weekday_last.md]
+
+## 概要
+- (1) : デフォルトコンストラクタ。定義されない
+- (2) : 年、月、最終曜日の値をそれぞれ指定して構築する
+- (3) : コピーコンストラクタ
+- (4) : ムーブコンストラクタ
+
+
+## 効果
+- (2) : `y`、`m`、`wdl`をメンバ変数として保持する
+
+
+## 例外
+投げない
+
+
+### 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+using namespace std::chrono;
+
+int main()
+{
+  year_month_weekday_last date1{2020y, March, Sunday[last]};
+  year_month_weekday_last date2{year{2020}, month{3}, Sunday[last]};
+  assert(year_month_day{sys_days{date1}} == 2020y/3/29);
+  assert(year_month_day{sys_days{date2}} == 2020y/3/29);
+}
+```
+* 2020y[link /reference/chrono/year/op_y.md]
+* March[link /reference/chrono/month_constants.md]
+* Sunday[link /reference/chrono/weekday_constants.md]
+* last[link /reference/chrono/last_spec.md]
+* year[link /reference/chrono/year.md]
+* month[link /reference/chrono/month.md]
+* sys_days[link /reference/chrono/sys_time.md]
+* year_month_day[link /reference/chrono/year_month_day.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator== -- year_month_weekday_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday_last/op_equal.html"/>
      <id>33b32b7353d7951903347996f873c7496a59925b:reference/chrono/year_month_weekday_last/op_equal.md</id>
      <updated>2020-11-04T20:09:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday_last/op_equal.md b/reference/chrono/year_month_weekday_last/op_equal.md
new file mode 100644
index 000000000..16b10a891
--- /dev/null
+++ b/reference/chrono/year_month_weekday_last/op_equal.md
@@ -0,0 +1,68 @@
+# operator==
+* chrono[meta header]
+* std::chrono[meta namespace]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  constexpr bool
+    operator==(const year_month_weekday_last&amp;amp; x,
+               const year_month_weekday_last&amp;amp; y) noexcept; // (1) C++20
+}
+```
+
+## 概要
+`year_month_weekday_last`同士の等値比較を行う。
+
+
+## 戻り値
+- (1) :
+
+```cpp
+return x.year() == y.year() &amp;amp;&amp;amp;
+       x.month() == y.month() &amp;amp;&amp;amp;
+       x.weekday_last() == y.weekday_last();
+```
+* year()[link year.md]
+* month()[link month.md]
+* weekday_last()[link weekday_last.md]
+
+
+## 例外
+投げない
+
+
+## 備考
+- この演算子により、`operator!=`が使用可能になる
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+using namespace std::chrono;
+
+int main()
+{
+  assert(2020y/3/Sunday[last] == 2020y/3/Sunday[last]);
+  assert(2020y/2/Sunday[last] != 2020y/3/Sunday[last]);
+}
+```
+* 2020y[link /reference/chrono/year/op_y.md]
+* Sunday[link /reference/chrono/weekday_constants.md]
+* last[link /reference/chrono/last_spec.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator local_days -- year_month_weekday_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday_last/op_local_days.html"/>
      <id>33b32b7353d7951903347996f873c7496a59925b:reference/chrono/year_month_weekday_last/op_local_days.md</id>
      <updated>2020-11-04T20:09:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday_last/op_local_days.md b/reference/chrono/year_month_weekday_last/op_local_days.md
new file mode 100644
index 000000000..25e04097c
--- /dev/null
+++ b/reference/chrono/year_month_weekday_last/op_local_days.md
@@ -0,0 +1,61 @@
+# operator local_days
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_weekday_last[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr explicit operator local_days() const noexcept; // (1) C++20
+```
+* local_days[link /reference/chrono/local_time.md]
+
+## 概要
+`year_month_weekday`オブジェクトをローカル時間の日付に、明示的に型変換する。
+
+
+## 戻り値
+```cpp
+return local_days{sys_days{*this}.time_since_epoch()};
+```
+* local_days[link /reference/chrono/local_time.md]
+* sys_days[link /reference/chrono/sys_time.md]
+* time_since_epoch()[link /reference/chrono/time_point/time_since_epoch.md]
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::local_days date{2020y/3/chrono::Sunday[chrono::last]};
+  assert(chrono::year_month_day{date} == 2020y/3/29);
+}
+```
+* chrono::local_days[link /reference/chrono/local_time.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* chrono::year_month_day[link /reference/chrono/year_month_day.md]
+* chrono::last[link /reference/chrono/last_spec.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 関連項目
+- [`operator sys_days`](op_sys_days.md)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator- -- year_month_weekday_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday_last/op_minus.html"/>
      <id>33b32b7353d7951903347996f873c7496a59925b:reference/chrono/year_month_weekday_last/op_minus.md</id>
      <updated>2020-11-04T20:09:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday_last/op_minus.md b/reference/chrono/year_month_weekday_last/op_minus.md
new file mode 100644
index 000000000..d65595990
--- /dev/null
+++ b/reference/chrono/year_month_weekday_last/op_minus.md
@@ -0,0 +1,63 @@
+# operator-
+* chrono[meta header]
+* std::chrono[meta namespace]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  constexpr year_month_weekday_last
+    operator-(const year_month_weekday_last&amp;amp; ymwdl,
+              const months&amp;amp; dm) noexcept;           // (1) C++20
+  constexpr year_month_weekday_last
+    operator-(const year_month_weekday_last&amp;amp; ymwdl,
+              const years&amp;amp; dy) noexcept;            // (2) C++20
+}
+```
+
+## 概要
+`year_month_weekday_last`の減算を行う。
+
+- (1) : `year_month_weekday_last`から月の時間間隔を減算する
+- (2) : `year_month_weekday_last`から年の時間間隔を減算する
+
+
+## 戻り値
+- (1) : `return ymwdl + (-dm);`
+- (2) : `return ymwdl + (-dy);`
+
+
+## 例外
+投げない
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+using namespace std::chrono;
+
+int main()
+{
+  assert(2020y/4/Sunday[last] - months{1} == 2020y/3/Sunday[last]);
+  assert(2021y/3/Sunday[last] - years{1} == 2020y/3/Sunday[last]);
+}
+```
+* 2020y[link /reference/chrono/year/op_y.md]
+* 2021y[link /reference/chrono/year/op_y.md]
+* Sunday[link /reference/chrono/weekday_constants.md]
+* last[link /reference/chrono/last_spec.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator-= -- year_month_weekday_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday_last/op_minus_assign.html"/>
      <id>33b32b7353d7951903347996f873c7496a59925b:reference/chrono/year_month_weekday_last/op_minus_assign.md</id>
      <updated>2020-11-04T20:09:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday_last/op_minus_assign.md b/reference/chrono/year_month_weekday_last/op_minus_assign.md
new file mode 100644
index 000000000..f46face39
--- /dev/null
+++ b/reference/chrono/year_month_weekday_last/op_minus_assign.md
@@ -0,0 +1,71 @@
+# operator-=
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_weekday_last[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr year_month_weekday_last&amp;amp; operator-=(const months&amp;amp; m) noexcept; // (1) C++20
+constexpr year_month_weekday_last&amp;amp; operator-=(const years&amp;amp; y) noexcept;  // (2) C++20
+```
+
+## 概要
+`year_month_weekday_last`の値に対して減算の複合代入を行う。
+
+- (1) : 月の時間間隔を減算する
+- (2) : 年の時間間隔を減算する
+
+パラメータの型が、カレンダー時間の[`month`](/reference/chrono/month.md)、[`year`](/reference/chrono/year.md)ではなく、時間間隔を表す[`months`](/reference/chrono/duration_aliases.md)、[`years`](/reference/chrono/duration_aliases.md)であることに注意。
+
+
+## 効果
+- (1) : `*this = *this - m`
+- (2) : `*this = *this - y`
+
+
+## 戻り値
+- (1), (2) : `*this`
+
+
+## 例外
+投げない
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::year_month_weekday_last date = 2021y/4/chrono::Sunday[chrono::last];
+
+  date -= chrono::months{1}; // 1ヶ月戻す
+  date -= chrono::years{1};  // 1年戻す
+
+  assert(chrono::year_month_day{chrono::sys_days{date}} == 2020y/3/29);
+}
+```
+* 2019y[link /reference/chrono/year/op_y.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* chrono::last[link /reference/chrono/last_spec.md]
+* chrono::year_month_day[link /reference/chrono/year_month_day.md]
+* chrono::sys_days[link /reference/chrono/sys_time.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;&lt; -- year_month_weekday_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday_last/op_ostream.html"/>
      <id>33b32b7353d7951903347996f873c7496a59925b:reference/chrono/year_month_weekday_last/op_ostream.md</id>
      <updated>2020-11-04T20:09:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday_last/op_ostream.md b/reference/chrono/year_month_weekday_last/op_ostream.md
new file mode 100644
index 000000000..96280d82a
--- /dev/null
+++ b/reference/chrono/year_month_weekday_last/op_ostream.md
@@ -0,0 +1,67 @@
+# operator&amp;lt;&amp;lt;
+* chrono[meta header]
+* std::chrono[meta namespace]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  template &amp;lt;class charT, class traits&amp;gt;
+  std::basic_ostream&amp;lt;charT, traits&amp;gt;&amp;amp;
+    operator&amp;lt;&amp;lt;(std::basic_ostream&amp;lt;charT, traits&amp;gt;&amp;amp; os,
+               const year_month_weekday_last&amp;amp; ymwdl); // (1) C++20
+}
+```
+
+## 概要
+`year_month_weekday_last`オブジェクトを出力ストリームに出力する。
+
+
+## 戻り値
+便宜上のリテラルキャスト`STATICALLY-WIDEN`を導入する。`STATICALLY-WIDEN&amp;lt;charT&amp;gt;(&amp;#34;...&amp;#34;)`は、`charT`が`char`である場合は`&amp;#34;...&amp;#34;`、`charT`が`wchar_t`である場合は`L&amp;#34;...&amp;#34;`を意味する。
+
+- (1) : 以下と等価：
+    ```cpp
+    return os &amp;lt;&amp;lt; format(STATICALLY-WIDEN&amp;lt;charT&amp;gt;(&amp;#34;{}/{}/{}&amp;#34;),
+                        ymwdl.year(), ymwdl.month(), ymwdl.weekday_last());
+    ```
+    * format[link /reference/format/format.md]
+    * ymwdl.year()[link year.md]
+    * ymwdl.month()[link month.md]
+    * ymwdl.weekday_last()[link weekday_last.md]
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  std::cout &amp;lt;&amp;lt; 2020y/3/chrono::Sunday[chrono::last] &amp;lt;&amp;lt; std::endl;
+}
+```
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* chrono::last[link /reference/chrono/last_spec.md]
+
+### 出力
+```
+2020/Mar/Sun[last]
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): (9.0時点で実装なし)
+- [GCC](/implementation.md#gcc): (9.2時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 関連項目
+- [chronoの`std::format()`](/reference/chrono/format.md) (フォーマットの詳細)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator+ -- year_month_weekday_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday_last/op_plus.html"/>
      <id>33b32b7353d7951903347996f873c7496a59925b:reference/chrono/year_month_weekday_last/op_plus.md</id>
      <updated>2020-11-04T20:09:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday_last/op_plus.md b/reference/chrono/year_month_weekday_last/op_plus.md
new file mode 100644
index 000000000..d2f8e8a1a
--- /dev/null
+++ b/reference/chrono/year_month_weekday_last/op_plus.md
@@ -0,0 +1,100 @@
+# operator+
+* chrono[meta header]
+* std::chrono[meta namespace]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  constexpr year_month_weekday
+    operator+(const year_month_weekday_last&amp;amp; ymwdl,
+              const months&amp;amp; dm) noexcept;                     // (1) C++20
+  constexpr year_month_weekday
+    operator+(const months&amp;amp; dm,
+              const year_month_weekday_last&amp;amp; ymwdl) noexcept; // (2) C++20
+
+  constexpr year_month_weekday
+    operator+(const year_month_weekday_last&amp;amp; ymwdl,
+              const years&amp;amp; dy) noexcept;                      // (3) C++20
+  constexpr year_month_weekday
+    operator+(const years&amp;amp; dy,
+              const year_month_weekday_last&amp;amp; ymwdl) noexcept; // (4) C++20
+}
+```
+
+## 概要
+`year_month_weekday_last`の加算を行う。
+
+- (1) : `year_month_weekday_last`に月の時間間隔を加算する
+- (2) : 月の時間間隔に`year_month_weekday_last`を加算する
+- (3) : `year_month_weekday_last`に年の時間間隔を加算する
+- (4) : 年の時間間隔に`year_month_weekday_last`を加算する
+
+
+## 戻り値
+- (1) :
+
+```cpp
+return (ymwdl.year() / ymwdl.month() + dm) / ymwdl.weekday_last();
+```
+* ymwdl.year()[link year.md]
+* ymwdl.month()[link month.md]
+* ymwdl.weekday_last()[link weekday_last.md]
+
+
+- (2) :
+
+```cpp
+return ymwdl + dm;
+```
+
+- (3) :
+
+```cpp
+return (ymwdl.year() + dy) / ywmdl.month() / ywmdl.weekday_last();
+```
+* ymwdl.year()[link year.md]
+* ymwdl.month()[link month.md]
+* ymwdl.weekday_last()[link weekday_last.md]
+
+- (4) :
+
+```cpp
+return ymwdl + dy;
+```
+
+
+## 例外
+投げない
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+using namespace std::chrono;
+
+int main()
+{
+  assert(2020y/2/Sunday[last] + months{1} == 2020y/3/Sunday[last]);
+  assert(2019y/3/Sunday[last] + years{1} == 2020y/3/Sunday[last]);
+}
+```
+* 2019y[link /reference/chrono/year/op_y.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* Sunday[link /reference/chrono/weekday_constants.md]
+* last[link /reference/chrono/last_spec.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator+= -- year_month_weekday_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday_last/op_plus_assign.html"/>
      <id>33b32b7353d7951903347996f873c7496a59925b:reference/chrono/year_month_weekday_last/op_plus_assign.md</id>
      <updated>2020-11-04T20:09:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday_last/op_plus_assign.md b/reference/chrono/year_month_weekday_last/op_plus_assign.md
new file mode 100644
index 000000000..80fdb7e5d
--- /dev/null
+++ b/reference/chrono/year_month_weekday_last/op_plus_assign.md
@@ -0,0 +1,71 @@
+# operator+=
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_weekday_last[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr year_month_weekday_last&amp;amp; operator+=(const months&amp;amp; m) noexcept; // (1) C++20
+constexpr year_month_weekday_last&amp;amp; operator+=(const years&amp;amp; y) noexcept;  // (2) C++20
+```
+
+## 概要
+`year_month_weekday_last`の値に対して加算の複合代入を行う。
+
+- (1) : 月の時間間隔を加算する
+- (2) : 年の時間間隔を加算する
+
+パラメータの型が、カレンダー時間の[`month`](/reference/chrono/month.md)、[`year`](/reference/chrono/year.md)ではなく、時間間隔を表す[`months`](/reference/chrono/duration_aliases.md)、[`years`](/reference/chrono/duration_aliases.md)であることに注意。
+
+
+## 効果
+- (1) : `*this = *this + m`
+- (2) : `*this = *this + y`
+
+
+## 戻り値
+- (1), (2) : `*this`
+
+
+## 例外
+投げない
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::year_month_weekday_last date = 2019y/2/chrono::Sunday[chrono::last];
+
+  date += chrono::months{1}; // 1ヶ月進める
+  date += chrono::years{1};  // 1年進める
+
+  assert(chrono::year_month_day{chrono::sys_days{date}} == 2020y/3/29);
+}
+```
+* 2019y[link /reference/chrono/year/op_y.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* chrono::last[link /reference/chrono/last_spec.md]
+* chrono::year_month_day[link /reference/chrono/year_month_day.md]
+* chrono::sys_days[link /reference/chrono/sys_time.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator sys_days -- year_month_weekday_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday_last/op_sys_days.html"/>
      <id>33b32b7353d7951903347996f873c7496a59925b:reference/chrono/year_month_weekday_last/op_sys_days.md</id>
      <updated>2020-11-04T20:09:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday_last/op_sys_days.md b/reference/chrono/year_month_weekday_last/op_sys_days.md
new file mode 100644
index 000000000..15eda1915
--- /dev/null
+++ b/reference/chrono/year_month_weekday_last/op_sys_days.md
@@ -0,0 +1,56 @@
+# operator sys_days
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_weekday_last[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr operator sys_days() const noexcept; // (1) C++20
+```
+* sys_days[link /reference/chrono/sys_time.md]
+
+## 概要
+`year_month_weekday_last`オブジェクトをシステム時間の日付に、暗黙に型変換する。
+
+
+## 戻り値
+[`ok()`](ok.md)が`true`である場合、[`year()`](year.md)`/`[`month()`](month.md)の最後の[`weekday()`](weekday.md)を表す[`sys_days`](/reference/chrono/sys_time.md)を返す。そうでなければ未規定の値を返す。
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::sys_days date = 2020y/3/chrono::Sunday[chrono::last];
+  assert(chrono::year_month_day{date} == 2020y/3/29);
+}
+```
+* chrono::sys_days[link /reference/chrono/sys_time.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* chrono::year_month_day[link /reference/chrono/year_month_day.md]
+* chrono::last[link /reference/chrono/last_spec.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+#### 備考
+- GCC 11のtrunkバージョンでは`index() == 0`の場合に間違った値が返る。正式リリース時には直っている可能性がある
+    - [Bug 97613 - `chrono::year_month_weekday` cast to `sys_days` : return bad value if `index() == 0`](https://gcc.gnu.org/bugzilla/show_bug.cgi?id=97613)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>weekday -- year_month_weekday_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday_last/weekday.html"/>
      <id>33b32b7353d7951903347996f873c7496a59925b:reference/chrono/year_month_weekday_last/weekday.md</id>
      <updated>2020-11-04T20:09:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday_last/weekday.md b/reference/chrono/year_month_weekday_last/weekday.md
new file mode 100644
index 000000000..6fbd0f1e2
--- /dev/null
+++ b/reference/chrono/year_month_weekday_last/weekday.md
@@ -0,0 +1,59 @@
+# weekday
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_weekday_last[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr chrono::weekday weekday() const noexcept; // (1) C++20
+```
+* chrono::weekday[link /reference/chrono/weekday.md]
+
+## 概要
+曜日要素を取得する。
+
+
+## 戻り値
+以下と等価：
+
+```cpp
+return weekday_last().weekday();
+```
+* weekday_last()[link weekday_last.md]
+* weekday()[link /reference/chrono/weekday_last/weekday.md]
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::year_month_weekday_last date = 2020y/3/chrono::Sunday[chrono::last];
+  chrono::weekday wd = date.weekday();
+  assert(wd == chrono::Sunday);
+}
+```
+* date.weekday()[color ff0000]
+* chrono::weekday[link /reference/chrono/weekday.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* chrono::last[link /reference/chrono/last_spec.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>weekday_last -- year_month_weekday_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday_last/weekday_last.html"/>
      <id>33b32b7353d7951903347996f873c7496a59925b:reference/chrono/year_month_weekday_last/weekday_last.md</id>
      <updated>2020-11-04T20:09:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday_last/weekday_last.md b/reference/chrono/year_month_weekday_last/weekday_last.md
new file mode 100644
index 000000000..c91b2e942
--- /dev/null
+++ b/reference/chrono/year_month_weekday_last/weekday_last.md
@@ -0,0 +1,53 @@
+# weekday_last
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_weekday_last[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr chrono::weekday_last weekday_last() const noexcept; // (1) C++20
+```
+* chrono::weekday_last[link /reference/chrono/weekday_last.md]
+
+## 概要
+月の最終曜日要素を取得する。
+
+
+## 戻り値
+コンストラクタで設定されて保持している最終曜日オブジェクトを返す。
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::year_month_weekday_last date = 2020y/3/chrono::Sunday[chrono::last];
+  chrono::weekday_last wdl = date.weekday_last();
+  assert(wdl == chrono::Sunday[chrono::last]);
+}
+```
+* date.weekday_indexed()[color ff0000]
+* chrono::weekday_indexed[link /reference/chrono/weekday_indexed.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* chrono::last[link /reference/chrono/last_spec.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>year -- year_month_weekday_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday_last/year.html"/>
      <id>33b32b7353d7951903347996f873c7496a59925b:reference/chrono/year_month_weekday_last/year.md</id>
      <updated>2020-11-04T20:09:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday_last/year.md b/reference/chrono/year_month_weekday_last/year.md
new file mode 100644
index 000000000..06edce5bc
--- /dev/null
+++ b/reference/chrono/year_month_weekday_last/year.md
@@ -0,0 +1,53 @@
+# year
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_weekday_last[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr chrono::year year() const noexcept; // (1) C++20
+```
+* chrono::year[link /reference/chrono/year.md]
+
+## 概要
+年要素を取得する。
+
+
+## 戻り値
+コンストラクタで設定されて保持している年オブジェクトを返す。
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::year_month_weekday_last date = 2020y/3/chrono::Sunday[chrono::last];
+  chrono::year y = date.year();
+  assert(y == 2020y);
+}
+```
+* date.year()[color ff0000]
+* chrono::year[link /reference/chrono/year.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* chrono::last[link /reference/chrono/last_spec.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>exchange -- Merge branch &#39;master&#39; of https://github.com/cpprefjp/site</title>
      <link href="https://cpprefjp.github.io/reference/utility/exchange.html"/>
      <id>dc2cd1025bb756d7ddc86d089ec14bbe13bba23d:reference/utility/exchange.md</id>
      <updated>2020-11-04T15:20:58+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/utility/exchange.md b/reference/utility/exchange.md
index a49a71d44..b53236449 100644
--- a/reference/utility/exchange.md
+++ b/reference/utility/exchange.md
@@ -64,7 +64,7 @@ before : 1
 ```
 
 
-## コンテナを出力する例
+### コンテナを出力する例
 ```cpp example
 #include &amp;lt;iostream&amp;gt;
 #include &amp;lt;utility&amp;gt;
@@ -112,7 +112,7 @@ int main()
 ```
 * std::exchange[color ff0000]
 
-### 出力
+#### 出力
 ```
 {1,2,3}
 {1,2,3}
@@ -196,6 +196,8 @@ int main()
 ```
 * std::exchange[color ff0000]
 * std::move[link move.md]
+* reset()[link /reference/memory/unique_ptr/reset.md]
+* get()[link /reference/memory/unique_ptr/get.md]
 
 
 #### 出力例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>projected -- リンクの有効化</title>
      <link href="https://cpprefjp.github.io/reference/iterator/projected.html"/>
      <id>709a16ddb3e423ee50385aa53a0d987e0c3e6969:reference/iterator/projected.md</id>
      <updated>2020-11-04T15:20:28+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/projected.md b/reference/iterator/projected.md
index d422e64b4..2f9345b37 100644
--- a/reference/iterator/projected.md
+++ b/reference/iterator/projected.md
@@ -90,8 +90,8 @@ int main() {
 ## 関連項目
 
 - [`indirectly_comparable`](indirectly_comparable.md)
-- [`mergeable`](mergeable.md.nolink)
-- [`sortable`](sortable.md.nolink)
+- [`mergeable`](mergeable.md)
+- [`sortable`](sortable.md)
 
 ## 参照
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>exchange -- exchange : コード修飾を追加</title>
      <link href="https://cpprefjp.github.io/reference/utility/exchange.html"/>
      <id>3ee8da8ccc3796ed35a540c4a6ed47d21d06c27e:reference/utility/exchange.md</id>
      <updated>2020-11-04T15:20:07+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/utility/exchange.md b/reference/utility/exchange.md
index 6f625604f..b53236449 100644
--- a/reference/utility/exchange.md
+++ b/reference/utility/exchange.md
@@ -196,6 +196,8 @@ int main()
 ```
 * std::exchange[color ff0000]
 * std::move[link move.md]
+* reset()[link /reference/memory/unique_ptr/reset.md]
+* get()[link /reference/memory/unique_ptr/get.md]
 
 
 #### 出力例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>exchange -- exchange : 見出しレベルの間違いを修正</title>
      <link href="https://cpprefjp.github.io/reference/utility/exchange.html"/>
      <id>f03946f6c63374e0e2831037cf036f4fd8891760:reference/utility/exchange.md</id>
      <updated>2020-11-04T15:19:05+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/utility/exchange.md b/reference/utility/exchange.md
index a49a71d44..6f625604f 100644
--- a/reference/utility/exchange.md
+++ b/reference/utility/exchange.md
@@ -64,7 +64,7 @@ before : 1
 ```
 
 
-## コンテナを出力する例
+### コンテナを出力する例
 ```cpp example
 #include &amp;lt;iostream&amp;gt;
 #include &amp;lt;utility&amp;gt;
@@ -112,7 +112,7 @@ int main()
 ```
 * std::exchange[color ff0000]
 
-### 出力
+#### 出力
 ```
 {1,2,3}
 {1,2,3}
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
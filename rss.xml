<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2022-12-12T18:31:06.811741</updated>
  <id>c1bacbb8-556d-4658-999f-c7609ff50ff7</id>

  
    <entry>
      <title>char_traits -- char_traits : comparison_categoryを追加 #900</title>
      <link href="https://cpprefjp.github.io/reference/string/char_traits.html"/>
      <id>9b7cb24371db077e2d9127c23bb63f753d53b3d1:reference/string/char_traits.md</id>
      <updated>2022-12-13T03:24:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string/char_traits.md b/reference/string/char_traits.md
index e08f35e39..0771ee496 100644
--- a/reference/string/char_traits.md
+++ b/reference/string/char_traits.md
@@ -51,6 +51,7 @@ namespace std {
 | `off_type`   | 文字の差を表す型 | |
 | `pos_type`   | 位置を表す型 | |
 | `state_type` | ストリームのマルチバイト文字の変換の状態を表す型 | |
+| `comparison_category` | 比較カテゴリ | C++20 |
 
 
 ### charによる特殊化のメンバ型定義
@@ -62,6 +63,7 @@ namespace std {
 | `off_type`   | `streamoff` | |
 | `pos_type`   | `streampos` | |
 | `state_type` | `mbstate_t` | |
+| `comparison_category` | [`strong_ordering`](/reference/compare/strong_ordering.md) | C++20 |
 
 ### char8_tによる特殊化のメンバ型定義 (C++20)
 
@@ -72,6 +74,7 @@ namespace std {
 | `off_type`   | `streamoff`      | C++20          |
 | `pos_type`   | `u8streampos`   | C++20          |
 | `state_type` | `mbstate_t`      | C++20          |
+| `comparison_category` | [`strong_ordering`](/reference/compare/strong_ordering.md) | C++20 |
 
 ### char16_tによる特殊化のメンバ型定義 (C++11)
 
@@ -82,6 +85,7 @@ namespace std {
 | `off_type`   | `streamoff`      | C++11          |
 | `pos_type`   | `u16streampos`   | C++11          |
 | `state_type` | `mbstate_t`      | C++11          |
+| `comparison_category` | [`strong_ordering`](/reference/compare/strong_ordering.md) | C++20 |
 
 
 ### char32_tによる特殊化のメンバ型定義 (C++11)
@@ -93,6 +97,7 @@ namespace std {
 | `off_type`   | `streamoff`      | C++11          |
 | `pos_type`   | `u32streampos`   | C++11          |
 | `state_type` | `mbstate_t`      | C++11          |
+| `comparison_category` | [`strong_ordering`](/reference/compare/strong_ordering.md) | C++20 |
 
 
 ### wchar_tによる特殊化のメンバ型定義
@@ -104,6 +109,7 @@ namespace std {
 | `off_type`   | `streamoff`      | |
 | `pos_type`   | `wstreampos`     | |
 | `state_type` | `mbstate_t`      | |
+| `comparison_category` | [`strong_ordering`](/reference/compare/strong_ordering.md) | C++20 |
 
 
 ## 例
@@ -224,3 +230,7 @@ int main() {
 equal
 ```
 
+
+## 参照
+- [P1614R2 The Mothership has Landed](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1614r2.html)
+    - C++20での三方比較演算子の追加と、関連する演算子の自動導出
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>from_chars_result -- from_chars_result, to_chars_result : 参照を追加</title>
      <link href="https://cpprefjp.github.io/reference/charconv/from_chars_result.html"/>
      <id>f7da52303237c9ae8814e84c092cc4eff4ba19e7:reference/charconv/from_chars_result.md</id>
      <updated>2022-12-13T03:24:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/charconv/from_chars_result.md b/reference/charconv/from_chars_result.md
index ae7aba874..ec3a237ef 100644
--- a/reference/charconv/from_chars_result.md
+++ b/reference/charconv/from_chars_result.md
@@ -50,3 +50,5 @@ namespace std {
 ## 参照
 - [P0067R5: Elementary string conversions, revision 5](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0067r5.html)
 - [P0682R1: Repairing elementary string conversions](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0682r1.html)
+- [P1614R2 The Mothership has Landed](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1614r2.html)
+    - C++20での三方比較演算子の追加と、関連する演算子の自動導出
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>to_chars_result -- from_chars_result, to_chars_result : 参照を追加</title>
      <link href="https://cpprefjp.github.io/reference/charconv/to_chars_result.html"/>
      <id>f7da52303237c9ae8814e84c092cc4eff4ba19e7:reference/charconv/to_chars_result.md</id>
      <updated>2022-12-13T03:24:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/charconv/to_chars_result.md b/reference/charconv/to_chars_result.md
index 6b4d1744f..3db47772c 100644
--- a/reference/charconv/to_chars_result.md
+++ b/reference/charconv/to_chars_result.md
@@ -49,3 +49,5 @@ namespace std {
 ## 参照
 - [P0067R5: Elementary string conversions, revision 5](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0067r5.html)
 - [P0682R1: Repairing elementary string conversions](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0682r1.html)
+- [P1614R2 The Mothership has Landed](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1614r2.html)
+    - C++20での三方比較演算子の追加と、関連する演算子の自動導出
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>from_chars_result -- from_chars_result, to_chars_result : operator==を追加 #900</title>
      <link href="https://cpprefjp.github.io/reference/charconv/from_chars_result.html"/>
      <id>a586d38f7d0df9fc74f27238187ae6e2a453f300:reference/charconv/from_chars_result.md</id>
      <updated>2022-12-13T03:21:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/charconv/from_chars_result.md b/reference/charconv/from_chars_result.md
index fc30c8d49..ae7aba874 100644
--- a/reference/charconv/from_chars_result.md
+++ b/reference/charconv/from_chars_result.md
@@ -24,6 +24,14 @@ namespace std {
 | ptr | （指定したフォーマットの）パターンにマッチしない最初の入力文字の位置を指すか、入力文字列の先頭を指すポインタ。 | C++17 |
 | ec | 成功なら`ec == errc{}`、失敗ならば`errc::invalid_argument`を表す[`errc`](/reference/system_error/errc.md)の値。 | C++17 |
 
+## メンバ関数
+### 比較演算子
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| `friend bool operator==(const from_chars_result&amp;amp;, const from_chars_result&amp;amp;) = default;` | 等値比較を行う | C++20 |
+| `friend bool operator!=(const from_chars_result&amp;amp;, const from_chars_result&amp;amp;);` | 非等値比較を行う (`==`により使用可能) | C++20 |
+
 詳細は[`from_chars`](../charconv/from_chars.md)の戻り値の項を参照のこと。
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>to_chars_result -- from_chars_result, to_chars_result : operator==を追加 #900</title>
      <link href="https://cpprefjp.github.io/reference/charconv/to_chars_result.html"/>
      <id>a586d38f7d0df9fc74f27238187ae6e2a453f300:reference/charconv/to_chars_result.md</id>
      <updated>2022-12-13T03:21:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/charconv/to_chars_result.md b/reference/charconv/to_chars_result.md
index 5f8e3f5e7..6b4d1744f 100644
--- a/reference/charconv/to_chars_result.md
+++ b/reference/charconv/to_chars_result.md
@@ -23,6 +23,14 @@ namespace std {
 | ptr | 成功した場合、書き込まれた最後の文字の次の位置を指すポインタ。 | C++17 |
 | ec | 成功なら`ec == errc{}`、失敗ならば`errc::value_too_large`を表す[`errc`](/reference/system_error/errc.md)の値。 | C++17 |
 
+## メンバ関数
+### 比較演算子
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| `friend bool operator==(const to_chars_result&amp;amp;, const to_chars_result&amp;amp;) = default;` | 等値比較を行う | C++20 |
+| `friend bool operator!=(const to_chars_result&amp;amp;, const to_chars_result&amp;amp;);` | 非等値比較を行う (`==`により使用可能) | C++20 |
+
 詳細は[`to_chars`](../charconv/to_chars.md)の戻り値の項を参照のこと。
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator== -- type_info : operator!=の自動導出に対応 #900</title>
      <link href="https://cpprefjp.github.io/reference/typeinfo/type_info/op_equal.html"/>
      <id>f5d75f8f2b559b844f7bef728c91d3e1dfd702bd:reference/typeinfo/type_info/op_equal.md</id>
      <updated>2022-12-13T02:28:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/typeinfo/type_info/op_equal.md b/reference/typeinfo/type_info/op_equal.md
index 578f08f1a..e974c8411 100644
--- a/reference/typeinfo/type_info/op_equal.md
+++ b/reference/typeinfo/type_info/op_equal.md
@@ -5,9 +5,9 @@
 * function[meta id-type]
 
 ```cpp
-bool operator==(const type_info&amp;amp; rhs) const;                     // C++03
-bool operator==(const type_info&amp;amp; rhs) const noexcept;            // C++11
-constexpr bool operator==(const type_info&amp;amp; rhs) const noexcept;  // C++23
+bool operator==(const type_info&amp;amp; rhs) const;                     // (1) C++03
+bool operator==(const type_info&amp;amp; rhs) const noexcept;            // (1) C++11
+constexpr bool operator==(const type_info&amp;amp; rhs) const noexcept;  // (1) C++23
 ```
 
 ## 概要
@@ -22,6 +22,11 @@ constexpr bool operator==(const type_info&amp;amp; rhs) const noexcept;  // C++23
 投げない
 
 
+## 備考
+- この演算子により、以下の演算子が使用可能になる (C++20)：
+    - `operator!=`
+
+
 ## 例
 ```cpp example
 #include &amp;lt;iostream&amp;gt;
@@ -44,3 +49,5 @@ same type? true
 
 ## 参照
 - [P1328R1 Making `std::type_info::operator==` `constexpr`](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p1328r1.html)
+- [P1614R2 The Mothership has Landed](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1614r2.html)
+    - C++20での三方比較演算子の追加と、関連する演算子の自動導出
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator!= -- type_info : operator!=の自動導出に対応 #900</title>
      <link href="https://cpprefjp.github.io/reference/typeinfo/type_info/op_not_equal.html"/>
      <id>f5d75f8f2b559b844f7bef728c91d3e1dfd702bd:reference/typeinfo/type_info/op_not_equal.md</id>
      <updated>2022-12-13T02:28:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/typeinfo/type_info/op_not_equal.md b/reference/typeinfo/type_info/op_not_equal.md
index f7358380c..77ae97dc9 100644
--- a/reference/typeinfo/type_info/op_not_equal.md
+++ b/reference/typeinfo/type_info/op_not_equal.md
@@ -5,8 +5,9 @@
 * function[meta id-type]
 
 ```cpp
-bool operator!=(const type_info&amp;amp; rhs) const;          // C++03
-bool operator!=(const type_info&amp;amp; rhs) const noexcept; // C++11
+// operator==により、以下の演算子が使用可能になる (C++20)
+bool operator!=(const type_info&amp;amp; rhs) const;          // (1) C++03
+bool operator!=(const type_info&amp;amp; rhs) const noexcept; // (1) C++11
 ```
 
 ## 概要
@@ -43,5 +44,5 @@ difference type? false
 ```
 
 ## 参照
-
-
+- [P1614R2 The Mothership has Landed](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1614r2.html)
+    - C++20での三方比較演算子の追加と、関連する演算子の自動導出
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>type_index -- type_index : 三方比較演算子の追加と自動導出に対応 #900</title>
      <link href="https://cpprefjp.github.io/reference/typeindex/type_index.html"/>
      <id>4bef076d529be24770066f30897ebd80767595d0:reference/typeindex/type_index.md</id>
      <updated>2022-12-12T21:31:36+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/typeindex/type_index.md b/reference/typeindex/type_index.md
index d5bfc976f..d5d33f15d 100644
--- a/reference/typeindex/type_index.md
+++ b/reference/typeindex/type_index.md
@@ -16,11 +16,12 @@ namespace std {
 
 ## メンバ関数
 
-| 名前                                              | 説明                               | 対応バージョン |
-|---------------------------------------------------|------------------------------------|----------------|
+| 名前                                            | 説明                               | 対応バージョン |
+|-------------------------------------------------|------------------------------------|----------------|
 | [`(constructor)`](type_index/op_constructor.md) | コンストラクタ                     | C++11          |
 | [`operator==`](type_index/op_equal.md)          | 等値判定を行う                     | C++11          |
 | [`operator!=`](type_index/op_not_equal.md)      | 非等値判定を行う                   | C++11          |
+| [`operator&amp;lt;=&amp;gt;`](type_index/op_compare_3way.md)  | 三方判定を行う                     | C++20          |
 | [`operator&amp;lt;`](type_index/op_less.md)            | 左辺が右辺より小さいかの判定を行う | C++11          |
 | [`operator&amp;lt;=`](type_index/op_less_equal.md)     | 左辺が右辺以下かの判定を行う       | C++11          |
 | [`operator&amp;gt;`](type_index/op_greater.md)         | 左辺が右辺より大きいかの判定を行う | C++11          |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;=&gt; -- type_index : 三方比較演算子の追加と自動導出に対応 #900</title>
      <link href="https://cpprefjp.github.io/reference/typeindex/type_index/op_compare_3way.html"/>
      <id>4bef076d529be24770066f30897ebd80767595d0:reference/typeindex/type_index/op_compare_3way.md</id>
      <updated>2022-12-12T21:31:36+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/typeindex/type_index/op_compare_3way.md b/reference/typeindex/type_index/op_compare_3way.md
new file mode 100644
index 000000000..f51e68f5a
--- /dev/null
+++ b/reference/typeindex/type_index/op_compare_3way.md
@@ -0,0 +1,65 @@
+# operator&amp;lt;=&amp;gt;
+* typeindex[meta header]
+* std[meta namespace]
+* type_index[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+strong_ordering operator&amp;lt;=&amp;gt;(const type_index&amp;amp; rhs) const noexcept; // (1) C++20
+```
+
+## 概要
+三方比較を行う
+
+
+## 効果
+`type_index`のメンバ変数として保持されている[`type_info`](/reference/typeinfo/type_info.md)オブジェクトへのポインタ`target`があるとして、以下と等価：
+
+```cpp
+if (*target == *rhs.target) return strong_ordering::equal;
+if (target-&amp;gt;before(*rhs.target)) return strong_ordering::less;
+return strong_ordering::greater;
+```
+* before[link /reference/typeinfo/type_info/before.md]
+
+
+## 例外
+投げない
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;typeindex&amp;gt;
+
+int main()
+{
+  std::type_index t1 = typeid(int);
+  std::type_index t2 = typeid(int);
+  std::type_index t3 = typeid(double);
+
+  assert((t1 &amp;lt;=&amp;gt; t2) == 0);
+  assert((t1 &amp;lt;=&amp;gt; typeid(int)) == 0);
+  assert((t1 &amp;lt;=&amp;gt; t3) != 0);
+  assert((t1 &amp;lt;=&amp;gt; typeid(double)) != 0);
+}
+```
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang):
+- [GCC](/implementation.md#gcc): 10
+- [Visual C++](/implementation.md#visual_cpp): ??
+
+
+## 参照
+- [P1614R2 The Mothership has Landed](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1614r2.html)
+    - C++20での三方比較演算子の追加と、関連する演算子の自動導出
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator== -- type_index : 三方比較演算子の追加と自動導出に対応 #900</title>
      <link href="https://cpprefjp.github.io/reference/typeindex/type_index/op_equal.html"/>
      <id>4bef076d529be24770066f30897ebd80767595d0:reference/typeindex/type_index/op_equal.md</id>
      <updated>2022-12-12T21:31:36+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/typeindex/type_index/op_equal.md b/reference/typeindex/type_index/op_equal.md
index e85ac754b..0f9e6801e 100644
--- a/reference/typeindex/type_index/op_equal.md
+++ b/reference/typeindex/type_index/op_equal.md
@@ -6,7 +6,7 @@
 * cpp11[meta cpp]
 
 ```cpp
-bool operator==(const type_index&amp;amp; rhs) const noexcept;
+bool operator==(const type_index&amp;amp; rhs) const noexcept; // (1) C++11
 ```
 
 ## 概要
@@ -23,6 +23,11 @@ bool operator==(const type_index&amp;amp; rhs) const noexcept;
 投げない
 
 
+## 備考
+- この演算子により、以下の演算子が使用可能になる (C++20)：
+    - `operator!=`
+
+
 ## 例
 ```cpp example
 #include &amp;lt;cassert&amp;gt;
@@ -55,3 +60,7 @@ int main()
 - [ICC](/implementation.md#icc): ?
 - [Visual C++](/implementation.md#visual_cpp): 2010, 2012, 2013, 2015, 2017
 
+
+## 参照
+- [P1614R2 The Mothership has Landed](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1614r2.html)
+    - C++20での三方比較演算子の追加と、関連する演算子の自動導出
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator!= -- type_index : 三方比較演算子の追加と自動導出に対応 #900</title>
      <link href="https://cpprefjp.github.io/reference/typeindex/type_index/op_not_equal.html"/>
      <id>4bef076d529be24770066f30897ebd80767595d0:reference/typeindex/type_index/op_not_equal.md</id>
      <updated>2022-12-12T21:31:36+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/typeindex/type_index/op_not_equal.md b/reference/typeindex/type_index/op_not_equal.md
index 53c011845..3a1b32c03 100644
--- a/reference/typeindex/type_index/op_not_equal.md
+++ b/reference/typeindex/type_index/op_not_equal.md
@@ -6,7 +6,8 @@
 * cpp11[meta cpp]
 
 ```cpp
-bool operator!=(const type_index&amp;amp; rhs) const noexcept;
+// operator==により、以下の演算子が使用可能になる (C++20)
+bool operator!=(const type_index&amp;amp; rhs) const noexcept; // (1) C++11
 ```
 
 ## 概要
@@ -52,3 +53,7 @@ int main()
 - [ICC](/implementation.md#icc): ?
 - [Visual C++](/implementation.md#visual_cpp): 2010, 2012, 2013, 2015, 2017
 
+
+## 参照
+- [P1614R2 The Mothership has Landed](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1614r2.html)
+    - C++20での三方比較演算子の追加と、関連する演算子の自動導出
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
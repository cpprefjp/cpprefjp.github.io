<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2020-06-05T07:30:30.986965</updated>
  <id>5cb055af-99a2-42c6-ac06-6661a027f7ce</id>

  
    <entry>
      <title>parse -- chronoのparse : サンプルコードを追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/parse.html"/>
      <id>45d6e897a08154c6c53f89dcbc62af0381617f56:reference/chrono/parse.md</id>
      <updated>2020-06-05T16:25:59+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/parse.md b/reference/chrono/parse.md
index b0c778ee3..8b38e8ee7 100644
--- a/reference/chrono/parse.md
+++ b/reference/chrono/parse.md
@@ -115,18 +115,60 @@ namespace std::chrono {
 
 ## 例
 ```cpp example
-#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;sstream&amp;gt;
 #include &amp;lt;chrono&amp;gt;
 
 namespace chrono = std::chrono;
 
 int main()
 {
+  // タイムゾーン情報を含まない日時の解析
+  {
+    std::stringstream ss;
+    ss &amp;lt;&amp;lt; &amp;#34;2019-10-24 20:15:10&amp;#34;;
+
+    chrono::sys_seconds tp;
+    ss &amp;gt;&amp;gt; chrono::parse(&amp;#34;%Y-%m-%d %H:%M:%S&amp;#34;, tp);
+
+    if (ss) {
+      std::cout &amp;lt;&amp;lt; tp &amp;lt;&amp;lt; std::endl;
+    }
+    else {
+      std::cout &amp;lt;&amp;lt; &amp;#34;解析失敗&amp;#34; &amp;lt;&amp;lt; std::endl;
+    }
+  }
+
+  // タイムゾーン情報を含む日時の解析
+  {
+    std::stringstream ss;
+    ss &amp;lt;&amp;lt; &amp;#34;2019-10-24 20:15:10 JST+0900&amp;#34;;
+
+    chrono::sys_seconds tp;
+    std::string abbrev;
+    chrono::minutes offset;
+    ss &amp;gt;&amp;gt; chrono::parse(&amp;#34;%Y-%m-%d %H:%M:%S %Z%z&amp;#34;, tp, abbrev, offset);
+
+    if (ss) {
+      std::cout &amp;lt;&amp;lt; tp &amp;lt;&amp;lt; std::endl;
+      std::cout &amp;lt;&amp;lt; abbrev &amp;lt;&amp;lt; std::endl;
+      std::cout &amp;lt;&amp;lt; chrono::floor&amp;lt;chrono::hours&amp;gt;(offset) &amp;lt;&amp;lt; std::endl;
+    }
+    else {
+      std::cout &amp;lt;&amp;lt; &amp;#34;解析失敗&amp;#34; &amp;lt;&amp;lt; std::endl;
+    }
+  }
 }
 ```
+* chrono::parse[color ff0000]
+* chrono::sys_seconds[link sys_time.md]
+* chrono::floor[link duration/floor.md]
 
 ### 出力
 ```
+2019-10-24 20:15:10
+2019-10-24 11:15:10
+JST
+9h
 ```
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sys_time -- chronoのparse : サンプルコードを追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/sys_time.html"/>
      <id>45d6e897a08154c6c53f89dcbc62af0381617f56:reference/chrono/sys_time.md</id>
      <updated>2020-06-05T16:25:59+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/sys_time.md b/reference/chrono/sys_time.md
index 1d68933a6..edaa5b672 100644
--- a/reference/chrono/sys_time.md
+++ b/reference/chrono/sys_time.md
@@ -183,7 +183,7 @@ int main()
   // タイムゾーンとオフセットを含む入力
   {
     std::stringstream ss;
-    ss &amp;lt;&amp;lt; &amp;#34;2019-10-24 20:15:10 UTC+0900&amp;#34;;
+    ss &amp;lt;&amp;lt; &amp;#34;2019-10-24 20:15:10 JST+0900&amp;#34;;
 
     chrono::sys_seconds tp;
     std::string abbrev;
@@ -203,7 +203,7 @@ int main()
 ```
 2019-10-24 20:15:10
 2019-10-24 11:15:10
-UTC
+JST
 540
 ```
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>parse -- chronoのparse : バッククォートの閉じがなかった</title>
      <link href="https://cpprefjp.github.io/reference/chrono/parse.html"/>
      <id>c6bc8c4fa64bf2f6ab426aa0889d1d3675446b54:reference/chrono/parse.md</id>
      <updated>2020-06-04T18:56:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/parse.md b/reference/chrono/parse.md
index e418ca59e..b0c778ee3 100644
--- a/reference/chrono/parse.md
+++ b/reference/chrono/parse.md
@@ -72,7 +72,7 @@ namespace std::chrono {
 | `%T` | `%H:%M:%S`と等価 | `&amp;#34;17:14:44.123&amp;#34;` |
 | `%u` | 10進数での月曜を1とするISO曜日番号 (1-7)。改良コマンド`%Nu` (Nは10進整数) によって読み込む最大の文字数を指定できる。Nを指定しない場合、デフォルトは1。先頭の0は許可されるが要求はされない。改良コマンド`%Ou`はロケール依存の異なる表現になる | `&amp;#34;5&amp;#34;` |
 | `%U` | 10進数での年の週番号。年の最初の日曜日が最初の曜日であるとして`01`、同年のそれより前の日は`00`となる。改良コマンド`%NU` (Nは10進整数) によって読み込む最大の文字数を指定できる。Nを指定しない場合、デフォルトは2。先頭の0は許可されるが要求はされない。 | `&amp;#34;16&amp;#34;` |
-| `%V` | 10進数でのISO週ベースの週番号。改良コマンド`%NV (Nは10進整数) によって読み込む最大の文字数を指定できる。Nを指定しない場合、デフォルトは2。先頭の0は許可されるが要求はされない。 | `&amp;#34;17&amp;#34;` |
+| `%V` | 10進数でのISO週ベースの週番号。改良コマンド`%NV` (Nは10進整数) によって読み込む最大の文字数を指定できる。Nを指定しない場合、デフォルトは2。先頭の0は許可されるが要求はされない。 | `&amp;#34;17&amp;#34;` |
 | `%w` | 10進数での日曜を0とする曜日番号 (0-6)。改良コマンド`%Nw (Nは10進整数) によって読み込む最大の文字数を指定できる。Nを指定しない場合、デフォルトは1。先頭の0は許可されるが要求はされない。改良コマンド`%Ow`はロケール依存の異なる表現になる | `&amp;#34;5&amp;#34;` |
 | `%W` | 10進数での年の週番号。年の最初の月曜日が最初の曜日であるとして`01`、同年のそれより前の日は`00`となる。改良コマンド`%NW` (Nは10進整数) によって読み込む最大の文字数を指定できる。Nを指定しない場合、デフォルトは2。先頭の0は許可されるが要求はされない。改良コマンド`%OW`を指定はロケール依存の異なる表現になる | `&amp;#34;16&amp;#34;` |
 | `%x` | ロケール依存の日付表現。改良コマンド`%Ex`はロケール依存の異なる表現になる| `&amp;#34;04/24/20&amp;#34;`&amp;lt;br/&amp;gt; `&amp;#34;2020年04月24日&amp;#34;`&amp;lt;br/&amp;gt; `%Ex`では`&amp;#34;令和02年04月24日&amp;#34;` |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>formatter -- s/フォーマット指定子/フォーマットフラグ/ 規格書の用語を使用するよう修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/duration/formatter.html"/>
      <id>2105fb7d0499780e4d33e4a8b8155e9d3a709419:reference/chrono/duration/formatter.md</id>
      <updated>2020-06-04T18:18:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/duration/formatter.md b/reference/chrono/duration/formatter.md
index d0bcf9c33..59e2ac80d 100644
--- a/reference/chrono/duration/formatter.md
+++ b/reference/chrono/duration/formatter.md
@@ -14,9 +14,9 @@ namespace std {
 ## 概要
 `duration`クラスに対する[`std::formatter`](/reference/format/formatter.md)クラステンプレートの特殊化。
 
-フォーマット指定子としては、以下を使用できる：
+フォーマットフラグとしては、以下を使用できる：
 
-| フォーマット指定子 | 説明 |
+| フォーマットフラグ | 説明 |
 |--------------------|------|
 | `%q` | `duration`単位ごとのサフィックス。`duration`の`operator&amp;lt;&amp;lt;`で出力されるサフィックスと等価 |
 | `%Q` | `duration`の数値。`.count()`で取得した値 |
@@ -50,7 +50,7 @@ int main()
   // duration::count()で取得した値
   std::cout &amp;lt;&amp;lt; std::format(&amp;#34;{:%Q}&amp;#34;, chrono::seconds{3}) &amp;lt;&amp;lt; std::endl;
 
-  // フォーマット指定子を使用した場合、サフィックスは出力されない
+  // フォーマットフラグを使用した場合、サフィックスは出力されない
   std::cout &amp;lt;&amp;lt; std::format(&amp;#34;seconds : {:%S}&amp;#34;, chrono::seconds{3}) &amp;lt;&amp;lt; std::endl;
   std::cout &amp;lt;&amp;lt; std::format(&amp;#34;minutes : {:%M}&amp;#34;, chrono::minutes{3}) &amp;lt;&amp;lt; std::endl;
   std::cout &amp;lt;&amp;lt; std::format(&amp;#34;24-hours : {:%H}&amp;#34;, chrono::hours{15}) &amp;lt;&amp;lt; std::endl;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>format -- s/フォーマット指定子/フォーマットフラグ/ 規格書の用語を使用するよう修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/format.html"/>
      <id>2105fb7d0499780e4d33e4a8b8155e9d3a709419:reference/chrono/format.md</id>
      <updated>2020-06-04T18:18:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/format.md b/reference/chrono/format.md
index ff8457a9b..178048ea7 100644
--- a/reference/chrono/format.md
+++ b/reference/chrono/format.md
@@ -16,13 +16,13 @@ chronoライブラリのクラスオブジェクトに対する文字列フォ
 ここでは宣言はとくにないが、[`std::format()`](/reference/format/format.md)に対してchronoライブラリの各クラスオブジェクトを出力できるよう[`std::formatter`](/reference/format/formatter.md)クラスが各クラスで特殊化されている。
 
 
-### chronoライブラリでのフォーマット指定子
+### chronoライブラリでのフォーマットフラグ
 
 [`std::format()`](/reference/format/format.md)関数の通常の指定では、置換フィールド`{}`内に基数、精度、0埋め指定、アライメントなどを指定する。
 
 chronoライブラリではこれに加え、たとえばデフォルトでは年・月・日を出力する[`year_month_day`](year_month_day.md)クラスに対して「`&amp;#34;年/月&amp;#34;`」というフォーマットで出力するよう`&amp;#34;{%Y/%m}&amp;#34;`のように指定することでデフォルトとは異なる出力をさせることができる。
 
-| フォーマット指定子 | 説明 | 例 |
+| フォーマットフラグ | 説明 | 例 |
 |--------------------|------|----|
 | `%a` | ロケール依存の曜日の略称。&amp;lt;br/&amp;gt; 値に有効な曜日が含まれていない場合、[`std::format_error`](/reference/format/format_error.md)例外を送出する | `&amp;#34;Fri&amp;#34;`, `&amp;#34;金&amp;#34;` |
 | `%A` | ロケール依存の曜日の完全名。&amp;lt;br/&amp;gt; 値に有効な曜日が含まれていない場合、[`std::format_error`](/reference/format/format_error.md)例外を送出する | `&amp;#34;Friday&amp;#34;`, `&amp;#34;金曜日&amp;#34;` |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>formatter -- s/フォーマット指定子/フォーマットフラグ/ 規格書の用語を使用するよう修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/local_info/formatter.html"/>
      <id>2105fb7d0499780e4d33e4a8b8155e9d3a709419:reference/chrono/local_info/formatter.md</id>
      <updated>2020-06-04T18:18:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/local_info/formatter.md b/reference/chrono/local_info/formatter.md
index 8b8c1a418..36302317f 100644
--- a/reference/chrono/local_info/formatter.md
+++ b/reference/chrono/local_info/formatter.md
@@ -14,9 +14,9 @@ namespace std {
 ## 概要
 `local_info`クラスに対する[`std::formatter`](/reference/format/formatter.md)クラステンプレートの特殊化。
 
-フォーマット指定子としては、以下を使用できる：
+フォーマットフラグとしては、以下を使用できる：
 
-| フォーマット指定子 | 説明 |
+| フォーマットフラグ | 説明 |
 |--------------------|------|
 | `%z`  | ISO 8601フォーマットでのUTCからのオフセット (日本だと`&amp;#34;+0900&amp;#34;`) |
 | `%Ez` | オフセットの時と分の間にコロン (:) が挿入される (日本だと`&amp;#34;+09:00&amp;#34;`) |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>formatter -- s/フォーマット指定子/フォーマットフラグ/ 規格書の用語を使用するよう修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month/formatter.html"/>
      <id>2105fb7d0499780e4d33e4a8b8155e9d3a709419:reference/chrono/month/formatter.md</id>
      <updated>2020-06-04T18:18:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month/formatter.md b/reference/chrono/month/formatter.md
index 7daeebfd3..93e39f537 100644
--- a/reference/chrono/month/formatter.md
+++ b/reference/chrono/month/formatter.md
@@ -14,9 +14,9 @@ namespace std {
 ## 概要
 `month`クラスに対する[`std::formatter`](/reference/format/formatter.md)クラステンプレートの特殊化。
 
-フォーマット指定子としては、以下を使用できる：
+フォーマットフラグとしては、以下を使用できる：
 
-| フォーマット指定子 | 説明 |
+| フォーマットフラグ | 説明 |
 |--------------------|------|
 | `%b` | ロケール依存の月の略称 |
 | `%B` | ロケール依存の月の完全名 |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>parse -- s/フォーマット指定子/フォーマットフラグ/ 規格書の用語を使用するよう修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/parse.html"/>
      <id>2105fb7d0499780e4d33e4a8b8155e9d3a709419:reference/chrono/parse.md</id>
      <updated>2020-06-04T18:18:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/parse.md b/reference/chrono/parse.md
index b01009b58..e418ca59e 100644
--- a/reference/chrono/parse.md
+++ b/reference/chrono/parse.md
@@ -41,9 +41,9 @@ namespace std::chrono {
 - (3) chronoオブジェクトと、UTCタイムゾーンからのオフセット時間を解析する
 - (4) chronoオブジェクトと、タイムゾーンの略称、UTCタイムゾーンからのオフセット時間を解析する
 
-`fmt`パラメータに指定できるフォーマット指定子は、以下である。`N`として10進整数を指定できる場合があり、それを指定することでより多くの文字数を読み込める。
+`fmt`パラメータに指定できるフォーマットフラグは、以下である。`N`として10進整数を指定できる場合があり、それを指定することでより多くの文字数を読み込める。
 
-| フォーマット指定子 | 説明 | 例 |
+| フォーマットフラグ | 説明 | 例 |
 |--------------------|------|----|
 | `%a` | ロケール依存の曜日の略称 (大文字・小文字を区別しない) | `&amp;#34;Sun&amp;#34;`&amp;lt;br/&amp;gt; 日本のロケールでは`&amp;#34;日&amp;#34;` |
 | `%A` | `%a`と等価 | |
@@ -101,11 +101,11 @@ namespace std::chrono {
 
 - これらの関数をADL (引数依存の名前探索、argument dependent lookup) で呼び出すために、`from_stream`を修飾せずに呼び出している
 - これらの関数は書式化されていない入力関数として動作するが ([`std::boolalpha`](/reference/ios/boolalpha.md), [`std::quoted`](/reference/iomanip/quoted.md)などの影響を受けない)、後続で呼び出された[`std::basic_istream`](/reference/istream/basic_istream.md)`&amp;lt;&amp;gt;::`[`gcount()`](/reference/istream/basic_istream/gcount.md)の戻り値に未規定の影響がある
-- 概要欄に示したフォーマット指定子に含まれておらず、スペースを除くフォーマット文字列のすべての文字は、ストリームから変更されずに解析される
+- 概要欄に示したフォーマットフラグに含まれておらず、スペースを除くフォーマット文字列のすべての文字は、ストリームから変更されずに解析される
 - スペース文字は、入力ストリーム内の「ゼロ個以上のスペース文字」と合致する
-- 解析する`tp`の型が、フォーマット指定子の情報を表現できない場合、`is.`[`setstate`](/reference/ios/basic_ios/setstate.md)`(`[`ios_base::failbit`](/reference/ios/ios_base/type-iostate.md)`)`が呼び出される
+- 解析する`tp`の型が、フォーマットフラグの情報を表現できない場合、`is.`[`setstate`](/reference/ios/basic_ios/setstate.md)`(`[`ios_base::failbit`](/reference/ios/ios_base/type-iostate.md)`)`が呼び出される
     - 例として、[`duration`](duration.md)は[`weekday`](weekday.md)を表現できない
-    - ただし、フォーマット指定子が時刻を表すものである場合 (`&amp;#34;%H&amp;#34;`, `&amp;#34;%I&amp;#34;`, `&amp;#34;%p&amp;#34;`など)、[`duration`](duration.md)の特殊化は、その日の深夜0時からの経過時間だと見なして読み込む
+    - ただし、フォーマットフラグが時刻を表すものである場合 (`&amp;#34;%H&amp;#34;`, `&amp;#34;%I&amp;#34;`, `&amp;#34;%p&amp;#34;`など)、[`duration`](duration.md)の特殊化は、その日の深夜0時からの経過時間だと見なして読み込む
 - フォーマット文字列で指定されたいずれの解析にも失敗した場合、もしくは完全な`duration`、時間点、カレンダーデータ構造を指定するために十分な情報が解析されなかった場合、`is.`[`setstate`](/reference/ios/basic_ios/setstate.md)`(`[`ios_base::failbit`](/reference/ios/ios_base/type-iostate.md)`)`が呼び出される
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>formatter -- s/フォーマット指定子/フォーマットフラグ/ 規格書の用語を使用するよう修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/sys_info/formatter.html"/>
      <id>2105fb7d0499780e4d33e4a8b8155e9d3a709419:reference/chrono/sys_info/formatter.md</id>
      <updated>2020-06-04T18:18:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/sys_info/formatter.md b/reference/chrono/sys_info/formatter.md
index 176cd7878..4af196033 100644
--- a/reference/chrono/sys_info/formatter.md
+++ b/reference/chrono/sys_info/formatter.md
@@ -14,9 +14,9 @@ namespace std {
 ## 概要
 `sys_info`クラスに対する[`std::formatter`](/reference/format/formatter.md)クラステンプレートの特殊化。
 
-フォーマット指定子としては、以下を使用できる：
+フォーマットフラグとしては、以下を使用できる：
 
-| フォーマット指定子 | 説明 |
+| フォーマットフラグ | 説明 |
 |--------------------|------|
 | `%z`  | ISO 8601フォーマットでのUTCからのオフセット (日本だと`&amp;#34;+0900&amp;#34;`) |
 | `%Ez` | オフセットの時と分の間にコロン (:) が挿入される (日本だと`&amp;#34;+09:00&amp;#34;`) |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sys_time -- s/フォーマット指定子/フォーマットフラグ/ 規格書の用語を使用するよう修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/sys_time.html"/>
      <id>2105fb7d0499780e4d33e4a8b8155e9d3a709419:reference/chrono/sys_time.md</id>
      <updated>2020-06-04T18:18:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/sys_time.md b/reference/chrono/sys_time.md
index d2bb04ac9..1d68933a6 100644
--- a/reference/chrono/sys_time.md
+++ b/reference/chrono/sys_time.md
@@ -78,7 +78,7 @@ namespace std {
     * year_month_day[link year_month_day.md]
 
 - (6) :
-    - パラメータ`fmt`で指定されたフォーマット指定子を使用して、入力を解析し、`tp`に代入する
+    - パラメータ`fmt`で指定されたフォーマットフラグを使用して、入力を解析し、`tp`に代入する
     - 有効な日付・時間の解析に失敗した場合、`is.`[`setstate`](/reference/ios/basic_ios/setstate.md)`(`[`ios_base::failbit`](/reference/ios/ios_base/type-iostate.md)`)`が呼び出され、パラメータ`tp`は変更されない
     - タイムゾーンフォーマット`&amp;#34;%Z&amp;#34;`が指定され、解析が成功した場合、パラメータ`abbrev`が非ヌルである場合に`*abbrev`にタイムゾーン名が代入される
     - タイムゾーンとしてUTC時間からのオフセット時間 (日本なら`&amp;#34;+0900&amp;#34;`) を意味するフォーマット`&amp;#34;%z&amp;#34;`が指定され、解析が成功した場合、パラメータ`offset`が非ヌルである場合に`*offset`にその値が代入される
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>formatter -- s/フォーマット指定子/フォーマットフラグ/ 規格書の用語を使用するよう修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/weekday/formatter.html"/>
      <id>2105fb7d0499780e4d33e4a8b8155e9d3a709419:reference/chrono/weekday/formatter.md</id>
      <updated>2020-06-04T18:18:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/weekday/formatter.md b/reference/chrono/weekday/formatter.md
index 1995615f7..e2baddef0 100644
--- a/reference/chrono/weekday/formatter.md
+++ b/reference/chrono/weekday/formatter.md
@@ -14,9 +14,9 @@ namespace std {
 ## 概要
 `weekday`クラスに対する[`std::formatter`](/reference/format/formatter.md)クラステンプレートの特殊化。
 
-フォーマット指定子としては、以下を使用できる：
+フォーマットフラグとしては、以下を使用できる：
 
-| フォーマット指定子 | 説明 |
+| フォーマットフラグ | 説明 |
 |--------------------|------|
 | `%a` | ロケール依存の曜日の略称 |
 | `%A` | ロケール依存の曜日の完全名 |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>formatter -- s/フォーマット指定子/フォーマットフラグ/ 規格書の用語を使用するよう修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year/formatter.html"/>
      <id>2105fb7d0499780e4d33e4a8b8155e9d3a709419:reference/chrono/year/formatter.md</id>
      <updated>2020-06-04T18:18:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year/formatter.md b/reference/chrono/year/formatter.md
index c9076c150..585cda9f5 100644
--- a/reference/chrono/year/formatter.md
+++ b/reference/chrono/year/formatter.md
@@ -14,9 +14,9 @@ namespace std {
 ## 概要
 `year`クラスに対する[`std::formatter`](/reference/format/formatter.md)クラステンプレートの特殊化。
 
-フォーマット指定子としては、以下を使用できる：
+フォーマットフラグとしては、以下を使用できる：
 
-| フォーマット指定子 | 説明 |
+| フォーマットフラグ | 説明 |
 |--------------------|------|
 | `%C`  | 100で切り下げ除算した2桁0埋め10進数の年 (世紀) |
 | `$EC` | ロケール依存の世紀の異なる表現 (日本だと元号 `&amp;#34;令和&amp;#34;`) |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>formatter -- s/フォーマット指定子/フォーマットフラグ/ 規格書の用語を使用するよう修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day/formatter.html"/>
      <id>2105fb7d0499780e4d33e4a8b8155e9d3a709419:reference/chrono/year_month_day/formatter.md</id>
      <updated>2020-06-04T18:18:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day/formatter.md b/reference/chrono/year_month_day/formatter.md
index 4887da06f..9b3b22343 100644
--- a/reference/chrono/year_month_day/formatter.md
+++ b/reference/chrono/year_month_day/formatter.md
@@ -14,9 +14,9 @@ namespace std {
 ## 概要
 `year_month_day`クラスに対する[`std::formatter`](/reference/format/formatter.md)クラステンプレートの特殊化。
 
-フォーマット指定子としては、以下を使用できる：
+フォーマットフラグとしては、以下を使用できる：
 
-| フォーマット指定子 | 説明 |
+| フォーマットフラグ | 説明 |
 |--------------------|------|
 | `%D` | `%m/%d/%y`と等価 |
 | `%F` | `%Y-%m-%d`と等価 |
@@ -24,7 +24,7 @@ namespace std {
 | `%x` | ロケール依存の日付表現 |
 | `%Ex` | `%x`の異なる表現 |
 
-その他、[`day`](/reference/chrono/day/formatter.md)、[`month`](/reference/chrono/month/formatter.md)、[`year`](/reference/chrono/year/formatter.md)で利用可能なフォーマット指定子を使用できる。
+その他、[`day`](/reference/chrono/day/formatter.md)、[`month`](/reference/chrono/month/formatter.md)、[`year`](/reference/chrono/year/formatter.md)で利用可能なフォーマットフラグを使用できる。
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;&lt; -- s/フォーマット指定子/フォーマットフラグ/ 規格書の用語を使用するよう修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day/op_ostream.html"/>
      <id>2105fb7d0499780e4d33e4a8b8155e9d3a709419:reference/chrono/year_month_day/op_ostream.md</id>
      <updated>2020-06-04T18:18:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day/op_ostream.md b/reference/chrono/year_month_day/op_ostream.md
index a1a3ff032..63e9ba520 100644
--- a/reference/chrono/year_month_day/op_ostream.md
+++ b/reference/chrono/year_month_day/op_ostream.md
@@ -29,7 +29,7 @@ namespace std::chrono {
 
 
 ## 備考
-- フォーマット指定子`&amp;#34;%F&amp;#34;`は`&amp;#34;%Y-%m-%d&amp;#34;`と等価であり、4桁ゼロ埋め整数値の年、2桁ゼロ埋め整数値の月、2桁ゼロ埋め整数値の日が、ハイフン区切りで出力される
+- フォーマットフラグ`&amp;#34;%F&amp;#34;`は`&amp;#34;%Y-%m-%d&amp;#34;`と等価であり、4桁ゼロ埋め整数値の年、2桁ゼロ埋め整数値の月、2桁ゼロ埋め整数値の日が、ハイフン区切りで出力される
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>format -- chrono : オプションの間違いを修正。%0 (ゼロ) ではなく %O (オー) だった</title>
      <link href="https://cpprefjp.github.io/reference/chrono/format.html"/>
      <id>07a5e3e5a6246d7db641fd63ee6db4c366367833:reference/chrono/format.md</id>
      <updated>2020-06-04T18:15:51+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/format.md b/reference/chrono/format.md
index 5eb43968e..ff8457a9b 100644
--- a/reference/chrono/format.md
+++ b/reference/chrono/format.md
@@ -30,37 +30,37 @@ chronoライブラリではこれに加え、たとえばデフォルトでは
 | `%B` | ロケール依存の月の完全名。&amp;lt;br/&amp;gt; 値に有効な月が含まれていない場合、[`std::format_error`](/reference/format/format_error.md)例外を送出する | `&amp;#34;April&amp;#34;`, `&amp;#34;4月&amp;#34;` |
 | `%c` | ロケール依存の日付・時間の表現。改良コマンド`%Ec`を指定すると、異なる表現を出力する | `&amp;#34;Fri Apr 24 17:14:44 2020&amp;#34;`&amp;lt;br/&amp;gt; `&amp;#34;2020年04月24日 17時14分44秒&amp;#34;`&amp;lt;br/&amp;gt; `%Ec`では`&amp;#34;令和02年04月24日 17時14分44秒&amp;#34;` |
 | `%C` | 100で切り下げ除算した年 (世紀)。結果が10進数で1桁の場合、先頭に`0`がつく。改良コマンド`%EC`を指定すると、ロケール依存の世紀の異なる表現を出力する | `&amp;#34;21&amp;#34;`&amp;lt;br/&amp;gt; `%EC`では`&amp;#34;令和&amp;#34;` (元号) |
-| `%d` | 10進数での月の日。結果が10進数で1桁の場合、先頭に`0`がつく。改良コマンド`%0d`を指定すると、ロケール依存の異なる表現を出力する | `&amp;#34;24&amp;#34;` |
+| `%d` | 10進数での月の日。結果が10進数で1桁の場合、先頭に`0`がつく。改良コマンド`%Od`を指定すると、ロケール依存の異なる表現を出力する | `&amp;#34;24&amp;#34;` |
 | `%D` | `%m/%d/%y`と等価 | `&amp;#34;04/24/20&amp;#34;` |
-| `%e` | 10進数での月の日。結果が10進数で1桁の場合、先頭にスペースがつく。改良コマンド`%0e`を指定すると、ロケール依存の異なる表現を出力する | `&amp;#34; 1&amp;#34;` |
+| `%e` | 10進数での月の日。結果が10進数で1桁の場合、先頭にスペースがつく。改良コマンド`%Oe`を指定すると、ロケール依存の異なる表現を出力する | `&amp;#34; 1&amp;#34;` |
 | `%F` | `%Y-%m-%d`と等価 | `&amp;#34;2020-04-24&amp;#34;` |
 | `%g` | ISOの週ベースのうしろ2桁10進数の年。結果が1桁の場合、先頭に`0`がつく | `&amp;#34;20&amp;#34;` |
 | `%G` | ISOの週ベースの10進数の年。結果が4桁未満の場合、4桁になるよう左が`0`で埋められる | `&amp;#34;2020&amp;#34;` |
 | `%h` | `%b`と等価 | `&amp;#34;Jan&amp;#34;`, `&amp;#34;4月&amp;#34;` |
-| `%H` | 24時間時計での10進数の時。結果が1桁の場合、先頭に`0`がつく。改良コマンド`%0H`を指定知ると、ロケール依存の異なる表現を出力する | `&amp;#34;17&amp;#34;` |
-| `%I` | 12時間時計での10進数の時。結果が1桁の場合、先頭に`0`がつく。改良コマンド`%0I`を指定知ると、ロケール依存の異なる表現を出力する | `&amp;#34;05&amp;#34;` |
+| `%H` | 24時間時計での10進数の時。結果が1桁の場合、先頭に`0`がつく。改良コマンド`%OH`を指定知ると、ロケール依存の異なる表現を出力する | `&amp;#34;17&amp;#34;` |
+| `%I` | 12時間時計での10進数の時。結果が1桁の場合、先頭に`0`がつく。改良コマンド`%OI`を指定知ると、ロケール依存の異なる表現を出力する | `&amp;#34;05&amp;#34;` |
 | `%j` | 10進数での年の日。1月1日は`001`が出力される。結果が3桁未満の場合、3桁になるよう左が`0`で埋められる | `&amp;#34;115&amp;#34;` |
-| `%m` | 10進数での月。1月は`01`が出力される。結果が1桁の場合、先頭に`0`がつく。改良コマンド`%0m`を指定すると、ロケール依存の異なる表現を出力する | `&amp;#34;04&amp;#34;` |
-| `%M` | 10進数での分。結果が1桁の場合、先頭に`0`がつく。改良コマンド`%0M`を指定すると、ロケール依存の異なる表現を出力する | `&amp;#34;14&amp;#34;` |
+| `%m` | 10進数での月。1月は`01`が出力される。結果が1桁の場合、先頭に`0`がつく。改良コマンド`%Om`を指定すると、ロケール依存の異なる表現を出力する | `&amp;#34;04&amp;#34;` |
+| `%M` | 10進数での分。結果が1桁の場合、先頭に`0`がつく。改良コマンド`%OM`を指定すると、ロケール依存の異なる表現を出力する | `&amp;#34;14&amp;#34;` |
 | `%n` | 改行文字 | |
 | `%p` | 12時間時計でのロケール依存の午前・午後の表現 | `&amp;#34;PM&amp;#34;`, `&amp;#34;午後&amp;#34;` |
 | `%q` | [`duration`](duration.md)単位ごとのサフィックス。[`duration`](duration.md)の[`operator&amp;lt;&amp;lt;`](duration/op_ostream.md)で出力されるサフィックスと等価 | `&amp;#34;s&amp;#34;` |
 | `%Q` | [`duration`](duration.md)の数値。[`.count()`](duration/count.md)で取得した値 | `&amp;#34;44&amp;#34;` |
 | `%r` | 12時間時計でのロケール依存の時間 | `&amp;#34;05:14:44 PM&amp;#34;`&amp;lt;br/&amp;gt; `&amp;#34;午後05時14分44秒&amp;#34;` |
 | `%R` | `%H:%M`と等価 | `&amp;#34;17:14&amp;#34;` |
-| `%S` | 10進数での秒。10秒未満の場合、先頭に`0`がつく。入力が秒の精度と正確に一致しない場合、浮動小数点フォーマットで出力される。10進数の浮動小数点数で小数点以下18桁以内で表現できない場合、マイクロ秒で出力される。改良コマンド`%0S`を指定すると、ロケール依存の異なる表現を出力する | `&amp;#34;44&amp;#34;`&amp;lt;br/&amp;gt; `&amp;#34;44.123&amp;#34;` |
+| `%S` | 10進数での秒。10秒未満の場合、先頭に`0`がつく。入力が秒の精度と正確に一致しない場合、浮動小数点フォーマットで出力される。10進数の浮動小数点数で小数点以下18桁以内で表現できない場合、マイクロ秒で出力される。改良コマンド`%OS`を指定すると、ロケール依存の異なる表現を出力する | `&amp;#34;44&amp;#34;`&amp;lt;br/&amp;gt; `&amp;#34;44.123&amp;#34;` |
 | `%t` | 水平タブ文字 | |
 | `%T` | `%H:%M:%S`と等価 | `&amp;#34;17:14:44.123&amp;#34;` |
-| `%u` | 10進数での月曜を1とするISO曜日番号 (1-7)。改良コマンド`%0u`を指定すると、ロケール依存の異なる表現を出力する | `&amp;#34;5&amp;#34;` |
-| `%U` | 10進数での年の週番号。年の最初の日曜日が最初の曜日であるとして`01`、同年のそれより前の日は`00`となる。結果が1桁の場合、先頭に`0`がつく。改良コマンド`%0U`を指定すると、ロケール依存の異なる表現を出力する | `&amp;#34;16&amp;#34;` |
-| `%V` | 10進数でのISO週ベースの週番号。結果が1桁の場合、先頭に`0`がつく。改良コマンド`%0V`を指定すると、ロケール依存の異なる表現を出力する | `&amp;#34;17&amp;#34;` |
-| `%w` | 10進数での日曜を0とする曜日番号 (0-6)。改良コマンド`%0w`を指定すると、ロケール依存の異なる表現を出力する | `&amp;#34;5&amp;#34;` |
-| `%W` | 10進数での年の週番号。年の最初の月曜日が最初の曜日であるとして`01`、同年のそれより前の日は`00`となる。結果が1桁の場合、先頭に`0`がつく。改良コマンド`%0W`を指定すると、ロケール依存の異なる表現を出力する | `&amp;#34;16&amp;#34;` |
+| `%u` | 10進数での月曜を1とするISO曜日番号 (1-7)。改良コマンド`%Ou`を指定すると、ロケール依存の異なる表現を出力する | `&amp;#34;5&amp;#34;` |
+| `%U` | 10進数での年の週番号。年の最初の日曜日が最初の曜日であるとして`01`、同年のそれより前の日は`00`となる。結果が1桁の場合、先頭に`0`がつく。改良コマンド`%OU`を指定すると、ロケール依存の異なる表現を出力する | `&amp;#34;16&amp;#34;` |
+| `%V` | 10進数でのISO週ベースの週番号。結果が1桁の場合、先頭に`0`がつく。改良コマンド`%OV`を指定すると、ロケール依存の異なる表現を出力する | `&amp;#34;17&amp;#34;` |
+| `%w` | 10進数での日曜を0とする曜日番号 (0-6)。改良コマンド`%Ow`を指定すると、ロケール依存の異なる表現を出力する | `&amp;#34;5&amp;#34;` |
+| `%W` | 10進数での年の週番号。年の最初の月曜日が最初の曜日であるとして`01`、同年のそれより前の日は`00`となる。結果が1桁の場合、先頭に`0`がつく。改良コマンド`%OW`を指定すると、ロケール依存の異なる表現を出力する | `&amp;#34;16&amp;#34;` |
 | `%x` | ロケール依存の日付表現。改良コマンド`%Ex`を指定すると、ロケール依存の異なる表現が出力される | `&amp;#34;04/24/20&amp;#34;`&amp;lt;br/&amp;gt; `&amp;#34;2020年04月24日&amp;#34;`&amp;lt;br/&amp;gt; `%Ex`では`&amp;#34;令和02年04月24日&amp;#34;` |
 | `%X` | ロケール依存の時間表現。改良コマンド`%EX`を指定すると、ロケール依存の異なる表現が出力される | `&amp;#34;17:14:44&amp;#34;`&amp;lt;br/&amp;gt; `&amp;#34;17時14分44秒&amp;#34;` |
-| `%y` | 10進数での年のうしろ2桁。結果が1桁の場合、先頭に`0`がつく。改良コマンド`%0y`を指定すると、ロケール依存の異なる表現を出力する。改良コマンド`%Ey`を指定すると、`%EC`からのオフセットとしてロケール依存の異なる表現を出力する。 | `&amp;#34;20&amp;#34;`&amp;lt;br/&amp;gt; `%Ey`では`&amp;#34;02&amp;#34;` |
+| `%y` | 10進数での年のうしろ2桁。結果が1桁の場合、先頭に`0`がつく。改良コマンド`%Oy`を指定すると、ロケール依存の異なる表現を出力する。改良コマンド`%Ey`を指定すると、`%EC`からのオフセットとしてロケール依存の異なる表現を出力する。 | `&amp;#34;20&amp;#34;`&amp;lt;br/&amp;gt; `%Ey`では`&amp;#34;02&amp;#34;` |
 | `%Y` | 10進数での年。結果が4桁未満の場合、4桁になるよう左が`0`で埋められる。改良コマンド`%EY`を指定すると、ロケール依存の異なる表現の完全な年を出力する | `&amp;#34;2020&amp;#34;`&amp;lt;br/&amp;gt; `%EY`では`&amp;#34;令和02年&amp;#34;` |
-| `%z` | ISO 8601フォーマットでのUTCからのオフセット。例として`-0430`はUTCから4時間30分遅れていることを表す。オフセットがゼロの場合は`+0000`が使用される。改良コマンド`%Ez`と`%0z`を指定すると、時と分の間にコロン (`:`) が挿入される。オフセット情報が利用可能でない場合、[`std::format_error`](/reference/format/format_error.md)例外を送出する | `&amp;#34;+0900&amp;#34;`&amp;lt;br/&amp;gt;`%Ez`では`&amp;#34;+09:00&amp;#34;` |
+| `%z` | ISO 8601フォーマットでのUTCからのオフセット。例として`-0430`はUTCから4時間30分遅れていることを表す。オフセットがゼロの場合は`+0000`が使用される。改良コマンド`%Ez`と`%Oz`を指定すると、時と分の間にコロン (`:`) が挿入される。オフセット情報が利用可能でない場合、[`std::format_error`](/reference/format/format_error.md)例外を送出する | `&amp;#34;+0900&amp;#34;`&amp;lt;br/&amp;gt;`%Ez`では`&amp;#34;+09:00&amp;#34;` |
 | `%Z` | タイムゾーンの略称。タイムゾーンの略称が利用可能でない場合、[`std::format_error`](/reference/format/format_error.md)例外を送出する | `&amp;#34;JST&amp;#34;` |
 | `%%` | 文字`%` | `&amp;#34;%&amp;#34;` |
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>formatter -- chrono : オプションの間違いを修正。%0 (ゼロ) ではなく %O (オー) だった</title>
      <link href="https://cpprefjp.github.io/reference/chrono/local_info/formatter.html"/>
      <id>07a5e3e5a6246d7db641fd63ee6db4c366367833:reference/chrono/local_info/formatter.md</id>
      <updated>2020-06-04T18:15:51+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/local_info/formatter.md b/reference/chrono/local_info/formatter.md
index bce6dd0b1..8b8c1a418 100644
--- a/reference/chrono/local_info/formatter.md
+++ b/reference/chrono/local_info/formatter.md
@@ -20,7 +20,7 @@ namespace std {
 |--------------------|------|
 | `%z`  | ISO 8601フォーマットでのUTCからのオフセット (日本だと`&amp;#34;+0900&amp;#34;`) |
 | `%Ez` | オフセットの時と分の間にコロン (:) が挿入される (日本だと`&amp;#34;+09:00&amp;#34;`) |
-| `%0z` | `%Ez`と等価 |
+| `%Oz` | `%Ez`と等価 |
 | `%Z`  | タイムゾーンの略称 (日本だと`&amp;#34;JST&amp;#34;`) |
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>formatter -- chrono : オプションの間違いを修正。%0 (ゼロ) ではなく %O (オー) だった</title>
      <link href="https://cpprefjp.github.io/reference/chrono/sys_info/formatter.html"/>
      <id>07a5e3e5a6246d7db641fd63ee6db4c366367833:reference/chrono/sys_info/formatter.md</id>
      <updated>2020-06-04T18:15:51+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/sys_info/formatter.md b/reference/chrono/sys_info/formatter.md
index d20423f0f..176cd7878 100644
--- a/reference/chrono/sys_info/formatter.md
+++ b/reference/chrono/sys_info/formatter.md
@@ -20,7 +20,7 @@ namespace std {
 |--------------------|------|
 | `%z`  | ISO 8601フォーマットでのUTCからのオフセット (日本だと`&amp;#34;+0900&amp;#34;`) |
 | `%Ez` | オフセットの時と分の間にコロン (:) が挿入される (日本だと`&amp;#34;+09:00&amp;#34;`) |
-| `%0z` | `%Ez`と等価 |
+| `%Oz` | `%Ez`と等価 |
 | `%Z`  | タイムゾーンの略称 (日本だと`&amp;#34;JST&amp;#34;`) |
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>formatter -- chrono : オプションの間違いを修正。%0 (ゼロ) ではなく %O (オー) だった</title>
      <link href="https://cpprefjp.github.io/reference/chrono/weekday/formatter.html"/>
      <id>07a5e3e5a6246d7db641fd63ee6db4c366367833:reference/chrono/weekday/formatter.md</id>
      <updated>2020-06-04T18:15:51+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/weekday/formatter.md b/reference/chrono/weekday/formatter.md
index 7ec101d33..1995615f7 100644
--- a/reference/chrono/weekday/formatter.md
+++ b/reference/chrono/weekday/formatter.md
@@ -21,7 +21,7 @@ namespace std {
 | `%a` | ロケール依存の曜日の略称 |
 | `%A` | ロケール依存の曜日の完全名 |
 | `%u` | 10進数での月曜を1とするISO曜日番号 (1-7) |
-| `%0u` | ロケール依存の`%u`の異なる表現 |
+| `%Ou` | ロケール依存の`%u`の異なる表現 |
 | `%w` | 10進数での日曜を0とするISO曜日番号 (0-6) |
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>from_stream -- chrono : オプションの間違いを修正。%0 (ゼロ) ではなく %O (オー) だった</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day/from_stream.html"/>
      <id>07a5e3e5a6246d7db641fd63ee6db4c366367833:reference/chrono/year_month_day/from_stream.md</id>
      <updated>2020-06-04T18:15:51+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day/from_stream.md b/reference/chrono/year_month_day/from_stream.md
index d30a05279..1aa4e74f3 100644
--- a/reference/chrono/year_month_day/from_stream.md
+++ b/reference/chrono/year_month_day/from_stream.md
@@ -59,7 +59,7 @@ int main()
     ss &amp;lt;&amp;lt; &amp;#34;2020-03-01&amp;#34;;
 
     chrono::year_month_day ymd;
-    chrono::from_stream(ss, ymd, &amp;#34;%04F&amp;#34;); // 年の桁数を指定する
+    chrono::from_stream(ss, ymd, &amp;#34;%4F&amp;#34;); // 年の桁数を指定する
     assert(ymd == 2020y/3/1);
   }
 }
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>parse -- chronoのparse : 仕様を書ききった</title>
      <link href="https://cpprefjp.github.io/reference/chrono/parse.html"/>
      <id>f4ce940842ac76c87e53dfcd223f0506ca998250:reference/chrono/parse.md</id>
      <updated>2020-06-04T18:13:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/parse.md b/reference/chrono/parse.md
index 20381a81b..b01009b58 100644
--- a/reference/chrono/parse.md
+++ b/reference/chrono/parse.md
@@ -50,9 +50,38 @@ namespace std::chrono {
 | `%b` | ロケール依存の月の略称 (大文字・小文字を区別しない) | `&amp;#34;Apr&amp;#34;`&amp;lt;br/&amp;gt; 日本のロケールでは`&amp;#34;4月&amp;#34;` |
 | `%B` | `%b`と等価 | |
 | `%c` | ロケール依存の日付・時間の表現。改良コマンド`%Ec`を指定すると、異なる表現になる | `&amp;#34;Fri Apr 24 17:14:44 2020&amp;#34;`&amp;lt;br/&amp;gt; 日本のロケールでは`&amp;#34;2020年04月24日 17時14分44秒&amp;#34;`&amp;lt;br/&amp;gt; `%Ec`では`&amp;#34;令和02年04月24日 17時14分44秒&amp;#34;` |
-| `%C` | 世紀の10進数番号。改良コマンド`%NC` (Nは10進整数) によって読み込む最大の文字数を指定できる。Nを指定子ない場合、デフォルトは2。先頭の0は許可されるが要求はされない。改良コマンド`%EC`と`%OC`はロケール依存の異なる表現になる | `&amp;#34;21&amp;#34;`&amp;lt;br/&amp;gt; `%EC`では元号`&amp;#34;令和&amp;#34;` |
-
-(書きかけ)
+| `%C` | 世紀の10進数番号。改良コマンド`%NC` (Nは10進整数) によって読み込む最大の文字数を指定できる。Nを指定しない場合、デフォルトは2。先頭の0は許可されるが要求はされない。改良コマンド`%EC`と`%OC`はロケール依存の異なる表現になる | `&amp;#34;21&amp;#34;`&amp;lt;br/&amp;gt; `%EC`では元号`&amp;#34;令和&amp;#34;` |
+| `%d` | 10進数の月の日。改良コマンド`%Nd` (Nは10進整数) によって読み込む最大の文字数を指定できる。Nを指定しない場合、デフォルトは2。先頭の0は許可されるが要求はされない。改良コマンド`%Od`はロケール依存の異なる表現になる | `&amp;#34;4&amp;#34;` |
+| `%D` | `%m/%d/%y`と等価 | `&amp;#34;04/01/2020&amp;#34;` |
+| `%e` | `%d`と等価で、`%d`と同様の改良コマンドが使用できる | |
+| `%F` | `%Y-%m-%d`と等価。`%NF` (Nは10進整数) を指定した場合、幅は`%Y`にのみ適用される | `&amp;#34;2020-04-24&amp;#34;` |
+| `%g` | ISOの週ベースのうしろ2桁10進数の年。改良コマンド`%Ng` (Nは10進整数) によって読み込む最大の文字数を指定できる。Nを指定しない場合、デフォルトは2。先頭の0は許可されるが要求はされない。 | `&amp;#34;20&amp;#34;` |
+| `%G` | ISOの週ベースの10進数の年。改良コマンド`%NG` (Nは10進整数) によって読み込む最大の文字数を指定できる。Nを指定しない場合、デフォルトは4。先頭の0は許可されるが要求はされない。 | `&amp;#34;2020&amp;#34;` |
+| `%h` | `%b`と等価 | |
+| `%H` | 24時間時計での10進数の時。改良コマンド`%NH` (Nは10進整数) によって読み込む最大の文字数を指定できる。Nを指定しない場合、デフォルトは2。先頭の0は許可されるが要求はされない。改良コマンド`%OH`はロケール依存の異なる表現になる | `&amp;#34;17&amp;#34;` |
+| `%I` | 12時間時計での10進数の時。改良コマンド`%NI` (Nは10進整数) によって読み込む最大の文字数を指定できる。Nを指定しない場合、デフォルトは2。先頭の0は許可されるが要求はされない。改良コマンド`%OI`はロケール依存の異なる表現になる | `&amp;#34;05&amp;#34;` |
+| `%j` | 10進数での年の日。1月1日は`001`。改良コマンド`%Nj` (Nは10進整数) によって読み込む最大の文字数を指定できる。Nを指定しない場合、デフォルトは3。先頭の0は許可されるが要求はされない。 | `&amp;#34;115&amp;#34;` |
+| `%m` | 10進数での月。1月は`01`。改良コマンド`%Nm` (Nは10進整数) によって読み込む最大の文字数を指定できる。Nを指定しない場合、デフォルトは2。先頭の0は許可されるが要求はされない。改良コマンド`%Om`はロケール依存の異なる表現になる | `&amp;#34;04&amp;#34;` |
+| `%M` | 10進数での分。改良コマンド`%NM` (Nは10進整数) によって読み込む最大の文字数を指定できる。Nを指定しない場合、デフォルトは2。先頭の0は許可されるが要求はされない。改良コマンド`%OM`はロケール依存の異なる表現になる | `&amp;#34;14&amp;#34;` |
+| `%n` | ひとつのホワイトスペース文字にマッチする。 | |
+| `%p` | 12時間時計でのロケール依存の午前・午後の表現 | `&amp;#34;PM&amp;#34;`, `&amp;#34;午後&amp;#34;` |
+| `%r` | 12時間時計でのロケール依存の時間 | `&amp;#34;05:14:44 PM&amp;#34;`&amp;lt;br/&amp;gt; `&amp;#34;午後05時14分44秒&amp;#34;` |
+| `%R` | `%H:%M`と等価 | `&amp;#34;17:14&amp;#34;` |
+| `%S` | 10進数での秒。改良コマンド`%NS` (Nは10進整数) によって読み込む最大の文字数を指定できる。Nが指定されず秒に変換可能な精度である場合、デフォルトは2。秒に変可能な精度でない場合は、デフォルトの幅は入力の10進精度によって決まり、フィールドは固定フォーマットの`long double`として解釈される。小数点はロケールによって決まる。先頭の0は許可されるが要求はされない。改良コマンド`%OS`はロケール依存の異なる表現になる。 | `&amp;#34;44&amp;#34;`&amp;lt;br/&amp;gt; `&amp;#34;44.123&amp;#34;` |
+| `%t` | ゼロ個もしくはひとつのホワイトスペース文字にマッチする | |
+| `%T` | `%H:%M:%S`と等価 | `&amp;#34;17:14:44.123&amp;#34;` |
+| `%u` | 10進数での月曜を1とするISO曜日番号 (1-7)。改良コマンド`%Nu` (Nは10進整数) によって読み込む最大の文字数を指定できる。Nを指定しない場合、デフォルトは1。先頭の0は許可されるが要求はされない。改良コマンド`%Ou`はロケール依存の異なる表現になる | `&amp;#34;5&amp;#34;` |
+| `%U` | 10進数での年の週番号。年の最初の日曜日が最初の曜日であるとして`01`、同年のそれより前の日は`00`となる。改良コマンド`%NU` (Nは10進整数) によって読み込む最大の文字数を指定できる。Nを指定しない場合、デフォルトは2。先頭の0は許可されるが要求はされない。 | `&amp;#34;16&amp;#34;` |
+| `%V` | 10進数でのISO週ベースの週番号。改良コマンド`%NV (Nは10進整数) によって読み込む最大の文字数を指定できる。Nを指定しない場合、デフォルトは2。先頭の0は許可されるが要求はされない。 | `&amp;#34;17&amp;#34;` |
+| `%w` | 10進数での日曜を0とする曜日番号 (0-6)。改良コマンド`%Nw (Nは10進整数) によって読み込む最大の文字数を指定できる。Nを指定しない場合、デフォルトは1。先頭の0は許可されるが要求はされない。改良コマンド`%Ow`はロケール依存の異なる表現になる | `&amp;#34;5&amp;#34;` |
+| `%W` | 10進数での年の週番号。年の最初の月曜日が最初の曜日であるとして`01`、同年のそれより前の日は`00`となる。改良コマンド`%NW` (Nは10進整数) によって読み込む最大の文字数を指定できる。Nを指定しない場合、デフォルトは2。先頭の0は許可されるが要求はされない。改良コマンド`%OW`を指定はロケール依存の異なる表現になる | `&amp;#34;16&amp;#34;` |
+| `%x` | ロケール依存の日付表現。改良コマンド`%Ex`はロケール依存の異なる表現になる| `&amp;#34;04/24/20&amp;#34;`&amp;lt;br/&amp;gt; `&amp;#34;2020年04月24日&amp;#34;`&amp;lt;br/&amp;gt; `%Ex`では`&amp;#34;令和02年04月24日&amp;#34;` |
+| `%X` | ロケール依存の時間表現。改良コマンド`%EX`はロケール依存の異なる表現になる | `&amp;#34;17:14:44&amp;#34;`&amp;lt;br/&amp;gt; `&amp;#34;17時14分44秒&amp;#34;` |
+| `%y` | 10進数での年のうしろ2桁。世紀が (`%C`などで) 指定されない場合、範囲`[69, 99]`は1969年から1999年を参照し、範囲`[00, 68]`は2000年から2068年を参照する。改良コマンド`%Ny` (Nは10進整数) によって読み込む最大の文字数を指定できる。Nを指定しない場合、デフォルトは2。先頭の0は許可されるが要求はされない。改良コマンド`%Ey`または`%Oy`はロケール依存の異なる表現になる。 | `&amp;#34;20&amp;#34;`&amp;lt;br/&amp;gt; `%Ey`では (元号ベースの下2桁年) `&amp;#34;02&amp;#34;` |
+| `%Y` | 10進数での年。改良コマンド`%NY` (Nは10進整数) によって読み込む最大の文字数を指定できる。Nを指定しない場合、デフォルトは4。先頭の0は許可されるが要求はされない。改良コマンド`%EY`はロケール依存の異なる表現になる | `&amp;#34;2020&amp;#34;`&amp;lt;br/&amp;gt; `%EY`では`&amp;#34;令和02年&amp;#34;` |
+| `%z` | `[+|-]hh[mm]`フォーマットでのUTCタイムゾーンからのオフセット時間 (`[ ]`カッコ内は省略可能)。例として`-0430`はUTCから4時間30分遅れていることを表す。 改良コマンド`%Ez`と`%Oz`は、時と分の間にコロン (`:`) が要求され、時の先頭のゼロは省略できる`[+|-]h[h][:mm]`フォーマットとなる。 | `&amp;#34;+0900&amp;#34;`&amp;lt;br/&amp;gt;`%Ez`では`&amp;#34;9&amp;#34;` |
+| `%Z` | タイムゾーンの略称。単一の単語を解析する。この単語に含めることができるのは、基本文字集合の英数字または`&amp;#39;_&amp;#39;`, `&amp;#39;/&amp;#39;`, `&amp;#39;-&amp;#39;`, `&amp;#39;+&amp;#39;`の文字のみ。 | `&amp;#34;JST&amp;#34;` |
+| `%%` | 文字`%`を抽出する | `&amp;#34;%&amp;#34;` |
 
 
 ## テンプレートパラメータ制約
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
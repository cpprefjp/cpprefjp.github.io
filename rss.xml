<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2025-08-16T01:54:05.961617</updated>
  <id>e7db75cd-ca48-4fcf-8fd7-567bcc294057</id>

  
    <entry>
      <title>execution -- execution: P3557R3 remove transform_completion_signatures(_of)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution.html"/>
      <id>d29d225cd07cf1094a32f27d27e8283edc3abdd7:reference/execution/execution.md</id>
      <updated>2025-08-16T10:47:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution.md b/reference/execution/execution.md
index 634592a36..a9eda1dc8 100644
--- a/reference/execution/execution.md
+++ b/reference/execution/execution.md
@@ -142,8 +142,6 @@ Senderコンシューマは名前空間 `std::this_thread` で定義される。
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
 | [`execution::completion_signatures`](execution/completion_signatures.md) | 完了シグネチャ集合を表現する型 (class template) | C++26 |
-| [`execution::transform_completion_signatures`](execution/transform_completion_signatures.md) | 完了シグネチャ集合を変換 (alias template) | C++26 |
-| [`execution::transform_completion_signatures_of`](execution/transform_completion_signatures_of.md) | Senderの完了シグネチャ集合を変換 (alias template) | C++26 |
 | [`execution::run_loop`](execution/run_loop.md) | 単一スレッド上でのループ実行 (class) | C++26 |
 
 ### コルーチンユーティリティ
@@ -162,4 +160,5 @@ Senderコンシューマは名前空間 `std::this_thread` で定義される。
 ## 参照
 - [P0024R2 The Parallelism TS Should be Standardized](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0024r2.html)
 - [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
+- [P3557R3 High-Quality Sender Diagnostics with Constexpr Exceptions](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2025/p3557r3.html)
 - [P3682R0 Remove `std::execution::split`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2025/p3682r0.pdf)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>gather-signatures -- execution: P3557R3 remove transform_completion_signatures(_of)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/gather-signatures.html"/>
      <id>d29d225cd07cf1094a32f27d27e8283edc3abdd7:reference/execution/execution/gather-signatures.md</id>
      <updated>2025-08-16T10:47:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/gather-signatures.md b/reference/execution/execution/gather-signatures.md
index 40a8ea3e9..9d41f78b4 100644
--- a/reference/execution/execution/gather-signatures.md
+++ b/reference/execution/execution/gather-signatures.md
@@ -37,7 +37,6 @@ using gather-signatures = see below;
 - [`execution::value_types_of_t`](value_types_of_t.md)
 - [`execution::error_types_of_t`](error_types_of_t.md)
 - [`execution::sends_stopped`](sends_stopped.md)
-- [`execution::transform_completion_signatures`](transform_completion_signatures.md)
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>transform_completion_signatures.md -- execution: P3557R3 remove transform_completion_signatures(_of)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/transform_completion_signatures.html"/>
      <id>d29d225cd07cf1094a32f27d27e8283edc3abdd7:reference/execution/execution/transform_completion_signatures.md</id>
      <updated>2025-08-16T10:47:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/transform_completion_signatures.md b/reference/execution/execution/transform_completion_signatures.md
deleted file mode 100644
index 6f590e348..000000000
--- a/reference/execution/execution/transform_completion_signatures.md
+++ /dev/null
@@ -1,86 +0,0 @@
-# transform_completion_signatures
-* execution[meta header]
-* std::execution[meta namespace]
-* type-alias[meta id-type]
-* cpp26[meta cpp]
-
-```cpp
-namespace std::execution {
-  template&amp;lt;
-    valid-completion-signatures InputSignatures,
-    valid-completion-signatures AdditionalSignatures = completion_signatures&amp;lt;&amp;gt;,
-    template&amp;lt;class...&amp;gt; class SetValue = default-set-value,
-    template&amp;lt;class&amp;gt; class SetError = default-set-error,
-    valid-completion-signatures SetStopped = completion_signatures&amp;lt;set_stopped_t()&amp;gt;&amp;gt;
-  using transform_completion_signatures = completion_signatures&amp;lt;see below&amp;gt;;
-}
-```
-* valid-completion-signatures[link completion_signatures.md]
-* completion_signatures[link completion_signatures.md]
-* set_stopped_t()[link set_stopped.md]
-
-## 概要
-[完了シグネチャ集合](completion_signatures.md)から別の完了シグネチャ集合へ変換するエイリアステンプレート。
-
-テンプレートパラメータとして完了シグネチャ集合と、各完了シグネチャに対して型変更を適用する複数のテンプレート引数をとり、[`completion_signatures`](completion_signatures.md)の新しい特殊化を生成する。
-
-- `InputSignatures` : 変換元の入力完了シグネチャ集合
-- `AdditionalSignatures` : 追加される完了シグネチャ集合（下記3種の変換適用後に追加される）
-- `SetValue` : [値完了シグネチャ](set_value.md)集合に適用する型変換メタ操作
-- `SetError` : [エラー完了シグネチャ](set_value.md)集合に適用する型変換メタ操作
-- `SetStopped` : [停止完了シグネチャ](set_stopped.md)を置換する完了シグネチャ集合
-
-
-### 詳細仕様
-説明専用のエイリアステンプレート`default-set-value`, `default-set-error`を次の通り定義する。
-```cpp
-template&amp;lt;class... As&amp;gt;
-using default-set-value =
-  completion_signatures&amp;lt;set_value_t(As...)&amp;gt;;
-
-template&amp;lt;class Err&amp;gt;
-using default-set-error =
-  completion_signatures&amp;lt;set_error_t(Err)&amp;gt;;
-```
-* completion_signatures[link completion_signatures.md]
-* set_value_t[link set_value.md]
-* set_error_t[link set_error.md]
-
-説明用のパック型`As`に対して、エイリアステンプレート`SetValue&amp;lt;As...&amp;gt;`を不適格、もしくは[`valid-completion-signatures`](completion_signatures.md)`&amp;lt;SetValue&amp;lt;As...&amp;gt;&amp;gt;`を満たす型とする。
-説明用の型`Err`に対して、エイリアステンプレート`SetError&amp;lt;Err&amp;gt;`を不適格、もしくは[`valid-completion-signatures`](completion_signatures.md)`&amp;lt;SetError&amp;lt;Error&amp;gt;&amp;gt;`を満たす型とする。
-
-説明用のパック`Vs`を、[`gather-signatures`](gather-signatures.md)`&amp;lt;`[`set_value_t`](set_value.md)`, InputSignatures, SetValue,` [`type-list`](type-list.md)`&amp;gt;`で得られる`type-list`の型パラメータパックとする。
-
-説明用のパック`Es`を、[`gather-signatures`](gather-signatures.md)`&amp;lt;`[`set_error_t`](set_error.md)`, InputSignatures,` [`type_identity_t`](/reference/type_traits/type_identity.md)`, error-list&amp;gt;`で得られる[`type-list`](type-list.md)の型パラメータパックとする。ここでエイリアステンプレート`error-list&amp;lt;Ts...&amp;gt;`は`type-list&amp;lt;SetError&amp;lt;Ts&amp;gt;...&amp;gt;`とする。
-
-[`gather-signatures`](gather-signatures.md)`&amp;lt;`[`set_stopped_t`](set_stopped.md)`, InputSignatures, type-list, type-list&amp;gt;`が[`type-list&amp;lt;&amp;gt;`](type-list.md)となるならば、説明用のパック`Ss`を[`completion_signatures&amp;lt;&amp;gt;`](completion_signatures.md)とする。そうでなければ、`Ss`を`SetStopped`とする。
-
-上記いずれかの型が不適格となる場合、下記は不適格となる。
-
-```cpp
-transform_completion_signatures&amp;lt;
-  InputSignatures, AdditionalSignatures,
-  SetValue, SetError, SetStopped&amp;gt;
-```
-
-そうでなければ、集合`AdditionalSignatures`, `Vs...`, `Es...`, `Ss`に含まれる[`completion_signatures`](completion_signatures.md)特殊化のテンプレート引数型の一意な集合を`Sig...`としたとき、`transform_completion_signatures`は[`completion_signatures`](completion_signatures.md)`&amp;lt;Sigs...&amp;gt;`のエイリアスとなる。
-
-
-## バージョン
-### 言語
-- C++26
-
-### 処理系
-- [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
-- [ICC](/implementation.md#icc): ??
-- [Visual C++](/implementation.md#visual_cpp): ??
-
-
-## 関連項目
-- [`execution::completion_signatures`](completion_signatures.md)
-- [`execution::transform_completion_signatures_of`](transform_completion_signatures_of.md)
-
-
-## 参照
-- [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>transform_completion_signatures_of.md -- execution: P3557R3 remove transform_completion_signatures(_of)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/transform_completion_signatures_of.html"/>
      <id>d29d225cd07cf1094a32f27d27e8283edc3abdd7:reference/execution/execution/transform_completion_signatures_of.md</id>
      <updated>2025-08-16T10:47:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/transform_completion_signatures_of.md b/reference/execution/execution/transform_completion_signatures_of.md
deleted file mode 100644
index 74f43325d..000000000
--- a/reference/execution/execution/transform_completion_signatures_of.md
+++ /dev/null
@@ -1,53 +0,0 @@
-# transform_completion_signatures_of
-* execution[meta header]
-* std::execution[meta namespace]
-* type-alias[meta id-type]
-* cpp26[meta cpp]
-
-```cpp
-namespace std::execution {
-  template&amp;lt;
-    sender Sndr,
-    class Env = env&amp;lt;&amp;gt;,
-    valid-completion-signatures AdditionalSignatures = completion_signatures&amp;lt;&amp;gt;,
-    template&amp;lt;class...&amp;gt; class SetValue = see below,
-    template&amp;lt;class&amp;gt; class SetError = see below,
-    valid-completion-signatures SetStopped = completion_signatures&amp;lt;set_stopped_t()&amp;gt;&amp;gt;
-      requires sender_in&amp;lt;Sndr, Env&amp;gt;
-  using transform_completion_signatures_of =
-    transform_completion_signatures&amp;lt;
-      completion_signatures_of_t&amp;lt;Sndr, Env&amp;gt;,
-      AdditionalSignatures, SetValue, SetError, SetStopped&amp;gt;;
-}
-```
-* sender[link sender.md]
-* env&amp;lt;&amp;gt;[link env.md]
-* valid-completion-signatures[link completion_signatures.md]
-* completion_signatures[link completion_signatures.md]
-* set_stopped_t()[link set_stopped.md]
-* sender_in[link sender_in.md]
-* transform_completion_signatures[link transform_completion_signatures.md]
-* completion_signatures_of_t[link completion_signatures_of_t.md]
-
-## 概要
-[Sender型](sender.md)`Sndr`が[環境](../queryable.md)`Env`において非同期操作を作成できるとき、Senderの[完了シグネチャ集合](get_completion_signatures.md)から別の完了シグネチャ集合へ変換するエイリアステンプレート。
-
-
-## バージョン
-### 言語
-- C++26
-
-### 処理系
-- [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
-- [ICC](/implementation.md#icc): ??
-- [Visual C++](/implementation.md#visual_cpp): ??
-
-
-## 関連項目
-- [`execution::get_completion_signatures`](get_completion_signatures.md)
-- [`execution::transform_completion_signatures`](transform_completion_signatures.md)
-
-
-## 参照
-- [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>type-list -- execution: P3557R3 remove transform_completion_signatures(_of)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/type-list.html"/>
      <id>d29d225cd07cf1094a32f27d27e8283edc3abdd7:reference/execution/execution/type-list.md</id>
      <updated>2025-08-16T10:47:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/type-list.md b/reference/execution/execution/type-list.md
index be6b38550..d54a46203 100644
--- a/reference/execution/execution/type-list.md
+++ b/reference/execution/execution/type-list.md
@@ -20,7 +20,6 @@ struct type-list;  // exposition only
 
 ## 関連項目
 - [`execution::sends_stopped`](sends_stopped.md)
-- [`execution::transform_completion_signatures`](transform_completion_signatures.md)
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>変数の型推論のためのauto [N1984] -- 言語機能 : 関連項目を追加</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/auto.html"/>
      <id>6b2d8651f702d3e56a7e170b2400f2403c4eabc8:lang/cpp11/auto.md</id>
      <updated>2025-08-14T13:38:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/auto.md b/lang/cpp11/auto.md
index bf7a66bb4..fc234c660 100644
--- a/lang/cpp11/auto.md
+++ b/lang/cpp11/auto.md
@@ -372,6 +372,7 @@ std::pair&amp;lt;T, U&amp;gt;&amp;amp; p = foo();
 - [C++14 `decltype(auto)`](../cpp14/decltype_auto.md)
 - [C++14 後置戻り値型をプレースホルダーにすることを許可](../cpp14/placeholder_type_in_trailing_return_type.md)
 - [C++14 通常関数の戻り値型推論（ユーザ定義変換関数の型推論を含む）](../cpp14/return_type_deduction_for_normal_functions.md)
+- [C++17 単一要素の波カッコ初期化を非配列とする](../cpp17/new_rules_for_auto_deduction_from_braced-init-list.md)
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexpr ラムダ [P0170R1] -- 言語機能 : 関連項目を追加</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/constexpr_lambda.html"/>
      <id>6b2d8651f702d3e56a7e170b2400f2403c4eabc8:lang/cpp17/constexpr_lambda.md</id>
      <updated>2025-08-14T13:38:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/constexpr_lambda.md b/lang/cpp17/constexpr_lambda.md
index e4d3a09e3..066519ed9 100644
--- a/lang/cpp17/constexpr_lambda.md
+++ b/lang/cpp17/constexpr_lambda.md
@@ -198,6 +198,9 @@ C++14まではラムダ式がコンパイル時に呼び出せないため、
 
 (執筆中)
 
+## &amp;lt;a id=&amp;#34;relative-page&amp;#34; href=&amp;#34;#relative-page&amp;#34;&amp;gt;関連項目&amp;lt;/a&amp;gt;
+- [C++11 `constexpr`](/lang/cpp11/constexpr.md)
+
 ## 参照
 
 (執筆中)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>単一要素の波カッコ初期化を非配列とする [N3922] -- 言語機能 : 関連項目を追加</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/new_rules_for_auto_deduction_from_braced-init-list.html"/>
      <id>6b2d8651f702d3e56a7e170b2400f2403c4eabc8:lang/cpp17/new_rules_for_auto_deduction_from_braced-init-list.md</id>
      <updated>2025-08-14T13:38:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/new_rules_for_auto_deduction_from_braced-init-list.md b/lang/cpp17/new_rules_for_auto_deduction_from_braced-init-list.md
index 658b2b6e0..d03542320 100644
--- a/lang/cpp17/new_rules_for_auto_deduction_from_braced-init-list.md
+++ b/lang/cpp17/new_rules_for_auto_deduction_from_braced-init-list.md
@@ -93,6 +93,7 @@ i
 
 ## &amp;lt;a id=&amp;#34;relative-page&amp;#34; href=&amp;#34;#relative-page&amp;#34;&amp;gt;関連項目&amp;lt;/a&amp;gt;
 
+* [C++11 変数の型推論のための`auto`](/lang/cpp11/auto.md)
 * [C++11 初期化リスト](/lang/cpp11/initializer_lists.md)
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexpr関数内でのtry-catchブロックを許可 [P1002R1] -- 言語機能 : 関連項目を追加</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/try-catch_blocks_in_constexpr_functions.html"/>
      <id>6b2d8651f702d3e56a7e170b2400f2403c4eabc8:lang/cpp20/try-catch_blocks_in_constexpr_functions.md</id>
      <updated>2025-08-14T13:38:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/try-catch_blocks_in_constexpr_functions.md b/lang/cpp20/try-catch_blocks_in_constexpr_functions.md
index 3427b6717..ca7103a88 100644
--- a/lang/cpp20/try-catch_blocks_in_constexpr_functions.md
+++ b/lang/cpp20/try-catch_blocks_in_constexpr_functions.md
@@ -30,6 +30,7 @@ constexpr int f(int x) {
 
 
 ## &amp;lt;a id=&amp;#34;relative-page&amp;#34; href=&amp;#34;#relative-page&amp;#34;&amp;gt;関連項目&amp;lt;/a&amp;gt;
+- [C++11 `constexpr`](/lang/cpp11/constexpr.md)
 - [C++20 可変サイズをもつコンテナの`constexpr`化](more_constexpr_containers.md)
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexpr関数が定数実行できない場合でも適格とする [P2448R2] -- 言語機能 : 関連項目を追加</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/relaxing_some_constexpr_restrictions.html"/>
      <id>6b2d8651f702d3e56a7e170b2400f2403c4eabc8:lang/cpp23/relaxing_some_constexpr_restrictions.md</id>
      <updated>2025-08-14T13:38:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/relaxing_some_constexpr_restrictions.md b/lang/cpp23/relaxing_some_constexpr_restrictions.md
index cb4d14ba4..a715c2943 100644
--- a/lang/cpp23/relaxing_some_constexpr_restrictions.md
+++ b/lang/cpp23/relaxing_some_constexpr_restrictions.md
@@ -115,8 +115,9 @@ void f(std::optional&amp;lt;T&amp;gt;&amp;amp; opt)
 
 ## &amp;lt;a id=&amp;#34;relative-page&amp;#34; href=&amp;#34;#relative-page&amp;#34;&amp;gt;関連項目&amp;lt;/a&amp;gt;
 
-- [C++20 - constexpr関数内でのtry-catchブロックを許可](/lang/cpp20/try-catch_blocks_in_constexpr_functions.md)
-- [C++20 - constexpr関数内で未評価のインラインアセンブリを許可することによる組み込み関数のconstexpr有効化](/lang/cpp20/enabling_constexpr_intrinsics_by_permitting_unevaluated_inline-assembly_in_constexpr_functions.md)
+- [C++11 `constexpr`](/lang/cpp11/constexpr.md)
+- [C++20 `constexpr`関数内での`try-catch`ブロックを許可](/lang/cpp20/try-catch_blocks_in_constexpr_functions.md)
+- [C++20 `constexpr`関数内で未評価のインラインアセンブリを許可することによる組み込み関数の`constexpr`有効化](/lang/cpp20/enabling_constexpr_intrinsics_by_permitting_unevaluated_inline-assembly_in_constexpr_functions.md)
 
 ## 参照
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>static_assertの診断メッセージにユーザーが生成した文字列の指定を許可 [P2741R3] -- 言語機能 : 関連項目を追加</title>
      <link href="https://cpprefjp.github.io/lang/cpp26/user-generated_static_assert_messages.html"/>
      <id>6b2d8651f702d3e56a7e170b2400f2403c4eabc8:lang/cpp26/user-generated_static_assert_messages.md</id>
      <updated>2025-08-14T13:38:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp26/user-generated_static_assert_messages.md b/lang/cpp26/user-generated_static_assert_messages.md
index 1cf9ea1a2..3e2bdefa7 100644
--- a/lang/cpp26/user-generated_static_assert_messages.md
+++ b/lang/cpp26/user-generated_static_assert_messages.md
@@ -53,6 +53,7 @@ static_assert(定数式, 診断メッセージ);
 
 ## &amp;lt;a id=&amp;#34;relative-page&amp;#34; href=&amp;#34;#relative-page&amp;#34;&amp;gt;関連項目&amp;lt;/a&amp;gt;
 - [C++11 コンパイル時アサート](/lang/cpp11/static_assert.md)
+- [C++17 `static_assert`のメッセージ省略を許可](/lang/cpp17/extending_static_assert.md)
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コード内容の仮定をコンパイラに伝える`assume`属性 [P1774R8] -- C++23 assume属性 : C++11属性構文へのリンクを関連項目に追加 #1488</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/portable_assumptions.html"/>
      <id>5895eedd8280c661fcb3952589f442e8fe88f6de:lang/cpp23/portable_assumptions.md</id>
      <updated>2025-08-13T12:12:09+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/portable_assumptions.md b/lang/cpp23/portable_assumptions.md
index 66c560d08..2a9a6ebbd 100644
--- a/lang/cpp23/portable_assumptions.md
+++ b/lang/cpp23/portable_assumptions.md
@@ -65,6 +65,7 @@ int f(int y)
 
 
 ## &amp;lt;a id=&amp;#34;relative-page&amp;#34; href=&amp;#34;#relative-page&amp;#34;&amp;gt;関連項目&amp;lt;/a&amp;gt;
+- [C++11 属性構文](/lang/cpp11/attributes.md)
 - [C++20 `[[likely]]`, `[[unlikely]]`属性](/lang/cpp20/likely_and_unlikely_attributes.md)
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>属性構文 [N2761] -- Merge pull request #1488 from TumoiYorozu/assume</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/attributes.html"/>
      <id>07813202ff92303e96b6b12fc4178d9a29e94714:lang/cpp11/attributes.md</id>
      <updated>2025-08-13T12:02:09+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/attributes.md b/lang/cpp11/attributes.md
index 162f7330a..84d3ad7b0 100644
--- a/lang/cpp11/attributes.md
+++ b/lang/cpp11/attributes.md
@@ -177,6 +177,7 @@ C++11で採用されたもの以外で検討された以下の機能は、属性
 - [C++20 `[[likely]]`, `[[unlikely]]`属性](/lang/cpp20/likely_and_unlikely_attributes.md)
 - [C++20 属性の名前空間を予約](/lang/cpp20/reserving_attribute_namespaces_for_future_use.md)
 - [C++23 ラムダ式に対する属性](/lang/cpp23/attributes_on_lambda_expressions.md)
+- [C++23 コード内容の仮定をコンパイラに伝える`assume`属性](/lang/cpp23/portable_assumptions.md)
 - [C++26 構造化束縛への属性を許可](/lang/cpp26/attributes_for_structured_bindings.md)
 - [C++26 未初期化変数の読み取りをエラー性動作とする (`[[indeterminate]]`属性)](/lang/cpp26/erroneous_behavior_for_uninitialized_reads.md)
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>属性構文 [N2761] -- Add `assume` attributes to attributes.md</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/attributes.html"/>
      <id>d3227a734b455e06aec3830ab3aeb9a4b5724309:lang/cpp11/attributes.md</id>
      <updated>2025-08-13T11:48:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/attributes.md b/lang/cpp11/attributes.md
index 162f7330a..84d3ad7b0 100644
--- a/lang/cpp11/attributes.md
+++ b/lang/cpp11/attributes.md
@@ -177,6 +177,7 @@ C++11で採用されたもの以外で検討された以下の機能は、属性
 - [C++20 `[[likely]]`, `[[unlikely]]`属性](/lang/cpp20/likely_and_unlikely_attributes.md)
 - [C++20 属性の名前空間を予約](/lang/cpp20/reserving_attribute_namespaces_for_future_use.md)
 - [C++23 ラムダ式に対する属性](/lang/cpp23/attributes_on_lambda_expressions.md)
+- [C++23 コード内容の仮定をコンパイラに伝える`assume`属性](/lang/cpp23/portable_assumptions.md)
 - [C++26 構造化束縛への属性を許可](/lang/cpp26/attributes_for_structured_bindings.md)
 - [C++26 未初期化変数の読み取りをエラー性動作とする (`[[indeterminate]]`属性)](/lang/cpp26/erroneous_behavior_for_uninitialized_reads.md)
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Y.Moroto</name>
        <email>morojuyi@gmail.com</email>
      </author>
    </entry>
  
</feed>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2025-04-18T14:43:06.299570</updated>
  <id>492c082a-1d1c-4d54-b549-0691f024d7fa</id>

  
    <entry>
      <title>connect -- execuion/connect: small fixes</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/connect.html"/>
      <id>6f4510e6199a3d86bec9eeb6becf11f395984de1:reference/execution/execution/connect.md</id>
      <updated>2025-04-18T18:23:56+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/connect.md b/reference/execution/execution/connect.md
index efcb2e028..926ca91fb 100644
--- a/reference/execution/execution/connect.md
+++ b/reference/execution/execution/connect.md
@@ -5,7 +5,7 @@
 * cpp26[meta cpp]
 
 ```cpp
-namespace std {
+namespace std::execution {
   struct connect_t;
   inline constexpr connect_t connect{};
 }
@@ -120,12 +120,13 @@ completion_signatures&amp;lt;
   set_error_t(exception_ptr),
   set_stopped_t()&amp;gt;
 ```
+* completion_signatures[link completion_signatures.md]
 * set_error_t[link set_error.md]
 * set_stopped_t[link set_stopped.md]
 * exception_ptr[link /reference/exception/exception_ptr.md]
 * SET-VALUE-SIG[italic]
 
-説明用のコールーチン`suspend-complete`を下記の通り定義する。
+説明用の関数テンプレート`suspend-complete`とコルーチン`suspend-awaitable`を下記の通り定義する。
 
 ```cpp
 namespace std::execution {
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>connect -- execution: get-domain-late,sender-for (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/connect.html"/>
      <id>9cd16e01c774fa89524136ac5ed3b6f9f24e8d78:reference/execution/execution/connect.md</id>
      <updated>2025-04-18T18:09:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/connect.md b/reference/execution/execution/connect.md
index 31cecdaed..efcb2e028 100644
--- a/reference/execution/execution/connect.md
+++ b/reference/execution/execution/connect.md
@@ -29,7 +29,7 @@ namespace std {
 transform_sender(decltype(get-domain-late(sndr, get_env(rcvr))){}, sndr, get_env(rcvr))
 ```
 * transform_sender[link transform_sender.md]
-* get-domain-late[link get-domain-late.md.nolink]
+* get-domain-late[link get-domain-late.md]
 * get_env[link get_env.md]
 
 式`connect(sndr, rcvr)`は下記と等価であり、[`operation_state`](operation_state.md)を満たす型の値となる。
@@ -163,6 +163,8 @@ namespace std::execution {
 * unreachable()[link /reference/utility/unreachable.md]
 * receiver_of[link receiver_of.md]
 * exception_ptr[link /reference/exception/exception_ptr.md]
+* set_value[link set_value.md]
+* set_error[link set_error.md]
 * std::move[link /reference/utility/move.md]
 * current_exception()[link /reference/exception/current_exception.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>get-domain-late -- execution: get-domain-late,sender-for (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/get-domain-late.html"/>
      <id>9cd16e01c774fa89524136ac5ed3b6f9f24e8d78:reference/execution/execution/get-domain-late.md</id>
      <updated>2025-04-18T18:09:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/get-domain-late.md b/reference/execution/execution/get-domain-late.md
new file mode 100644
index 000000000..7650a7dac
--- /dev/null
+++ b/reference/execution/execution/get-domain-late.md
@@ -0,0 +1,58 @@
+# get-domain-late
+* execution[meta header]
+* function template[meta id-type]
+* std::execution[meta namespace]
+* cpp26[meta cpp]
+
+```cpp
+template&amp;lt;class Sndr, class Env&amp;gt;
+constexpr auto get-domain-late(const Sndr&amp;amp; sndr, const Env&amp;amp; env) noexcept;
+```
+
+## 概要
+[Sender](sender.md)と[Receiver](receiver.md)間[接続(connect)](connect.md)時のカスタマイゼーションポイントとして、[実行ドメイン](default_domain.md)を取得する説明専用の関数テンプレート。
+
+
+## 効果
+説明用の型`Domain`を下記の通り定義したとき、`return Doamin();`と等価。
+
+- [`sender-for`](sender-for.md)`&amp;lt;Sndr,` [`continue_on_t`](continue_on.md.nolink)`&amp;gt; == true`のとき、次のラムダ式呼び出し結果の型とする。
+
+    ```cpp
+    [] {
+      auto [_, sch, _] = sndr;
+      return query-or-default(get_domain, sch, default_domain());
+    }();
+    ```
+    * query-or-default[link query-or-default.md.nolink]
+    * get_domain[link get_domain.md.nolink]
+    * default_domain()[link default_domain.md]
+
+- それ以外のとき、下記リストのうち最初に妥当となる式の型、かつ`void`ではない型とする。
+    - [`get_domain`](get_domain.md.nolink)`(`[`get_env`](get_env.md)`(sndr))`
+    - [`completion-domain`](completion-domain.md.nolink)`&amp;lt;void&amp;gt;(sndr)`
+    - `get_domain(env)`
+    - `get_domain(`[`get_scheduler`](get_scheduler.md.nolink)`(env))`
+    - [`default_domain()`](default_domain.md)
+
+
+## 例外
+投げない
+
+
+## 備考
+Senderアダプタ[`continue_on`](continue_on.md.nolink)は[`schedule_from`](schedule_from.md.nolink)と連動して、実行コンテキスト遷移制御のカスタマイゼーションポイントをSchedulerに提供する。
+
+
+## バージョン
+### 言語
+- C++26
+
+
+## 関連項目
+- [`execution::connect`](connect.md)
+
+
+## 参照
+- [P2999R3 Sender Algorithm Customization](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p2999r3.html)
+- [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sender-for -- execution: get-domain-late,sender-for (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/sender-for.html"/>
      <id>9cd16e01c774fa89524136ac5ed3b6f9f24e8d78:reference/execution/execution/sender-for.md</id>
      <updated>2025-04-18T18:09:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/sender-for.md b/reference/execution/execution/sender-for.md
new file mode 100644
index 000000000..0c9d59797
--- /dev/null
+++ b/reference/execution/execution/sender-for.md
@@ -0,0 +1,32 @@
+# sender-for
+* execution[meta header]
+* concept[meta id-type]
+* std::execution[meta namespace]
+* cpp26[meta cpp]
+
+```cpp
+namespace std::execution {
+  template&amp;lt;class Sndr, class Tag&amp;gt;
+  concept sender-for =
+    sender&amp;lt;Sndr&amp;gt; &amp;amp;&amp;amp;
+    same_as&amp;lt;tag_of_t&amp;lt;Sndr&amp;gt;, Tag&amp;gt;;
+}
+```
+* sender[link sender.md]
+* tag_of_t[link tag_of_t.md.nolink]
+
+## 概要
+`sender-for`は、[Sender型](sender.md)`Sndr`が[Senderタグ型](tag_of_t.md.nolink)`Tag`を持つことを表す説明専用のコンセプトである。
+
+
+## バージョン
+### 言語
+- C++26
+
+
+## 関連項目
+- [`execution::sender`](sender.md)
+
+
+## 参照
+- [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>connect -- execution: with-await-transform (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/connect.html"/>
      <id>9bdfb06b23ad982838ea34914ec288a205f339f4:reference/execution/execution/connect.md</id>
      <updated>2025-04-18T17:15:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/connect.md b/reference/execution/execution/connect.md
index 6674d0d49..31cecdaed 100644
--- a/reference/execution/execution/connect.md
+++ b/reference/execution/execution/connect.md
@@ -16,8 +16,8 @@ namespace std {
 
 カスタマイゼーションポイントオブジェクトの呼び出し式`connect(sndr, rcvr)`は、下記の動作となる。
 
-- [`transform_sender`](transform_sender.md)を呼び出して、`sndr`を新しいSender`new_sndr`に変換する。大半のケースでは無変換。
-- 呼び出し式が適格であるならば、`return new_sndr.connect(rcvr)`相当。
+- [`transform_sender`](transform_sender.md)により`sndr`から新しいSender`new_sndr`へ変換する。（多くのケースで無変換）
+- 呼び出し式が適格であるならば、`new_sndr.connect(rcvr)`を返す。
 - そうでなければ、`new_sndr`を[コルーチンのAwaitable型](/lang/cpp20/coroutines.md)とみなして`rcvr`と接続した結果を返す。
 
 
@@ -72,9 +72,12 @@ namespace std::execution {
   };
 }
 ```
+* with-await-transform[link with-await-transform.md]
 * suspend_always[link /reference/coroutine/suspend_always.md]
+* terminate()[link /reference/exception/terminate.md]
 * coroutine_handle[link /reference/coroutine/coroutine_handle.md]
 * set_stopped[link set_stopped.md]
+* std::move[link /reference/utility/move.md]
 * noop_coroutine()[link /reference/coroutine/noop_coroutine.md]
 * from_promise[link /reference/coroutine/coroutine_handle/from_promise.md]
 * env_of_t[link env_of_t.md]
@@ -100,6 +103,7 @@ namespace std::execution {
 }
 ```
 * operation_state_t[link operation_state.md]
+* promise_type[link /lang/cpp20/coroutines.md]
 * coroutine_handle&amp;lt;&amp;gt;[link /reference/coroutine/coroutine_handle.md]
 * destroy()[link /reference/coroutine/coroutine_handle/destroy.md]
 * resume()[link /reference/coroutine/coroutine_handle/resume.md]
@@ -117,7 +121,7 @@ completion_signatures&amp;lt;
   set_stopped_t()&amp;gt;
 ```
 * set_error_t[link set_error.md]
-* set_stopped[link set_stopped.md]
+* set_stopped_t[link set_stopped.md]
 * exception_ptr[link /reference/exception/exception_ptr.md]
 * SET-VALUE-SIG[italic]
 
@@ -159,8 +163,10 @@ namespace std::execution {
 * unreachable()[link /reference/utility/unreachable.md]
 * receiver_of[link receiver_of.md]
 * exception_ptr[link /reference/exception/exception_ptr.md]
+* std::move[link /reference/utility/move.md]
 * current_exception()[link /reference/exception/current_exception.md]
 
+
 ## カスタマイゼーションポイント
 Sender`sndr`[変換後](transform_sender.md)の`new_sndr`に対して、式`new_sndr.connect(rcvr)`が呼び出される。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>connect_result_t -- execution: with-await-transform (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/connect_result_t.html"/>
      <id>9bdfb06b23ad982838ea34914ec288a205f339f4:reference/execution/execution/connect_result_t.md</id>
      <updated>2025-04-18T17:15:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/connect_result_t.md b/reference/execution/execution/connect_result_t.md
index d3e3fd159..5bc8f7de8 100644
--- a/reference/execution/execution/connect_result_t.md
+++ b/reference/execution/execution/connect_result_t.md
@@ -14,7 +14,7 @@ namespace std::execution {
 * connect[link connect.md]
 
 ## 概要
-[Sender型](sender.md)`Sndr`と[Receiver型]`Rcvr`を[接続](connect.md)した結果の[Operation State型](operation_state.md)を取得する。
+[Sender型](sender.md)`Sndr`と[Receiver型](receiver.md)`Rcvr`を[接続(connect)](connect.md)した結果の[Operation State型](operation_state.md)を取得する。
 
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sender -- execution: with-await-transform (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/sender.html"/>
      <id>9bdfb06b23ad982838ea34914ec288a205f339f4:reference/execution/execution/sender.md</id>
      <updated>2025-04-18T17:15:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/sender.md b/reference/execution/execution/sender.md
index ad481ee9f..edee77eb3 100644
--- a/reference/execution/execution/sender.md
+++ b/reference/execution/execution/sender.md
@@ -50,6 +50,7 @@ struct env-promise : with-await-transform&amp;lt;env-promise&amp;lt;Env&amp;gt;&amp;gt; {
 * is-awaitable[link ../is-awaitable.md]
 * env&amp;lt;&amp;gt;[link env.md]
 * derived_from[link /reference/concepts/derived_from.md]
+* with-await-transform[link with-await-transform.md]
 * coroutine_handle&amp;lt;&amp;gt;[link /reference/coroutine/coroutine_handle.md]
 * unspecified[italic]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sender_in -- execution: with-await-transform (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/sender_in.html"/>
      <id>9bdfb06b23ad982838ea34914ec288a205f339f4:reference/execution/execution/sender_in.md</id>
      <updated>2025-04-18T17:15:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/sender_in.md b/reference/execution/execution/sender_in.md
index ef3469e1b..168906892 100644
--- a/reference/execution/execution/sender_in.md
+++ b/reference/execution/execution/sender_in.md
@@ -38,7 +38,7 @@ concept valid-completion-signatures = see below;
 
 また、ある完了操作の完了シグネチャが[`completion_signatures_of_t`](completion_signatures_of_t.md)`&amp;lt;Sndr, Env&amp;gt;`で取得される[`completion_signatures`](completion_signatures.md)リストに含まれるとき、`Sndr`と`Env`における許容可能完了(permissible completion)となる。
 
-`sndr`と`rcvr`の接続後に[Operation State](operation_state.md)を開始することで評価されうる完了操作が、全て許容可能完了(permissible completion)である場合、`Sndr`と`Env`は`sender_in&amp;lt;Sndr, Env&amp;gt;`のモデルとなる。
+`sndr`と`rcvr`の[接続](connect.md)後に[Operation State](operation_state.md)を開始することで評価されうる完了操作が、全て許容可能完了(permissible completion)である場合、`Sndr`と`Env`は`sender_in&amp;lt;Sndr, Env&amp;gt;`のモデルとなる。
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>transform_sender -- execution: with-await-transform (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/transform_sender.html"/>
      <id>9bdfb06b23ad982838ea34914ec288a205f339f4:reference/execution/execution/transform_sender.md</id>
      <updated>2025-04-18T17:15:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/transform_sender.md b/reference/execution/execution/transform_sender.md
index a67439309..11065a82e 100644
--- a/reference/execution/execution/transform_sender.md
+++ b/reference/execution/execution/transform_sender.md
@@ -18,7 +18,7 @@ namespace std::execution {
 
 ## 概要
 [実行ドメイン](default_domain.md)に応じて[Sender](sender.md)を変換する。
-Senderオブジェクトの構築時、Senderと[Receiver](receiver.md)間[接続(connect)](../connect.md.nolink)のカスタマイゼーションポイントとして機能する。
+Senderオブジェクトの構築時、Senderと[Receiver](receiver.md)間[接続(connect)](connect.md)時のカスタマイゼーションポイントとして機能する。
 
 型変換ではSender型の変換が行われなくなる（恒等変換となる）まで、下記のカスタマイゼーションポイントを再帰的に呼び出す。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>with-await-transform -- execution: with-await-transform (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/with-await-transform.html"/>
      <id>9bdfb06b23ad982838ea34914ec288a205f339f4:reference/execution/execution/with-await-transform.md</id>
      <updated>2025-04-18T17:15:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/with-await-transform.md b/reference/execution/execution/with-await-transform.md
new file mode 100644
index 000000000..6f8973a14
--- /dev/null
+++ b/reference/execution/execution/with-await-transform.md
@@ -0,0 +1,47 @@
+# with-await-transform
+* execution[meta header]
+* class template[meta id-type]
+* std::execution[meta namespace]
+* cpp26[meta cpp]
+
+```cpp
+namespace std::execution {
+  template&amp;lt;class T, class Promise&amp;gt;
+  concept has-as-awaitable =  // exposition only
+    requires (T&amp;amp;&amp;amp; t, Promise&amp;amp; p) {
+      { std::forward&amp;lt;T&amp;gt;(t).as_awaitable(p) } -&amp;gt; is-awaitable&amp;lt;Promise&amp;amp;&amp;gt;;
+    };
+
+  template&amp;lt;class Derived&amp;gt;
+  struct with-await-transform {  // exposition only
+    template&amp;lt;class T&amp;gt;
+    T&amp;amp;&amp;amp; await_transform(T&amp;amp;&amp;amp; value) noexcept {
+      return std::forward&amp;lt;T&amp;gt;(value);
+    }
+
+    template&amp;lt;has-as-awaitable&amp;lt;Derived&amp;gt; T&amp;gt;
+    decltype(auto) await_transform(T&amp;amp;&amp;amp; value)
+      noexcept(noexcept(std::forward&amp;lt;T&amp;gt;(value).as_awaitable(declval&amp;lt;Derived&amp;amp;&amp;gt;())))
+    {
+        return std::forward&amp;lt;T&amp;gt;(value).as_awaitable(static_cast&amp;lt;Derived&amp;amp;&amp;gt;(*this));
+    }
+  };
+}
+```
+* is-awaitable[link ../is-awaitable.md]
+
+## 概要
+`with-await-transform`は、実行制御ライブラリの仕様定義で用いられる説明専用のクラステンプレートである。
+
+
+## バージョン
+### 言語
+- C++26
+
+## 関連項目
+- [`execution::sender`](sender.md)
+- [`execution::connect`](connect.md)
+
+
+## 参照
+- [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>execution -- execution: connect,connect_result_t (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution.html"/>
      <id>252f02621f5ee2ecfd53586c82e530c0872ab7f5:reference/execution/execution.md</id>
      <updated>2025-04-18T16:44:08+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution.md b/reference/execution/execution.md
index 85a741a11..fbc0cf8ce 100644
--- a/reference/execution/execution.md
+++ b/reference/execution/execution.md
@@ -92,8 +92,8 @@ namespace std::execution {
 | [`execution::transform_sender`](execution/transform_sender.md) | Senderを変換 (function template) | C++26 |
 | [`execution::transform_env`](execution/transform_env.md) | 環境を変換 (function template) | C++26 |
 | [`execution::apply_sender`](execution/apply_sender.md) | Senderアルゴリズムを適用 (function template) | C++26 |
-| [`execution::connect`](execution/connect.md.nolink) | SenderとReceiverを接続 (customization point object) | C++26 |
-| [`execution::connect_result_t`](execution/connect_result_t.md.nolink) | `connect`結果型を取得 (alias template) | C++26 |
+| [`execution::connect`](execution/connect.md) | SenderとReceiverを接続 (customization point object) | C++26 |
+| [`execution::connect_result_t`](execution/connect_result_t.md) | [`connect`](execution/connect.md)結果型を取得 (alias template) | C++26 |
 
 ### Senderファクトリ
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>apply_sender -- execution: connect,connect_result_t (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/apply_sender.html"/>
      <id>252f02621f5ee2ecfd53586c82e530c0872ab7f5:reference/execution/execution/apply_sender.md</id>
      <updated>2025-04-18T16:44:08+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/apply_sender.md b/reference/execution/execution/apply_sender.md
index 9a8aec2af..6fcd23420 100644
--- a/reference/execution/execution/apply_sender.md
+++ b/reference/execution/execution/apply_sender.md
@@ -25,7 +25,7 @@ Senderアルゴリズム動作のカスタマイゼーションポイントと
 ## テンプレートパラメータ制約
 説明用の式`e`を次の通りとしたとき、式`e`が適格であること。
 
-- 適格ならば、式`dom.apply_sender(Tag(),` [`std::forward`](/reference/utility/forward.md)`&amp;lt;Sndr&amp;gt;(sndr),` [`std::forward`](/reference/utility/forward.md)`&amp;lt;Args&amp;gt;(args)...)`
+- 適格であるならば、式`dom.apply_sender(Tag(),` [`std::forward`](/reference/utility/forward.md)`&amp;lt;Sndr&amp;gt;(sndr),` [`std::forward`](/reference/utility/forward.md)`&amp;lt;Args&amp;gt;(args)...)`
 - そうでなければ、[`default_domain()`](default_domain.md)`.`[`apply_sender`](default_domain/apply_sender.md)`(Tag(),` [`std::forward`](/reference/utility/forward.md)`&amp;lt;Sndr&amp;gt;(sndr),` [`std::forward`](/reference/utility/forward.md)`&amp;lt;Args&amp;gt;(args)...)`
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>connect -- execution: connect,connect_result_t (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/connect.html"/>
      <id>252f02621f5ee2ecfd53586c82e530c0872ab7f5:reference/execution/execution/connect.md</id>
      <updated>2025-04-18T16:44:08+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/connect.md b/reference/execution/execution/connect.md
new file mode 100644
index 000000000..6674d0d49
--- /dev/null
+++ b/reference/execution/execution/connect.md
@@ -0,0 +1,231 @@
+# connect
+* execution[meta header]
+* cpo[meta id-type]
+* std::execution[meta namespace]
+* cpp26[meta cpp]
+
+```cpp
+namespace std {
+  struct connect_t;
+  inline constexpr connect_t connect{};
+}
+```
+
+## 概要
+`connect`は、[Sender](sender.md)と[Receiver](receiver.md)を接続した結果[Operation State](operation_state.md)を返すカスタマイゼーションポイントオブジェクトである。
+
+カスタマイゼーションポイントオブジェクトの呼び出し式`connect(sndr, rcvr)`は、下記の動作となる。
+
+- [`transform_sender`](transform_sender.md)を呼び出して、`sndr`を新しいSender`new_sndr`に変換する。大半のケースでは無変換。
+- 呼び出し式が適格であるならば、`return new_sndr.connect(rcvr)`相当。
+- そうでなければ、`new_sndr`を[コルーチンのAwaitable型](/lang/cpp20/coroutines.md)とみなして`rcvr`と接続した結果を返す。
+
+
+## 効果
+説明用の型`Sndr`を`decltype((sndr))`、型`Rcvr`を`decltype((rcvr))`とし、式`new_sndr`を次の通りとする。
+このとき[`sender`](sender.md)`&amp;lt;Sndr&amp;gt; &amp;amp;&amp;amp;` [`receiver`](receiver.md)`&amp;lt;Rcvr&amp;gt; == true`であること。
+
+```cpp
+transform_sender(decltype(get-domain-late(sndr, get_env(rcvr))){}, sndr, get_env(rcvr))
+```
+* transform_sender[link transform_sender.md]
+* get-domain-late[link get-domain-late.md.nolink]
+* get_env[link get_env.md]
+
+式`connect(sndr, rcvr)`は下記と等価であり、[`operation_state`](operation_state.md)を満たす型の値となる。
+
+- 適格であるならば、式`new_sndr.connect(rcvr)`
+- そうでなければ、式`connect-awaitable(new_sndr, rcvr)`
+
+
+### Awaitable接続用へルパ
+説明用のクラス`connect-awaitable-promise`, `operation-state-task`をそれぞれ下記の通り定義する。
+
+型`DS`を[`decay_t`](/reference/type_traits/decay.md)`&amp;lt;decltype((new_sndr))&amp;gt;`、型`DR`を[`decay_t`](/reference/type_traits/decay.md)`&amp;lt;Rcvr&amp;gt;`とする。
+
+```cpp
+namespace std::execution {
+  struct connect-awaitable-promise : with-await-transform&amp;lt;connect-awaitable-promise&amp;gt; {
+    connect-awaitable-promise(DS&amp;amp;, DR&amp;amp; rcvr) noexcept : rcvr(rcvr) {}
+
+    suspend_always initial_suspend() noexcept { return {}; }
+    [[noreturn]] suspend_always final_suspend() noexcept { terminate(); }
+    [[noreturn]] void unhandled_exception() noexcept { terminate(); }
+    [[noreturn]] void return_void() noexcept { terminate(); }
+
+    coroutine_handle&amp;lt;&amp;gt; unhandled_stopped() noexcept {
+      set_stopped(std::move(rcvr));
+      return noop_coroutine();
+    }
+
+    operation-state-task get_return_object() noexcept {
+      return operation-state-task{
+        coroutine_handle&amp;lt;connect-awaitable-promise&amp;gt;::from_promise(*this)};
+    }
+
+    env_of_t&amp;lt;DR&amp;gt; get_env() const noexcept {
+      return execution::get_env(rcvr);
+    }
+
+  private:
+    DR&amp;amp; rcvr;  // exposition only
+  };
+}
+```
+* suspend_always[link /reference/coroutine/suspend_always.md]
+* coroutine_handle[link /reference/coroutine/coroutine_handle.md]
+* set_stopped[link set_stopped.md]
+* noop_coroutine()[link /reference/coroutine/noop_coroutine.md]
+* from_promise[link /reference/coroutine/coroutine_handle/from_promise.md]
+* env_of_t[link env_of_t.md]
+* execution::get_env[link get_env.md]
+
+```cpp
+namespace std::execution {
+  struct operation-state-task {  // exposition only
+    using operation_state_concept = operation_state_t;
+    using promise_type = connect-awaitable-promise;
+
+    explicit operation-state-task(coroutine_handle&amp;lt;&amp;gt; h) noexcept : coro(h) {}
+    operation-state-task(operation-state-task&amp;amp;&amp;amp;) = delete;
+    ~operation-state-task() { coro.destroy(); }
+
+    void start() &amp;amp; noexcept {
+      coro.resume();
+    }
+
+  private:
+    coroutine_handle&amp;lt;&amp;gt; coro;  // exposition only
+  };
+}
+```
+* operation_state_t[link operation_state.md]
+* coroutine_handle&amp;lt;&amp;gt;[link /reference/coroutine/coroutine_handle.md]
+* destroy()[link /reference/coroutine/coroutine_handle/destroy.md]
+* resume()[link /reference/coroutine/coroutine_handle/resume.md]
+
+`C`型の`c`と[コルーチンPromise型](/lang/cpp20/coroutines.md)の左辺値`p`に対して、`await-result-type&amp;lt;C, Promise&amp;gt;`を`decltype(`[`GET-AWAITER`](../is-awaitable.md)`(c, p).`[`await_resume()`](/lang/cpp20/coroutines.md)`)`型とする。
+型`V`を`await-result-type&amp;lt;DS, connect-awaitable-promise&amp;gt;`とする。
+
+`SET-VALUE-SIG(T)`を、`T`がCV修飾された`void`ならば[`set_value_t`](set_value.md)`()`型、そうでなければ[`set_value_t`](set_value.md)`(T)`型とする。
+型`Sigs`を次の通り定義する。
+
+```cpp
+completion_signatures&amp;lt;
+  SET-VALUE-SIG(V),
+  set_error_t(exception_ptr),
+  set_stopped_t()&amp;gt;
+```
+* set_error_t[link set_error.md]
+* set_stopped[link set_stopped.md]
+* exception_ptr[link /reference/exception/exception_ptr.md]
+* SET-VALUE-SIG[italic]
+
+説明用のコールーチン`suspend-complete`を下記の通り定義する。
+
+```cpp
+namespace std::execution {
+  template&amp;lt;class Fun, class... Ts&amp;gt;
+  auto suspend-complete(Fun fun, Ts&amp;amp;&amp;amp;... as) noexcept {  // exposition only
+    auto fn = [&amp;amp;, fun]() noexcept { fun(std::forward&amp;lt;Ts&amp;gt;(as)...); };
+
+    struct awaiter {
+      decltype(fn) fn;  // exposition only
+
+      static constexpr bool await_ready() noexcept { return false; }
+      void await_suspend(coroutine_handle&amp;lt;&amp;gt;) noexcept { fn(); }
+      [[noreturn]] void await_resume() noexcept { unreachable(); }
+    };
+    return awaiter{fn};
+  }
+
+  operation-state-task connect-awaitable(DS sndr, DR rcvr) requires receiver_of&amp;lt;DR, Sigs&amp;gt; {
+    exception_ptr ep;
+    try {
+      if constexpr (same_as&amp;lt;V, void&amp;gt;) {
+        co_await std::move(sndr);
+        co_await suspend-complete(set_value, std::move(rcvr));
+      } else {
+        co_await suspend-complete(set_value, std::move(rcvr), co_await std::move(sndr));
+      }
+    } catch(...) {
+      ep = current_exception();
+    }
+    co_await suspend-complete(set_error, std::move(rcvr), std::move(ep));
+  }
+}
+```
+* coroutine_handle&amp;lt;&amp;gt;[link /reference/coroutine/coroutine_handle.md]
+* unreachable()[link /reference/utility/unreachable.md]
+* receiver_of[link receiver_of.md]
+* exception_ptr[link /reference/exception/exception_ptr.md]
+* current_exception()[link /reference/exception/current_exception.md]
+
+## カスタマイゼーションポイント
+Sender`sndr`[変換後](transform_sender.md)の`new_sndr`に対して、式`new_sndr.connect(rcvr)`が呼び出される。
+
+
+## 備考
+`connect`は[Sender](sender.md)内部実装から呼び出される想定であり、実行制御ライブラリ利用者が直接利用する必要はない。
+
+
+## 例
+```cpp
+#include &amp;lt;print&amp;gt;
+#include &amp;lt;execution&amp;gt;
+namespace ex = std::execution;
+
+struct ValueReceiver {
+  using receiver_concept = ex::receiver_t;
+
+  void set_value(int v) &amp;amp;&amp;amp; noexcept
+  {
+    std::println(&amp;#34;{}&amp;#34;, v);
+  }
+};
+
+int main()
+{
+  // 値42を送信するSender
+  ex::sender auto sndr = ex::just(42);
+  // int値を受信して表示するReceiver
+  ValueReceiver rcvr;
+ 
+  // SenderとReceiverを接続
+  ex::operation_state auto op = ex::connect(sndr, rcvr);
+  // Operation Stateを開始
+  ex::start(op);
+}
+```
+* ex::connect[color ff0000]
+* ex::receiver_t[link receiver.md]
+* ex::sender[link sender.md]
+* ex::just[link just.md.nolink]
+* ex::operation_state[link operation_state.md]
+* ex::start[link start.md.nolink]
+
+### 出力
+```
+42
+```
+
+
+## バージョン
+### 言語
+- C++26
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
+
+
+## 関連項目
+- [`execution::sender`](sender.md)
+- [`execution::receiver`](receiver.md)
+- [`execution::operation_state`](operation_state.md)
+
+
+## 参照
+- [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>connect_result_t -- execution: connect,connect_result_t (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/connect_result_t.html"/>
      <id>252f02621f5ee2ecfd53586c82e530c0872ab7f5:reference/execution/execution/connect_result_t.md</id>
      <updated>2025-04-18T16:44:08+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/connect_result_t.md b/reference/execution/execution/connect_result_t.md
new file mode 100644
index 000000000..d3e3fd159
--- /dev/null
+++ b/reference/execution/execution/connect_result_t.md
@@ -0,0 +1,36 @@
+# connect_result_t
+* execution[meta header]
+* std::execution[meta namespace]
+* type-alias[meta id-type]
+* cpp26[meta cpp]
+
+```cpp
+namespace std::execution {
+  template&amp;lt;class Sndr, class Rcvr&amp;gt;
+  using connect_result_t =
+    decltype(connect(declval&amp;lt;Sndr&amp;gt;(), declval&amp;lt;Rcvr&amp;gt;()));
+}
+```
+* connect[link connect.md]
+
+## 概要
+[Sender型](sender.md)`Sndr`と[Receiver型]`Rcvr`を[接続](connect.md)した結果の[Operation State型](operation_state.md)を取得する。
+
+
+## バージョン
+### 言語
+- C++26
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
+
+
+## 関連項目
+- [`execution::connect`](connect.md)
+
+
+## 参照
+- [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>transform_env -- execution: connect,connect_result_t (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/default_domain/transform_env.html"/>
      <id>252f02621f5ee2ecfd53586c82e530c0872ab7f5:reference/execution/execution/default_domain/transform_env.md</id>
      <updated>2025-04-18T16:44:08+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/default_domain/transform_env.md b/reference/execution/execution/default_domain/transform_env.md
index 84446c7ce..f1afcc21b 100644
--- a/reference/execution/execution/default_domain/transform_env.md
+++ b/reference/execution/execution/default_domain/transform_env.md
@@ -27,7 +27,7 @@ template&amp;lt;sender Sndr, queryable Env&amp;gt;
 ## 効果
 説明用の式`e`を次の通りとしたとき、`e`を返す。
 
-- 適格ならば、式[`tag_of_t`](tag_of_t.md.nolink)`&amp;lt;Sndr&amp;gt;().transform_env(`[`std::forward`](/reference/utility/forward.md)`&amp;lt;Sndr&amp;gt;(sndr),` [`std::forward`](/reference/utility/forward.md)`&amp;lt;Env&amp;gt;(env))`
+- 適格であるならば、式[`tag_of_t`](tag_of_t.md.nolink)`&amp;lt;Sndr&amp;gt;().transform_env(`[`std::forward`](/reference/utility/forward.md)`&amp;lt;Sndr&amp;gt;(sndr),` [`std::forward`](/reference/utility/forward.md)`&amp;lt;Env&amp;gt;(env))`
 - そうでなければ、`static_cast&amp;lt;Env&amp;gt;(`[`std::forward`](/reference/utility/forward.md)`&amp;lt;Env&amp;gt;(env))`
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>transform_sender -- execution: connect,connect_result_t (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/default_domain/transform_sender.html"/>
      <id>252f02621f5ee2ecfd53586c82e530c0872ab7f5:reference/execution/execution/default_domain/transform_sender.md</id>
      <updated>2025-04-18T16:44:08+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/default_domain/transform_sender.md b/reference/execution/execution/default_domain/transform_sender.md
index 9e4f86351..06f856bb7 100644
--- a/reference/execution/execution/default_domain/transform_sender.md
+++ b/reference/execution/execution/default_domain/transform_sender.md
@@ -26,7 +26,7 @@ Sender変換のデフォルト動作。
 ## 効果
 説明用の式`e`を次の通りとしたとき、`e`を返す。
 
-- 適格ならば、式[`tag_of_t`](tag_of_t.md.nolink)`&amp;lt;Sndr&amp;gt;().transform_sender(`[`std::forward`](/reference/utility/forward.md)`&amp;lt;Sndr&amp;gt;(sndr)`, env...)`
+- 適格であるならば、式[`tag_of_t`](tag_of_t.md.nolink)`&amp;lt;Sndr&amp;gt;().transform_sender(`[`std::forward`](/reference/utility/forward.md)`&amp;lt;Sndr&amp;gt;(sndr), env...)`
 - そうでなければ、[`std::forward`](/reference/utility/forward.md)`&amp;lt;Sndr&amp;gt;(sndr)`
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operation_state -- execution: connect,connect_result_t (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/operation_state.html"/>
      <id>252f02621f5ee2ecfd53586c82e530c0872ab7f5:reference/execution/execution/operation_state.md</id>
      <updated>2025-04-18T16:44:08+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/operation_state.md b/reference/execution/execution/operation_state.md
index d221a8332..f7e1a8626 100644
--- a/reference/execution/execution/operation_state.md
+++ b/reference/execution/execution/operation_state.md
@@ -41,7 +41,7 @@ namespace ex = std::execution;
 struct ValueReceiver {
   using receiver_concept = ex::receiver_t;
 
-  void set_value(int v) noexcept
+  void set_value(int v) &amp;amp;&amp;amp; noexcept
   {
     std::println(&amp;#34;{}&amp;#34;, v);
   }
@@ -64,7 +64,7 @@ int main()
 * ex::receiver_t[link receiver.md]
 * ex::sender[link sender.md]
 * ex::just[link just.md.nolink]
-* ex::connect[link connect.md.nolink]
+* ex::connect[link connect.md]
 * ex::start[link start.md.nolink]
 
 ### 出力
@@ -85,7 +85,7 @@ int main()
 
 
 ## 関連項目
-- [`execution::connect`](connect.md.nolink)
+- [`execution::connect`](connect.md)
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sender_to -- execution: connect,connect_result_t (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/sender_to.html"/>
      <id>252f02621f5ee2ecfd53586c82e530c0872ab7f5:reference/execution/execution/sender_to.md</id>
      <updated>2025-04-18T16:44:08+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/sender_to.md b/reference/execution/execution/sender_to.md
index e11295a74..72ed577e6 100644
--- a/reference/execution/execution/sender_to.md
+++ b/reference/execution/execution/sender_to.md
@@ -19,7 +19,7 @@ namespace std::execution {
 * env_of_t[link env_of_t.md]
 * receiver_of[link receiver_of.md]
 * completion_signatures_of_t[link completion_signatures_of_t.md]
-* connect[link connect.md.nolink]
+* connect[link connect.md]
 
 ## 概要
 `sender_to`は、[Sender型](sender.md)`Sndr`が[Receiver型](receiver.md)`Rcvr`と接続可能であることを表すコンセプトである。
@@ -60,7 +60,7 @@ int main()
 * ex::sender[link sender.md]
 * ex::just[link just.md.nolink]
 * ex::operation_state[link operation_state.md]
-* ex::connect[link connect.md.nolink]
+* ex::connect[link connect.md]
 * ex::start[link start.md.nolink]
 
 ### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>transform_env -- execution: connect,connect_result_t (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/transform_env.html"/>
      <id>252f02621f5ee2ecfd53586c82e530c0872ab7f5:reference/execution/execution/transform_env.md</id>
      <updated>2025-04-18T16:44:08+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/transform_env.md b/reference/execution/execution/transform_env.md
index 991deaa90..9d9d0c963 100644
--- a/reference/execution/execution/transform_env.md
+++ b/reference/execution/execution/transform_env.md
@@ -28,7 +28,7 @@ namespace std::execution {
 ## 戻り値
 説明用の式`e`を次の通りとし、`e`を返す。
 
-- 適格ならば、式`dom.transform_env(`[`std::forward`](/reference/utility/forward.md)`&amp;lt;Sndr&amp;gt;(sndr),` [`std::forward`](/reference/utility/forward.md)`&amp;lt;Env&amp;gt;(env))`
+- 適格であるならば、式`dom.transform_env(`[`std::forward`](/reference/utility/forward.md)`&amp;lt;Sndr&amp;gt;(sndr),` [`std::forward`](/reference/utility/forward.md)`&amp;lt;Env&amp;gt;(env))`
 - そうでなければ、[`default_domain()`](default_domain.md)`.`[`transform_env`](default_domain/transform_env.md)`(`[`std::forward`](/reference/utility/forward.md)`&amp;lt;Sndr&amp;gt;(sndr),` [`std::forward`](/reference/utility/forward.md)`&amp;lt;Env&amp;gt;(env))`
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>transform_sender -- execution: connect,connect_result_t (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/transform_sender.html"/>
      <id>252f02621f5ee2ecfd53586c82e530c0872ab7f5:reference/execution/execution/transform_sender.md</id>
      <updated>2025-04-18T16:44:08+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/transform_sender.md b/reference/execution/execution/transform_sender.md
index d534a6545..a67439309 100644
--- a/reference/execution/execution/transform_sender.md
+++ b/reference/execution/execution/transform_sender.md
@@ -29,7 +29,7 @@ Senderオブジェクトの構築時、Senderと[Receiver](receiver.md)間[接
 ## 戻り値
 説明用の式`transformed-sndr`を次の通りとする。
 
-- 適格ならば、式`dom.transform_sender(`[`std::forward`](/reference/utility/forward.md)`&amp;lt;Sndr&amp;gt;(sndr), env...)`
+- 適格であるならば、式`dom.transform_sender(`[`std::forward`](/reference/utility/forward.md)`&amp;lt;Sndr&amp;gt;(sndr), env...)`
 - そうでなければ、[`default_domain()`](default_domain.md)`.`[`transform_sender`](default_domain/transform_sender.md)`(`[`std::forward`](/reference/utility/forward.md)`&amp;lt;Sndr&amp;gt;(sndr), env...)`
 
 説明用の式`final-sndr`を次の通りとする。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>execution -- execution: transform_{sender,env},apply_sender (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution.html"/>
      <id>d516cba28eba6b7a596fb312b05ba44a388272ec:reference/execution/execution.md</id>
      <updated>2025-04-18T15:17:05+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution.md b/reference/execution/execution.md
index 3dabb2457..85a741a11 100644
--- a/reference/execution/execution.md
+++ b/reference/execution/execution.md
@@ -89,9 +89,9 @@ namespace std::execution {
 | [`execution::error_types_of_t`](execution/error_types_of_t.md.nolink) | Senderのエラー完了型を取得 (alias template) | C++26 |
 | [`execution::sends_stopped`](execution/value_types_of_t.md.nolink) | Senderが停止完了に対応するか否か (variable template) | C++26 |
 | [`execution::tag_of_t`](execution/tag_of_t.md.nolink) | Senderのタグ型を取得 (alias template) | C++26 |
-| [`execution::transform_sender`](execution/transform_sender.md.nolink) | Senderを変換 (function template) | C++26 |
-| [`execution::transform_env`](execution/transform_env.md.nolink) | 環境を変換 (function template) | C++26 |
-| [`execution::apply_sender`](execution/apply_sender.md.nolink) | Senderアルゴリズムを適用 (function template) | C++26 |
+| [`execution::transform_sender`](execution/transform_sender.md) | Senderを変換 (function template) | C++26 |
+| [`execution::transform_env`](execution/transform_env.md) | 環境を変換 (function template) | C++26 |
+| [`execution::apply_sender`](execution/apply_sender.md) | Senderアルゴリズムを適用 (function template) | C++26 |
 | [`execution::connect`](execution/connect.md.nolink) | SenderとReceiverを接続 (customization point object) | C++26 |
 | [`execution::connect_result_t`](execution/connect_result_t.md.nolink) | `connect`結果型を取得 (alias template) | C++26 |
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>apply_sender -- execution: transform_{sender,env},apply_sender (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/apply_sender.html"/>
      <id>d516cba28eba6b7a596fb312b05ba44a388272ec:reference/execution/execution/apply_sender.md</id>
      <updated>2025-04-18T15:17:05+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/apply_sender.md b/reference/execution/execution/apply_sender.md
new file mode 100644
index 000000000..9a8aec2af
--- /dev/null
+++ b/reference/execution/execution/apply_sender.md
@@ -0,0 +1,58 @@
+# apply_sender
+* execution[meta header]
+* function template[meta id-type]
+* std::execution[meta namespace]
+* cpp26[meta cpp]
+
+```cpp
+namespace std::execution {
+  template&amp;lt;class Domain, class Tag, sender Sndr, class... Args&amp;gt;
+  constexpr decltype(auto) apply_sender(Domain dom, Tag, Sndr&amp;amp;&amp;amp; sndr, Args&amp;amp;&amp;amp;... args)
+    noexcept(see below);
+}
+```
+* sender[link sender.md]
+* see below[italic]
+
+## 概要
+[実行ドメイン](default_domain.md)に応じてSenderアルゴリズムを適用する。
+Senderアルゴリズム動作のカスタマイゼーションポイントとして機能する。
+
+- 定義されていれば、`dom.apply_sender`メンバ関数に適用動作を委譲する。
+- そうでなければ、デフォルト実行ドメイン[`apply_sender`](default_domain/apply_sender.md)に適用動作を委譲する。
+
+
+## テンプレートパラメータ制約
+説明用の式`e`を次の通りとしたとき、式`e`が適格であること。
+
+- 適格ならば、式`dom.apply_sender(Tag(),` [`std::forward`](/reference/utility/forward.md)`&amp;lt;Sndr&amp;gt;(sndr),` [`std::forward`](/reference/utility/forward.md)`&amp;lt;Args&amp;gt;(args)...)`
+- そうでなければ、[`default_domain()`](default_domain.md)`.`[`apply_sender`](default_domain/apply_sender.md)`(Tag(),` [`std::forward`](/reference/utility/forward.md)`&amp;lt;Sndr&amp;gt;(sndr),` [`std::forward`](/reference/utility/forward.md)`&amp;lt;Args&amp;gt;(args)...)`
+
+
+## 戻り値
+`e`を返す。
+
+
+## 例外
+`noexcept(e) == true`ならば、例外を投げない。
+そうでなければ、式`e`から送出される例外。
+
+
+## バージョン
+### 言語
+- C++26
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
+
+
+## 関連項目
+- [`default_domain::apply_sender`](default_domain/apply_sender.md)
+
+
+## 参照
+- [P2999R3 Sender Algorithm Customization](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p2999r3.html)
+- [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>default_domain -- execution: transform_{sender,env},apply_sender (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/default_domain.html"/>
      <id>d516cba28eba6b7a596fb312b05ba44a388272ec:reference/execution/execution/default_domain.md</id>
      <updated>2025-04-18T15:17:05+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/default_domain.md b/reference/execution/execution/default_domain.md
index 88a37370e..1d154a7cf 100644
--- a/reference/execution/execution/default_domain.md
+++ b/reference/execution/execution/default_domain.md
@@ -18,9 +18,9 @@ namespace std::execution {
 
 実行ドメインは下記関数に対するカスタマイゼーションポイントとして機能する。
 
-- [`execution::transform_sender`](transform_sender.md.nolink) : Senderの変換
-- [`execution::transform_env`](transform_env.md.nolink) : 環境の変換
-- [`execution::apply_sender`](apply_sender.md.nolink) : Senderアルゴリズム適用
+- [`execution::transform_sender`](transform_sender.md) : Senderの変換
+- [`execution::transform_env`](transform_env.md) : 環境の変換
+- [`execution::apply_sender`](apply_sender.md) : Senderアルゴリズム適用
 
 
 ## メンバ関数
@@ -46,9 +46,9 @@ namespace std::execution {
 
 
 ## 関連項目
-- [`execution::transform_sender`](transform_sender.md.nolink)
-- [`execution::transform_env`](transform_env.md.nolink)
-- [`execution::apply_sender`](apply_sender.md.nolink)
+- [`execution::transform_sender`](transform_sender.md)
+- [`execution::transform_env`](transform_env.md)
+- [`execution::apply_sender`](apply_sender.md)
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>apply_sender -- execution: transform_{sender,env},apply_sender (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/default_domain/apply_sender.html"/>
      <id>d516cba28eba6b7a596fb312b05ba44a388272ec:reference/execution/execution/default_domain/apply_sender.md</id>
      <updated>2025-04-18T15:17:05+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/default_domain/apply_sender.md b/reference/execution/execution/default_domain/apply_sender.md
index 927bdb906..0cfb8669c 100644
--- a/reference/execution/execution/default_domain/apply_sender.md
+++ b/reference/execution/execution/default_domain/apply_sender.md
@@ -15,13 +15,13 @@ constexpr decltype(auto) apply_sender(Tag, Sndr&amp;amp;&amp;amp; sndr, Args&amp;amp;&amp;amp;... args)
 
 ## 概要
 Senderアルゴリズム適用のデフォルト動作。
-[`execution::apply_sender`](../apply_sender.md.nolink)に対するスタマイゼーションポイントとして機能する。
+[`execution::apply_sender`](../apply_sender.md)に対するスタマイゼーションポイントとして機能する。
 
-[Senderのタグ型](../tag_of_t.md.nolink)`Tag`に対して、`apply_sender`メンバ関数を呼び出す。
+[Senderタグ型](../tag_of_t.md.nolink)`Tag`に対して、`apply_sender`メンバ関数を呼び出す。
 
 
 ## テンプレートパラメータ制約
-説明用の式`e`を`Tag().apply_sender(`[`std::forward`](/reference/utility/forward.md)`&amp;lt;Sndr&amp;gt;(sndr), `[`std::forward`](/reference/utility/forward.md)`&amp;lt;Args&amp;gt;(args)...)`としたとき、が適格であること。
+説明用の式`e`を`Tag().apply_sender(`[`std::forward`](/reference/utility/forward.md)`&amp;lt;Sndr&amp;gt;(sndr), `[`std::forward`](/reference/utility/forward.md)`&amp;lt;Args&amp;gt;(args)...)`としたとき、式`e`が適格であること。
 
 
 ## 戻り値
@@ -29,7 +29,7 @@ Senderアルゴリズム適用のデフォルト動作。
 
 
 ## 例外
-`noexcept(e)`が`true`であれば、例外を投げない。
+`noexcept(e) == true`ならば、例外を投げない。
 そうでなければ、式`e`から送出される例外。
 
 
@@ -45,7 +45,7 @@ Senderアルゴリズム適用のデフォルト動作。
 
 
 ## 関連項目
-- [`execution::apply_sender`](../apply_sender.md.nolink)
+- [`execution::apply_sender`](../apply_sender.md)
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>transform_env -- execution: transform_{sender,env},apply_sender (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/default_domain/transform_env.html"/>
      <id>d516cba28eba6b7a596fb312b05ba44a388272ec:reference/execution/execution/default_domain/transform_env.md</id>
      <updated>2025-04-18T15:17:05+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/default_domain/transform_env.md b/reference/execution/execution/default_domain/transform_env.md
index 82b436b90..84446c7ce 100644
--- a/reference/execution/execution/default_domain/transform_env.md
+++ b/reference/execution/execution/default_domain/transform_env.md
@@ -14,9 +14,9 @@ template&amp;lt;sender Sndr, queryable Env&amp;gt;
 
 ## 概要
 環境変換のデフォルト動作。
-[`execution::transform_env`](../transform_env.md.nolink)に対するスタマイゼーションポイントとして機能する。
+[`execution::transform_env`](../transform_env.md)に対するスタマイゼーションポイントとして機能する。
 
-- 定義されていれば、[Senderのタグ型](../tag_of_t.md.nolink)の`transform_env`メンバ関数に変換動作を委譲する。
+- 定義されていれば、[Senderタグ型](../tag_of_t.md.nolink)の`transform_env`メンバ関数に変換動作を委譲する。
 - そうでなければ、無変換。
 
 
@@ -47,7 +47,7 @@ template&amp;lt;sender Sndr, queryable Env&amp;gt;
 
 
 ## 関連項目
-- [`execution::transform_env`](../transform_env.md.nolink)
+- [`execution::transform_env`](../transform_env.md)
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>transform_sender -- execution: transform_{sender,env},apply_sender (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/default_domain/transform_sender.html"/>
      <id>d516cba28eba6b7a596fb312b05ba44a388272ec:reference/execution/execution/default_domain/transform_sender.md</id>
      <updated>2025-04-18T15:17:05+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/default_domain/transform_sender.md b/reference/execution/execution/default_domain/transform_sender.md
index 3d9b94d6d..9e4f86351 100644
--- a/reference/execution/execution/default_domain/transform_sender.md
+++ b/reference/execution/execution/default_domain/transform_sender.md
@@ -17,25 +17,24 @@ constexpr sender decltype(auto) transform_sender(Sndr&amp;amp;&amp;amp; sndr, const Env&amp;amp;... env)
 
 ## 概要
 Sender変換のデフォルト動作。
-[`execution::transform_sender`](../transform_sender.md.nolink)に対するスタマイゼーションポイントとして機能する。
+[`execution::transform_sender`](../transform_sender.md)に対するスタマイゼーションポイントとして機能する。
 
-- 定義されていれば、[Senderのタグ型](../tag_of_t.md.nolink)の`transform_sender`メンバ関数に変換動作を委譲する。
+- 定義されていれば、[Senderタグ型](../tag_of_t.md.nolink)の`transform_sender`メンバ関数に変換動作を委譲する。
 - そうでなければ、無変換。
 
 
 ## 効果
 説明用の式`e`を次の通りとしたとき、`e`を返す。
 
-- 適格ならば、式[`tag_of_t`](tag_of_t.md.nolink)`&amp;lt;Sndr&amp;gt;().transform_sender(`[`std::forward&amp;lt;Sndr&amp;gt;(sndr)`](/reference/utility/forward.md)`, env...)`
+- 適格ならば、式[`tag_of_t`](tag_of_t.md.nolink)`&amp;lt;Sndr&amp;gt;().transform_sender(`[`std::forward`](/reference/utility/forward.md)`&amp;lt;Sndr&amp;gt;(sndr)`, env...)`
 - そうでなければ、[`std::forward`](/reference/utility/forward.md)`&amp;lt;Sndr&amp;gt;(sndr)`
 
 
 ## 例外
-`noexcept(e)`が`true`であれば、例外を投げない。
+`noexcept(e) == true`ならば、例外を投げない。
 そうでなければ、式`e`から送出される例外。
 
 
-
 ## バージョン
 ### 言語
 - C++26
@@ -48,7 +47,7 @@ Sender変換のデフォルト動作。
 
 
 ## 関連項目
-- [`execution::transform_sender`](../transform_sender.md.nolink)
+- [`execution::transform_sender`](../transform_sender.md)
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>transform_env -- execution: transform_{sender,env},apply_sender (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/transform_env.html"/>
      <id>d516cba28eba6b7a596fb312b05ba44a388272ec:reference/execution/execution/transform_env.md</id>
      <updated>2025-04-18T15:17:05+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/transform_env.md b/reference/execution/execution/transform_env.md
new file mode 100644
index 000000000..991deaa90
--- /dev/null
+++ b/reference/execution/execution/transform_env.md
@@ -0,0 +1,56 @@
+# transform_env
+* execution[meta header]
+* function template[meta id-type]
+* std::execution[meta namespace]
+* cpp26[meta cpp]
+
+```cpp
+namespace std::execution {
+  template&amp;lt;class Domain, sender Sndr, queryable Env&amp;gt;
+  constexpr queryable decltype(auto) transform_env(Domain dom, Sndr&amp;amp;&amp;amp; sndr, Env&amp;amp;&amp;amp; env) noexcept;
+}
+```
+* sender[link sender.md]
+* queryable[link ../queryable.md]
+
+## 概要
+[実行ドメイン](default_domain.md)に応じて[環境](../queryable.md)を変換する。
+ユーザ定義実行ドメインにおいて、再帰的Sender変換における補助的なカスタマイゼーションポイントとして機能する。
+
+- 定義されていれば、`dom.transform_env`メンバ関数に変換動作を委譲する。
+- そうでなければ、デフォルト実行ドメイン[`transform_env`](default_domain/transform_env.md)に変換動作を委譲する。
+
+
+## 適格要件
+後述する式`e`に対して、`noexcept(e) == true`
+
+
+## 戻り値
+説明用の式`e`を次の通りとし、`e`を返す。
+
+- 適格ならば、式`dom.transform_env(`[`std::forward`](/reference/utility/forward.md)`&amp;lt;Sndr&amp;gt;(sndr),` [`std::forward`](/reference/utility/forward.md)`&amp;lt;Env&amp;gt;(env))`
+- そうでなければ、[`default_domain()`](default_domain.md)`.`[`transform_env`](default_domain/transform_env.md)`(`[`std::forward`](/reference/utility/forward.md)`&amp;lt;Sndr&amp;gt;(sndr),` [`std::forward`](/reference/utility/forward.md)`&amp;lt;Env&amp;gt;(env))`
+
+
+## 例外
+投げない。
+
+
+## バージョン
+### 言語
+- C++26
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
+
+
+## 関連項目
+- [`default_domain::transform_env`](default_domain/transform_env.md)
+
+
+## 参照
+- [P2999R3 Sender Algorithm Customization](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p2999r3.html)
+- [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>transform_sender -- execution: transform_{sender,env},apply_sender (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/transform_sender.html"/>
      <id>d516cba28eba6b7a596fb312b05ba44a388272ec:reference/execution/execution/transform_sender.md</id>
      <updated>2025-04-18T15:17:05+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/transform_sender.md b/reference/execution/execution/transform_sender.md
new file mode 100644
index 000000000..d534a6545
--- /dev/null
+++ b/reference/execution/execution/transform_sender.md
@@ -0,0 +1,65 @@
+# transform_sender
+* execution[meta header]
+* function template[meta id-type]
+* std::execution[meta namespace]
+* cpp26[meta cpp]
+
+```cpp
+namespace std::execution {
+  template&amp;lt;class Domain, sender Sndr, queryable... Env&amp;gt;
+    requires (sizeof...(Env) &amp;lt;= 1)
+  constexpr sender decltype(auto) transform_sender(Domain dom, Sndr&amp;amp;&amp;amp; sndr, const Env&amp;amp;... env)
+    noexcept(see below);
+}
+```
+* sender[link sender.md]
+* queryable[link ../queryable.md]
+* see below[italic]
+
+## 概要
+[実行ドメイン](default_domain.md)に応じて[Sender](sender.md)を変換する。
+Senderオブジェクトの構築時、Senderと[Receiver](receiver.md)間[接続(connect)](../connect.md.nolink)のカスタマイゼーションポイントとして機能する。
+
+型変換ではSender型の変換が行われなくなる（恒等変換となる）まで、下記のカスタマイゼーションポイントを再帰的に呼び出す。
+
+- 定義されていれば、`dom.transform_sender`メンバ関数に変換動作を委譲する。
+- そうでなければ、デフォルト実行ドメイン[`transform_sender`](default_domain/transform_sender.md)に変換動作を委譲する。
+
+
+## 戻り値
+説明用の式`transformed-sndr`を次の通りとする。
+
+- 適格ならば、式`dom.transform_sender(`[`std::forward`](/reference/utility/forward.md)`&amp;lt;Sndr&amp;gt;(sndr), env...)`
+- そうでなければ、[`default_domain()`](default_domain.md)`.`[`transform_sender`](default_domain/transform_sender.md)`(`[`std::forward`](/reference/utility/forward.md)`&amp;lt;Sndr&amp;gt;(sndr), env...)`
+
+説明用の式`final-sndr`を次の通りとする。
+
+- `sndr`と`transformed-sndr`の型がCV修飾を無視して同一ならば、`transformed-sndr`
+- そうでなければ、式`transform_sender(dom, transformed-sndr, env...)`（再帰適用）
+
+`final-sndr`を返す。
+
+
+## 例外
+`noexcept(final-sndr) == true`ならば、例外を投げない。
+そうでなければ、Sender変換過程で送出される例外。
+
+
+## バージョン
+### 言語
+- C++26
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
+
+
+## 関連項目
+- [`default_domain::transform_sender`](default_domain/transform_sender.md)
+
+
+## 参照
+- [P2999R3 Sender Algorithm Customization](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p2999r3.html)
+- [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
</feed>
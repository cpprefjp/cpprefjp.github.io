<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2025-04-18T05:13:04.546345</updated>
  <id>68ce74db-bdde-45ff-999e-021909feb5f2</id>

  
    <entry>
      <title>default_domain -- execution/default: remove forbid chars</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/default_domain.html"/>
      <id>0ff48a6037b53dcf2c96b8f7df318d5447fa22dc:reference/execution/execution/default_domain.md</id>
      <updated>2025-04-18T14:09:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/default_domain.md b/reference/execution/execution/default_domain.md
index acd7dfed7..88a37370e 100644
--- a/reference/execution/execution/default_domain.md
+++ b/reference/execution/execution/default_domain.md
@@ -18,9 +18,9 @@ namespace std::execution {
 
 実行ドメインは下記関数に対するカスタマイゼーションポイントとして機能する。
 
-- [`execution​::​transform_sender`](​transform_sender.md.nolink) : Senderの変換
-- [`execution​::transform_env`](transform_env.md.nolink) : 環境の変換
-- [`execution​::apply_sender`](apply_sender.md.nolink) : Senderアルゴリズム適用
+- [`execution::transform_sender`](transform_sender.md.nolink) : Senderの変換
+- [`execution::transform_env`](transform_env.md.nolink) : 環境の変換
+- [`execution::apply_sender`](apply_sender.md.nolink) : Senderアルゴリズム適用
 
 
 ## メンバ関数
@@ -46,9 +46,9 @@ namespace std::execution {
 
 
 ## 関連項目
-- [`execution​::​transform_sender`](​transform_sender.md.nolink)
-- [`execution​::transform_env`](transform_env.md.nolink)
-- [`execution​::apply_sender`](apply_sender.md.nolink)
+- [`execution::transform_sender`](transform_sender.md.nolink)
+- [`execution::transform_env`](transform_env.md.nolink)
+- [`execution::apply_sender`](apply_sender.md.nolink)
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>apply_sender -- execution/default: remove forbid chars</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/default_domain/apply_sender.html"/>
      <id>0ff48a6037b53dcf2c96b8f7df318d5447fa22dc:reference/execution/execution/default_domain/apply_sender.md</id>
      <updated>2025-04-18T14:09:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/default_domain/apply_sender.md b/reference/execution/execution/default_domain/apply_sender.md
index 3b56dafa4..927bdb906 100644
--- a/reference/execution/execution/default_domain/apply_sender.md
+++ b/reference/execution/execution/default_domain/apply_sender.md
@@ -15,7 +15,7 @@ constexpr decltype(auto) apply_sender(Tag, Sndr&amp;amp;&amp;amp; sndr, Args&amp;amp;&amp;amp;... args)
 
 ## 概要
 Senderアルゴリズム適用のデフォルト動作。
-[`execution​::apply_sender`](../apply_sender.md.nolink)に対するスタマイゼーションポイントとして機能する。
+[`execution::apply_sender`](../apply_sender.md.nolink)に対するスタマイゼーションポイントとして機能する。
 
 [Senderのタグ型](../tag_of_t.md.nolink)`Tag`に対して、`apply_sender`メンバ関数を呼び出す。
 
@@ -45,7 +45,7 @@ Senderアルゴリズム適用のデフォルト動作。
 
 
 ## 関連項目
-- [`execution​::apply_sender`](../apply_sender.md.nolink)
+- [`execution::apply_sender`](../apply_sender.md.nolink)
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>transform_env -- execution/default: remove forbid chars</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/default_domain/transform_env.html"/>
      <id>0ff48a6037b53dcf2c96b8f7df318d5447fa22dc:reference/execution/execution/default_domain/transform_env.md</id>
      <updated>2025-04-18T14:09:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/default_domain/transform_env.md b/reference/execution/execution/default_domain/transform_env.md
index bdf425c46..82b436b90 100644
--- a/reference/execution/execution/default_domain/transform_env.md
+++ b/reference/execution/execution/default_domain/transform_env.md
@@ -14,7 +14,7 @@ template&amp;lt;sender Sndr, queryable Env&amp;gt;
 
 ## 概要
 環境変換のデフォルト動作。
-[`execution​::​transform_env`](../​transform_env.md.nolink)に対するスタマイゼーションポイントとして機能する。
+[`execution::transform_env`](../transform_env.md.nolink)に対するスタマイゼーションポイントとして機能する。
 
 - 定義されていれば、[Senderのタグ型](../tag_of_t.md.nolink)の`transform_env`メンバ関数に変換動作を委譲する。
 - そうでなければ、無変換。
@@ -28,7 +28,7 @@ template&amp;lt;sender Sndr, queryable Env&amp;gt;
 説明用の式`e`を次の通りとしたとき、`e`を返す。
 
 - 適格ならば、式[`tag_of_t`](tag_of_t.md.nolink)`&amp;lt;Sndr&amp;gt;().transform_env(`[`std::forward`](/reference/utility/forward.md)`&amp;lt;Sndr&amp;gt;(sndr),` [`std::forward`](/reference/utility/forward.md)`&amp;lt;Env&amp;gt;(env))`
-- そうでなければ、`static_cast&amp;lt;Env&amp;gt;(`[`std​::​forward`](/reference/utility/forward.md)`&amp;lt;Env&amp;gt;(env))`
+- そうでなければ、`static_cast&amp;lt;Env&amp;gt;(`[`std::forward`](/reference/utility/forward.md)`&amp;lt;Env&amp;gt;(env))`
 
 
 ## 例外
@@ -47,7 +47,7 @@ template&amp;lt;sender Sndr, queryable Env&amp;gt;
 
 
 ## 関連項目
-- [`execution​::transform_env`](../transform_env.md.nolink)
+- [`execution::transform_env`](../transform_env.md.nolink)
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>transform_sender -- execution/default: remove forbid chars</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/default_domain/transform_sender.html"/>
      <id>0ff48a6037b53dcf2c96b8f7df318d5447fa22dc:reference/execution/execution/default_domain/transform_sender.md</id>
      <updated>2025-04-18T14:09:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/default_domain/transform_sender.md b/reference/execution/execution/default_domain/transform_sender.md
index caf2f3324..3d9b94d6d 100644
--- a/reference/execution/execution/default_domain/transform_sender.md
+++ b/reference/execution/execution/default_domain/transform_sender.md
@@ -17,7 +17,7 @@ constexpr sender decltype(auto) transform_sender(Sndr&amp;amp;&amp;amp; sndr, const Env&amp;amp;... env)
 
 ## 概要
 Sender変換のデフォルト動作。
-[`execution​::​transform_sender`](../​transform_sender.md.nolink)に対するスタマイゼーションポイントとして機能する。
+[`execution::transform_sender`](../transform_sender.md.nolink)に対するスタマイゼーションポイントとして機能する。
 
 - 定義されていれば、[Senderのタグ型](../tag_of_t.md.nolink)の`transform_sender`メンバ関数に変換動作を委譲する。
 - そうでなければ、無変換。
@@ -27,7 +27,7 @@ Sender変換のデフォルト動作。
 説明用の式`e`を次の通りとしたとき、`e`を返す。
 
 - 適格ならば、式[`tag_of_t`](tag_of_t.md.nolink)`&amp;lt;Sndr&amp;gt;().transform_sender(`[`std::forward&amp;lt;Sndr&amp;gt;(sndr)`](/reference/utility/forward.md)`, env...)`
-- そうでなければ、[`std​::​forward`](/reference/utility/forward.md)`&amp;lt;Sndr&amp;gt;(sndr)`
+- そうでなければ、[`std::forward`](/reference/utility/forward.md)`&amp;lt;Sndr&amp;gt;(sndr)`
 
 
 ## 例外
@@ -35,6 +35,7 @@ Sender変換のデフォルト動作。
 そうでなければ、式`e`から送出される例外。
 
 
+
 ## バージョン
 ### 言語
 - C++26
@@ -47,7 +48,7 @@ Sender変換のデフォルト動作。
 
 
 ## 関連項目
-- [`execution​::​transform_sender`](../​transform_sender.md.nolink)
+- [`execution::transform_sender`](../transform_sender.md.nolink)
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>execution -- execution: default_domain (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution.html"/>
      <id>f156adb9d5e2ce38c574a5cdf2e0dddd74d5a604:reference/execution/execution.md</id>
      <updated>2025-04-18T14:03:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution.md b/reference/execution/execution.md
index 9d6627c0a..3dabb2457 100644
--- a/reference/execution/execution.md
+++ b/reference/execution/execution.md
@@ -79,7 +79,7 @@ namespace std::execution {
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`execution::default_domain`](execution/default_domain.md.nolink) | デフォルト実行ドメイン (class) | C++26 |
+| [`execution::default_domain`](execution/default_domain.md) | デフォルト実行ドメイン (class) | C++26 |
 | [`execution::sender`](execution/sender.md) | Sender型 (concept) | C++26 |
 | [`execution::sender_in`](execution/sender_in.md) | 指定環境で有効なSender (concept) | C++26 |
 | [`execution::sender_to`](execution/sender_to.md) | 指定Receiverに接続可能なSender (concept) | C++26 |
@@ -90,8 +90,8 @@ namespace std::execution {
 | [`execution::sends_stopped`](execution/value_types_of_t.md.nolink) | Senderが停止完了に対応するか否か (variable template) | C++26 |
 | [`execution::tag_of_t`](execution/tag_of_t.md.nolink) | Senderのタグ型を取得 (alias template) | C++26 |
 | [`execution::transform_sender`](execution/transform_sender.md.nolink) | Senderを変換 (function template) | C++26 |
-| [`execution::transform_env`](execution/transform_env.md.nolink) | クエリオブジェクトを変換 (function template) | C++26 |
-| [`execution::apply_sender`](execution/apply_sender.md.nolink) | Senderにタグ型と引数を適用 (function template) | C++26 |
+| [`execution::transform_env`](execution/transform_env.md.nolink) | 環境を変換 (function template) | C++26 |
+| [`execution::apply_sender`](execution/apply_sender.md.nolink) | Senderアルゴリズムを適用 (function template) | C++26 |
 | [`execution::connect`](execution/connect.md.nolink) | SenderとReceiverを接続 (customization point object) | C++26 |
 | [`execution::connect_result_t`](execution/connect_result_t.md.nolink) | `connect`結果型を取得 (alias template) | C++26 |
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>default_domain -- execution: default_domain (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/default_domain.html"/>
      <id>f156adb9d5e2ce38c574a5cdf2e0dddd74d5a604:reference/execution/execution/default_domain.md</id>
      <updated>2025-04-18T14:03:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/default_domain.md b/reference/execution/execution/default_domain.md
new file mode 100644
index 000000000..acd7dfed7
--- /dev/null
+++ b/reference/execution/execution/default_domain.md
@@ -0,0 +1,56 @@
+# default_domain
+* execution[meta header]
+* class[meta id-type]
+* std::execution[meta namespace]
+* cpp26[meta cpp]
+
+```cpp
+namespace std::execution {
+  class default_domain;
+}
+```
+
+## 概要
+実行制御ライブラリのデフォルト実行ドメイン。
+
+### 実行ドメイン
+実行ドメイン(domain)は、[Sender](sender.md)や[環境](../queryable.md)の変換動作、Senderアルゴリズム適用動作をカスタマイズするためのタグ型である。
+
+実行ドメインは下記関数に対するカスタマイゼーションポイントとして機能する。
+
+- [`execution​::​transform_sender`](​transform_sender.md.nolink) : Senderの変換
+- [`execution​::transform_env`](transform_env.md.nolink) : 環境の変換
+- [`execution​::apply_sender`](apply_sender.md.nolink) : Senderアルゴリズム適用
+
+
+## メンバ関数
+
+| 名前            | 説明           | 対応バージョン |
+|-----------------|----------------|----------------|
+| `(constructor)` | コンストラクタ | C++26 |
+| `(destructor)`  | デストラクタ   | C++26 |
+| [`transform_sender`](default_domain/transform_sender.md) | Sender変換のデフォルト動作 | C++26 |
+| [`transform_env`](default_domain/transform_env.md) | 環境変換のデフォルト動作 | C++26 |
+| [`apply_sender`](default_domain/apply_sender.md) | Senderアルゴリズム適用のデフォルト動作 | C++26 |
+
+
+## バージョン
+### 言語
+- C++26
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
+
+
+## 関連項目
+- [`execution​::​transform_sender`](​transform_sender.md.nolink)
+- [`execution​::transform_env`](transform_env.md.nolink)
+- [`execution​::apply_sender`](apply_sender.md.nolink)
+
+
+## 参照
+- [P2999R3 Sender Algorithm Customization](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p2999r3.html)
+- [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>apply_sender -- execution: default_domain (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/default_domain/apply_sender.html"/>
      <id>f156adb9d5e2ce38c574a5cdf2e0dddd74d5a604:reference/execution/execution/default_domain/apply_sender.md</id>
      <updated>2025-04-18T14:03:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/default_domain/apply_sender.md b/reference/execution/execution/default_domain/apply_sender.md
new file mode 100644
index 000000000..3b56dafa4
--- /dev/null
+++ b/reference/execution/execution/default_domain/apply_sender.md
@@ -0,0 +1,53 @@
+# apply_sender
+* execution[meta header]
+* function template[meta id-type]
+* std::execution[meta namespace]
+* default_domain[meta class]
+* cpp26[meta cpp]
+
+```cpp
+template&amp;lt;class Tag, sender Sndr, class... Args&amp;gt;
+constexpr decltype(auto) apply_sender(Tag, Sndr&amp;amp;&amp;amp; sndr, Args&amp;amp;&amp;amp;... args)
+  noexcept(see below);
+```
+* sender[link ../sender.md]
+* see below[italic]
+
+## 概要
+Senderアルゴリズム適用のデフォルト動作。
+[`execution​::apply_sender`](../apply_sender.md.nolink)に対するスタマイゼーションポイントとして機能する。
+
+[Senderのタグ型](../tag_of_t.md.nolink)`Tag`に対して、`apply_sender`メンバ関数を呼び出す。
+
+
+## テンプレートパラメータ制約
+説明用の式`e`を`Tag().apply_sender(`[`std::forward`](/reference/utility/forward.md)`&amp;lt;Sndr&amp;gt;(sndr), `[`std::forward`](/reference/utility/forward.md)`&amp;lt;Args&amp;gt;(args)...)`としたとき、が適格であること。
+
+
+## 戻り値
+`e`を返す。
+
+
+## 例外
+`noexcept(e)`が`true`であれば、例外を投げない。
+そうでなければ、式`e`から送出される例外。
+
+
+## バージョン
+### 言語
+- C++26
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
+
+
+## 関連項目
+- [`execution​::apply_sender`](../apply_sender.md.nolink)
+
+
+## 参照
+- [P2999R3 Sender Algorithm Customization](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p2999r3.html)
+- [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>transform_env -- execution: default_domain (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/default_domain/transform_env.html"/>
      <id>f156adb9d5e2ce38c574a5cdf2e0dddd74d5a604:reference/execution/execution/default_domain/transform_env.md</id>
      <updated>2025-04-18T14:03:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/default_domain/transform_env.md b/reference/execution/execution/default_domain/transform_env.md
new file mode 100644
index 000000000..bdf425c46
--- /dev/null
+++ b/reference/execution/execution/default_domain/transform_env.md
@@ -0,0 +1,55 @@
+# transform_env
+* execution[meta header]
+* function template[meta id-type]
+* std::execution[meta namespace]
+* default_domain[meta class]
+* cpp26[meta cpp]
+
+```cpp
+template&amp;lt;sender Sndr, queryable Env&amp;gt;
+  constexpr queryable decltype(auto) transform_env(Sndr&amp;amp;&amp;amp; sndr, Env&amp;amp;&amp;amp; env) noexcept;
+```
+* sender[link ../sender.md]
+* queryable[link ../../queryable.md]
+
+## 概要
+環境変換のデフォルト動作。
+[`execution​::​transform_env`](../​transform_env.md.nolink)に対するスタマイゼーションポイントとして機能する。
+
+- 定義されていれば、[Senderのタグ型](../tag_of_t.md.nolink)の`transform_env`メンバ関数に変換動作を委譲する。
+- そうでなければ、無変換。
+
+
+## 適格要件
+後述する式`e`に対して、`noexcept(e) == true`
+
+
+## 効果
+説明用の式`e`を次の通りとしたとき、`e`を返す。
+
+- 適格ならば、式[`tag_of_t`](tag_of_t.md.nolink)`&amp;lt;Sndr&amp;gt;().transform_env(`[`std::forward`](/reference/utility/forward.md)`&amp;lt;Sndr&amp;gt;(sndr),` [`std::forward`](/reference/utility/forward.md)`&amp;lt;Env&amp;gt;(env))`
+- そうでなければ、`static_cast&amp;lt;Env&amp;gt;(`[`std​::​forward`](/reference/utility/forward.md)`&amp;lt;Env&amp;gt;(env))`
+
+
+## 例外
+投げない
+
+
+## バージョン
+### 言語
+- C++26
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
+
+
+## 関連項目
+- [`execution​::transform_env`](../transform_env.md.nolink)
+
+
+## 参照
+- [P2999R3 Sender Algorithm Customization](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p2999r3.html)
+- [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>transform_sender -- execution: default_domain (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/default_domain/transform_sender.html"/>
      <id>f156adb9d5e2ce38c574a5cdf2e0dddd74d5a604:reference/execution/execution/default_domain/transform_sender.md</id>
      <updated>2025-04-18T14:03:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/default_domain/transform_sender.md b/reference/execution/execution/default_domain/transform_sender.md
new file mode 100644
index 000000000..caf2f3324
--- /dev/null
+++ b/reference/execution/execution/default_domain/transform_sender.md
@@ -0,0 +1,55 @@
+# transform_sender
+* execution[meta header]
+* function template[meta id-type]
+* std::execution[meta namespace]
+* default_domain[meta class]
+* cpp26[meta cpp]
+
+```cpp
+template&amp;lt;sender Sndr, queryable... Env&amp;gt;
+  requires (sizeof...(Env) &amp;lt;= 1)
+constexpr sender decltype(auto) transform_sender(Sndr&amp;amp;&amp;amp; sndr, const Env&amp;amp;... env)
+  noexcept(see below);
+```
+* sender[link ../sender.md]
+* queryable[link ../../queryable.md]
+* see below[italic]
+
+## 概要
+Sender変換のデフォルト動作。
+[`execution​::​transform_sender`](../​transform_sender.md.nolink)に対するスタマイゼーションポイントとして機能する。
+
+- 定義されていれば、[Senderのタグ型](../tag_of_t.md.nolink)の`transform_sender`メンバ関数に変換動作を委譲する。
+- そうでなければ、無変換。
+
+
+## 効果
+説明用の式`e`を次の通りとしたとき、`e`を返す。
+
+- 適格ならば、式[`tag_of_t`](tag_of_t.md.nolink)`&amp;lt;Sndr&amp;gt;().transform_sender(`[`std::forward&amp;lt;Sndr&amp;gt;(sndr)`](/reference/utility/forward.md)`, env...)`
+- そうでなければ、[`std​::​forward`](/reference/utility/forward.md)`&amp;lt;Sndr&amp;gt;(sndr)`
+
+
+## 例外
+`noexcept(e)`が`true`であれば、例外を投げない。
+そうでなければ、式`e`から送出される例外。
+
+
+## バージョン
+### 言語
+- C++26
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
+
+
+## 関連項目
+- [`execution​::​transform_sender`](../​transform_sender.md.nolink)
+
+
+## 参照
+- [P2999R3 Sender Algorithm Customization](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p2999r3.html)
+- [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>queryable -- execution: default_domain (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/queryable.html"/>
      <id>f156adb9d5e2ce38c574a5cdf2e0dddd74d5a604:reference/execution/queryable.md</id>
      <updated>2025-04-18T14:03:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/queryable.md b/reference/execution/queryable.md
index b294e0e10..f5f95c9b9 100644
--- a/reference/execution/queryable.md
+++ b/reference/execution/queryable.md
@@ -24,8 +24,8 @@ concept queryable = destructible&amp;lt;T&amp;gt;;
 
 実行制御ライブラリでは、下記のオブジェクトがクエリ可能オブジェクトとされる。
 
-- [Sender](execution/sender.md)に関連付けられた属性(attributes)オブジェクト
-- [Receiver](execution/receiver.md)に関連付けられた環境(environment)オブジェクト
+- [Sender](execution/sender.md)に関連付けられた属性(attributes)オブジェクト（[`execution::get_env`](execution/get_env.md)で取得）
+- [Receiver](execution/receiver.md)に関連付けられた環境(environment)オブジェクト（[`execution::get_env`](execution/get_env.md)で取得）
 - [Scheduler](execution/scheduler.md)オブジェクト自身
 
 
@@ -35,7 +35,7 @@ concept queryable = destructible&amp;lt;T&amp;gt;;
 
 
 ## 備考
-[Sender](execution/sender.md)に関連付けられたクエリ可能オブジェクトは、C++ライブラリ仕様では「属性(attributes)」と呼ばれる。
+[Sender](execution/sender.md)に関連付けられたクエリ可能オブジェクトは「属性(attributes)」と呼ばれるが、実行制御ライブラリの仕様記述では[Receiver](execution/receiver.md)の「環境(environment)」と合わせて`Env`型や識別子名`env`として包括的に言及される。
 
 
 ## バージョン
@@ -46,6 +46,7 @@ concept queryable = destructible&amp;lt;T&amp;gt;;
 ## 関連項目
 - [`execution::prop`](execution/prop.md)
 - [`execution::env`](execution/env.md)
+- [`execution::get_env`](execution/get_env.md)
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>execution -- execution: get_env,env_of_t (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution.html"/>
      <id>38bbbb9cfa8cd584d3099b5d19578f2df58fa38c:reference/execution/execution.md</id>
      <updated>2025-04-16T22:16:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution.md b/reference/execution/execution.md
index f8ab73ba5..9d6627c0a 100644
--- a/reference/execution/execution.md
+++ b/reference/execution/execution.md
@@ -45,8 +45,8 @@ namespace std::execution {
 | [`execution::forward_progress_guarantee`](execution/forward_progress_guarantee.md.nolink) | 前進保証 (enum) | C++26 |
 | [`execution::get_forward_progress_guarantee`](execution/get_forward_progress_guarantee.md.nolink) | 前進保証取得のクエリオブジェクト (customization point object) | C++26 |
 | [`execution::get_completion_scheduler`](execution/get_completion_scheduler.md.nolink) | 完了Scheduler取得のクエリオブジェクト (customization point object) | C++26 |
-| [`execution::get_env`](execution/get_env.md.nolink) | 環境取得のクエリオブジェクト (customization point object) | C++26 |
-| [`execution::env_of_t`](execution/env_of_t.md.nolink) | 指定型から環境型を取得 (alias template) | C++26 |
+| [`execution::get_env`](execution/get_env.md) | 環境取得のクエリオブジェクト (customization point object) | C++26 |
+| [`execution::env_of_t`](execution/env_of_t.md) | 指定型から環境型を取得 (alias template) | C++26 |
 | [`execution::prop`](execution/prop.md) | Key/Valueペアによる[クエリ可能オブジェクト](queryable.md) (class template) | C++26 |
 | [`execution::env`](execution/env.md) | 複数Key/Valueからなる[クエリ可能オブジェクト](queryable.md) (class template) | C++26 |
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>env_of_t -- execution: get_env,env_of_t (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/env_of_t.html"/>
      <id>38bbbb9cfa8cd584d3099b5d19578f2df58fa38c:reference/execution/execution/env_of_t.md</id>
      <updated>2025-04-16T22:16:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/env_of_t.md b/reference/execution/execution/env_of_t.md
new file mode 100644
index 000000000..c3e2f6149
--- /dev/null
+++ b/reference/execution/execution/env_of_t.md
@@ -0,0 +1,38 @@
+# env_of_t
+* execution[meta header]
+* std::execution[meta namespace]
+* type-alias[meta id-type]
+* cpp26[meta cpp]
+
+```cpp
+namespace std::execution {
+  template&amp;lt;class T&amp;gt;
+  using env_of_t = decltype(get_env(declval&amp;lt;T&amp;gt;()));
+}
+```
+* get_env[link get_env.md]
+
+## 概要
+型`T`に関連付けられた[クエリ可能オブジェクト](../queryable.md)の型を取得する。
+
+- [Sender](sender.md)に関連付けられた属性
+- [Receiver](receiver.md)に関連付けられた環境
+
+
+## バージョン
+### 言語
+- C++26
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
+
+
+## 関連項目
+- [`execution::get_env`](get_env.md)
+
+
+## 参照
+- [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>get_env -- execution: get_env,env_of_t (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/get_env.html"/>
      <id>38bbbb9cfa8cd584d3099b5d19578f2df58fa38c:reference/execution/execution/get_env.md</id>
      <updated>2025-04-16T22:16:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/get_env.md b/reference/execution/execution/get_env.md
new file mode 100644
index 000000000..a6afad75c
--- /dev/null
+++ b/reference/execution/execution/get_env.md
@@ -0,0 +1,79 @@
+# get_env
+* execution[meta header]
+* cpo[meta id-type]
+* std::execution[meta namespace]
+* cpp26[meta cpp]
+
+```cpp
+namespace std::execution {
+  struct get_env_t { unspecified };
+  inline constexpr get_env_t get_env{};
+}
+```
+* unspecified[italic]
+
+## 概要
+`get_env`は、対象オブジェクトに関連付けられた[クエリ可能オブジェクト](../queryable.md)を取得するカスタマイゼーションポイントオブジェクトである。
+
+- [Sender](sender.md)に関連付けられた属性
+- [Receiver](receiver.md)に関連付けられた環境
+
+
+## 効果
+式`get_env(o)`は下記と等価であり、[`queryable`](../queryable.md)を満たす型の値となる。
+
+- 引数`o`がconst修飾された`co`を用いて、式`co.get_env()`が有効であればその値。
+- そうでなければ、空(empty)のクエリ可能オブジェクト[`env&amp;lt;&amp;gt;{}`](env.md)
+
+
+## 例外
+投げない
+
+
+## カスタマイゼーションポイント
+const修飾された対象オブジェクト`co`に対して式`co.get_env()`が呼び出される。
+このとき、`noexcept(co.get_env()) == true`であること。
+
+
+## 備考
+[Sender](sender.md)に関連付けられたクエリ可能オブジェクトは「属性(attributes)」と呼ばれるが、本`get_env`を用いてクエリ可能オブジェクトを取得する。実行制御ライブラリ仕様検討中には専用の`get_attrs`として存在していたが、同じ動作セマンティクスを持つ`get_env`に統合された経緯がある。
+
+
+## 例
+```cpp example
+#include &amp;lt;execution&amp;gt;
+namespace ex = std::execution;
+
+int main()
+{
+  ex::sender auto sndr = ex::just(42);
+  auto env = ex::get_env(sndr);
+}
+```
+* ex::get_env[color ff0000]
+* ex::sender[link sender.md]
+* ex::just[link just.md.nolink]
+
+### 出力
+```
+```
+
+
+## バージョン
+### 言語
+- C++26
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
+
+
+## 関連項目
+- [`execution::sender`](sender.md)
+- [`execution::receiver`](receiver.md)
+
+
+## 参照
+- [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>receiver -- execution: get_env,env_of_t (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/receiver.html"/>
      <id>38bbbb9cfa8cd584d3099b5d19578f2df58fa38c:reference/execution/execution/receiver.md</id>
      <updated>2025-04-16T22:16:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/receiver.md b/reference/execution/execution/receiver.md
index bb7c46198..8cd67b2e6 100644
--- a/reference/execution/execution/receiver.md
+++ b/reference/execution/execution/receiver.md
@@ -18,7 +18,7 @@ namespace std::execution {
   struct receiver_t {};  // タグ型
 }
 ```
-* get_env[link get_env.md.nolink]
+* get_env[link get_env.md]
 * queryable[link ../queryable.md]
 * derived_from[link /reference/concepts/derived_from.md]
 * move_constructible[link /reference/concepts/move_constructible.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>scheduler -- execution: get_env,env_of_t (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/scheduler.html"/>
      <id>38bbbb9cfa8cd584d3099b5d19578f2df58fa38c:reference/execution/execution/scheduler.md</id>
      <updated>2025-04-16T22:16:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/scheduler.md b/reference/execution/execution/scheduler.md
index a89bb8d47..2ffa3efc0 100644
--- a/reference/execution/execution/scheduler.md
+++ b/reference/execution/execution/scheduler.md
@@ -27,7 +27,7 @@ namespace std::execution {
 * queryable[link ../queryable.md]
 * get_completion_scheduler[link get_completion_scheduler.md.nolink]
 * set_value_t[link set_value.md]
-* get_env[link get_env.md.nolink]
+* get_env[link get_env.md]
 * equality_comparable[link /reference/concepts/equality_comparable.md]
 * copyable[link /reference/concepts/copyable.md]
 
@@ -40,7 +40,7 @@ namespace std::execution {
 - [クエリ可能オブジェクト](../queryable.md)であること
 - `Sch`型の値`sch`に対して下記が有効な式であること
     - [`execution::schedule`](schedule.md.nolink)`(sch)`が[Sender](sender.md)を返すこと
-    - [`execution::get_completion_scheduler`](get_completion_scheduler.md.nolink)`&amp;lt;`[`set_value_t`](set_value.md)`&amp;gt;(`[`execution::get_env`](get_env.md.nolink)`(`[`execution::schedule`](schedule.md.nolink)`(sch)))`の結果が`Sch`型に等しいこと
+    - [`execution::get_completion_scheduler`](get_completion_scheduler.md.nolink)`&amp;lt;`[`set_value_t`](set_value.md)`&amp;gt;(`[`execution::get_env`](get_env.md)`(`[`execution::schedule`](schedule.md.nolink)`(sch)))`の結果が`Sch`型に等しいこと
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sender -- execution: get_env,env_of_t (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/sender.html"/>
      <id>38bbbb9cfa8cd584d3099b5d19578f2df58fa38c:reference/execution/execution/sender.md</id>
      <updated>2025-04-16T22:16:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/sender.md b/reference/execution/execution/sender.md
index 7d065640c..ad481ee9f 100644
--- a/reference/execution/execution/sender.md
+++ b/reference/execution/execution/sender.md
@@ -65,7 +65,7 @@ concept sender =
   move_constructible&amp;lt;remove_cvref_t&amp;lt;Sndr&amp;gt;&amp;gt; &amp;amp;&amp;amp;
   constructible_from&amp;lt;remove_cvref_t&amp;lt;Sndr&amp;gt;, Sndr&amp;gt;;
 ```
-* get_env[link get_env.md.nolink]
+* get_env[link get_env.md]
 * queryable[link ../queryable.md]
 * move_constructible[link /reference/concepts/move_constructible.md]
 * constructible_from[link /reference/concepts/constructible_from.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sender_to -- execution: get_env,env_of_t (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/sender_to.html"/>
      <id>38bbbb9cfa8cd584d3099b5d19578f2df58fa38c:reference/execution/execution/sender_to.md</id>
      <updated>2025-04-16T22:16:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/sender_to.md b/reference/execution/execution/sender_to.md
index 45082ae5e..e11295a74 100644
--- a/reference/execution/execution/sender_to.md
+++ b/reference/execution/execution/sender_to.md
@@ -16,7 +16,7 @@ namespace std::execution {
 }
 ```
 * sender_in[link sender_in.md]
-* env_of_t[link env_of_t.md.nolink]
+* env_of_t[link env_of_t.md]
 * receiver_of[link receiver_of.md]
 * completion_signatures_of_t[link completion_signatures_of_t.md]
 * connect[link connect.md.nolink]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>queryable -- execution: get_env,env_of_t (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/queryable.html"/>
      <id>38bbbb9cfa8cd584d3099b5d19578f2df58fa38c:reference/execution/queryable.md</id>
      <updated>2025-04-16T22:16:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/queryable.md b/reference/execution/queryable.md
index 721edfd1d..b294e0e10 100644
--- a/reference/execution/queryable.md
+++ b/reference/execution/queryable.md
@@ -19,7 +19,7 @@ concept queryable = destructible&amp;lt;T&amp;gt;;
 
 - [`execution::env&amp;lt;&amp;gt;{}`](execution/env.md) : 空(empty)のクエリ可能オブジェクト
 - [`execution::prop(q, v)`](execution/prop.md) : キー`q`と対応値`v`を保持する最小のクエリ可能オブジェクト
-- [`execution::env&amp;lt;&amp;gt;{...}`](execution/env.md) : 複数のKey/Valueを保持するクエリ可能オブジェクト
+- [`execution::env{...}`](execution/env.md) : 複数のKey/Valueを保持するクエリ可能オブジェクト
 - `queryable`コンセプトを満たすユーザ定義クラスのオブジェクト
 
 実行制御ライブラリでは、下記のオブジェクトがクエリ可能オブジェクトとされる。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>execution -- execution/queryable: クエリ可能オブジェクト説明 (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution.html"/>
      <id>659e33c441fb95040c5a0995a5f930ef3f9c8753:reference/execution/execution.md</id>
      <updated>2025-04-16T21:34:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution.md b/reference/execution/execution.md
index 15206c657..f8ab73ba5 100644
--- a/reference/execution/execution.md
+++ b/reference/execution/execution.md
@@ -47,8 +47,8 @@ namespace std::execution {
 | [`execution::get_completion_scheduler`](execution/get_completion_scheduler.md.nolink) | 完了Scheduler取得のクエリオブジェクト (customization point object) | C++26 |
 | [`execution::get_env`](execution/get_env.md.nolink) | 環境取得のクエリオブジェクト (customization point object) | C++26 |
 | [`execution::env_of_t`](execution/env_of_t.md.nolink) | 指定型から環境型を取得 (alias template) | C++26 |
-| [`execution::prop`](execution/prop.md) | 環境構築用のヘルパクラス (class template) | C++26 |
-| [`execution::env`](execution/env.md) | 環境 (class template) | C++26 |
+| [`execution::prop`](execution/prop.md) | Key/Valueペアによる[クエリ可能オブジェクト](queryable.md) (class template) | C++26 |
+| [`execution::env`](execution/env.md) | 複数Key/Valueからなる[クエリ可能オブジェクト](queryable.md) (class template) | C++26 |
 
 クエリオブジェクトは名前空間 `std` および名前空間 `std::execution` で定義される。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>completion_signatures_of_t -- execution/queryable: クエリ可能オブジェクト説明 (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/completion_signatures_of_t.html"/>
      <id>659e33c441fb95040c5a0995a5f930ef3f9c8753:reference/execution/execution/completion_signatures_of_t.md</id>
      <updated>2025-04-16T21:34:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/completion_signatures_of_t.md b/reference/execution/execution/completion_signatures_of_t.md
index 6429a2714..51bf731bd 100644
--- a/reference/execution/execution/completion_signatures_of_t.md
+++ b/reference/execution/execution/completion_signatures_of_t.md
@@ -18,7 +18,7 @@ namespace std::execution {
 
 ## 概要
 
-[Sender型](sender.md)`Sndr`から[環境](env.md)`Env`における[完了シグネチャ集合](completion_signatures.md)を取得する。
+[Sender型](sender.md)`Sndr`から[環境](../queryable.md)`Env`における[完了シグネチャ集合](completion_signatures.md)を取得する。
 
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>env -- execution/queryable: クエリ可能オブジェクト説明 (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/env.html"/>
      <id>659e33c441fb95040c5a0995a5f930ef3f9c8753:reference/execution/execution/env.md</id>
      <updated>2025-04-16T21:34:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/env.md b/reference/execution/execution/env.md
index 4ebb6362c..947d376b4 100644
--- a/reference/execution/execution/env.md
+++ b/reference/execution/execution/env.md
@@ -12,9 +12,6 @@ namespace std::execution {
     Envs1 envs1_;  // exposition only
     // ...
     EnvsN envsN_;  // exposition only
-
-    template&amp;lt;class QueryTag&amp;gt;
-    constexpr decltype(auto) query(QueryTag q) const noexcept;
   };
 
   template&amp;lt;class... Envs&amp;gt;
@@ -50,13 +47,22 @@ namespace ex = std::execution;
 
 int main()
 {
+  // get_allocatorとget_stop_tokenをサポートするクエリ可能オブジェクト
   auto env = ex::env{
+    ex::prop(std::get_allocator, std::allocator&amp;lt;std::byte&amp;gt;{}),
     ex::prop(std::get_stop_token, std::never_stop_token{})
   };
+
+  // メモリアロケータを問い合わせ
+  auto alloc = std::get_allocator(env);
+  // 停止トークンを問い合わせ
+  auto token = std::get_stop_token(env);
 }
 ```
 * ex::env[color ff0000]
 * ex::prop[link prop.md]
+* std::get_allocator[link get_allocator.md.nolink]
+* std::get_stop_token[link get_stop_token.md.nolink]
 * std::never_stop_token[link /reference/stop_token/never_stop_token.md]
 
 ### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>query -- execution/queryable: クエリ可能オブジェクト説明 (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/env/query.html"/>
      <id>659e33c441fb95040c5a0995a5f930ef3f9c8753:reference/execution/execution/env/query.md</id>
      <updated>2025-04-16T21:34:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/env/query.md b/reference/execution/execution/env/query.md
index bf238c6d9..dbd030f8f 100644
--- a/reference/execution/execution/env/query.md
+++ b/reference/execution/execution/env/query.md
@@ -12,7 +12,7 @@ constexpr decltype(auto) query(QueryTag q) const noexcept(see below);
 * see below[italic]
 
 ## 概要
-クエリオブジェクト`q`に対して問い合わせを行う。
+クエリオブジェクト`q`をキーとして、対応する値を問い合わせる。
 
 
 ## テンプレートパラメータ制約
@@ -49,7 +49,7 @@ using ex = std::execution;
 
 int main()
 {
-  // get_stop_token,get_stop_tokenをサポートするクエリ可能オブジェクト
+  // get_allocatorとget_stop_tokenをサポートするクエリ可能オブジェクト
   auto env0 = ex::env{
     ex::prop(std::get_allocator, std::allocator&amp;lt;std::byte&amp;gt;{}),
     ex::prop(std::get_stop_token, std::never_stop_token{})
@@ -69,8 +69,10 @@ int main()
 * query[color ff0000]
 * ex::env[link ../env.md]
 * ex::prop[link ../prop.md]
-* ex::never_stop_token[link /reference/stop_token/never_stop_token.md]
-* ex::stop_token[link /reference/stop_token/stop_token.md]
+* std::get_allocator[link get_allocator.md.nolink]
+* std::get_stop_token[link get_stop_token.md.nolink]
+* std::never_stop_token[link /reference/stop_token/never_stop_token.md]
+* std::stop_token[link /reference/stop_token/stop_token.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>prop -- execution/queryable: クエリ可能オブジェクト説明 (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/prop.html"/>
      <id>659e33c441fb95040c5a0995a5f930ef3f9c8753:reference/execution/execution/prop.md</id>
      <updated>2025-04-16T21:34:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/prop.md b/reference/execution/execution/prop.md
index 064085cf1..893422d1f 100644
--- a/reference/execution/execution/prop.md
+++ b/reference/execution/execution/prop.md
@@ -23,7 +23,7 @@ namespace std::execution {
 * unwrap_reference_t[link /reference/type_traits/unwrap_reference.md]
 
 ## 概要
-`QueryTag`型クエリオブジェクトのキーと`ValueType`型の値から、読み取り専用の[クエリ可能オブジェクト](../queryable.md)を構築する。
+`QueryTag`型クエリオブジェクトのキーと`ValueType`型の値から、[クエリ可能オブジェクト](../queryable.md)を構築する。
 
 
 ## 適格要件
@@ -49,6 +49,7 @@ int main()
 }
 ```
 * ex::prop[color ff0000]
+* std::get_stop_token[link get_stop_token.md.nolink]
 * std::never_stop_token[link /reference/stop_token/never_stop_token.md]
 
 ### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sender_in -- execution/queryable: クエリ可能オブジェクト説明 (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/sender_in.html"/>
      <id>659e33c441fb95040c5a0995a5f930ef3f9c8753:reference/execution/execution/sender_in.md</id>
      <updated>2025-04-16T21:34:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/sender_in.md b/reference/execution/execution/sender_in.md
index 1ef582f4d..ef3469e1b 100644
--- a/reference/execution/execution/sender_in.md
+++ b/reference/execution/execution/sender_in.md
@@ -22,7 +22,7 @@ namespace std::execution {
 * get_completion_signatures[link get_completion_signatures.md.nolink]
 
 ## 概要
-`sender_in`は、[Sender型](sender.md)`Sndr`が[環境](env.md)`Env`において非同期操作を作成できることを表すコンセプトである。
+`sender_in`は、[Sender型](sender.md)`Sndr`が[環境](../queryable.md)`Env`において非同期操作を作成できることを表すコンセプトである。
 
 
 ## モデル
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>queryable -- execution/queryable: クエリ可能オブジェクト説明 (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/queryable.html"/>
      <id>659e33c441fb95040c5a0995a5f930ef3f9c8753:reference/execution/queryable.md</id>
      <updated>2025-04-16T21:34:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/queryable.md b/reference/execution/queryable.md
index 346b7d038..721edfd1d 100644
--- a/reference/execution/queryable.md
+++ b/reference/execution/queryable.md
@@ -11,7 +11,22 @@ concept queryable = destructible&amp;lt;T&amp;gt;;
 * destructible[link /reference/concepts/destructible.md]
 
 ## 概要
-`queryable`は、型`T`がクエリ可能オブジェクトの制約を満たすことを表す説明専用のコンセプトである。
+`queryable`は、型`T`がクエリ可能オブジェクト(queryable object)の制約を満たすことを表す説明専用のコンセプトである。
+
+
+### クエリ可能オブジェクト
+クエリ可能オブジェクトは、クエリオブジェクト(query object)をキーとして対応する値を保持する、読み取り専用のKey/Valueデータ構造とみなせる。
+
+- [`execution::env&amp;lt;&amp;gt;{}`](execution/env.md) : 空(empty)のクエリ可能オブジェクト
+- [`execution::prop(q, v)`](execution/prop.md) : キー`q`と対応値`v`を保持する最小のクエリ可能オブジェクト
+- [`execution::env&amp;lt;&amp;gt;{...}`](execution/env.md) : 複数のKey/Valueを保持するクエリ可能オブジェクト
+- `queryable`コンセプトを満たすユーザ定義クラスのオブジェクト
+
+実行制御ライブラリでは、下記のオブジェクトがクエリ可能オブジェクトとされる。
+
+- [Sender](execution/sender.md)に関連付けられた属性(attributes)オブジェクト
+- [Receiver](execution/receiver.md)に関連付けられた環境(environment)オブジェクト
+- [Scheduler](execution/scheduler.md)オブジェクト自身
 
 
 ## モデル
@@ -19,6 +34,10 @@ concept queryable = destructible&amp;lt;T&amp;gt;;
 呼び出し可能オブジェクト`q`と部分式パック`args`に対して、`requires { q(env, args...) }`が`true`であれば、`q(env, args...)`が`q`に課されるセマンティック要件を満たす場合に、`Env`は`queryable`のモデルである。
 
 
+## 備考
+[Sender](execution/sender.md)に関連付けられたクエリ可能オブジェクトは、C++ライブラリ仕様では「属性(attributes)」と呼ばれる。
+
+
 ## バージョン
 ### 言語
 - C++26
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>query -- execution/env/query: refinement (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/env/query.html"/>
      <id>6137b03cdbc9079845bbf6dd8e20b7e010fb5cad:reference/execution/execution/env/query.md</id>
      <updated>2025-04-16T00:33:52+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/env/query.md b/reference/execution/execution/env/query.md
index 171fa25da..bf238c6d9 100644
--- a/reference/execution/execution/env/query.md
+++ b/reference/execution/execution/env/query.md
@@ -26,6 +26,7 @@ concept has-query =
   };
 ```
 
+
 ## 効果
 説明用の`fe`を、`env`クラステンプレートの説明専用メンバ変数`envs0_`, ..., `envsN_`のうち最初に式`fe.query(q)`が適格となる要素としたとき、下記と等価。
 
@@ -33,8 +34,10 @@ concept has-query =
 return fe.query(q);
 ```
 
+
 ## 例外
-式`fe.query(q)`が`true`のとき、例外送出しない。
+式`noexcept(fe.query(q))`が`true`のとき、例外送出しない。
+それ以外の場合、式`fe.query(q)`から送出される例外。
 
 
 ## 例
@@ -46,19 +49,28 @@ using ex = std::execution;
 
 int main()
 {
-  auto env = ex::env{
-    ex::prop(std::get_stop_token, std::stop_token{}),
+  // get_stop_token,get_stop_tokenをサポートするクエリ可能オブジェクト
+  auto env0 = ex::env{
     ex::prop(std::get_allocator, std::allocator&amp;lt;std::byte&amp;gt;{}),
-    ex::prop(std::get_stop_token, std::never_stop_token{}),
+    ex::prop(std::get_stop_token, std::never_stop_token{})
   };
+  auto token0 = env0.query(std::get_stop_token);
+  static_assert(std::same_as&amp;lt;decltype(token0), std::never_stop_token&amp;gt;);
 
-  auto token = env.query(std::get_stop_token);
-  static_assert(std::same_as&amp;lt;decltype(token), std::stop_token&amp;gt;);
+  // env0のget_stop_tokenクエリオブジェクト動作を上書き
+  auto env1 = ex::env{
+    ex::prop(std::get_stop_token, std::stop_token{}),
+    env0
+  };
+  auto token1 = env1.query(std::get_stop_token);
+  static_assert(std::same_as&amp;lt;decltype(token1), std::stop_token&amp;gt;);
 }
 ```
 * query[color ff0000]
 * ex::env[link ../env.md]
 * ex::prop[link ../prop.md]
+* ex::never_stop_token[link /reference/stop_token/never_stop_token.md]
+* ex::stop_token[link /reference/stop_token/stop_token.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
</feed>
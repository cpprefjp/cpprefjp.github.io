<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2023-02-02T09:44:36.914011</updated>
  <id>1ac1207c-2381-4875-be51-b4c20967485e</id>

  
    <entry>
      <title>bind -- Merge pull request #1118 from cpprefjp/yumetodo-patch-1</title>
      <link href="https://cpprefjp.github.io/reference/functional/bind.html"/>
      <id>4adfa0ae5a303944a0218f0f04f5f8e526157e18:reference/functional/bind.md</id>
      <updated>2023-02-02T18:29:06+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/functional/bind.md b/reference/functional/bind.md
index 0201f3493..9808b53cc 100644
--- a/reference/functional/bind.md
+++ b/reference/functional/bind.md
@@ -66,16 +66,34 @@ int add(int a, int b, int c)
   return a + b + c;
 }
 
+class Foo {
+public:
+  int n;
+  Foo(int n) : n(n) {}
+  Foo add(int n2) const
+  {
+    return this-&amp;gt;n + n2;
+  }
+};
+
 int main()
 {
   // 第1引数のみを先に渡す
   using namespace std::placeholders;
-  std::function&amp;lt;int(int, int)&amp;gt; f = std::bind(add, 2, _1, _2);
+  std::function&amp;lt;int(int, int)&amp;gt; f1 = std::bind(add, 2, _1, _2);
+
+  // 残りの引数を渡して関数を呼び出す
+  const int result1 = f1(3, 4);
+
+  Foo foo{2};
+
+  // thisにするもののみを先に渡す
+  std::function&amp;lt;Foo(int)&amp;gt; f2 = std::bind(&amp;amp;Foo::add, foo, _1);
 
   // 残りの引数を渡して関数を呼び出す
-  const int result = f(3, 4);
+  const auto result2 = f2(3);
 
-  std::cout &amp;lt;&amp;lt; result &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; result1 &amp;lt;&amp;lt; &amp;#39;,&amp;#39; &amp;lt;&amp;lt; result2.n &amp;lt;&amp;lt; std::endl;
 }
 ```
 * std::bind[color ff0000]
@@ -84,7 +102,7 @@ int main()
 
 ### 出力
 ```
-9
+9,5
 ```
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexpr ラムダ -- Merge pull request #1119 from cpprefjp/fix-typo-constexpr-lambda</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/constexpr_lambda.html"/>
      <id>647578bc1154692dd21ec146709f969697b698eb:lang/cpp17/constexpr_lambda.md</id>
      <updated>2023-02-02T18:25:23+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/constexpr_lambda.md b/lang/cpp17/constexpr_lambda.md
index ffc7e4cc5..1f5ec0f3a 100644
--- a/lang/cpp17/constexpr_lambda.md
+++ b/lang/cpp17/constexpr_lambda.md
@@ -86,7 +86,7 @@ int main(){
 
 constexpr lambdaはSFINAEの文脈で用いる事はできない。
 
-以下のような記述を許可してしまうとあらゆる文や式が実体化に成功するかをチェックでてしまうため、禁止されている。
+以下のような記述を許可してしまうとあらゆる文や式が実体化に成功するかをチェックできてしまうため、禁止されている。
 
 ```cpp
 // エラー、SFINAEの文脈でconstexprラムダが使われている
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexpr ラムダ -- fix typo in constexpr_lambda.md</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/constexpr_lambda.html"/>
      <id>40638a63cdf1948f5f77277d07f504a34e7f7974:lang/cpp17/constexpr_lambda.md</id>
      <updated>2023-02-02T17:52:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/constexpr_lambda.md b/lang/cpp17/constexpr_lambda.md
index ffc7e4cc5..1f5ec0f3a 100644
--- a/lang/cpp17/constexpr_lambda.md
+++ b/lang/cpp17/constexpr_lambda.md
@@ -86,7 +86,7 @@ int main(){
 
 constexpr lambdaはSFINAEの文脈で用いる事はできない。
 
-以下のような記述を許可してしまうとあらゆる文や式が実体化に成功するかをチェックでてしまうため、禁止されている。
+以下のような記述を許可してしまうとあらゆる文や式が実体化に成功するかをチェックできてしまうため、禁止されている。
 
 ```cpp
 // エラー、SFINAEの文脈でconstexprラムダが使われている
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Kotaro Yoshimoto</name>
        <email>pythagora.yoshimoto@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>bind -- feat: std::bindでメンバー関数を呼び出す方法を例に追加</title>
      <link href="https://cpprefjp.github.io/reference/functional/bind.html"/>
      <id>41369956550951a19b948397109d022c383e7f3d:reference/functional/bind.md</id>
      <updated>2023-02-02T16:08:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/functional/bind.md b/reference/functional/bind.md
index 0201f3493..9808b53cc 100644
--- a/reference/functional/bind.md
+++ b/reference/functional/bind.md
@@ -66,16 +66,34 @@ int add(int a, int b, int c)
   return a + b + c;
 }
 
+class Foo {
+public:
+  int n;
+  Foo(int n) : n(n) {}
+  Foo add(int n2) const
+  {
+    return this-&amp;gt;n + n2;
+  }
+};
+
 int main()
 {
   // 第1引数のみを先に渡す
   using namespace std::placeholders;
-  std::function&amp;lt;int(int, int)&amp;gt; f = std::bind(add, 2, _1, _2);
+  std::function&amp;lt;int(int, int)&amp;gt; f1 = std::bind(add, 2, _1, _2);
+
+  // 残りの引数を渡して関数を呼び出す
+  const int result1 = f1(3, 4);
+
+  Foo foo{2};
+
+  // thisにするもののみを先に渡す
+  std::function&amp;lt;Foo(int)&amp;gt; f2 = std::bind(&amp;amp;Foo::add, foo, _1);
 
   // 残りの引数を渡して関数を呼び出す
-  const int result = f(3, 4);
+  const auto result2 = f2(3);
 
-  std::cout &amp;lt;&amp;lt; result &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; result1 &amp;lt;&amp;lt; &amp;#39;,&amp;#39; &amp;lt;&amp;lt; result2.n &amp;lt;&amp;lt; std::endl;
 }
 ```
 * std::bind[color ff0000]
@@ -84,7 +102,7 @@ int main()
 
 ### 出力
 ```
-9
+9,5
 ```
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>print -- print(ln) : コンパイルエラー行をコメントアウト</title>
      <link href="https://cpprefjp.github.io/reference/print/print.html"/>
      <id>a689c6b126c827101cda6035cb83100609953f65:reference/print/print.md</id>
      <updated>2023-02-02T01:06:43+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/print/print.md b/reference/print/print.md
index da96a425d..0f4624814 100644
--- a/reference/print/print.md
+++ b/reference/print/print.md
@@ -118,10 +118,15 @@ int main()
   // stdout / stderrはマクロとして定義される。
   // モジュールはマクロをエクスポートしないので、
   // stdout / stderrは使用できない
-  std::print(stdout, &amp;#34;Hello {} World\n&amp;#34;, 42); // エラー！stdoutが見つからない
+  // std::print(stdout, &amp;#34;Hello {} World\n&amp;#34;, 42); // エラー！stdoutが見つからない
 }
 ```
 
+#### 出力
+```
+Hello 42 World
+```
+
 ## バージョン
 ### 言語
 - C++23
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>println -- print(ln) : コンパイルエラー行をコメントアウト</title>
      <link href="https://cpprefjp.github.io/reference/print/println.html"/>
      <id>a689c6b126c827101cda6035cb83100609953f65:reference/print/println.md</id>
      <updated>2023-02-02T01:06:43+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/print/println.md b/reference/print/println.md
index e588f774d..c352e6dc8 100644
--- a/reference/print/println.md
+++ b/reference/print/println.md
@@ -86,10 +86,15 @@ int main()
   // stdout / stderrはマクロとして定義される。
   // モジュールはマクロをエクスポートしないので、
   // stdout / stderrは使用できない
-  std::println(stdout, &amp;#34;Hello {} World&amp;#34;, 42); // エラー！stdoutが見つからない
+  // std::println(stdout, &amp;#34;Hello {} World&amp;#34;, 42); // エラー！stdoutが見つからない
 }
 ```
 
+#### 出力
+```
+Hello 42 World
+```
+
 ## バージョン
 ### 言語
 - C++23
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2020-11-24T08:05:30.083944</updated>
  <id>66571823-65e1-4f20-ad11-0811e7fe75be</id>

  
    <entry>
      <title>operator&lt;=&gt; -- leap_second : operator&lt;=&gt;の制約見直しに対応</title>
      <link href="https://cpprefjp.github.io/reference/chrono/leap_second/op_compare_3way.html"/>
      <id>a76aeeabcf7b0f6852f01ade4fd40c4dcf840b40:reference/chrono/leap_second/op_compare_3way.md</id>
      <updated>2020-11-24T17:00:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/leap_second/op_compare_3way.md b/reference/chrono/leap_second/op_compare_3way.md
index f47435620..c3e2b584d 100644
--- a/reference/chrono/leap_second/op_compare_3way.md
+++ b/reference/chrono/leap_second/op_compare_3way.md
@@ -9,7 +9,8 @@ namespace std::chrono {
   constexpr strong_ordering
     operator&amp;lt;=&amp;gt;(const leap_second&amp;amp; x, const leap_second&amp;amp; y) noexcept;        // (1) C++20
 
-  template &amp;lt;three_way_comparable_with&amp;lt;sys_seconds&amp;gt; Duration&amp;gt;
+  template &amp;lt;class Duration&amp;gt;
+    requires three_way_comparable_with&amp;lt;sys_seconds, sys_time&amp;lt;Duration&amp;gt;&amp;gt;
   constexpr auto
     operator&amp;lt;=&amp;gt;(const leap_second&amp;amp; x, const sys_time&amp;lt;Duration&amp;gt;&amp;amp; y) noexcept; // (2) C++20
 }
@@ -55,3 +56,7 @@ namespace std::chrono {
 - [Clang](/implementation.md#clang): (9.0時点で実装なし)
 - [GCC](/implementation.md#gcc): (9.2時点で実装なし)
 - [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 参照
+- [LWG Issue 3383. §[time.zone.leap.nonmembers] `sys_seconds` should be replaced with `seconds`](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3383)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>to_address -- to_address : constexpr対応</title>
      <link href="https://cpprefjp.github.io/reference/memory/to_address.html"/>
      <id>c7770a02a6a362859b64f5e31c260ff7f0039b33:reference/memory/to_address.md</id>
      <updated>2020-11-24T16:56:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/memory/to_address.md b/reference/memory/to_address.md
index 6e9688cf5..a301c42f8 100644
--- a/reference/memory/to_address.md
+++ b/reference/memory/to_address.md
@@ -7,10 +7,10 @@
 ```cpp
 namespace std {
   template &amp;lt;class Ptr&amp;gt;
-  auto to_address(const Ptr&amp;amp; p) noexcept; // (1)
+  constexpr auto to_address(const Ptr&amp;amp; p) noexcept; // (1)
 
   template &amp;lt;class T&amp;gt;
-  constexpr T* to_address(T* p) noexcept; // (2)
+  constexpr T* to_address(T* p) noexcept;           // (2)
 }
 ```
 
@@ -74,3 +74,4 @@ int main()
 ## 参照
 - [P0653R2 Utility to convert a pointer to a raw pointer](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0653r2.html)
 - [`pointer_traits` - Boost Core Library](http://www.boost.org/doc/libs/1_66_0/libs/core/doc/html/core/pointer_traits.html)
+- [LWG Issue 3374. P0653 + P1006 should have made the other `std::to_address` overload `constexpr`](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3374)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>get_leap_second_info -- chrono : 負のうるう秒に対応</title>
      <link href="https://cpprefjp.github.io/reference/chrono/get_leap_second_info.html"/>
      <id>4351f6e2e32ffadf5a4706ced71f222999720f95:reference/chrono/get_leap_second_info.md</id>
      <updated>2020-11-24T16:54:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/get_leap_second_info.md b/reference/chrono/get_leap_second_info.md
index 2de3c2b4d..03a4581ca 100644
--- a/reference/chrono/get_leap_second_info.md
+++ b/reference/chrono/get_leap_second_info.md
@@ -23,7 +23,7 @@ namespace std::chrono {
 | メンバ変数 | 説明 |
 |------------|------|
 | `is_leap_second` | `ut`自身がうるう秒であれば`true`、そうでなければ`false` |
-| `elapsed`        | 1970年1月1日から`ut`でにうるう秒が挿入された回数 (秒数)。&amp;lt;br/&amp;gt; 回数には`ut`を含む |
+| `elapsed`        | 1970年1月1日から`ut`までに正のうるう秒が挿入された合計 (秒数)。&amp;lt;br/&amp;gt; 合計には`ut`を含む |
 
 
 ## 例
@@ -85,3 +85,4 @@ true
 
 ## 参照
 - [P1466R3 Miscellaneous minor fixes for chrono](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1466r3.html)
+- [LWG Issue 3359. `&amp;lt;chrono&amp;gt;` leap second support should allow for negative leap seconds](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3359)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>gps_clock -- chrono : 負のうるう秒に対応</title>
      <link href="https://cpprefjp.github.io/reference/chrono/gps_clock.html"/>
      <id>4351f6e2e32ffadf5a4706ced71f222999720f95:reference/chrono/gps_clock.md</id>
      <updated>2020-11-24T16:54:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/gps_clock.md b/reference/chrono/gps_clock.md
index f667d6ef4..8f3964fc9 100644
--- a/reference/chrono/gps_clock.md
+++ b/reference/chrono/gps_clock.md
@@ -23,7 +23,7 @@ namespace std::chrono {
 
 
 ### うるう秒の扱い
-このクロックではうるう秒は挿入されず、うるう秒の数だけ時間が進む。そのため、UTCにうるう秒が挿入されるたびに、UTCはGPSよりも1秒ずつ遅れていく。
+このクロックではうるう秒は挿入されず、うるう秒の数だけ時間が進む。そのため、UTCにうるう秒が挿入されるたびに、UTCはGPSよりも1秒ずつずれていく。
 
 GPS時間とTAI時間は19秒ずれていて、このずれは時間が経過しても変わらない。GPS時間のエポックが[`1958y`](year/op_y.md)`/`[`January`](month_constants.md)`/1`、TAI時間のエポックが[`1980y`](year/op_y.md)`/`[`January`](month_constants.md)`/`[`Sunday`](weekday_constants.md)`[1]`であるが、1958年から1970年までのオフセットが10秒と、1970年から1980年までに挿入されたうるう秒が9秒あるためだ。
 
@@ -87,3 +87,4 @@ int main()
 
 ## 参照
 - [全地球測位システム GPS - 暦Wiki](https://eco.mtk.nao.ac.jp/koyomi/wiki/GPS.html)
+- [LWG Issue 3359. `&amp;lt;chrono&amp;gt;` leap second support should allow for negative leap seconds](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3359)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>leap_second -- chrono : 負のうるう秒に対応</title>
      <link href="https://cpprefjp.github.io/reference/chrono/leap_second.html"/>
      <id>4351f6e2e32ffadf5a4706ced71f222999720f95:reference/chrono/leap_second.md</id>
      <updated>2020-11-24T16:54:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/leap_second.md b/reference/chrono/leap_second.md
index 8402acfd9..1f027f8c2 100644
--- a/reference/chrono/leap_second.md
+++ b/reference/chrono/leap_second.md
@@ -30,6 +30,7 @@ namespace std::chrono {
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
 | [`date`](leap_second/date.md) | うるう秒が挿入された日時を秒単位のシステム時間として取得する | C++20 |
+| [`value`](leap_second/value.md) | 挿入されたうるう秒の値を取得する (正か負) | C++20 |
 
 
 ## 非メンバ関数
@@ -59,7 +60,7 @@ int main()
   // 2018年3月17日までにうるう秒が挿入された日を列挙する
   for (const chrono::leap_second&amp;amp; date : chrono::get_tzdb().leap_seconds) {
     if (date &amp;lt;= 2018y/3/17)
-      std::cout &amp;lt;&amp;lt; date.date() &amp;lt;&amp;lt; std::endl;
+      std::cout &amp;lt;&amp;lt; date.date() &amp;lt;&amp;lt; &amp;#34;: &amp;#34; &amp;lt;&amp;lt; date.value() &amp;lt;&amp;lt; std::endl;
   }
 }
 ```
@@ -70,33 +71,33 @@ int main()
 
 ### 出力
 ```
-1972-07-01 00:00:00
-1973-01-01 00:00:00
-1974-01-01 00:00:00
-1975-01-01 00:00:00
-1976-01-01 00:00:00
-1977-01-01 00:00:00
-1978-01-01 00:00:00
-1979-01-01 00:00:00
-1980-01-01 00:00:00
-1981-07-01 00:00:00
-1982-07-01 00:00:00
-1983-07-01 00:00:00
-1985-07-01 00:00:00
-1988-01-01 00:00:00
-1990-01-01 00:00:00
-1991-01-01 00:00:00
-1992-07-01 00:00:00
-1993-07-01 00:00:00
-1994-07-01 00:00:00
-1996-01-01 00:00:00
-1997-07-01 00:00:00
-1999-01-01 00:00:00
-2006-01-01 00:00:00
-2009-01-01 00:00:00
-2012-07-01 00:00:00
-2015-07-01 00:00:00
-2017-01-01 00:00:00
+1972-07-01 00:00:00: 1s
+1973-01-01 00:00:00: 1s
+1974-01-01 00:00:00: 1s
+1975-01-01 00:00:00: 1s
+1976-01-01 00:00:00: 1s
+1977-01-01 00:00:00: 1s
+1978-01-01 00:00:00: 1s
+1979-01-01 00:00:00: 1s
+1980-01-01 00:00:00: 1s
+1981-07-01 00:00:00: 1s
+1982-07-01 00:00:00: 1s
+1983-07-01 00:00:00: 1s
+1985-07-01 00:00:00: 1s
+1988-01-01 00:00:00: 1s
+1990-01-01 00:00:00: 1s
+1991-01-01 00:00:00: 1s
+1992-07-01 00:00:00: 1s
+1993-07-01 00:00:00: 1s
+1994-07-01 00:00:00: 1s
+1996-01-01 00:00:00: 1s
+1997-07-01 00:00:00: 1s
+1999-01-01 00:00:00: 1s
+2006-01-01 00:00:00: 1s
+2009-01-01 00:00:00: 1s
+2012-07-01 00:00:00: 1s
+2015-07-01 00:00:00: 1s
+2017-01-01 00:00:00: 1s
 ```
 
 ## バージョン
@@ -115,4 +116,5 @@ int main()
     - 各うるう秒は、1900年1月1日UTCからの経過秒として定義される (UNIX時間の1970年1月1日からの経過秒ではない)
 - [P1981R0 Rename `leap` to `leap_second`](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1981r0.html)
     - C++20の策定中、National Body Commentとして`leap`というクラス名は一般的すぎて説明的ではないと指摘があり、`leap_second`に名称変更された
+- [LWG Issue 3359. `&amp;lt;chrono&amp;gt;` leap second support should allow for negative leap seconds](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3359)
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>date -- chrono : 負のうるう秒に対応</title>
      <link href="https://cpprefjp.github.io/reference/chrono/leap_second/date.html"/>
      <id>4351f6e2e32ffadf5a4706ced71f222999720f95:reference/chrono/leap_second/date.md</id>
      <updated>2020-11-24T16:54:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/leap_second/date.md b/reference/chrono/leap_second/date.md
index c6c6e37c0..8b81591a2 100644
--- a/reference/chrono/leap_second/date.md
+++ b/reference/chrono/leap_second/date.md
@@ -6,7 +6,7 @@
 * cpp20[meta cpp]
 
 ```cpp
-constexpr sys_seconds date() const noexcept;; // (1) C++20
+constexpr sys_seconds date() const noexcept; // (1) C++20
 ```
 * sys_seconds[link /reference/chrono/sys_time.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>value -- chrono : 負のうるう秒に対応</title>
      <link href="https://cpprefjp.github.io/reference/chrono/leap_second/value.html"/>
      <id>4351f6e2e32ffadf5a4706ced71f222999720f95:reference/chrono/leap_second/value.md</id>
      <updated>2020-11-24T16:54:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/leap_second/value.md b/reference/chrono/leap_second/value.md
new file mode 100644
index 000000000..d31d56bcb
--- /dev/null
+++ b/reference/chrono/leap_second/value.md
@@ -0,0 +1,85 @@
+# value
+* chrono[meta header]
+* std::chrono[meta namespace]
+* leap_second[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr seconds value() const noexcept; // (1) C++20
+```
+
+## 概要
+挿入されたうるう秒の値を取得する。
+
+
+## 戻り値
+`+`[`1s`](/reference/chrono/duration/op_s.md)は正のうるう秒、`-`[`1s`](/reference/chrono/duration/op_s.md)は負のうるう秒を表す。
+
+
+## 備考
+- 2019年までに挿入されたすべてのうるう秒は、正のうるう秒だった
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+
+int main()
+{
+  for (const chrono::leap_seconds date : chrono::get_tzdb().leap_seconds) {
+    chrono::seconds value = date.value();
+    std::cout &amp;lt;&amp;lt; date.date() &amp;lt;&amp;lt; &amp;lt;&amp;lt; &amp;#34;: &amp;#34; &amp;lt;&amp;lt; value &amp;lt;&amp;lt; std::endl;
+  }
+}
+```
+* value()[color ff0000]
+* chrono::get_tzdb()[link /reference/chrono/get_tzdb.md]
+* date.date()[link date.md]
+
+### 出力例
+```
+1972-07-01 00:00:00: 1s
+1973-01-01 00:00:00: 1s
+1974-01-01 00:00:00: 1s
+1975-01-01 00:00:00: 1s
+1976-01-01 00:00:00: 1s
+1977-01-01 00:00:00: 1s
+1978-01-01 00:00:00: 1s
+1979-01-01 00:00:00: 1s
+1980-01-01 00:00:00: 1s
+1981-07-01 00:00:00: 1s
+1982-07-01 00:00:00: 1s
+1983-07-01 00:00:00: 1s
+1985-07-01 00:00:00: 1s
+1988-01-01 00:00:00: 1s
+1990-01-01 00:00:00: 1s
+1991-01-01 00:00:00: 1s
+1992-07-01 00:00:00: 1s
+1993-07-01 00:00:00: 1s
+1994-07-01 00:00:00: 1s
+1996-01-01 00:00:00: 1s
+1997-07-01 00:00:00: 1s
+1999-01-01 00:00:00: 1s
+2006-01-01 00:00:00: 1s
+2009-01-01 00:00:00: 1s
+2012-07-01 00:00:00: 1s
+2015-07-01 00:00:00: 1s
+2017-01-01 00:00:00: 1s
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): (9.0時点で実装なし)
+- [GCC](/implementation.md#gcc): (9.2時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 参照
+- [LWG Issue 3359. `&amp;lt;chrono&amp;gt;` leap second support should allow for negative leap seconds](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3359)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>tai_clock -- chrono : 負のうるう秒に対応</title>
      <link href="https://cpprefjp.github.io/reference/chrono/tai_clock.html"/>
      <id>4351f6e2e32ffadf5a4706ced71f222999720f95:reference/chrono/tai_clock.md</id>
      <updated>2020-11-24T16:54:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/tai_clock.md b/reference/chrono/tai_clock.md
index a43ee4a42..e8a53f315 100644
--- a/reference/chrono/tai_clock.md
+++ b/reference/chrono/tai_clock.md
@@ -26,9 +26,9 @@ namespace std::chrono {
 
 
 ### うるう秒の扱い
-このクロックではうるう秒は挿入されず、うるう秒の数だけ時間が進む。そのため、UTCにうるう秒が挿入されるたびに、UTCはTAIよりも1秒ずつ遅れていく。
+このクロックではうるう秒は挿入されず、うるう秒の数だけ時間が進む。そのため、UTCにうるう秒が挿入されるたびに、UTCはTAIよりも1秒ずつずれていく。
 
-例として、2000年01月01日までにうるう秒は22回挿入されたため、TAIがUTCより10秒進んでいることも含めて、2000-01-01 00:00:00 UTCと2000-01-01 00:00:32 TAIは等価となる。
+例として、2000年01月01日までに正のうるう秒が22回、負のうるう秒が0回挿入されたため、TAIがUTCより10秒進んでいることも含めて、2000-01-01 00:00:00 UTCと2000-01-01 00:00:32 TAIは等価となる。
 
 
 ## メンバ関数
@@ -90,3 +90,4 @@ int main()
 
 ## 参照
 - [国際原子時 - Wikipedia](https://ja.wikipedia.org/wiki/国際原子時)
+- [LWG Issue 3359. `&amp;lt;chrono&amp;gt;` leap second support should allow for negative leap seconds](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3359)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>from_sys -- chrono : 負のうるう秒に対応</title>
      <link href="https://cpprefjp.github.io/reference/chrono/utc_clock/from_sys.html"/>
      <id>4351f6e2e32ffadf5a4706ced71f222999720f95:reference/chrono/utc_clock/from_sys.md</id>
      <updated>2020-11-24T16:54:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/utc_clock/from_sys.md b/reference/chrono/utc_clock/from_sys.md
index c9ac87381..5b67586f6 100644
--- a/reference/chrono/utc_clock/from_sys.md
+++ b/reference/chrono/utc_clock/from_sys.md
@@ -19,9 +19,7 @@ static utc_time&amp;lt;common_type_t&amp;lt;Duration, seconds&amp;gt;&amp;gt;
 
 
 ## 戻り値
-システム時間`t`にエポックからのうるう秒を加算することで、UTC時間に変換して返す。
-
-変換元と変換先の時間単位は同じとなる。
+`u.`[`time_since_epoch()`](/reference/chrono/time_point/time_since_epoch.md) `- t.`[`time_since_epoch()`](/reference/chrono/time_point/time_since_epoch.md)が1970年1月1日からの挿入されたうるう秒の合計と等しくなるような[`utc_time`](/reference/chrono/utc_time.md)型オブジェクト`u`を返す。`t`がうるう秒が挿入されたちょうどその日付だえる場合、この変換ではうるう秒が挿入されたものとしてカウントされる。
 
 
 ## 例
@@ -70,3 +68,7 @@ int main()
 - [Clang](/implementation.md#clang): (9.0時点で実装なし)
 - [GCC](/implementation.md#gcc): (9.2時点で実装なし)
 - [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 参照
+- [LWG Issue 3359. `&amp;lt;chrono&amp;gt;` leap second support should allow for negative leap seconds](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3359)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>to_sys -- chrono : 負のうるう秒に対応</title>
      <link href="https://cpprefjp.github.io/reference/chrono/utc_clock/to_sys.html"/>
      <id>4351f6e2e32ffadf5a4706ced71f222999720f95:reference/chrono/utc_clock/to_sys.md</id>
      <updated>2020-11-24T16:54:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/utc_clock/to_sys.md b/reference/chrono/utc_clock/to_sys.md
index 65e9f1cbc..589cd28fd 100644
--- a/reference/chrono/utc_clock/to_sys.md
+++ b/reference/chrono/utc_clock/to_sys.md
@@ -19,9 +19,7 @@ UTC時間からシステム時間に変換する。
 
 
 ## 戻り値
-UTC時間`u`からうるう秒を除外した、システム時間として表現可能な最後の日時を返す。
-
-変換元と変換先の時間単位は同じとなる。
+対応するシステム時間が存在する場合、[`from_sys`](from_sys.md)`(t) == u`となるようなシステム時間`t`を返す。そうでない場合、UTC時間`u`は正のうるう秒が挿入されている時間点を表しており、この変換によってうるう秒が挿入されていないものとして時間をカウントし、うるう秒が挿入される前のシステム時間として表現可能な最後の日時を返す。
 
 
 ## 例
@@ -65,3 +63,7 @@ int main()
 - [Clang](/implementation.md#clang): (9.0時点で実装なし)
 - [GCC](/implementation.md#gcc): (9.2時点で実装なし)
 - [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 参照
+- [LWG Issue 3359. `&amp;lt;chrono&amp;gt;` leap second support should allow for negative leap seconds](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3359)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>utc_time -- chrono : 負のうるう秒に対応</title>
      <link href="https://cpprefjp.github.io/reference/chrono/utc_time.html"/>
      <id>4351f6e2e32ffadf5a4706ced71f222999720f95:reference/chrono/utc_time.md</id>
      <updated>2020-11-24T16:54:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/utc_time.md b/reference/chrono/utc_time.md
index 6846ca961..4d0725e57 100644
--- a/reference/chrono/utc_time.md
+++ b/reference/chrono/utc_time.md
@@ -66,7 +66,7 @@ UTC時間の一点を指す[`time_point`](time_point.md)に対する別名。
 - (5) :
     - `%Z` (タイムゾーンの略称) が指定された場合、`STATICALLY-WIDEN&amp;lt;charT&amp;gt;(&amp;#34;UTC&amp;#34;)`で置き換えられる
     - `%z`もしくはその改良コマンドが指定された場合、`0`[`min`](duration/op_min.md)が使用される
-    - 引数がうるう秒が挿入された時間を表す場合、秒フィールドは`STATICALLY-WIDEN&amp;lt;charT&amp;gt;(&amp;#34;60&amp;#34;)`でフォーマットされる
+    - 引数が正のうるう秒が挿入された時間を表す場合、秒フィールドは`STATICALLY-WIDEN&amp;lt;charT&amp;gt;(&amp;#34;60&amp;#34;)`でフォーマットされる
 
 
 ## 例
@@ -210,3 +210,7 @@ int main()
 ## 関連項目
 - [chronoの`std::format()`](/reference/chrono/format.md) (出力フォーマットの詳細)
 - [chronoの`parse()`](/reference/chrono/parse.md) (入力フォーマットの詳細)
+
+
+## 参照
+- [LWG Issue 3359. `&amp;lt;chrono&amp;gt;` leap second support should allow for negative leap seconds](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3359)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator++ -- 表示の調整</title>
      <link href="https://cpprefjp.github.io/reference/iterator/common_iterator/op_increment.html"/>
      <id>da9d5e4687c7fcbf07356034daac3acf2494d495:reference/iterator/common_iterator/op_increment.md</id>
      <updated>2020-11-24T13:52:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/common_iterator/op_increment.md b/reference/iterator/common_iterator/op_increment.md
index 1a4546933..630000b9a 100644
--- a/reference/iterator/common_iterator/op_increment.md
+++ b/reference/iterator/common_iterator/op_increment.md
@@ -34,6 +34,7 @@ decltype(auto) operator++(int);   // (2)
       ++*this;
       return tmp;
       ```
+
     - それ以外の場合 : `return get&amp;lt;I&amp;gt;(v_)++;`
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>common_iterator -- リンク修正と不可視文字の削除</title>
      <link href="https://cpprefjp.github.io/reference/iterator/common_iterator.html"/>
      <id>2097ddf5678e647fa5987b310988f08c0e35d5ef:reference/iterator/common_iterator.md</id>
      <updated>2020-11-24T12:38:03+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/common_iterator.md b/reference/iterator/common_iterator.md
index 96c1a86ff..4ab53bf6c 100644
--- a/reference/iterator/common_iterator.md
+++ b/reference/iterator/common_iterator.md
@@ -77,7 +77,7 @@ namespace std {
 | `iterator_category` | [`forward_iterator_tag`](/reference/iterator/iterator_tag.md) &amp;lt;br/&amp;gt; ただし、[`iterator_traits`](/reference/iterator/iterator_traits.md)`&amp;lt;I&amp;gt;::iterator_category`が[`derived_from`](/reference/concepts/derived_from.md)`&amp;lt;forward_iterator_tag&amp;gt;`のモデルではない場合は`input_iterator_tag` | C++20 |
 | `value_type` | [`iter_value_t`](/reference/iterator/iter_value_t.md)`&amp;lt;I&amp;gt;` | C++20 |
 | `difference_type` | [`iter_difference_t`](/reference/iterator/iter_difference_t.md)`&amp;lt;I&amp;gt;` | C++20 |
-| `pointer` | `void` &amp;lt;br/&amp;gt; ただし、[`operator-&amp;gt;`](common_iterator/op_arrow.md.nolink)が利用可能である場合はその戻り値型 | C++20 |
+| `pointer` | `void` &amp;lt;br/&amp;gt; ただし、[`operator-&amp;gt;`](common_iterator/op_arrow.md)が利用可能である場合はその戻り値型 | C++20 |
 | `reference` | [`iter_reference_t`](/reference/iterator/iter_reference_t.md)`&amp;lt;I&amp;gt;`  | C++20 |
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator++ -- リンク修正と不可視文字の削除</title>
      <link href="https://cpprefjp.github.io/reference/iterator/common_iterator/op_increment.html"/>
      <id>2097ddf5678e647fa5987b310988f08c0e35d5ef:reference/iterator/common_iterator/op_increment.md</id>
      <updated>2020-11-24T12:38:03+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/common_iterator/op_increment.md b/reference/iterator/common_iterator/op_increment.md
index f5447abe8..1a4546933 100644
--- a/reference/iterator/common_iterator/op_increment.md
+++ b/reference/iterator/common_iterator/op_increment.md
@@ -23,7 +23,7 @@ decltype(auto) operator++(int);   // (2)
 
 - (1) : 以下と等価  
     ```cpp
-    ++get&amp;lt;I&amp;gt;(v_­);
+    ++get&amp;lt;I&amp;gt;(v_);
     return *this;
     ```
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
</feed>
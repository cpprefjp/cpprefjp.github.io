<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2020-06-15T08:37:58.498189</updated>
  <id>f339b29b-41a1-4dc7-88aa-054e9cc6cfc0</id>

  
    <entry>
      <title>counting_semaphore -- リンクミスを修正</title>
      <link href="https://cpprefjp.github.io/reference/semaphore/counting_semaphore.html"/>
      <id>31bb95d5b4b47f15893b8e269511c4eaf7e81b85:reference/semaphore/counting_semaphore.md</id>
      <updated>2020-06-15T17:33:55+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/semaphore/counting_semaphore.md b/reference/semaphore/counting_semaphore.md
index bda36644d..ffc5544a2 100644
--- a/reference/semaphore/counting_semaphore.md
+++ b/reference/semaphore/counting_semaphore.md
@@ -114,7 +114,7 @@ int main()
 * acquire()[link counting_semaphore/acquire.md]
 * std::queue[link /reference/queue/queue.md]
 * stock.push[link /reference/queue/queue/push.md]
-* stop.pop()[link /reference/queue/queue/pop.md]
+* stock.pop()[link /reference/queue/queue/pop.md]
 * join()[link /reference/thread/thread/join.md]
 
 ### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>counting_semaphore -- counting_semaphore : コード修飾を追加</title>
      <link href="https://cpprefjp.github.io/reference/semaphore/counting_semaphore.html"/>
      <id>a830a52816d16564a40e7d989eadbfe7e44f06f6:reference/semaphore/counting_semaphore.md</id>
      <updated>2020-06-15T17:25:51+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/semaphore/counting_semaphore.md b/reference/semaphore/counting_semaphore.md
index 41978ea1b..bda36644d 100644
--- a/reference/semaphore/counting_semaphore.md
+++ b/reference/semaphore/counting_semaphore.md
@@ -12,6 +12,7 @@ namespace std {
   using binary_semaphore = counting_semaphore&amp;lt;1&amp;gt;;
 }
 ```
+* ptrdiff_t[link /reference/cstddef/ptrdiff_t.md]
 
 ## 概要
 `counting_semaphore`クラスは、スレッド間で使用する共有リソースへの並行アクセスを制約する、軽量な同期プリミティブである。
@@ -111,6 +112,10 @@ int main()
 * std::counting_semaphore[color ff0000]
 * release()[link counting_semaphore/release.md]
 * acquire()[link counting_semaphore/acquire.md]
+* std::queue[link /reference/queue/queue.md]
+* stock.push[link /reference/queue/queue/push.md]
+* stop.pop()[link /reference/queue/queue/pop.md]
+* join()[link /reference/thread/thread/join.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>max -- counting_semaphore : コード修飾を追加</title>
      <link href="https://cpprefjp.github.io/reference/semaphore/counting_semaphore/max.html"/>
      <id>a830a52816d16564a40e7d989eadbfe7e44f06f6:reference/semaphore/counting_semaphore/max.md</id>
      <updated>2020-06-15T17:25:51+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/semaphore/counting_semaphore/max.md b/reference/semaphore/counting_semaphore/max.md
index 038e89e9c..92de926d7 100644
--- a/reference/semaphore/counting_semaphore/max.md
+++ b/reference/semaphore/counting_semaphore/max.md
@@ -8,6 +8,7 @@
 ```cpp
 static constexpr ptrdiff_t max() noexcept;
 ```
+* ptrdiff_t[link /reference/cstddef/ptrdiff_t.md]
 
 ## 概要
 カウンティングセマフォが取り扱えるカウンタの最大値
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>release -- counting_semaphore : コード修飾を追加</title>
      <link href="https://cpprefjp.github.io/reference/semaphore/counting_semaphore/release.html"/>
      <id>a830a52816d16564a40e7d989eadbfe7e44f06f6:reference/semaphore/counting_semaphore/release.md</id>
      <updated>2020-06-15T17:25:51+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/semaphore/counting_semaphore/release.md b/reference/semaphore/counting_semaphore/release.md
index 2008c6bfb..7a84a72a4 100644
--- a/reference/semaphore/counting_semaphore/release.md
+++ b/reference/semaphore/counting_semaphore/release.md
@@ -8,6 +8,7 @@
 ```cpp
 void release(ptrdiff_t update = 1);
 ```
+* ptrdiff_t[link /reference/cstddef/ptrdiff_t.md]
 
 ## 概要
 カウンティングセマフォのカウンタ値に`update`を加算し、待機中スレッドのブロック解除を行う。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>try_acquire -- counting_semaphore : コード修飾を追加</title>
      <link href="https://cpprefjp.github.io/reference/semaphore/counting_semaphore/try_acquire.html"/>
      <id>a830a52816d16564a40e7d989eadbfe7e44f06f6:reference/semaphore/counting_semaphore/try_acquire.md</id>
      <updated>2020-06-15T17:25:51+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/semaphore/counting_semaphore/try_acquire.md b/reference/semaphore/counting_semaphore/try_acquire.md
index eccbd53c2..19adfa460 100644
--- a/reference/semaphore/counting_semaphore/try_acquire.md
+++ b/reference/semaphore/counting_semaphore/try_acquire.md
@@ -63,6 +63,7 @@ int main()
 * try_acquire()[color ff0000]
 * acquire()[link acquire.md]
 * release()[link release.md]
+* std::this_thread::yield()[link /reference/thread/this_thread/yield.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>try_acquire_until -- counting_semaphore : コード修飾を追加</title>
      <link href="https://cpprefjp.github.io/reference/semaphore/counting_semaphore/try_acquire_until.html"/>
      <id>a830a52816d16564a40e7d989eadbfe7e44f06f6:reference/semaphore/counting_semaphore/try_acquire_until.md</id>
      <updated>2020-06-15T17:25:51+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/semaphore/counting_semaphore/try_acquire_until.md b/reference/semaphore/counting_semaphore/try_acquire_until.md
index 2f5fa5fa1..ba4586532 100644
--- a/reference/semaphore/counting_semaphore/try_acquire_until.md
+++ b/reference/semaphore/counting_semaphore/try_acquire_until.md
@@ -69,6 +69,7 @@ int main()
 ```
 * try_acquire_until[color ff0000]
 * release()[link release.md]
+* std::chrono::system_clock[link /reference/chrono/system_clock.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>semaphore -- リンクミスを修正</title>
      <link href="https://cpprefjp.github.io/reference/semaphore.html"/>
      <id>35f7dda790e4cc532b512fc29fcfc8ea9f43f96d:reference/semaphore.md</id>
      <updated>2020-06-15T16:57:55+09:00</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;semaphore&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;semaphore&lt;/span&gt;&lt;span class=&#34;cpp cpp20&#34; title=&#34;C++20で追加&#34;&gt;(C++20)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;semaphore&amp;gt;&lt;/code&gt;ヘッダは、&lt;a href=&#34;https://ja.wikipedia.org/wiki/%E3%82%BB%E3%83%9E%E3%83%95%E3%82%A9&#34; target=&#34;_blank&#34;&gt;セマフォ&lt;/a&gt;に関するクラスを定義する。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/semaphore/counting_semaphore.html&#34;&gt;counting_semaphore&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;カウンティングセマフォ (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/semaphore/counting_semaphore.html&#34;&gt;binary_semaphore&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;バイナリセマフォ &lt;code&gt;counting_semaphore&amp;lt;1&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++20&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0514r4.pdf&#34; target=&#34;_blank&#34;&gt;P0514R4 Efficient concurrent waiting for C++20&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1135r6.html&#34; target=&#34;_blank&#34;&gt;P1135R6 The C++20 Synchronization Library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>semaphore -- counting_semaphore : binary_semaphoreの宣言を追加</title>
      <link href="https://cpprefjp.github.io/reference/semaphore.html"/>
      <id>e99d09afcf956f447e0ed3608ffe76ee1a7c7666:reference/semaphore.md</id>
      <updated>2020-06-15T16:53:12+09:00</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;semaphore&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;semaphore&lt;/span&gt;&lt;span class=&#34;cpp cpp20&#34; title=&#34;C++20で追加&#34;&gt;(C++20)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;semaphore&amp;gt;&lt;/code&gt;ヘッダは、&lt;a href=&#34;https://ja.wikipedia.org/wiki/%E3%82%BB%E3%83%9E%E3%83%95%E3%82%A9&#34; target=&#34;_blank&#34;&gt;セマフォ&lt;/a&gt;に関するクラスを定義する。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/semaphore/counting_semaphore.html&#34;&gt;counting_semaphore&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;カウンティングセマフォ (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/(semaphore/counting_semaphore.md)&#34;&gt;binary_semaphore&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;バイナリセマフォ &lt;code&gt;counting_semaphore&amp;lt;1&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++20&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0514r4.pdf&#34; target=&#34;_blank&#34;&gt;P0514R4 Efficient concurrent waiting for C++20&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1135r6.html&#34; target=&#34;_blank&#34;&gt;P1135R6 The C++20 Synchronization Library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>counting_semaphore -- counting_semaphore : binary_semaphoreの宣言を追加</title>
      <link href="https://cpprefjp.github.io/reference/semaphore/counting_semaphore.html"/>
      <id>e99d09afcf956f447e0ed3608ffe76ee1a7c7666:reference/semaphore/counting_semaphore.md</id>
      <updated>2020-06-15T16:53:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/semaphore/counting_semaphore.md b/reference/semaphore/counting_semaphore.md
index a8002fc85..41978ea1b 100644
--- a/reference/semaphore/counting_semaphore.md
+++ b/reference/semaphore/counting_semaphore.md
@@ -7,7 +7,9 @@
 ```cpp
 namespace std {
   template&amp;lt;ptrdiff_t least_max_value = implementation-defined&amp;gt;
-    class counting_semaphore;
+  class counting_semaphore;
+
+  using binary_semaphore = counting_semaphore&amp;lt;1&amp;gt;;
 }
 ```
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>try_acquire_for -- counting_semaphore::try_acquire_(for|until) : コード中のタブをスペースに修正</title>
      <link href="https://cpprefjp.github.io/reference/semaphore/counting_semaphore/try_acquire_for.html"/>
      <id>59ecbc8c063c2d974f85f40f14afd755f628c2ed:reference/semaphore/counting_semaphore/try_acquire_for.md</id>
      <updated>2020-06-15T16:45:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/semaphore/counting_semaphore/try_acquire_for.md b/reference/semaphore/counting_semaphore/try_acquire_for.md
index 098eb900c..1bf0c43fe 100644
--- a/reference/semaphore/counting_semaphore/try_acquire_for.md
+++ b/reference/semaphore/counting_semaphore/try_acquire_for.md
@@ -55,7 +55,7 @@ int main()
       std::cout &amp;lt;&amp;lt; shared_data &amp;lt;&amp;lt; std::endl;
     } else {
       std::cout &amp;lt;&amp;lt; &amp;#34;(timed out)&amp;#34; &amp;lt;&amp;lt; std::endl;
-	}
+    }
   });
 
   // 共有データへ書込み、通知を行う
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>try_acquire_until -- counting_semaphore::try_acquire_(for|until) : コード中のタブをスペースに修正</title>
      <link href="https://cpprefjp.github.io/reference/semaphore/counting_semaphore/try_acquire_until.html"/>
      <id>59ecbc8c063c2d974f85f40f14afd755f628c2ed:reference/semaphore/counting_semaphore/try_acquire_until.md</id>
      <updated>2020-06-15T16:45:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/semaphore/counting_semaphore/try_acquire_until.md b/reference/semaphore/counting_semaphore/try_acquire_until.md
index 5094b65c8..2f5fa5fa1 100644
--- a/reference/semaphore/counting_semaphore/try_acquire_until.md
+++ b/reference/semaphore/counting_semaphore/try_acquire_until.md
@@ -57,7 +57,7 @@ int main()
       std::cout &amp;lt;&amp;lt; shared_data &amp;lt;&amp;lt; std::endl;
     } else {
       std::cout &amp;lt;&amp;lt; &amp;#34;(timed out)&amp;#34; &amp;lt;&amp;lt; std::endl;
-	}
+    }
   });
 
   // 共有データへ書込み、通知を行う
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
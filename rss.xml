<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2021-10-28T01:10:19.273609</updated>
  <id>30b101e1-1cec-4f9b-9871-881d37fd8261</id>

  
    <entry>
      <title>operator-&gt; -- Merge pull request #909 from kenichiice/fix-variable-name</title>
      <link href="https://cpprefjp.github.io/reference/iterator/common_iterator/op_arrow.html"/>
      <id>95de47c2806796863c64f8c2671c15c58d3b801f:reference/iterator/common_iterator/op_arrow.md</id>
      <updated>2021-10-28T10:05:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/common_iterator/op_arrow.md b/reference/iterator/common_iterator/op_arrow.md
index 01794f8bc..67ff48f3b 100644
--- a/reference/iterator/common_iterator/op_arrow.md
+++ b/reference/iterator/common_iterator/op_arrow.md
@@ -34,9 +34,9 @@ indirectly_readable&amp;lt;const I&amp;gt; &amp;amp;&amp;amp;
 
 ## 戻り値
 
-`I, S`の値のどちらかを[`variant&amp;lt;I, S&amp;gt;`](/reference/variant/variant.md)型のメンバ変数`_v`に保持しているとして、次のいずれか
+`I, S`の値のどちらかを[`variant&amp;lt;I, S&amp;gt;`](/reference/variant/variant.md)型のメンバ変数`v_`に保持しているとして、次のいずれか
 
-- `I`がポインタ型であり、`get&amp;lt;I&amp;gt;(_v).operator-&amp;gt;()`が呼び出し可能な場合 : `return get&amp;lt;I&amp;gt;(_v);`
+- `I`がポインタ型であり、`get&amp;lt;I&amp;gt;(v_).operator-&amp;gt;()`が呼び出し可能な場合 : `return get&amp;lt;I&amp;gt;(v_);`
 
 - [`iter_reference_t`](/reference/iterator/iter_reference_t.md)`&amp;lt;I&amp;gt;`が参照型の場合 : 以下と等価  
     ```cpp
@@ -45,7 +45,7 @@ indirectly_readable&amp;lt;const I&amp;gt; &amp;amp;&amp;amp;
     ```
     * addressof[link /reference/memory/addressof.md]
 
-- それ以外の場合 : `return proxy(*get&amp;lt;I&amp;gt;(_v));`  
+- それ以外の場合 : `return proxy(*get&amp;lt;I&amp;gt;(v_));`  
     `proxy`は次のように定義される説明専用のクラス。  
     ```cpp
     class proxy {
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>OGAWA KenIchi</name>
        <email>kenichi@ice.email.ne.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator= -- Merge pull request #909 from kenichiice/fix-variable-name</title>
      <link href="https://cpprefjp.github.io/reference/iterator/common_iterator/op_assign.html"/>
      <id>95de47c2806796863c64f8c2671c15c58d3b801f:reference/iterator/common_iterator/op_assign.md</id>
      <updated>2021-10-28T10:05:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/common_iterator/op_assign.md b/reference/iterator/common_iterator/op_assign.md
index 3b4f49d78..34a91aa65 100644
--- a/reference/iterator/common_iterator/op_assign.md
+++ b/reference/iterator/common_iterator/op_assign.md
@@ -24,9 +24,9 @@ common_iterator&amp;amp; operator=(const common_iterator&amp;lt;I2, S2&amp;gt;&amp;amp; x);
 
 ## 効果
 
-`I, S`の値のどちらかを[`variant&amp;lt;I, S&amp;gt;`](/reference/variant/variant.md)型のメンバ変数`_v`に保持しており、`i = x.v_.`[`index()`](/reference/variant/variant/index.md)として、次のどちらか
+`I, S`の値のどちらかを[`variant&amp;lt;I, S&amp;gt;`](/reference/variant/variant.md)型のメンバ変数`v_`に保持しており、`i = x.v_.`[`index()`](/reference/variant/variant/index.md)として、次のどちらか
 
-- `i == _v.index()`が`true`である場合 : `get&amp;lt;i&amp;gt;(v_) = get&amp;lt;i&amp;gt;(x.v_)`
+- `i == v_.index()`が`true`である場合 : `get&amp;lt;i&amp;gt;(v_) = get&amp;lt;i&amp;gt;(x.v_)`
 - それ以外の場合 : `v_.`[`emplace`](/reference/variant/variant/emplace.md)`&amp;lt;i&amp;gt;(get&amp;lt;i&amp;gt;(x.v_))`
 
 ## 戻り値
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>OGAWA KenIchi</name>
        <email>kenichi@ice.email.ne.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- Merge pull request #909 from kenichiice/fix-variable-name</title>
      <link href="https://cpprefjp.github.io/reference/iterator/common_iterator/op_constructor.html"/>
      <id>95de47c2806796863c64f8c2671c15c58d3b801f:reference/iterator/common_iterator/op_constructor.md</id>
      <updated>2021-10-28T10:05:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/common_iterator/op_constructor.md b/reference/iterator/common_iterator/op_constructor.md
index a557717e3..33b508012 100644
--- a/reference/iterator/common_iterator/op_constructor.md
+++ b/reference/iterator/common_iterator/op_constructor.md
@@ -30,12 +30,12 @@ constexpr common_iterator(const common_iterator&amp;lt;I2, S2&amp;gt;&amp;amp; x);  // (4)
 
 ## 効果
 
-`I, S`の値のどちらかを[`variant&amp;lt;I, S&amp;gt;`](/reference/variant/variant.md)型のメンバ変数`_v`に保持するとする。
+`I, S`の値のどちらかを[`variant&amp;lt;I, S&amp;gt;`](/reference/variant/variant.md)型のメンバ変数`v_`に保持するとする。
 
-- (1) : `_v`をデフォルト構築（`I`をデフォルト構築して初期化）する。
-- (2) : `v_{`[`in_place_type`](/reference/utility/in_place_type_t.md)`&amp;lt;I&amp;gt;, std::move(i)}`が行われたかのように`_v`を初期化する。
-- (3) : `v_{`[`in_place_type`](/reference/utility/in_place_type_t.md)`&amp;lt;S&amp;gt;, std::move(s)}`が行われたかのように`_v`を初期化する。
-- (4) : `i = x.v_.`[`index()`](/reference/variant/variant/index.md)として、`v_{`[`in_place_index`](/reference/utility/in_place_index_t.md)`&amp;lt;i&amp;gt;, get&amp;lt;i&amp;gt;(x.v_)}`が行われたかのように`_v`を初期化する。
+- (1) : `v_`をデフォルト構築（`I`をデフォルト構築して初期化）する。
+- (2) : `v_{`[`in_place_type`](/reference/utility/in_place_type_t.md)`&amp;lt;I&amp;gt;, std::move(i)}`が行われたかのように`v_`を初期化する。
+- (3) : `v_{`[`in_place_type`](/reference/utility/in_place_type_t.md)`&amp;lt;S&amp;gt;, std::move(s)}`が行われたかのように`v_`を初期化する。
+- (4) : `i = x.v_.`[`index()`](/reference/variant/variant/index.md)として、`v_{`[`in_place_index`](/reference/utility/in_place_index_t.md)`&amp;lt;i&amp;gt;, get&amp;lt;i&amp;gt;(x.v_)}`が行われたかのように`v_`を初期化する。
 
 ## 例
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>OGAWA KenIchi</name>
        <email>kenichi@ice.email.ne.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator* -- Merge pull request #909 from kenichiice/fix-variable-name</title>
      <link href="https://cpprefjp.github.io/reference/iterator/common_iterator/op_deref.html"/>
      <id>95de47c2806796863c64f8c2671c15c58d3b801f:reference/iterator/common_iterator/op_deref.md</id>
      <updated>2021-10-28T10:05:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/common_iterator/op_deref.md b/reference/iterator/common_iterator/op_deref.md
index 04a8fce90..0a52510bf 100644
--- a/reference/iterator/common_iterator/op_deref.md
+++ b/reference/iterator/common_iterator/op_deref.md
@@ -20,7 +20,7 @@ decltype(auto) operator*() const requires dereferenceable&amp;lt;const I&amp;gt;;
 
 ## 戻り値
 
-`I, S`の値のどちらかを[`variant&amp;lt;I, S&amp;gt;`](/reference/variant/variant.md)型のメンバ変数`_v`に保持しているとして、以下と等価。
+`I, S`の値のどちらかを[`variant&amp;lt;I, S&amp;gt;`](/reference/variant/variant.md)型のメンバ変数`v_`に保持しているとして、以下と等価。
 
 `return *get&amp;lt;I&amp;gt;(v_);`
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>OGAWA KenIchi</name>
        <email>kenichi@ice.email.ne.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator== -- Merge pull request #909 from kenichiice/fix-variable-name</title>
      <link href="https://cpprefjp.github.io/reference/iterator/common_iterator/op_equal.html"/>
      <id>95de47c2806796863c64f8c2671c15c58d3b801f:reference/iterator/common_iterator/op_equal.md</id>
      <updated>2021-10-28T10:05:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/common_iterator/op_equal.md b/reference/iterator/common_iterator/op_equal.md
index 690e45778..0a900c34b 100644
--- a/reference/iterator/common_iterator/op_equal.md
+++ b/reference/iterator/common_iterator/op_equal.md
@@ -33,7 +33,7 @@ namespace std {
 
 ## 戻り値
 
-`I, S`（`I2, S2`）の値のどちらかを[`variant&amp;lt;I, S&amp;gt;`](/reference/variant/variant.md)型のメンバ変数`_v`に保持しており、`i = x.v_.`[`index()`](/reference/variant/variant/index.md)、`j = y.v_.`[`index()`](/reference/variant/variant/index.md)として
+`I, S`（`I2, S2`）の値のどちらかを[`variant&amp;lt;I, S&amp;gt;`](/reference/variant/variant.md)型のメンバ変数`v_`に保持しており、`i = x.v_.`[`index()`](/reference/variant/variant/index.md)、`j = y.v_.`[`index()`](/reference/variant/variant/index.md)として
 
 - (1)
     - `i == j`の場合 : `true`
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>OGAWA KenIchi</name>
        <email>kenichi@ice.email.ne.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator++ -- Merge pull request #909 from kenichiice/fix-variable-name</title>
      <link href="https://cpprefjp.github.io/reference/iterator/common_iterator/op_increment.html"/>
      <id>95de47c2806796863c64f8c2671c15c58d3b801f:reference/iterator/common_iterator/op_increment.md</id>
      <updated>2021-10-28T10:05:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/common_iterator/op_increment.md b/reference/iterator/common_iterator/op_increment.md
index d118441a9..cc59edbef 100644
--- a/reference/iterator/common_iterator/op_increment.md
+++ b/reference/iterator/common_iterator/op_increment.md
@@ -19,7 +19,7 @@ decltype(auto) operator++(int);   // (2)
 
 ## 効果
 
-`I, S`の値のどちらかを[`variant&amp;lt;I, S&amp;gt;`](/reference/variant/variant.md)型のメンバ変数`_v`に保持しているとして
+`I, S`の値のどちらかを[`variant&amp;lt;I, S&amp;gt;`](/reference/variant/variant.md)型のメンバ変数`v_`に保持しているとして
 
 - (1) : 以下と等価  
     ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>OGAWA KenIchi</name>
        <email>kenichi@ice.email.ne.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator- -- Merge pull request #909 from kenichiice/fix-variable-name</title>
      <link href="https://cpprefjp.github.io/reference/iterator/common_iterator/op_minus.html"/>
      <id>95de47c2806796863c64f8c2671c15c58d3b801f:reference/iterator/common_iterator/op_minus.md</id>
      <updated>2021-10-28T10:05:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/common_iterator/op_minus.md b/reference/iterator/common_iterator/op_minus.md
index 2a97b49bd..53073a1fb 100644
--- a/reference/iterator/common_iterator/op_minus.md
+++ b/reference/iterator/common_iterator/op_minus.md
@@ -31,7 +31,7 @@ namespace std {
 
 ## 戻り値
 
-`I, S`（`I2, S2`）の値のどちらかを[`variant&amp;lt;I, S&amp;gt;`](/reference/variant/variant.md)型のメンバ変数`_v`に保持しており、`i = x.v_.`[`index()`](/reference/variant/variant/index.md)、`j = y.v_.`[`index()`](/reference/variant/variant/index.md)として、次のどちらか。
+`I, S`（`I2, S2`）の値のどちらかを[`variant&amp;lt;I, S&amp;gt;`](/reference/variant/variant.md)型のメンバ変数`v_`に保持しており、`i = x.v_.`[`index()`](/reference/variant/variant/index.md)、`j = y.v_.`[`index()`](/reference/variant/variant/index.md)として、次のどちらか。
 
 - `i, j`がどちらも`1`の場合 : `0`
 - それ以外の場合 : `get&amp;lt;i&amp;gt;(x.v_) - get&amp;lt;j&amp;gt;(y.v_)`
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>OGAWA KenIchi</name>
        <email>kenichi@ice.email.ne.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>future_errc -- Merge pull request #911 from suomesta/patch-1</title>
      <link href="https://cpprefjp.github.io/reference/future/future_errc.html"/>
      <id>c7206466a316701734302d71c76104adfe8b3958:reference/future/future_errc.md</id>
      <updated>2021-10-27T21:06:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/future/future_errc.md b/reference/future/future_errc.md
index a0bc54ded..5c885720e 100644
--- a/reference/future/future_errc.md
+++ b/reference/future/future_errc.md
@@ -29,7 +29,7 @@ future操作に関するエラー値。
 
 | 列挙値 | 説明 | 対応バージョン |
 |-----------------------------|----------------------------|-------|
-| `broken_primise`            | 共有状態の準備ができていない | C++11 |
+| `broken_promise`            | 共有状態の準備ができていない | C++11 |
 | `future_already_retrieved`  | すでに[`promise`](promise.md)オブジェクトから[`future`](future.md)オブジェクトを取り出している | C++11 |
 | `promise_already_satisfied` | [`promise`](promise.md)オブジェクトに、すでに値もしくは例外オブジェクトが設定されている | C++11 |
 | `no_state`                  | [`promise`](promise.md)オブジェクトが共有状態を持っていない | C++11 |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>future_errc -- fix: fix typo of enum name</title>
      <link href="https://cpprefjp.github.io/reference/future/future_errc.html"/>
      <id>9525d12e57ad82d45f77f3c6b7ee3f54a4ca9715:reference/future/future_errc.md</id>
      <updated>2021-10-27T20:39:10+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/future/future_errc.md b/reference/future/future_errc.md
index a0bc54ded..5c885720e 100644
--- a/reference/future/future_errc.md
+++ b/reference/future/future_errc.md
@@ -29,7 +29,7 @@ future操作に関するエラー値。
 
 | 列挙値 | 説明 | 対応バージョン |
 |-----------------------------|----------------------------|-------|
-| `broken_primise`            | 共有状態の準備ができていない | C++11 |
+| `broken_promise`            | 共有状態の準備ができていない | C++11 |
 | `future_already_retrieved`  | すでに[`promise`](promise.md)オブジェクトから[`future`](future.md)オブジェクトを取り出している | C++11 |
 | `promise_already_satisfied` | [`promise`](promise.md)オブジェクトに、すでに値もしくは例外オブジェクトが設定されている | C++11 |
 | `no_state`                  | [`promise`](promise.md)オブジェクトが共有状態を持っていない | C++11 |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator-&gt; -- common_iterator: _vをv_に修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/common_iterator/op_arrow.html"/>
      <id>1d992afb1d12aca28fa2f1db9fd2971f6610534a:reference/iterator/common_iterator/op_arrow.md</id>
      <updated>2021-10-26T11:16:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/common_iterator/op_arrow.md b/reference/iterator/common_iterator/op_arrow.md
index 01794f8bc..67ff48f3b 100644
--- a/reference/iterator/common_iterator/op_arrow.md
+++ b/reference/iterator/common_iterator/op_arrow.md
@@ -34,9 +34,9 @@ indirectly_readable&amp;lt;const I&amp;gt; &amp;amp;&amp;amp;
 
 ## 戻り値
 
-`I, S`の値のどちらかを[`variant&amp;lt;I, S&amp;gt;`](/reference/variant/variant.md)型のメンバ変数`_v`に保持しているとして、次のいずれか
+`I, S`の値のどちらかを[`variant&amp;lt;I, S&amp;gt;`](/reference/variant/variant.md)型のメンバ変数`v_`に保持しているとして、次のいずれか
 
-- `I`がポインタ型であり、`get&amp;lt;I&amp;gt;(_v).operator-&amp;gt;()`が呼び出し可能な場合 : `return get&amp;lt;I&amp;gt;(_v);`
+- `I`がポインタ型であり、`get&amp;lt;I&amp;gt;(v_).operator-&amp;gt;()`が呼び出し可能な場合 : `return get&amp;lt;I&amp;gt;(v_);`
 
 - [`iter_reference_t`](/reference/iterator/iter_reference_t.md)`&amp;lt;I&amp;gt;`が参照型の場合 : 以下と等価  
     ```cpp
@@ -45,7 +45,7 @@ indirectly_readable&amp;lt;const I&amp;gt; &amp;amp;&amp;amp;
     ```
     * addressof[link /reference/memory/addressof.md]
 
-- それ以外の場合 : `return proxy(*get&amp;lt;I&amp;gt;(_v));`  
+- それ以外の場合 : `return proxy(*get&amp;lt;I&amp;gt;(v_));`  
     `proxy`は次のように定義される説明専用のクラス。  
     ```cpp
     class proxy {
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>OGAWA KenIchi</name>
        <email>kenichi@ice.email.ne.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator= -- common_iterator: _vをv_に修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/common_iterator/op_assign.html"/>
      <id>1d992afb1d12aca28fa2f1db9fd2971f6610534a:reference/iterator/common_iterator/op_assign.md</id>
      <updated>2021-10-26T11:16:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/common_iterator/op_assign.md b/reference/iterator/common_iterator/op_assign.md
index 3b4f49d78..34a91aa65 100644
--- a/reference/iterator/common_iterator/op_assign.md
+++ b/reference/iterator/common_iterator/op_assign.md
@@ -24,9 +24,9 @@ common_iterator&amp;amp; operator=(const common_iterator&amp;lt;I2, S2&amp;gt;&amp;amp; x);
 
 ## 効果
 
-`I, S`の値のどちらかを[`variant&amp;lt;I, S&amp;gt;`](/reference/variant/variant.md)型のメンバ変数`_v`に保持しており、`i = x.v_.`[`index()`](/reference/variant/variant/index.md)として、次のどちらか
+`I, S`の値のどちらかを[`variant&amp;lt;I, S&amp;gt;`](/reference/variant/variant.md)型のメンバ変数`v_`に保持しており、`i = x.v_.`[`index()`](/reference/variant/variant/index.md)として、次のどちらか
 
-- `i == _v.index()`が`true`である場合 : `get&amp;lt;i&amp;gt;(v_) = get&amp;lt;i&amp;gt;(x.v_)`
+- `i == v_.index()`が`true`である場合 : `get&amp;lt;i&amp;gt;(v_) = get&amp;lt;i&amp;gt;(x.v_)`
 - それ以外の場合 : `v_.`[`emplace`](/reference/variant/variant/emplace.md)`&amp;lt;i&amp;gt;(get&amp;lt;i&amp;gt;(x.v_))`
 
 ## 戻り値
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>OGAWA KenIchi</name>
        <email>kenichi@ice.email.ne.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- common_iterator: _vをv_に修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/common_iterator/op_constructor.html"/>
      <id>1d992afb1d12aca28fa2f1db9fd2971f6610534a:reference/iterator/common_iterator/op_constructor.md</id>
      <updated>2021-10-26T11:16:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/common_iterator/op_constructor.md b/reference/iterator/common_iterator/op_constructor.md
index a557717e3..33b508012 100644
--- a/reference/iterator/common_iterator/op_constructor.md
+++ b/reference/iterator/common_iterator/op_constructor.md
@@ -30,12 +30,12 @@ constexpr common_iterator(const common_iterator&amp;lt;I2, S2&amp;gt;&amp;amp; x);  // (4)
 
 ## 効果
 
-`I, S`の値のどちらかを[`variant&amp;lt;I, S&amp;gt;`](/reference/variant/variant.md)型のメンバ変数`_v`に保持するとする。
+`I, S`の値のどちらかを[`variant&amp;lt;I, S&amp;gt;`](/reference/variant/variant.md)型のメンバ変数`v_`に保持するとする。
 
-- (1) : `_v`をデフォルト構築（`I`をデフォルト構築して初期化）する。
-- (2) : `v_{`[`in_place_type`](/reference/utility/in_place_type_t.md)`&amp;lt;I&amp;gt;, std::move(i)}`が行われたかのように`_v`を初期化する。
-- (3) : `v_{`[`in_place_type`](/reference/utility/in_place_type_t.md)`&amp;lt;S&amp;gt;, std::move(s)}`が行われたかのように`_v`を初期化する。
-- (4) : `i = x.v_.`[`index()`](/reference/variant/variant/index.md)として、`v_{`[`in_place_index`](/reference/utility/in_place_index_t.md)`&amp;lt;i&amp;gt;, get&amp;lt;i&amp;gt;(x.v_)}`が行われたかのように`_v`を初期化する。
+- (1) : `v_`をデフォルト構築（`I`をデフォルト構築して初期化）する。
+- (2) : `v_{`[`in_place_type`](/reference/utility/in_place_type_t.md)`&amp;lt;I&amp;gt;, std::move(i)}`が行われたかのように`v_`を初期化する。
+- (3) : `v_{`[`in_place_type`](/reference/utility/in_place_type_t.md)`&amp;lt;S&amp;gt;, std::move(s)}`が行われたかのように`v_`を初期化する。
+- (4) : `i = x.v_.`[`index()`](/reference/variant/variant/index.md)として、`v_{`[`in_place_index`](/reference/utility/in_place_index_t.md)`&amp;lt;i&amp;gt;, get&amp;lt;i&amp;gt;(x.v_)}`が行われたかのように`v_`を初期化する。
 
 ## 例
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>OGAWA KenIchi</name>
        <email>kenichi@ice.email.ne.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator* -- common_iterator: _vをv_に修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/common_iterator/op_deref.html"/>
      <id>1d992afb1d12aca28fa2f1db9fd2971f6610534a:reference/iterator/common_iterator/op_deref.md</id>
      <updated>2021-10-26T11:16:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/common_iterator/op_deref.md b/reference/iterator/common_iterator/op_deref.md
index 04a8fce90..0a52510bf 100644
--- a/reference/iterator/common_iterator/op_deref.md
+++ b/reference/iterator/common_iterator/op_deref.md
@@ -20,7 +20,7 @@ decltype(auto) operator*() const requires dereferenceable&amp;lt;const I&amp;gt;;
 
 ## 戻り値
 
-`I, S`の値のどちらかを[`variant&amp;lt;I, S&amp;gt;`](/reference/variant/variant.md)型のメンバ変数`_v`に保持しているとして、以下と等価。
+`I, S`の値のどちらかを[`variant&amp;lt;I, S&amp;gt;`](/reference/variant/variant.md)型のメンバ変数`v_`に保持しているとして、以下と等価。
 
 `return *get&amp;lt;I&amp;gt;(v_);`
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>OGAWA KenIchi</name>
        <email>kenichi@ice.email.ne.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator== -- common_iterator: _vをv_に修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/common_iterator/op_equal.html"/>
      <id>1d992afb1d12aca28fa2f1db9fd2971f6610534a:reference/iterator/common_iterator/op_equal.md</id>
      <updated>2021-10-26T11:16:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/common_iterator/op_equal.md b/reference/iterator/common_iterator/op_equal.md
index 690e45778..0a900c34b 100644
--- a/reference/iterator/common_iterator/op_equal.md
+++ b/reference/iterator/common_iterator/op_equal.md
@@ -33,7 +33,7 @@ namespace std {
 
 ## 戻り値
 
-`I, S`（`I2, S2`）の値のどちらかを[`variant&amp;lt;I, S&amp;gt;`](/reference/variant/variant.md)型のメンバ変数`_v`に保持しており、`i = x.v_.`[`index()`](/reference/variant/variant/index.md)、`j = y.v_.`[`index()`](/reference/variant/variant/index.md)として
+`I, S`（`I2, S2`）の値のどちらかを[`variant&amp;lt;I, S&amp;gt;`](/reference/variant/variant.md)型のメンバ変数`v_`に保持しており、`i = x.v_.`[`index()`](/reference/variant/variant/index.md)、`j = y.v_.`[`index()`](/reference/variant/variant/index.md)として
 
 - (1)
     - `i == j`の場合 : `true`
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>OGAWA KenIchi</name>
        <email>kenichi@ice.email.ne.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator++ -- common_iterator: _vをv_に修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/common_iterator/op_increment.html"/>
      <id>1d992afb1d12aca28fa2f1db9fd2971f6610534a:reference/iterator/common_iterator/op_increment.md</id>
      <updated>2021-10-26T11:16:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/common_iterator/op_increment.md b/reference/iterator/common_iterator/op_increment.md
index d118441a9..cc59edbef 100644
--- a/reference/iterator/common_iterator/op_increment.md
+++ b/reference/iterator/common_iterator/op_increment.md
@@ -19,7 +19,7 @@ decltype(auto) operator++(int);   // (2)
 
 ## 効果
 
-`I, S`の値のどちらかを[`variant&amp;lt;I, S&amp;gt;`](/reference/variant/variant.md)型のメンバ変数`_v`に保持しているとして
+`I, S`の値のどちらかを[`variant&amp;lt;I, S&amp;gt;`](/reference/variant/variant.md)型のメンバ変数`v_`に保持しているとして
 
 - (1) : 以下と等価  
     ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>OGAWA KenIchi</name>
        <email>kenichi@ice.email.ne.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator- -- common_iterator: _vをv_に修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/common_iterator/op_minus.html"/>
      <id>1d992afb1d12aca28fa2f1db9fd2971f6610534a:reference/iterator/common_iterator/op_minus.md</id>
      <updated>2021-10-26T11:16:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/common_iterator/op_minus.md b/reference/iterator/common_iterator/op_minus.md
index 2a97b49bd..53073a1fb 100644
--- a/reference/iterator/common_iterator/op_minus.md
+++ b/reference/iterator/common_iterator/op_minus.md
@@ -31,7 +31,7 @@ namespace std {
 
 ## 戻り値
 
-`I, S`（`I2, S2`）の値のどちらかを[`variant&amp;lt;I, S&amp;gt;`](/reference/variant/variant.md)型のメンバ変数`_v`に保持しており、`i = x.v_.`[`index()`](/reference/variant/variant/index.md)、`j = y.v_.`[`index()`](/reference/variant/variant/index.md)として、次のどちらか。
+`I, S`（`I2, S2`）の値のどちらかを[`variant&amp;lt;I, S&amp;gt;`](/reference/variant/variant.md)型のメンバ変数`v_`に保持しており、`i = x.v_.`[`index()`](/reference/variant/variant/index.md)、`j = y.v_.`[`index()`](/reference/variant/variant/index.md)として、次のどちらか。
 
 - `i, j`がどちらも`1`の場合 : `0`
 - それ以外の場合 : `get&amp;lt;i&amp;gt;(x.v_) - get&amp;lt;j&amp;gt;(y.v_)`
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>OGAWA KenIchi</name>
        <email>kenichi@ice.email.ne.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- 正しくマークアップされていない所があったので修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/hh_mm_ss/op_constructor.html"/>
      <id>387905bdb30c2fb998d8e98f93136a5e59feb995:reference/chrono/hh_mm_ss/op_constructor.md</id>
      <updated>2021-10-26T10:37:48+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/hh_mm_ss/op_constructor.md b/reference/chrono/hh_mm_ss/op_constructor.md
index 807a2ebcc..b99cdfbcd 100644
--- a/reference/chrono/hh_mm_ss/op_constructor.md
+++ b/reference/chrono/hh_mm_ss/op_constructor.md
@@ -30,7 +30,7 @@ hh_mm_ss(hh_mm_ss&amp;amp;&amp;amp;);                    // (4) C++20
     - [`duration_cast`](/reference/chrono/duration_cast.md)`&amp;lt;`[`chrono::hours`](/reference/chrono/duration_aliases.md)`&amp;gt;(`[`abs`](/reference/chrono/duration/abs.md)`(d))`で時を構築する
     - [`duration_cast`](/reference/chrono/duration_cast.md)`&amp;lt;`[`chrono::minutes`](/reference/chrono/duration_aliases.md)`&amp;gt;(`[`abs`](/reference/chrono/duration/abs.md)`(d) -` [`hours()`](hours.md)`)`で分を構築する
     - [`duration_cast`](/reference/chrono/duration_cast.md)`&amp;lt;`[`chrono::seconds`](/reference/chrono/duration_aliases.md)`&amp;gt;(`[`abs`](/reference/chrono/duration/abs.md)`(d) -` [`hours()`](hours.md) `-` [`minutes()`](minutes.md)`)`で秒を構築する
-    - [`treat_as_floating_point_v`](/reference/chrono/treat_as_floating_point.md)`&amp;lt;precision::rep&amp;gt;`が`true`である場合、秒未満は`[`abs`](/reference/chrono/duration/abs.md)`(d) -` [`hours()`](hours.md) `-` [`minutes()`](minutes.md)` `-` [`seconds()`](seconds.md)で構築する。そうでなければ、[`duration_cast`](/reference/chrono/duration_cast.md)`&amp;lt;precision&amp;gt;(`[`abs`](/reference/chrono/duration/abs.md)`(d) -` [`hours()`](hours.md) `-` [`minutes()`](minutes.md) `-` [`seconds()`](seconds.md)`)`で秒未満を構築する
+    - [`treat_as_floating_point_v`](/reference/chrono/treat_as_floating_point.md)`&amp;lt;precision::rep&amp;gt;`が`true`である場合、秒未満は[`abs`](/reference/chrono/duration/abs.md)`(d) -` [`hours()`](hours.md) `-` [`minutes()`](minutes.md) `-` [`seconds()`](seconds.md)で構築する。そうでなければ、[`duration_cast`](/reference/chrono/duration_cast.md)`&amp;lt;precision&amp;gt;(`[`abs`](/reference/chrono/duration/abs.md)`(d) -` [`hours()`](hours.md) `-` [`minutes()`](minutes.md) `-` [`seconds()`](seconds.md)`)`で秒未満を構築する
 
 
 ## 事後条件
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>OGAWA KenIchi</name>
        <email>kenichi@ice.email.ne.jp</email>
      </author>
    </entry>
  
</feed>
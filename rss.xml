<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="http://cpprefjp.github.io" />
  <updated>2015-10-18T00:06:05.974650</updated>
  <id>52e7bea7-5dce-498a-ae4a-4f9db9b20278</id>

  
    <entry>
      <title>SI接頭辞 -- fix #270 (cont.)</title>
      <link href="http://cpprefjp.github.io/reference/ratio/si_prefix.html"/>
      <id>10343ca2c466f6ec8b435aa10d871d828d448c74:reference/ratio/si_prefix.md</id>
      <updated>2015-10-17 10:20:23 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;typedef&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;ratio&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;SI接頭辞&lt;span class=&#34;cpp cpp11&#34; title=&#34;C++11で追加&#34;&gt;(C++11)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;1&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;1000000000000000000000000&amp;gt;&lt;/span&gt; yocto;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;1&lt;/span&gt;,    &lt;span style=&#34;color: #666666&#34;&gt;1000000000000000000000&amp;gt;&lt;/span&gt; zepto;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;1&lt;/span&gt;,       &lt;span style=&#34;color: #666666&#34;&gt;1000000000000000000&amp;gt;&lt;/span&gt; atto;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;1&lt;/span&gt;,          &lt;span style=&#34;color: #666666&#34;&gt;1000000000000000&amp;gt;&lt;/span&gt; femto;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;1&lt;/span&gt;,             &lt;span style=&#34;color: #666666&#34;&gt;1000000000000&amp;gt;&lt;/span&gt; pico;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;1&lt;/span&gt;,                &lt;span style=&#34;color: #666666&#34;&gt;1000000000&amp;gt;&lt;/span&gt; nano;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;1&lt;/span&gt;,                   &lt;span style=&#34;color: #666666&#34;&gt;1000000&amp;gt;&lt;/span&gt; micro;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;1&lt;/span&gt;,                      &lt;span style=&#34;color: #666666&#34;&gt;1000&amp;gt;&lt;/span&gt; milli;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;1&lt;/span&gt;,                       &lt;span style=&#34;color: #666666&#34;&gt;100&amp;gt;&lt;/span&gt; centi;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;1&lt;/span&gt;,                        &lt;span style=&#34;color: #666666&#34;&gt;10&amp;gt;&lt;/span&gt; deci;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;                       &lt;span style=&#34;color: #666666&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;1&amp;gt;&lt;/span&gt; deca;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;                      &lt;span style=&#34;color: #666666&#34;&gt;100&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;1&amp;gt;&lt;/span&gt; hecto;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;                     &lt;span style=&#34;color: #666666&#34;&gt;1000&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;1&amp;gt;&lt;/span&gt; kilo;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;                  &lt;span style=&#34;color: #666666&#34;&gt;1000000&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;1&amp;gt;&lt;/span&gt; mega;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;               &lt;span style=&#34;color: #666666&#34;&gt;1000000000&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;1&amp;gt;&lt;/span&gt; giga;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;            &lt;span style=&#34;color: #666666&#34;&gt;1000000000000&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;1&amp;gt;&lt;/span&gt; tera;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;         &lt;span style=&#34;color: #666666&#34;&gt;1000000000000000&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;1&amp;gt;&lt;/span&gt; peta;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;      &lt;span style=&#34;color: #666666&#34;&gt;1000000000000000000&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;1&amp;gt;&lt;/span&gt; exa;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #666666&#34;&gt;1000000000000000000000&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;1&amp;gt;&lt;/span&gt; zetta;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;1000000000000000000000000&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;1&amp;gt;&lt;/span&gt; yotta;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;これらは、コンパイル時有理数である&lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;&lt;code&gt;ratio&lt;/code&gt;&lt;/a&gt;を利用した、SI単位(The International System of Units : 国際単位系)を表す型である。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;型&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;yocto&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ヨクト&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;zepto&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ゼプト&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;atto&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;アト&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;femto&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;フェムト&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pico&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ピコ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;nano&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ナノ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;micro&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;マイクロ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;milli&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ミリ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;centi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;センチ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deci&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;デシ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deca&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;デカ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hecto&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ヘクト&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;kilo&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;キロ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mega&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;メガ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;giga&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ギガ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;tera&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;テラ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;peta&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ペタ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;exa&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;エクサ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;zetta&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ゼタ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;yotta&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ヨタ&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;備考&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;yocto&lt;/code&gt;、&lt;code&gt;zepto&lt;/code&gt;、&lt;code&gt;zetta&lt;/code&gt;、&lt;code&gt;yotta&lt;/code&gt;は、&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/intmax_t.html&#34;&gt;&lt;code&gt;intmax_t&lt;/code&gt;&lt;/a&gt;型で値を表現できる場合のみ定義され、表現できない場合は定義されない。&lt;/p&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;ratio&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;chrono&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// ミリメートル、センチメートル、メートル&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;using&lt;/span&gt; milli_meter &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;chrono&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;duration&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;float&lt;/span&gt;, std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;milli&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;using&lt;/span&gt; centi_meter &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;chrono&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;duration&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;float&lt;/span&gt;, std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;centi&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;using&lt;/span&gt; meter       &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;chrono&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;duration&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;float&lt;/span&gt;, std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;ratio&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;1&amp;gt;&amp;gt;&lt;/span&gt;;

&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 三角形の面積&lt;/span&gt;
&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// base : 底辺&lt;/span&gt;
&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// height : 高さ&lt;/span&gt;
centi_meter &lt;span style=&#34;color: #0000FF&#34;&gt;triangle_area&lt;/span&gt;(centi_meter base, centi_meter height)
{
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;return&lt;/span&gt; base &lt;span style=&#34;color: #666666&#34;&gt;*&lt;/span&gt; height.count() &lt;span style=&#34;color: #666666&#34;&gt;/&lt;/span&gt; centi_meter&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;rep(&lt;span style=&#34;color: #666666&#34;&gt;2.0&lt;/span&gt;);
}

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  milli_meter base(&lt;span style=&#34;color: #666666&#34;&gt;3000&lt;/span&gt;); &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 3000mm -&amp;gt; 3cm&lt;/span&gt;
  meter       height(&lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;);  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 1m -&amp;gt; 100cm&lt;/span&gt;

  centi_meter area &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; triangle_area(base, height);

  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; area.count() &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;15000
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang, C++11 mode&lt;/a&gt;: 3.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++11 mode&lt;/a&gt;: 4.4.7&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: ??&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>SI単位 -- fix #270</title>
      <link href="http://cpprefjp.github.io/reference/ratio/si_prefix.html"/>
      <id>fc8ed9f525d15a8f47b45006519322a1265af201:reference/ratio/si_prefix.md</id>
      <updated>2015-10-17 10:18:54 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;typedef&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;ratio&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;SI単位&lt;span class=&#34;cpp cpp11&#34; title=&#34;C++11で追加&#34;&gt;(C++11)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;1&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;1000000000000000000000000&amp;gt;&lt;/span&gt; yocto;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;1&lt;/span&gt;,    &lt;span style=&#34;color: #666666&#34;&gt;1000000000000000000000&amp;gt;&lt;/span&gt; zepto;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;1&lt;/span&gt;,       &lt;span style=&#34;color: #666666&#34;&gt;1000000000000000000&amp;gt;&lt;/span&gt; atto;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;1&lt;/span&gt;,          &lt;span style=&#34;color: #666666&#34;&gt;1000000000000000&amp;gt;&lt;/span&gt; femto;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;1&lt;/span&gt;,             &lt;span style=&#34;color: #666666&#34;&gt;1000000000000&amp;gt;&lt;/span&gt; pico;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;1&lt;/span&gt;,                &lt;span style=&#34;color: #666666&#34;&gt;1000000000&amp;gt;&lt;/span&gt; nano;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;1&lt;/span&gt;,                   &lt;span style=&#34;color: #666666&#34;&gt;1000000&amp;gt;&lt;/span&gt; micro;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;1&lt;/span&gt;,                      &lt;span style=&#34;color: #666666&#34;&gt;1000&amp;gt;&lt;/span&gt; milli;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;1&lt;/span&gt;,                       &lt;span style=&#34;color: #666666&#34;&gt;100&amp;gt;&lt;/span&gt; centi;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;1&lt;/span&gt;,                        &lt;span style=&#34;color: #666666&#34;&gt;10&amp;gt;&lt;/span&gt; deci;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;                       &lt;span style=&#34;color: #666666&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;1&amp;gt;&lt;/span&gt; deca;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;                      &lt;span style=&#34;color: #666666&#34;&gt;100&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;1&amp;gt;&lt;/span&gt; hecto;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;                     &lt;span style=&#34;color: #666666&#34;&gt;1000&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;1&amp;gt;&lt;/span&gt; kilo;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;                  &lt;span style=&#34;color: #666666&#34;&gt;1000000&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;1&amp;gt;&lt;/span&gt; mega;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;               &lt;span style=&#34;color: #666666&#34;&gt;1000000000&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;1&amp;gt;&lt;/span&gt; giga;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;            &lt;span style=&#34;color: #666666&#34;&gt;1000000000000&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;1&amp;gt;&lt;/span&gt; tera;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;         &lt;span style=&#34;color: #666666&#34;&gt;1000000000000000&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;1&amp;gt;&lt;/span&gt; peta;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;      &lt;span style=&#34;color: #666666&#34;&gt;1000000000000000000&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;1&amp;gt;&lt;/span&gt; exa;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #666666&#34;&gt;1000000000000000000000&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;1&amp;gt;&lt;/span&gt; zetta;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;ratio&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;1000000000000000000000000&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;1&amp;gt;&lt;/span&gt; yotta;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;これらは、コンパイル時有理数である&lt;a href=&#34;http://cpprefjp.github.io/reference/ratio/ratio.html&#34;&gt;&lt;code&gt;ratio&lt;/code&gt;&lt;/a&gt;を利用した、SI単位(The International System of Units : 国際単位系)を表す型である。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;型&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;yocto&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ヨクト&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;zepto&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ゼプト&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;atto&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;アト&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;femto&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;フェムト&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pico&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ピコ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;nano&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ナノ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;micro&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;マイクロ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;milli&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ミリ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;centi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;センチ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deci&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;デシ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deca&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;デカ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hecto&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ヘクト&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;kilo&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;キロ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mega&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;メガ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;giga&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ギガ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;tera&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;テラ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;peta&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ペタ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;exa&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;エクサ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;zetta&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ゼタ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;yotta&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ヨタ&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;備考&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;yocto&lt;/code&gt;、&lt;code&gt;zepto&lt;/code&gt;、&lt;code&gt;zetta&lt;/code&gt;、&lt;code&gt;yotta&lt;/code&gt;は、&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/intmax_t.html&#34;&gt;&lt;code&gt;intmax_t&lt;/code&gt;&lt;/a&gt;型で値を表現できる場合のみ定義され、表現できない場合は定義されない。&lt;/p&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;ratio&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;chrono&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// ミリメートル、センチメートル、メートル&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;using&lt;/span&gt; milli_meter &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;chrono&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;duration&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;float&lt;/span&gt;, std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;milli&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;using&lt;/span&gt; centi_meter &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;chrono&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;duration&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;float&lt;/span&gt;, std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;centi&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;using&lt;/span&gt; meter       &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;chrono&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;duration&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;float&lt;/span&gt;, std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;ratio&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;1&amp;gt;&amp;gt;&lt;/span&gt;;

&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 三角形の面積&lt;/span&gt;
&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// base : 底辺&lt;/span&gt;
&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// height : 高さ&lt;/span&gt;
centi_meter &lt;span style=&#34;color: #0000FF&#34;&gt;triangle_area&lt;/span&gt;(centi_meter base, centi_meter height)
{
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;return&lt;/span&gt; base &lt;span style=&#34;color: #666666&#34;&gt;*&lt;/span&gt; height.count() &lt;span style=&#34;color: #666666&#34;&gt;/&lt;/span&gt; centi_meter&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;rep(&lt;span style=&#34;color: #666666&#34;&gt;2.0&lt;/span&gt;);
}

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  milli_meter base(&lt;span style=&#34;color: #666666&#34;&gt;3000&lt;/span&gt;); &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 3000mm -&amp;gt; 3cm&lt;/span&gt;
  meter       height(&lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;);  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 1m -&amp;gt; 100cm&lt;/span&gt;

  centi_meter area &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; triangle_area(base, height);

  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; area.count() &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;15000
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang, C++11 mode&lt;/a&gt;: 3.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++11 mode&lt;/a&gt;: 4.4.7&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: ??&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>si_unit.md -- fix #270</title>
      <link href="http://cpprefjp.github.io/reference/ratio/si_unit.html"/>
      <id>fc8ed9f525d15a8f47b45006519322a1265af201:reference/ratio/si_unit.md</id>
      <updated>2015-10-17 10:18:54 +0900</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ratio/si_unit.md b/reference/ratio/si_unit.md
deleted file mode 100644
index 48e5e11..0000000
--- a/reference/ratio/si_unit.md
+++ /dev/null
@@ -1,108 +0,0 @@
-#SI単位
-* ratio[meta header]
-* std[meta namespace]
-* typedef[meta id-type]
-* cpp11[meta cpp]
-
-```cpp
-namespace std {
-  typedef ratio&amp;lt;1, 1000000000000000000000000&amp;gt; yocto;
-  typedef ratio&amp;lt;1,    1000000000000000000000&amp;gt; zepto;
-  typedef ratio&amp;lt;1,       1000000000000000000&amp;gt; atto;
-  typedef ratio&amp;lt;1,          1000000000000000&amp;gt; femto;
-  typedef ratio&amp;lt;1,             1000000000000&amp;gt; pico;
-  typedef ratio&amp;lt;1,                1000000000&amp;gt; nano;
-  typedef ratio&amp;lt;1,                   1000000&amp;gt; micro;
-  typedef ratio&amp;lt;1,                      1000&amp;gt; milli;
-  typedef ratio&amp;lt;1,                       100&amp;gt; centi;
-  typedef ratio&amp;lt;1,                        10&amp;gt; deci;
-  typedef ratio&amp;lt;                       10, 1&amp;gt; deca;
-  typedef ratio&amp;lt;                      100, 1&amp;gt; hecto;
-  typedef ratio&amp;lt;                     1000, 1&amp;gt; kilo;
-  typedef ratio&amp;lt;                  1000000, 1&amp;gt; mega;
-  typedef ratio&amp;lt;               1000000000, 1&amp;gt; giga;
-  typedef ratio&amp;lt;            1000000000000, 1&amp;gt; tera;
-  typedef ratio&amp;lt;         1000000000000000, 1&amp;gt; peta;
-  typedef ratio&amp;lt;      1000000000000000000, 1&amp;gt; exa;
-  typedef ratio&amp;lt;   1000000000000000000000, 1&amp;gt; zetta;
-  typedef ratio&amp;lt;1000000000000000000000000, 1&amp;gt; yotta;
-}
-```
-* ratio[link ./ratio.md]
-
-##概要
-これらは、コンパイル時有理数である[`ratio`](./ratio.md)を利用した、SI単位(The International System of Units : 国際単位系)を表す型である。
-
-| 型      | 説明     |
-|---------|----------|
-| `yocto` | ヨクト   |
-| `zepto` | ゼプト   |
-| `atto`  | アト     |
-| `femto` | フェムト |
-| `pico`  | ピコ     |
-| `nano`  | ナノ     |
-| `micro` | マイクロ |
-| `milli` | ミリ     |
-| `centi` | センチ   |
-| `deci`  | デシ     |
-| `deca`  | デカ     |
-| `hecto` | ヘクト   |
-| `kilo`  | キロ     |
-| `mega`  | メガ     |
-| `giga`  | ギガ     |
-| `tera`  | テラ     |
-| `peta`  | ペタ     |
-| `exa`   | エクサ   |
-| `zetta` | ゼタ     |
-| `yotta` | ヨタ     |
-
-
-##備考
-`yocto`、`zepto`、`zetta`、`yotta`は、[`intmax_t`](/reference/cstdint/intmax_t.md)型で値を表現できる場合のみ定義され、表現できない場合は定義されない。
-
-
-##例
-```cpp
-#include &amp;lt;iostream&amp;gt;
-#include &amp;lt;ratio&amp;gt;
-#include &amp;lt;chrono&amp;gt;
-
-// ミリメートル、センチメートル、メートル
-using milli_meter = std::chrono::duration&amp;lt;float, std::milli&amp;gt;;
-using centi_meter = std::chrono::duration&amp;lt;float, std::centi&amp;gt;;
-using meter       = std::chrono::duration&amp;lt;float, std::ratio&amp;lt;1&amp;gt;&amp;gt;;
-
-// 三角形の面積
-// base : 底辺
-// height : 高さ
-centi_meter triangle_area(centi_meter base, centi_meter height)
-{
-  return base * height.count() / centi_meter::rep(2.0);
-}
-
-int main()
-{
-  milli_meter base(3000); // 3000mm -&amp;gt; 3cm
-  meter       height(1);  // 1m -&amp;gt; 100cm
-
-  centi_meter area = triangle_area(base, height);
-
-  std::cout &amp;lt;&amp;lt; area.count() &amp;lt;&amp;lt; std::endl;
-}
-```
-
-###出力
-```
-15000
-```
-
-##バージョン
-###言語
-- C++11
-
-###処理系
-- [Clang, C++11 mode](/implementation.md#clang): 3.0
-- [GCC, C++11 mode](/implementation.md#gcc): 4.4.7
-- [Visual C++](/implementation.md#visual_cpp): ??
-
-
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>tuple -- tupleクラス : 見出しレベルの設定ミスを修正</title>
      <link href="http://cpprefjp.github.io/reference/tuple/tuple.html"/>
      <id>7cccf1e130fb5380d021ac79f88715a12ccccd34:reference/tuple/tuple.md</id>
      <updated>2015-10-16 14:28:49 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;class template&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;tuple&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;tuple&lt;span class=&#34;cpp cpp11&#34; title=&#34;C++11で追加&#34;&gt;(C++11)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;class... Args&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;tuple&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;tuple&lt;/code&gt;型は、複数の型の値を保持する「タプル」を表現するためのクラスである。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/utility/pair.html&#34;&gt;&lt;code&gt;pair&lt;/code&gt;&lt;/a&gt;型は2つの型の値を保持する「組」を表現することができるが、&lt;code&gt;tuple&lt;/code&gt;ではN個の型の値を扱うことができる。&lt;/p&gt;
&lt;h2&gt;メンバ関数&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/tuple/tuple/op_constructor.html&#34;&gt;&lt;code&gt;(constructor)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コンストラクタ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/tuple/tuple/op_assign.html&#34;&gt;&lt;code&gt;operator=&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;代入演算子&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/tuple/tuple/swap.html&#34;&gt;&lt;code&gt;swap&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;異なる&lt;code&gt;tuple&lt;/code&gt;オブジェクトと値を入れ替える&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;非メンバ関数&lt;/h2&gt;
&lt;h3&gt;タプル生成関数&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/tuple/ignore.html&#34;&gt;&lt;code&gt;ignore&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;無視する要素のプレースホルダー(constant variable)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/tuple/make_tuple.html&#34;&gt;&lt;code&gt;make_tuple&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;引数のコピーからタプルを生成する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/tuple/forward_as_tuple.html&#34;&gt;&lt;code&gt;forward_as_tuple&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;引数の完全な型からタプルを生成する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/tuple/tie.html&#34;&gt;&lt;code&gt;tie&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;引数への参照からタプルを生成する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/tuple/tuple_cat.html&#34;&gt;&lt;code&gt;tuple_cat&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;複数のタプルから1つのタプルを生成する&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;要素アクセス&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/tuple/tuple/get.html&#34;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;tuple&lt;/code&gt;の&lt;code&gt;i&lt;/code&gt;番目の要素を参照する&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;関係演算子&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/tuple/tuple/op_equal.html&#34;&gt;&lt;code&gt;operator==&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;等値判定を行う&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/tuple/tuple/op_not_equal.html&#34;&gt;&lt;code&gt;operator!=&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;非等値判定を行う&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/tuple/tuple/op_less.html&#34;&gt;&lt;code&gt;operator&amp;lt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;左辺が右辺よりも小さいか判定を行う&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/tuple/tuple/op_less_equal.html&#34;&gt;&lt;code&gt;operator&amp;lt;=&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;左辺が右辺以下か判定を行う&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/tuple/tuple/op_greater.html&#34;&gt;&lt;code&gt;operator&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;左辺が右辺より大きいか判定を行う&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/tuple/tuple/op_greater_equal.html&#34;&gt;&lt;code&gt;operator&amp;gt;=&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;左辺が右辺以上か判定を行う&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;tuple&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;string&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 3要素のタプルを作る&lt;/span&gt;
  &lt;span style=&#34;color:#ff0000&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;tuple&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color: #B00040&#34;&gt;char&lt;/span&gt;, std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;string&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; t &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;make_tuple(&lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color: #BA2121&#34;&gt;&#39;a&#39;&lt;/span&gt;, &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;hello&#34;&lt;/span&gt;);

  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 0番目の要素を参照&lt;/span&gt;
  &lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; i &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;get&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;0&amp;gt;&lt;/span&gt;(t);
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; i &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;

  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 2番目の要素を参照&lt;/span&gt;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;string&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; s &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;get&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;2&amp;gt;&lt;/span&gt;(t);
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; s &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;1
hello
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ?&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++11 mode&lt;/a&gt;: 4.3.4, 4.4.4, 4.5.2, 4.6.1&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ?&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: 9.0, 10.0&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>tuple_size -- tuple_size : インデントを調整</title>
      <link href="http://cpprefjp.github.io/reference/tuple/tuple_size.html"/>
      <id>230564cc906a6914fe6b3a7f3401d3e0b5b32f46:reference/tuple/tuple_size.md</id>
      <updated>2015-10-16 14:27:54 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;class template&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;tuple&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;tuple_size&lt;span class=&#34;cpp cpp11&#34; title=&#34;C++11で追加&#34;&gt;(C++11)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;tuple_size&lt;/span&gt;; &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 宣言のみで定義なし&lt;/span&gt;

  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;tuple_size&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;tuple_size&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;volatile&lt;/span&gt; T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;tuple_size&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;volatile&lt;/span&gt; T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;;

  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;class... Types&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;tuple_size&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/tuple/tuple.html&#34;&gt;tuple&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;Types...&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #666666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;public&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/type_traits/integral_constant-true_type-false_type.html&#34;&gt;integral_constant&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;size_t&lt;/span&gt;, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;sizeof&lt;/span&gt;...(Types)&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; {};
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;tuple_size&lt;/code&gt;は、タプルとして見なせる型の要素数を取得するためのクラスである。&lt;/p&gt;
&lt;p&gt;要素数は、&lt;a href=&#34;http://cpprefjp.github.io/reference/type_traits/integral_constant-true_type-false_type.html&#34;&gt;&lt;code&gt;integral_constant&lt;/code&gt;&lt;/a&gt;の機能を利用してコンパイル時の定数値として取得できる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;template &amp;lt;class T&amp;gt; class tuple_size;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;特殊化のための先行宣言。特殊化されていない型の場合、定義が行われないため要素数を取得しようとする段階でコンパイルエラーとなる。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;template &amp;lt;class T&amp;gt; class tuple_size&amp;lt;const T&amp;gt;;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;template &amp;lt;class T&amp;gt; class tuple_size&amp;lt;volatile T&amp;gt;;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;template &amp;lt;class T&amp;gt; class tuple_size&amp;lt;const volatile T&amp;gt;;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;CV修飾された型からも要素数を取得できるようにするための部分特殊化。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;template &amp;lt;class... Types&amp;gt; class tuple_size&amp;lt;tuple&amp;lt;Types...&amp;gt;&amp;gt;;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;std::tuple&lt;/code&gt;の要素数を取得できるようにするための部分特殊化。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;tuple&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  static_assert(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;tuple_size&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;               std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;tuple&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;gt;::&lt;/span&gt;value &lt;span style=&#34;color: #666666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&#34;&lt;/span&gt;);
  static_assert(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;tuple_size&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt;          std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;tuple&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;gt;::&lt;/span&gt;value &lt;span style=&#34;color: #666666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&#34;&lt;/span&gt;);
  static_assert(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;tuple_size&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;volatile&lt;/span&gt;       std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;tuple&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;gt;::&lt;/span&gt;value &lt;span style=&#34;color: #666666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&#34;&lt;/span&gt;);
  static_assert(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;tuple_size&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;volatile&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;tuple&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;gt;::&lt;/span&gt;value &lt;span style=&#34;color: #666666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&#34;&lt;/span&gt;);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++11 mode&lt;/a&gt;: 4.6.1&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt; ??&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>tuple_element -- tuple_element : 見た目を整理</title>
      <link href="http://cpprefjp.github.io/reference/tuple/tuple_element.html"/>
      <id>5f5e69921320093242176a9ccf67c64a1593d28a:reference/tuple/tuple_element.md</id>
      <updated>2015-10-16 14:00:04 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;class template&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;tuple&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;tuple_element&lt;span class=&#34;cpp cpp11&#34; title=&#34;C++11で追加&#34;&gt;(C++11)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstddef/size_t.html&#34;&gt;size_t&lt;/a&gt; I, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;tuple_element&lt;/span&gt;; &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 宣言のみで定義なし&lt;/span&gt;

  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstddef/size_t.html&#34;&gt;size_t&lt;/a&gt; I, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;tuple_element&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;I, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstddef/size_t.html&#34;&gt;size_t&lt;/a&gt; I, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;tuple_element&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;I, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;volatile&lt;/span&gt; T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstddef/size_t.html&#34;&gt;size_t&lt;/a&gt; I, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;tuple_element&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;I, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;volatile&lt;/span&gt; T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;;

  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstddef/size_t.html&#34;&gt;size_t&lt;/a&gt; I, class... Types&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;tuple_element&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;I, &lt;a href=&#34;http://cpprefjp.github.io/reference/tuple/tuple.html&#34;&gt;tuple&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;Types...&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; {
  &lt;span style=&#34;color: #A0A000&#34;&gt;public:&lt;/span&gt;
    &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; TI type;
  };

  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstddef/size_t.html&#34;&gt;size_t&lt;/a&gt; I, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color: #B00040&#34;&gt;tuple_element_t&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typename&lt;/span&gt; tuple_element&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;I, T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;::&lt;/span&gt;type; &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// C++14&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;tuple_element&lt;/code&gt;は、タプルとして見なせる型から、I番目の要素型を取得するためのクラスである。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tuple_element&lt;/code&gt;の第1テンプレート引数に要素番号、第2引数のタプルの型を指定し、ネスト型である&lt;code&gt;type&lt;/code&gt;型を取り出すことで要素型を得ることができる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;template &amp;lt;size_t I, class T&amp;gt; class tuple_element;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;特殊化のための先行宣言。特殊化されていない型の場合、定義が行われないため要素型を取得しようとする段階でコンパイルエラーとなる。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;template &amp;lt;size_t I, class T&amp;gt; class tuple_element&amp;lt;I, const T&amp;gt;;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;template &amp;lt;size_t I, class T&amp;gt; class tuple_element&amp;lt;I, volatile T&amp;gt;;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;template &amp;lt;size_t I, class T&amp;gt; class tuple_element&amp;lt;I, const volatile T&amp;gt;;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;CV修飾された型からも要素型を取得できるようにするための部分特殊化。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;template &amp;lt;size_t I, class... Types&amp;gt; class tuple_element&amp;lt;I,&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/tuple/tuple.html&#34;&gt;&lt;code&gt;tuple&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;Tuples...&amp;gt;&amp;gt;;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;std::tuple&lt;/code&gt;から要素型を取得できるようにするための部分特殊化。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;tuple&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;type_traits&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  static_assert(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;is_same&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;
                  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;tuple_element&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;0&lt;/span&gt;, std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;tuple&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color: #B00040&#34;&gt;char&lt;/span&gt;, &lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;gt;::&lt;/span&gt;type,
                  &lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;
                &lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;::&lt;/span&gt;value, &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&#34;&lt;/span&gt;);

  static_assert(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;is_same&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;
                  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;tuple_element&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;1&lt;/span&gt;, std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;tuple&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color: #B00040&#34;&gt;char&lt;/span&gt;, &lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;gt;::&lt;/span&gt;type,
                  &lt;span style=&#34;color: #B00040&#34;&gt;char&lt;/span&gt;
                &lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;::&lt;/span&gt;value, &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&#34;&lt;/span&gt;);

  static_assert(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;is_same&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;
                  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;tuple_element&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;2&lt;/span&gt;, std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;tuple&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color: #B00040&#34;&gt;char&lt;/span&gt;, &lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;gt;::&lt;/span&gt;type,
                  &lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt;
                &lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;::&lt;/span&gt;value, &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&#34;&lt;/span&gt;);

  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// const修飾&lt;/span&gt;
  static_assert(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;is_same&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;
                  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;tuple_element&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;0&lt;/span&gt;, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;tuple&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color: #B00040&#34;&gt;char&lt;/span&gt;, &lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;gt;::&lt;/span&gt;type,
                  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;
                &lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;::&lt;/span&gt;value, &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&#34;&lt;/span&gt;);

  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// volatile修飾&lt;/span&gt;
  static_assert(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;is_same&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;
                  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;tuple_element&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;0&lt;/span&gt;, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;volatile&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;tuple&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color: #B00040&#34;&gt;char&lt;/span&gt;, &lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;gt;::&lt;/span&gt;type,
                  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;volatile&lt;/span&gt; &lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;
                &lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;::&lt;/span&gt;value, &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&#34;&lt;/span&gt;);

  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// const, volatile修飾&lt;/span&gt;
  static_assert(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;is_same&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;
                  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;tuple_element&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;0&lt;/span&gt;, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;volatile&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;tuple&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color: #B00040&#34;&gt;char&lt;/span&gt;, &lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;gt;::&lt;/span&gt;type,
                  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;volatile&lt;/span&gt; &lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;
                &lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;::&lt;/span&gt;value, &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&#34;&lt;/span&gt;);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++11 mode&lt;/a&gt;: 4.6.1&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt; ??&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n3887.pdf&#34; target=&#34;_blank&#34;&gt;N3887 Consistent Metafunction Aliases&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
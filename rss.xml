<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++ Reference Site</title>
  <link href="http://cpprefjp.github.io" />
  <updated>2015-01-19T14:54:44.563696</updated>
  <id>f1ce5821-f349-48a8-8a78-529b5f816e05</id>

  
    <entry>
      <title>splice -- 概要文章の縦位置を合わせた</title>
      <link href="http://cpprefjp.github.io/reference/list/splice.html"/>
      <id>f387db53c992c25d170193c7d7d7fcc223b79ed7:reference/list/splice.md</id>
      <updated>2015-01-19 14:54:36 +0900</updated>
      
        <content type="html">&lt;h1&gt;splice&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;splice&lt;/span&gt;(iterator position, list&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; x);                &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (1) C++03&lt;/span&gt;
&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;splice&lt;/span&gt;(const_iterator position, list&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; x);          &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (1) C++11&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;splice&lt;/span&gt;(const_iterator position, list&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; x);         &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (2) C++11&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;splice&lt;/span&gt;(iterator position, list&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; x,
            iterator i);                                &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (3) C++03&lt;/span&gt;
&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;splice&lt;/span&gt;(const_iterator position, list&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; x,
            const_iterator i);                          &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (3) C++11&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;splice&lt;/span&gt;(const_iterator position, list&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; x,
            const_iterator i);                          &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (4) C++11&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;splice&lt;/span&gt;(iterator position, list&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; x,
            iterator first, iterator last);             &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (5) C++03&lt;/span&gt;
&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;splice&lt;/span&gt;(const_iterator position, list&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; x,
            const_iterator first, const_iterator last); &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (5) C++11&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;splice&lt;/span&gt;(const_iterator position, list&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; x,
            const_iterator first, const_iterator last); &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (6) C++11&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;2つの&lt;code&gt;list&lt;/code&gt;オブジェクトを併合する。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(1), (2) : &lt;code&gt;position&lt;/code&gt;の次の要素の前に、&lt;code&gt;x&lt;/code&gt;の全ての要素を移動する。  &lt;/li&gt;
&lt;li&gt;(3), (4) : &lt;code&gt;position&lt;/code&gt;の次の要素の前に、&lt;code&gt;x&lt;/code&gt;の要素のうち&lt;code&gt;i&lt;/code&gt;の次の要素を移動する。  &lt;/li&gt;
&lt;li&gt;(5), (6) : &lt;code&gt;position&lt;/code&gt;の次の要素の前に、&lt;code&gt;x&lt;/code&gt;の要素のうち&lt;code&gt;(first, last)&lt;/code&gt;の範囲を移動する。  &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;要件&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;第1パラメータ&lt;code&gt;position&lt;/code&gt;が、&lt;a href=&#34;http://cpprefjp.github.io/reference/list/end.html&#34;&gt;&lt;code&gt;[&lt;/code&gt;begin()&lt;code&gt;](./begin.md)&lt;/code&gt;, &lt;code&gt;[&lt;/code&gt;end()`&lt;/a&gt;]の範囲の間接参照可能なイテレータであること。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;i&lt;/code&gt;, &lt;code&gt;first&lt;/code&gt;, &lt;code&gt;last&lt;/code&gt;が、&lt;code&gt;x&lt;/code&gt;のイテレータであること。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;戻り値&lt;/h2&gt;
&lt;p&gt;なし&lt;/p&gt;
&lt;h2&gt;計算量&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;(1), (2) : &lt;code&gt;x&lt;/code&gt;の要素数に対して線形時間&lt;/li&gt;
&lt;li&gt;(3), (4) : 計算量： 定数時間&lt;/li&gt;
&lt;li&gt;(5), (6) : &lt;code&gt;(first, last)&lt;/code&gt;の要素数に対して線形時間&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;例外&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;(1), (2) : 投げない&lt;/li&gt;
&lt;li&gt;(3), (4) : 投げない&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;list&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;utility&amp;gt; &lt;/span&gt;&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// move&lt;/span&gt;

&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; print(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;list&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; ls)
{
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; T&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; x &lt;span style=&#34;color: #666666&#34;&gt;:&lt;/span&gt; ls) { std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; x &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#39; &#39;&lt;/span&gt;; }
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
}

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; main()
{
  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// ysの全ての要素をxsに移動する&lt;/span&gt;
  {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;list&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; xs &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color: #666666&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;6&lt;/span&gt;};
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;list&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; ys &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;3&lt;/span&gt;};

    xs.&lt;span style=&#34;color:#ff0000&#34;&gt;splice&lt;/span&gt;(xs.begin(), std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;move(ys));

    print(xs);
  }
  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// ysのうち、1だけを移動する&lt;/span&gt;
  {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;list&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; xs &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color: #666666&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;6&lt;/span&gt;};
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;list&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; ys &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;3&lt;/span&gt;};

    xs.&lt;span style=&#34;color:#ff0000&#34;&gt;splice&lt;/span&gt;(xs.begin(), std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;move(ys), ys.begin());

    print(xs);
  }
  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// ysのうち、1と2だけを移動する&lt;/span&gt;
  {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;list&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; xs &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color: #666666&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;6&lt;/span&gt;};
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;list&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; ys &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;3&lt;/span&gt;};

    xs.&lt;span style=&#34;color:#ff0000&#34;&gt;splice&lt;/span&gt;(xs.begin(), std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;move(ys), ys.begin(), std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;next(ys.begin(), &lt;span style=&#34;color: #666666&#34;&gt;2&lt;/span&gt;));

    print(xs);
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;1 2 3 4 5 6 
1 4 5 6 
1 2 4 5 6 
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase -- basic_stringのinsertとerase : パラメータがiteratorからconst_iteratorになった経緯のIssueを、参照に追加。</title>
      <link href="http://cpprefjp.github.io/reference/string/basic_string/erase.html"/>
      <id>926436b7b98d5ca61c8a886e0ca85ac693cc538b:reference/string/basic_string/erase.md</id>
      <updated>2015-01-19 14:51:15 +0900</updated>
      
        <content type="html">&lt;h1&gt;erase&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;basic_string&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; erase(size_type pos &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;0&lt;/span&gt;, size_type n &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; npos); &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (1)&lt;/span&gt;

iterator &lt;span style=&#34;color: #0000FF&#34;&gt;erase&lt;/span&gt;(iterator p);       &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (2) C++03まで&lt;/span&gt;
iterator &lt;span style=&#34;color: #0000FF&#34;&gt;erase&lt;/span&gt;(const_iterator p); &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (2) C++11から&lt;/span&gt;

iterator &lt;span style=&#34;color: #0000FF&#34;&gt;erase&lt;/span&gt;(iterator first, iterator last);             &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (3) C++03まで&lt;/span&gt;
iterator &lt;span style=&#34;color: #0000FF&#34;&gt;erase&lt;/span&gt;(const_iterator first, const_iterator last); &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (3) C++11から&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;要素を削除する。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(1) : &lt;code&gt;pos&lt;/code&gt;番目から&lt;code&gt;n&lt;/code&gt;要素を削除する。&lt;/li&gt;
&lt;li&gt;(2) : イテレータ&lt;code&gt;p&lt;/code&gt;が指す要素を削除する&lt;/li&gt;
&lt;li&gt;(3) : イテレータ範囲&lt;code&gt;[first, last)&lt;/code&gt;を削除する&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;要件&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;(1) : &lt;code&gt;pos &amp;lt;=&lt;/code&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string/size.html&#34;&gt;&lt;code&gt;size()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(3) : &lt;code&gt;first&lt;/code&gt;と&lt;code&gt;last&lt;/code&gt;が&lt;code&gt;*this&lt;/code&gt;に対する有効なイテレータであり、&lt;code&gt;[first, last)&lt;/code&gt;が有効な範囲であること。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;効果&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;(1) : &lt;code&gt;n&lt;/code&gt;と&lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string/size.html&#34;&gt;&lt;code&gt;size()&lt;/code&gt;&lt;/a&gt; &lt;code&gt;- pos&lt;/code&gt;のうち小さい方を&lt;code&gt;xlen&lt;/code&gt;とし、&lt;code&gt;pos&lt;/code&gt;番目から&lt;code&gt;xlen&lt;/code&gt;個の要素を削除する。&lt;/li&gt;
&lt;li&gt;(2) : イテレータ&lt;code&gt;p&lt;/code&gt;が指す要素を削除する。&lt;/li&gt;
&lt;li&gt;(3) : 範囲&lt;code&gt;[first, last)&lt;/code&gt;の文字列を削除する。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;戻り値&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;(1) : &lt;code&gt;*this&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;(2) : 削除した要素の次を指すイテレータを返す。そのような要素がなければ&lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string/end.html&#34;&gt;&lt;code&gt;end()&lt;/code&gt;&lt;/a&gt;を返す。&lt;/li&gt;
&lt;li&gt;(3) : 最後に削除した要素の次を指すイテレータを返す。そのような要素がなければ&lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string/end.html&#34;&gt;&lt;code&gt;end()&lt;/code&gt;&lt;/a&gt;を返す。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;例外&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;(1) : &lt;code&gt;pos &amp;gt;&lt;/code&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string/size.html&#34;&gt;&lt;code&gt;size()&lt;/code&gt;&lt;/a&gt;の場合、&lt;a href=&#34;http://cpprefjp.github.io/reference/stdexcept.html&#34;&gt;&lt;code&gt;out_of_range&lt;/code&gt;&lt;/a&gt;例外を送出する。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;string&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (1) 指定した位置からN個の要素を削除する&lt;/span&gt;
  {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;string s &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;12345&#34;&lt;/span&gt;;

    &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 1番目から2個の要素を削除&lt;/span&gt;
    s.erase(&lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;2&lt;/span&gt;);

    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;(1) : &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; s &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
  }

  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (2) 指定したイテレータが指す要素を削除する&lt;/span&gt;
  {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;string s &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;12345&#34;&lt;/span&gt;;

    decltype(s)&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;iterator it &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; s.begin() &lt;span style=&#34;color: #666666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;2&lt;/span&gt;; &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// &#39;3&#39;を指す&lt;/span&gt;
    s.erase(it);

    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;(2) : &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; s &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
  }

  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (3) 指定したイテレータ範囲を削除する&lt;/span&gt;
  {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;string s &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;12345&#34;&lt;/span&gt;;

    decltype(s)&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;iterator it &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; s.begin() &lt;span style=&#34;color: #666666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;2&lt;/span&gt;; &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// &#39;3&#39;を指す&lt;/span&gt;
    s.erase(it, s.end());

    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;(3) : &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; s &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;(1) : 145
(2) : 1245
(3) : 12
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#180&#34; target=&#34;_blank&#34;&gt;LWG Issue 180. Container member iterator arguments constness has unintended consequences&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>insert -- basic_stringのinsertとerase : パラメータがiteratorからconst_iteratorになった経緯のIssueを、参照に追加。</title>
      <link href="http://cpprefjp.github.io/reference/string/basic_string/insert.html"/>
      <id>926436b7b98d5ca61c8a886e0ca85ac693cc538b:reference/string/basic_string/insert.md</id>
      <updated>2015-01-19 14:51:15 +0900</updated>
      
        <content type="html">&lt;h1&gt;insert&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;basic_string&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; insert(size_type pos1, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; basic_string&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; str);    &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (1)&lt;/span&gt;
basic_string&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; insert(size_type pos1, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; basic_string&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; str,
                     size_type pos2, size_type n);                &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (2)&lt;/span&gt;
basic_string&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; insert(size_type pos, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; charT&lt;span style=&#34;color: #666666&#34;&gt;*&lt;/span&gt; s, size_type n); &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (3)&lt;/span&gt;
basic_string&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; insert(size_type pos, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; charT&lt;span style=&#34;color: #666666&#34;&gt;*&lt;/span&gt; s);              &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (4)&lt;/span&gt;
basic_string&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; insert(size_type pos, size_type n, charT c);        &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (5)&lt;/span&gt;

iterator &lt;span style=&#34;color: #0000FF&#34;&gt;insert&lt;/span&gt;(iterator p, charT c);                             &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (6) C++03まで&lt;/span&gt;
iterator &lt;span style=&#34;color: #0000FF&#34;&gt;insert&lt;/span&gt;(const_iterator p, charT c);                       &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (6) C++11から&lt;/span&gt;

iterator &lt;span style=&#34;color: #0000FF&#34;&gt;insert&lt;/span&gt;(iterator p, size_type n, charT c);                &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (7) C++03まで&lt;/span&gt;
iterator &lt;span style=&#34;color: #0000FF&#34;&gt;insert&lt;/span&gt;(const_iterator p, size_type n, charT c);          &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (7) C++11から&lt;/span&gt;

&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;InputIterator&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
iterator insert(iterator p,
                InputIterator first, InputIterator last);         &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (8) C++03まで&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;InputIterator&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
iterator insert(const_iterator p,
                InputIterator first, InputIterator last);         &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (8) C++11から&lt;/span&gt;

iterator &lt;span style=&#34;color: #0000FF&#34;&gt;insert&lt;/span&gt;(const_iterator p, &lt;a href=&#34;http://cpprefjp.github.io/reference/initializer_list.html&#34;&gt;initializer_list&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;charT&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;);       &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (9) C++11から&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;文字／文字列を挿入する。&lt;/p&gt;
&lt;h2&gt;要件&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;(1) : &lt;code&gt;pos &amp;lt;=&lt;/code&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string/size.html&#34;&gt;&lt;code&gt;size()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(2) : &lt;code&gt;pos1 &amp;lt;=&lt;/code&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string/size.html&#34;&gt;&lt;code&gt;size()&lt;/code&gt;&lt;/a&gt;および&lt;code&gt;pos2 &amp;lt;= str.&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string/size.html&#34;&gt;&lt;code&gt;size()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(3) : 文字配列へのポインタ&lt;code&gt;s&lt;/code&gt;が指す配列が少なくても&lt;code&gt;n&lt;/code&gt;要素あり、&lt;code&gt;pos &amp;lt;=&lt;/code&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string/size.html&#34;&gt;&lt;code&gt;size()&lt;/code&gt;&lt;/a&gt;であること。&lt;/li&gt;
&lt;li&gt;(4) : &lt;code&gt;pos &amp;lt;=&lt;/code&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string/size.html&#34;&gt;&lt;code&gt;size()&lt;/code&gt;&lt;/a&gt;、および文字配列へのポインタ&lt;code&gt;s&lt;/code&gt;が、少なくても&lt;a href=&#34;http://cpprefjp.github.io/reference/string/char_traits/length.html&#34;&gt;&lt;code&gt;traits::length&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(s) + 1&lt;/code&gt;個の要素を指す配列を指していること。&lt;/li&gt;
&lt;li&gt;(6) : イテレータ&lt;code&gt;p&lt;/code&gt;が、&lt;code&gt;*this&lt;/code&gt;に対して有効であること。&lt;/li&gt;
&lt;li&gt;(7) : イテレータ&lt;code&gt;p&lt;/code&gt;が、&lt;code&gt;*this&lt;/code&gt;に対して有効であること。&lt;/li&gt;
&lt;li&gt;(8) : イテレータ&lt;code&gt;p&lt;/code&gt;が、&lt;code&gt;*this&lt;/code&gt;に対して有効であること。&lt;code&gt;[first, last)&lt;/code&gt;が有効な範囲であること。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;効果&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;(1) : &lt;code&gt;insert(pos, str.&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string/data.html&#34;&gt;&lt;code&gt;data()&lt;/code&gt;&lt;/a&gt;&lt;code&gt;, str.&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string/size.html&#34;&gt;&lt;code&gt;size()&lt;/code&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;(2) : &lt;code&gt;str.&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string/size.html&#34;&gt;&lt;code&gt;size()&lt;/code&gt;&lt;/a&gt; &lt;code&gt;- pos2&lt;/code&gt;と&lt;code&gt;n&lt;/code&gt;のうち小さい方を&lt;code&gt;rlen&lt;/code&gt;とし、&lt;code&gt;insert(pos1, str.&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string/data.html&#34;&gt;&lt;code&gt;data()&lt;/code&gt;&lt;/a&gt; &lt;code&gt;+ pos2, rlen)&lt;/code&gt;を呼び出す。&lt;/li&gt;
&lt;li&gt;(3) : &lt;code&gt;*this&lt;/code&gt;の&lt;code&gt;pos&lt;/code&gt;番目に、文字配列&lt;code&gt;s&lt;/code&gt;の先頭&lt;code&gt;n&lt;/code&gt;文字を挿入する。&lt;/li&gt;
&lt;li&gt;(4) : &lt;code&gt;insert(pos, s,&lt;/code&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/string/char_traits/length.html&#34;&gt;&lt;code&gt;traits::length&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(s))&lt;/code&gt;と同じ効果を持つ。&lt;/li&gt;
&lt;li&gt;(5) : &lt;code&gt;insert(pos, basic_string(n, c))&lt;/code&gt;と同じ効果を持つ。&lt;/li&gt;
&lt;li&gt;(6) : イテレータ&lt;code&gt;p&lt;/code&gt;が指す要素の前に、文字&lt;code&gt;c&lt;/code&gt;のコピーを挿入する。&lt;/li&gt;
&lt;li&gt;(7) : イテレータ&lt;code&gt;p&lt;/code&gt;が指す要素の前に、文字&lt;code&gt;c&lt;/code&gt;のコピーを&lt;code&gt;n&lt;/code&gt;個挿入する。&lt;/li&gt;
&lt;li&gt;(8) : &lt;code&gt;insert(p -&lt;/code&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string/begin.html&#34;&gt;&lt;code&gt;begin()&lt;/code&gt;&lt;/a&gt;&lt;code&gt;, basic_string(first, last))&lt;/code&gt;と同じ効果を持つ。&lt;/li&gt;
&lt;li&gt;(9) : &lt;code&gt;insert(p, il.&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/initializer_list/begin.html&#34;&gt;&lt;code&gt;begin()&lt;/code&gt;&lt;/a&gt;&lt;code&gt;, il.&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/initializer_list/end.html&#34;&gt;&lt;code&gt;end()&lt;/code&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;戻り値&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;(1) : &lt;code&gt;*this&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;(2) : &lt;code&gt;*this&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;(3) : &lt;code&gt;*this&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;(4) : &lt;code&gt;*this&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;(5) : &lt;code&gt;*this&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;(6) : 挿入された文字を指すイテレータを返す。&lt;/li&gt;
&lt;li&gt;(7) : 挿入された最初の文字を指すイテレータを返す。&lt;code&gt;n == 0&lt;/code&gt;なら&lt;code&gt;p&lt;/code&gt;を返す。&lt;/li&gt;
&lt;li&gt;(8) : 挿入された最初の文字を指すイテレータを返す。&lt;code&gt;first == last&lt;/code&gt;なら&lt;code&gt;p&lt;/code&gt;を返す。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;例外&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;(1) : &lt;code&gt;pos &amp;gt;&lt;/code&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string/size.html&#34;&gt;&lt;code&gt;size()&lt;/code&gt;&lt;/a&gt;の場合、&lt;a href=&#34;http://cpprefjp.github.io/reference/stdexcept.html&#34;&gt;&lt;code&gt;out_of_range&lt;/code&gt;&lt;/a&gt;例外を送出する。&lt;/li&gt;
&lt;li&gt;(2) : &lt;code&gt;pos1 &amp;gt;&lt;/code&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string/size.html&#34;&gt;&lt;code&gt;size()&lt;/code&gt;&lt;/a&gt;もしくは&lt;code&gt;pos2 &amp;gt; str.&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string/size.html&#34;&gt;&lt;code&gt;size()&lt;/code&gt;&lt;/a&gt;の場合、&lt;a href=&#34;http://cpprefjp.github.io/reference/stdexcept.html&#34;&gt;&lt;code&gt;out_of_range&lt;/code&gt;&lt;/a&gt;例外を送出する。&lt;/li&gt;
&lt;li&gt;(3) : &lt;code&gt;pos &amp;gt;&lt;/code&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string/size.html&#34;&gt;&lt;code&gt;size()&lt;/code&gt;&lt;/a&gt;の場合、&lt;a href=&#34;http://cpprefjp.github.io/reference/stdexcept.html&#34;&gt;&lt;code&gt;out_of_range&lt;/code&gt;&lt;/a&gt;例外を送出する。また、&lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string/size.html&#34;&gt;&lt;code&gt;size()&lt;/code&gt;&lt;/a&gt; &lt;code&gt;+ n &amp;gt;&lt;/code&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/string/basic_string/max_size.html&#34;&gt;&lt;code&gt;max_size()&lt;/code&gt;&lt;/a&gt;の場合には&lt;a href=&#34;http://cpprefjp.github.io/reference/stdexcept.html&#34;&gt;&lt;code&gt;length_error&lt;/code&gt;&lt;/a&gt;例外を送出する。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;string&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (1) 指定位置に文字列を挿入する&lt;/span&gt;
  {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;string s1 &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;aaaaa&#34;&lt;/span&gt;;
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;string s2 &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;bbbbb&#34;&lt;/span&gt;;

    s1.insert(&lt;span style=&#34;color: #666666&#34;&gt;2&lt;/span&gt;, s2);

    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;(1) : &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; s1 &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
  }

  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (2) 指定位置に、部分文字列を挿入する&lt;/span&gt;
  {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;string s1 &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;aaaaa&#34;&lt;/span&gt;;
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;string s2 &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;12345&#34;&lt;/span&gt;;

    &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// s2.substr(2, 3)を挿入する&lt;/span&gt;
    s1.insert(&lt;span style=&#34;color: #666666&#34;&gt;2&lt;/span&gt;, s2, &lt;span style=&#34;color: #666666&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;3&lt;/span&gt;);

    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;(2) : &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; s1 &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
  }

  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (3) 指定位置に、文字配列の先頭N文字を挿入する&lt;/span&gt;
  {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;string s &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;aaaaa&#34;&lt;/span&gt;;

    s.insert(&lt;span style=&#34;color: #666666&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;bbbbb&#34;&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;3&lt;/span&gt;);

    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;(3) : &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; s &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
  }

  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (4) 指定位置に文字配列を挿入する&lt;/span&gt;
  {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;string s &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;aaaaa&#34;&lt;/span&gt;;

    s.insert(&lt;span style=&#34;color: #666666&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;bbbbb&#34;&lt;/span&gt;);

    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;(4) : &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; s &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
  }

  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (5) 指定位置に、N個の文字を挿入する&lt;/span&gt;
  {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;string s &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;aaaaa&#34;&lt;/span&gt;;

    s.insert(&lt;span style=&#34;color: #666666&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color: #BA2121&#34;&gt;&#39;b&#39;&lt;/span&gt;);

    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;(5) : &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; s &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
  }

  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (6) 指定したイテレータが指す要素の前に、文字を挿入する&lt;/span&gt;
  {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;string s &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;aaaaa&#34;&lt;/span&gt;;

    s.insert(s.begin(), &lt;span style=&#34;color: #BA2121&#34;&gt;&#39;b&#39;&lt;/span&gt;);

    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;(6) : &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; s &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
  }

  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (7) 指定したイテレータが指す要素の前に、N個の文字を挿入する&lt;/span&gt;
  {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;string s &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;aaaaa&#34;&lt;/span&gt;;

    s.insert(s.begin(), &lt;span style=&#34;color: #666666&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color: #BA2121&#34;&gt;&#39;b&#39;&lt;/span&gt;);

    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;(7) : &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; s &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
  }

  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (8) 指定したイテレータが指す要素の前に、文字の範囲を挿入する&lt;/span&gt;
  {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;string s1 &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;aaaaa&#34;&lt;/span&gt;;
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;string s2 &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;bbbbb&#34;&lt;/span&gt;;

    s1.insert(s1.begin(), s2.begin(), s2.end());

    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;(8) : &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; s1 &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
  }

  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (9) 指定したイテレータが指す要素の前に、文字の初期化子リストを挿入する&lt;/span&gt;
  {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;string s &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;aaaaa&#34;&lt;/span&gt;;

    s.insert(s.begin(), {&lt;span style=&#34;color: #BA2121&#34;&gt;&#39;b&#39;&lt;/span&gt;, &lt;span style=&#34;color: #BA2121&#34;&gt;&#39;b&#39;&lt;/span&gt;, &lt;span style=&#34;color: #BA2121&#34;&gt;&#39;b&#39;&lt;/span&gt;, &lt;span style=&#34;color: #BA2121&#34;&gt;&#39;b&#39;&lt;/span&gt;, &lt;span style=&#34;color: #BA2121&#34;&gt;&#39;b&#39;&lt;/span&gt;});

    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;(9) : &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; s &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;(1) : aabbbbbaaa
(2) : aa345aaa
(3) : aabbbaaa
(4) : aabbbbbaaa
(5) : aabbbaaa
(6) : baaaaa
(7) : bbbaaaaa
(8) : bbbbbaaaaa
(9) : bbbbbaaaaa
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#180&#34; target=&#34;_blank&#34;&gt;LWG Issue 180. Container member iterator arguments constness has unintended consequences&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>splice -- list::splice : オーバーロードの書き方を、ほかに合わせた</title>
      <link href="http://cpprefjp.github.io/reference/list/splice.html"/>
      <id>ad721f1219f5519bb0bd01b97283d04322e63d79:reference/list/splice.md</id>
      <updated>2015-01-19 14:44:49 +0900</updated>
      
        <content type="html">&lt;h1&gt;splice&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;splice&lt;/span&gt;(iterator position, list&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; x);                &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (1) C++03&lt;/span&gt;
&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;splice&lt;/span&gt;(const_iterator position, list&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; x);          &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (1) C++11&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;splice&lt;/span&gt;(const_iterator position, list&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; x);         &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (2) C++11&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;splice&lt;/span&gt;(iterator position, list&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; x,
            iterator i);                                &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (3) C++03&lt;/span&gt;
&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;splice&lt;/span&gt;(const_iterator position, list&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; x,
            const_iterator i);                          &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (3) C++11&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;splice&lt;/span&gt;(const_iterator position, list&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; x,
            const_iterator i);                          &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (4) C++11&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;splice&lt;/span&gt;(iterator position, list&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; x,
            iterator first, iterator last);             &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (5) C++03&lt;/span&gt;
&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;splice&lt;/span&gt;(const_iterator position, list&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; x,
            const_iterator first, const_iterator last); &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (5) C++11&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;splice&lt;/span&gt;(const_iterator position, list&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; x,
            const_iterator first, const_iterator last); &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (6) C++11&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;2つの&lt;code&gt;list&lt;/code&gt;オブジェクトを併合する。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(1), (2) : &lt;code&gt;position&lt;/code&gt;の次の要素の前に&lt;code&gt;x&lt;/code&gt;の全ての要素を移動する。  &lt;/li&gt;
&lt;li&gt;(3), (4) : &lt;code&gt;position&lt;/code&gt;の次の要素の前に、&lt;code&gt;x&lt;/code&gt;の要素のうち&lt;code&gt;i&lt;/code&gt;の次の要素を移動する。  &lt;/li&gt;
&lt;li&gt;(5), (6) : &lt;code&gt;position&lt;/code&gt;の次の要素の前に、&lt;code&gt;x&lt;/code&gt;の要素のうち&lt;code&gt;(first, last)&lt;/code&gt;の範囲を移動する。  &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;要件&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;第1パラメータ&lt;code&gt;position&lt;/code&gt;が、&lt;a href=&#34;http://cpprefjp.github.io/reference/list/end.html&#34;&gt;&lt;code&gt;[&lt;/code&gt;begin()&lt;code&gt;](./begin.md)&lt;/code&gt;, &lt;code&gt;[&lt;/code&gt;end()`&lt;/a&gt;]の範囲の間接参照可能なイテレータであること。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;i&lt;/code&gt;, &lt;code&gt;first&lt;/code&gt;, &lt;code&gt;last&lt;/code&gt;が、&lt;code&gt;x&lt;/code&gt;のイテレータであること。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;戻り値&lt;/h2&gt;
&lt;p&gt;なし&lt;/p&gt;
&lt;h2&gt;計算量&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;(1), (2) : &lt;code&gt;x&lt;/code&gt;の要素数に対して線形時間&lt;/li&gt;
&lt;li&gt;(3), (4) : 計算量： 定数時間&lt;/li&gt;
&lt;li&gt;(5), (6) : &lt;code&gt;(first, last)&lt;/code&gt;の要素数に対して線形時間&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;例外&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;(1), (2) : 投げない&lt;/li&gt;
&lt;li&gt;(3), (4) : 投げない&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;list&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;utility&amp;gt; &lt;/span&gt;&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// move&lt;/span&gt;

&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; print(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;list&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; ls)
{
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; T&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; x &lt;span style=&#34;color: #666666&#34;&gt;:&lt;/span&gt; ls) { std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; x &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#39; &#39;&lt;/span&gt;; }
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
}

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; main()
{
  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// ysの全ての要素をxsに移動する&lt;/span&gt;
  {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;list&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; xs &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color: #666666&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;6&lt;/span&gt;};
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;list&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; ys &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;3&lt;/span&gt;};

    xs.&lt;span style=&#34;color:#ff0000&#34;&gt;splice&lt;/span&gt;(xs.begin(), std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;move(ys));

    print(xs);
  }
  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// ysのうち、1だけを移動する&lt;/span&gt;
  {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;list&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; xs &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color: #666666&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;6&lt;/span&gt;};
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;list&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; ys &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;3&lt;/span&gt;};

    xs.&lt;span style=&#34;color:#ff0000&#34;&gt;splice&lt;/span&gt;(xs.begin(), std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;move(ys), ys.begin());

    print(xs);
  }
  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// ysのうち、1と2だけを移動する&lt;/span&gt;
  {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;list&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; xs &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color: #666666&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;6&lt;/span&gt;};
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;list&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; ys &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;3&lt;/span&gt;};

    xs.&lt;span style=&#34;color:#ff0000&#34;&gt;splice&lt;/span&gt;(xs.begin(), std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;move(ys), ys.begin(), std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;next(ys.begin(), &lt;span style=&#34;color: #666666&#34;&gt;2&lt;/span&gt;));

    print(xs);
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;1 2 3 4 5 6 
1 4 5 6 
1 2 4 5 6 
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>splice -- list::splice : 宣言の書き方を、C++11側のものに合わせた</title>
      <link href="http://cpprefjp.github.io/reference/list/splice.html"/>
      <id>bbdb4deefb2d06f2bef76db1a68ae99da5a4ec85:reference/list/splice.md</id>
      <updated>2015-01-19 14:36:31 +0900</updated>
      
        <content type="html">&lt;h1&gt;splice&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// C++03&lt;/span&gt;
&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;splice&lt;/span&gt;(iterator position, list&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; x);
&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;splice&lt;/span&gt;(iterator position, list&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; x, iterator i);
&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;splice&lt;/span&gt;(iterator position, list&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; x,
            iterator first, iterator last);

&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// C++11&lt;/span&gt;
&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;splice&lt;/span&gt;(const_iterator position, list&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; x);
&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;splice&lt;/span&gt;(const_iterator position, list&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; x);
&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;splice&lt;/span&gt;(const_iterator position, list&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; x, const_iterator i);
&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;splice&lt;/span&gt;(const_iterator position, list&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; x, const_iterator i);
&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;splice&lt;/span&gt;(const_iterator position, list&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; x,
            const_iterator first, const_iterator last);
&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;splice&lt;/span&gt;(const_iterator position, list&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; x,
            const_iterator first, const_iterator last);
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;2つの&lt;code&gt;list&lt;/code&gt;オブジェクトを併合する。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;void splice(const_iterator position, list&amp;amp; x);&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;void splice(const_iterator position, list&amp;amp;&amp;amp; x);&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;position&lt;/code&gt;の次の要素の前に&lt;code&gt;x&lt;/code&gt;の全ての要素を移動する。&lt;br /&gt;
例外： 投げない&lt;br /&gt;
計算量： &lt;code&gt;x&lt;/code&gt;の要素数に対して線形時間  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;void splice(const_iterator position, list&amp;amp; x, const_iterator i);&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;void splice(const_iterator position, list&amp;amp;&amp;amp; x, const_iterator i);&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;position&lt;/code&gt;の次の要素の前に、&lt;code&gt;x&lt;/code&gt;の要素のうち&lt;code&gt;i&lt;/code&gt;の次の要素を移動する。&lt;br /&gt;
例外： 投げない&lt;br /&gt;
計算量： 定数時間  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;void splice(const_iterator position, list&amp;amp; x, const_iterator first, const_iterator last);&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;void splice(const_iterator position, list&amp;amp;&amp;amp; x, const_iterator first, const_iterator last);&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;position&lt;/code&gt;の次の要素の前に、&lt;code&gt;x&lt;/code&gt;の要素のうち&lt;code&gt;(first, last)&lt;/code&gt;の範囲を移動する。&lt;br /&gt;
計算量： &lt;code&gt;(first, last)&lt;/code&gt;の要素数に対して線形時間  &lt;/p&gt;
&lt;h2&gt;要件&lt;/h2&gt;
&lt;p&gt;第1パラメータ&lt;code&gt;position&lt;/code&gt;が、[&lt;code&gt;[&lt;/code&gt;begin()&lt;code&gt;](./begin.md)&lt;/code&gt;, &lt;code&gt;[&lt;/code&gt;end()&lt;code&gt;](./end.md)]の範囲の間接参照可能なイテレータであること。&lt;/code&gt;i&lt;code&gt;,&lt;/code&gt;first&lt;code&gt;,&lt;/code&gt;last&lt;code&gt;が、&lt;/code&gt;x`のイテレータであること。&lt;/p&gt;
&lt;h2&gt;戻り値&lt;/h2&gt;
&lt;p&gt;なし&lt;/p&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;list&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;utility&amp;gt; &lt;/span&gt;&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// move&lt;/span&gt;

&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; print(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;list&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; ls)
{
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; T&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; x &lt;span style=&#34;color: #666666&#34;&gt;:&lt;/span&gt; ls) { std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; x &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#39; &#39;&lt;/span&gt;; }
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
}

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; main()
{
  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// ysの全ての要素をxsに移動する&lt;/span&gt;
  {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;list&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; xs &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color: #666666&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;6&lt;/span&gt;};
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;list&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; ys &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;3&lt;/span&gt;};

    xs.&lt;span style=&#34;color:#ff0000&#34;&gt;splice&lt;/span&gt;(xs.begin(), std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;move(ys));

    print(xs);
  }
  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// ysのうち、1だけを移動する&lt;/span&gt;
  {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;list&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; xs &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color: #666666&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;6&lt;/span&gt;};
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;list&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; ys &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;3&lt;/span&gt;};

    xs.&lt;span style=&#34;color:#ff0000&#34;&gt;splice&lt;/span&gt;(xs.begin(), std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;move(ys), ys.begin());

    print(xs);
  }
  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// ysのうち、1と2だけを移動する&lt;/span&gt;
  {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;list&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; xs &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color: #666666&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;6&lt;/span&gt;};
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;list&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; ys &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;3&lt;/span&gt;};

    xs.&lt;span style=&#34;color:#ff0000&#34;&gt;splice&lt;/span&gt;(xs.begin(), std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;move(ys), ys.begin(), std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;next(ys.begin(), &lt;span style=&#34;color: #666666&#34;&gt;2&lt;/span&gt;));

    print(xs);
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;1 2 3 4 5 6 
1 4 5 6 
1 2 4 5 6 
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>shared_timed_mutex (C++14) -- shared_timed_mutexクラスのサンプルコードを追加。</title>
      <link href="http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex.html"/>
      <id>c4b9232fbc9a50ed9747c30ca5d1bd8489fefc7c:reference/shared_mutex/shared_timed_mutex.md</id>
      <updated>2015-01-19 14:20:13 +0900</updated>
      
        <content type="html">&lt;h1&gt;shared_timed_mutex (C++14)&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;shared_timed_mutex&lt;/span&gt;;
};
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;shared_timed_mutex&lt;/code&gt;クラスは、&lt;a href=&#34;http://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock&#34; target=&#34;_blank&#34;&gt;Readers–writer lock&lt;/a&gt;パターンをサポートするミューテックスクラスである。&lt;/p&gt;
&lt;p&gt;このパターンは、「複数のユーザーによる読み込みと、単一ユーザーによる書き込み」の排他制御を効率的に行うミューテックスクラスである。書き込みよりも読み込みの方が多い状況で使用する。&lt;/p&gt;
&lt;p&gt;このミューテックスクラスのロック取得方法は2種類ある。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;lock()&lt;/code&gt;／&lt;code&gt;unlock()&lt;/code&gt;メンバ関数：書き込み用のロックを取得する&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lock_shared()&lt;/code&gt;／&lt;code&gt;unlock_shared()&lt;/code&gt;メンバ関数：読み込み用のロックを取得する&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;このクラスは、デストラクタで自動的にロックを手放すことはしない。そのため、以下の補助クラスを使用して、デストラクタで自動的にロックを手放す。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/mutex/lock_guard.html&#34;&gt;&lt;code&gt;lock_guard&lt;/code&gt;&lt;/a&gt;クラス／&lt;a href=&#34;http://cpprefjp.github.io/reference/mutex/unique_lock.html&#34;&gt;&lt;code&gt;unique_lock&lt;/code&gt;&lt;/a&gt;クラス：書き込み用のロックを自動的に手放す&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/mutex/shared_lock.md.nolink&#34;&gt;&lt;code&gt;shared_lock&lt;/code&gt;&lt;/a&gt;：読み込み用のロックを自動的に手放す&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;メンバ関数&lt;/h2&gt;
&lt;h3&gt;構築・破棄&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/op_constructor.md.nolink&#34;&gt;&lt;code&gt;(constructor)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コンストラクタ&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/op_destructor.md.nolink&#34;&gt;&lt;code&gt;(destructor)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;デストラクタ&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator=(const shared_timed_mutex&amp;amp;) = delete;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;代入演算子&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;排他の所有権&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/lock.md.nolink&#34;&gt;&lt;code&gt;lock&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;排他ロックを取得する&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/try_lock.md.nolink&#34;&gt;&lt;code&gt;try_lock&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;排他ロックの取得を試みる&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/try_lock_for.md.nolink&#34;&gt;&lt;code&gt;try_lock_for&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;タイムアウトする相対時間を指定して排他ロックの取得を試みる&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/try_lock_until.md.nolink&#34;&gt;&lt;code&gt;try_lock_until&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;タイムアウトする絶対時間を指定して排他ロックの取得を試みる&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/unlock.md.nolink&#34;&gt;&lt;code&gt;unlock&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;排他ロックを手放す&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;共有の所有権&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/lock_shared.md.nolink&#34;&gt;&lt;code&gt;lock_shared&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;共有ロックを取得する&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/try_lock_shared.md.nolink&#34;&gt;&lt;code&gt;try_lock_shared&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;共有ロックの取得を試みる&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/try_lock_shared_for.md.nolink&#34;&gt;&lt;code&gt;try_lock_shared_for&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;タイムアウトする相対時間を指定して共有ロックの取得を試みる&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/try_lock_shared_until.md.nolink&#34;&gt;&lt;code&gt;try_lock_shared_until&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;タイムアウトする絶対時間を指定して共有ロックの取得を試みる&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/unlock_shared.md.nolink&#34;&gt;&lt;code&gt;unlock_shared&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;共有ロックを手放す&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;thread&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;shared_mutex&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;chrono&amp;gt;&lt;/span&gt;

std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;mutex print_mtx;
&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;print_value&lt;/span&gt;(&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; x)
{
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;lock_guard&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;mutex&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; lock(print_mtx);
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; x &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
}

&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;X&lt;/span&gt; {
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;shared_timed_mutex mtx_;
  &lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; count_ &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;0&lt;/span&gt;;
&lt;span style=&#34;color: #A0A000&#34;&gt;public:&lt;/span&gt;
  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 書き込み側：カウンタを加算する&lt;/span&gt;
  &lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;writer&lt;/span&gt;()
  {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;lock_guard&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;shared_timed_mutex&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; lock(mtx_);
    &lt;span style=&#34;color: #666666&#34;&gt;++&lt;/span&gt;count_;
  }

  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 読み込み側：カウンタの値を読む&lt;/span&gt;
  &lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;reader&lt;/span&gt;()
  {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;shared_lock&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;shared_timed_mutex&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; lock(mtx_);
    print_value(count_);
  }
};

X obj;
&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;writer_thread&lt;/span&gt;()
{
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;3&lt;/span&gt;; &lt;span style=&#34;color: #666666&#34;&gt;++&lt;/span&gt;i) {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;this_thread&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;sleep_for(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;chrono&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;milliseconds(&lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;));
    obj.writer();
  }
}

&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;reader_thread&lt;/span&gt;()
{
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;10&lt;/span&gt;; &lt;span style=&#34;color: #666666&#34;&gt;++&lt;/span&gt;i) {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;this_thread&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;sleep_for(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;chrono&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;milliseconds(&lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;));
    obj.reader();
  }
}

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 書き込みユーザー1人&lt;/span&gt;
  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 読み込みユーザー3人&lt;/span&gt;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;thread&lt;/span&gt; writer1(writer_thread);
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;thread&lt;/span&gt; reader1(reader_thread);
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;thread&lt;/span&gt; reader2(reader_thread);
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;thread&lt;/span&gt; reader3(reader_thread);

  writer1.join();
  reader1.join();
  reader2.join();
  reader3.join();
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力例&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;1
1
1
2
2
2
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++14&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang, C++14 mode&lt;/a&gt;: 3.4&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++14 mode&lt;/a&gt;: 4.9&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt; ??&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock&#34; target=&#34;_blank&#34;&gt;Readers–writer lock - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3427.html&#34; target=&#34;_blank&#34;&gt;N3427 Shared locking in C++&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3568.html&#34; target=&#34;_blank&#34;&gt;N3568 Shared locking in C++ (Revision 1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3659.html&#34; target=&#34;_blank&#34;&gt;N3659 Shared locking in C++ (Revision 2)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n3891.htm&#34; target=&#34;_blank&#34;&gt;N3891 A proposal to rename &lt;code&gt;shared_mutex&lt;/code&gt; to &lt;code&gt;shared_timed_mutex&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
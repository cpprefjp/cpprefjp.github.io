<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2024-06-25T03:56:18.249414</updated>
  <id>3bbe17e1-919a-440f-851b-fc235068e53d</id>

  
    <entry>
      <title>add -- linalg : 参照と例の修正 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/add.html"/>
      <id>c8d55fb2e1546a676aa1d39c75cbc9a62c69e948:reference/linalg/add.md</id>
      <updated>2024-06-25T12:51:33+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/add.md b/reference/linalg/add.md
index cffbd4bd0..61c0489af 100644
--- a/reference/linalg/add.md
+++ b/reference/linalg/add.md
@@ -91,6 +91,6 @@ $x + y$ を`z`に代入する。
 
 
 ## 参照
-- [P0788R3 Standard Library Specification in a Concepts and Contracts World](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0788r3.pdf)
+- [P1673R13 A free function linear algebra interface based on the BLAS](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p1673r13.html)
 - [`LAPACK: caxpy`](https://netlib.org/lapack/explore-html/d5/d4b/group__axpy_ga0b7bac1f4d42514074a48f14f5f9caa0.html#ga0b7bac1f4d42514074a48f14f5f9caa0)
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>apply_givens_rotation -- linalg : 参照と例の修正 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/apply_givens_rotation.html"/>
      <id>c8d55fb2e1546a676aa1d39c75cbc9a62c69e948:reference/linalg/apply_givens_rotation.md</id>
      <updated>2024-06-25T12:51:33+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/apply_givens_rotation.md b/reference/linalg/apply_givens_rotation.md
index b93274fb5..d9c76b06e 100644
--- a/reference/linalg/apply_givens_rotation.md
+++ b/reference/linalg/apply_givens_rotation.md
@@ -116,5 +116,5 @@ $$
 
 
 ## 参照
-- [P0788R3 Standard Library Specification in a Concepts and Contracts World](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0788r3.pdf)
+- [P1673R13 A free function linear algebra interface based on the BLAS](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p1673r13.html)
 - [`LAPACK: crot`](https://netlib.org/lapack/explore-html/d1/d45/group__rot_ga25544801d45dcabdec7b24d863ebea9c.html#ga25544801d45dcabdec7b24d863ebea9c)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>copy -- linalg : 参照と例の修正 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/copy.html"/>
      <id>c8d55fb2e1546a676aa1d39c75cbc9a62c69e948:reference/linalg/copy.md</id>
      <updated>2024-06-25T12:51:33+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/copy.md b/reference/linalg/copy.md
index 0a44de8bd..6f9619c07 100644
--- a/reference/linalg/copy.md
+++ b/reference/linalg/copy.md
@@ -77,5 +77,5 @@ namespace std::linalg {
 
 
 ## 参照
-- [P0788R3 Standard Library Specification in a Concepts and Contracts World](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0788r3.pdf)
+- [P1673R13 A free function linear algebra interface based on the BLAS](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p1673r13.html)
 - [`LAPACK: ccopy`](https://netlib.org/lapack/explore-html/d5/d2b/group__copy_gab395a30db1137d3deabe520b8e73097d.html#gab395a30db1137d3deabe520b8e73097d)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>dot -- linalg : 参照と例の修正 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/dot.html"/>
      <id>c8d55fb2e1546a676aa1d39c75cbc9a62c69e948:reference/linalg/dot.md</id>
      <updated>2024-06-25T12:51:33+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/dot.md b/reference/linalg/dot.md
index 8c023bda7..c04c8e84e 100644
--- a/reference/linalg/dot.md
+++ b/reference/linalg/dot.md
@@ -103,5 +103,5 @@ $$
 
 
 ## 参照
-- [P0788R3 Standard Library Specification in a Concepts and Contracts World](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0788r3.pdf)
+- [P1673R13 A free function linear algebra interface based on the BLAS](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p1673r13.html)
 - [`LAPACK: cdotu`](https://netlib.org/lapack/explore-html/d1/dcc/group__dot_ga2cce681b6aed3728b893a555b3bee55c.html#ga2cce681b6aed3728b893a555b3bee55c)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>dotc -- linalg : 参照と例の修正 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/dotc.html"/>
      <id>c8d55fb2e1546a676aa1d39c75cbc9a62c69e948:reference/linalg/dotc.md</id>
      <updated>2024-06-25T12:51:33+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/dotc.md b/reference/linalg/dotc.md
index 4ca16f3f2..e910eaf20 100644
--- a/reference/linalg/dotc.md
+++ b/reference/linalg/dotc.md
@@ -80,7 +80,7 @@ $$
 ## 例
 **[注意] 処理系にあるコンパイラで確認していないため、間違っているかもしれません。**
 
-```cpp
+```cpp example
 #include &amp;lt;cmath&amp;gt;
 #include &amp;lt;complex&amp;gt;
 #include &amp;lt;execution&amp;gt;
@@ -143,6 +143,6 @@ int main()
 
 
 ## 参照
-- [P0788R3 Standard Library Specification in a Concepts and Contracts World](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0788r3.pdf)
+- [P1673R13 A free function linear algebra interface based on the BLAS](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p1673r13.html)
 - [`LAPACK: cdotc`](https://netlib.org/lapack/explore-html/d1/dcc/group__dot_ga5c189335a4e6130a2206c190579b1571.html#ga5c189335a4e6130a2206c190579b1571)
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>matrix_frob_norm -- linalg : 参照と例の修正 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/matrix_frob_norm.html"/>
      <id>c8d55fb2e1546a676aa1d39c75cbc9a62c69e948:reference/linalg/matrix_frob_norm.md</id>
      <updated>2024-06-25T12:51:33+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/matrix_frob_norm.md b/reference/linalg/matrix_frob_norm.md
index 93bc6b362..f8f6cd64c 100644
--- a/reference/linalg/matrix_frob_norm.md
+++ b/reference/linalg/matrix_frob_norm.md
@@ -65,7 +65,7 @@ $$
 ## 例
 **[注意] 処理系にあるコンパイラで確認していないため、間違っているかもしれません。**
 
-```cpp
+```cpp example
 #include &amp;lt;array&amp;gt;
 #include &amp;lt;cmath&amp;gt;
 #include &amp;lt;execution&amp;gt;
@@ -124,5 +124,5 @@ int main()
 
 
 ## 参照
-- [P0788R3 Standard Library Specification in a Concepts and Contracts World](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0788r3.pdf)
+- [P1673R13 A free function linear algebra interface based on the BLAS](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p1673r13.html)
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>matrix_inf_norm -- linalg : 参照と例の修正 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/matrix_inf_norm.html"/>
      <id>c8d55fb2e1546a676aa1d39c75cbc9a62c69e948:reference/linalg/matrix_inf_norm.md</id>
      <updated>2024-06-25T12:51:33+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/matrix_inf_norm.md b/reference/linalg/matrix_inf_norm.md
index 1778fffdc..4d6b49f72 100644
--- a/reference/linalg/matrix_inf_norm.md
+++ b/reference/linalg/matrix_inf_norm.md
@@ -68,7 +68,7 @@ $$
 ## 例
 **[注意] 処理系にあるコンパイラで確認していないため、間違っているかもしれません。**
 
-```cpp
+```cpp example
 #include &amp;lt;array&amp;gt;
 #include &amp;lt;cmath&amp;gt;
 #include &amp;lt;execution&amp;gt;
@@ -127,5 +127,5 @@ int main()
 
 
 ## 参照
-- [P0788R3 Standard Library Specification in a Concepts and Contracts World](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0788r3.pdf)
+- [P1673R13 A free function linear algebra interface based on the BLAS](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p1673r13.html)
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>matrix_one_norm -- linalg : 参照と例の修正 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/matrix_one_norm.html"/>
      <id>c8d55fb2e1546a676aa1d39c75cbc9a62c69e948:reference/linalg/matrix_one_norm.md</id>
      <updated>2024-06-25T12:51:33+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/matrix_one_norm.md b/reference/linalg/matrix_one_norm.md
index 911754370..66ebffef0 100644
--- a/reference/linalg/matrix_one_norm.md
+++ b/reference/linalg/matrix_one_norm.md
@@ -68,7 +68,7 @@ $$
 ## 例
 **[注意] 処理系にあるコンパイラで確認していないため、間違っているかもしれません。**
 
-```cpp
+```cpp example
 #include &amp;lt;array&amp;gt;
 #include &amp;lt;cmath&amp;gt;
 #include &amp;lt;execution&amp;gt;
@@ -127,5 +127,5 @@ int main()
 
 
 ## 参照
-- [P0788R3 Standard Library Specification in a Concepts and Contracts World](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0788r3.pdf)
+- [P1673R13 A free function linear algebra interface based on the BLAS](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p1673r13.html)
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>scale -- linalg : 参照と例の修正 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/scale.html"/>
      <id>c8d55fb2e1546a676aa1d39c75cbc9a62c69e948:reference/linalg/scale.md</id>
      <updated>2024-06-25T12:51:33+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/scale.md b/reference/linalg/scale.md
index 4f44d419b..aab3496cd 100644
--- a/reference/linalg/scale.md
+++ b/reference/linalg/scale.md
@@ -66,6 +66,6 @@ $$
 
 
 ## 参照
-- [P0788R3 Standard Library Specification in a Concepts and Contracts World](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0788r3.pdf)
+- [P1673R13 A free function linear algebra interface based on the BLAS](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p1673r13.html)
 - [`LAPACK: cscal`](https://netlib.org/lapack/explore-html/d2/de8/group__scal_gacce468103c83fa18bae078d5f49fefe2.html#gacce468103c83fa18bae078d5f49fefe2)
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>setup_givens_rotation -- linalg : 参照と例の修正 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/setup_givens_rotation.html"/>
      <id>c8d55fb2e1546a676aa1d39c75cbc9a62c69e948:reference/linalg/setup_givens_rotation.md</id>
      <updated>2024-06-25T12:51:33+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/setup_givens_rotation.md b/reference/linalg/setup_givens_rotation.md
index cde2e71a9..3c6c8958e 100644
--- a/reference/linalg/setup_givens_rotation.md
+++ b/reference/linalg/setup_givens_rotation.md
@@ -82,6 +82,6 @@ $$
 
 
 ## 参照
-- [P0788R3 Standard Library Specification in a Concepts and Contracts World](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0788r3.pdf)
+- [P1673R13 A free function linear algebra interface based on the BLAS](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p1673r13.html)
 - [Working Draft Programming Languages — C++: 28 Numerics libarary](https://eel.is/c++draft/complex.numbers)
 - [LAPACK: clartg](https://netlib.org/lapack/explore-html/da/dd3/group__lartg_ga45afd4405cf6da478ce4de9576303369.html#ga45afd4405cf6da478ce4de9576303369)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>swap_elements -- linalg : 参照と例の修正 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/swap_elements.html"/>
      <id>c8d55fb2e1546a676aa1d39c75cbc9a62c69e948:reference/linalg/swap_elements.md</id>
      <updated>2024-06-25T12:51:33+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/swap_elements.md b/reference/linalg/swap_elements.md
index 630dfc91d..f87897599 100644
--- a/reference/linalg/swap_elements.md
+++ b/reference/linalg/swap_elements.md
@@ -76,6 +76,6 @@ namespace std::linalg {
 
 
 ## 参照
-- [P0788R3 Standard Library Specification in a Concepts and Contracts World](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0788r3.pdf)
+- [P1673R13 A free function linear algebra interface based on the BLAS](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p1673r13.html)
 - [`LAPACK: cswap`](https://netlib.org/lapack/explore-html/d7/d51/group__swap_ga1e8d1bbcbd0307e7a3839d0bd10e4118.html#ga1e8d1bbcbd0307e7a3839d0bd10e4118)
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>vector_abs_sum -- linalg : 参照と例の修正 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/vector_abs_sum.html"/>
      <id>c8d55fb2e1546a676aa1d39c75cbc9a62c69e948:reference/linalg/vector_abs_sum.md</id>
      <updated>2024-06-25T12:51:33+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/vector_abs_sum.md b/reference/linalg/vector_abs_sum.md
index 72543f3fa..de6983f76 100644
--- a/reference/linalg/vector_abs_sum.md
+++ b/reference/linalg/vector_abs_sum.md
@@ -73,7 +73,7 @@ $$
 ## 例
 **[注意] 処理系にあるコンパイラで確認していないため、間違っているかもしれません。**
 
-```cpp
+```cpp example
 #include &amp;lt;array&amp;gt;
 #include &amp;lt;cmath&amp;gt;
 #include &amp;lt;execution&amp;gt;
@@ -129,6 +129,6 @@ int main()
 
 
 ## 参照
-- [P0788R3 Standard Library Specification in a Concepts and Contracts World](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0788r3.pdf)
+- [P1673R13 A free function linear algebra interface based on the BLAS](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p1673r13.html)
 - [LAPACK: dzasum](https://netlib.org/lapack/explore-html/d5/d72/group__asum_gaf23444d1c822b34db864558d7afc76dd.html#gaf23444d1c822b34db864558d7afc76dd)
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>vector_abs_sum -- linalg : 参照と例の修正 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/vector_idx_abs_max.html"/>
      <id>c8d55fb2e1546a676aa1d39c75cbc9a62c69e948:reference/linalg/vector_idx_abs_max.md</id>
      <updated>2024-06-25T12:51:33+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/vector_idx_abs_max.md b/reference/linalg/vector_idx_abs_max.md
index fbf1a1be1..85a8f153b 100644
--- a/reference/linalg/vector_idx_abs_max.md
+++ b/reference/linalg/vector_idx_abs_max.md
@@ -46,7 +46,7 @@ namespace std::linalg {
 ## 例
 **[注意] 処理系にあるコンパイラで確認していないため、間違っているかもしれません。**
 
-```cpp
+```cpp example
 #include &amp;lt;array&amp;gt;
 #include &amp;lt;cmath&amp;gt;
 #include &amp;lt;execution&amp;gt;
@@ -98,7 +98,7 @@ int main()
 
 
 ## 参照
-- [P0788R3 Standard Library Specification in a Concepts and Contracts World](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0788r3.pdf)
+- [P1673R13 A free function linear algebra interface based on the BLAS](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p1673r13.html)
 - [LAPACK: icamax](https://netlib.org/lapack/explore-html/dd/d52/group__iamax_gafdf273dcc3f020e2aa5c716c1b3d7265.html#gafdf273dcc3f020e2aa5c716c1b3d7265)
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sum_of_squares_result -- linalg : 参照と例の修正 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/vector_sum_of_squares.html"/>
      <id>c8d55fb2e1546a676aa1d39c75cbc9a62c69e948:reference/linalg/vector_sum_of_squares.md</id>
      <updated>2024-06-25T12:51:33+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/vector_sum_of_squares.md b/reference/linalg/vector_sum_of_squares.md
index fbebfbbdc..880f3fd96 100644
--- a/reference/linalg/vector_sum_of_squares.md
+++ b/reference/linalg/vector_sum_of_squares.md
@@ -66,7 +66,7 @@ $$
 ## 例
 **[注意] 処理系にあるコンパイラで確認していないため、間違っているかもしれません。**
 
-```cpp
+```cpp example
 #include &amp;lt;array&amp;gt;
 #include &amp;lt;cmath&amp;gt;
 #include &amp;lt;execution&amp;gt;
@@ -137,5 +137,5 @@ int main()
 
 
 ## 参照
-- [P0788R3 Standard Library Specification in a Concepts and Contracts World](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0788r3.pdf)
+- [P1673R13 A free function linear algebra interface based on the BLAS](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p1673r13.html)
 - [LAPACK: classq](https://netlib.org/lapack/explore-html/d8/d76/group__lassq_gab70baa330cb7a13111b72aef0734e26d.html#gab70baa330cb7a13111b72aef0734e26d)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>vector_two_norm -- linalg : 参照と例の修正 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/vector_two_norm.html"/>
      <id>c8d55fb2e1546a676aa1d39c75cbc9a62c69e948:reference/linalg/vector_two_norm.md</id>
      <updated>2024-06-25T12:51:33+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/vector_two_norm.md b/reference/linalg/vector_two_norm.md
index a69f7d157..8d6c1c939 100644
--- a/reference/linalg/vector_two_norm.md
+++ b/reference/linalg/vector_two_norm.md
@@ -65,7 +65,7 @@ $$
 ## 例
 **[注意] 処理系にあるコンパイラで確認していないため、間違っているかもしれません。**
 
-```cpp
+```cpp example
 #include &amp;lt;array&amp;gt;
 #include &amp;lt;cmath&amp;gt;
 #include &amp;lt;execution&amp;gt;
@@ -121,6 +121,6 @@ int main()
 
 
 ## 参照
-- [P0788R3 Standard Library Specification in a Concepts and Contracts World](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0788r3.pdf)
+- [P1673R13 A free function linear algebra interface based on the BLAS](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p1673r13.html)
 - [LAPACK: dnrm2](https://netlib.org/lapack/explore-html/d1/d2a/group__nrm2_gab5393665c8f0e7d5de9bd1dd2ff0d9d0.html#gab5393665c8f0e7d5de9bd1dd2ff0d9d0)
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>linalg -- linalg : matrix_vector_productを追加 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg.html"/>
      <id>ac5303ab1b577a790d0f1fb277966734bdbbab17:reference/linalg.md</id>
      <updated>2024-06-25T12:50:24+09:00</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;linalg&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;linalg&lt;/span&gt;&lt;span class=&#34;cpp cpp26&#34; title=&#34;C++26で追加&#34;&gt;(C++26)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;linalg&amp;gt;&lt;/code&gt;ヘッダでは、線形代数(linear algebra)に関する基礎的な演算アルゴリズムを提供する。
ベクトルや行列の成分にアクセスするアルゴリズムは、多次元配列ビュー&lt;a href=&#34;mdspan/mdspan.html&#34;&gt; &lt;code&gt;std::mdspan&lt;/code&gt; &lt;/a&gt;を通してその要素にアクセスする。
本ヘッダが提供するエンティティは、すべて名前空間&lt;code&gt;std::linalg&lt;/code&gt;に属する。&lt;/p&gt;
&lt;p&gt;1次元データであるベクトル(vector)や2次元データである行列(matrix)に対して、線形代数分野のデファクトスタンダードとされる BLAS(Basic Linear Algebra Subprograms) 互換のアルゴリズム群、いくつかの LAPACK(Linear Algebra PACKage) 互換のアルゴリズムが提供される。
BLAS互換アルゴリズムは、演算対象データの次元数や計算オーダーに応じて3段階に区分される。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Level 1 BLAS : ベクトルーベクトルの演算&lt;/li&gt;
&lt;li&gt;Level 2 BLAS : 行列ーベクトルの演算&lt;/li&gt;
&lt;li&gt;Level 3 BLAS : 行列ー行列の演算&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例えば、2個の一般行列の積を求める&lt;code&gt;std::linalg::matrix_product&lt;/code&gt;はLevel 3 BLASルーチン&lt;code&gt;xGEMM&lt;/code&gt;に対応する。
（実際のBLASルーチン名は、浮動小数点数型の単精度&lt;code&gt;S&lt;/code&gt;／倍精度&lt;code&gt;D&lt;/code&gt;とそれぞれの複素数版&lt;code&gt;C&lt;/code&gt;,&lt;code&gt;Z&lt;/code&gt;として、プレフィックス&lt;code&gt;x&lt;/code&gt;部は文字4種類のいずれか。）&lt;/p&gt;
&lt;p&gt;また、&lt;code&gt;std::mdspan&lt;/code&gt;と組み合わせて利用する拡張機能が提供される。&lt;/p&gt;
&lt;h2&gt;共通要件&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;linalg&amp;gt;&lt;/code&gt;ヘッダが提供する演算アルゴリズムは、スカラ値およびベクトル／行列の要素型として線形代数値型(linear algebra value types)を取り扱う。&lt;/p&gt;
&lt;p&gt;線形代数値型はBLASが取り扱う&lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;&lt;a href=&#34;complex/complex.html&#34;&gt;std::complex&lt;/a&gt;&amp;lt;float&amp;gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&#34;complex/complex.html&#34;&gt;std::complex&lt;/a&gt;&amp;lt;double&amp;gt;&lt;/code&gt;をはじめ、&lt;code&gt;&lt;a href=&#34;concepts/semiregular.html&#34;&gt;semiregular&lt;/a&gt;&lt;/code&gt;のモデルであれば良い。
また、線形代数値型の値初期化は加法元（算術型であれば値&lt;code&gt;0&lt;/code&gt;）であること。&lt;/p&gt;
&lt;p&gt;プログラム定義型を利用する場合、演算アルゴリズムはカスタマイゼーションポイントとして&lt;code&gt;abs&lt;/code&gt;, &lt;code&gt;real&lt;/code&gt;, &lt;code&gt;imag&lt;/code&gt;, &lt;code&gt;conj&lt;/code&gt;を非修飾名で呼び出す。&lt;/p&gt;
&lt;h2&gt;&lt;code&gt;std::mdspan&lt;/code&gt;向け機能拡張&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/layout_blas_packed.html&#34;&gt;layout_blas_packed&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;行列要素のBLAS互換パックレイアウトに対応する&lt;a href=&#34;mdspan/LayoutMappingPolicy.html&#34;&gt;レイアウトマッピングポリシー&lt;/a&gt; (class template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/scaled_accessor.html&#34;&gt;scaled_accessor&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;scaled&lt;/code&gt;関数用の&lt;a href=&#34;mdspan/AccessorPolicy.html&#34;&gt;アクセサポリシー&lt;/a&gt; (class template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/scaled.html&#34;&gt;scaled&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;要素値をスカラー倍した読み取り専用&lt;code&gt;std::mdspan&lt;/code&gt;を作る (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/conjugated_accessor.html&#34;&gt;conjugated_accessor&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;conjugated&lt;/code&gt;関数用の&lt;a href=&#34;mdspan/AccessorPolicy.html&#34;&gt;アクセサポリシー&lt;/a&gt; (class template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/conjugated.html&#34;&gt;conjugated&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;読み取り専用の複素共役ビュー&lt;code&gt;std::mdspan&lt;/code&gt;を作る (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/layout_transpose.html&#34;&gt;layout_transpose&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;transposed&lt;/code&gt;関数用の&lt;a href=&#34;mdspan/LayoutMappingPolicy.html&#34;&gt;レイアウトマッピングポリシー&lt;/a&gt; (class template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/transposed.html&#34;&gt;transposed&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;2次元&lt;code&gt;std::mdspan&lt;/code&gt;の行列転置ビューを作る (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/conjugate_transposed.html&#34;&gt;conjugate_transposed&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;読み取り専用の複素共役転置ビュー&lt;code&gt;std::mdspan&lt;/code&gt;を作る (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;BLASの要件&lt;/h2&gt;
&lt;p&gt;BLAS 1, 2, 3のアルゴリズムでテンプレートパラメータが特に制約されていない場合、テンプレートパラメータの名前によって以下の制約を満たすとする。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;制約&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ExecutionPolicy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;is_execution_policy&amp;lt;ExecutionPolicy&amp;gt;::value == true&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Real&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;complex&amp;lt;Real&amp;gt;&lt;/code&gt;が規定できる型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Triangle&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;upper_triangle_t&lt;/code&gt;または&lt;code&gt;lower_triangle_t&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DiagonalStorage&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;implicit_unit_diagonal_t&lt;/code&gt;または&lt;code&gt;implicit_unit_diagonal_t&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;BLAS 1アルゴリズム&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;std::mpspan&lt;/code&gt;をパラメータに持つ、この節の全てのアルゴリズムの計算量は渡された&lt;code&gt;std::mdspan&lt;/code&gt;の&lt;code&gt;extents&lt;/code&gt;の積の最大値、つまりベクトルや行列の要素数の最大値に線形である。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/setup_givens_rotation_result.html&#34;&gt;setup_givens_rotation_result&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;setup_givens_rotation&lt;/code&gt;の結果型 (class template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/setup_givens_rotation.html&#34;&gt;setup_givens_rotation&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xLARTG: ギブンス回転をセットアップする (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/apply_givens_rotation.html&#34;&gt;apply_givens_rotation&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xROT: ベクトルにギブンス回転を適用する (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/swap_elements.html&#34;&gt;swap_elements&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xSWAP: 2つのベクトル／行列の要素を交換する (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/scale.html&#34;&gt;scale&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xSCAL: ベクトル／行列の要素にスカラ値を乗算する (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/copy.html&#34;&gt;copy&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xCOPY: ベクトル／行列の要素をコピーする (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/add.html&#34;&gt;add&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xAXPY: 2つのベクトル／行列の要素を加算する (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/dot.html&#34;&gt;dot&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xDOT, xDOTU: 2つのベクトルのドット積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/dotc.html&#34;&gt;dotc&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xDOTC: 2つのベクトルの複素共役ドット積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/sum_of_squares_result.html&#34;&gt;sum_of_squares_result&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vector_sum_of_squares&lt;/code&gt;の結果型 (class template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/vector_sum_of_squares.html&#34;&gt;vector_sum_of_squares&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xLASSQ: ベクトル要素の平方和を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/vector_two_norm.html&#34;&gt;vector_two_norm&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xNRM2: ベクトルのユークリッドノルム(Euclidean norm)を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/vector_abs_sum.html&#34;&gt;vector_abs_sum&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xASUM: ベクトル要素の絶対値和を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/vector_idx_abs_max.html&#34;&gt;vector_idx_abs_max&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xIAMAX: ベクトル要素のうち最大絶対値インデクスを返す (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/matrix_frob_norm.html&#34;&gt;matrix_frob_norm&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;行列のフロベニウスノルム(Frobenius norm)を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/matrix_one_norm.html&#34;&gt;matrix_one_norm&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;行列の1ノルム(One norm)を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/matrix_inf_norm.html&#34;&gt;matrix_inf_norm&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;行列の無限大ノルム(Infinity norm)を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;BLAS 2アルゴリズム&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/matrix_vector_product.html&#34;&gt;matrix_vector_product&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xGEMV: 一般行列とベクトルの積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;symmetric_matrix_vector_product&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xSYMV: 対称行列とベクトルの積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hermitian_matrix_vector_product&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xHEMV: ハミルトニアン行列とベクトルの積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;triangular_matrix_vector_product&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xTRMV: 三角行列とベクトルの積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;triangular_matrix_vector_solve&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xTRSV: 三角行列を係数とする行列方程式を解く (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;matrix_rank_1_update&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xGER, xGERU: 行列のRank-1更新 (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;matrix_rank_1_update_c&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xGERC: 複素行列のRank-1更新 (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;symmetric_matrix_rank_1_update&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xSYR: 対称行列のRank-1更新 (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hermitian_matrix_rank_1_update&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xHER: ハミルトニアン行列のRank-1更新 (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;symmetric_matrix_rank_2_update&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xSYR2: 対称行列のRank-2更新 (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hermitian_matrix_rank_2_update&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xHER2: ハミルトニアン行列のRank-2更新 (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;BLAS 3アルゴリズム&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;matrix_product&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xGEMM: 2つの一般行列の積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;symmetric_matrix_product&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xSYMM: 対称行列と行列の積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hermitian_matrix_product&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xHEMM: ハミルトニアン行列と行列の積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;triangular_matrix_product&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xTRMM: 三角行列と行列の積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;triangular_matrix_left_product&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xTRMM: In-placeに三角行列と行列の積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;triangular_matrix_right_product&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xTRMM: In-placeに三角行列と行列の積を求める (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;symmetric_matrix_rank_k_update&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xSYRK: 対称行列のRank-k更新 (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hermitian_matrix_rank_k_update&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xHERK: ハミルトニアン行列のRank-k更新 (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;symmetric_matrix_rank_2k_update&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xSYR2K: 対称行列のRank-2k更新 (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hermitian_matrix_rank_2k_update&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xHER2K: ハミルトニアン行列のRank-2k更新 (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;triangular_matrix_matrix_left_solve&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xTRSM: 三角行列の連立一次方程式を解く (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;triangular_matrix_matrix_right_solve&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;xTRSM: 三角行列の連立一次方程式を解く (function template)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;タグ&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;linalg&amp;gt;&lt;/code&gt;ヘッダでは、行列の格納順序や三角行列の上下をタグを使って表現している。&lt;/p&gt;
&lt;h3&gt;格納順序&lt;/h3&gt;
&lt;p&gt;行列の格納順序を表すタグ。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/column_major_t.html&#34;&gt;column_major_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;列優先(column-major)を表すタグ型&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/column_major_t.html&#34;&gt;column_major&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;列優先(column-major)を表すタグ値&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/row_major_t.html&#34;&gt;row_major_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;行優先(row-major)を表すタグ型&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/row_major_t.html&#34;&gt;row_major&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;行優先(row-major)を表すタグ値&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;三角行列&lt;/h3&gt;
&lt;p&gt;上三角行列か下三角行列かを表すタグ。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/upper_triangle_t.html&#34;&gt;upper_triangle_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;上三角行列を表すタグ型&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/upper_triangle_t.html&#34;&gt;upper_triangle&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;上三角行列を表すタグ値&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/lower_triangle_t.html&#34;&gt;lower_triangle_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;下三角行列を表すタグ型&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/lower_triangle_t.html&#34;&gt;lower_triangle&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;下三角行列を表すタグ値&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;対角成分&lt;/h3&gt;
&lt;p&gt;行列の全ての対角成分を暗黙に乗法における単位元とみなすかどうかを表すタグ。みなした場合、行列の対角成分にはアクセスせず、値が乗法における単位元であるとして計算する。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/implicit_unit_diagonal_t.html&#34;&gt;implicit_unit_diagonal_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;全ての対角成分を暗黙に乗法における単位元とみなすタグ型&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/implicit_unit_diagonal_t.html&#34;&gt;implicit_unit_diagonal&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;全ての対角成分を暗黙に乗法における単位元とみなすタグ値&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/explicit_diagonal_t.html&#34;&gt;explicit_diagonal_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;全ての対角成分にアクセスするタグ型&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;linalg/explicit_diagonal_t.html&#34;&gt;explicit_diagonal&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;全ての対角成分にアクセスするタグ値&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++26&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;関連項目&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;mdspan.html&#34;&gt;&amp;lt;mdspan&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p1673r13.html&#34; target=&#34;_blank&#34;&gt;P1673R13 A free function linear algebra interface based on the BLAS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p1674r2.html&#34; target=&#34;_blank&#34;&gt;P1674R2: Evolving a Standard C++ Linear Algebra Library from the BLAS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/CppCon/CppCon2023/blob/main/Presentations/stdlinalg_linear_algebra_coming_to_standard_cpp.pdf&#34; target=&#34;_blank&#34;&gt;std::linalg: Linear Algebra Coming to Standard C++&lt;/a&gt;, CppCon 2023&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.netlib.org/blas/&#34; target=&#34;_blank&#34;&gt;BLAS (Basic Linear Algebra Subprograms)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://eel.is/c++draft/complex.numbers&#34; target=&#34;_blank&#34;&gt;Numerics library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>matrix_vector_product -- linalg : matrix_vector_productを追加 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/matrix_vector_product.html"/>
      <id>ac5303ab1b577a790d0f1fb277966734bdbbab17:reference/linalg/matrix_vector_product.md</id>
      <updated>2024-06-25T12:50:24+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/matrix_vector_product.md b/reference/linalg/matrix_vector_product.md
new file mode 100644
index 000000000..615ddbce5
--- /dev/null
+++ b/reference/linalg/matrix_vector_product.md
@@ -0,0 +1,200 @@
+# matrix_vector_product
+
+
+* [mathjax enable]
+* linalg[meta header]
+* function template[meta id-type]
+* std::linalg[meta namespace]
+* cpp26[meta cpp]
+
+
+```cpp
+namespace std::linalg {
+  template&amp;lt;in-matrix InMat,
+           in-vector InVec,
+           out-vector OutVec&amp;gt;
+  void matrix_vector_product(InMat A,
+                             InVec x,
+                             OutVec y);
+
+  template&amp;lt;class ExecutionPolicy,
+           in-matrix InMat,
+           in-vector InVec,
+           out-vector OutVec&amp;gt;
+  void matrix_vector_product(ExecutionPolicy&amp;amp;&amp;amp; exec,
+                             InMat A,
+                             InVec x,
+                             OutVec y);
+
+  template&amp;lt;in-matrix InMat,
+           in-vector InVec1,
+           in-vector InVec2,
+           out-vector OutVec&amp;gt;
+  void matrix_vector_product(InMat A,
+                             InVec1 x,
+                             InVec2 y,
+                             OutVec z);
+
+  template&amp;lt;class ExecutionPolicy,
+           in-matrix InMat,
+           in-vector InVec1,
+           in-vector InVec2,
+           out-vector OutVec&amp;gt;
+  void matrix_vector_product(ExecutionPolicy&amp;amp;&amp;amp; exec,
+                             InMat A,
+                             InVec1 x,
+                             InVec2 y,
+                             OutVec z);
+}
+```
+
+
+## 概要
+(ここには、関数・変数・定数の概要を記述します。必須事項です。)
+
+(必要な項目を省略する場合には、「(執筆中)」と書いておいてください。)
+
+
+## テンプレートパラメータ制約
+(ここには、関数がオーバーロード解決に参加するための条件を記載します。SFINAE-friendlyな関数の条件、制約テンプレートによるオーバーロードの条件などを記載します。)
+
+
+## 適格要件
+- (1), (2), (3), (4): [`possibly-multipliable`](possibly-multipliable.md)`&amp;lt;decltype(A), decltype(x), decltype(y)&amp;gt;()`が`true`
+- (3), (4): [`possibly-addable`](possibly-addable.md)`&amp;lt;decltype(x),decltype(y),decltype(z)&amp;gt;()`が`true`
+
+
+## 事前条件
+- (1), (2), (3), (4): [`multipliable`](multipliable.md)`(A,x,y) == true`
+- (3), (4): [`addable`](addable.md)`(x, y, z) == true`
+
+
+## 効果
+- (1), (2): $y \leftarrow Ax$
+- (3), (4): $z \leftarrow y + Ax$
+
+
+## 戻り値
+なし
+
+
+## 計算量
+$O(\verb|A.extent(1)|\times \verb|x.extent(0)|)$
+
+
+## 備考
+- (3), (4): `z`に`y`を入れても良い。
+
+
+## 例
+```cpp example
+#include &amp;lt;array&amp;gt;
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;linalg&amp;gt;
+#include &amp;lt;mdspan&amp;gt;
+#include &amp;lt;vector&amp;gt;
+
+template &amp;lt;class Vector&amp;gt;
+void print(const Vector&amp;amp; v, const std::string&amp;amp; name) {
+  for (int i = 0; i &amp;lt; v.extent(0); ++i) {
+    std::cout &amp;lt;&amp;lt; name &amp;lt;&amp;lt; &amp;#34;[&amp;#34; &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &amp;#34;]&amp;#34; &amp;lt;&amp;lt; &amp;#34; = &amp;#34; &amp;lt;&amp;lt; v[i] &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
+  }
+}
+
+int main()
+{
+  constexpr size_t N = 4;
+  constexpr size_t M = 2;
+
+  std::vector&amp;lt;double&amp;gt; A_vec(N*M);
+  std::vector&amp;lt;double&amp;gt; x_vec(M);
+  std::array&amp;lt;double, N&amp;gt; y_vec, z_vec;
+
+  std::mdspan A(A_vec.data(), N, M);
+  std::mdspan x(x_vec.data(), M);
+  std::mdspan y(y_vec.data(), N);
+  std::mdspan z(z_vec.data(), N);
+
+  for(int i = 0; i &amp;lt; A.extent(0); ++i) {
+    for(int j = 0; j &amp;lt; A.extent(1); ++j) {
+      A[i,j] = 100.0 * i + j;
+    }
+  }
+
+  for(int j = 0; j &amp;lt; x.extent(0); ++j) {
+    x[j] = 1.0 * j;
+  }
+  for(int i = 0; i &amp;lt; y.extent(0); ++i) {
+    y[i] = -1.0 * i;
+  }
+
+  // (1)
+  std::cout &amp;lt;&amp;lt; &amp;#34;(1)\n&amp;#34;;
+  std::linalg::matrix_vector_product(A, x, y);
+  print(y, &amp;#34;y&amp;#34;);
+
+  // (2)
+  std::cout &amp;lt;&amp;lt; &amp;#34;(2)\n&amp;#34;;
+  std::linalg::matrix_vector_product(std::execution::par, A, x, y);
+  print(y, &amp;#34;y&amp;#34;);
+
+  // (3)
+  std::cout &amp;lt;&amp;lt; &amp;#34;(3)\n&amp;#34;;
+  std::linalg::matrix_vector_product(A, x, y, z);
+  print(z, &amp;#34;z&amp;#34;);
+
+  // (4)
+  std::cout &amp;lt;&amp;lt; &amp;#34;(4)\n&amp;#34;;
+  std::linalg::matrix_vector_product(std::execution::par, A, x, y, z);
+  print(z, &amp;#34;z&amp;#34;);
+
+  return 0;
+}
+```
+
+
+### 出力
+```
+(1)
+y[0] = 1
+y[1] = 101
+y[2] = 201
+y[3] = 301
+(2)
+y[0] = 1
+y[1] = 101
+y[2] = 201
+y[3] = 301
+(3)
+z[0] = 2
+z[1] = 202
+z[2] = 402
+z[3] = 602
+(4)
+z[0] = 2
+z[1] = 202
+z[2] = 402
+z[3] = 602
+```
+
+
+## バージョン
+### 言語
+- C++11
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
+
+
+## 関連項目
+- [`execution`](/reference/execution.md)
+- [`mdspan`](/reference/mdspan.md)
+
+
+## 参照
+- [P1673R13 A free function linear algebra interface based on the BLAS](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p1673r13.html)
+- [LAPACK: cgemv](https://netlib.org/lapack/explore-html/d7/dda/group__gemv_ga44c85a0d7ecd60a6bc8ca27b222d7792.html#ga44c85a0d7ecd60a6bc8ca27b222d7792)
+
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>multipliable -- linalg : matrix_vector_productを追加 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/multipliable.html"/>
      <id>ac5303ab1b577a790d0f1fb277966734bdbbab17:reference/linalg/multipliable.md</id>
      <updated>2024-06-25T12:50:24+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/multipliable.md b/reference/linalg/multipliable.md
new file mode 100644
index 000000000..71e745323
--- /dev/null
+++ b/reference/linalg/multipliable.md
@@ -0,0 +1,65 @@
+# multipliable
+
+* linalg[meta header]
+* function template[meta id-type]
+* std::linalg[meta namespace]
+* cpp26[meta cpp]
+
+
+```cpp
+namespace std::linalg {
+  constexpr bool multipliable(
+    const in-matrix auto&amp;amp; in_mat,
+    const in-vector auto&amp;amp; in_vec,
+    const in-vector auto&amp;amp; out_vec)
+  {
+    return out_vec.extent(0) == in_mat.extent(0) &amp;amp;&amp;amp;
+           in_mat.extent(1) == in_vec.extent(0);
+  } // (1)
+
+  constexpr bool multipliable(
+    const in-vector auto&amp;amp; in_vec,
+    const in-matrix auto&amp;amp; in_mat,
+    const in-vector auto&amp;amp; out_vec)
+  {
+    return out_vec.extent(0) == in_mat.extent(1) &amp;amp;&amp;amp;
+           in_mat.extent(0) == in_vec.extent(0);
+  } // (2)
+
+  constexpr bool multipliable(
+    const in-matrix auto&amp;amp; in_mat1,
+    const in-matrix auto&amp;amp; in_mat2,
+    const in-matrix auto&amp;amp; out_mat)
+  {
+    return out_mat.extent(0) == in_mat1.extent(0) &amp;amp;&amp;amp;
+           out_mat.extent(1) == in_mat2.extent(1) &amp;amp;&amp;amp;
+           in1_mat.extent(1) == in_mat2.extent(0);
+  } // (3)
+}
+```
+
+
+## 概要
+テンプレートパラメータに指定されたベクトルや行列が掛けられるかを静的要素数で判定する、説明専用の関数である。
+
+
+## 戻り値
+`InMat`型の変数を`A`, `InVec`型の変数を`x`, `OutVec`型の変数を`y`とする。
+- (1): $y \leftarrow Ax$が可能なら`true`、そうでないなら`false`
+- (2): $y^t \leftarrow x^t A$が可能なら`true`、そうでないなら`false`
+- (3): `InMat1`型の変数を`A`, `InMat2`型の変数を`B`, `OutMat`型の変数`C`とすると、$C \leftarrow AB$が可能なら`true`、そうでないなら`false`
+
+
+## バージョン
+### 言語
+- C++26
+
+
+## 関連項目
+- [`mdspan`](/reference/mdspan.md)
+
+
+## 参照
+- [P1673R13 A free function linear algebra interface based on the BLAS](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p1673r13.html)
+
+
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>possibly-multipliable -- linalg : matrix_vector_productを追加 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/possibly-multipliable.html"/>
      <id>ac5303ab1b577a790d0f1fb277966734bdbbab17:reference/linalg/possibly-multipliable.md</id>
      <updated>2024-06-25T12:50:24+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/possibly-multipliable.md b/reference/linalg/possibly-multipliable.md
new file mode 100644
index 000000000..296e35954
--- /dev/null
+++ b/reference/linalg/possibly-multipliable.md
@@ -0,0 +1,59 @@
+# possibly-multipliable
+
+* linalg[meta header]
+* function template[meta id-type]
+* std::linalg[meta namespace]
+* cpp26[meta cpp]
+
+
+```cpp
+namespace std::linalg {
+  template&amp;lt;in-matrix InMat, in-vector InVec, in-vector OutVec&amp;gt;
+  constexpr bool possibly-multipliable()
+  {
+    return compatible-static-extents&amp;lt;OutVec, InMat&amp;gt;(0, 0) &amp;amp;&amp;amp;
+           compatible-static-extents&amp;lt;InMat, InVec&amp;gt;(1, 0);
+  } // (1)
+
+  template&amp;lt;in-vector InVec, in-matrix InMat, in-vector OutVec&amp;gt;
+  constexpr bool possibly-multipliable()
+  {
+    return compatible-static-extents&amp;lt;OutVec, InMat&amp;gt;(0, 1) &amp;amp;&amp;amp;
+           compatible-static-extents&amp;lt;InMat, InVec&amp;gt;(0, 0);
+  } // (2)
+
+  template&amp;lt;in-matrix InMat1, in-matrix InMat2, in-matrix OutMat&amp;gt;
+  constexpr bool possibly-multipliable()
+  {
+    return compatible-static-extents&amp;lt;OutMat, InMat1&amp;gt;(0, 0) &amp;amp;&amp;amp;
+           compatible-static-extents&amp;lt;OutMat, InMat2&amp;gt;(1, 1) &amp;amp;&amp;amp;
+           compatible-static-extents&amp;lt;InMat1, InMat2&amp;gt;(1, 0);
+  } // (3)
+}
+```
+
+
+## 概要
+テンプレートパラメータに指定されたベクトルや行列が掛けられるかを静的要素数で判定する、説明専用の関数である。
+
+
+## 戻り値
+`InMat`型の変数を`A`, `InVec`型の変数を`x`, `OutVec`型の変数を`y`とする。
+- (1): $y \leftarrow Ax$が可能なら`true`、そうでないなら`false`
+- (2): $y^t \leftarrow x^t A$が可能なら`true`、そうでないなら`false`
+- (3): `InMat1`型の変数を`A`, `InMat2`型の変数を`B`, `OutMat`型の変数`C`とすると、$C \leftarrow AB$が可能なら`true`、そうでないなら`false`
+
+
+## バージョン
+### 言語
+- C++26
+
+
+## 関連項目
+- [`mdspan`](/reference/mdspan.md)
+
+
+## 参照
+- [P1673R13 A free function linear algebra interface based on the BLAS](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p1673r13.html)
+
+
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>error_code -- fix typo</title>
      <link href="https://cpprefjp.github.io/reference/system_error/error_code.html"/>
      <id>ce9c6a00eac7366a389310f2418f295369daeda2:reference/system_error/error_code.md</id>
      <updated>2024-06-24T18:48:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/system_error/error_code.md b/reference/system_error/error_code.md
index 80bd48084..97fc793b5 100644
--- a/reference/system_error/error_code.md
+++ b/reference/system_error/error_code.md
@@ -13,7 +13,7 @@ namespace std {
 ## 概要
 `error_code`は、OSのAPIで発生するエラー値およびそのエラーメッセージを扱うクラスである。
 
-このクラス主に、[`system_error`](system_error.md)例外クラスに付加する情報として使用する。
+このクラスは主に、[`system_error`](system_error.md)例外クラスに付加する情報として使用する。
 
 
 ## メンバ関数
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>I</name>
        <email>1091761+wx257osn2@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>matrix_frob_norm -- linalg : mdspanの成分へのアクセスを修正 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/matrix_frob_norm.html"/>
      <id>0512389eb0396ecf5f9388d793a63664ef867e0d:reference/linalg/matrix_frob_norm.md</id>
      <updated>2024-06-23T14:33:24+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/matrix_frob_norm.md b/reference/linalg/matrix_frob_norm.md
index 44e67ef2a..93bc6b362 100644
--- a/reference/linalg/matrix_frob_norm.md
+++ b/reference/linalg/matrix_frob_norm.md
@@ -84,7 +84,7 @@ int main()
 
   for(int i = 0; i &amp;lt; A.extent(0); ++i) {
     for(int j = 0; j &amp;lt; A.extent(1); ++j) {
-      A(i,j) = ((i + j) % 2 == 0 ? 1.0 : -1.0) / (i * A.extent(1) + j + 1);
+      A[i,j] = ((i + j) % 2 == 0 ? 1.0 : -1.0) / (i * A.extent(1) + j + 1);
     }
   }
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>matrix_inf_norm -- linalg : mdspanの成分へのアクセスを修正 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/matrix_inf_norm.html"/>
      <id>0512389eb0396ecf5f9388d793a63664ef867e0d:reference/linalg/matrix_inf_norm.md</id>
      <updated>2024-06-23T14:33:24+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/matrix_inf_norm.md b/reference/linalg/matrix_inf_norm.md
index 328b5093d..1778fffdc 100644
--- a/reference/linalg/matrix_inf_norm.md
+++ b/reference/linalg/matrix_inf_norm.md
@@ -87,7 +87,7 @@ int main()
 
   for(int i = 0; i &amp;lt; A.extent(0); ++i) {
     for(int j = 0; j &amp;lt; A.extent(1); ++j) {
-      A(i,j) = ((i + j) % 2 == 0 ? 1.0 : -1.0) / (i * A.extent(1) + j + 1);
+      A[i,j] = ((i + j) % 2 == 0 ? 1.0 : -1.0) / (i * A.extent(1) + j + 1);
     }
   }
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>matrix_one_norm -- linalg : mdspanの成分へのアクセスを修正 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/matrix_one_norm.html"/>
      <id>0512389eb0396ecf5f9388d793a63664ef867e0d:reference/linalg/matrix_one_norm.md</id>
      <updated>2024-06-23T14:33:24+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/matrix_one_norm.md b/reference/linalg/matrix_one_norm.md
index 10fd69e87..911754370 100644
--- a/reference/linalg/matrix_one_norm.md
+++ b/reference/linalg/matrix_one_norm.md
@@ -87,7 +87,7 @@ int main()
 
   for(int i = 0; i &amp;lt; A.extent(0); ++i) {
     for(int j = 0; j &amp;lt; A.extent(1); ++j) {
-      A(i,j) = ((i + j) % 2 == 0 ? 1.0 : -1.0) / (i * A.extent(1) + j + 1);
+      A[i,j] = ((i + j) % 2 == 0 ? 1.0 : -1.0) / (i * A.extent(1) + j + 1);
     }
   }
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>vector_abs_sum -- linalg : mdspanの成分へのアクセスを修正 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/vector_abs_sum.html"/>
      <id>0512389eb0396ecf5f9388d793a63664ef867e0d:reference/linalg/vector_abs_sum.md</id>
      <updated>2024-06-23T14:33:24+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/vector_abs_sum.md b/reference/linalg/vector_abs_sum.md
index efb733751..72543f3fa 100644
--- a/reference/linalg/vector_abs_sum.md
+++ b/reference/linalg/vector_abs_sum.md
@@ -89,7 +89,9 @@ int main()
 
   std::mdspan v(vec.data(), N);
 
-  for(int i = 0; i &amp;lt; v.extent(0); ++i) v(i) = std::pow(-1.0, i) / (i + 1);
+  for(int i = 0; i &amp;lt; v.extent(0); ++i) {
+    v[i] = std::pow(-1.0, i) / (i + 1);
+  }
 
   std::cout &amp;lt;&amp;lt; std::linalg::vector_abs_sum(v, -5.0 / 6) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;                      // (1)
             &amp;lt;&amp;lt; std::linalg::vector_abs_sum(std::execution::par, v, -5.0 / 6) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39; // (2)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>vector_abs_sum -- linalg : mdspanの成分へのアクセスを修正 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/vector_idx_abs_max.html"/>
      <id>0512389eb0396ecf5f9388d793a63664ef867e0d:reference/linalg/vector_idx_abs_max.md</id>
      <updated>2024-06-23T14:33:24+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/vector_idx_abs_max.md b/reference/linalg/vector_idx_abs_max.md
index f43aeb0e7..fbf1a1be1 100644
--- a/reference/linalg/vector_idx_abs_max.md
+++ b/reference/linalg/vector_idx_abs_max.md
@@ -63,7 +63,7 @@ int main()
   std::mdspan v(vec.data(), N);
 
   for(int i = 0; i &amp;lt; v.extent(0); ++i) {
-    v(i) = std::pow(-1.0, i) / (i + 1);
+    v[i] = std::pow(-1.0, i) / (i + 1);
   }
 
   std::cout &amp;lt;&amp;lt; std::linalg::vector_idx_abs_max(v) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;                       // (1)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sum_of_squares_result -- linalg : mdspanの成分へのアクセスを修正 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/vector_sum_of_squares.html"/>
      <id>0512389eb0396ecf5f9388d793a63664ef867e0d:reference/linalg/vector_sum_of_squares.md</id>
      <updated>2024-06-23T14:33:24+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/vector_sum_of_squares.md b/reference/linalg/vector_sum_of_squares.md
index 564216e6d..fbebfbbdc 100644
--- a/reference/linalg/vector_sum_of_squares.md
+++ b/reference/linalg/vector_sum_of_squares.md
@@ -90,7 +90,7 @@ int main()
   std::mdspan v(vec.data(), N);
 
   for(int i = 0; i &amp;lt; v.extent(0); ++i) {
-    v(i) = std::pow(-1.0, i) / (i + 1);
+    v[i] = std::pow(-1.0, i) / (i + 1);
   }
 
   auto init = std::linalg::sum_of_squares_result&amp;lt;double&amp;gt;{.scaling_factor = 1.0 / 5,
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>vector_two_norm -- linalg : mdspanの成分へのアクセスを修正 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/vector_two_norm.html"/>
      <id>0512389eb0396ecf5f9388d793a63664ef867e0d:reference/linalg/vector_two_norm.md</id>
      <updated>2024-06-23T14:33:24+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/vector_two_norm.md b/reference/linalg/vector_two_norm.md
index 5cc9d1a7f..a69f7d157 100644
--- a/reference/linalg/vector_two_norm.md
+++ b/reference/linalg/vector_two_norm.md
@@ -82,7 +82,7 @@ int main()
   std::mdspan v(vec.data(), N);
 
   for(int i = 0; i &amp;lt; v.extent(0); ++i) {
-    v(i) = std::pow(-1.0, i) / (i + 1);
+    v[i] = std::pow(-1.0, i) / (i + 1);
   }
 
   std::cout &amp;lt;&amp;lt; std::linalg::vector_two_norm(v, 1.0 / 5) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;                      // (1)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>dotc -- linalg : dotcに例を追加 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/dotc.html"/>
      <id>7cad8290373b2d9f64cc35f8edd7dbc666422034:reference/linalg/dotc.md</id>
      <updated>2024-06-23T14:30:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/dotc.md b/reference/linalg/dotc.md
index e5c920564..4ca16f3f2 100644
--- a/reference/linalg/dotc.md
+++ b/reference/linalg/dotc.md
@@ -78,9 +78,51 @@ $$
 
 
 ## 例
+**[注意] 処理系にあるコンパイラで確認していないため、間違っているかもしれません。**
+
+```cpp
+#include &amp;lt;cmath&amp;gt;
+#include &amp;lt;complex&amp;gt;
+#include &amp;lt;execution&amp;gt;
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;linalg&amp;gt;
+#include &amp;lt;mdspan&amp;gt;
+#include &amp;lt;numbers&amp;gt;
+#include &amp;lt;vector&amp;gt;
+
+int main()
+{
+  constexpr size_t N = 4;
+
+  std::vector&amp;lt;std::complex&amp;lt;double&amp;gt;&amp;gt; a_vec(N);
+  std::mdspan a(a_vec.data(), N);
+
+  for(int i = 0; i &amp;lt; a.extent(0); ++i) {
+    auto sign = i % 2 == 0 ? 1.0 : -1.0;
+    a[i].real(sign / (2 * i + 1));
+    a[i].imag(-sign / (2 * (i + 1)));
+  }
+
+  std::vector&amp;lt;std::complex&amp;lt;double&amp;gt;&amp;gt; b_vec(a_vec);
+  std::mdspan b(b_vec.data(), N);
+
+  std::cout &amp;lt;&amp;lt; std::linalg::dotc(a, b, std::complex&amp;lt;double&amp;gt;(-std::numbers::pi * std::numbers::pi / 6, 0)) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;                      // (1)
+            &amp;lt;&amp;lt; std::linalg::dotc(std::execution::par, a, b, std::complex&amp;lt;double&amp;gt;(-std::numbers::pi * std::numbers::pi / 6, 0)) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39; // (2)
+            &amp;lt;&amp;lt; std::linalg::dotc(a, b) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;                                // (3)
+            &amp;lt;&amp;lt; std::linalg::dotc(std::execution::par, a, b) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;          // (4)
+
+  return 0;
+}
+```
 
 
 ### 出力
+```
+(-0.117512,-4.62593e-19)
+(-0.117512,0)
+(1.52742,-4.62593e-19)
+(1.52742,0)
+```
 
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
</feed>
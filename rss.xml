<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2022-11-23T14:41:08.143089</updated>
  <id>91a6dec9-8f07-453e-983b-bc67d151a99d</id>

  
    <entry>
      <title>basic_common_reference -- basic_common_reference : 不用になった説明を削除、参考リンク追加</title>
      <link href="https://cpprefjp.github.io/reference/type_traits/basic_common_reference.html"/>
      <id>4d73a1a9500189ecc4524b2d03c33d065d33ddf6:reference/type_traits/basic_common_reference.md</id>
      <updated>2022-11-23T16:46:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/type_traits/basic_common_reference.md b/reference/type_traits/basic_common_reference.md
index 7a71022da..9bef863b6 100644
--- a/reference/type_traits/basic_common_reference.md
+++ b/reference/type_traits/basic_common_reference.md
@@ -20,8 +20,7 @@ namespace std {
 `basic_common_reference`は以下の条件を満たす場合に、型`T, U`を対象に取るものに限ってユーザー定義の特殊化が許可されている（`TQual, UQual`に対しては特殊化してはならない）。
 
 - `T, U`の少なくとも片方はプログラム定義型に依存している
-    - プログラム定義型とは、標準ライブラリの型を除いた、ユーザーによって定義された型のこと
-	- 「プログラム定義型に依存している」とは例えば、プログラム定義型に対する`vector`等の特殊化のこと
+    - 「プログラム定義型に依存している」とは例えば、プログラム定義型に対する`vector`等の特殊化のこと
 - `T, U`に対する[`decay`](/reference/type_traits/decay.md)の適用はともに恒等写像となる
     - `T, U`はともに配列型ではなく
     - `T, U`はともに関数型でもなく
@@ -96,3 +95,5 @@ int main()
 ## 参照
 
 - [P0898R3 Standard Library Concepts](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0898r3.pdf)
+- [P2665R0 `common_reference_t`` of reference_wrapper` Should Be a Reference Type](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p2655r0.html)
+    - `T&amp;amp;`と`reference_wrapper&amp;lt;T&amp;gt;`の`common_reference`を`T&amp;amp;`にするための`basic_common_reference`特殊化の例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>forward_list -- forward_list / list : データ構造の概要を追加</title>
      <link href="https://cpprefjp.github.io/reference/forward_list/forward_list.html"/>
      <id>0d00450291cb41518132c98de2dca58be81a1011:reference/forward_list/forward_list.md</id>
      <updated>2022-11-22T14:00:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/forward_list/forward_list.md b/reference/forward_list/forward_list.md
index ab285fd05..9a11827aa 100644
--- a/reference/forward_list/forward_list.md
+++ b/reference/forward_list/forward_list.md
@@ -19,6 +19,8 @@ namespace std {
 * polymorphic_allocator[link /reference/memory_resource/polymorphic_allocator.md]
 
 ## 概要
+`forward_list`は、単方向リンクリストのデータ構造をもつクラスである。
+
 `forward_list`は、標準ライブラリではシーケンスコンテナの一種として定義されるが、いくつかの点でシーケンスコンテナの要件を満たさない：
 
 - `size()`メンバ関数を提供しない。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>list -- forward_list / list : データ構造の概要を追加</title>
      <link href="https://cpprefjp.github.io/reference/list/list.html"/>
      <id>0d00450291cb41518132c98de2dca58be81a1011:reference/list/list.md</id>
      <updated>2022-11-22T14:00:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/list/list.md b/reference/list/list.md
index 849d9a1a5..e7f25943a 100644
--- a/reference/list/list.md
+++ b/reference/list/list.md
@@ -18,6 +18,8 @@ namespace std {
 * polymorphic_allocator[link /reference/memory_resource/polymorphic_allocator.md]
 
 ## 概要
+`forward_list`は、双方向リンクリストのデータ構造をもつクラスである。
+
 任意の位置への挿入や削除を定数時間で行う事が出来るが、高速なランダムアクセスは出来ず、常にシーケンシャルアクセスを行う必要がある。
 
 テンプレートパラメータは、以下を意味する：
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>totally_ordered -- Merge pull request #1008 from tomolatoon/tomolatoon</title>
      <link href="https://cpprefjp.github.io/reference/concepts/totally_ordered.html"/>
      <id>caed062319b9a46b56a5ad8b612b2b99e211d9ca:reference/concepts/totally_ordered.md</id>
      <updated>2022-11-21T11:36:00+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/concepts/totally_ordered.md b/reference/concepts/totally_ordered.md
index 2bacae631..c2148ab63 100644
--- a/reference/concepts/totally_ordered.md
+++ b/reference/concepts/totally_ordered.md
@@ -6,7 +6,7 @@
 
 ```cpp
 namespace std {
-  template&amp;lt;class T, class U&amp;gt;
+  template&amp;lt;class T&amp;gt;
   concept totally_ordered =
     equality_comparable&amp;lt;T&amp;gt; &amp;amp;&amp;amp;
     partially-ordered-with&amp;lt;T, T&amp;gt;;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>acd1034</name>
        <email>48613285+acd1034@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>totally_ordered -- 本来存在しないテンプレート引数を削除</title>
      <link href="https://cpprefjp.github.io/reference/concepts/totally_ordered.html"/>
      <id>bbf160087cecd86098a78b3d452aa8864a0be9d1:reference/concepts/totally_ordered.md</id>
      <updated>2022-11-21T03:05:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/concepts/totally_ordered.md b/reference/concepts/totally_ordered.md
index 2bacae631..c2148ab63 100644
--- a/reference/concepts/totally_ordered.md
+++ b/reference/concepts/totally_ordered.md
@@ -6,7 +6,7 @@
 
 ```cpp
 namespace std {
-  template&amp;lt;class T, class U&amp;gt;
+  template&amp;lt;class T&amp;gt;
   concept totally_ordered =
     equality_comparable&amp;lt;T&amp;gt; &amp;amp;&amp;amp;
     partially-ordered-with&amp;lt;T, T&amp;gt;;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>tomolatoon</name>
        <email>tomo2000tomo170@gmail.com</email>
      </author>
    </entry>
  
</feed>
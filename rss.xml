<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2022-06-15T17:41:43.260060</updated>
  <id>040b9b64-c34a-4c65-9ab6-7d664013b0a7</id>

  
    <entry>
      <title>コンストラクタ -- fix typo</title>
      <link href="https://cpprefjp.github.io/reference/string_view/basic_string_view/op_constructor.html"/>
      <id>6b68c40a6b039873a0f713bfe77b8bfabf94f350:reference/string_view/basic_string_view/op_constructor.md</id>
      <updated>2022-06-16T02:37:28+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string_view/basic_string_view/op_constructor.md b/reference/string_view/basic_string_view/op_constructor.md
index 37c4358cb..4e1c60b05 100644
--- a/reference/string_view/basic_string_view/op_constructor.md
+++ b/reference/string_view/basic_string_view/op_constructor.md
@@ -25,7 +25,7 @@ constexpr basic_string_view(R&amp;amp;&amp;amp; r);                            // (7) C++23
 ## 概要
 - (1) : デフォルトコンストラクタ。空の`basic_string_view`オブジェクトを構築する
 - (2) : コピーコンストラクタ。コピー元と同じ文字列を参照する
-- (3) : 文字配列を受けとって、その文字配列の全体(ただしヌル文字列を含む場合はそこまで)を参照する
+- (3) : 文字配列を受けとって、その文字配列の全体(ただしヌル文字を含む場合はそこまで)を参照する
 - (5) : 文字配列と長さを受けとって、文字配列`str`の先頭`len`文字を参照する
 - (6) : 文字のイテレータ範囲`[begin, end)`を参照する
 - (7) : 文字のレンジ`R`を参照する
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>61970673+Raclamusi@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>day -- day : 演算子名修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/day.html"/>
      <id>15cb7dcdcb7bb39c5a5cb4d4675d1ef8e86a9743:reference/chrono/day.md</id>
      <updated>2022-06-15T13:07:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/day.md b/reference/chrono/day.md
index 785f8e9cf..aa8404c08 100644
--- a/reference/chrono/day.md
+++ b/reference/chrono/day.md
@@ -39,7 +39,7 @@ namespace std::chrono {
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
 | [`operator++`](day/op_increment.md)    | インクリメント | C++20 |
-| [`operator-=`](day/op_decrement.md)    | デクリメント   | C++20 |
+| [`operator--`](day/op_decrement.md)    | デクリメント   | C++20 |
 | [`operator+=`](day/op_plus_assign.md)  | 加算の複合代入 | C++20 |
 | [`operator-=`](day/op_minus_assign.md) | 減算の複合代入 | C++20 |
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator% -- Merge pull request #980 from cpprefjp/fix_minor_faults</title>
      <link href="https://cpprefjp.github.io/reference/chrono/duration/op_modulo.html"/>
      <id>36b871aa19d4f42b687746b11bf2ababee9d8e2c:reference/chrono/duration/op_modulo.md</id>
      <updated>2022-06-07T10:16:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/duration/op_modulo.md b/reference/chrono/duration/op_modulo.md
index 3c2d9cefd..7f498d6c6 100644
--- a/reference/chrono/duration/op_modulo.md
+++ b/reference/chrono/duration/op_modulo.md
@@ -6,6 +6,7 @@
 
 ```cpp
 namespace std {
+namespace chrono {
   // duration % N = duration
   template &amp;lt;class Rep1, class Period, class Rep2&amp;gt;
   duration&amp;lt;typename common_type&amp;lt;Rep1, Rep2&amp;gt;::type, Period&amp;gt;
@@ -17,7 +18,7 @@ namespace std {
   typename common_type&amp;lt;duration&amp;lt;Rep1, Period1&amp;gt;, duration&amp;lt;Rep2, Period2&amp;gt;&amp;gt;::type
     constexpr operator%(const duration&amp;lt;Rep1, Period1&amp;gt;&amp;amp; lhs,
                         const duration&amp;lt;Rep2, Period2&amp;gt;&amp;amp; rhs); // (2)
-}
+}}
 ```
 * common_type[link /reference/type_traits/common_type.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>polymorphic_allocator -- Merge pull request #980 from cpprefjp/fix_minor_faults</title>
      <link href="https://cpprefjp.github.io/reference/memory_resource/polymorphic_allocator.html"/>
      <id>36b871aa19d4f42b687746b11bf2ababee9d8e2c:reference/memory_resource/polymorphic_allocator.md</id>
      <updated>2022-06-07T10:16:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/memory_resource/polymorphic_allocator.md b/reference/memory_resource/polymorphic_allocator.md
index 02ec9a03f..df5b1de9d 100644
--- a/reference/memory_resource/polymorphic_allocator.md
+++ b/reference/memory_resource/polymorphic_allocator.md
@@ -1,6 +1,6 @@
 # polymorphic_allocator
 * memory_resource[meta header]
-* class[meta id-type]
+* class template[meta id-type]
 * std::pmr[meta namespace]
 * cpp17[meta cpp]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>multiset -- Merge pull request #980 from cpprefjp/fix_minor_faults</title>
      <link href="https://cpprefjp.github.io/reference/set/multiset.html"/>
      <id>36b871aa19d4f42b687746b11bf2ababee9d8e2c:reference/set/multiset.md</id>
      <updated>2022-06-07T10:16:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/set/multiset.md b/reference/set/multiset.md
index ed2745304..a4de2ae04 100644
--- a/reference/set/multiset.md
+++ b/reference/set/multiset.md
@@ -1,7 +1,7 @@
 # multiset
 * set[meta header]
 * std[meta namespace]
-* class[meta id-type]
+* class template[meta id-type]
 
 ```cpp
 namespace std {
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>set -- Merge pull request #980 from cpprefjp/fix_minor_faults</title>
      <link href="https://cpprefjp.github.io/reference/set/set.html"/>
      <id>36b871aa19d4f42b687746b11bf2ababee9d8e2c:reference/set/set.md</id>
      <updated>2022-06-07T10:16:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/set/set.md b/reference/set/set.md
index 0c146b6bf..c59382071 100644
--- a/reference/set/set.md
+++ b/reference/set/set.md
@@ -1,7 +1,7 @@
 # set
 * set[meta header]
 * std[meta namespace]
-* class[meta id-type]
+* class template[meta id-type]
 
 ```cpp
 namespace std {
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>shared_lock -- Merge pull request #980 from cpprefjp/fix_minor_faults</title>
      <link href="https://cpprefjp.github.io/reference/shared_mutex/shared_lock.html"/>
      <id>36b871aa19d4f42b687746b11bf2ababee9d8e2c:reference/shared_mutex/shared_lock.md</id>
      <updated>2022-06-07T10:16:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/shared_mutex/shared_lock.md b/reference/shared_mutex/shared_lock.md
index 40535b712..0d929e121 100644
--- a/reference/shared_mutex/shared_lock.md
+++ b/reference/shared_mutex/shared_lock.md
@@ -1,7 +1,7 @@
 # shared_lock
 * shared_mutex[meta header]
 * std[meta namespace]
-* class[meta id-type]
+* class template[meta id-type]
 * cpp14[meta cpp]
 
 ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>basic_istringstream -- Merge pull request #980 from cpprefjp/fix_minor_faults</title>
      <link href="https://cpprefjp.github.io/reference/sstream/basic_istringstream.html"/>
      <id>36b871aa19d4f42b687746b11bf2ababee9d8e2c:reference/sstream/basic_istringstream.md</id>
      <updated>2022-06-07T10:16:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/sstream/basic_istringstream.md b/reference/sstream/basic_istringstream.md
index fed691139..374ce0799 100644
--- a/reference/sstream/basic_istringstream.md
+++ b/reference/sstream/basic_istringstream.md
@@ -1,7 +1,7 @@
 # basic_istringstream
 * sstream[meta header]
 * std[meta namespace]
-* class[meta id-type]
+* class template[meta id-type]
 
 ```cpp
 namespace std {
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>bool_constant -- Merge pull request #980 from cpprefjp/fix_minor_faults</title>
      <link href="https://cpprefjp.github.io/reference/type_traits/bool_constant.html"/>
      <id>36b871aa19d4f42b687746b11bf2ababee9d8e2c:reference/type_traits/bool_constant.md</id>
      <updated>2022-06-07T10:16:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/type_traits/bool_constant.md b/reference/type_traits/bool_constant.md
index e5a471d43..9df13e592 100644
--- a/reference/type_traits/bool_constant.md
+++ b/reference/type_traits/bool_constant.md
@@ -1,7 +1,7 @@
 # bool_constant
 * type_traits[meta header]
 * std[meta namespace]
-* class template[meta id-type]
+* type-alias[meta id-type]
 * cpp17[meta cpp]
 
 ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>disjunction -- Merge pull request #980 from cpprefjp/fix_minor_faults</title>
      <link href="https://cpprefjp.github.io/reference/type_traits/disjunction.html"/>
      <id>36b871aa19d4f42b687746b11bf2ababee9d8e2c:reference/type_traits/disjunction.md</id>
      <updated>2022-06-07T10:16:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/type_traits/disjunction.md b/reference/type_traits/disjunction.md
index 741578a90..3f21f8b1e 100644
--- a/reference/type_traits/disjunction.md
+++ b/reference/type_traits/disjunction.md
@@ -21,7 +21,7 @@ namespace std {
 Traits内の全ての型は基底クラスとして使用可能で（final指定されていない）、boolに変換可能なメンバ変数valueを持つこと。
 
 ## 効果
-`sizeof...(Traits) == 0`ならば[`true_type`](true_type.md)から派生し
+`sizeof...(Traits) == 0`ならば[`false_type`](false_type.md)から派生し
 
 `sizeof...(Traits) == 1`ならばそのTraitsから派生し
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>in_place_index_t -- Merge pull request #980 from cpprefjp/fix_minor_faults</title>
      <link href="https://cpprefjp.github.io/reference/utility/in_place_index_t.html"/>
      <id>36b871aa19d4f42b687746b11bf2ababee9d8e2c:reference/utility/in_place_index_t.md</id>
      <updated>2022-06-07T10:16:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/utility/in_place_index_t.md b/reference/utility/in_place_index_t.md
index a4018e8dd..2eb70bd6a 100644
--- a/reference/utility/in_place_index_t.md
+++ b/reference/utility/in_place_index_t.md
@@ -1,7 +1,7 @@
 # in_place_index_t
 * utility[meta header]
 * std[meta namespace]
-* class[meta id-type]
+* class template[meta id-type]
 * cpp17[meta cpp]
 
 ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>in_place_type_t -- Merge pull request #980 from cpprefjp/fix_minor_faults</title>
      <link href="https://cpprefjp.github.io/reference/utility/in_place_type_t.html"/>
      <id>36b871aa19d4f42b687746b11bf2ababee9d8e2c:reference/utility/in_place_type_t.md</id>
      <updated>2022-06-07T10:16:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/utility/in_place_type_t.md b/reference/utility/in_place_type_t.md
index 4f122047c..db6e1a71a 100644
--- a/reference/utility/in_place_type_t.md
+++ b/reference/utility/in_place_type_t.md
@@ -1,7 +1,7 @@
 # in_place_type_t
 * utility[meta header]
 * std[meta namespace]
-* class[meta id-type]
+* class template[meta id-type]
 * cpp17[meta cpp]
 
 ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>emplace -- Merge pull request #980 from cpprefjp/fix_minor_faults</title>
      <link href="https://cpprefjp.github.io/reference/variant/variant/emplace.html"/>
      <id>36b871aa19d4f42b687746b11bf2ababee9d8e2c:reference/variant/variant/emplace.md</id>
      <updated>2022-06-07T10:16:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/variant/variant/emplace.md b/reference/variant/variant/emplace.md
index bf9d67c45..c214cc567 100644
--- a/reference/variant/variant/emplace.md
+++ b/reference/variant/variant/emplace.md
@@ -6,21 +6,19 @@
 * cpp17[meta cpp]
 
 ```cpp
-namespace std {
-  template &amp;lt;class T, class... Args&amp;gt;
-  T&amp;amp; emplace(Args&amp;amp;&amp;amp;... args);                              // (1)
+template &amp;lt;class T, class... Args&amp;gt;
+T&amp;amp; emplace(Args&amp;amp;&amp;amp;... args);                              // (1)
 
-  template &amp;lt;class T, class U, class... Args&amp;gt;
-  T&amp;amp; emplace(std::initializer_list&amp;lt;U&amp;gt; il, Args&amp;amp;&amp;amp;... args); // (2)
+template &amp;lt;class T, class U, class... Args&amp;gt;
+T&amp;amp; emplace(std::initializer_list&amp;lt;U&amp;gt; il, Args&amp;amp;&amp;amp;... args); // (2)
 
-  template &amp;lt;std::size_t I, class... Args&amp;gt;
-  variant_alternative_t&amp;lt;I, variant&amp;lt;Types...&amp;gt;&amp;gt;&amp;amp;
-    emplace(Args&amp;amp;&amp;amp;... args);                               // (3)
+template &amp;lt;std::size_t I, class... Args&amp;gt;
+variant_alternative_t&amp;lt;I, variant&amp;lt;Types...&amp;gt;&amp;gt;&amp;amp;
+  emplace(Args&amp;amp;&amp;amp;... args);                               // (3)
 
-  template &amp;lt;std::size_t I, class U, class... Args&amp;gt;
-  variant_alternative_t&amp;lt;I, variant&amp;lt;Types...&amp;gt;&amp;gt;&amp;amp;
-    emplace(std::initializer_list&amp;lt;U&amp;gt; il, Args&amp;amp;&amp;amp;... args);  // (4)
-}
+template &amp;lt;std::size_t I, class U, class... Args&amp;gt;
+variant_alternative_t&amp;lt;I, variant&amp;lt;Types...&amp;gt;&amp;gt;&amp;amp;
+  emplace(std::initializer_list&amp;lt;U&amp;gt; il, Args&amp;amp;&amp;amp;... args);  // (4)
 ```
 * variant_alternative_t[link /reference/variant/variant_alternative.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>polymorphic_allocator -- fix some [meta id-type]. class -&gt; class template</title>
      <link href="https://cpprefjp.github.io/reference/memory_resource/polymorphic_allocator.html"/>
      <id>91acc52370e9232c59f0651ddd273e47b34baebe:reference/memory_resource/polymorphic_allocator.md</id>
      <updated>2022-06-07T00:22:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/memory_resource/polymorphic_allocator.md b/reference/memory_resource/polymorphic_allocator.md
index 02ec9a03f..df5b1de9d 100644
--- a/reference/memory_resource/polymorphic_allocator.md
+++ b/reference/memory_resource/polymorphic_allocator.md
@@ -1,6 +1,6 @@
 # polymorphic_allocator
 * memory_resource[meta header]
-* class[meta id-type]
+* class template[meta id-type]
 * std::pmr[meta namespace]
 * cpp17[meta cpp]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>multiset -- fix some [meta id-type]. class -&gt; class template</title>
      <link href="https://cpprefjp.github.io/reference/set/multiset.html"/>
      <id>91acc52370e9232c59f0651ddd273e47b34baebe:reference/set/multiset.md</id>
      <updated>2022-06-07T00:22:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/set/multiset.md b/reference/set/multiset.md
index ed2745304..a4de2ae04 100644
--- a/reference/set/multiset.md
+++ b/reference/set/multiset.md
@@ -1,7 +1,7 @@
 # multiset
 * set[meta header]
 * std[meta namespace]
-* class[meta id-type]
+* class template[meta id-type]
 
 ```cpp
 namespace std {
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>set -- fix some [meta id-type]. class -&gt; class template</title>
      <link href="https://cpprefjp.github.io/reference/set/set.html"/>
      <id>91acc52370e9232c59f0651ddd273e47b34baebe:reference/set/set.md</id>
      <updated>2022-06-07T00:22:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/set/set.md b/reference/set/set.md
index 0c146b6bf..c59382071 100644
--- a/reference/set/set.md
+++ b/reference/set/set.md
@@ -1,7 +1,7 @@
 # set
 * set[meta header]
 * std[meta namespace]
-* class[meta id-type]
+* class template[meta id-type]
 
 ```cpp
 namespace std {
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>shared_lock -- fix some [meta id-type]. class -&gt; class template</title>
      <link href="https://cpprefjp.github.io/reference/shared_mutex/shared_lock.html"/>
      <id>91acc52370e9232c59f0651ddd273e47b34baebe:reference/shared_mutex/shared_lock.md</id>
      <updated>2022-06-07T00:22:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/shared_mutex/shared_lock.md b/reference/shared_mutex/shared_lock.md
index 40535b712..0d929e121 100644
--- a/reference/shared_mutex/shared_lock.md
+++ b/reference/shared_mutex/shared_lock.md
@@ -1,7 +1,7 @@
 # shared_lock
 * shared_mutex[meta header]
 * std[meta namespace]
-* class[meta id-type]
+* class template[meta id-type]
 * cpp14[meta cpp]
 
 ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>basic_istringstream -- fix some [meta id-type]. class -&gt; class template</title>
      <link href="https://cpprefjp.github.io/reference/sstream/basic_istringstream.html"/>
      <id>91acc52370e9232c59f0651ddd273e47b34baebe:reference/sstream/basic_istringstream.md</id>
      <updated>2022-06-07T00:22:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/sstream/basic_istringstream.md b/reference/sstream/basic_istringstream.md
index fed691139..374ce0799 100644
--- a/reference/sstream/basic_istringstream.md
+++ b/reference/sstream/basic_istringstream.md
@@ -1,7 +1,7 @@
 # basic_istringstream
 * sstream[meta header]
 * std[meta namespace]
-* class[meta id-type]
+* class template[meta id-type]
 
 ```cpp
 namespace std {
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>bool_constant -- fix some [meta id-type]. class -&gt; class template</title>
      <link href="https://cpprefjp.github.io/reference/type_traits/bool_constant.html"/>
      <id>91acc52370e9232c59f0651ddd273e47b34baebe:reference/type_traits/bool_constant.md</id>
      <updated>2022-06-07T00:22:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/type_traits/bool_constant.md b/reference/type_traits/bool_constant.md
index e5a471d43..9df13e592 100644
--- a/reference/type_traits/bool_constant.md
+++ b/reference/type_traits/bool_constant.md
@@ -1,7 +1,7 @@
 # bool_constant
 * type_traits[meta header]
 * std[meta namespace]
-* class template[meta id-type]
+* type-alias[meta id-type]
 * cpp17[meta cpp]
 
 ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>in_place_index_t -- fix some [meta id-type]. class -&gt; class template</title>
      <link href="https://cpprefjp.github.io/reference/utility/in_place_index_t.html"/>
      <id>91acc52370e9232c59f0651ddd273e47b34baebe:reference/utility/in_place_index_t.md</id>
      <updated>2022-06-07T00:22:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/utility/in_place_index_t.md b/reference/utility/in_place_index_t.md
index a4018e8dd..2eb70bd6a 100644
--- a/reference/utility/in_place_index_t.md
+++ b/reference/utility/in_place_index_t.md
@@ -1,7 +1,7 @@
 # in_place_index_t
 * utility[meta header]
 * std[meta namespace]
-* class[meta id-type]
+* class template[meta id-type]
 * cpp17[meta cpp]
 
 ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>in_place_type_t -- fix some [meta id-type]. class -&gt; class template</title>
      <link href="https://cpprefjp.github.io/reference/utility/in_place_type_t.html"/>
      <id>91acc52370e9232c59f0651ddd273e47b34baebe:reference/utility/in_place_type_t.md</id>
      <updated>2022-06-07T00:22:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/utility/in_place_type_t.md b/reference/utility/in_place_type_t.md
index 4f122047c..db6e1a71a 100644
--- a/reference/utility/in_place_type_t.md
+++ b/reference/utility/in_place_type_t.md
@@ -1,7 +1,7 @@
 # in_place_type_t
 * utility[meta header]
 * std[meta namespace]
-* class[meta id-type]
+* class template[meta id-type]
 * cpp17[meta cpp]
 
 ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator% -- fix some definitions</title>
      <link href="https://cpprefjp.github.io/reference/chrono/duration/op_modulo.html"/>
      <id>34b0c990387da8e0bff71b66cdcf78b579fbe30e:reference/chrono/duration/op_modulo.md</id>
      <updated>2022-06-07T00:16:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/duration/op_modulo.md b/reference/chrono/duration/op_modulo.md
index 3c2d9cefd..7f498d6c6 100644
--- a/reference/chrono/duration/op_modulo.md
+++ b/reference/chrono/duration/op_modulo.md
@@ -6,6 +6,7 @@
 
 ```cpp
 namespace std {
+namespace chrono {
   // duration % N = duration
   template &amp;lt;class Rep1, class Period, class Rep2&amp;gt;
   duration&amp;lt;typename common_type&amp;lt;Rep1, Rep2&amp;gt;::type, Period&amp;gt;
@@ -17,7 +18,7 @@ namespace std {
   typename common_type&amp;lt;duration&amp;lt;Rep1, Period1&amp;gt;, duration&amp;lt;Rep2, Period2&amp;gt;&amp;gt;::type
     constexpr operator%(const duration&amp;lt;Rep1, Period1&amp;gt;&amp;amp; lhs,
                         const duration&amp;lt;Rep2, Period2&amp;gt;&amp;amp; rhs); // (2)
-}
+}}
 ```
 * common_type[link /reference/type_traits/common_type.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>emplace -- fix some definitions</title>
      <link href="https://cpprefjp.github.io/reference/variant/variant/emplace.html"/>
      <id>34b0c990387da8e0bff71b66cdcf78b579fbe30e:reference/variant/variant/emplace.md</id>
      <updated>2022-06-07T00:16:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/variant/variant/emplace.md b/reference/variant/variant/emplace.md
index bf9d67c45..c214cc567 100644
--- a/reference/variant/variant/emplace.md
+++ b/reference/variant/variant/emplace.md
@@ -6,21 +6,19 @@
 * cpp17[meta cpp]
 
 ```cpp
-namespace std {
-  template &amp;lt;class T, class... Args&amp;gt;
-  T&amp;amp; emplace(Args&amp;amp;&amp;amp;... args);                              // (1)
+template &amp;lt;class T, class... Args&amp;gt;
+T&amp;amp; emplace(Args&amp;amp;&amp;amp;... args);                              // (1)
 
-  template &amp;lt;class T, class U, class... Args&amp;gt;
-  T&amp;amp; emplace(std::initializer_list&amp;lt;U&amp;gt; il, Args&amp;amp;&amp;amp;... args); // (2)
+template &amp;lt;class T, class U, class... Args&amp;gt;
+T&amp;amp; emplace(std::initializer_list&amp;lt;U&amp;gt; il, Args&amp;amp;&amp;amp;... args); // (2)
 
-  template &amp;lt;std::size_t I, class... Args&amp;gt;
-  variant_alternative_t&amp;lt;I, variant&amp;lt;Types...&amp;gt;&amp;gt;&amp;amp;
-    emplace(Args&amp;amp;&amp;amp;... args);                               // (3)
+template &amp;lt;std::size_t I, class... Args&amp;gt;
+variant_alternative_t&amp;lt;I, variant&amp;lt;Types...&amp;gt;&amp;gt;&amp;amp;
+  emplace(Args&amp;amp;&amp;amp;... args);                               // (3)
 
-  template &amp;lt;std::size_t I, class U, class... Args&amp;gt;
-  variant_alternative_t&amp;lt;I, variant&amp;lt;Types...&amp;gt;&amp;gt;&amp;amp;
-    emplace(std::initializer_list&amp;lt;U&amp;gt; il, Args&amp;amp;&amp;amp;... args);  // (4)
-}
+template &amp;lt;std::size_t I, class U, class... Args&amp;gt;
+variant_alternative_t&amp;lt;I, variant&amp;lt;Types...&amp;gt;&amp;gt;&amp;amp;
+  emplace(std::initializer_list&amp;lt;U&amp;gt; il, Args&amp;amp;&amp;amp;... args);  // (4)
 ```
 * variant_alternative_t[link /reference/variant/variant_alternative.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
</feed>
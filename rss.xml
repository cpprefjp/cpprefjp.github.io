<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2023-09-19T07:15:20.458913</updated>
  <id>a26e1b3d-aeb4-489a-b8a0-fc5f79870956</id>

  
    <entry>
      <title>flat_map -- flat_map : operator&lt;=&gt;を追加 #1078</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map.html"/>
      <id>842cacbb7d3c6d5da2c4f25ab7c829b50571c8a7:reference/flat_map/flat_map.md</id>
      <updated>2023-09-19T16:10:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map.md b/reference/flat_map/flat_map.md
index bc10182cc..c2887c226 100644
--- a/reference/flat_map/flat_map.md
+++ b/reference/flat_map/flat_map.md
@@ -131,7 +131,7 @@ namespace std {
 |------|------|----------------|
 | [`operator==`](flat_map/op_equal.md)         | 左辺と右辺が等しいかの判定を行う           | C++23 |
 | `bool operator!=(const flat_map&amp;amp; x, const flat_map&amp;amp; y);` | 左辺と右辺が等しくないかの判定を行う (`==`により使用可能) | C++23 |
-| [`operator&amp;lt;=&amp;gt;`](flat_map/op_compare_3way.md.nolink) | 三方比較を行う                             | C++23 |
+| [`operator&amp;lt;=&amp;gt;`](flat_map/op_compare_3way.md) | 三方比較を行う                             | C++23 |
 | `bool operator&amp;lt;(const flat_map&amp;amp; x, const flat_map&amp;amp; y);`  | 左辺が右辺より小さいかの判定を行う  (`&amp;lt;=&amp;gt;`により使用可能) | C++23 |
 | `bool operator&amp;lt;=(const flat_map&amp;amp; x, const flat_map&amp;amp; y);` | 左辺が右辺より小さいか等しいかの判定を行う (`&amp;lt;=&amp;gt;`により使用可能) | C++23 |
 | `bool operator&amp;gt;(const flat_map&amp;amp; x, const flat_map&amp;amp; y);`  | 左辺が右辺より大きいかの判定を行う (`&amp;lt;=&amp;gt;`により使用可能) | C++23 |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;=&gt; -- flat_map : operator&lt;=&gt;を追加 #1078</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map/op_compare_3way.html"/>
      <id>842cacbb7d3c6d5da2c4f25ab7c829b50571c8a7:reference/flat_map/flat_map/op_compare_3way.md</id>
      <updated>2023-09-19T16:10:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map/op_compare_3way.md b/reference/flat_map/flat_map/op_compare_3way.md
new file mode 100644
index 000000000..40c926b92
--- /dev/null
+++ b/reference/flat_map/flat_map/op_compare_3way.md
@@ -0,0 +1,90 @@
+# operator&amp;lt;=&amp;gt;
+* flat_map[meta header]
+* std[meta namespace]
+* function template[meta id-type]
+* flat_map[meta class]
+* cpp23[meta cpp]
+
+```cpp
+synth-three-way-result&amp;lt;value_type&amp;gt;
+  operator&amp;lt;=&amp;gt;(const flat_map&amp;amp; x,
+              const flat_map&amp;amp; y); // (1) C++23
+```
+
+## 概要
+`flat_map`オブジェクトの三方比較を行う。
+
+
+## テンプレートパラメータ制約
+- 型 (`const`) `value_type` の値に対して`operator&amp;lt;=&amp;gt;`が定義されるか、型 (`const`) `value_type` の値に対して`operator&amp;lt;`が定義され全順序をもつこと
+
+
+## 効果
+```cpp
+return lexicographical_compare_three_way(
+    x.begin(), x.end(),
+    y.begin(), y.end(),
+    synth-three-way);
+```
+* lexicographical_compare_three_way[link /reference/algorithm/lexicographical_compare_three_way.md]
+* begin()[link begin.md]
+* end()[link end.md]
+
+
+## 計算量
+線形時間
+
+
+## 備考
+- この演算子により、以下の演算子が使用可能になる：
+    - `operator&amp;lt;`
+    - `operator&amp;lt;=`
+    - `operator&amp;gt;`
+    - `operator&amp;gt;=`
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;flat_map&amp;gt;
+
+int main()
+{
+  stdx::flat_map&amp;lt;int, char&amp;gt; fm1 = {
+    {3, &amp;#39;a&amp;#39;},
+    {1, &amp;#39;b&amp;#39;},
+    {4, &amp;#39;c&amp;#39;}
+  };
+
+  stdx::flat_map&amp;lt;int, char&amp;gt; fm2 = {
+    {3, &amp;#39;a&amp;#39;},
+    {1, &amp;#39;b&amp;#39;},
+  };
+
+  std::cout &amp;lt;&amp;lt; std::boolalpha;
+  std::cout &amp;lt;&amp;lt; ((fm1 &amp;lt;=&amp;gt; fm1) == 0) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; (fm1 &amp;lt; fm2) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; (fm1 &amp;lt;= fm1) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; (fm1 &amp;gt; fm2) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; (fm2 &amp;gt;= fm1) &amp;lt;&amp;lt; std::endl;
+}
+```
+
+### 出力
+```
+true
+false
+true
+true
+false
+```
+
+## バージョン
+### 言語
+- C++23
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
+
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>flat_map -- flat_map : operator==を追加 #1078</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map.html"/>
      <id>430fad23a6692db0c8d608f465732ec3ac1db083:reference/flat_map/flat_map.md</id>
      <updated>2023-09-14T17:19:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map.md b/reference/flat_map/flat_map.md
index 04eee438c..bc10182cc 100644
--- a/reference/flat_map/flat_map.md
+++ b/reference/flat_map/flat_map.md
@@ -129,7 +129,7 @@ namespace std {
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`operator==`](flat_map/op_equal.md.nolink)         | 左辺と右辺が等しいかの判定を行う           | C++23 |
+| [`operator==`](flat_map/op_equal.md)         | 左辺と右辺が等しいかの判定を行う           | C++23 |
 | `bool operator!=(const flat_map&amp;amp; x, const flat_map&amp;amp; y);` | 左辺と右辺が等しくないかの判定を行う (`==`により使用可能) | C++23 |
 | [`operator&amp;lt;=&amp;gt;`](flat_map/op_compare_3way.md.nolink) | 三方比較を行う                             | C++23 |
 | `bool operator&amp;lt;(const flat_map&amp;amp; x, const flat_map&amp;amp; y);`  | 左辺が右辺より小さいかの判定を行う  (`&amp;lt;=&amp;gt;`により使用可能) | C++23 |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator== -- flat_map : operator==を追加 #1078</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map/op_equal.html"/>
      <id>430fad23a6692db0c8d608f465732ec3ac1db083:reference/flat_map/flat_map/op_equal.md</id>
      <updated>2023-09-14T17:19:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map/op_equal.md b/reference/flat_map/flat_map/op_equal.md
new file mode 100644
index 000000000..11299d74b
--- /dev/null
+++ b/reference/flat_map/flat_map/op_equal.md
@@ -0,0 +1,73 @@
+# operator==
+* flat_map[meta header]
+* std[meta namespace]
+* function template[meta id-type]
+* flat_map[meta class]
+
+```cpp
+friend bool operator==(const flat_map&amp;amp; x, const flat_map&amp;amp; y);
+```
+
+## 概要
+`x` が `y` と等しいかどうかの判定を行う。
+
+
+## 戻り値
+以下と等価：
+
+```cpp
+return equal(x.begin(), x.end(), y.begin(), y.end());
+```
+* equal[link /reference/algorithm/equal.md]
+* begin()[link begin.md]
+* end()[link end.md]
+
+
+## 計算量
+[`size()`](size.md) に対して線形時間。ただし、`x`と`y`のサイズが異なる場合は定数時間。
+
+
+## 備考
+- この演算子により、以下の演算子が使用可能になる：
+    - `operator!=`
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;flat_map&amp;gt;
+
+int main()
+{
+  std::flat_map&amp;lt;int, char&amp;gt; fm1 = {
+    {3, &amp;#39;a&amp;#39;},
+    {1, &amp;#39;b&amp;#39;},
+    {4, &amp;#39;c&amp;#39;}
+  };
+
+  std::flat_map&amp;lt;int, char&amp;gt; fm2 = {
+    {3, &amp;#39;a&amp;#39;},
+    {1, &amp;#39;b&amp;#39;},
+  };
+
+  std::cout &amp;lt;&amp;lt; std::boolalpha;
+  std::cout &amp;lt;&amp;lt; (fm1 == fm1) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; (fm1 == fm2) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; (fm1 != fm1) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; (fm1 != fm2) &amp;lt;&amp;lt; std::endl;
+}
+```
+
+### 出力
+```
+true
+false
+false
+true
+```
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
+
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator-= -- fix typo</title>
      <link href="https://cpprefjp.github.io/reference/atomic/atomic_ref/op_minus_assign.html"/>
      <id>2311413d25e3c2224c996bfb59f5f656d1762abd:reference/atomic/atomic_ref/op_minus_assign.md</id>
      <updated>2023-09-13T21:12:33+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/atomic/atomic_ref/op_minus_assign.md b/reference/atomic/atomic_ref/op_minus_assign.md
index 2a9a6b50b..3f1fb9305 100644
--- a/reference/atomic/atomic_ref/op_minus_assign.md
+++ b/reference/atomic/atomic_ref/op_minus_assign.md
@@ -10,7 +10,7 @@ T operator-=(T operand) const noexcept;
 ```
 
 ## 概要
-加算を行う
+減算を行う
 
 
 ## 戻り値
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator-- -- fix typo</title>
      <link href="https://cpprefjp.github.io/reference/chrono/weekday/op_decrement.html"/>
      <id>2311413d25e3c2224c996bfb59f5f656d1762abd:reference/chrono/weekday/op_decrement.md</id>
      <updated>2023-09-13T21:12:33+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/weekday/op_decrement.md b/reference/chrono/weekday/op_decrement.md
index c0a2f8e1b..435cef2f8 100644
--- a/reference/chrono/weekday/op_decrement.md
+++ b/reference/chrono/weekday/op_decrement.md
@@ -40,7 +40,7 @@ namespace chrono = std::chrono;
 
 int main()
 {
-  // 前置インクリメント
+  // 前置デクリメント
   {
     chrono::weekday w = chrono::Sunday;
 
@@ -48,7 +48,7 @@ int main()
     assert(w == chrono::Saturday);
   }
 
-  // 後置インクリメント
+  // 後置デクリメント
   {
     chrono::weekday w = chrono::Sunday;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator-- -- fix typo</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year/op_decrement.html"/>
      <id>2311413d25e3c2224c996bfb59f5f656d1762abd:reference/chrono/year/op_decrement.md</id>
      <updated>2023-09-13T21:12:33+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year/op_decrement.md b/reference/chrono/year/op_decrement.md
index 0428ca1c5..199987b77 100644
--- a/reference/chrono/year/op_decrement.md
+++ b/reference/chrono/year/op_decrement.md
@@ -42,7 +42,7 @@ namespace chrono = std::chrono;
 
 int main()
 {
-  // 前置インクリメント
+  // 前置デクリメント
   {
     chrono::year y{2020};
 
@@ -50,7 +50,7 @@ int main()
     assert(static_cast&amp;lt;int&amp;gt;(y) == 2019);
   }
 
-  // 後置インクリメント
+  // 後置デクリメント
   {
     chrono::year y{2020};
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>begin -- as_const_view::begin : 得られるイテレータについて追記</title>
      <link href="https://cpprefjp.github.io/reference/ranges/as_const_view/begin.html"/>
      <id>01117d7bbb901725da0d53a89102f6f37df5dd3e:reference/ranges/as_const_view/begin.md</id>
      <updated>2023-09-13T17:19:33+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/as_const_view/begin.md b/reference/ranges/as_const_view/begin.md
index e52b706ce..4a1ef4913 100644
--- a/reference/ranges/as_const_view/begin.md
+++ b/reference/ranges/as_const_view/begin.md
@@ -25,6 +25,8 @@ return ranges::cbegin(base_);
 ```
 * cbegin[link /reference/ranges/cbegin.md]
 
+`as_const_view`を`views::as_const`から生成している場合、ここで得られるイテレータは常に[`basic_const_iterator`](/reference/iterator/basic_const_iterator.md)の特殊化となる。
+
 ## 例
 
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>機能テストマクロ -- 機能テストマクロ追加 #1084</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/feature_test_macros.html"/>
      <id>d8142c96f48d70c18df8b6138b6fbc0dcb5ea867:lang/cpp23/feature_test_macros.md</id>
      <updated>2023-09-13T12:18:46+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;機能テストマクロ&lt;/span&gt;&lt;span class=&#34;cpp cpp23&#34; title=&#34;C++23で追加&#34;&gt;(C++23)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;h2&gt;概要&lt;/h2&gt;
&lt;h3&gt;言語機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;マクロ名&lt;/th&gt;
&lt;th&gt;値&lt;/th&gt;
&lt;th&gt;機能&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;ライブラリ&lt;/h3&gt;
&lt;p&gt;ライブラリの機能テストマクロは全て&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/version.html&#34;&gt;&amp;lt;version&amp;gt;&lt;/a&gt;&lt;/code&gt;でも提供される。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;マクロ名&lt;/th&gt;
&lt;th&gt;値&lt;/th&gt;
&lt;th&gt;機能&lt;/th&gt;
&lt;th&gt;ヘッダ&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cpp_lib_ranges_as_const&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;202207L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ranges::cbegin&lt;/code&gt;が常に定数イテレータを返すようにする&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges.html&#34;&gt;&amp;lt;ranges&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://isocpp.org/std/standing-documents/sd-6-sg10-feature-test-recommendations&#34; target=&#34;_blank&#34;&gt;SD-FeatureTest: Feature-Test Macros and Policies - isocpp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>version -- 機能テストマクロ追加 #1084</title>
      <link href="https://cpprefjp.github.io/reference/version.html"/>
      <id>d8142c96f48d70c18df8b6138b6fbc0dcb5ea867:reference/version.md</id>
      <updated>2023-09-13T12:18:46+09:00</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;version&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;cpp cpp20&#34; title=&#34;C++20で追加&#34;&gt;(C++20)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;version&amp;gt;&lt;/code&gt;ヘッダでは、実装依存でのC++標準ライブラリのバージョン情報を提供する。機能テストマクロ以外のバージョン情報以外に何が定義されるかは実装ごとに決められる。&lt;/p&gt;
&lt;p&gt;本ヘッダはフリースタンディング環境でも提供される。&lt;/p&gt;
&lt;h2&gt;機能テストマクロ&lt;/h2&gt;
&lt;p&gt;本ヘッダをインクルードすることにより、標準で提供される全てのライブラリ機能テストマクロを利用することができる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp14/feature_test_macros.html&#34;&gt;C++14 機能テストマクロ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/feature_test_macros.html&#34;&gt;C++17 機能テストマクロ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/feature_test_macros.html&#34;&gt;C++20 機能テストマクロ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23/feature_test_macros.html&#34;&gt;C++23 機能テストマクロ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0754r2.pdf&#34; target=&#34;_blank&#34;&gt;P0754R2 &lt;code&gt;&amp;lt;version&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
</feed>
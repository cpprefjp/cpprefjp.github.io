<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2025-09-28T14:39:15.781533</updated>
  <id>04792994-2866-4276-8854-9735f43fce91</id>

  
    <entry>
      <title>range_formatter -- range_formatter のコード例を追加</title>
      <link href="https://cpprefjp.github.io/reference/format/range_formatter.html"/>
      <id>994a1052c1471dda72f5ad2a5e26c8ee89b57cab:reference/format/range_formatter.md</id>
      <updated>2025-09-28T21:02:45+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/format/range_formatter.md b/reference/format/range_formatter.md
index 44b66d3d0..4c524edc8 100644
--- a/reference/format/range_formatter.md
+++ b/reference/format/range_formatter.md
@@ -136,6 +136,57 @@ int main()
 aa:bb:cc:dd:ee:ff
 ```
 
+
+### オリジナル書式を定義する例（`set_separator`と`set_brackets`を使う場合）
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;format&amp;gt;
+#include &amp;lt;vector&amp;gt;
+
+template &amp;lt;class T&amp;gt;
+struct MyVector : std::vector&amp;lt;T&amp;gt; {
+    using std::vector&amp;lt;T&amp;gt;::vector;
+};
+
+template &amp;lt;class T&amp;gt;
+constexpr std::range_format std::format_kind&amp;lt;MyVector&amp;lt;T&amp;gt;&amp;gt; = std::range_format::sequence;
+
+template &amp;lt;class T&amp;gt;
+class std::formatter&amp;lt;MyVector&amp;lt;T&amp;gt;&amp;gt; : public std::range_formatter&amp;lt;T&amp;gt; {
+  using base_type = std::range_formatter&amp;lt;T&amp;gt;;
+public:
+  constexpr auto parse(std::format_parse_context&amp;amp; pctx) {
+    auto it = pctx.begin();
+    if (*it == &amp;#39;c&amp;#39;) {
+      this-&amp;gt;set_separator(&amp;#34;:&amp;#34;);  // 区切り文字を「:」に設定
+      this-&amp;gt;set_brackets(&amp;#34;&amp;#34;, &amp;#34;&amp;#34;);  // 囲み文字を空文字列に設定
+      ++it;
+    }
+    pctx.advance_to(it);
+    return base_type::parse(pctx);
+  }
+};
+
+#include &amp;lt;cstdint&amp;gt;
+
+int main()
+{
+  MyVector&amp;lt;std::uint8_t&amp;gt; v = {0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff};
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;{:c:02x}&amp;#34;, v) &amp;lt;&amp;lt; std::endl;
+}
+```
+* std::format_parse_context[link basic_format_parse_context.md]
+* pctx.begin()[link basic_format_parse_context/begin.md]
+* pctx.advance_to[link basic_format_parse_context/advance_to.md]
+* std::format[link format.md]
+
+
+#### 出力
+```
+aa:bb:cc:dd:ee:ff
+```
+
+
 ## バージョン
 ### 言語
 - C++23
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>range_formatter -- range_formatter のコード例の修正と動作確認</title>
      <link href="https://cpprefjp.github.io/reference/format/range_formatter.html"/>
      <id>5c792ff69e2d818f159ee83de3c41e6c87f16eea:reference/format/range_formatter.md</id>
      <updated>2025-09-28T20:38:10+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/format/range_formatter.md b/reference/format/range_formatter.md
index f093eca86..44b66d3d0 100644
--- a/reference/format/range_formatter.md
+++ b/reference/format/range_formatter.md
@@ -48,7 +48,7 @@ class MyVector {
 public:
   using base_type = std::vector&amp;lt;T&amp;gt;;
   using iterator = typename base_type::iterator;
-  using const_iterator = typename base_type::iterator;
+  using const_iterator = typename base_type::const_iterator;
   using value_type = typename base_type::value_type;
   using reference = typename base_type::reference;
   using const_reference = typename base_type::const_reference;
@@ -57,11 +57,11 @@ public:
   MyVector(std::initializer_list&amp;lt;T&amp;gt; init)
       : v_(init.begin(), init.end()) {}
 
-  iterator begin() { v_.begin(); }
-  const_iterator begin() const { v_.begin(); }
+  iterator begin() { return v_.begin(); }
+  const_iterator begin() const { return v_.begin(); }
 
-  iterator end() { v_.end(); }
-  const_iterator end() const { v_.end(); }
+  iterator end() { return v_.end(); }
+  const_iterator end() const { return v_.end(); }
 
   const std::vector&amp;lt;T&amp;gt;&amp;amp; base() const { return v_; }
 };
@@ -70,14 +70,14 @@ template &amp;lt;class T&amp;gt;
 constexpr std::range_format std::format_kind&amp;lt;MyVector&amp;lt;T&amp;gt;&amp;gt; = std::range_format::sequence;
 
 template &amp;lt;class T&amp;gt;
-class std::range_formatter&amp;lt;MyVector&amp;lt;T&amp;gt;&amp;gt; : public std::range_formatter&amp;lt;std::vector&amp;lt;T&amp;gt;&amp;gt; {
+class std::formatter&amp;lt;MyVector&amp;lt;T&amp;gt;&amp;gt; : public std::range_formatter&amp;lt;T&amp;gt; {
   bool is_colon = false;
-  using base_type = std::range_formatter&amp;lt;std::vector&amp;lt;T&amp;gt;&amp;gt;;
+  using base_type = std::range_formatter&amp;lt;T&amp;gt;;
 public:
 
   // コンパイル時の書式文字列の解析があるため、
   // constexprにする必要がある。
-  // この関数に渡されるパラメータは、{:%j}の%以降。
+  // この関数に渡されるパラメータは、{:c:02x}のc以降。
   // 解析がおわった場所を指すイテレータを返す。
   constexpr auto parse(std::format_parse_context&amp;amp; pctx) {
     auto it = pctx.begin();
@@ -105,7 +105,7 @@ public:
           ++out;
         }
         fctx.advance_to(out);
-        out = underlying().format(x, fctx);
+        out = this-&amp;gt;underlying().format(x, fctx);
       }
       return out;
     }
@@ -117,7 +117,7 @@ public:
 
 int main()
 {
-  std::vector&amp;lt;std::uint8_t&amp;gt; v = {0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff};
+  MyVector&amp;lt;std::uint8_t&amp;gt; v = {0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff};
   std::cout &amp;lt;&amp;lt; std::format(&amp;#34;{:c:02x}&amp;#34;, v) &amp;lt;&amp;lt; std::endl;
 }
 ```
@@ -136,15 +136,13 @@ int main()
 aa:bb:cc:dd:ee:ff
 ```
 
-(動作確認はできていない)
-
 ## バージョン
 ### 言語
 - C++23
 
 ### 処理系
 - [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [GCC](/implementation.md#gcc): 15.1 [mark verified]
 - [ICC](/implementation.md#icc): ??
 - [Visual C++](/implementation.md#visual_cpp): ??
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>count -- いくつかのコード例のコンパイルエラーを修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_count.html"/>
      <id>da5a5dcfca300d5754ad3f4588870677053539b6:reference/algorithm/ranges_count.md</id>
      <updated>2025-09-28T01:03:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_count.md b/reference/algorithm/ranges_count.md
index 1863ea312..4cea7f80f 100644
--- a/reference/algorithm/ranges_count.md
+++ b/reference/algorithm/ranges_count.md
@@ -145,7 +145,7 @@ struct Item {
 };
 
 int main() {
-  std::vector&amp;lt;Point&amp;gt; v = {
+  std::vector&amp;lt;Item&amp;gt; v = {
     {1, &amp;#34;foo&amp;#34;},
     {3, &amp;#34;bar&amp;#34;},
     {5, &amp;#34;foo&amp;#34;},
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>find_end -- いくつかのコード例のコンパイルエラーを修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_find_end.html"/>
      <id>da5a5dcfca300d5754ad3f4588870677053539b6:reference/algorithm/ranges_find_end.md</id>
      <updated>2025-09-28T01:03:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_find_end.md b/reference/algorithm/ranges_find_end.md
index fb9caa812..6369dfd7e 100644
--- a/reference/algorithm/ranges_find_end.md
+++ b/reference/algorithm/ranges_find_end.md
@@ -66,19 +66,20 @@ namespace std::ranges {
 #include &amp;lt;iostream&amp;gt;
 #include &amp;lt;vector&amp;gt;
 #include &amp;lt;list&amp;gt;
+#include &amp;lt;ranges&amp;gt;
 
 int main() {
   std::vector&amp;lt;int&amp;gt; v = { 1,2,1,2,3 };
   std::list&amp;lt;int&amp;gt; ls = { 1,2 };
 
   // 1,2 と連続している最後のシーケンスを探す
-  subrange it = std::ranges::find_end(v, ls);
+  std::ranges::subrange sr = std::ranges::find_end(v, ls);
   // v[2] の位置を指すイテレータが見つかる。
   // v[0] の位置を指すイテレータではない。
-  if (it == v.end()) {
+  if (sr.empty()) {
     std::cout &amp;lt;&amp;lt; &amp;#34;not found&amp;#34; &amp;lt;&amp;lt; std::endl;
   } else {
-    std::cout &amp;lt;&amp;lt; &amp;#34;found: index==&amp;#34; &amp;lt;&amp;lt; std::distance(v.begin(), it) &amp;lt;&amp;lt; std::endl;
+    std::cout &amp;lt;&amp;lt; &amp;#34;found: index==&amp;#34; &amp;lt;&amp;lt; std::distance(v.begin(), sr.begin()) &amp;lt;&amp;lt; std::endl;
   }
 }
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>find_first_of -- いくつかのコード例のコンパイルエラーを修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_find_first_of.html"/>
      <id>da5a5dcfca300d5754ad3f4588870677053539b6:reference/algorithm/ranges_find_first_of.md</id>
      <updated>2025-09-28T01:03:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_find_first_of.md b/reference/algorithm/ranges_find_first_of.md
index b385eb8f3..a4beb961a 100644
--- a/reference/algorithm/ranges_find_first_of.md
+++ b/reference/algorithm/ranges_find_first_of.md
@@ -68,7 +68,7 @@ int main() {
   std::list ls = { 2,4,6,8 };
 
   // 2,4,6,8 のどれかと一致する最初の要素を返す
-  auto it = std::ranges::find_first_of(v, ls.begin(), ls.end());
+  auto it = std::ranges::find_first_of(v, ls);
   if (it == v.end()) {
     std::cout &amp;lt;&amp;lt; &amp;#34;not found&amp;#34; &amp;lt;&amp;lt; std::endl;
   } else {
@@ -77,8 +77,6 @@ int main() {
 }
 ```
 * std::ranges::find_first_of[color ff0000]
-* ls.begin()[link /reference/list/list/begin.md]
-* ls.end()[link /reference/list/list/end.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>fold_right -- いくつかのコード例のコンパイルエラーを修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_fold_right.html"/>
      <id>da5a5dcfca300d5754ad3f4588870677053539b6:reference/algorithm/ranges_fold_right.md</id>
      <updated>2025-09-28T01:03:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_fold_right.md b/reference/algorithm/ranges_fold_right.md
index 9d90cfa0c..5611e23a1 100644
--- a/reference/algorithm/ranges_fold_right.md
+++ b/reference/algorithm/ranges_fold_right.md
@@ -160,7 +160,7 @@ return accum;
 #include &amp;lt;functional&amp;gt;
 #include &amp;lt;format&amp;gt;
 #include &amp;lt;vector&amp;gt;
-#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;print&amp;gt;
 #include &amp;lt;concepts&amp;gt;
 
 using namespace std::ranges;
@@ -206,7 +206,7 @@ int main() {
 #include &amp;lt;functional&amp;gt;
 #include &amp;lt;format&amp;gt;
 #include &amp;lt;vector&amp;gt;
-#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;print&amp;gt;
 #include &amp;lt;concepts&amp;gt;
 
 using namespace std::ranges;
@@ -253,7 +253,7 @@ init -&amp;gt; f -&amp;gt; e -&amp;gt; d -&amp;gt; c -&amp;gt; b -&amp;gt; a
 #include &amp;lt;functional&amp;gt;
 #include &amp;lt;format&amp;gt;
 #include &amp;lt;vector&amp;gt;
-#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;print&amp;gt;
 #include &amp;lt;concepts&amp;gt;
 
 using namespace std::ranges;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>for_each -- いくつかのコード例のコンパイルエラーを修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_for_each.html"/>
      <id>da5a5dcfca300d5754ad3f4588870677053539b6:reference/algorithm/ranges_for_each.md</id>
      <updated>2025-09-28T01:03:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_for_each.md b/reference/algorithm/ranges_for_each.md
index e9a3ef5a9..8638277ae 100644
--- a/reference/algorithm/ranges_for_each.md
+++ b/reference/algorithm/ranges_for_each.md
@@ -79,7 +79,7 @@ for_each_result {
 #include &amp;lt;algorithm&amp;gt;
 
 int main() {
-  constexpr std::array v = { 3, 1, 4 };
+  std::array v = { 3, 1, 4 };
 
   // vの全ての要素にラムダ式を適用する
   std::ranges::for_each(v, [](int x) { std::cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; std::endl; });
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>for_each_n -- いくつかのコード例のコンパイルエラーを修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_for_each_n.html"/>
      <id>da5a5dcfca300d5754ad3f4588870677053539b6:reference/algorithm/ranges_for_each_n.md</id>
      <updated>2025-09-28T01:03:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_for_each_n.md b/reference/algorithm/ranges_for_each_n.md
index 92b0e79c7..7095a7aeb 100644
--- a/reference/algorithm/ranges_for_each_n.md
+++ b/reference/algorithm/ranges_for_each_n.md
@@ -62,7 +62,7 @@ void f(int&amp;amp; x)
 
 int main()
 {
-  constexpr std::array&amp;lt;int&amp;gt; v = {3, 1, 4, 5, 2};
+  std::array v = {3, 1, 4, 5, 2};
 
   // コンテナvの先頭3要素に、関数f()を適用する。
   // 関数f()は要素の変更を行う
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>transform -- いくつかのコード例のコンパイルエラーを修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_transform.html"/>
      <id>da5a5dcfca300d5754ad3f4588870677053539b6:reference/algorithm/ranges_transform.md</id>
      <updated>2025-09-28T01:03:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_transform.md b/reference/algorithm/ranges_transform.md
index 349d48de6..6650810ac 100644
--- a/reference/algorithm/ranges_transform.md
+++ b/reference/algorithm/ranges_transform.md
@@ -172,7 +172,7 @@ int main() {
   std::vector&amp;lt;std::string&amp;gt; result;
 
   // v1[n] の文字を v2[n] 回繰り返した文字列を返す
-  std::ranges::transform(v1, v2, std::back_inserter(result), [](char a, int b) { return std::to_string(b, a); });
+  std::ranges::transform(v1, v2, std::back_inserter(result), [](char a, int b) { return std::string(b, a); });
 
   for (const std::string&amp;amp; s : result) {
     std::cout &amp;lt;&amp;lt; s &amp;lt;&amp;lt; std::endl;
@@ -180,7 +180,6 @@ int main() {
 }
 ```
 * std::ranges::transform[color ff0000]
-* std::to_string[link /reference/string/to_string.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>transform -- いくつかのコード例のコンパイルエラーを修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/transform.html"/>
      <id>da5a5dcfca300d5754ad3f4588870677053539b6:reference/algorithm/transform.md</id>
      <updated>2025-09-28T01:03:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/transform.md b/reference/algorithm/transform.md
index 3c49dc84c..425eb2087 100644
--- a/reference/algorithm/transform.md
+++ b/reference/algorithm/transform.md
@@ -136,7 +136,7 @@ int main() {
 
   // v1[n] の文字を v2[n] 回繰り返した文字列を返す
   std::transform(v1.begin(), v1.end(), v2.begin(), std::back_inserter(result),
-    [](char a, int b) { return std::to_string(b, a); });
+    [](char a, int b) { return std::string(b, a); });
 
   std::for_each(result.begin(), result.end(),
     [](const std::string&amp;amp; s) { std::cout &amp;lt;&amp;lt; s &amp;lt;&amp;lt; std::endl; });
@@ -145,7 +145,6 @@ int main() {
 * std::transform[color ff0000]
 * result.begin()[link /reference/vector/vector/begin.md]
 * result.end()[link /reference/vector/vector/end.md]
-* std::to_string[link /reference/string/to_string.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>max_digits10 -- いくつかのコード例のコンパイルエラーを修正</title>
      <link href="https://cpprefjp.github.io/reference/limits/numeric_limits/max_digits10.html"/>
      <id>da5a5dcfca300d5754ad3f4588870677053539b6:reference/limits/numeric_limits/max_digits10.md</id>
      <updated>2025-09-28T01:03:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/limits/numeric_limits/max_digits10.md b/reference/limits/numeric_limits/max_digits10.md
index 9ba4305ba..10a2c46c6 100644
--- a/reference/limits/numeric_limits/max_digits10.md
+++ b/reference/limits/numeric_limits/max_digits10.md
@@ -40,6 +40,7 @@ static constexpr int max_digits10;
 #include &amp;lt;cmath&amp;gt;
 #include &amp;lt;sstream&amp;gt;
 #include &amp;lt;bitset&amp;gt;
+#include &amp;lt;cstring&amp;gt;
 
 std::string make_float_string(float f, int digits) {
   std::stringstream s;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>declare_no_pointers -- いくつかのコード例のコンパイルエラーを修正</title>
      <link href="https://cpprefjp.github.io/reference/memory/declare_no_pointers.html"/>
      <id>da5a5dcfca300d5754ad3f4588870677053539b6:reference/memory/declare_no_pointers.md</id>
      <updated>2025-09-28T01:03:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/memory/declare_no_pointers.md b/reference/memory/declare_no_pointers.md
index 45a6d7f7b..fc49983ca 100644
--- a/reference/memory/declare_no_pointers.md
+++ b/reference/memory/declare_no_pointers.md
@@ -55,7 +55,7 @@ namespace std {
 // GC負荷が大きい関数のダミー定義
 void some_operation_that_cause_gc() {}
 
-int* ptr = nullptr;
+intptr_t* ptr = nullptr;
 
 int main()
 {
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>emit -- いくつかのコード例のコンパイルエラーを修正</title>
      <link href="https://cpprefjp.github.io/reference/syncstream/basic_osyncstream/emit.html"/>
      <id>da5a5dcfca300d5754ad3f4588870677053539b6:reference/syncstream/basic_osyncstream/emit.md</id>
      <updated>2025-09-28T01:03:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/syncstream/basic_osyncstream/emit.md b/reference/syncstream/basic_osyncstream/emit.md
index 59493c528..2066cbbe3 100644
--- a/reference/syncstream/basic_osyncstream/emit.md
+++ b/reference/syncstream/basic_osyncstream/emit.md
@@ -46,7 +46,7 @@ void emit();
 
 int main()
 {
-  osyncstream bout(std::cout);
+  std::osyncstream bout(std::cout);
   bout &amp;lt;&amp;lt; &amp;#34;Hello,&amp;#34; &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;      // フラッシュしない
   bout.emit();                   // 文字は転送される。std::cout はフラッシュしない
   bout &amp;lt;&amp;lt; &amp;#34;World!&amp;#34; &amp;lt;&amp;lt; std::endl; // フラッシュしない。std::cout はフラッシュしない
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>rdbuf -- いくつかのコード例のコンパイルエラーを修正</title>
      <link href="https://cpprefjp.github.io/reference/syncstream/basic_osyncstream/rdbuf.html"/>
      <id>da5a5dcfca300d5754ad3f4588870677053539b6:reference/syncstream/basic_osyncstream/rdbuf.md</id>
      <updated>2025-09-28T01:03:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/syncstream/basic_osyncstream/rdbuf.md b/reference/syncstream/basic_osyncstream/rdbuf.md
index fbc0e0160..08d401319 100644
--- a/reference/syncstream/basic_osyncstream/rdbuf.md
+++ b/reference/syncstream/basic_osyncstream/rdbuf.md
@@ -30,7 +30,7 @@ syncbuf_type* rdbuf() const noexcept;
 int main()
 {
   std::osyncstream bout(std::cout);
-  bout1 &amp;lt;&amp;lt; &amp;#34;Hello, &amp;#34;;
+  bout &amp;lt;&amp;lt; &amp;#34;Hello, &amp;#34;;
 
   auto syncbuf_ptr = bout.rdbuf();
   syncbuf_ptr-&amp;gt;emit(); // 文字が転送される
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>get_wrapped -- いくつかのコード例のコンパイルエラーを修正</title>
      <link href="https://cpprefjp.github.io/reference/syncstream/basic_syncbuf/get_wrapped.html"/>
      <id>da5a5dcfca300d5754ad3f4588870677053539b6:reference/syncstream/basic_syncbuf/get_wrapped.md</id>
      <updated>2025-09-28T01:03:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/syncstream/basic_syncbuf/get_wrapped.md b/reference/syncstream/basic_syncbuf/get_wrapped.md
index 7a56f6b90..f88d3d3a5 100644
--- a/reference/syncstream/basic_syncbuf/get_wrapped.md
+++ b/reference/syncstream/basic_syncbuf/get_wrapped.md
@@ -30,7 +30,7 @@ streambuf_type* get_wrapped() const noexcept;
 int main()
 {
   std::osyncstream bout(std::cout);
-  bout1 &amp;lt;&amp;lt; &amp;#34;Hello, &amp;#34;;
+  bout &amp;lt;&amp;lt; &amp;#34;Hello, &amp;#34;;
   {
     // 通常、std::osyncstream::get_wrapped() から呼ばれる。
     std::osyncstream(bout.get_wrapped()) &amp;lt;&amp;lt; &amp;#34;Goodbye, &amp;#34; &amp;lt;&amp;lt; &amp;#34;Planet!&amp;#34; &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>swap -- いくつかのコード例のコンパイルエラーを修正</title>
      <link href="https://cpprefjp.github.io/reference/syncstream/basic_syncbuf/swap.html"/>
      <id>da5a5dcfca300d5754ad3f4588870677053539b6:reference/syncstream/basic_syncbuf/swap.md</id>
      <updated>2025-09-28T01:03:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/syncstream/basic_syncbuf/swap.md b/reference/syncstream/basic_syncbuf/swap.md
index 4e3f50fc0..f18b2a8c4 100644
--- a/reference/syncstream/basic_syncbuf/swap.md
+++ b/reference/syncstream/basic_syncbuf/swap.md
@@ -41,7 +41,7 @@ int main()
   std::osyncstream aout{std::cout};
   aout &amp;lt;&amp;lt; &amp;#34;Hello, &amp;#34;;
 
-  std::osyncstream bout;
+  std::osyncstream bout{std::cout};
   bout &amp;lt;&amp;lt; &amp;#34;World!&amp;#34;;
 
   aout.rdbuf()-&amp;gt;swap(*bout.rdbuf());
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>swap (非メンバ関数) -- いくつかのコード例のコンパイルエラーを修正</title>
      <link href="https://cpprefjp.github.io/reference/syncstream/basic_syncbuf/swap_free.html"/>
      <id>da5a5dcfca300d5754ad3f4588870677053539b6:reference/syncstream/basic_syncbuf/swap_free.md</id>
      <updated>2025-09-28T01:03:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/syncstream/basic_syncbuf/swap_free.md b/reference/syncstream/basic_syncbuf/swap_free.md
index 1aaecf1f6..e29f008e3 100644
--- a/reference/syncstream/basic_syncbuf/swap_free.md
+++ b/reference/syncstream/basic_syncbuf/swap_free.md
@@ -40,7 +40,7 @@ int main()
   std::osyncstream aout{std::cout};
   aout &amp;lt;&amp;lt; &amp;#34;Hello, &amp;#34;;
 
-  std::osyncstream bout;
+  std::osyncstream bout{std::cout};
   bout &amp;lt;&amp;lt; &amp;#34;World!&amp;#34;;
 
   std::swap(*aout.rdbuf(), *bout.rdbuf());
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>message -- いくつかのコード例のコンパイルエラーを修正</title>
      <link href="https://cpprefjp.github.io/reference/system_error/error_condition/message.html"/>
      <id>da5a5dcfca300d5754ad3f4588870677053539b6:reference/system_error/error_condition/message.md</id>
      <updated>2025-09-28T01:03:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/system_error/error_condition/message.md b/reference/system_error/error_condition/message.md
index c9879b34d..51435eff6 100644
--- a/reference/system_error/error_condition/message.md
+++ b/reference/system_error/error_condition/message.md
@@ -34,7 +34,7 @@ int main()
   std::error_condition econd(static_cast&amp;lt;int&amp;gt;(std::errc::invalid_argument),
                              std::generic_category());
 
-  std::cout &amp;lt;&amp;lt; ec.message() &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; econd.message() &amp;lt;&amp;lt; std::endl;
 }
 ```
 * message()[color ff0000]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>hash_function -- いくつかのコード例のコンパイルエラーを修正</title>
      <link href="https://cpprefjp.github.io/reference/unordered_set/unordered_multiset/hash_function.html"/>
      <id>da5a5dcfca300d5754ad3f4588870677053539b6:reference/unordered_set/unordered_multiset/hash_function.md</id>
      <updated>2025-09-28T01:03:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_set/unordered_multiset/hash_function.md b/reference/unordered_set/unordered_multiset/hash_function.md
index 6513c2e7d..f5c533582 100644
--- a/reference/unordered_set/unordered_multiset/hash_function.md
+++ b/reference/unordered_set/unordered_multiset/hash_function.md
@@ -44,7 +44,7 @@ int main()
 {
   std::unordered_multiset&amp;lt;int&amp;gt; ums{ 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, };
 
-  decltype(um)::hasher hash{ ums.hash_function() };
+  decltype(ums)::hasher hash{ ums.hash_function() };
 
   std::cout &amp;lt;&amp;lt; &amp;#34;hash(1) = &amp;#34; &amp;lt;&amp;lt; hash(1) &amp;lt;&amp;lt; std::endl;
   std::cout &amp;lt;&amp;lt; &amp;#34;hash(2) = &amp;#34; &amp;lt;&amp;lt; hash(2) &amp;lt;&amp;lt; std::endl;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>key_eq -- いくつかのコード例のコンパイルエラーを修正</title>
      <link href="https://cpprefjp.github.io/reference/unordered_set/unordered_multiset/key_eq.html"/>
      <id>da5a5dcfca300d5754ad3f4588870677053539b6:reference/unordered_set/unordered_multiset/key_eq.md</id>
      <updated>2025-09-28T01:03:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_set/unordered_multiset/key_eq.md b/reference/unordered_set/unordered_multiset/key_eq.md
index c30fd02ac..c02bc41b9 100644
--- a/reference/unordered_set/unordered_multiset/key_eq.md
+++ b/reference/unordered_set/unordered_multiset/key_eq.md
@@ -42,7 +42,7 @@ int main()
 
   std::unordered_multiset&amp;lt;int&amp;gt; ums{ 1, 2, 3, 4, 5, 6, };
 
-  decltype(um)::key_equal eq{ ums.key_eq() };
+  decltype(ums)::key_equal eq{ ums.key_eq() };
 
   std::cout &amp;lt;&amp;lt; &amp;#34;eq(1, 2) = &amp;#34; &amp;lt;&amp;lt; eq(1, 2) &amp;lt;&amp;lt; std::endl;
   std::cout &amp;lt;&amp;lt; &amp;#34;eq(1, 1) = &amp;#34; &amp;lt;&amp;lt; eq(1, 1) &amp;lt;&amp;lt; std::endl;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator== -- いくつかのコード例のコンパイルエラーを修正</title>
      <link href="https://cpprefjp.github.io/reference/valarray/slice/op_equal.html"/>
      <id>da5a5dcfca300d5754ad3f4588870677053539b6:reference/valarray/slice/op_equal.md</id>
      <updated>2025-09-28T01:03:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/slice/op_equal.md b/reference/valarray/slice/op_equal.md
index 6a3e79bea..cceeee471 100644
--- a/reference/valarray/slice/op_equal.md
+++ b/reference/valarray/slice/op_equal.md
@@ -37,9 +37,9 @@ return x.start() == y.start() &amp;amp;&amp;amp;
 
 int main()
 {
-  std::slice s1{.start = 3, .length = 5, .stride = 7};
-  std::slice s2{.start = 3, .length = 5, .stride = 7};
-  std::slice s3{.start = 3, .length = 5, .stride = 6};
+  std::slice s1{3, 5, 7};
+  std::slice s2{3, 5, 7};
+  std::slice s3{3, 5, 6};
 
   assert(s1 == s2);
   assert(s1 != s3);
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;&lt; -- 出力例、処理系の記載を追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/local_info/op_ostream.html"/>
      <id>699900b1379738a30e89d6b7e44e8f90b4a45c1e:reference/chrono/local_info/op_ostream.md</id>
      <updated>2025-09-27T17:41:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/local_info/op_ostream.md b/reference/chrono/local_info/op_ostream.md
index 0816a4bbe..66e3087dc 100644
--- a/reference/chrono/local_info/op_ostream.md
+++ b/reference/chrono/local_info/op_ostream.md
@@ -55,15 +55,14 @@ int main()
 
 ### 出力例
 ```
+[[1951-09-08 15:00:00,32767-12-31 00:00:00,09:00:00,0min,JST]]
 ```
 
-(未検証)
-
 ## バージョン
 ### 言語
 - C++20
 
 ### 処理系
 - [Clang](/implementation.md#clang): 9.0 [mark noimpl]
-- [GCC](/implementation.md#gcc): 9.2 [mark noimpl]
+- [GCC](/implementation.md#gcc): 9.2 [mark noimpl], 15.1 [mark verified]
 - [Visual C++](/implementation.md#visual_cpp): 2019 Update 3 [mark noimpl]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;&lt; -- 出力例、処理系の記載を追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/sys_info/op_ostream.html"/>
      <id>699900b1379738a30e89d6b7e44e8f90b4a45c1e:reference/chrono/sys_info/op_ostream.md</id>
      <updated>2025-09-27T17:41:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/sys_info/op_ostream.md b/reference/chrono/sys_info/op_ostream.md
index ac7239a1d..b05b676bb 100644
--- a/reference/chrono/sys_info/op_ostream.md
+++ b/reference/chrono/sys_info/op_ostream.md
@@ -52,15 +52,14 @@ int main()
 
 ### 出力例
 ```
+[1951-09-08 15:00:00,32767-12-31 00:00:00,09:00:00,0min,JST]
 ```
 
-(未検証)
-
 ## バージョン
 ### 言語
 - C++20
 
 ### 処理系
 - [Clang](/implementation.md#clang): 9.0 [mark noimpl]
-- [GCC](/implementation.md#gcc): 9.2 [mark noimpl]
+- [GCC](/implementation.md#gcc): 9.2 [mark noimpl], 15.1 [mark verified]
 - [Visual C++](/implementation.md#visual_cpp): 2019 Update 3 [mark noimpl]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>to_sys -- 出力例、処理系の記載を追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/time_zone/to_sys.html"/>
      <id>699900b1379738a30e89d6b7e44e8f90b4a45c1e:reference/chrono/time_zone/to_sys.md</id>
      <updated>2025-09-27T17:41:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/time_zone/to_sys.md b/reference/chrono/time_zone/to_sys.md
index ef9ad6c7a..be513ff8d 100644
--- a/reference/chrono/time_zone/to_sys.md
+++ b/reference/chrono/time_zone/to_sys.md
@@ -109,17 +109,19 @@ int main()
 
 ### 出力例
 ```
+2016-11-06 01:30:00 is ambiguous.  It could be
+2016-11-06 01:30:00 EDT == 2016-11-06 05:30:00 UTC or
+2016-11-06 01:30:00 EST == 2016-11-06 06:30:00 UTC
+2016-11-06 06:30:00
 ```
 
-(未検証)
-
 ## バージョン
 ### 言語
 - C++20
 
 ### 処理系
 - [Clang](/implementation.md#clang): 9.0 [mark noimpl]
-- [GCC](/implementation.md#gcc): 9.2 [mark noimpl]
+- [GCC](/implementation.md#gcc): 9.2 [mark noimpl], 15.1 [mark verified]
 - [Visual C++](/implementation.md#visual_cpp): 2019 Update 3 [mark noimpl]
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>file_time -- コード例のフォーマット文字列を修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/file_time.html"/>
      <id>55d08282da0455603832a9a3937a2e3073cd36aa:reference/chrono/file_time.md</id>
      <updated>2025-09-27T16:35:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/file_time.md b/reference/chrono/file_time.md
index 10e3d7a86..fa2a1239b 100644
--- a/reference/chrono/file_time.md
+++ b/reference/chrono/file_time.md
@@ -180,12 +180,12 @@ int main()
   std::cout &amp;lt;&amp;lt; std::format(&amp;#34;3 : {0:%Y/%m/%d %H:%M:%S}&amp;#34;, tp) &amp;lt;&amp;lt; std::endl;
 
   // 日付だけ出力
-  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;4 : %Y年%m月%d日&amp;#34;, tp) &amp;lt;&amp;lt; std::endl;
-  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;5 : %F&amp;#34;, tp) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;4 : {:%Y年%m月%d日}&amp;#34;, tp) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;5 : {:%F}&amp;#34;, tp) &amp;lt;&amp;lt; std::endl;
 
   // 時間だけ出力
-  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;6 : %H時%M分%S秒&amp;#34;, tp) &amp;lt;&amp;lt; std::endl;
-  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;7 : %T&amp;#34;, tp) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;6 : {:%H時%M分%S秒}&amp;#34;, tp) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;7 : {:%T}&amp;#34;, tp) &amp;lt;&amp;lt; std::endl;
 }
 ```
 * fs::file_time_type[link /reference/filesystem/file_time_type.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>local_time -- コード例のフォーマット文字列を修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/local_time.html"/>
      <id>55d08282da0455603832a9a3937a2e3073cd36aa:reference/chrono/local_time.md</id>
      <updated>2025-09-27T16:35:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/local_time.md b/reference/chrono/local_time.md
index d1c47231c..868a3c5d0 100644
--- a/reference/chrono/local_time.md
+++ b/reference/chrono/local_time.md
@@ -196,12 +196,12 @@ int main()
   std::cout &amp;lt;&amp;lt; std::format(&amp;#34;3 : {0:%Y/%m/%d %H:%M:%S}&amp;#34;, lt) &amp;lt;&amp;lt; std::endl;
 
   // 日付だけ出力
-  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;4 : %Y年%m月%d日&amp;#34;, lt) &amp;lt;&amp;lt; std::endl;
-  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;5 : %F&amp;#34;, lt) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;4 : {:%Y年%m月%d日}&amp;#34;, lt) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;5 : {:%F}&amp;#34;, lt) &amp;lt;&amp;lt; std::endl;
 
   // 時間だけ出力
-  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;6 : %H時%M分%S秒&amp;#34;, lt) &amp;lt;&amp;lt; std::endl;
-  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;7 : %T&amp;#34;, lt) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;6 : {:%H時%M分%S秒}&amp;#34;, lt) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;7 : {:%T}&amp;#34;, lt) &amp;lt;&amp;lt; std::endl;
 
   // 12時間時計で出力
   // (%pでロケール固有の「午前」「午後」を出力するには、日本のロケールを指定する必要がある)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sys_time -- コード例のフォーマット文字列を修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/sys_time.html"/>
      <id>55d08282da0455603832a9a3937a2e3073cd36aa:reference/chrono/sys_time.md</id>
      <updated>2025-09-27T16:35:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/sys_time.md b/reference/chrono/sys_time.md
index ccd499c6a..4002f85f0 100644
--- a/reference/chrono/sys_time.md
+++ b/reference/chrono/sys_time.md
@@ -229,12 +229,12 @@ int main()
   std::cout &amp;lt;&amp;lt; std::format(&amp;#34;3 : {0:%Y/%m/%d %H:%M:%S %Z}&amp;#34;, now_sec) &amp;lt;&amp;lt; std::endl;
 
   // 日付だけ出力
-  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;4 : %Y年%m月%d日&amp;#34;, now_sec) &amp;lt;&amp;lt; std::endl;
-  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;5 : %F&amp;#34;, now_sec) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;4 : {:%Y年%m月%d日}&amp;#34;, now_sec) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;5 : {:%F}&amp;#34;, now_sec) &amp;lt;&amp;lt; std::endl;
 
   // 時間だけ出力
-  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;6 : %H時%M分%S秒&amp;#34;, now_sec) &amp;lt;&amp;lt; std::endl;
-  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;7 : %T&amp;#34;, now_sec) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;6 : {:%H時%M分%S秒}&amp;#34;, now_sec) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;7 : {:%T}&amp;#34;, now_sec) &amp;lt;&amp;lt; std::endl;
 }
 ```
 * chrono::system_clock[link system_clock.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>tai_time -- コード例のフォーマット文字列を修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/tai_time.html"/>
      <id>55d08282da0455603832a9a3937a2e3073cd36aa:reference/chrono/tai_time.md</id>
      <updated>2025-09-27T16:35:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/tai_time.md b/reference/chrono/tai_time.md
index d780963d2..3dd6fe98b 100644
--- a/reference/chrono/tai_time.md
+++ b/reference/chrono/tai_time.md
@@ -179,12 +179,12 @@ int main()
   std::cout &amp;lt;&amp;lt; std::format(&amp;#34;3 : {0:%Y/%m/%d %H:%M:%S %Z}&amp;#34;, now_sec) &amp;lt;&amp;lt; std::endl;
 
   // 日付だけ出力
-  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;4 : %Y年%m月%d日&amp;#34;, now_sec) &amp;lt;&amp;lt; std::endl;
-  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;5 : %F&amp;#34;, now_sec) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;4 : {:%Y年%m月%d日}&amp;#34;, now_sec) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;5 : {:%F}&amp;#34;, now_sec) &amp;lt;&amp;lt; std::endl;
 
   // 時間だけ出力
-  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;6 : %H時%M分%S秒&amp;#34;, now_sec) &amp;lt;&amp;lt; std::endl;
-  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;7 : %T&amp;#34;, now_sec) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;6 : {:%H時%M分%S秒}&amp;#34;, now_sec) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;7 : {:%T}&amp;#34;, now_sec) &amp;lt;&amp;lt; std::endl;
 }
 ```
 * chrono::tai_clock[link tai_clock.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>utc_time -- コード例のフォーマット文字列を修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/utc_time.html"/>
      <id>55d08282da0455603832a9a3937a2e3073cd36aa:reference/chrono/utc_time.md</id>
      <updated>2025-09-27T16:35:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/utc_time.md b/reference/chrono/utc_time.md
index 2a16f9431..e7e1b656e 100644
--- a/reference/chrono/utc_time.md
+++ b/reference/chrono/utc_time.md
@@ -174,12 +174,12 @@ int main()
   std::cout &amp;lt;&amp;lt; std::format(&amp;#34;3 : {0:%Y/%m/%d %H:%M:%S %Z}&amp;#34;, now_sec) &amp;lt;&amp;lt; std::endl;
 
   // 日付だけ出力
-  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;4 : %Y年%m月%d日&amp;#34;, now_sec) &amp;lt;&amp;lt; std::endl;
-  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;5 : %F&amp;#34;, now_sec) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;4 : {:%Y年%m月%d日}&amp;#34;, now_sec) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;5 : {:%F}&amp;#34;, now_sec) &amp;lt;&amp;lt; std::endl;
 
   // 時間だけ出力
-  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;6 : %H時%M分%S秒&amp;#34;, now_sec) &amp;lt;&amp;lt; std::endl;
-  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;7 : %T&amp;#34;, now_sec) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;6 : {:%H時%M分%S秒}&amp;#34;, now_sec) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;7 : {:%T}&amp;#34;, now_sec) &amp;lt;&amp;lt; std::endl;
 }
 ```
 * chrono::utc_clock[link utc_clock.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>zoned_time -- コード例のフォーマット文字列を修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/zoned_time.html"/>
      <id>55d08282da0455603832a9a3937a2e3073cd36aa:reference/chrono/zoned_time.md</id>
      <updated>2025-09-27T16:35:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/zoned_time.md b/reference/chrono/zoned_time.md
index 6fd7254a2..23b9b3d50 100644
--- a/reference/chrono/zoned_time.md
+++ b/reference/chrono/zoned_time.md
@@ -176,16 +176,16 @@ int main()
   std::cout &amp;lt;&amp;lt; std::format(&amp;#34;4 : {0:%Y/%m/%d %H:%M:%S}&amp;#34;, zt_sec) &amp;lt;&amp;lt; std::endl;
 
   // 日付だけ出力
-  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;5 : %Y年%m月%d日&amp;#34;, zt_sec) &amp;lt;&amp;lt; std::endl;
-  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;6 : %F&amp;#34;, zt_sec) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;5 : {:%Y年%m月%d日}&amp;#34;, zt_sec) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;6 : {:%F}&amp;#34;, zt_sec) &amp;lt;&amp;lt; std::endl;
 
   // 時間だけ出力
-  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;7 : %H時%M分%S秒&amp;#34;, zt_sec) &amp;lt;&amp;lt; std::endl;
-  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;8 : %T&amp;#34;, zt_sec) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;7 : {:%H時%M分%S秒}&amp;#34;, zt_sec) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;8 : {:%T}&amp;#34;, zt_sec) &amp;lt;&amp;lt; std::endl;
 
   // 12時間時計で出力
   // (%pでロケール固有の「午前」「午後」を出力するには、日本のロケールを指定する必要がある)
-  std::cout &amp;lt;&amp;lt; std::format(std::locale(&amp;#34;ja_JP.UTF-8&amp;#34;), &amp;#34;9 : %Y年%m月%d日 %p %I時%M分%S秒&amp;#34;, zt_sec) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(std::locale(&amp;#34;ja_JP.UTF-8&amp;#34;), &amp;#34;9 : {:%Y年%m月%d日 %p %I時%M分%S秒}&amp;#34;, zt_sec) &amp;lt;&amp;lt; std::endl;
 }
 ```
 * chrono::zoned_time[color ff0000]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>formatter -- コード例のフォーマット文字列を修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/zoned_time/formatter.html"/>
      <id>55d08282da0455603832a9a3937a2e3073cd36aa:reference/chrono/zoned_time/formatter.md</id>
      <updated>2025-09-27T16:35:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/zoned_time/formatter.md b/reference/chrono/zoned_time/formatter.md
index 4ad843b46..92d6a2651 100644
--- a/reference/chrono/zoned_time/formatter.md
+++ b/reference/chrono/zoned_time/formatter.md
@@ -52,16 +52,16 @@ int main()
   std::cout &amp;lt;&amp;lt; std::format(&amp;#34;4 : {0:%Y/%m/%d %H:%M:%S}&amp;#34;, zt_sec) &amp;lt;&amp;lt; std::endl;
 
   // 日付だけ出力
-  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;5 : %Y年%m月%d日&amp;#34;, zt_sec) &amp;lt;&amp;lt; std::endl;
-  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;6 : %F&amp;#34;, zt_sec) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;5 : {:%Y年%m月%d日}&amp;#34;, zt_sec) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;6 : {:%F}&amp;#34;, zt_sec) &amp;lt;&amp;lt; std::endl;
 
   // 時間だけ出力
-  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;7 : %H時%M分%S秒&amp;#34;, zt_sec) &amp;lt;&amp;lt; std::endl;
-  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;8 : %T&amp;#34;, zt_sec) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;7 : {:%H時%M分%S秒}&amp;#34;, zt_sec) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;8 : {:%T}&amp;#34;, zt_sec) &amp;lt;&amp;lt; std::endl;
 
   // 12時間時計で出力
   // (%pでロケール固有の「午前」「午後」を出力するには、日本のロケールを指定する必要がある)
-  std::cout &amp;lt;&amp;lt; std::format(std::locale(&amp;#34;ja_JP.UTF-8&amp;#34;), &amp;#34;9 : %Y年%m月%d日 %p %I時%M分%S秒&amp;#34;, zt_sec) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(std::locale(&amp;#34;ja_JP.UTF-8&amp;#34;), &amp;#34;9 : {:%Y年%m月%d日 %p %I時%M分%S秒}&amp;#34;, zt_sec) &amp;lt;&amp;lt; std::endl;
 }
 ```
 * chrono::system_clock[link /reference/chrono/system_clock.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
</feed>
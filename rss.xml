<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2020-06-01T15:40:20.941823</updated>
  <id>d14fe3ab-95e0-4f78-a45e-729393080031</id>

  
    <entry>
      <title>insert_after -- forward_list::insert_after : 戻り値について追記</title>
      <link href="https://cpprefjp.github.io/reference/forward_list/forward_list/insert_after.html"/>
      <id>279c624c17a1e108887fc4a35ee67da530d8c1fe:reference/forward_list/forward_list/insert_after.md</id>
      <updated>2020-06-02T00:37:05+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/forward_list/forward_list/insert_after.md b/reference/forward_list/forward_list/insert_after.md
index c67381c48..13010fa28 100644
--- a/reference/forward_list/forward_list/insert_after.md
+++ b/reference/forward_list/forward_list/insert_after.md
@@ -38,8 +38,9 @@ iterator insert_after(const_iterator position,
 
 
 ## 戻り値
-挿入された要素を指すイテレータ
 
+- (1), (2) : 挿入された要素を指すイテレータ
+- (3), (4), (5) : 最後に挿入された要素を指すイテレータ、挿入されなかった時は`position`
 
 ## 計算量
 定数時間
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>year_month_day -- year_month_day : formatterを追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day.html"/>
      <id>fd1b42604debcc02ed94f9b6aae854d7db38cbc3:reference/chrono/year_month_day.md</id>
      <updated>2020-06-01T22:40:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day.md b/reference/chrono/year_month_day.md
index f22bf93f5..89c9eef9f 100644
--- a/reference/chrono/year_month_day.md
+++ b/reference/chrono/year_month_day.md
@@ -91,6 +91,13 @@ namespace std::chrono {
 | [`from_stream`](year_month_day/from_stream.md) | フォーマット指定して入力ストリームから入力する | C++20 |
 
 
+## 文字列フォーマット
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`formatter`](year_month_day/formatter.md) | [`std::formatter`](/reference/format/formatter.md)クラスの特殊化 | C++20 |
+
+
 ## 例
 ### 基本的な使い方 (C++20)
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>formatter -- year_month_day : formatterを追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day/formatter.html"/>
      <id>fd1b42604debcc02ed94f9b6aae854d7db38cbc3:reference/chrono/year_month_day/formatter.md</id>
      <updated>2020-06-01T22:40:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day/formatter.md b/reference/chrono/year_month_day/formatter.md
new file mode 100644
index 000000000..4887da06f
--- /dev/null
+++ b/reference/chrono/year_month_day/formatter.md
@@ -0,0 +1,81 @@
+# formatter
+* chrono[meta header]
+* std[meta namespace]
+* class[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std {
+  template &amp;lt;class charT&amp;gt;
+  struct formatter&amp;lt;chrono::year_month_day, charT&amp;gt;;
+}
+```
+
+## 概要
+`year_month_day`クラスに対する[`std::formatter`](/reference/format/formatter.md)クラステンプレートの特殊化。
+
+フォーマット指定子としては、以下を使用できる：
+
+| フォーマット指定子 | 説明 |
+|--------------------|------|
+| `%D` | `%m/%d/%y`と等価 |
+| `%F` | `%Y-%m-%d`と等価 |
+| `%j` | 年の日 (1月1日を`001`とした経過日) |
+| `%x` | ロケール依存の日付表現 |
+| `%Ex` | `%x`の異なる表現 |
+
+その他、[`day`](/reference/chrono/day/formatter.md)、[`month`](/reference/chrono/month/formatter.md)、[`year`](/reference/chrono/year/formatter.md)で利用可能なフォーマット指定子を使用できる。
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+#include &amp;lt;format&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main() {
+  chrono::year_month_day date = 2020y/3/1;
+
+  // デフォルトフォーマットはoperator&amp;lt;&amp;lt;と同じ
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;1 : {}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;2 : {:%D}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;3 : {:%F}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;4 : {:%x}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;5 : {:%Y年%m月%d日}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+
+  // ロケール依存の出力
+  std::cout &amp;lt;&amp;lt; std::format(std::locale(&amp;#34;ja_JP.UTF-8&amp;#34;), &amp;#34;6 : {:%x}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(std::locale(&amp;#34;ja_JP.UTF-8&amp;#34;), &amp;#34;7 : {:%Ex}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+}
+```
+* std::format[link /reference/chrono/format.md]
+* std::locale[link /reference/locale/locale.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+
+### 出力
+```
+1 : 2020-03-01
+2 : Mar/01/2020
+3 : 2020-03-01
+4 : 03/01/20
+5 : 2020年03月01日
+6 : 2020年03月01日
+7 : 令和02年03月01日
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): (9.0時点で実装なし)
+- [GCC](/implementation.md#gcc): (9.2時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 関連項目
+- [chronoの`std::format()`](/reference/chrono/format.md) (フォーマットの詳細)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>formatter -- durationのformatter : 指定できるフォーマット指定子を記載</title>
      <link href="https://cpprefjp.github.io/reference/chrono/duration/formatter.html"/>
      <id>87c3b7fa1c8006ce43db4e22b562904841d9b4cf:reference/chrono/duration/formatter.md</id>
      <updated>2020-06-01T22:07:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/duration/formatter.md b/reference/chrono/duration/formatter.md
index 7b0925dbf..d0bcf9c33 100644
--- a/reference/chrono/duration/formatter.md
+++ b/reference/chrono/duration/formatter.md
@@ -14,6 +14,17 @@ namespace std {
 ## 概要
 `duration`クラスに対する[`std::formatter`](/reference/format/formatter.md)クラステンプレートの特殊化。
 
+フォーマット指定子としては、以下を使用できる：
+
+| フォーマット指定子 | 説明 |
+|--------------------|------|
+| `%q` | `duration`単位ごとのサフィックス。`duration`の`operator&amp;lt;&amp;lt;`で出力されるサフィックスと等価 |
+| `%Q` | `duration`の数値。`.count()`で取得した値 |
+| `%S` | 2桁0埋めの秒 |
+| `%M` | 2桁0埋めの分 |
+| `%H` | 24時間時計での2桁0埋めの時 |
+| `%I` | 12時間時計での2桁0埋めの時 |
+| `%p` | 12時間時計でのロケール依存の午前・午後の表現 |
 
 ## 備考
 - `Rep`が浮動小数点数である場合のみ、フォーマットとして浮動小数点数の精度を指定でき、そうでない場合に指定すると[`std::format_error`](/reference/format/format_error.md)例外が送出される
@@ -33,6 +44,12 @@ int main()
   // デフォルトフォーマットは、operator&amp;lt;&amp;lt;で出力されるものと同じ
   std::cout &amp;lt;&amp;lt; std::format(&amp;#34;{}&amp;#34;, chrono::seconds{3}) &amp;lt;&amp;lt; std::endl;
 
+  // 単位ごとのサフィックス
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;{:%q}&amp;#34;, chrono::seconds{3}) &amp;lt;&amp;lt; std::endl;
+
+  // duration::count()で取得した値
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;{:%Q}&amp;#34;, chrono::seconds{3}) &amp;lt;&amp;lt; std::endl;
+
   // フォーマット指定子を使用した場合、サフィックスは出力されない
   std::cout &amp;lt;&amp;lt; std::format(&amp;#34;seconds : {:%S}&amp;#34;, chrono::seconds{3}) &amp;lt;&amp;lt; std::endl;
   std::cout &amp;lt;&amp;lt; std::format(&amp;#34;minutes : {:%M}&amp;#34;, chrono::minutes{3}) &amp;lt;&amp;lt; std::endl;
@@ -46,6 +63,8 @@ int main()
 ### 出力
 ```
 3s
+s
+3
 seconds : 03
 minutes : 03
 24-hours : 15
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>weekday -- weekday : formatterを追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/weekday.html"/>
      <id>4129a698f778e92e73a66f25003ef9801091c08c:reference/chrono/weekday.md</id>
      <updated>2020-06-01T21:27:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/weekday.md b/reference/chrono/weekday.md
index 1efa73146..aa1a891e0 100644
--- a/reference/chrono/weekday.md
+++ b/reference/chrono/weekday.md
@@ -86,6 +86,13 @@ namespace std::chrono {
 | [`from_stream`](weekday/from_stream.md) | フォーマット指定して入力ストリームから入力する | C++20 |
 
 
+## 文字列フォーマット
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`formatter`](weekday/formatter.md) | [`std::formatter`](/reference/format/formatter.md)クラスの特殊化 | C++20 |
+
+
 ## 例
 ```cpp example
 #include &amp;lt;cassert&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>formatter -- weekday : formatterを追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/weekday/formatter.html"/>
      <id>4129a698f778e92e73a66f25003ef9801091c08c:reference/chrono/weekday/formatter.md</id>
      <updated>2020-06-01T21:27:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/weekday/formatter.md b/reference/chrono/weekday/formatter.md
new file mode 100644
index 000000000..118bab48e
--- /dev/null
+++ b/reference/chrono/weekday/formatter.md
@@ -0,0 +1,73 @@
+# formatter
+* chrono[meta header]
+* std[meta namespace]
+* class[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std {
+  template &amp;lt;class charT&amp;gt;
+  struct formatter&amp;lt;chrono::weekday, charT&amp;gt;;
+}
+```
+
+## 概要
+`weekday`クラスに対する[`std::formatter`](/reference/format/formatter.md)クラステンプレートの特殊化。
+
+フォーマット指定子としては、以下を使用できる：
+
+| フォーマット指定子 | 説明 |
+|--------------------|------|
+| `%a` | ロケール依存の曜日の省略名 |
+| `%A` | ロケール依存の曜日の完全名 |
+| `%u` | 10進数での月曜を1とするISO曜日番号 (1-7) |
+| `%0u` | ロケール依存の`%u`の異なる表現 |
+| `%w` | 10進数での日曜を0とするISO曜日番号 (0-6) |
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+#include &amp;lt;format&amp;gt;
+
+namespace chrono = std::chrono;
+
+int main()
+{
+  // デフォルトフォーマットはoperator&amp;lt;&amp;lt;と同じ
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;{}&amp;#34;, chrono::Sunday) &amp;lt;&amp;lt; std::endl;
+
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;{:%a}&amp;#34;, chrono::Sunday) &amp;lt;&amp;lt; std::endl; // 省略名
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;{:%A}&amp;#34;, chrono::Sunday) &amp;lt;&amp;lt; std::endl; // 完全名
+
+  // ロケール依存の出力
+  std::cout &amp;lt;&amp;lt; std::format(std::locale(&amp;#34;ja_JP.UTF-8&amp;#34;), &amp;#34;{:%a}&amp;#34;, chrono::Sunday) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(std::locale(&amp;#34;ja_JP.UTF-8&amp;#34;), &amp;#34;{:%A}&amp;#34;, chrono::Sunday) &amp;lt;&amp;lt; std::endl;
+}
+```
+* std::format[link /reference/chrono/format.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* std::locale[link /reference/locale/locale.md]
+
+### 出力
+```
+Sun
+Sun
+Sunday
+日
+日曜日
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): (9.0時点で実装なし)
+- [GCC](/implementation.md#gcc): (9.2時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 関連項目
+- [chronoの`std::format()`](/reference/chrono/format.md) (フォーマットの詳細)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>year -- year : formatterを追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year.html"/>
      <id>322e6954b5d85dc3c45092c3e9089206377c740e:reference/chrono/year.md</id>
      <updated>2020-06-01T21:22:29+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year.md b/reference/chrono/year.md
index af4bef89a..0dde7e599 100644
--- a/reference/chrono/year.md
+++ b/reference/chrono/year.md
@@ -119,6 +119,13 @@ namespace std::chrono {
 | [`y`](year/op_y.md) | 年リテラル | C++20 |
 
 
+## 文字列フォーマット
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`formatter`](year/formatter.md) | [`std::formatter`](/reference/format/formatter.md)クラスの特殊化 | C++20 |
+
+
 ## 例
 ```cpp example
 #include &amp;lt;iostream&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>formatter -- year : formatterを追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year/formatter.html"/>
      <id>322e6954b5d85dc3c45092c3e9089206377c740e:reference/chrono/year/formatter.md</id>
      <updated>2020-06-01T21:22:29+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year/formatter.md b/reference/chrono/year/formatter.md
new file mode 100644
index 000000000..c9076c150
--- /dev/null
+++ b/reference/chrono/year/formatter.md
@@ -0,0 +1,76 @@
+# formatter
+* chrono[meta header]
+* std[meta namespace]
+* class[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std {
+  template &amp;lt;class charT&amp;gt;
+  struct formatter&amp;lt;chrono::year, charT&amp;gt;;
+}
+```
+
+## 概要
+`year`クラスに対する[`std::formatter`](/reference/format/formatter.md)クラステンプレートの特殊化。
+
+フォーマット指定子としては、以下を使用できる：
+
+| フォーマット指定子 | 説明 |
+|--------------------|------|
+| `%C`  | 100で切り下げ除算した2桁0埋め10進数の年 (世紀) |
+| `$EC` | ロケール依存の世紀の異なる表現 (日本だと元号 `&amp;#34;令和&amp;#34;`) |
+| `%g`  | ISOの週ベースのうしろ2桁0埋め10進数の年 |
+| `%G`  | ISOの週ベースの4桁0埋め10進数の年 |
+| `%y`  | うしろ2桁0埋め10進数の年 |
+| `%Ey` | ロケール依存の世紀からのオフセット年 (日本だと元号ベースで`&amp;#34;02年&amp;#34;`) |
+| `%Y`  | 4桁0埋め10進数の年 |
+| `%EY` | ロケール依存の完全な年 (日本だと元号含めて`&amp;#34;令和02年&amp;#34;`) |
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+#include &amp;lt;format&amp;gt;
+
+namespace chrono = std::chrono;
+
+int main()
+{
+  // デフォルトフォーマットはoperator&amp;lt;&amp;lt;と同じ
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;{}&amp;#34;, chrono::year{2020}) &amp;lt;&amp;lt; std::endl;
+
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;{:%Y}&amp;#34;, chrono::year{2020}) &amp;lt;&amp;lt; std::endl; // 4桁の年
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;{:%y}&amp;#34;, chrono::year{2020}) &amp;lt;&amp;lt; std::endl; // うしろ2桁の年
+
+  // ロケール依存の出力
+  std::cout &amp;lt;&amp;lt; std::format(std::locale(&amp;#34;ja_JP.UTF-8&amp;#34;), &amp;#34;{:%EC}&amp;#34;, chrono::year{2020}) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(std::locale(&amp;#34;ja_JP.UTF-8&amp;#34;), &amp;#34;{:%Ey}&amp;#34;, chrono::year{2020}) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(std::locale(&amp;#34;ja_JP.UTF-8&amp;#34;), &amp;#34;{:%EY}&amp;#34;, chrono::year{2020}) &amp;lt;&amp;lt; std::endl;
+}
+```
+- std::format[link /reference/chrono/format.md]
+
+### 出力
+```
+2020
+2020
+20
+令和
+02年
+令和02年
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): (9.0時点で実装なし)
+- [GCC](/implementation.md#gcc): (9.2時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 関連項目
+- [chronoの`std::format()`](/reference/chrono/format.md) (フォーマットの詳細)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
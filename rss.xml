<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2024-04-19T07:46:18.561608</updated>
  <id>d53928a0-3b9c-4500-8dac-a1b0ba9fa909</id>

  
    <entry>
      <title>algorithm -- Merge pull request #1268 from cpprefjp/Nagarei/fix-typo-at-algorithm</title>
      <link href="https://cpprefjp.github.io/reference/algorithm.html"/>
      <id>fd29f775422fea7d1f15eedfb36c3c78793f35d5:reference/algorithm.md</id>
      <updated>2024-04-19T16:42:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm.md b/reference/algorithm.md
index 58bc01f2a..24441a342 100644
--- a/reference/algorithm.md
+++ b/reference/algorithm.md
@@ -109,7 +109,7 @@ sort(pv.begin(), pv.end(), [](auto&amp;amp;&amp;amp; a, auto&amp;amp;&amp;amp; b){ return a.name &amp;lt; b.name; });
 // デフォルトの述語(ranges::less{})で、nameでソート
 ranges::sort(pv, {}, [](auto&amp;amp;&amp;amp; a){ return a.name; });
 // std::invokeで呼び出されるため、メンバ変数ポインタでもよい
-ranges::sort(pv, {}, &amp;amp;Parson::name);
+ranges::sort(pv, {}, &amp;amp;Person::name);
 ```
 * ranges::sort[link algorithm/ranges_sort.md]
 * ranges::less[link /reference/functional/ranges_less.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>algorithm -- fix typo in algorithm&#39;s sample code</title>
      <link href="https://cpprefjp.github.io/reference/algorithm.html"/>
      <id>4bfd4910e61e7dab64dbf29a5ba7f112bbe0e617:reference/algorithm.md</id>
      <updated>2024-04-19T16:38:03+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm.md b/reference/algorithm.md
index 58bc01f2a..24441a342 100644
--- a/reference/algorithm.md
+++ b/reference/algorithm.md
@@ -109,7 +109,7 @@ sort(pv.begin(), pv.end(), [](auto&amp;amp;&amp;amp; a, auto&amp;amp;&amp;amp; b){ return a.name &amp;lt; b.name; });
 // デフォルトの述語(ranges::less{})で、nameでソート
 ranges::sort(pv, {}, [](auto&amp;amp;&amp;amp; a){ return a.name; });
 // std::invokeで呼び出されるため、メンバ変数ポインタでもよい
-ranges::sort(pv, {}, &amp;amp;Parson::name);
+ranges::sort(pv, {}, &amp;amp;Person::name);
 ```
 * ranges::sort[link algorithm/ranges_sort.md]
 * ranges::less[link /reference/functional/ranges_less.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Nagarei</name>
        <email>Nagarei@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- fix: fix argument order for scoped_lock</title>
      <link href="https://cpprefjp.github.io/reference/mutex/scoped_lock/op_constructor.html"/>
      <id>a8976099ef2f10aa426d054031bccd848c627463:reference/mutex/scoped_lock/op_constructor.md</id>
      <updated>2024-04-19T10:49:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/mutex/scoped_lock/op_constructor.md b/reference/mutex/scoped_lock/op_constructor.md
index 565f31818..9ca74c4cb 100644
--- a/reference/mutex/scoped_lock/op_constructor.md
+++ b/reference/mutex/scoped_lock/op_constructor.md
@@ -7,7 +7,7 @@
 
 ```cpp
 explicit scoped_lock(MutexTypes&amp;amp;... m);               // (1)
-explicit scoped_lock(MutexTypes&amp;amp;... m, adopt_lock_t); // (2)
+explicit scoped_lock(adopt_lock_t, MutexTypes&amp;amp;... m); // (2)
 
 scoped_lock(const scoped_lock&amp;amp;) = delete;             // (3)
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>komori-n</name>
        <email>t_toshi2006@yahoo.co.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>comp_ellint_1 -- fix(cmath): 第n種特殊関数間を相互リンク</title>
      <link href="https://cpprefjp.github.io/reference/cmath/comp_ellint_1.html"/>
      <id>b4d914dcb056471e2d489660985825742f20d441:reference/cmath/comp_ellint_1.md</id>
      <updated>2024-04-17T16:14:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/comp_ellint_1.md b/reference/cmath/comp_ellint_1.md
index ad96b9631..6ea7c4d0a 100644
--- a/reference/cmath/comp_ellint_1.md
+++ b/reference/cmath/comp_ellint_1.md
@@ -136,6 +136,8 @@ $$
 
 
 ## 関連項目
+- 第2種完全楕円積分 [`comp_ellint_2`](comp_ellint_2.md)
+- 第3種完全楕円積分 [`comp_ellint_3`](comp_ellint_3.md)
 - 第1種不完全楕円積分 [`ellint_1`](ellint_1.md)
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>comp_ellint_2 -- fix(cmath): 第n種特殊関数間を相互リンク</title>
      <link href="https://cpprefjp.github.io/reference/cmath/comp_ellint_2.html"/>
      <id>b4d914dcb056471e2d489660985825742f20d441:reference/cmath/comp_ellint_2.md</id>
      <updated>2024-04-17T16:14:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/comp_ellint_2.md b/reference/cmath/comp_ellint_2.md
index d2d7123d3..50c85c08c 100644
--- a/reference/cmath/comp_ellint_2.md
+++ b/reference/cmath/comp_ellint_2.md
@@ -90,6 +90,8 @@ $$
 
 
 ## 関連項目
+- 第1種完全楕円積分 [`comp_ellint_1`](comp_ellint_1.md)
+- 第3種完全楕円積分 [`comp_ellint_3`](comp_ellint_3.md)
 - 第2種不完全楕円積分 [`ellint_2`](ellint_2.md)
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>comp_ellint_3 -- fix(cmath): 第n種特殊関数間を相互リンク</title>
      <link href="https://cpprefjp.github.io/reference/cmath/comp_ellint_3.html"/>
      <id>b4d914dcb056471e2d489660985825742f20d441:reference/cmath/comp_ellint_3.md</id>
      <updated>2024-04-17T16:14:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/comp_ellint_3.md b/reference/cmath/comp_ellint_3.md
index 8bc30bcc8..aebaa9c0e 100644
--- a/reference/cmath/comp_ellint_3.md
+++ b/reference/cmath/comp_ellint_3.md
@@ -120,7 +120,9 @@ GCC 7.1.0–8.0.0 では
 
 
 ## 関連項目
-* 第3種不完全楕円積分 [`ellint_3`](ellint_3.md)
+- 第1種完全楕円積分 [`comp_ellint_1`](comp_ellint_1.md)
+- 第2種完全楕円積分 [`comp_ellint_2`](comp_ellint_2.md)
+- 第3種不完全楕円積分 [`ellint_3`](ellint_3.md)
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>cyl_bessel_i -- fix(cmath): 第n種特殊関数間を相互リンク</title>
      <link href="https://cpprefjp.github.io/reference/cmath/cyl_bessel_i.html"/>
      <id>b4d914dcb056471e2d489660985825742f20d441:reference/cmath/cyl_bessel_i.md</id>
      <updated>2024-04-17T16:14:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/cyl_bessel_i.md b/reference/cmath/cyl_bessel_i.md
index f74ca282c..658535876 100644
--- a/reference/cmath/cyl_bessel_i.md
+++ b/reference/cmath/cyl_bessel_i.md
@@ -110,8 +110,8 @@ GCC 7.1.0–8.0.0 では `nu &amp;lt; 0` のときに [`std::domain_error`](/reference/
 
 
 ## 関連項目
-- 第1種ベッセル関数 [`cyl_bessel_j`](cyl_bessel_j.md)
 - 第2種変形ベッセル関数 [`cyl_bessel_k`](cyl_bessel_k.md)
+- 第1種ベッセル関数 [`cyl_bessel_j`](cyl_bessel_j.md)
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>cyl_bessel_j -- fix(cmath): 第n種特殊関数間を相互リンク</title>
      <link href="https://cpprefjp.github.io/reference/cmath/cyl_bessel_j.html"/>
      <id>b4d914dcb056471e2d489660985825742f20d441:reference/cmath/cyl_bessel_j.md</id>
      <updated>2024-04-17T16:14:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/cyl_bessel_j.md b/reference/cmath/cyl_bessel_j.md
index d4935036e..7d9a796ac 100644
--- a/reference/cmath/cyl_bessel_j.md
+++ b/reference/cmath/cyl_bessel_j.md
@@ -111,9 +111,9 @@ GCC 7.1.0–8.0.0 では `nu &amp;lt; 0` のときに [`std::domain_error`](/reference/
 
 
 ## 関連項目
+- 第2種ベッセル関数 [`cyl_neumann`](cyl_neumann.md)
 - 第1種変形ベッセル関数 [`cyl_bessel_i`](cyl_bessel_i.md)
 - 第2種変形ベッセル関数 [`cyl_bessel_k`](cyl_bessel_k.md)
-- 第2種ベッセル関数 [`cyl_neumann`](cyl_neumann.md)
 - 第1種球ベッセル関数 [`sph_bessel`](sph_bessel.md)
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ellint_1 -- fix(cmath): 第n種特殊関数間を相互リンク</title>
      <link href="https://cpprefjp.github.io/reference/cmath/ellint_1.html"/>
      <id>b4d914dcb056471e2d489660985825742f20d441:reference/cmath/ellint_1.md</id>
      <updated>2024-04-17T16:14:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/ellint_1.md b/reference/cmath/ellint_1.md
index fdfdd04ae..24045d4ec 100644
--- a/reference/cmath/ellint_1.md
+++ b/reference/cmath/ellint_1.md
@@ -111,6 +111,8 @@ GCC 7.1.0–8.0.0 では `|k| == 1 &amp;amp;&amp;amp; |phi| &amp;gt;= π / 2` の場合 `nan` を返す
 
 
 ## 関連項目
+- 第2種不完全楕円積分 [`ellint_2`](ellint_2.md)
+- 第3種不完全楕円積分 [`ellint_3`](ellint_3.md)
 - 第1種完全楕円積分 [`comp_ellint_1`](comp_ellint_1.md)
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ellint_2 -- fix(cmath): 第n種特殊関数間を相互リンク</title>
      <link href="https://cpprefjp.github.io/reference/cmath/ellint_2.html"/>
      <id>b4d914dcb056471e2d489660985825742f20d441:reference/cmath/ellint_2.md</id>
      <updated>2024-04-17T16:14:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/ellint_2.md b/reference/cmath/ellint_2.md
index 3bd696eaa..e12826425 100644
--- a/reference/cmath/ellint_2.md
+++ b/reference/cmath/ellint_2.md
@@ -106,6 +106,8 @@ ellint_2(1, 0.5 pi) = 1
 
 
 ## 関連項目
+- 第1種不完全楕円積分 [`ellint_1`](ellint_1.md)
+- 第3種不完全楕円積分 [`ellint_3`](ellint_3.md)
 - 第2種完全楕円積分 [`comp_ellint_2`](comp_ellint_2.md)
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ellint_3 -- fix(cmath): 第n種特殊関数間を相互リンク</title>
      <link href="https://cpprefjp.github.io/reference/cmath/ellint_3.html"/>
      <id>b4d914dcb056471e2d489660985825742f20d441:reference/cmath/ellint_3.md</id>
      <updated>2024-04-17T16:14:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/ellint_3.md b/reference/cmath/ellint_3.md
index ab65fba4c..569f0d90b 100644
--- a/reference/cmath/ellint_3.md
+++ b/reference/cmath/ellint_3.md
@@ -134,6 +134,8 @@ GCC 7.1.0–8.0.0 では `1 - nu * sin^2(phi) &amp;lt; 0` のときに [`std::domain_er
 
 
 ## 関連項目
+- 第1種不完全楕円積分 [`ellint_1`](ellint_1.md)
+- 第2種不完全楕円積分 [`ellint_2`](ellint_2.md)
 - 第3種完全楕円積分 [`comp_ellint_3`](comp_ellint_3.md)
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sph_bessel -- fix(cmath): 第n種特殊関数間を相互リンク</title>
      <link href="https://cpprefjp.github.io/reference/cmath/sph_bessel.html"/>
      <id>b4d914dcb056471e2d489660985825742f20d441:reference/cmath/sph_bessel.md</id>
      <updated>2024-04-17T16:14:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/sph_bessel.md b/reference/cmath/sph_bessel.md
index ef75c43eb..e9f7413f1 100644
--- a/reference/cmath/sph_bessel.md
+++ b/reference/cmath/sph_bessel.md
@@ -114,6 +114,7 @@ $$
 
 
 ## 関連項目
+- 第2種球ベッセル関数 [`sph_neumann`](sph_neumann.md)
 - 第1種ベッセル関数 [`cyl_bessel_j`](cyl_bessel_j.md)
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sph_neumann -- fix(cmath): 第n種特殊関数間を相互リンク</title>
      <link href="https://cpprefjp.github.io/reference/cmath/sph_neumann.html"/>
      <id>b4d914dcb056471e2d489660985825742f20d441:reference/cmath/sph_neumann.md</id>
      <updated>2024-04-17T16:14:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/sph_neumann.md b/reference/cmath/sph_neumann.md
index 22adb6eac..58ceab4a6 100644
--- a/reference/cmath/sph_neumann.md
+++ b/reference/cmath/sph_neumann.md
@@ -114,6 +114,7 @@ $$
 
 
 ## 関連項目
+- 第1種球ベッセル関数 [`sph_bessel`](sph_bessel.md)
 - 第2種ベッセル関数 [`cyl_neumann`](cyl_neumann.md)
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>cmath -- style(cmath): Markdown 表組みの横幅揃え</title>
      <link href="https://cpprefjp.github.io/reference/cmath.html"/>
      <id>2f454c118d3a5db38c9f579ebd22e2d122320eca:reference/cmath.md</id>
      <updated>2024-04-17T16:19:29+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath.md b/reference/cmath.md
index 7f1575d21..879e256fa 100644
--- a/reference/cmath.md
+++ b/reference/cmath.md
@@ -216,74 +216,74 @@ C++03 までの場合、[`errno`](cerrno/errno.md) でしか通知されない
 
 ## &amp;lt;a id=&amp;#34;trigonometric-functions&amp;#34; href=&amp;#34;#trigonometric-functions&amp;#34;&amp;gt;三角関数&amp;lt;/a&amp;gt;
 
-| 名前 | 説明 | 対応バージョン |
-|-----------------------------|----------------------------------------------|-------|
-| [`sin`](cmath/sin.md)     | 正弦関数（サイン） | |
-| [`cos`](cmath/cos.md)     | 余弦関数（コサイン） | |
-| [`tan`](cmath/tan.md)     | 正接関数（タンジェント） | |
-| [`asin`](cmath/asin.md)   | 逆正弦関数（アークサイン） | |
-| [`acos`](cmath/acos.md)   | 逆余弦関数（アークコサイン） | |
-| [`atan`](cmath/atan.md)   | 逆正接関数（アークタンジェント） | |
-| [`atan2`](cmath/atan2.md) | 対辺と隣辺からの逆正接関数（アークタンジェント） | |
+| 名前                      | 説明                                             | 対応バージョン |
+|---------------------------|--------------------------------------------------|----------------|
+| [`sin`](cmath/sin.md)     | 正弦関数（サイン）                               |                |
+| [`cos`](cmath/cos.md)     | 余弦関数（コサイン）                             |                |
+| [`tan`](cmath/tan.md)     | 正接関数（タンジェント）                         |                |
+| [`asin`](cmath/asin.md)   | 逆正弦関数（アークサイン）                       |                |
+| [`acos`](cmath/acos.md)   | 逆余弦関数（アークコサイン）                     |                |
+| [`atan`](cmath/atan.md)   | 逆正接関数（アークタンジェント）                 |                |
+| [`atan2`](cmath/atan2.md) | 対辺と隣辺からの逆正接関数（アークタンジェント） |                |
 
 ## &amp;lt;a id=&amp;#34;hyperbolic-functions&amp;#34; href=&amp;#34;#hyperbolic-functions&amp;#34;&amp;gt;双曲線関数&amp;lt;/a&amp;gt;
 
-| 名前 | 説明 | 対応バージョン |
-|-----------------------------|----------------------------------------------|-------|
-| [`sinh`](cmath/sinh.md)   | 双曲線正弦関数（ハイパボリックサイン） | |
-| [`cosh`](cmath/cosh.md)   | 双曲線余弦関数（ハイパボリックコサイン） | |
-| [`tanh`](cmath/tanh.md)   | 双曲線正接関数（ハイパボリックタンジェント） | |
-| [`asinh`](cmath/asinh.md) | 逆双曲線正弦関数（エリアハイパボリックサイン）       | C++11 |
-| [`acosh`](cmath/acosh.md) | 逆双曲線余弦関数（エリアハイパボリックコサイン）     | C++11 |
-| [`atanh`](cmath/atanh.md) | 逆双曲線正接関数（エリアハイパボリックタンジェント） | C++11 |
+| 名前                      | 説明                                                 | 対応バージョン |
+|---------------------------|------------------------------------------------------|----------------|
+| [`sinh`](cmath/sinh.md)   | 双曲線正弦関数（ハイパボリックサイン）               |                |
+| [`cosh`](cmath/cosh.md)   | 双曲線余弦関数（ハイパボリックコサイン）             |                |
+| [`tanh`](cmath/tanh.md)   | 双曲線正接関数（ハイパボリックタンジェント）         |                |
+| [`asinh`](cmath/asinh.md) | 逆双曲線正弦関数（エリアハイパボリックサイン）       | C++11          |
+| [`acosh`](cmath/acosh.md) | 逆双曲線余弦関数（エリアハイパボリックコサイン）     | C++11          |
+| [`atanh`](cmath/atanh.md) | 逆双曲線正接関数（エリアハイパボリックタンジェント） | C++11          |
 
 
 ## &amp;lt;a id=&amp;#34;exponential-and-logarithmic-functions&amp;#34; href=&amp;#34;#exponential-and-logarithmic-functions&amp;#34;&amp;gt;指数関数と対数関数&amp;lt;/a&amp;gt;
 
-| 名前 | 説明 | 対応バージョン |
-|-----------------------------|-----------------------------------|-------|
-| [`exp`](cmath/exp.md)     | e (ネイピア数) を底とする指数関数 | |
-| [`exp2`](cmath/exp2.md)   | 2 を底とする指数関数 | C++11 |
-| [`expm1`](cmath/expm1.md) | e (ネイピア数) を底とする指数関数から 1 を引いた値 | C++11 |
-| [`log`](cmath/log.md)     | e (ネイピア数) を底とする自然対数 | |
-| [`log10`](cmath/log10.md) | 10 を底とする常用対数 | |
-| [`log1p`](cmath/log1p.md) | 引数に 1 を足した値の、e (ネイピア数) を底とする自然対数 | C++11 |
-| [`log2`](cmath/log2.md)   | 2 を底とする二進対数 | C++11 |
+| 名前                      | 説明                                                     | 対応バージョン |
+|---------------------------|----------------------------------------------------------|----------------|
+| [`exp`](cmath/exp.md)     | e (ネイピア数) を底とする指数関数                        |                |
+| [`exp2`](cmath/exp2.md)   | 2 を底とする指数関数                                     | C++11          |
+| [`expm1`](cmath/expm1.md) | e (ネイピア数) を底とする指数関数から 1 を引いた値       | C++11          |
+| [`log`](cmath/log.md)     | e (ネイピア数) を底とする自然対数                        |                |
+| [`log10`](cmath/log10.md) | 10 を底とする常用対数                                    |                |
+| [`log1p`](cmath/log1p.md) | 引数に 1 を足した値の、e (ネイピア数) を底とする自然対数 | C++11          |
+| [`log2`](cmath/log2.md)   | 2 を底とする二進対数                                     | C++11          |
 
 
 ## &amp;lt;a id=&amp;#34;fraction-and-exponent-functions&amp;#34; href=&amp;#34;#fraction-and-exponent-functions&amp;#34;&amp;gt;仮数と指数&amp;lt;/a&amp;gt;
 
-| 名前 | 説明 | 対応バージョン |
-|-----------|----------------------------------|-------|
-| [`ldexp`](cmath/ldexp.md)     | 2 の累乗との乗算                 | |
-| [`frexp`](cmath/frexp.md)     | 仮数部と 2 の累乗への分解        | |
-| [`ilogb`](cmath/ilogb.md)     | 指数部を符号付き整数値として抽出 | C++11 |
-| [`logb`](cmath/logb.md)       | 指数部を浮動小数点数値として抽出 | C++11 |
-| [`modf`](cmath/modf.md)       | 整数部と小数部への分解           | |
-| [`scalbn`](cmath/scalbn.md)   | 内部表現の基数 (`FLT_RADIX`) の累乗との乗算 | C++11 |
-| [`scalbln`](cmath/scalbln.md) | 内部表現の基数 (`FLT_RADIX`) の累乗との乗算。乗数として`long`をとる | C++11 |
+| 名前                          | 説明                                                                | 対応バージョン |
+|-------------------------------|---------------------------------------------------------------------|----------------|
+| [`ldexp`](cmath/ldexp.md)     | 2 の累乗との乗算                                                    |                |
+| [`frexp`](cmath/frexp.md)     | 仮数部と 2 の累乗への分解                                           |                |
+| [`ilogb`](cmath/ilogb.md)     | 指数部を符号付き整数値として抽出                                    | C++11          |
+| [`logb`](cmath/logb.md)       | 指数部を浮動小数点数値として抽出                                    | C++11          |
+| [`modf`](cmath/modf.md)       | 整数部と小数部への分解                                              |                |
+| [`scalbn`](cmath/scalbn.md)   | 内部表現の基数 (`FLT_RADIX`) の累乗との乗算                         | C++11          |
+| [`scalbln`](cmath/scalbln.md) | 内部表現の基数 (`FLT_RADIX`) の累乗との乗算。乗数として`long`をとる | C++11          |
 
 
 ## &amp;lt;a id=&amp;#34;power-and-absolute-value-functions&amp;#34; href=&amp;#34;#power-and-absolute-value-functions&amp;#34;&amp;gt;累乗・冪根と絶対値&amp;lt;/a&amp;gt;
 
-| 名前 | 説明 | 対応バージョン |
-|-----------------------------|----------------|-------|
-| [`pow`](cmath/pow.md)     | 累乗           | |
-| [`sqrt`](cmath/sqrt.md)   | 平方根         | |
-| [`cbrt`](cmath/cbrt.md)   | 立方根         | C++11 |
-| [`hypot`](cmath/hypot.md) | 平方和の平方根 | C++11 |
-| [`abs`](cmath/abs.md)     | 絶対値         | |
-| [`fabs`](cmath/fabs.md)   | 絶対値         | |
+| 名前                      | 説明           | 対応バージョン |
+|---------------------------|----------------|----------------|
+| [`pow`](cmath/pow.md)     | 累乗           |                |
+| [`sqrt`](cmath/sqrt.md)   | 平方根         |                |
+| [`cbrt`](cmath/cbrt.md)   | 立方根         | C++11          |
+| [`hypot`](cmath/hypot.md) | 平方和の平方根 | C++11          |
+| [`abs`](cmath/abs.md)     | 絶対値         |                |
+| [`fabs`](cmath/fabs.md)   | 絶対値         |                |
 
 
 ## &amp;lt;a id=&amp;#34;error-and-gamma-functions&amp;#34; href=&amp;#34;#error-and-gamma-functions&amp;#34;&amp;gt;誤差関数とガンマ関数&amp;lt;/a&amp;gt;
 
-| 名前 | 説明 | 対応バージョン |
-|----------|----------------------|-------|
-| [`erf`](cmath/erf.md)       | 誤差関数             | C++11 |
-| [`erfc`](cmath/erfc.md)     | 相補誤差関数         | C++11 |
-| [`tgamma`](cmath/tgamma.md) | ガンマ関数           | C++11 |
-| [`lgamma`](cmath/lgamma.md) | ガンマ関数の自然対数 | C++11 |
+| 名前                        | 説明                 | 対応バージョン |
+|-----------------------------|----------------------|----------------|
+| [`erf`](cmath/erf.md)       | 誤差関数             | C++11          |
+| [`erfc`](cmath/erfc.md)     | 相補誤差関数         | C++11          |
+| [`tgamma`](cmath/tgamma.md) | ガンマ関数           | C++11          |
+| [`lgamma`](cmath/lgamma.md) | ガンマ関数の自然対数 | C++11          |
 
 ## &amp;lt;a id=&amp;#34;mathematical-special-functions&amp;#34; href=&amp;#34;#mathematical-special-functions&amp;#34;&amp;gt;その他特殊関数&amp;lt;/a&amp;gt;
 
@@ -302,29 +302,29 @@ NaN を返さなければならないが定義域エラーを報告してはな
 
 特記のない限り、以下の関数は全ての有限値と正負の無限大において定義される。
 
-| 名前 | 説明 | 対応バージョン |
-|------|------|----------------|
-| [`assoc_laguerre`](cmath/assoc_laguerre.md) | ラゲール陪多項式        | C++17 |
-| [`assoc_legendre`](cmath/assoc_legendre.md) | ルジャンドル陪関数      | C++17 |
-| [`beta`](cmath/beta.md)                     | ベータ関数              | C++17 |
-| [`comp_ellint_1`](cmath/comp_ellint_1.md)   | 第1種完全楕円積分      | C++17 |
-| [`comp_ellint_2`](cmath/comp_ellint_2.md)   | 第2種完全楕円積分      | C++17 |
-| [`comp_ellint_3`](cmath/comp_ellint_3.md)   | 第3種完全楕円積分      | C++17 |
-| [`cyl_bessel_i`](cmath/cyl_bessel_i.md)     | 第1種変形ベッセル関数  | C++17 |
-| [`cyl_bessel_j`](cmath/cyl_bessel_j.md)     | 第1種ベッセル関数      | C++17 |
-| [`cyl_bessel_k`](cmath/cyl_bessel_k.md)     | 第2種変形ベッセル関数  | C++17 |
-| [`cyl_neumann`](cmath/cyl_neumann.md)       | 第2種ベッセル関数      | C++17 |
-| [`ellint_1`](cmath/ellint_1.md)             | 第1種不完全楕円積分    | C++17 |
-| [`ellint_2`](cmath/ellint_2.md)             | 第2種不完全楕円積分    | C++17 |
-| [`ellint_3`](cmath/ellint_3.md)             | 第3種不完全楕円積分    | C++17 |
-| [`expint`](cmath/expint.md)                 | 指数積分                | C++17 |
-| [`hermite`](cmath/hermite.md)               | エルミート多項式        | C++17 |
-| [`laguerre`](cmath/laguerre.md)             | ラゲール多項式          | C++17 |
-| [`legendre`](cmath/legendre.md)             | ルジャンドル多項式      | C++17 |
-| [`riemann_zeta`](cmath/riemann_zeta.md)     | リーマンのゼータ関数    | C++17 |
-| [`sph_bessel`](cmath/sph_bessel.md)         | 第1種球ベッセル関数    | C++17 |
-| [`sph_legendre`](cmath/sph_legendre.md)     | 球面調和関数の *θ* 成分 | C++17 |
-| [`sph_neumann`](cmath/sph_neumann.md)       | 第2種球ベッセル関数    | C++17 |
+| 名前                                        | 説明                     | 対応バージョン |
+|---------------------------------------------|--------------------------|----------------|
+| [`assoc_laguerre`](cmath/assoc_laguerre.md) | ラゲール陪多項式         | C++17          |
+| [`assoc_legendre`](cmath/assoc_legendre.md) | ルジャンドル陪関数       | C++17          |
+| [`beta`](cmath/beta.md)                     | ベータ関数               | C++17          |
+| [`comp_ellint_1`](cmath/comp_ellint_1.md)   | 第1種完全楕円積分        | C++17          |
+| [`comp_ellint_2`](cmath/comp_ellint_2.md)   | 第2種完全楕円積分        | C++17          |
+| [`comp_ellint_3`](cmath/comp_ellint_3.md)   | 第3種完全楕円積分        | C++17          |
+| [`cyl_bessel_i`](cmath/cyl_bessel_i.md)     | 第1種変形ベッセル関数    | C++17          |
+| [`cyl_bessel_j`](cmath/cyl_bessel_j.md)     | 第1種ベッセル関数        | C++17          |
+| [`cyl_bessel_k`](cmath/cyl_bessel_k.md)     | 第2種変形ベッセル関数    | C++17          |
+| [`cyl_neumann`](cmath/cyl_neumann.md)       | 第2種ベッセル関数        | C++17          |
+| [`ellint_1`](cmath/ellint_1.md)             | 第1種不完全楕円積分      | C++17          |
+| [`ellint_2`](cmath/ellint_2.md)             | 第2種不完全楕円積分      | C++17          |
+| [`ellint_3`](cmath/ellint_3.md)             | 第3種不完全楕円積分      | C++17          |
+| [`expint`](cmath/expint.md)                 | 指数積分                 | C++17          |
+| [`hermite`](cmath/hermite.md)               | エルミート多項式         | C++17          |
+| [`laguerre`](cmath/laguerre.md)             | ラゲール多項式           | C++17          |
+| [`legendre`](cmath/legendre.md)             | ルジャンドル多項式       | C++17          |
+| [`riemann_zeta`](cmath/riemann_zeta.md)     | リーマンのゼータ関数     | C++17          |
+| [`sph_bessel`](cmath/sph_bessel.md)         | 第1種球ベッセル関数      | C++17          |
+| [`sph_legendre`](cmath/sph_legendre.md)     | 球面調和関数の *θ* 成分 | C++17          |
+| [`sph_neumann`](cmath/sph_neumann.md)       | 第2種球ベッセル関数      | C++17          |
 
 ## &amp;lt;a id=&amp;#34;nearest-integer-functions&amp;#34; href=&amp;#34;#nearest-integer-functions&amp;#34;&amp;gt;最近傍整数&amp;lt;/a&amp;gt;
 
@@ -344,114 +344,114 @@ NaN を返さなければならないが定義域エラーを報告してはな
 
 ## &amp;lt;a id=&amp;#34;remainder-functions&amp;#34; href=&amp;#34;#remainder-functions&amp;#34;&amp;gt;剰余&amp;lt;/a&amp;gt;
 
-| 名前 | 説明 | 対応バージョン |
-|-------------|--------------------------|-------|
-| [`fmod`](cmath/fmod.md)           | 浮動小数点剰余           | |
-| [`remainder`](cmath/remainder.md) | 符号付きの浮動小数点剰余 | C++11 |
-| [`remquo`](cmath/remquo.md)       | 商と浮動小数点剰余       | C++11 |
+| 名前                              | 説明                     | 対応バージョン |
+|-----------------------------------|--------------------------|----------------|
+| [`fmod`](cmath/fmod.md)           | 浮動小数点剰余           |                |
+| [`remainder`](cmath/remainder.md) | 符号付きの浮動小数点剰余 | C++11          |
+| [`remquo`](cmath/remquo.md)       | 商と浮動小数点剰余       | C++11          |
 
 
 ## &amp;lt;a id=&amp;#34;manipulation-functions&amp;#34; href=&amp;#34;#manipulation-functions&amp;#34;&amp;gt;浮動小数点操作&amp;lt;/a&amp;gt;
 
-| 名前 | 説明 | 対応バージョン |
-|--------------|-------------------------------|-------|
-| [`copysign`](cmath/copysign.md)     | 符号のコピー                  | C++11 |
-| [`nan`](cmath/nanf.md)              | 文字列から quiet NaN への変換 | C++11 |
-| [`nanf`](cmath/nanf.md)             | 文字列から quiet NaN への変換 | C++11 |
-| [`nanl`](cmath/nanf.md)             | 文字列から quiet NaN への変換 | C++11 |
-| [`nextafter`](cmath/nextafter.md)   | 指定方向への次の表現可能な値  | C++11 |
-| [`nexttoward`](cmath/nexttoward.md) | 指定方向への次の表現可能な値  | C++11 |
+| 名前                                | 説明                          | 対応バージョン |
+|-------------------------------------|-------------------------------|----------------|
+| [`copysign`](cmath/copysign.md)     | 符号のコピー                  | C++11          |
+| [`nan`](cmath/nanf.md)              | 文字列から quiet NaN への変換 | C++11          |
+| [`nanf`](cmath/nanf.md)             | 文字列から quiet NaN への変換 | C++11          |
+| [`nanl`](cmath/nanf.md)             | 文字列から quiet NaN への変換 | C++11          |
+| [`nextafter`](cmath/nextafter.md)   | 指定方向への次の表現可能な値  | C++11          |
+| [`nexttoward`](cmath/nexttoward.md) | 指定方向への次の表現可能な値  | C++11          |
 
 
 ## &amp;lt;a id=&amp;#34;maximum-minimum-and-positive-difference-functions&amp;#34; href=&amp;#34;#maximum-minimum-and-positive-difference-functions&amp;#34;&amp;gt;最大値・最小値と正の差&amp;lt;/a&amp;gt;
 
-| 名前 | 説明 | 対応バージョン |
-|--------|--------|-------|
-| [`fmax`](cmath/fmax.md) | 最大値 | C++11 |
-| [`fmin`](cmath/fmin.md) | 最小値 | C++11 |
-| [`fdim`](cmath/fdim.md) | 正の差 | C++11 |
+| 名前                    | 説明   | 対応バージョン |
+|-------------------------|--------|----------------|
+| [`fmax`](cmath/fmax.md) | 最大値 | C++11          |
+| [`fmin`](cmath/fmin.md) | 最小値 | C++11          |
+| [`fdim`](cmath/fdim.md) | 正の差 | C++11          |
 
 
 ## &amp;lt;a id=&amp;#34;floating-multiply-add&amp;#34; href=&amp;#34;#floating-multiply-add&amp;#34;&amp;gt;乗算-加算&amp;lt;/a&amp;gt;
 
-| 名前 | 説明 | 対応バージョン |
-|-------------------------|------------------|-------|
-| [`fma`](cmath/fma.md) | 乗算と加算の合成 | C++11 |
+| 名前                  | 説明             | 対応バージョン |
+|-----------------------|------------------|----------------|
+| [`fma`](cmath/fma.md) | 乗算と加算の合成 | C++11          |
 
 
 ## &amp;lt;a id=&amp;#34;linear-interpolation&amp;#34; href=&amp;#34;#linear-interpolation&amp;#34;&amp;gt;線形補完&amp;lt;/a&amp;gt;
 
-| 名前 | 説明 | 対応バージョン |
-|------|------|----------------|
-| [`lerp`](cmath/lerp.md) | 線形補間 | C++20 |
+| 名前                    | 説明     | 対応バージョン |
+|-------------------------|----------|----------------|
+| [`lerp`](cmath/lerp.md) | 線形補間 | C++20          |
 
 
 ## &amp;lt;a id=&amp;#34;classification-functions&amp;#34; href=&amp;#34;#classification-functions&amp;#34;&amp;gt;数値分類&amp;lt;/a&amp;gt;
 
-| 名前 | 説明 | 対応バージョン |
-|--------------|------------------|-------|
-| [`fpclassify`](cmath/fpclassify.md) | 数値を NaN、無限大、正規化数、非正規化数、0 または他の処理系定義のカテゴリに分類 | C++11 |
-| [`isfinite`](cmath/isfinite.md) | 数値が有限であるか判定      | C++11 |
-| [`isinf`](cmath/isinf.md)       | 数値が無限大であるか判定    | C++11 |
-| [`isnan`](cmath/isnan.md)       | 数値が NaN であるか判定     | C++11 |
-| [`isnormal`](cmath/isnormal.md) | 数値が正規化数であるか判定  | C++11 |
-| [`signbit`](cmath/signbit.md)   | 数値の符号が負であるか判定  | C++11 |
+| 名前                                | 説明                                                                             | 対応バージョン |
+|-------------------------------------|----------------------------------------------------------------------------------|----------------|
+| [`fpclassify`](cmath/fpclassify.md) | 数値を NaN、無限大、正規化数、非正規化数、0 または他の処理系定義のカテゴリに分類 | C++11          |
+| [`isfinite`](cmath/isfinite.md)     | 数値が有限であるか判定                                                           | C++11          |
+| [`isinf`](cmath/isinf.md)           | 数値が無限大であるか判定                                                         | C++11          |
+| [`isnan`](cmath/isnan.md)           | 数値が NaN であるか判定                                                          | C++11          |
+| [`isnormal`](cmath/isnormal.md)     | 数値が正規化数であるか判定                                                       | C++11          |
+| [`signbit`](cmath/signbit.md)       | 数値の符号が負であるか判定                                                       | C++11          |
 
 
 ## &amp;lt;a id=&amp;#34;comparison-functions&amp;#34; href=&amp;#34;#comparison-functions&amp;#34;&amp;gt;数値比較&amp;lt;/a&amp;gt;
 
-| 名前             | 説明                                                   | 対応バージョン |
-|------------------|--------------------------------------------------------|----------------|
-| [`isgreater`](cmath/isgreater.md)           | 第 1 引数が第 2 引数より大きいか判定                   | C++11 |
-| [`isgreaterequal`](cmath/isgreaterequal.md) | 第 1 引数が第 2 引数以上か判定                         | C++11 |
-| [`isless`](cmath/isless.md)                 | 第 1 引数が第 2 引数より小さいか判定                   | C++11 |
-| [`islessequal`](cmath/islessequal.md)       | 第 1 引数が第 2 引数以下か判定                         | C++11 |
-| [`islessgreater`](cmath/islessgreater.md)   | 第 1 引数が第 2 引数より小さいか、あるいは大きいか判定 | C++11 |
-| [`isunordered`](cmath/isunordered.md)       | 第 1 引数と第 2 引数が順序付けられていないか判定       | C++11 |
+| 名前                                        | 説明                                                   | 対応バージョン |
+|---------------------------------------------|--------------------------------------------------------|----------------|
+| [`isgreater`](cmath/isgreater.md)           | 第 1 引数が第 2 引数より大きいか判定                   | C++11          |
+| [`isgreaterequal`](cmath/isgreaterequal.md) | 第 1 引数が第 2 引数以上か判定                         | C++11          |
+| [`isless`](cmath/isless.md)                 | 第 1 引数が第 2 引数より小さいか判定                   | C++11          |
+| [`islessequal`](cmath/islessequal.md)       | 第 1 引数が第 2 引数以下か判定                         | C++11          |
+| [`islessgreater`](cmath/islessgreater.md)   | 第 1 引数が第 2 引数より小さいか、あるいは大きいか判定 | C++11          |
+| [`isunordered`](cmath/isunordered.md)       | 第 1 引数と第 2 引数が順序付けられていないか判定       | C++11          |
 
 
 ## &amp;lt;a id=&amp;#34;types&amp;#34; href=&amp;#34;#types&amp;#34;&amp;gt;型&amp;lt;/a&amp;gt;
 
-| 名前 | 説明 | 対応バージョン |
-|-----------------------------------|-------------------------------|-------|
-| [`float_t`](cmath/float_t.md)   | `float` 以上の浮動小数点数型  | C++11 |
-| [`double_t`](cmath/double_t.md) | `double` 以上の浮動小数点数型 | C++11 |
+| 名前                            | 説明                          | 対応バージョン |
+|---------------------------------|-------------------------------|----------------|
+| [`float_t`](cmath/float_t.md)   | `float` 以上の浮動小数点数型  | C++11          |
+| [`double_t`](cmath/double_t.md) | `double` 以上の浮動小数点数型 | C++11          |
 
 
 ## &amp;lt;a id=&amp;#34;value-macros&amp;#34; href=&amp;#34;#value-macros&amp;#34;&amp;gt;数値のマクロ&amp;lt;/a&amp;gt;
 
-| 名前 | 説明 | 対応バージョン |
-|-------------------------------------|------------------------------|-------|
-| [`HUGE_VAL`](cmath/huge_val.md)   | `double` 型の正の巨大値      | |
-| [`HUGE_VALF`](cmath/huge_valf.md) | `float` 型の正の巨大値       | C++11 |
-| [`HUGE_VALL`](cmath/huge_vall.md) | `long double` 型の正の巨大値 | C++11 |
-| [`INFINITY`](cmath/infinity.md)   | `float` 型の正の無限大       | C++11 |
-| [`NAN`](cmath/nan.md)             | `float` 型の `quiet NaN`     | C++11 |
+| 名前                              | 説明                         | 対応バージョン |
+|-----------------------------------|------------------------------|----------------|
+| [`HUGE_VAL`](cmath/huge_val.md)   | `double` 型の正の巨大値      |                |
+| [`HUGE_VALF`](cmath/huge_valf.md) | `float` 型の正の巨大値       | C++11          |
+| [`HUGE_VALL`](cmath/huge_vall.md) | `long double` 型の正の巨大値 | C++11          |
+| [`INFINITY`](cmath/infinity.md)   | `float` 型の正の無限大       | C++11          |
+| [`NAN`](cmath/nan.md)             | `float` 型の `quiet NaN`     | C++11          |
 
 
 ## &amp;lt;a id=&amp;#34;classification-macros&amp;#34; href=&amp;#34;#classification-macros&amp;#34;&amp;gt;数値分類のマクロ&amp;lt;/a&amp;gt;
 
-| 名前 | 説明 | 対応バージョン |
-|-------------------------------------------|---------------------------------------------|-------|
-| [`FP_INFINITE`](cmath/fp_infinite.md)   | 数値分類で無限大を表す整数定数式            | C++11 |
-| [`FP_NAN`](cmath/fp_nan.md)             | 数値分類で `NaN` を表す整数定数式           | C++11 |
-| [`FP_NORMAL`](cmath/fp_normal.md)       | 数値分類で正規化数を表す整数定数式          | C++11 |
-| [`FP_SUBNORMAL`](cmath/fp_subnormal.md) | 数値分類で非正規化数を表す整数定数式        | C++11 |
-| [`FP_ZERO`](cmath/fp_zero.md)           | 数値分類で浮動小数点数の 0 を表す整数定数式 | C++11 |
+| 名前                                    | 説明                                        | 対応バージョン |
+|-----------------------------------------|---------------------------------------------|----------------|
+| [`FP_INFINITE`](cmath/fp_infinite.md)   | 数値分類で無限大を表す整数定数式            | C++11          |
+| [`FP_NAN`](cmath/fp_nan.md)             | 数値分類で `NaN` を表す整数定数式           | C++11          |
+| [`FP_NORMAL`](cmath/fp_normal.md)       | 数値分類で正規化数を表す整数定数式          | C++11          |
+| [`FP_SUBNORMAL`](cmath/fp_subnormal.md) | 数値分類で非正規化数を表す整数定数式        | C++11          |
+| [`FP_ZERO`](cmath/fp_zero.md)           | 数値分類で浮動小数点数の 0 を表す整数定数式 | C++11          |
 
 
 ## &amp;lt;a id=&amp;#34;other-macros&amp;#34; href=&amp;#34;#other-macros&amp;#34;&amp;gt;その他のマクロ&amp;lt;/a&amp;gt;
 
-| 名前 | 説明 | 対応バージョン |
-|-------------------------------------------|---------------------------------------------|-------|
-| [`FP_FAST_FMA`](cmath/fp_fast_fma.md)   | `double` 型の `fma` 関数がより高速な実装であるか | C++11 |
-| [`FP_FAST_FMAF`](cmath/fp_fast_fmaf.md) | `float` 型の `fma` 関数がより高速な実装であるか  | C++11 |
-| [`FP_FAST_FMAL`](cmath/fp_fast_fmal.md) | `long double` 型の `fma` 関数がより高速な実装であるか | C++11 |
-| [`FP_ILOGB0`](cmath/fp_ilogb0.md)       | `ilogb(0)` の戻り値を表す整数定数式 | C++11 |
-| [`FP_ILOGBNAN`](cmath/fp_ilogbnan.md)   | `ilogb(NaN)` の戻り値を表す整数定数式 | C++11 |
-| [`MATH_ERRNO`](cmath/math_errno.md)             | 数学ライブラリ内で`errno`にエラーが設定されたかを表す整数定数 | C++11 |
-| [`MATH_ERREXCEPT`](cmath/math_errexcept.md)     | 数学ライブラリ内で浮動小数点例外が発生したかを表す整数定数 | C++11 |
-| [`math_errhandling`](cmath/math_errhandling.md) | `&amp;lt;cmath&amp;gt;` 内の関数がエラーをどのように取り扱うかを表すマクロ | C++11 |
+| 名前                                            | 説明                                                          | 対応バージョン |
+|-------------------------------------------------|---------------------------------------------------------------|----------------|
+| [`FP_FAST_FMA`](cmath/fp_fast_fma.md)           | `double` 型の `fma` 関数がより高速な実装であるか              | C++11          |
+| [`FP_FAST_FMAF`](cmath/fp_fast_fmaf.md)         | `float` 型の `fma` 関数がより高速な実装であるか               | C++11          |
+| [`FP_FAST_FMAL`](cmath/fp_fast_fmal.md)         | `long double` 型の `fma` 関数がより高速な実装であるか         | C++11          |
+| [`FP_ILOGB0`](cmath/fp_ilogb0.md)               | `ilogb(0)` の戻り値を表す整数定数式                           | C++11          |
+| [`FP_ILOGBNAN`](cmath/fp_ilogbnan.md)           | `ilogb(NaN)` の戻り値を表す整数定数式                         | C++11          |
+| [`MATH_ERRNO`](cmath/math_errno.md)             | 数学ライブラリ内で`errno`にエラーが設定されたかを表す整数定数 | C++11          |
+| [`MATH_ERREXCEPT`](cmath/math_errexcept.md)     | 数学ライブラリ内で浮動小数点例外が発生したかを表す整数定数    | C++11          |
+| [`math_errhandling`](cmath/math_errhandling.md) | `&amp;lt;cmath&amp;gt;` 内の関数がエラーをどのように取り扱うかを表すマクロ  | C++11          |
 
 
 ## 関連項目
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
</feed>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2020-10-16T08:15:12.587646</updated>
  <id>998f9401-9dce-462f-921e-a13e10874729</id>

  
    <entry>
      <title>exception -- bad_exception : 動的例外仕様の削除に対応</title>
      <link href="https://cpprefjp.github.io/reference/exception.html"/>
      <id>a2e7af2c746bd1487aeb8f22c365c7a281811d47:reference/exception.md</id>
      <updated>2020-10-16T16:42:12+09:00</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;exception&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;exception&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;exception&amp;gt;&lt;/code&gt;ヘッダでは、C++プログラムでの例外の扱いに関連した、いくつかのクラスと関数を定義する。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/exception.html&#34;&gt;exception&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;標準例外の基底クラス(class)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/bad_exception.html&#34;&gt;bad_exception&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;不正な例外操作が行われた際に発生する例外クラス(class)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/nested_exception.html&#34;&gt;nested_exception&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;例外構造をネストさせる場合に利用する例外クラス(class)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/set_unexpected.html&#34;&gt;set_unexpected&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;予想外の例外が発生した場合の処理を行う関数を設定する(function)&lt;/td&gt;
&lt;td&gt;C++11から非推奨&lt;br /&gt; C++17で削除&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/get_unexpected.html&#34;&gt;get_unexpected&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;予想外の例外が発生した場合の処理を行う関数を取得する(function)&lt;/td&gt;
&lt;td&gt;C++11&lt;br /&gt; C++11から非推奨&lt;br /&gt; C++17で削除&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/unexpected.html&#34;&gt;unexpected&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;予想外の例外が発生した場合の処理を呼び出す(function)&lt;/td&gt;
&lt;td&gt;C++11から非推奨&lt;br /&gt; C++17で削除&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/set_terminate.html&#34;&gt;set_terminate&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;例外が処理されなかった場合の処理を行う関数を設定する(function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/get_terminate.html&#34;&gt;get_terminate&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;例外が処理されなかった場合の処理を行う関数を取得する(function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/terminate.html&#34;&gt;terminate&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;例外が処理されなかった場合の処理を行う関数を呼び出す(function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/uncaught_exception.html&#34;&gt;uncaught_exception&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;例外処理中かを判別する(function)&lt;/td&gt;
&lt;td&gt;C++17から非推奨&lt;br /&gt; C++20で削除&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/uncaught_exceptions.html&#34;&gt;uncaught_exceptions&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;未処理の例外数を取得する(function)&lt;/td&gt;
&lt;td&gt;C++17&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/exception_ptr.html&#34;&gt;exception_ptr&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;例外格納用ポインタ(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/current_exception.html&#34;&gt;current_exception&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;現在処理中の例外オブジェクトを指す例外ポインタを取得する(function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/rethrow_exception.html&#34;&gt;rethrow_exception&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;例外ポインタが指す例外を送出する(function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/make_exception_ptr.html&#34;&gt;make_exception_ptr&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;例外ポインタを作成する(function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/throw_with_nested.html&#34;&gt;throw_with_nested&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;現在の例外を入れ子にした例外を送出する(function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/rethrow_if_nested.html&#34;&gt;rethrow_if_nested&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;入れ子になった例外が存在する場合に、入れ子になった例外を送出する(function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>bad_exception -- bad_exception : 動的例外仕様の削除に対応</title>
      <link href="https://cpprefjp.github.io/reference/exception/bad_exception.html"/>
      <id>a2e7af2c746bd1487aeb8f22c365c7a281811d47:reference/exception/bad_exception.md</id>
      <updated>2020-10-16T16:42:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/exception/bad_exception.md b/reference/exception/bad_exception.md
index a194511bf..6dde72828 100644
--- a/reference/exception/bad_exception.md
+++ b/reference/exception/bad_exception.md
@@ -11,9 +11,21 @@ namespace std {
 * exception[link /reference/exception/exception.md]
 
 ## 概要
-`bad_exception`クラスは、関数に対して例外の型を制限し、指定外の型を送出した場合に発生する例外である。
+`bad_exception`は、不正な例外操作が行われた際に発生する例外クラスである。
 
-このクラスの例外オブジェクトは自動で送出されるわけではなく、ユーザー自身が[`unexpected_handler`](/reference/exception/set_unexpected.md)を指定してその中で例外オブジェクトの再送出を行うことで、`bad_exception`例外が送出される。
+### 動的例外仕様に違反した例外送出に対する例外 (C++14まで)
+動的例外仕様をもつ関数において、指定外の例外型を送出した際に、`bad_exception`例外が発生する。
+
+この場合の`bad_exception`例外オブジェクトは自動で送出されるわけではなく、ユーザー自身が[`unexpected_handler`](/reference/exception/set_unexpected.md)を指定してその中で例外オブジェクトの再送出を行うことで、`bad_exception`例外が送出される。
+
+
+### 例外オブジェクトをコピーする際に例外が送出されたことに対する例外 (C++11)
+[`std::current_exception()`](current_exception.md)関数を呼び出した際、現在発生している例外オブジェクトのコピーに失敗した場合に、無限再帰を回避するために実装が`bad_exception`例外を送出する可能性がある。
+
+#### 備考
+- GCC 10およびClang 11の段階では、[`std::current_exception()`](current_exception.md)関数は例外オブジェクトをコピーしないため、`bad_exception`例外は発生しない
+- Visual C++では例外オブジェクトのコピーが再帰的に例外を発生させてしまう場合に、`bad_exception`例外が発生する
+    - 参照 : [STL/tests/std/tests/VSO_0104705_throwing_copy_in_current_exception/test.cpp](https://github.com/microsoft/STL/blob/12c684bba78f9b032050526abdebf14f58ca26a3/tests/std/tests/VSO_0104705_throwing_copy_in_current_exception/test.cpp)
 
 
 ## メンバ関数
@@ -27,6 +39,7 @@ namespace std {
 
 
 ## 例
+### 動的例外仕様に違反した例外を送出する例 (C++14まで)
 ```cpp example
 #include &amp;lt;exception&amp;gt;
 #include &amp;lt;stdexcept&amp;gt;
@@ -64,10 +77,10 @@ int main()
 * std::unexpected[link unexpected.md]
 
 
-### 出力
+#### 出力
 ```
 caught: bad_exception.
 ```
 
-## 参照
-
+## 関連項目
+- [C++17 非推奨だった古い例外仕様を削除](/lang/cpp17/remove_deprecated_exception_specifications.md)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>exception -- Merge pull request #811 from okuoku/bad_exception-summary-typo</title>
      <link href="https://cpprefjp.github.io/reference/exception.html"/>
      <id>1927d987ff2865d0fc24b5619f2baf5b13494e88:reference/exception.md</id>
      <updated>2020-10-16T15:58:06+09:00</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;exception&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;exception&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;exception&amp;gt;&lt;/code&gt;ヘッダでは、C++プログラムでの例外の扱いに関連した、いくつかのクラスと関数を定義する。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/exception.html&#34;&gt;exception&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;標準例外の基底クラス(class)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/bad_exception.html&#34;&gt;bad_exception&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;関数で例外の型を制限し、指定外の型が送出された場合に発生させる(class)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/nested_exception.html&#34;&gt;nested_exception&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;例外構造をネストさせる場合に利用する例外クラス(class)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/set_unexpected.html&#34;&gt;set_unexpected&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;予想外の例外が発生した場合の処理を行う関数を設定する(function)&lt;/td&gt;
&lt;td&gt;C++11から非推奨&lt;br /&gt; C++17で削除&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/get_unexpected.html&#34;&gt;get_unexpected&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;予想外の例外が発生した場合の処理を行う関数を取得する(function)&lt;/td&gt;
&lt;td&gt;C++11&lt;br /&gt; C++11から非推奨&lt;br /&gt; C++17で削除&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/unexpected.html&#34;&gt;unexpected&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;予想外の例外が発生した場合の処理を呼び出す(function)&lt;/td&gt;
&lt;td&gt;C++11から非推奨&lt;br /&gt; C++17で削除&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/set_terminate.html&#34;&gt;set_terminate&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;例外が処理されなかった場合の処理を行う関数を設定する(function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/get_terminate.html&#34;&gt;get_terminate&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;例外が処理されなかった場合の処理を行う関数を取得する(function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/terminate.html&#34;&gt;terminate&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;例外が処理されなかった場合の処理を行う関数を呼び出す(function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/uncaught_exception.html&#34;&gt;uncaught_exception&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;例外処理中かを判別する(function)&lt;/td&gt;
&lt;td&gt;C++17から非推奨&lt;br /&gt; C++20で削除&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/uncaught_exceptions.html&#34;&gt;uncaught_exceptions&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;未処理の例外数を取得する(function)&lt;/td&gt;
&lt;td&gt;C++17&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/exception_ptr.html&#34;&gt;exception_ptr&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;例外格納用ポインタ(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/current_exception.html&#34;&gt;current_exception&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;現在処理中の例外オブジェクトを指す例外ポインタを取得する(function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/rethrow_exception.html&#34;&gt;rethrow_exception&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;例外ポインタが指す例外を送出する(function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/make_exception_ptr.html&#34;&gt;make_exception_ptr&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;例外ポインタを作成する(function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/throw_with_nested.html&#34;&gt;throw_with_nested&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;現在の例外を入れ子にした例外を送出する(function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/rethrow_if_nested.html&#34;&gt;rethrow_if_nested&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;入れ子になった例外が存在する場合に、入れ子になった例外を送出する(function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- Merge pull request #812 from cpprefjp/Fuyutsubaki-patch-1</title>
      <link href="https://cpprefjp.github.io/reference/stop_token/stop_source/op_constructor.html"/>
      <id>930aa4a8801bf7ed990442baff4b5941e12f207f:reference/stop_token/stop_source/op_constructor.md</id>
      <updated>2020-10-16T15:56:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stop_token/stop_source/op_constructor.md b/reference/stop_token/stop_source/op_constructor.md
index d2814b158..7dd5abbf4 100644
--- a/reference/stop_token/stop_source/op_constructor.md
+++ b/reference/stop_token/stop_source/op_constructor.md
@@ -7,9 +7,9 @@
 
 ```cpp
 stop_source();                                // (1)
-explicit stop_source(nostopstate_t) explicit; // (2)
-stop_source(const stop_source&amp;amp; rhs) explicit; // (3)
-stop_source(stop_source&amp;amp;&amp;amp; rhs) explicit;      // (4)
+explicit stop_source(nostopstate_t) noexcept; // (2)
+stop_source(const stop_source&amp;amp; rhs) noexcept; // (3)
+stop_source(stop_source&amp;amp;&amp;amp; rhs) noexcept;      // (4)
 ```
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- typoの修正</title>
      <link href="https://cpprefjp.github.io/reference/stop_token/stop_source/op_constructor.html"/>
      <id>9e9d2142ea8181b933adb956d02a4e07b59ec264:reference/stop_token/stop_source/op_constructor.md</id>
      <updated>2020-10-16T06:03:43+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stop_token/stop_source/op_constructor.md b/reference/stop_token/stop_source/op_constructor.md
index d2814b158..7dd5abbf4 100644
--- a/reference/stop_token/stop_source/op_constructor.md
+++ b/reference/stop_token/stop_source/op_constructor.md
@@ -7,9 +7,9 @@
 
 ```cpp
 stop_source();                                // (1)
-explicit stop_source(nostopstate_t) explicit; // (2)
-stop_source(const stop_source&amp;amp; rhs) explicit; // (3)
-stop_source(stop_source&amp;amp;&amp;amp; rhs) explicit;      // (4)
+explicit stop_source(nostopstate_t) noexcept; // (2)
+stop_source(const stop_source&amp;amp; rhs) noexcept; // (3)
+stop_source(stop_source&amp;amp;&amp;amp; rhs) noexcept;      // (4)
 ```
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Fuyutsubaki</name>
        <email>pushrunkey@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>exception -- bad_exception のサマリのtypo 方 -&gt; 型</title>
      <link href="https://cpprefjp.github.io/reference/exception.html"/>
      <id>eaea2e0d272e3d644839e18752d12d3a3d41268a:reference/exception.md</id>
      <updated>2020-10-16T02:51:46+09:00</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;exception&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;exception&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;exception&amp;gt;&lt;/code&gt;ヘッダでは、C++プログラムでの例外の扱いに関連した、いくつかのクラスと関数を定義する。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/exception.html&#34;&gt;exception&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;標準例外の基底クラス(class)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/bad_exception.html&#34;&gt;bad_exception&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;関数で例外の型を制限し、指定外の型が送出された場合に発生させる(class)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/nested_exception.html&#34;&gt;nested_exception&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;例外構造をネストさせる場合に利用する例外クラス(class)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/set_unexpected.html&#34;&gt;set_unexpected&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;予想外の例外が発生した場合の処理を行う関数を設定する(function)&lt;/td&gt;
&lt;td&gt;C++11から非推奨&lt;br /&gt; C++17で削除&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/get_unexpected.html&#34;&gt;get_unexpected&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;予想外の例外が発生した場合の処理を行う関数を取得する(function)&lt;/td&gt;
&lt;td&gt;C++11&lt;br /&gt; C++11から非推奨&lt;br /&gt; C++17で削除&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/unexpected.html&#34;&gt;unexpected&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;予想外の例外が発生した場合の処理を呼び出す(function)&lt;/td&gt;
&lt;td&gt;C++11から非推奨&lt;br /&gt; C++17で削除&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/set_terminate.html&#34;&gt;set_terminate&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;例外が処理されなかった場合の処理を行う関数を設定する(function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/get_terminate.html&#34;&gt;get_terminate&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;例外が処理されなかった場合の処理を行う関数を取得する(function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/terminate.html&#34;&gt;terminate&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;例外が処理されなかった場合の処理を行う関数を呼び出す(function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/uncaught_exception.html&#34;&gt;uncaught_exception&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;例外処理中かを判別する(function)&lt;/td&gt;
&lt;td&gt;C++17から非推奨&lt;br /&gt; C++20で削除&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/uncaught_exceptions.html&#34;&gt;uncaught_exceptions&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;未処理の例外数を取得する(function)&lt;/td&gt;
&lt;td&gt;C++17&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/exception_ptr.html&#34;&gt;exception_ptr&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;例外格納用ポインタ(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/current_exception.html&#34;&gt;current_exception&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;現在処理中の例外オブジェクトを指す例外ポインタを取得する(function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/rethrow_exception.html&#34;&gt;rethrow_exception&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;例外ポインタが指す例外を送出する(function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/make_exception_ptr.html&#34;&gt;make_exception_ptr&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;例外ポインタを作成する(function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/throw_with_nested.html&#34;&gt;throw_with_nested&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;現在の例外を入れ子にした例外を送出する(function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception/rethrow_if_nested.html&#34;&gt;rethrow_if_nested&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;入れ子になった例外が存在する場合に、入れ子になった例外を送出する(function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;</content>
      
      <author>
        <name>okuoku</name>
        <email>mjt@cltn.org</email>
      </author>
    </entry>
  
</feed>
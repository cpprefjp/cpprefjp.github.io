<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2020-05-18T14:34:34.537529</updated>
  <id>edf9fa12-39c0-4013-89d7-54034abf7105</id>

  
    <entry>
      <title>lcm -- lcm : リンクミスを修正</title>
      <link href="https://cpprefjp.github.io/reference/numeric/lcm.html"/>
      <id>96dd7efde9bf5ae7bd1a0b1c3df0b8b5848c611c:reference/numeric/lcm.md</id>
      <updated>2020-05-18T20:52:07+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/numeric/lcm.md b/reference/numeric/lcm.md
index c2f54e868..48064661a 100644
--- a/reference/numeric/lcm.md
+++ b/reference/numeric/lcm.md
@@ -61,14 +61,14 @@ int main() {
   assert(r == 12);
 
   // 以下、オーバーフローしやすい例
-  uint16_t m = 20000;
-  uint16_t n = 40000;
+  std::uint16_t m = 20000;
+  std::uint16_t n = 40000;
 
   // 標準std::lcm()の動作は実装定義
   std::cout &amp;lt;&amp;lt; &amp;#34;std::lcm(&amp;#34; &amp;lt;&amp;lt; m &amp;lt;&amp;lt; &amp;#34;, &amp;#34; &amp;lt;&amp;lt; n &amp;lt;&amp;lt; &amp;#34;)     &amp;#34; &amp;lt;&amp;lt; std::lcm(m, n) &amp;lt;&amp;lt; std::endl;
 
   // 公式通りのオーバーフローしやすい最小公倍数の実装
-  volatile uint16_t t = m * n; // 最適化回避のための変数
+  volatile std::uint16_t t = m * n; // 最適化回避のための変数
   std::cout &amp;lt;&amp;lt; &amp;#34;formal lcm(&amp;#34; &amp;lt;&amp;lt; m &amp;lt;&amp;lt; &amp;#34;, &amp;#34; &amp;lt;&amp;lt; n &amp;lt;&amp;lt; &amp;#34;)   &amp;#34; &amp;lt;&amp;lt; (t / std::gcd(m, n)) &amp;lt;&amp;lt; std::endl;
 
   // オーバーフローしにくいよう公式を改良した実装
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>lcm -- lcm : 不要になったコードを削除</title>
      <link href="https://cpprefjp.github.io/reference/numeric/lcm.html"/>
      <id>88d19217f5d3b3a0a19ab6faa2169db463a816d7:reference/numeric/lcm.md</id>
      <updated>2020-05-18T20:49:33+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/numeric/lcm.md b/reference/numeric/lcm.md
index 2825183d5..c2f54e868 100644
--- a/reference/numeric/lcm.md
+++ b/reference/numeric/lcm.md
@@ -37,11 +37,9 @@ namespace std {
 
 ## 例
 ```cpp example
-#include &amp;lt;cmath&amp;gt;
 #include &amp;lt;iostream&amp;gt;
 #include &amp;lt;cassert&amp;gt;
 #include &amp;lt;cstdint&amp;gt;
-#include &amp;lt;limits&amp;gt;
 #include &amp;lt;numeric&amp;gt;
 #include &amp;lt;vector&amp;gt;
 
@@ -79,9 +77,7 @@ int main() {
 }
 ```
 * std::lcm[color ff0000]
-* max[link /reference/limits/numeric_limits/max.md]
 * std::uint16_t[link /reference/cstdint/uint16_t.md]
-* std::fabs[link /reference/cmath/fabs.md]
 * std::accumulate[link accumulate.md]
 * std::gcd[link gcd.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>gcd -- gcd : 不要になったリンクを削除</title>
      <link href="https://cpprefjp.github.io/reference/numeric/gcd.html"/>
      <id>3ecd8061f2eb0d8f24d4a6132960bc137bc060f7:reference/numeric/gcd.md</id>
      <updated>2020-05-18T20:35:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/numeric/gcd.md b/reference/numeric/gcd.md
index 21a9e1fc5..e8ccca3a9 100644
--- a/reference/numeric/gcd.md
+++ b/reference/numeric/gcd.md
@@ -76,7 +76,6 @@ int main() {
 * std::int32_t[link /reference/cstdint/int32_t.md]
 * std::uint32_t[link /reference/cstdint/uint32_t.md]
 * std::accumulate[link accumulate.md]
-* v.front()[link /reference/vector/vector/front.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>lcm -- lcm : gcdへのリンクを追加</title>
      <link href="https://cpprefjp.github.io/reference/numeric/lcm.html"/>
      <id>a306da88ad76aaee6c70aaa8a7701503c6103b58:reference/numeric/lcm.md</id>
      <updated>2020-05-18T20:35:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/numeric/lcm.md b/reference/numeric/lcm.md
index 414babf6b..2825183d5 100644
--- a/reference/numeric/lcm.md
+++ b/reference/numeric/lcm.md
@@ -83,6 +83,7 @@ int main() {
 * std::uint16_t[link /reference/cstdint/uint16_t.md]
 * std::fabs[link /reference/cmath/fabs.md]
 * std::accumulate[link accumulate.md]
+* std::gcd[link gcd.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>gcd -- gcd : accumulateの初期値を修正</title>
      <link href="https://cpprefjp.github.io/reference/numeric/gcd.html"/>
      <id>63efd02dbe04f9912cf6e52ddbfc4571ed828eef:reference/numeric/gcd.md</id>
      <updated>2020-05-18T20:34:43+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/numeric/gcd.md b/reference/numeric/gcd.md
index 975c39bcc..21a9e1fc5 100644
--- a/reference/numeric/gcd.md
+++ b/reference/numeric/gcd.md
@@ -54,7 +54,7 @@ int main() {
   assert(std::gcd(std::gcd(12, 42), 72) == 6);
 
   std::vector&amp;lt;int&amp;gt; v = {12, 42, 72};
-  int r = std::accumulate(v.begin() + 1, v.end(), v.front(), [](int m, int n) {
+  int r = std::accumulate(v.begin(), v.end(), 0, [](int m, int n) {
     return std::gcd(m, n);
   });
   assert(r == 6);
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
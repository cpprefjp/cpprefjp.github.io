<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2025-08-18T15:20:13.722654</updated>
  <id>0e12198d-bcfc-4897-8f73-b02581423f3a</id>

  
    <entry>
      <title>C++17 -- typo修正</title>
      <link href="https://cpprefjp.github.io/lang/cpp17.html"/>
      <id>58451f0502e1105db7dfde36a2baba33b41af217:lang/cpp17.md</id>
      <updated>2025-08-19T00:07:29+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17.md b/lang/cpp17.md
index d2b6aeeae..0fadd4f75 100644
--- a/lang/cpp17.md
+++ b/lang/cpp17.md
@@ -323,7 +323,7 @@ C++17以降、言語の策定にship train modelというリリース体制が
     - [`not1()`](/reference/functional/negators.md)関数
     - [`not2()`](/reference/functional/negators.md)関数
     - [`unary_negate`](/reference/functional/negators.md)クラス
-    - [`binary_nagate`](/reference/functional/negators.md)クラス
+    - [`binary_negate`](/reference/functional/negators.md)クラス
     - 標準関数オブジェクトの`result_type`、`argument_type`、`first_argument_type`、`second_argument_type`型
 - デバッグ用途にしか使用しない、[`shared_ptr`](/reference/memory/shared_ptr.md)`::`[`unique()`](/reference/memory/shared_ptr/unique.md)を非推奨化
 - [`result_of`](/reference/type_traits/result_of.md)を非推奨化。代わりに[`invoke_result`](/reference/type_traits/invoke_result.md)を使用すること
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>_Exit -- リンクを修正</title>
      <link href="https://cpprefjp.github.io/reference/cstdlib/exit_.html"/>
      <id>f7662fecf1d9f87d46f8d951ab533adbbc2d1958:reference/cstdlib/exit_.md</id>
      <updated>2025-08-18T23:46:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstdlib/exit_.md b/reference/cstdlib/exit_.md
index 7879a0406..fadfed5ba 100644
--- a/reference/cstdlib/exit_.md
+++ b/reference/cstdlib/exit_.md
@@ -84,7 +84,7 @@ int main()
 | 名前 | 説明 |
 |------|------|
 | [`exit`](exit.md) | プログラムを終了させる |
-| [`quick_exit`](exit.md) | 後処理をせずに、プログラムを終了させる |
+| [`quick_exit`](quick_exit.md) | 後処理をせずに、プログラムを終了させる |
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- リンクを修正</title>
      <link href="https://cpprefjp.github.io/reference/linalg/conjugated_accessor/op_constructor.html"/>
      <id>f7662fecf1d9f87d46f8d951ab533adbbc2d1958:reference/linalg/conjugated_accessor/op_constructor.md</id>
      <updated>2025-08-18T23:46:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/conjugated_accessor/op_constructor.md b/reference/linalg/conjugated_accessor/op_constructor.md
index 2caccac95..eb7278d3f 100644
--- a/reference/linalg/conjugated_accessor/op_constructor.md
+++ b/reference/linalg/conjugated_accessor/op_constructor.md
@@ -25,7 +25,7 @@ constexpr conjugated_accessor(const NestedAccessor&amp;amp; acc); // (3)
 
 
 ## テンプレートパラメータ制約
-- (2) : [`is_constructible_v`](/reference/type_traits/is_convertible.md)`&amp;lt;NestedAccessor, const OtherNestedAccessor&amp;amp;&amp;gt; == true`
+- (2) : [`is_constructible_v`](/reference/type_traits/is_constructible.md)`&amp;lt;NestedAccessor, const OtherNestedAccessor&amp;amp;&amp;gt; == true`
 
 
 ## 効果
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- リンクを修正</title>
      <link href="https://cpprefjp.github.io/reference/linalg/scaled_accessor/op_constructor.html"/>
      <id>f7662fecf1d9f87d46f8d951ab533adbbc2d1958:reference/linalg/scaled_accessor/op_constructor.md</id>
      <updated>2025-08-18T23:46:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/scaled_accessor/op_constructor.md b/reference/linalg/scaled_accessor/op_constructor.md
index 6a3ee36d4..5b18007b0 100644
--- a/reference/linalg/scaled_accessor/op_constructor.md
+++ b/reference/linalg/scaled_accessor/op_constructor.md
@@ -25,7 +25,7 @@ constexpr scaled_accessor(const ScalingFactor&amp;amp; s, const NestedAccessor&amp;amp; a); // (
 
 
 ## テンプレートパラメータ制約
-- (2) : [`is_constructible_v`](/reference/type_traits/is_convertible.md)`&amp;lt;NestedAccessor, const OtherNestedAccessor&amp;amp;&amp;gt; == true`
+- (2) : [`is_constructible_v`](/reference/type_traits/is_constructible.md)`&amp;lt;NestedAccessor, const OtherNestedAccessor&amp;amp;&amp;gt; == true`
 
 
 ## 効果
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>size -- リンクを修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/size.html"/>
      <id>f7662fecf1d9f87d46f8d951ab533adbbc2d1958:reference/ranges/size.md</id>
      <updated>2025-08-18T23:46:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/size.md b/reference/ranges/size.md
index a16584c32..48a6eca92 100644
--- a/reference/ranges/size.md
+++ b/reference/ranges/size.md
@@ -21,7 +21,7 @@ Rangeの要素数を取得する関数オブジェクト。
 1. `T`が配列型であれば、[`decay-copy`](/reference/exposition-only/decay-copy.md)`(`[`extent_v`](/reference/type_traits/extent.md)`&amp;lt;T&amp;gt;)`に等しい(expression‑equivalent)。ただし、要素数不明の配列であれば、呼び出しは不適格。
 2. [`disable_sized_range`](disable_sized_range.md)`&amp;lt;`[`remove_cv_t`](/reference/type_traits/remove_cv.md)`&amp;lt;T&amp;gt;&amp;gt;`が`false`、かつ[`decay-copy`](/reference/exposition-only/decay-copy.md)`(t.size())`が整数型(integer-like)の有効な式であれば、[`decay-copy`](/reference/exposition-only/decay-copy.md)`(t.size())`と等しい。
 3. `T`がクラス型または列挙体であって、[`disable_sized_range`](disable_sized_range.md)`&amp;lt;`[`remove_cv_t`](/reference/type_traits/remove_cv.md)`&amp;lt;T&amp;gt;&amp;gt;`が`false`、かつ`size`がADLで見つかり、[`decay-copy`](/reference/exposition-only/decay-copy.md)`(size(t))`が整数型の有効な式であれば、[`decay-copy`](/reference/exposition-only/decay-copy.md)`(size(t))`と等しい。
-4. `to-unsigned-like(`[`ranges::end`](end.md)`(t) - `[`ranges::begin`](begin.md)`(t))`が有効な式で、[`ranges::begin`](begin.md)の型`I`、[`ranges::end`](end.md)の型`S`が[`sized_sentinel_for`](/reference/iterator/disable_sized_sentinel_for.md)`&amp;lt;S, I&amp;gt;`と[`forward_iterator`](/reference/iterator/forward_iterator.md)のモデルであれば、`to-unsigned-like(`[`ranges::end`](end.md)`(t) - `[`ranges::begin`](begin.md)`(t))`と等しい。
+4. `to-unsigned-like(`[`ranges::end`](end.md)`(t) - `[`ranges::begin`](begin.md)`(t))`が有効な式で、[`ranges::begin`](begin.md)の型`I`、[`ranges::end`](end.md)の型`S`が[`sized_sentinel_for`](/reference/iterator/sized_sentinel_for.md)`&amp;lt;S, I&amp;gt;`と[`forward_iterator`](/reference/iterator/forward_iterator.md)のモデルであれば、`to-unsigned-like(`[`ranges::end`](end.md)`(t) - `[`ranges::begin`](begin.md)`(t))`と等しい。
 
 どれにも当てはまらないとき、呼び出しは不適格。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>drop_view -- リンクを修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/drop_view.html"/>
      <id>05fca6c891d56c851551790ce6511d683c5ea69a:reference/ranges/drop_view.md</id>
      <updated>2025-08-18T21:06:08+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/drop_view.md b/reference/ranges/drop_view.md
index f16eee274..3ff0f4ddb 100644
--- a/reference/ranges/drop_view.md
+++ b/reference/ranges/drop_view.md
@@ -38,7 +38,7 @@ namespace std::ranges {
 - (2): `E`および`F`を式、型`T`を[`remove_cvref_t`](/reference/type_traits/remove_cvref.md)`&amp;lt;`[`decltype`](/lang/cpp11/decltype.md)`((E))&amp;gt;`、型`D`を[`range_difference_t`](range_difference_t.md)`&amp;lt;`[`decltype`](/lang/cpp11/decltype.md)`((E))&amp;gt;`とする。式`views::drop(E, F)`の効果は以下の通り
     - [`decltype`](/lang/cpp11/decltype.md)`((F))`が[`convertible_to`](/reference/concepts/convertible_to.md)`&amp;lt;D&amp;gt;`のモデルでなければ、呼び出しは不適格
     - `T`が[`ranges::empty_view`](empty_view.md)の特殊化であれば、`((void) F, `[`decay-copy`](/reference/exposition-only/decay-copy.md)`(E))`と等しい。ただし、`E`と`F`の評価順序は不定順で序列化(indeterminately sequenced)される
-    - `T`が[`random_access_range`](random_access_range.md)および[`sized_range`](sized_range.md)のモデルであり、かつ次のいずれかの特殊化であるとき、`T(`[`ranges::begin`](begin.md)`(E) + `[`min`](/reference/algorithm/min.md)`&amp;lt;D&amp;gt;(`[`ranges::size`](size.md)`(E), F), `[`ranges::end`](begin.md)`(E))`と等しい。ただし、`E`は1度だけ評価される
+    - `T`が[`random_access_range`](random_access_range.md)および[`sized_range`](sized_range.md)のモデルであり、かつ次のいずれかの特殊化であるとき、`T(`[`ranges::begin`](begin.md)`(E) + `[`min`](/reference/algorithm/min.md)`&amp;lt;D&amp;gt;(`[`ranges::size`](size.md)`(E), F), `[`ranges::end`](end.md)`(E))`と等しい。ただし、`E`は1度だけ評価される
         - [`span`](/reference/span/span.md) (ただし、`T::extent == `[`dynamic_extent`](/reference/span/dynamic_extent.md)であること)
         - [`basic_string_view`](/reference/string_view/basic_string_view.md)
         - [`ranges::iota_view`](iota_view.md)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sentinel -- リンクを修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/iota_view/sentinel.html"/>
      <id>05fca6c891d56c851551790ce6511d683c5ea69a:reference/ranges/iota_view/sentinel.md</id>
      <updated>2025-08-18T21:06:08+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/iota_view/sentinel.md b/reference/ranges/iota_view/sentinel.md
index 2abb930c9..888da36bb 100644
--- a/reference/ranges/iota_view/sentinel.md
+++ b/reference/ranges/iota_view/sentinel.md
@@ -13,7 +13,7 @@
 
 このクラスの名前は規定されておらず、振る舞いのみが規定されている。
 
-このクラスの型を取得したい場合、[`sentinel_t`](../iterator_t.md)を使用できる。
+このクラスの型を取得したい場合、[`sentinel_t`](../sentinel_t.md)を使用できる。
 
 なお、[`iota_view`](../iota_view.md)の番兵型は、無限長のときは[`unreachable_sentinel_t`](/reference/iterator/unreachable_sentinel_t.md)、有限長で[`common_range`](../common_range.md)のときは[`iterator`](iterator.md)である。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>locale -- typo修正</title>
      <link href="https://cpprefjp.github.io/reference/locale.html"/>
      <id>17a8b4eaef58a42094e82be935a9632d852b7f37:reference/locale.md</id>
      <updated>2025-08-18T21:06:00+09:00</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;locale&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;locale&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;locale&amp;gt;&lt;/code&gt;ヘッダでは、ローカライゼーション（地域化）に関するクラス・関数を定義する。このヘッダに含まれるクラス・関数は&lt;code&gt;std&lt;/code&gt;名前空間で定義される。&lt;/p&gt;
&lt;h2&gt;ロケール&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;locale/locale.html&#34;&gt;locale&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ロケール(class)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;use_facet&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ロケールが持つファセットの取得(function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;has_facet&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ロケールがファセットを持っているか判定(function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;利便性インタフェース&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;isspace&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;空白類文字の判定(function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;isprint&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;印字可能文字の判定(function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;iscntrl&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;制御文字の判定(function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;isupper&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;英大文字の判定(function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;islower&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;英小文字の判定(function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;isalpha&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;英字の判定(function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;isdigit&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;数字の判定(function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ispunct&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;区切り文字の判定(function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;isxdigit&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;十六進数字の判定(function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;isalnum&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;英字・数字の判定(function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;isgraph&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;図形文字の判定(function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;locale/toupper.html&#34;&gt;toupper&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;英大文字への変換(function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;locale/tolower.html&#34;&gt;tolower&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;英子文字への変換(function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;locale/wstring_convert.html&#34;&gt;wstring_convert&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;codecvt&lt;/code&gt;による文字列変換(class template)&lt;/td&gt;
&lt;td&gt;C++11&lt;br /&gt; C++17から非推奨&lt;br /&gt; C++26で削除&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;locale/wbuffer_convert.html&#34;&gt;wbuffer_convert&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;codecvt&lt;/code&gt;によるストリームバッファ変換(class template)&lt;/td&gt;
&lt;td&gt;C++11&lt;br /&gt; C++17から非推奨&lt;br /&gt; C++26で削除&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;locale/ctype_base.html&#34;&gt;ctype_base&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字分類のための基底クラス(class)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;locale/ctype.html&#34;&gt;ctype&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字の分類(class template)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;locale/ctype_byname.html&#34;&gt;ctype_byname&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;名前による文字の分類(class template)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;locale/codecvt_base.html&#34;&gt;codecvt_base&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字コード変換のための基底クラス(class)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;locale/codecvt.html&#34;&gt;codecvt&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字コード変換(class template)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;locale/codecvt_byname.html&#34;&gt;codecvt_byname&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;名前による文字コード変換(class template)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;数値&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;locale/num_get.html&#34;&gt;num_get&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;数値の解析(class template)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;locale/num_put.html&#34;&gt;num_put&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;数値の出力(class template)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;locale/numpunct.html&#34;&gt;numpunct&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;数値の区切り文字に関する情報(class template)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;locale/numpunct_byname.html&#34;&gt;numpunct_byname&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;名前による数値の区切り文字情報(class template)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;照合&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;locale/collate.html&#34;&gt;collate&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列の照合(class template)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;locale/collate_byname.html&#34;&gt;collate_byname&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;名前による文字列の照合(class template)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;日付と時間&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;locale/time_base.html&#34;&gt;time_base&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日時解析のための基底クラス(class)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;locale/time_get.html&#34;&gt;time_get&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日時の解析(class template)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;locale/time_get_byname.html&#34;&gt;time_get_byname&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;名前による日時解析(class template)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;locale/time_put.html&#34;&gt;time_put&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日時の出力(class template)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;locale/time_put_byname.html&#34;&gt;time_put_byname&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;名前による日時出力(class template)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;金額&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;locale/money_get.html&#34;&gt;money_get&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;金額の解析(class template)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;locale/money_put.html&#34;&gt;money_put&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;金額の出力(class template)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;locale/money_base.html&#34;&gt;money_base&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;金額解析のための基底クラス(class)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;locale/moneypunct.html&#34;&gt;moneypunct&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;金額のフォーマット(class template)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;locale/moneypunct_byname.html&#34;&gt;moneypunct_byname&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;名前による金額のフォーマット(class template)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;メッセージ取得&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;locale/messages_base.html&#34;&gt;messages_base&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;メッセージ取得のための基底クラス(class)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;locale/messages.html&#34;&gt;messages&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;メッセージカタログから対応する翻訳メッセージの取得(class template)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;locale/messages_byname.html&#34;&gt;messages_byname&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;名前による翻訳メッセージの取得(class template)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>iterator_category -- typo修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/filter_view/iterator/type-iterator_category.html"/>
      <id>17a8b4eaef58a42094e82be935a9632d852b7f37:reference/ranges/filter_view/iterator/type-iterator_category.md</id>
      <updated>2025-08-18T21:06:00+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/filter_view/iterator/type-iterator_category.md b/reference/ranges/filter_view/iterator/type-iterator_category.md
index df036f7fd..554d47e53 100644
--- a/reference/ranges/filter_view/iterator/type-iterator_category.md
+++ b/reference/ranges/filter_view/iterator/type-iterator_category.md
@@ -12,7 +12,7 @@ using iterator_category = 以下参照; // (1) C++20
 ## 概要
 イテレータの分類を表す型。
 
-このメンバ型`iterator_concept`は、`V`が[`forward_ranges`](/reference/ranges/forward_range.md)コンセプトのモデルである場合にのみ、以下のように定義される。
+このメンバ型`iterator_concept`は、`V`が[`forward_range`](/reference/ranges/forward_range.md)コンセプトのモデルである場合にのみ、以下のように定義される。
 
 - `C = iterator_traits&amp;lt;iterator_t&amp;lt;V&amp;gt;&amp;gt;::iterator_category;`であるとして、
 - `C`が[`derived_from`](/reference/concepts/derived_from.md)`&amp;lt;`[`bidirectional_iterator_tag`](/reference/iterator/iterator_tag.md)`&amp;gt;`のモデルである場合、`iterator_category`は[`bidirectional_iterator_tag`](/reference/iterator/iterator_tag.md)となる
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>iterator_concept -- typo修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/filter_view/iterator/type-iterator_concept.html"/>
      <id>17a8b4eaef58a42094e82be935a9632d852b7f37:reference/ranges/filter_view/iterator/type-iterator_concept.md</id>
      <updated>2025-08-18T21:06:00+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/filter_view/iterator/type-iterator_concept.md b/reference/ranges/filter_view/iterator/type-iterator_concept.md
index 94bba0e36..9e458f6b8 100644
--- a/reference/ranges/filter_view/iterator/type-iterator_concept.md
+++ b/reference/ranges/filter_view/iterator/type-iterator_concept.md
@@ -12,8 +12,8 @@ using iterator_concept = 以下参照; // (1) C++20
 ## 概要
 イテレータコンセプトを表す型。
 
-- `V`が[`bidirectional_ranges`](/reference/ranges/bidirectional_range.md)コンセプトのモデルである場合、[`bidirectional_iterator_tag`](/reference/iterator/iterator_tag.md)
-- `V`が[`forward_ranges`](/reference/ranges/forward_range.md)コンセプトのモデルである場合、[`forward_iterator_tag`](/reference/iterator/iterator_tag.md)
+- `V`が[`bidirectional_range`](/reference/ranges/bidirectional_range.md)コンセプトのモデルである場合、[`bidirectional_iterator_tag`](/reference/iterator/iterator_tag.md)
+- `V`が[`forward_range`](/reference/ranges/forward_range.md)コンセプトのモデルである場合、[`forward_iterator_tag`](/reference/iterator/iterator_tag.md)
 - そうでない場合、[`input_iterator_tag`](/reference/iterator/iterator_tag.md)
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
</feed>
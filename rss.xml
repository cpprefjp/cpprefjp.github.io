<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2021-09-13T14:37:08.775262</updated>
  <id>bb5c29af-1944-4f9d-b37b-07b0388e39b0</id>

  
    <entry>
      <title>operator&lt; -- Merge pull request #899 from cpprefjp/Jumpaku-patch-1</title>
      <link href="https://cpprefjp.github.io/reference/tuple/tuple/op_less.html"/>
      <id>893fc4b82f606bade76e29a7439500947ad2d2b0:reference/tuple/tuple/op_less.md</id>
      <updated>2021-09-13T22:35:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/tuple/tuple/op_less.md b/reference/tuple/tuple/op_less.md
index e7a4ee629..2ae082725 100644
--- a/reference/tuple/tuple/op_less.md
+++ b/reference/tuple/tuple/op_less.md
@@ -22,15 +22,20 @@ namespace std {
 
 ## 要件
 - 2つの`tuple`の要素数が同じであること。
-- `tuple`の要素`std::`[`get`](get.md)`&amp;lt;i&amp;gt;(t)`と`std::`[`get`](get.md)`&amp;lt;i&amp;gt;(u)`において、すべての要素の比較 `std::`[`get`](get.md)`&amp;lt;i&amp;gt;(t) &amp;lt; std::`[`get`](get.md)`&amp;lt;i&amp;gt;(u)` の比較結果が`bool`に変換可能な型であること。
+- `tuple`の要素`std::`[`get`](get.md)`&amp;lt;i&amp;gt;(t)`と`std::`[`get`](get.md)`&amp;lt;i&amp;gt;(u)`において、すべての要素の比較 `std::`[`get`](get.md)`&amp;lt;i&amp;gt;(t) &amp;lt; std::`[`get`](get.md)`&amp;lt;i&amp;gt;(u)` および `std::`[`get`](get.md)`&amp;lt;i&amp;gt;(u) &amp;lt; std::`[`get`](get.md)`&amp;lt;i&amp;gt;(t)` の比較結果が`bool`に変換可能な型であること。
 
 
 ## 戻り値
 2つの`tuple`オブジェクト、`t`と`u`の辞書順比較を行った結果を返す。定義は以下のようになる：
 
 ```cpp
-get&amp;lt;i&amp;gt;(t) &amp;lt; get&amp;lt;i&amp;gt;(u) || !(get&amp;lt;i&amp;gt;(u) &amp;lt; get&amp;lt;i&amp;gt;(t)) &amp;amp;&amp;amp; get&amp;lt;i+N...&amp;gt;(t) &amp;lt; get&amp;lt;i+N...&amp;gt;(u) ...`
+(bool)(get&amp;lt;0&amp;gt;(t) &amp;lt; get&amp;lt;0&amp;gt;(u)) || (!(bool)(get&amp;lt;0&amp;gt;(u) &amp;lt; get&amp;lt;0&amp;gt;(t)) &amp;amp;&amp;amp; t_tail &amp;lt; u_tail)
 ```
+
+ただし、`r_tail`は、ある`tuple`オブジェクト`r`の最初の要素以外の全ての要素を含む`tuple`オブジェクトを表す。
+
+2つの`tuple`オブジェクトの要素数が0である場合は、`false`を返す。
+
 * get[link get.md]
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt; -- tupleのoperator&lt;の説明を修正</title>
      <link href="https://cpprefjp.github.io/reference/tuple/tuple/op_less.html"/>
      <id>77fc4918b2ebb23fdb05381ae0976012a901f4b4:reference/tuple/tuple/op_less.md</id>
      <updated>2021-09-13T13:22:45+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/tuple/tuple/op_less.md b/reference/tuple/tuple/op_less.md
index 0329857c5..2ae082725 100644
--- a/reference/tuple/tuple/op_less.md
+++ b/reference/tuple/tuple/op_less.md
@@ -22,15 +22,20 @@ namespace std {
 
 ## 要件
 - 2つの`tuple`の要素数が同じであること。
-- `tuple`の要素`std::`[`get`](get.md)`&amp;lt;i&amp;gt;(t)`と`std::`[`get`](get.md)`&amp;lt;i&amp;gt;(u)`において、すべての要素の比較 `std::`[`get`](get.md)`&amp;lt;i&amp;gt;(t) &amp;lt; std::`[`get`](get.md)`&amp;lt;i&amp;gt;(u)` の比較結果が`bool`に変換可能な型であること。
+- `tuple`の要素`std::`[`get`](get.md)`&amp;lt;i&amp;gt;(t)`と`std::`[`get`](get.md)`&amp;lt;i&amp;gt;(u)`において、すべての要素の比較 `std::`[`get`](get.md)`&amp;lt;i&amp;gt;(t) &amp;lt; std::`[`get`](get.md)`&amp;lt;i&amp;gt;(u)` および `std::`[`get`](get.md)`&amp;lt;i&amp;gt;(u) &amp;lt; std::`[`get`](get.md)`&amp;lt;i&amp;gt;(t)` の比較結果が`bool`に変換可能な型であること。
 
 
 ## 戻り値
 2つの`tuple`オブジェクト、`t`と`u`の辞書順比較を行った結果を返す。定義は以下のようになる：
 
 ```cpp
-get&amp;lt;i&amp;gt;(t) &amp;lt; get&amp;lt;i&amp;gt;(u) || !(get&amp;lt;i&amp;gt;(u) &amp;lt; get&amp;lt;i&amp;gt;(t)) &amp;amp;&amp;amp; get&amp;lt;i+N...&amp;gt;(t) &amp;lt; get&amp;lt;i+N...&amp;gt;(u) ...
+(bool)(get&amp;lt;0&amp;gt;(t) &amp;lt; get&amp;lt;0&amp;gt;(u)) || (!(bool)(get&amp;lt;0&amp;gt;(u) &amp;lt; get&amp;lt;0&amp;gt;(t)) &amp;amp;&amp;amp; t_tail &amp;lt; u_tail)
 ```
+
+ただし、`r_tail`は、ある`tuple`オブジェクト`r`の最初の要素以外の全ての要素を含む`tuple`オブジェクトを表す。
+
+2つの`tuple`オブジェクトの要素数が0である場合は、`false`を返す。
+
 * get[link get.md]
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Jumpaku</name>
        <email>Jumpaku@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt; -- Fix typo</title>
      <link href="https://cpprefjp.github.io/reference/tuple/tuple/op_less.html"/>
      <id>4717727d11c6b684e87e210a5cbdd325007db005:reference/tuple/tuple/op_less.md</id>
      <updated>2021-09-12T03:00:20+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/tuple/tuple/op_less.md b/reference/tuple/tuple/op_less.md
index e7a4ee629..0329857c5 100644
--- a/reference/tuple/tuple/op_less.md
+++ b/reference/tuple/tuple/op_less.md
@@ -29,7 +29,7 @@ namespace std {
 2つの`tuple`オブジェクト、`t`と`u`の辞書順比較を行った結果を返す。定義は以下のようになる：
 
 ```cpp
-get&amp;lt;i&amp;gt;(t) &amp;lt; get&amp;lt;i&amp;gt;(u) || !(get&amp;lt;i&amp;gt;(u) &amp;lt; get&amp;lt;i&amp;gt;(t)) &amp;amp;&amp;amp; get&amp;lt;i+N...&amp;gt;(t) &amp;lt; get&amp;lt;i+N...&amp;gt;(u) ...`
+get&amp;lt;i&amp;gt;(t) &amp;lt; get&amp;lt;i&amp;gt;(u) || !(get&amp;lt;i&amp;gt;(u) &amp;lt; get&amp;lt;i&amp;gt;(t)) &amp;amp;&amp;amp; get&amp;lt;i+N...&amp;gt;(t) &amp;lt; get&amp;lt;i+N...&amp;gt;(u) ...
 ```
 * get[link get.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Jumpaku</name>
        <email>Jumpaku@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_constant_evaluated -- is_constant_evaluated: 言語機能ページへのリンク付与</title>
      <link href="https://cpprefjp.github.io/reference/type_traits/is_constant_evaluated.html"/>
      <id>95bc8e0a22c3d3c69e188b21c59bd58b3ed0ff7d:reference/type_traits/is_constant_evaluated.md</id>
      <updated>2021-09-09T16:42:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/type_traits/is_constant_evaluated.md b/reference/type_traits/is_constant_evaluated.md
index a8c246564..1cd386e9a 100644
--- a/reference/type_traits/is_constant_evaluated.md
+++ b/reference/type_traits/is_constant_evaluated.md
@@ -20,9 +20,9 @@ namespace std {
 本関数は以下の文脈内で評価された場合に`true`を返す。
 
 - 文法上の定数式（配列型の要素数、`case`ラベルの値、など）
-- `constexpr if`の条件式
+- [`constexpr if`](/lang/cpp17/if_constexpr.md)の条件式
 - [`consteval`関数](/lang/cpp20/immediate_functions.md)の呼び出し内
-- コンセプトの定義式
+- [コンセプト](/lang/cpp20/concepts.md)の定義式
     - `requires`節内
     - 入れ子要件内
 - 定数式で使用可能な変数の初期化式
@@ -31,10 +31,9 @@ namespace std {
     - 定数初期化される参照型変数の初期化式
 - 定数初期化される変数の初期化式
 
-上記の文脈の外では、コンパイラの最適化（定数畳み込み）によって容易にコンパイル時評価できる
-式や`constexpr`関数の呼び出し中の評価であっても`false`となる。
+上記の文脈の外では、コンパイラの最適化（定数畳み込み）によって容易にコンパイル時評価できる式や`constexpr`関数の呼び出し中の評価であっても`false`となる。
 
-`constexpr if`の条件式および`static_assert`の条件式に書かれている場合は必ず`true`となるので注意が必要である。
+[`constexpr if`](/lang/cpp17/if_constexpr.md)の条件式および[`static_assert`](/lang/cpp11/static_assert.md)の条件式に書かれている場合は必ず`true`となるので注意が必要である。
 
 
 ## 備考
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>format -- consteval/即時関数に当該言語機能へのリンク付与</title>
      <link href="https://cpprefjp.github.io/reference/format/format.html"/>
      <id>8fd39c7d3a324e27967350123188860d4edc0a37:reference/format/format.md</id>
      <updated>2021-09-09T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/format/format.md b/reference/format/format.md
index 99f7fd060..87071c218 100644
--- a/reference/format/format.md
+++ b/reference/format/format.md
@@ -198,6 +198,7 @@ namespace std {
   template&amp;lt;class... Args&amp;gt; using wformat_string
     = basic_format_string&amp;lt;wchar_t, type_identity_t&amp;lt;Args&amp;gt;...&amp;gt;; // exposition only
 ```
+* consteval[link /lang/cpp20/immediate_functions.md]
 
 _`basic_format_string`_ のコンストラクタは[即時関数](/lang/cpp20/immediate_functions.md)であり、書式文字列が正しい場合にのみ定数式として評価できるように実装される。即時関数であるため、定数式として評価できない場合はエラーとなる。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>source_location -- consteval/即時関数に当該言語機能へのリンク付与</title>
      <link href="https://cpprefjp.github.io/reference/source_location/source_location.html"/>
      <id>8fd39c7d3a324e27967350123188860d4edc0a37:reference/source_location/source_location.md</id>
      <updated>2021-09-09T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/source_location/source_location.md b/reference/source_location/source_location.md
index d47337d4d..abccdb775 100644
--- a/reference/source_location/source_location.md
+++ b/reference/source_location/source_location.md
@@ -23,6 +23,7 @@ namespace std {
   };
 }
 ```
+* consteval[link /lang/cpp20/immediate_functions.md]
 * uint_least32_t[link /reference/cstdint/uint_least32_t.md]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>current -- consteval/即時関数に当該言語機能へのリンク付与</title>
      <link href="https://cpprefjp.github.io/reference/source_location/source_location/current.html"/>
      <id>8fd39c7d3a324e27967350123188860d4edc0a37:reference/source_location/source_location/current.md</id>
      <updated>2021-09-09T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/source_location/source_location/current.md b/reference/source_location/source_location/current.md
index 919d9f4f1..cd61cd057 100644
--- a/reference/source_location/source_location/current.md
+++ b/reference/source_location/source_location/current.md
@@ -8,6 +8,7 @@
 ```cpp
 static consteval source_location current() noexcept;
 ```
+* consteval[link /lang/cpp20/immediate_functions.md]
 * source_location[link ../source_location.md]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_constant_evaluated -- consteval/即時関数に当該言語機能へのリンク付与</title>
      <link href="https://cpprefjp.github.io/reference/type_traits/is_constant_evaluated.html"/>
      <id>8fd39c7d3a324e27967350123188860d4edc0a37:reference/type_traits/is_constant_evaluated.md</id>
      <updated>2021-09-09T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/type_traits/is_constant_evaluated.md b/reference/type_traits/is_constant_evaluated.md
index 42c671631..a8c246564 100644
--- a/reference/type_traits/is_constant_evaluated.md
+++ b/reference/type_traits/is_constant_evaluated.md
@@ -21,7 +21,7 @@ namespace std {
 
 - 文法上の定数式（配列型の要素数、`case`ラベルの値、など）
 - `constexpr if`の条件式
-- `consteval`関数の呼び出し内
+- [`consteval`関数](/lang/cpp20/immediate_functions.md)の呼び出し内
 - コンセプトの定義式
     - `requires`節内
     - 入れ子要件内
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
</feed>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2017-12-27T04:40:27.764428</updated>
  <id>c3f8ca81-2a5e-4389-9e45-8eaeb2f4c5cd</id>

  
    <entry>
      <title>page_title (1行目の見出し1はページのタイトルです。修飾なしで記載してください) -- 言語機能以外の雛形に、関連項目が記載されていなかった</title>
      <link href="https://cpprefjp.github.io/editors_doc/class_template_page.html"/>
      <id>101ec5c4bbf2a5763488d224fb4b961ebf9bb562:editors_doc/class_template_page.md</id>
      <updated>2017-12-27T13:37:40+09:00</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;class&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;header_name&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;&lt;span class=&#34;token&#34;&gt;page_title (1行目の見出し1はページのタイトルです。修飾なしで記載してください)&lt;/span&gt;&lt;span class=&#34;cpp cpp17&#34; title=&#34;C++17で追加&#34;&gt;(C++17)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;(&lt;a href=&#34;https://cpprefjp.github.io/editors_doc/start_editing.html&#34;&gt;cpprefjpを編集するには&lt;/a&gt; および &lt;a href=&#34;https://cpprefjp.github.io/editors_doc/specialized.html&#34;&gt;cpprefjp特有の拡張構文&lt;/a&gt; を先に読んで下さい。)&lt;/p&gt;
&lt;p&gt;(
  サンプルコードは文章中のどの部分で書いても大丈夫です。閲覧者の理解を助けるために必要だと感じたところで入れてください。
  その際拡張構文である&lt;code&gt;example&lt;/code&gt;タグをルールに従って付け、コンパイル・実行可能にすることを検討してください。
)&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- `[meta header]`は、所属ヘッダを表すメタ情報 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- `[meta id-type]`は、識別子の種別を表すメタ情報。class, class template, function, function template, enum, variable, type-alias, macro, namespace --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- `[meta namespace]`は、所属する名前空間を表すメタ情報。マクロを考慮して省略可。名前空間の区切りは`::` --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- `[meta class]`は、所属するクラスを表すメタ情報。クラスページでは省略する。structとは書けない --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- `[meta cpp]`は、機能が追加・非推奨・削除されたバージョンを表すメタ情報。改行して複数指定ができる。 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp11[meta cpp]` : C++11で追加された機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp14[meta cpp]` : C++14で追加された機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp17[meta cpp]` : C++17で追加された機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp20[meta cpp]` : C++20で追加された機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp11deprecated[meta cpp]` : C++11で非推奨になった機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp14deprecated[meta cpp]` : C++14で非推奨になった機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp14removed[meta cpp]` : C++14で削除された機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp17deprecated[meta cpp]` : C++17で非推奨になった機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp17removed[meta cpp]` : C++17で削除された機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp20deprecated[meta cpp]` : C++20で非推奨になった機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp20removed[meta cpp]` : C++20で削除された機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;definition&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// クラスの宣言を記述します。&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;(ここには、クラスの概要を記述します。必須事項です。)&lt;/p&gt;
&lt;p&gt;(必要な項目を省略する場合には、「(執筆中)」と書いておいてください。)&lt;/p&gt;
&lt;h2&gt;メンバ関数&lt;/h2&gt;
&lt;h3&gt;構築・破棄&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;(constructor)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;コンストラクタ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;(destructor)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;デストラクタ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;代入演算子&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;function_name&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;説明&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;静的メンバ関数&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;メンバ型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;非メンバ関数&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;c1&#34;&gt;// (ここには、クラスを解説するための、サンプルコードを記述します。)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// (インクルードとmain()関数を含む、実行可能なサンプルコードを記述してください。そのようなコードブロックにはexampleタグを付けます。)&lt;/span&gt;

&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;

&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;variable&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;variable&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;(コードブロック中の識別子に、文字色を付ける例です。)&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;0
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;(ここには、サンプルコードの実行結果を記述します。何も出力がない場合は、項目を削除せず、空の出力にしてください。)&lt;br /&gt;
(実行結果が処理系・実行環境によって異なる場合は、項目名を「出力例」に変更し、可能であればその理由も併記してください。)&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: 1.9, 2.9, 3.0, 3.1, 3.2, 3.3&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: 3.4.6, 4.2.4, 4.3.6, 4.4.7, 4.5.3, 4.6.3, 4.7.2, 4.8.1&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++11 mode&lt;/a&gt;: 4.3.6, 4.4.7, 4.5.3, 4.6.3, 4.7.2, 4.8.1&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: 10.1, 11.0, 11.1, 12.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: 2003, 2005, 2008, 2010, 2012&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(ここには、その機能が存在する言語のバージョンと、確認がとれたコンパイラとそのバージョンを記述します。)&lt;br /&gt;
(これらの項目を削除した場合、C++03のあらゆる環境で使用できることを意味します。)&lt;/p&gt;
&lt;h2&gt;関連項目&lt;/h2&gt;
&lt;p&gt;(ここには、その機能と関連のあるcpprefjpサイト内の項目へのリンクを記述します。とくに必要がないと判断した場合、項目を削除してください。)&lt;/p&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;p&gt;(ここには、その関数・変数・定数を理解するにあたっての参考資料や、関連する機能へのリンクを記述します。とくに必要がないと判断した場合、項目を削除してください。)&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>page_title ((1行目の見出し1はページのタイトルです。修飾なしで記載してください) -- 言語機能以外の雛形に、関連項目が記載されていなかった</title>
      <link href="https://cpprefjp.github.io/editors_doc/function_template_page.html"/>
      <id>101ec5c4bbf2a5763488d224fb4b961ebf9bb562:editors_doc/function_template_page.md</id>
      <updated>2017-12-27T13:37:40+09:00</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;function&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;header_name&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;&lt;span class=&#34;class&#34; title=&#34;class class_name&#34;&gt;class_name::&lt;/span&gt;&lt;span class=&#34;token&#34;&gt;page_title ((1行目の見出し1はページのタイトルです。修飾なしで記載してください)&lt;/span&gt;&lt;span class=&#34;cpp cpp17&#34; title=&#34;C++17で追加&#34;&gt;(C++17)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;(&lt;a href=&#34;https://cpprefjp.github.io/editors_doc/start_editing.html&#34;&gt;cpprefjpを編集するには&lt;/a&gt; および &lt;a href=&#34;https://cpprefjp.github.io/editors_doc/specialized.html&#34;&gt;cpprefjp特有の拡張構文&lt;/a&gt; を先に読んで下さい。)&lt;/p&gt;
&lt;p&gt;(
  サンプルコードは文章中のどの部分で書いても大丈夫です。閲覧者の理解を助けるために必要だと感じたところで入れてください。
  その際拡張構文である&lt;code&gt;example&lt;/code&gt;タグをルールに従って付け、コンパイル・実行可能にすることを検討してください。
)&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- `[meta header]`は、所属ヘッダを表すメタ情報 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- `[meta id-type]`は、識別子の種別を表すメタ情報。class, class template, function, function template, enum, variable, type-alias, macro, namespace --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- `[meta namespace]`は、所属する名前空間を表すメタ情報。マクロを考慮して省略可。名前空間の区切りは`::` --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- `[meta class]`は、所属するクラスを表すメタ情報。クラスページでは省略する。structとは書けない --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- `[meta cpp]`は、機能が追加・非推奨・削除されたバージョンを表すメタ情報。改行して複数指定ができる。 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp11[meta cpp]` : C++11で追加された機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp14[meta cpp]` : C++14で追加された機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp17[meta cpp]` : C++17で追加された機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp20[meta cpp]` : C++20で追加された機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp11deprecated[meta cpp]` : C++11で非推奨になった機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp14deprecated[meta cpp]` : C++14で非推奨になった機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp14removed[meta cpp]` : C++14で削除された機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp17deprecated[meta cpp]` : C++17で非推奨になった機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp17removed[meta cpp]` : C++17で削除された機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp20deprecated[meta cpp]` : C++20で非推奨になった機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp20removed[meta cpp]` : C++20で削除された機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;definition&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 関数・変数・定数の宣言を記述します。&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;(ここには、関数・変数・定数の概要を記述します。必須事項です。)&lt;/p&gt;
&lt;p&gt;(必要な項目を省略する場合には、「(執筆中)」と書いておいてください。)&lt;/p&gt;
&lt;h2&gt;要件&lt;/h2&gt;
&lt;p&gt;(ここには、関数を実行するための事前条件、型への要件などを記述します。とくになければ、項目を削除してください。)&lt;/p&gt;
&lt;h2&gt;効果&lt;/h2&gt;
&lt;p&gt;(ここには、関数の内部で行われる効果:effect を記述します。戻り値しかないような関数の場合には、項目を削除してください。)&lt;/p&gt;
&lt;h2&gt;戻り値&lt;/h2&gt;
&lt;p&gt;(ここには、関数の戻り値を記述します。戻り値の型が&lt;code&gt;void&lt;/code&gt;の場合は、「なし」と記述してください。)&lt;/p&gt;
&lt;h2&gt;計算量&lt;/h2&gt;
&lt;p&gt;(ここには、アルゴリズムの計算量を記述します。規格上とくに明記がなければ、項目を削除してください。)&lt;/p&gt;
&lt;h2&gt;備考&lt;/h2&gt;
&lt;p&gt;(ここには、関数・変数・定数を説明するにあたっての、補足事項を記述します。とくになければ、項目を削除してください。)&lt;/p&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;c1&#34;&gt;// (ここには、関数・変数・定数を解説するための、サンプルコードを記述します。)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// (インクルードとmain()関数を含む、実行可能なサンプルコードを記述してください。そのようなコードブロックにはexampleタグを付けます。)&lt;/span&gt;

&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;

&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;variable&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;variable&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;0
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;実装例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;c1&#34;&gt;// (ここには、その関数・変数・定数の、実装例を記述します。)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// (とくに必要がないと判断した場合、項目を削除してください。)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: 1.9, 2.9, 3.0, 3.1, 3.2, 3.3&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: 3.4.6, 4.2.4, 4.3.6, 4.4.7, 4.5.3, 4.6.3, 4.7.2, 4.8.1&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++11 mode&lt;/a&gt;: 4.3.6, 4.4.7, 4.5.3, 4.6.3, 4.7.2, 4.8.1&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: 10.1, 11.0, 11.1, 12.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: 2003, 2005, 2008, 2010, 2012&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(ここには、その機能が存在する言語のバージョンと、確認がとれたコンパイラとそのバージョンを記述します。)&lt;br /&gt;
(これらの項目を削除した場合、C++03のあらゆる環境で使用できることを意味します。)
(確認のテストできないときは、??を記述してください。)&lt;/p&gt;
&lt;h3&gt;備考&lt;/h3&gt;
&lt;p&gt;(処理系ごとに存在するバグや注意事項を記述します。とくにない場合は、項目を削除してください。)&lt;/p&gt;
&lt;h2&gt;関連項目&lt;/h2&gt;
&lt;p&gt;(ここには、その機能と関連のあるcpprefjpサイト内の項目へのリンクを記述します。とくに必要がないと判断した場合、項目を削除してください。)&lt;/p&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;p&gt;(ここには、その関数・変数・定数を理解するにあたっての参考資料や、関連する機能へのリンクを記述します。とくに必要がないと判断した場合、項目を削除してください。)&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>page_title ((1行目の見出し1はページのタイトルです。修飾なしで記載してください) -- 言語機能以外の雛形に、関連項目が記載されていなかった</title>
      <link href="https://cpprefjp.github.io/editors_doc/header_template_page.html"/>
      <id>101ec5c4bbf2a5763488d224fb4b961ebf9bb562:editors_doc/header_template_page.md</id>
      <updated>2017-12-27T13:37:40+09:00</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;header_name&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;page_title ((1行目の見出し1はページのタイトルです。修飾なしで記載してください)&lt;/span&gt;&lt;span class=&#34;cpp cpp17&#34; title=&#34;C++17で追加&#34;&gt;(C++17)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;(&lt;a href=&#34;https://cpprefjp.github.io/editors_doc/start_editing.html&#34;&gt;cpprefjpを編集するには&lt;/a&gt; および &lt;a href=&#34;https://cpprefjp.github.io/editors_doc/specialized.html&#34;&gt;cpprefjp特有の拡張構文&lt;/a&gt; を先に読んで下さい。)&lt;/p&gt;
&lt;p&gt;(
  サンプルコードは文章中のどの部分で書いても大丈夫です。閲覧者の理解を助けるために必要だと感じたところで入れてください。
  その際拡張構文である&lt;code&gt;example&lt;/code&gt;タグをルールに従って付け、コンパイル・実行可能にすることを検討してください。
)&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- `[meta header]`は、所属ヘッダを表すメタ情報 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- `[meta cpp]`は、機能が追加・非推奨・削除されたバージョンを表すメタ情報。改行して複数指定ができる。 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp11[meta cpp]` : C++11で追加された機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp14[meta cpp]` : C++14で追加された機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp17[meta cpp]` : C++17で追加された機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp20[meta cpp]` : C++20で追加された機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp11deprecated[meta cpp]` : C++11で非推奨になった機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp14deprecated[meta cpp]` : C++14で非推奨になった機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp14removed[meta cpp]` : C++14で削除された機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp17deprecated[meta cpp]` : C++17で非推奨になった機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp17removed[meta cpp]` : C++17で削除された機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp20deprecated[meta cpp]` : C++20で非推奨になった機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp20removed[meta cpp]` : C++20で削除された機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;(ここには、このヘッダファイル(ライブラリ)の概要を記述します。必須事項です。)&lt;/p&gt;
&lt;p&gt;(必要な項目を省略する場合には、「(執筆中)」と書いておいてください。)&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: 1.9, 2.9, 3.0, 3.1, 3.2, 3.3&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: 3.4.6, 4.2.4, 4.3.6, 4.4.7, 4.5.3, 4.6.3, 4.7.2, 4.8.1&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++11 mode&lt;/a&gt;: 4.3.6, 4.4.7, 4.5.3, 4.6.3, 4.7.2, 4.8.1&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: 10.1, 11.0, 11.1, 12.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: 2003, 2005, 2008, 2010, 2012&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(ここには、そのヘッダファイルが存在する言語のバージョンと、確認がとれたコンパイラとそのバージョンを記述します。)&lt;br /&gt;
(これらの項目を削除した場合、C++03のあらゆる環境で使用できることを意味します。)&lt;/p&gt;
&lt;h2&gt;関連項目&lt;/h2&gt;
&lt;p&gt;(ここには、その機能と関連のあるcpprefjpサイト内の項目へのリンクを記述します。とくに必要がないと判断した場合、項目を削除してください。)&lt;/p&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;p&gt;(ここには、その関数・変数・定数を理解するにあたっての参考資料や、関連する機能へのリンクを記述します。とくに必要がないと判断した場合、項目を削除してください。)&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>page_title ((1行目の見出し1はページのタイトルです。修飾なしで記載してください) -- 言語機能以外の雛形に、関連項目が記載されていなかった</title>
      <link href="https://cpprefjp.github.io/editors_doc/type-type_template_page.html"/>
      <id>101ec5c4bbf2a5763488d224fb4b961ebf9bb562:editors_doc/type-type_template_page.md</id>
      <updated>2017-12-27T13:37:40+09:00</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;type-alias&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;header_name&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;&lt;span class=&#34;class&#34; title=&#34;class class_name&#34;&gt;class_name::&lt;/span&gt;&lt;span class=&#34;token&#34;&gt;page_title ((1行目の見出し1はページのタイトルです。修飾なしで記載してください)&lt;/span&gt;&lt;span class=&#34;cpp cpp17&#34; title=&#34;C++17で追加&#34;&gt;(C++17)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;(&lt;a href=&#34;https://cpprefjp.github.io/editors_doc/start_editing.html&#34;&gt;cpprefjpを編集するには&lt;/a&gt; および &lt;a href=&#34;https://cpprefjp.github.io/editors_doc/specialized.html&#34;&gt;cpprefjp特有の拡張構文&lt;/a&gt; を先に読んで下さい。)&lt;/p&gt;
&lt;p&gt;(
  サンプルコードは文章中のどの部分で書いても大丈夫です。閲覧者の理解を助けるために必要だと感じたところで入れてください。
  その際拡張構文である&lt;code&gt;example&lt;/code&gt;タグをルールに従って付け、コンパイル・実行可能にすることを検討してください。
)&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- `[meta header]`は、所属ヘッダを表すメタ情報 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- `[meta id-type]`は、識別子の種別を表すメタ情報。class, class template, function, function template, enum, variable, type-alias, macro, namespace --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- `[meta namespace]`は、所属する名前空間を表すメタ情報。マクロを考慮して省略可。名前空間の区切りは`::` --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- `[meta class]`は、所属するクラスを表すメタ情報。クラスページでは省略する。structとは書けない --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- `[meta cpp]`は、機能が追加・非推奨・削除されたバージョンを表すメタ情報。改行して複数指定ができる。 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp11[meta cpp]` : C++11で追加された機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp14[meta cpp]` : C++14で追加された機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp17[meta cpp]` : C++17で追加された機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp20[meta cpp]` : C++20で追加された機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp11deprecated[meta cpp]` : C++11で非推奨になった機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp14deprecated[meta cpp]` : C++14で非推奨になった機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp14removed[meta cpp]` : C++14で削除された機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp17deprecated[meta cpp]` : C++17で非推奨になった機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp17removed[meta cpp]` : C++17で削除された機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp20deprecated[meta cpp]` : C++20で非推奨になった機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--    `cpp20removed[meta cpp]` : C++20で削除された機能 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;origin_type&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;new_type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;(ここには、型の概要を記述します。必須事項です。)&lt;/p&gt;
&lt;p&gt;(必要な項目を省略する場合には、「(執筆中)」と書いておいてください。)&lt;/p&gt;
&lt;p&gt;これは、メンバ型等の、型の別名定義を解説するページの雛形です。&lt;/p&gt;
&lt;p&gt;ページ名の先頭に「&lt;code&gt;type-&lt;/code&gt;」を付けることにより、cpprefjpサイト左部のサイドバーに並ぶページの順番を制御できます。その接頭辞を付けた場合には、型のページは並びの最後に来ます(関数、演算子、型の順番)。&lt;/p&gt;
&lt;h2&gt;備考&lt;/h2&gt;
&lt;p&gt;(用途、注意事項、バージョンによる変更の経緯などを書いてください。省略可能です)&lt;/p&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;c1&#34;&gt;// (ここには、関数・変数・定数を解説するための、サンプルコードを記述します。省略可能です)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// (インクルードとmain()関数を含む、実行可能なサンプルコードを記述してください。そのようなコードブロックにはexampleタグを付けます。)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: 1.9, 2.9, 3.0, 3.1, 3.2, 3.3&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: 3.4.6, 4.2.4, 4.3.6, 4.4.7, 4.5.3, 4.6.3, 4.7.2, 4.8.1&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++11 mode&lt;/a&gt;: 4.3.6, 4.4.7, 4.5.3, 4.6.3, 4.7.2, 4.8.1&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: 10.1, 11.0, 11.1, 12.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: 2003, 2005, 2008, 2010, 2012&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(ここには、その機能が存在する言語のバージョンと、確認がとれたコンパイラとそのバージョンを記述します。)&lt;br /&gt;
(これらの項目を削除した場合、C++03のあらゆる環境で使用できることを意味します。)
(確認のテストできないときは、??を記述してください。)&lt;/p&gt;
&lt;h3&gt;備考&lt;/h3&gt;
&lt;p&gt;(処理系ごとに存在するバグや注意事項を記述します。とくにない場合は、項目を削除してください。)&lt;/p&gt;
&lt;h2&gt;関連項目&lt;/h2&gt;
&lt;p&gt;(ここには、その機能と関連のあるcpprefjpサイト内の項目へのリンクを記述します。とくに必要がないと判断した場合、項目を削除してください。)&lt;/p&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;p&gt;(ここには、その関数・変数・定数を理解するにあたっての参考資料や、関連する機能へのリンクを記述します。とくに必要がないと判断した場合、項目を削除してください。)&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ページファイル名の付け方 -- 標準ライブラリに、アンダースコアではじまるリテラル演算子はなかった</title>
      <link href="https://cpprefjp.github.io/editors_doc/page_names.html"/>
      <id>0eb714965fe127c959ea4f0ef56b27f0e532314c:editors_doc/page_names.md</id>
      <updated>2017-12-27T12:56:33+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;ページファイル名の付け方&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;cpprefjpサイトでは、ページファイル名の付け方について、いくつかの共通ルールがあります。&lt;/p&gt;
&lt;h2&gt;基本ルール&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;機能名をページファイル名とする&lt;/li&gt;
&lt;li&gt;マクロは小文字とする&lt;/li&gt;
&lt;li&gt;大文字 + 区切り文字 + 拡張子で構成される名前のファイルは、MarkdownからHTMLへの変換の際に無視される&lt;ul&gt;
&lt;li&gt;README.mdなど&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;演算子のファイル名&lt;/h2&gt;
&lt;p&gt;便宜的に、コンストラクタやデストラクタのような特殊メンバ関数も演算子という扱いにしている。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;演算子&lt;/th&gt;
&lt;th&gt;演算子名&lt;/th&gt;
&lt;th&gt;ファイル名&lt;/th&gt;
&lt;th&gt;備考&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;コンストラクタ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_constructor&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;クラス名をファイル名にはしない&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;デストラクタ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_destructor&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ファイル名に &lt;code&gt;~&lt;/code&gt; (チルダ) が含まれないようにする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;クラステンプレートの推論補助&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_deduction_guide&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;代入演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator[ ]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;添字演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_at&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;関数呼び出し演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_call&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator*&lt;/code&gt; (単項)&lt;/td&gt;
&lt;td&gt;間接参照演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_deref&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;dereferenceの略&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator-&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ポインタアクセス演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_arrow&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator+=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;加算の複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_plus_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator-=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;減算の複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_minus_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator*=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;乗算の複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_multiply_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator/=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;除算の複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_divide_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator%=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;剰余の複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_modulo_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;lt;&amp;lt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;左ビットシフトの複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_left_shift_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;gt;&amp;gt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;右ビットシフトの複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_right_shift_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;amp;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット論理積の複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_and_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator|=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット論理和の複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_or_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator^=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット排他的論理和の複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_xor_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator++&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;インクリメント&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_increment&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;前置・後置は同じページ内で解説する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator--&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;デクリメント&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_decrement&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;前置・後置は同じページ内で解説する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator+&lt;/code&gt; (単項)&lt;/td&gt;
&lt;td&gt;単項プラス演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_unary_plus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator-&lt;/code&gt; (単項)&lt;/td&gt;
&lt;td&gt;単項マイナス演算子 (符号反転)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_unary_minus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator!&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;論理反転演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_not&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator~&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット反転演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_flip&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator==&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;等値比較演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_equal&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator!=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;非等値比較演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_not_equal&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;lt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;小なり演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_less&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;大なり演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_greater&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;lt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;以下演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_less_equal&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;gt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;以上演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_greater_equal&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator+&lt;/code&gt; (二項)&lt;/td&gt;
&lt;td&gt;加算演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_plus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator-&lt;/code&gt; (二項)&lt;/td&gt;
&lt;td&gt;減算演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_minus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator*&lt;/code&gt; (二項)&lt;/td&gt;
&lt;td&gt;乗算演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_multiply&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator/&lt;/code&gt; (二項)&lt;/td&gt;
&lt;td&gt;除算演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_divide&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator%&lt;/code&gt; (二項)&lt;/td&gt;
&lt;td&gt;剰余演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_modulo&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;amp;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット論理積演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_and&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator|&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット論理和演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_or&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator^&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット排他的論理和演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_xor&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;amp;&amp;amp;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;論理積演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_logical_and&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator||&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;論理和演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_logical_or&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;lt;&amp;lt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット左シフト演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_left_shift&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット右シフト演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_right_shift&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;lt;&amp;lt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;出力ストリーム演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_ostream&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビットシフトと意味論が異なるため、別ページとしている&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;入力ストリーム演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_istream&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビットシフトと意味論が異なるため、別ページとしている&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;C++にはこの表に含まれない演算子もいくつかあるが、ここでは標準ライブラリでオーバーロードされ、本サイトが掲載している演算子のみを記載している。&lt;/p&gt;
&lt;p&gt;この表に含まれない演算子として、以下のようなものもある：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;型変換演算子&lt;ul&gt;
&lt;li&gt;&lt;code&gt;operator int&lt;/code&gt;のような&lt;code&gt;int&lt;/code&gt;への型変換演算子は、&lt;code&gt;op_int&lt;/code&gt;のようなファイル名とする&lt;/li&gt;
&lt;li&gt;型の別名が使用される場合もあるが、&lt;code&gt;operator int_type&lt;/code&gt;型変換演算子の場合は、&lt;code&gt;op_int_type&lt;/code&gt;をファイル名とする&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;リテラル演算子&lt;ul&gt;
&lt;li&gt;&lt;code&gt;operator &#34;&#34;i&lt;/code&gt;のような&lt;code&gt;i&lt;/code&gt;サフィックスのリテラル演算子は、&lt;code&gt;op_i&lt;/code&gt;のようなファイル名とする&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;同名のメンバ関数と非メンバ関数がある場合&lt;/h2&gt;
&lt;p&gt;非メンバ関数側のページファイル名末尾に&lt;code&gt;_free&lt;/code&gt;を付ける。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;free&lt;/code&gt;は「非メンバ関数 (non member function)」の通称である「フリー関数 (free function)」からきている。これを採用した理由は以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;_non_member_function&lt;/code&gt;は長いため、短くしたい&lt;/li&gt;
&lt;li&gt;&lt;code&gt;member&lt;/code&gt;は男性器を意味するため、&lt;code&gt;function&lt;/code&gt;は省略できない&lt;/li&gt;
&lt;li&gt;規格用語にはないが、ページファイル名を短くするために便宜上&lt;code&gt;free&lt;/code&gt;を採用する&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;その他、例外的なページファイル名&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/cstdlib/exit_.html&#34;&gt;std::_Exit()&lt;/a&gt;&lt;/code&gt;は、ページファイル名を先頭アンダースコアしたところ、Chromeブラウザで404 Page Not Foundとなったため、回避策として末尾にアンダースコアを付けている&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ページファイル名の付け方 -- ページファイル名の付け方 : 型変換演算子とリテラル演算子のルールを記載</title>
      <link href="https://cpprefjp.github.io/editors_doc/page_names.html"/>
      <id>740ba0b4630fedff3f58f1b42cd639eb9ef41de1:editors_doc/page_names.md</id>
      <updated>2017-12-27T12:19:40+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;ページファイル名の付け方&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;cpprefjpサイトでは、ページファイル名の付け方について、いくつかの共通ルールがあります。&lt;/p&gt;
&lt;h2&gt;基本ルール&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;機能名をページファイル名とする&lt;/li&gt;
&lt;li&gt;マクロは小文字とする&lt;/li&gt;
&lt;li&gt;大文字 + 区切り文字 + 拡張子で構成される名前のファイルは、MarkdownからHTMLへの変換の際に無視される&lt;ul&gt;
&lt;li&gt;README.mdなど&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;演算子のファイル名&lt;/h2&gt;
&lt;p&gt;便宜的に、コンストラクタやデストラクタのような特殊メンバ関数も演算子という扱いにしている。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;演算子&lt;/th&gt;
&lt;th&gt;演算子名&lt;/th&gt;
&lt;th&gt;ファイル名&lt;/th&gt;
&lt;th&gt;備考&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;コンストラクタ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_constructor&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;クラス名をファイル名にはしない&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;デストラクタ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_destructor&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ファイル名に &lt;code&gt;~&lt;/code&gt; (チルダ) が含まれないようにする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;クラステンプレートの推論補助&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_deduction_guide&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;代入演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator[ ]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;添字演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_at&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;関数呼び出し演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_call&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator*&lt;/code&gt; (単項)&lt;/td&gt;
&lt;td&gt;間接参照演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_deref&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;dereferenceの略&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator-&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ポインタアクセス演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_arrow&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator+=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;加算の複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_plus_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator-=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;減算の複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_minus_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator*=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;乗算の複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_multiply_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator/=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;除算の複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_divide_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator%=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;剰余の複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_modulo_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;lt;&amp;lt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;左ビットシフトの複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_left_shift_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;gt;&amp;gt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;右ビットシフトの複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_right_shift_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;amp;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット論理積の複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_and_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator|=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット論理和の複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_or_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator^=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット排他的論理和の複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_xor_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator++&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;インクリメント&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_increment&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;前置・後置は同じページ内で解説する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator--&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;デクリメント&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_decrement&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;前置・後置は同じページ内で解説する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator+&lt;/code&gt; (単項)&lt;/td&gt;
&lt;td&gt;単項プラス演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_unary_plus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator-&lt;/code&gt; (単項)&lt;/td&gt;
&lt;td&gt;単項マイナス演算子 (符号反転)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_unary_minus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator!&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;論理反転演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_not&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator~&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット反転演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_flip&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator==&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;等値比較演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_equal&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator!=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;非等値比較演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_not_equal&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;lt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;小なり演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_less&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;大なり演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_greater&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;lt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;以下演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_less_equal&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;gt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;以上演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_greater_equal&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator+&lt;/code&gt; (二項)&lt;/td&gt;
&lt;td&gt;加算演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_plus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator-&lt;/code&gt; (二項)&lt;/td&gt;
&lt;td&gt;減算演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_minus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator*&lt;/code&gt; (二項)&lt;/td&gt;
&lt;td&gt;乗算演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_multiply&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator/&lt;/code&gt; (二項)&lt;/td&gt;
&lt;td&gt;除算演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_divide&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator%&lt;/code&gt; (二項)&lt;/td&gt;
&lt;td&gt;剰余演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_modulo&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;amp;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット論理積演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_and&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator|&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット論理和演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_or&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator^&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット排他的論理和演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_xor&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;amp;&amp;amp;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;論理積演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_logical_and&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator||&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;論理和演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_logical_or&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;lt;&amp;lt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット左シフト演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_left_shift&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット右シフト演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_right_shift&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;lt;&amp;lt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;出力ストリーム演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_ostream&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビットシフトと意味論が異なるため、別ページとしている&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;入力ストリーム演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_istream&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビットシフトと意味論が異なるため、別ページとしている&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;C++にはこの表に含まれない演算子もいくつかあるが、ここでは標準ライブラリでオーバーロードされ、本サイトが掲載している演算子のみを記載している。&lt;/p&gt;
&lt;p&gt;この表に含まれない演算子として、以下のようなものもある：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;型変換演算子&lt;ul&gt;
&lt;li&gt;&lt;code&gt;operator int&lt;/code&gt;のような&lt;code&gt;int&lt;/code&gt;への型変換演算子は、&lt;code&gt;op_int&lt;/code&gt;のようなファイル名とする&lt;/li&gt;
&lt;li&gt;型の別名が使用される場合もあるが、&lt;code&gt;operator int_type&lt;/code&gt;型変換演算子の場合は、&lt;code&gt;op_int_type&lt;/code&gt;をファイル名とする&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;リテラル演算子&lt;ul&gt;
&lt;li&gt;&lt;code&gt;operator &#34;&#34;_i&lt;/code&gt;のような&lt;code&gt;_i&lt;/code&gt;サフィックスのリテラル演算子は、&lt;code&gt;op_i&lt;/code&gt;のようなファイル名とする&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;同名のメンバ関数と非メンバ関数がある場合&lt;/h2&gt;
&lt;p&gt;非メンバ関数側のページファイル名末尾に&lt;code&gt;_free&lt;/code&gt;を付ける。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;free&lt;/code&gt;は「非メンバ関数 (non member function)」の通称である「フリー関数 (free function)」からきている。これを採用した理由は以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;_non_member_function&lt;/code&gt;は長いため、短くしたい&lt;/li&gt;
&lt;li&gt;&lt;code&gt;member&lt;/code&gt;は男性器を意味するため、&lt;code&gt;function&lt;/code&gt;は省略できない&lt;/li&gt;
&lt;li&gt;規格用語にはないが、ページファイル名を短くするために便宜上&lt;code&gt;free&lt;/code&gt;を採用する&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;その他、例外的なページファイル名&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/cstdlib/exit_.html&#34;&gt;std::_Exit()&lt;/a&gt;&lt;/code&gt;は、ページファイル名を先頭アンダースコアしたところ、Chromeブラウザで404 Page Not Foundとなったため、回避策として末尾にアンダースコアを付けている&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ページファイル名の付け方 -- s/Not Page Found/Page Not Found/</title>
      <link href="https://cpprefjp.github.io/editors_doc/page_names.html"/>
      <id>32c8b3b705218de216f081358f90468a849ece6e:editors_doc/page_names.md</id>
      <updated>2017-12-27T11:48:16+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;ページファイル名の付け方&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;cpprefjpサイトでは、ページファイル名の付け方について、いくつかの共通ルールがあります。&lt;/p&gt;
&lt;h2&gt;基本ルール&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;機能名をページファイル名とする&lt;/li&gt;
&lt;li&gt;マクロは小文字とする&lt;/li&gt;
&lt;li&gt;大文字 + 区切り文字 + 拡張子で構成される名前のファイルは、MarkdownからHTMLへの変換の際に無視される&lt;ul&gt;
&lt;li&gt;README.mdなど&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;演算子のファイル名&lt;/h2&gt;
&lt;p&gt;便宜的に、コンストラクタやデストラクタのような特殊メンバ関数も演算子という扱いにしている。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;演算子&lt;/th&gt;
&lt;th&gt;演算子名&lt;/th&gt;
&lt;th&gt;ファイル名&lt;/th&gt;
&lt;th&gt;備考&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;コンストラクタ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_constructor&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;クラス名をファイル名にはしない&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;デストラクタ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_destructor&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ファイル名に &lt;code&gt;~&lt;/code&gt; (チルダ) が含まれないようにする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;クラステンプレートの推論補助&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_deduction_guide&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;代入演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator[ ]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;添字演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_at&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;関数呼び出し演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_call&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator*&lt;/code&gt; (単項)&lt;/td&gt;
&lt;td&gt;間接参照演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_deref&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;dereferenceの略&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator-&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ポインタアクセス演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_arrow&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator+=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;加算の複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_plus_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator-=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;減算の複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_minus_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator*=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;乗算の複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_multiply_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator/=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;除算の複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_divide_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator%=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;剰余の複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_modulo_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;lt;&amp;lt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;左ビットシフトの複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_left_shift_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;gt;&amp;gt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;右ビットシフトの複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_right_shift_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;amp;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット論理積の複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_and_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator|=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット論理和の複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_or_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator^=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット排他的論理和の複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_xor_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator++&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;インクリメント&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_increment&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;前置・後置は同じページ内で解説する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator--&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;デクリメント&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_decrement&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;前置・後置は同じページ内で解説する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator+&lt;/code&gt; (単項)&lt;/td&gt;
&lt;td&gt;単項プラス演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_unary_plus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator-&lt;/code&gt; (単項)&lt;/td&gt;
&lt;td&gt;単項マイナス演算子 (符号反転)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_unary_minus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator!&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;論理反転演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_not&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator~&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット反転演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_flip&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator==&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;等値比較演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_equal&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator!=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;非等値比較演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_not_equal&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;lt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;小なり演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_less&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;大なり演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_greater&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;lt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;以下演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_less_equal&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;gt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;以上演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_greater_equal&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator+&lt;/code&gt; (二項)&lt;/td&gt;
&lt;td&gt;加算演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_plus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator-&lt;/code&gt; (二項)&lt;/td&gt;
&lt;td&gt;減算演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_minus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator*&lt;/code&gt; (二項)&lt;/td&gt;
&lt;td&gt;乗算演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_multiply&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator/&lt;/code&gt; (二項)&lt;/td&gt;
&lt;td&gt;除算演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_divide&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator%&lt;/code&gt; (二項)&lt;/td&gt;
&lt;td&gt;剰余演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_modulo&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;amp;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット論理積演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_and&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator|&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット論理和演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_or&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator^&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット排他的論理和演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_xor&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;amp;&amp;amp;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;論理積演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_logical_and&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator||&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;論理和演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_logical_or&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;lt;&amp;lt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット左シフト演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_left_shift&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット右シフト演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_right_shift&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;lt;&amp;lt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;出力ストリーム演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_ostream&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビットシフトと意味論が異なるため、別ページとしている&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;入力ストリーム演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_istream&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビットシフトと意味論が異なるため、別ページとしている&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;C++にはこの表に含まれない演算子もいくつかあるが、ここでは標準ライブラリでオーバーロードされ、本サイトが掲載している演算子のみを記載している。&lt;/p&gt;
&lt;h2&gt;同名のメンバ関数と非メンバ関数がある場合&lt;/h2&gt;
&lt;p&gt;非メンバ関数側のページファイル名末尾に&lt;code&gt;_free&lt;/code&gt;を付ける。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;free&lt;/code&gt;は「非メンバ関数 (non member function)」の通称である「フリー関数 (free function)」からきている。これを採用した理由は以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;_non_member_function&lt;/code&gt;は長いため、短くしたい&lt;/li&gt;
&lt;li&gt;&lt;code&gt;member&lt;/code&gt;は男性器を意味するため、&lt;code&gt;function&lt;/code&gt;は省略できない&lt;/li&gt;
&lt;li&gt;規格用語にはないが、ページファイル名を短くするために便宜上&lt;code&gt;free&lt;/code&gt;を採用する&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;その他、例外的なページファイル名&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/cstdlib/exit_.html&#34;&gt;std::_Exit()&lt;/a&gt;&lt;/code&gt;は、ページファイル名を先頭アンダースコアしたところ、Chromeブラウザで404 Page Not Foundとなったため、回避策として末尾にアンダースコアを付けている&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ページファイル名の付け方 -- ページファイル名の付け方 : 表の表示が崩れていた</title>
      <link href="https://cpprefjp.github.io/editors_doc/page_names.html"/>
      <id>10342c228bc974e17cfc95e08e8739e4dc2136cf:editors_doc/page_names.md</id>
      <updated>2017-12-27T11:46:06+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;ページファイル名の付け方&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;cpprefjpサイトでは、ページファイル名の付け方について、いくつかの共通ルールがあります。&lt;/p&gt;
&lt;h2&gt;基本ルール&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;機能名をページファイル名とする&lt;/li&gt;
&lt;li&gt;マクロは小文字とする&lt;/li&gt;
&lt;li&gt;大文字 + 区切り文字 + 拡張子で構成される名前のファイルは、MarkdownからHTMLへの変換の際に無視される&lt;ul&gt;
&lt;li&gt;README.mdなど&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;演算子のファイル名&lt;/h2&gt;
&lt;p&gt;便宜的に、コンストラクタやデストラクタのような特殊メンバ関数も演算子という扱いにしている。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;演算子&lt;/th&gt;
&lt;th&gt;演算子名&lt;/th&gt;
&lt;th&gt;ファイル名&lt;/th&gt;
&lt;th&gt;備考&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;コンストラクタ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_constructor&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;クラス名をファイル名にはしない&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;デストラクタ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_destructor&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ファイル名に &lt;code&gt;~&lt;/code&gt; (チルダ) が含まれないようにする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;クラステンプレートの推論補助&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_deduction_guide&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;代入演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator[ ]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;添字演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_at&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;関数呼び出し演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_call&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator*&lt;/code&gt; (単項)&lt;/td&gt;
&lt;td&gt;間接参照演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_deref&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;dereferenceの略&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator-&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ポインタアクセス演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_arrow&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator+=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;加算の複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_plus_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator-=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;減算の複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_minus_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator*=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;乗算の複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_multiply_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator/=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;除算の複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_divide_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator%=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;剰余の複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_modulo_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;lt;&amp;lt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;左ビットシフトの複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_left_shift_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;gt;&amp;gt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;右ビットシフトの複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_right_shift_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;amp;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット論理積の複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_and_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator|=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット論理和の複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_or_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator^=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット排他的論理和の複合代入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_xor_assign&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator++&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;インクリメント&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_increment&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;前置・後置は同じページ内で解説する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator--&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;デクリメント&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_decrement&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;前置・後置は同じページ内で解説する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator+&lt;/code&gt; (単項)&lt;/td&gt;
&lt;td&gt;単項プラス演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_unary_plus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator-&lt;/code&gt; (単項)&lt;/td&gt;
&lt;td&gt;単項マイナス演算子 (符号反転)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_unary_minus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator!&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;論理反転演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_not&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator~&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット反転演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_flip&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator==&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;等値比較演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_equal&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator!=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;非等値比較演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_not_equal&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;lt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;小なり演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_less&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;大なり演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_greater&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;lt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;以下演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_less_equal&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;gt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;以上演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_greater_equal&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator+&lt;/code&gt; (二項)&lt;/td&gt;
&lt;td&gt;加算演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_plus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator-&lt;/code&gt; (二項)&lt;/td&gt;
&lt;td&gt;減算演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_minus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator*&lt;/code&gt; (二項)&lt;/td&gt;
&lt;td&gt;乗算演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_multiply&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator/&lt;/code&gt; (二項)&lt;/td&gt;
&lt;td&gt;除算演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_divide&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator%&lt;/code&gt; (二項)&lt;/td&gt;
&lt;td&gt;剰余演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_modulo&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;amp;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット論理積演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_and&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator|&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット論理和演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_or&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator^&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット排他的論理和演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_xor&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;amp;&amp;amp;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;論理積演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_logical_and&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator||&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;論理和演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_logical_or&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;lt;&amp;lt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット左シフト演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_left_shift&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット右シフト演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_right_shift&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;lt;&amp;lt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;出力ストリーム演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_ostream&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビットシフトと意味論が異なるため、別ページとしている&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;入力ストリーム演算子&lt;/td&gt;
&lt;td&gt;&lt;code&gt;op_istream&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビットシフトと意味論が異なるため、別ページとしている&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;C++にはこの表に含まれない演算子もいくつかあるが、ここでは標準ライブラリでオーバーロードされ、本サイトが掲載している演算子のみを記載している。&lt;/p&gt;
&lt;h2&gt;同名のメンバ関数と非メンバ関数がある場合&lt;/h2&gt;
&lt;p&gt;非メンバ関数側のページファイル名末尾に&lt;code&gt;_free&lt;/code&gt;を付ける。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;free&lt;/code&gt;は「非メンバ関数 (non member function)」の通称である「フリー関数 (free function)」からきている。これを採用した理由は以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;_non_member_function&lt;/code&gt;は長いため、短くしたい&lt;/li&gt;
&lt;li&gt;&lt;code&gt;member&lt;/code&gt;は男性器を意味するため、&lt;code&gt;function&lt;/code&gt;は省略できない&lt;/li&gt;
&lt;li&gt;規格用語にはないが、ページファイル名を短くするために便宜上&lt;code&gt;free&lt;/code&gt;を採用する&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;その他、例外的なページファイル名&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/cstdlib/exit_.html&#34;&gt;std::_Exit()&lt;/a&gt;&lt;/code&gt;は、ページファイル名を先頭アンダースコアしたところ、Chromeブラウザで404 Not Page Foundとなったため、回避策として末尾にアンダースコアを付けている&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
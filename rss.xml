<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2023-09-08T05:27:37.588061</updated>
  <id>ce189815-f1a4-4988-b5d4-c82351838fd8</id>

  
    <entry>
      <title>common_view -- view_interfaceを継承しているクラスにcbegin/cendのリンク追加</title>
      <link href="https://cpprefjp.github.io/reference/ranges/common_view.html"/>
      <id>dbc7c10006eeae7a56fd011cdb1ee476a9a4cc17:reference/ranges/common_view.md</id>
      <updated>2023-09-08T14:23:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/common_view.md b/reference/ranges/common_view.md
index a0aad31c0..6c335e91f 100644
--- a/reference/ranges/common_view.md
+++ b/reference/ranges/common_view.md
@@ -69,6 +69,8 @@ namespace std::ranges {
 | [`front`](view_interface/front.md)           | 先頭要素への参照を取得する        | C++20          |
 | [`back`](view_interface/back.md)             | 末尾要素への参照を取得する        | C++20          |
 | [`operator[]`](view_interface/op_at.md)      | 要素へアクセスする                | C++20          |
+| [`cbegin`](view_interface/cbegin.md)         | 定数イテレータを取得する             | C++23          |
+| [`cend`](view_interface/cend.md)             | 定数イテレータ（番兵）を取得する      | C++23          |
 
 ## 推論補助
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>drop_view -- view_interfaceを継承しているクラスにcbegin/cendのリンク追加</title>
      <link href="https://cpprefjp.github.io/reference/ranges/drop_view.html"/>
      <id>dbc7c10006eeae7a56fd011cdb1ee476a9a4cc17:reference/ranges/drop_view.md</id>
      <updated>2023-09-08T14:23:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/drop_view.md b/reference/ranges/drop_view.md
index 6a5665d37..11516f89f 100644
--- a/reference/ranges/drop_view.md
+++ b/reference/ranges/drop_view.md
@@ -71,6 +71,8 @@ namespace std::ranges {
 | [`front`](view_interface/front.md)           | 先頭要素への参照を取得する        | C++20          |
 | [`back`](view_interface/back.md)             | 末尾要素への参照を取得する        | C++20          |
 | [`operator[]`](view_interface/op_at.md)      | 要素へアクセスする                | C++20          |
+| [`cbegin`](view_interface/cbegin.md)         | 定数イテレータを取得する             | C++23          |
+| [`cend`](view_interface/cend.md)             | 定数イテレータ（番兵）を取得する      | C++23          |
 
 ## 推論補助
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>drop_while_view -- view_interfaceを継承しているクラスにcbegin/cendのリンク追加</title>
      <link href="https://cpprefjp.github.io/reference/ranges/drop_while_view.html"/>
      <id>dbc7c10006eeae7a56fd011cdb1ee476a9a4cc17:reference/ranges/drop_while_view.md</id>
      <updated>2023-09-08T14:23:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/drop_while_view.md b/reference/ranges/drop_while_view.md
index 00c930da2..399cc35e3 100644
--- a/reference/ranges/drop_while_view.md
+++ b/reference/ranges/drop_while_view.md
@@ -65,6 +65,8 @@ namespace std::ranges {
 | [`front`](view_interface/front.md)           | 先頭要素への参照を取得する        | C++20          |
 | [`back`](view_interface/back.md)             | 末尾要素への参照を取得する        | C++20          |
 | [`operator[]`](view_interface/op_at.md)      | 要素へアクセスする                | C++20          |
+| [`cbegin`](view_interface/cbegin.md)         | 定数イテレータを取得する             | C++23          |
+| [`cend`](view_interface/cend.md)             | 定数イテレータ（番兵）を取得する      | C++23          |
 
 ## 推論補助
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>elements_view -- view_interfaceを継承しているクラスにcbegin/cendのリンク追加</title>
      <link href="https://cpprefjp.github.io/reference/ranges/elements_view.html"/>
      <id>dbc7c10006eeae7a56fd011cdb1ee476a9a4cc17:reference/ranges/elements_view.md</id>
      <updated>2023-09-08T14:23:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/elements_view.md b/reference/ranges/elements_view.md
index 934b911e4..fef43e2d7 100644
--- a/reference/ranges/elements_view.md
+++ b/reference/ranges/elements_view.md
@@ -114,6 +114,8 @@ concept has-tuple-element =
 | [`front`](view_interface/front.md)           | 先頭要素への参照を取得する        | C++20          |
 | [`back`](view_interface/back.md)             | 末尾要素への参照を取得する        | C++20          |
 | [`operator[]`](view_interface/op_at.md)      | 要素へアクセスする                | C++20          |
+| [`cbegin`](view_interface/cbegin.md)         | 定数イテレータを取得する             | C++23          |
+| [`cend`](view_interface/cend.md)             | 定数イテレータ（番兵）を取得する      | C++23          |
 
 ## 推論補助
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>filter_view -- view_interfaceを継承しているクラスにcbegin/cendのリンク追加</title>
      <link href="https://cpprefjp.github.io/reference/ranges/filter_view.html"/>
      <id>dbc7c10006eeae7a56fd011cdb1ee476a9a4cc17:reference/ranges/filter_view.md</id>
      <updated>2023-09-08T14:23:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/filter_view.md b/reference/ranges/filter_view.md
index d88c5e3f4..215673df6 100644
--- a/reference/ranges/filter_view.md
+++ b/reference/ranges/filter_view.md
@@ -72,6 +72,8 @@ namespace std::ranges {
 | [`operator bool`](view_interface/op_bool.md) | Rangeが空でないかどうかを判定する | C++20          |
 | [`front`](view_interface/front.md)           | 先頭要素への参照を取得する       | C++20          |
 | [`back`](view_interface/back.md)             | 末尾要素への参照を取得する       | C++20          |
+| [`cbegin`](view_interface/cbegin.md)         | 定数イテレータを取得する             | C++23          |
+| [`cend`](view_interface/cend.md)             | 定数イテレータ（番兵）を取得する      | C++23          |
 
 ## 推論補助
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>join_view -- view_interfaceを継承しているクラスにcbegin/cendのリンク追加</title>
      <link href="https://cpprefjp.github.io/reference/ranges/join_view.html"/>
      <id>dbc7c10006eeae7a56fd011cdb1ee476a9a4cc17:reference/ranges/join_view.md</id>
      <updated>2023-09-08T14:23:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/join_view.md b/reference/ranges/join_view.md
index 7e109e570..2d0654b30 100644
--- a/reference/ranges/join_view.md
+++ b/reference/ranges/join_view.md
@@ -71,6 +71,8 @@ namespace std::ranges {
 | [`operator bool`](view_interface/op_bool.md) | Rangeが空でないかどうかを判定する | C++20          |
 | [`front`](view_interface/front.md)           | 先頭要素への参照を取得する        | C++20          |
 | [`back`](view_interface/back.md)             | 末尾要素への参照を取得する        | C++20          |
+| [`cbegin`](view_interface/cbegin.md)         | 定数イテレータを取得する             | C++23          |
+| [`cend`](view_interface/cend.md)             | 定数イテレータ（番兵）を取得する      | C++23          |
 
 ## 推論補助
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>lazy_split_view -- view_interfaceを継承しているクラスにcbegin/cendのリンク追加</title>
      <link href="https://cpprefjp.github.io/reference/ranges/lazy_split_view.html"/>
      <id>dbc7c10006eeae7a56fd011cdb1ee476a9a4cc17:reference/ranges/lazy_split_view.md</id>
      <updated>2023-09-08T14:23:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/lazy_split_view.md b/reference/ranges/lazy_split_view.md
index 83c75d6da..2464188f0 100644
--- a/reference/ranges/lazy_split_view.md
+++ b/reference/ranges/lazy_split_view.md
@@ -91,6 +91,8 @@ concept tiny-range = sized_range&amp;lt;R&amp;gt; &amp;amp;&amp;amp;
 | [`operator bool`](view_interface/op_bool.md) | Rangeが空でないかどうかを判定する | C++20          |
 | [`front`](view_interface/front.md)           | 先頭要素への参照を取得する        | C++20          |
 | [`back`](view_interface/back.md)             | 末尾要素への参照を取得する        | C++20          |
+| [`cbegin`](view_interface/cbegin.md)         | 定数イテレータを取得する             | C++23          |
+| [`cend`](view_interface/cend.md)             | 定数イテレータ（番兵）を取得する      | C++23          |
 
 ## 推論補助
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>owning_view -- view_interfaceを継承しているクラスにcbegin/cendのリンク追加</title>
      <link href="https://cpprefjp.github.io/reference/ranges/owning_view.html"/>
      <id>dbc7c10006eeae7a56fd011cdb1ee476a9a4cc17:reference/ranges/owning_view.md</id>
      <updated>2023-09-08T14:23:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/owning_view.md b/reference/ranges/owning_view.md
index 19ab8dc65..2dd2519d9 100644
--- a/reference/ranges/owning_view.md
+++ b/reference/ranges/owning_view.md
@@ -49,6 +49,8 @@ Rangeの右辺値をムーブして所有する[`view`](view.md)。このクラ
 | [`front`](view_interface/front.md)           | 先頭要素への参照を取得する        | C++20          |
 | [`back`](view_interface/back.md)             | 末尾要素への参照を取得する        | C++20          |
 | [`operator[]`](view_interface/op_at.md)      | 要素へアクセスする                | C++20          |
+| [`cbegin`](view_interface/cbegin.md)         | 定数イテレータを取得する             | C++23          |
+| [`cend`](view_interface/cend.md)             | 定数イテレータ（番兵）を取得する      | C++23          |
 
 ## 推論補助
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ref_view -- view_interfaceを継承しているクラスにcbegin/cendのリンク追加</title>
      <link href="https://cpprefjp.github.io/reference/ranges/ref_view.html"/>
      <id>dbc7c10006eeae7a56fd011cdb1ee476a9a4cc17:reference/ranges/ref_view.md</id>
      <updated>2023-09-08T14:23:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/ref_view.md b/reference/ranges/ref_view.md
index a68fbf672..dd73e17df 100644
--- a/reference/ranges/ref_view.md
+++ b/reference/ranges/ref_view.md
@@ -49,6 +49,8 @@ Rangeへの参照として振る舞う[`view`](view.md)。このクラスのオ
 | [`front`](view_interface/front.md)           | 先頭要素への参照を取得する        | C++20          |
 | [`back`](view_interface/back.md)             | 末尾要素への参照を取得する        | C++20          |
 | [`operator[]`](view_interface/op_at.md)      | 要素へアクセスする                | C++20          |
+| [`cbegin`](view_interface/cbegin.md)         | 定数イテレータを取得する             | C++23          |
+| [`cend`](view_interface/cend.md)             | 定数イテレータ（番兵）を取得する      | C++23          |
 
 ## 推論補助
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>reverse_view -- view_interfaceを継承しているクラスにcbegin/cendのリンク追加</title>
      <link href="https://cpprefjp.github.io/reference/ranges/reverse_view.html"/>
      <id>dbc7c10006eeae7a56fd011cdb1ee476a9a4cc17:reference/ranges/reverse_view.md</id>
      <updated>2023-09-08T14:23:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/reverse_view.md b/reference/ranges/reverse_view.md
index 8f25ad909..0a1d1fe65 100644
--- a/reference/ranges/reverse_view.md
+++ b/reference/ranges/reverse_view.md
@@ -69,6 +69,8 @@ namespace std::ranges {
 | [`front`](view_interface/front.md)           | 先頭要素への参照を取得する        | C++20          |
 | [`back`](view_interface/back.md)             | 末尾要素への参照を取得する        | C++20          |
 | [`operator[]`](view_interface/op_at.md)      | 要素へアクセスする                | C++20          |
+| [`cbegin`](view_interface/cbegin.md)         | 定数イテレータを取得する             | C++23          |
+| [`cend`](view_interface/cend.md)             | 定数イテレータ（番兵）を取得する      | C++23          |
 
 ## 推論補助
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>split_view -- view_interfaceを継承しているクラスにcbegin/cendのリンク追加</title>
      <link href="https://cpprefjp.github.io/reference/ranges/split_view.html"/>
      <id>dbc7c10006eeae7a56fd011cdb1ee476a9a4cc17:reference/ranges/split_view.md</id>
      <updated>2023-09-08T14:23:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/split_view.md b/reference/ranges/split_view.md
index f09880d28..cc16b95fb 100644
--- a/reference/ranges/split_view.md
+++ b/reference/ranges/split_view.md
@@ -75,6 +75,8 @@ namespace std::ranges {
 | [`operator bool`](view_interface/op_bool.md) | Rangeが空でないかどうかを判定する | C++20          |
 | [`front`](view_interface/front.md)           | 先頭要素への参照を取得する        | C++20          |
 | [`back`](view_interface/back.md)             | 末尾要素への参照を取得する        | C++20          |
+| [`cbegin`](view_interface/cbegin.md)         | 定数イテレータを取得する             | C++23          |
+| [`cend`](view_interface/cend.md)             | 定数イテレータ（番兵）を取得する      | C++23          |
 
 ## 推論補助
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>subrange -- view_interfaceを継承しているクラスにcbegin/cendのリンク追加</title>
      <link href="https://cpprefjp.github.io/reference/ranges/subrange.html"/>
      <id>dbc7c10006eeae7a56fd011cdb1ee476a9a4cc17:reference/ranges/subrange.md</id>
      <updated>2023-09-08T14:23:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/subrange.md b/reference/ranges/subrange.md
index 7aacf4c5b..510fddb0e 100644
--- a/reference/ranges/subrange.md
+++ b/reference/ranges/subrange.md
@@ -51,6 +51,8 @@ namespace std::ranges {
 | [`front`](view_interface/front.md)           | 先頭要素への参照を取得する        | C++20          |
 | [`back`](view_interface/back.md)             | 末尾要素への参照を取得する        | C++20          |
 | [`operator[]`](view_interface/op_at.md)      | 要素へアクセスする                | C++20          |
+| [`cbegin`](view_interface/cbegin.md)         | 定数イテレータを取得する             | C++23          |
+| [`cend`](view_interface/cend.md)             | 定数イテレータ（番兵）を取得する      | C++23          |
 
 
 ## 推論補助
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>take_view -- view_interfaceを継承しているクラスにcbegin/cendのリンク追加</title>
      <link href="https://cpprefjp.github.io/reference/ranges/take_view.html"/>
      <id>dbc7c10006eeae7a56fd011cdb1ee476a9a4cc17:reference/ranges/take_view.md</id>
      <updated>2023-09-08T14:23:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/take_view.md b/reference/ranges/take_view.md
index cac570185..ba262259c 100644
--- a/reference/ranges/take_view.md
+++ b/reference/ranges/take_view.md
@@ -71,6 +71,8 @@ namespace std::ranges {
 | [`front`](view_interface/front.md)           | 先頭要素への参照を取得する        | C++20          |
 | [`back`](view_interface/back.md)             | 末尾要素への参照を取得する        | C++20          |
 | [`operator[]`](view_interface/op_at.md)      | 要素へアクセスする                | C++20          |
+| [`cbegin`](view_interface/cbegin.md)         | 定数イテレータを取得する             | C++23          |
+| [`cend`](view_interface/cend.md)             | 定数イテレータ（番兵）を取得する      | C++23          |
 
 ## 推論補助
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>take_while_view -- view_interfaceを継承しているクラスにcbegin/cendのリンク追加</title>
      <link href="https://cpprefjp.github.io/reference/ranges/take_while_view.html"/>
      <id>dbc7c10006eeae7a56fd011cdb1ee476a9a4cc17:reference/ranges/take_while_view.md</id>
      <updated>2023-09-08T14:23:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/take_while_view.md b/reference/ranges/take_while_view.md
index 4c96f1358..6d6514cb8 100644
--- a/reference/ranges/take_while_view.md
+++ b/reference/ranges/take_while_view.md
@@ -65,6 +65,8 @@ namespace std::ranges {
 | [`front`](view_interface/front.md)           | 先頭要素への参照を取得する        | C++20          |
 | [`back`](view_interface/back.md)             | 末尾要素への参照を取得する        | C++20          |
 | [`operator[]`](view_interface/op_at.md)      | 要素へアクセスする                | C++20          |
+| [`cbegin`](view_interface/cbegin.md)         | 定数イテレータを取得する             | C++23          |
+| [`cend`](view_interface/cend.md)             | 定数イテレータ（番兵）を取得する      | C++23          |
 
 ## 推論補助
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>transform_view -- view_interfaceを継承しているクラスにcbegin/cendのリンク追加</title>
      <link href="https://cpprefjp.github.io/reference/ranges/transform_view.html"/>
      <id>dbc7c10006eeae7a56fd011cdb1ee476a9a4cc17:reference/ranges/transform_view.md</id>
      <updated>2023-09-08T14:23:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/transform_view.md b/reference/ranges/transform_view.md
index 08e94775d..928b74277 100644
--- a/reference/ranges/transform_view.md
+++ b/reference/ranges/transform_view.md
@@ -74,6 +74,8 @@ namespace std::ranges {
 | [`front`](view_interface/front.md)           | 先頭要素への参照を取得する       | C++20          |
 | [`back`](view_interface/back.md)             | 末尾要素への参照を取得する       | C++20          |
 | [`operator[]`](view_interface/op_at.md)      | 要素へアクセスする               | C++20          |
+| [`cbegin`](view_interface/cbegin.md)         | 定数イテレータを取得する             | C++23          |
+| [`cend`](view_interface/cend.md)             | 定数イテレータ（番兵）を取得する      | C++23          |
 
 ## 推論補助
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>as_const_view -- as_const_view : コンストラクタとbase追加 #1084</title>
      <link href="https://cpprefjp.github.io/reference/ranges/as_const_view.html"/>
      <id>0185d032cb062bec39b469070735d250cacff810:reference/ranges/as_const_view.md</id>
      <updated>2023-09-08T12:48:14+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/as_const_view.md b/reference/ranges/as_const_view.md
index ec7d49d63..1853a628f 100644
--- a/reference/ranges/as_const_view.md
+++ b/reference/ranges/as_const_view.md
@@ -45,8 +45,8 @@ namespace std::ranges {
 
 | 名前                                             | 説明                             | 対応バージョン |
 |--------------------------------------------------|----------------------------------|----------------|
-| [`(constructor)`](as_const_view/op_constructor.md.nolink)  | コンストラクタ                   | C++23          |
-| [`base`](as_const_view/base.md.nolink)                     | `V`の参照を取得する              | C++23          |
+| [`(constructor)`](as_const_view/op_constructor.md)  | コンストラクタ                   | C++23          |
+| [`base`](as_const_view/base.md)                     | `V`の参照を取得する              | C++23          |
 | [`begin`](as_const_view/begin.md.nolink)                   | 先頭を指すイテレータを取得する   | C++23          |
 | [`end`](as_const_view/end.md.nolink)                       | 番兵を取得する                   | C++23          |
 | [`size`](as_const_view/size.md.nolink)                     | 要素数を取得する                 | C++23          |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>base -- as_const_view : コンストラクタとbase追加 #1084</title>
      <link href="https://cpprefjp.github.io/reference/ranges/as_const_view/base.html"/>
      <id>0185d032cb062bec39b469070735d250cacff810:reference/ranges/as_const_view/base.md</id>
      <updated>2023-09-08T12:48:14+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/as_const_view/base.md b/reference/ranges/as_const_view/base.md
new file mode 100644
index 000000000..1afffb6bb
--- /dev/null
+++ b/reference/ranges/as_const_view/base.md
@@ -0,0 +1,71 @@
+# base
+* ranges[meta header]
+* std::ranges[meta namespace]
+* as_const_view[meta class]
+* function[meta id-type]
+* cpp23[meta cpp]
+
+```cpp
+constexpr V base() const &amp;amp; requires copy_constructible&amp;lt;V&amp;gt;;  // (1)
+constexpr V base() &amp;amp;&amp;amp;;                                      // (2)
+```
+* copy_constructible[link /reference/concepts/copy_constructible.md]
+
+## 概要
+
+メンバ変数として保持している、元の`view`を取得する。
+
+## 戻り値
+
+入力`view`（`V`）のオブジェクトを`base_`というメンバに保持するとして
+
+- (1) : `return base_;`
+- (2) : `return std::move(base_);`
+
+## 例
+
+```cpp example
+#include &amp;lt;iterator&amp;gt;
+#include &amp;lt;vector&amp;gt;
+#include &amp;lt;iostream&amp;gt;
+
+int main() {
+  using std::ranges::view;
+
+  std::vector&amp;lt;int&amp;gt; vec = {1, 2, 3, 4, 5};
+
+  std::ranges::as_const_view acv{vec};
+
+  // (1) コピーして取得
+  view auto b1 = acv.base();
+
+  // (2) ムーブして取得
+  view auto b2 = std::move(acv).base();
+
+  // 得られるのは元のRangeではなく、あくまでview
+  static_assert(not std::same_as&amp;lt;decltype(b1), std::vector&amp;lt;int&amp;gt;&amp;gt;);
+  static_assert(    std::same_as&amp;lt;decltype(b1), std::ranges::ref_view&amp;lt;std::vector&amp;lt;int&amp;gt;&amp;gt;&amp;gt;);
+  static_assert(    std::same_as&amp;lt;decltype(b2), std::ranges::ref_view&amp;lt;std::vector&amp;lt;int&amp;gt;&amp;gt;&amp;gt;);
+}
+```
+* base[color ff0000]
+* same_as[link /reference/concepts/same_as.md]
+* ref_view[link /reference/ranges/ref_view.md]
+
+### 出力
+
+```
+```
+
+## バージョン
+### 言語
+- C++23
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): 13.1
+- [Visual C++](/implementation.md#visual_cpp): 2022 Update 6
+
+## 参照
+
+- [P2278R4 `cbegin` should always return a constant iterator](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p2278r4.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- as_const_view : コンストラクタとbase追加 #1084</title>
      <link href="https://cpprefjp.github.io/reference/ranges/as_const_view/op_constructor.html"/>
      <id>0185d032cb062bec39b469070735d250cacff810:reference/ranges/as_const_view/op_constructor.md</id>
      <updated>2023-09-08T12:48:14+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/as_const_view/op_constructor.md b/reference/ranges/as_const_view/op_constructor.md
new file mode 100644
index 000000000..32832d801
--- /dev/null
+++ b/reference/ranges/as_const_view/op_constructor.md
@@ -0,0 +1,60 @@
+# コンストラクタ
+* ranges[meta header]
+* std::ranges[meta namespace]
+* as_const_view[meta class]
+* function[meta id-type]
+* cpp23[meta cpp]
+
+```cpp
+as_const_view() requires default_initializable&amp;lt;V&amp;gt; = default;    // (1)
+
+constexpr explicit as_const_view(V base);                       // (2)
+```
+* default_initializable[link /reference/concepts/default_initializable.md]
+
+## 概要
+
+`as_const_view`オブジェクトを構築する。
+
+## 効果
+
+入力`view`（`V`）のオブジェクトを`base_`というメンバに保持するとして
+
+- (1) : `base_`をデフォルト構築する
+- (2) : `base_`を`std::move(base)`で初期化する
+
+## 例
+```cpp example
+#include &amp;lt;ranges&amp;gt;
+#include &amp;lt;vector&amp;gt;
+
+int main() {
+  using std::ranges::as_const_view;
+
+  std::vector&amp;lt;int&amp;gt; vec = {1, 2, 3, 4, 5};
+
+  // (1) デフォルト構築
+  as_const_view&amp;lt;std::views::all_t&amp;lt;std::vector&amp;lt;int&amp;gt;&amp;gt;&amp;gt; v1{};
+  
+  // (2) viewを入力して構築
+  as_const_view v2{vec};
+}
+```
+* as_const_view[color ff0000]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++23
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): 13.1
+- [Visual C++](/implementation.md#visual_cpp): 2022 Update 6
+
+## 参照
+
+- [P2278R4 `cbegin` should always return a constant iterator](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p2278r4.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>as_const_view -- as_const_view : 表の調整</title>
      <link href="https://cpprefjp.github.io/reference/ranges/as_const_view.html"/>
      <id>fa4faf6048ec000b7c7fc003ea7b810badea9fae:reference/ranges/as_const_view.md</id>
      <updated>2023-09-06T15:01:22+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/as_const_view.md b/reference/ranges/as_const_view.md
index 2cac9fe1c..ec7d49d63 100644
--- a/reference/ranges/as_const_view.md
+++ b/reference/ranges/as_const_view.md
@@ -26,10 +26,10 @@ namespace std::ranges {
 ### Rangeコンセプト
 
 | borrowed | sized | output | input | forward | bidirectional | random_access | contiguous | common | viewable | view |
-|----------|-------|--------|-------|---------|---------------|---------------|------------|--------|----------|------|
-| (1)      | (1)   |        | ○     | (1)     | (1)           | (1)           | (1)        | (1)    | ○        | ○    |
+|:--------:|:-----:|:------:|:-----:|:-------:|:-------------:|:-------------:|:----------:|:------:|:--------:|:----:|
+| ※        | ※     |        | ○     | ※       | ※             | ※             | ※          | ※      | ○        | ○    |
 
-- (1): `V`に従う
+- ※: `V`に従う
 
 ## 効果
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>as_const_view -- as_const_view : サンプルコードの修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/as_const_view.html"/>
      <id>f1b46a11655c1b1b27faa245f5732a4fd5dd5c81:reference/ranges/as_const_view.md</id>
      <updated>2023-09-06T14:45:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/as_const_view.md b/reference/ranges/as_const_view.md
index f335682fb..2cac9fe1c 100644
--- a/reference/ranges/as_const_view.md
+++ b/reference/ranges/as_const_view.md
@@ -77,11 +77,11 @@ namespace std::ranges {
 int main() {
   std::vector&amp;lt;int&amp;gt; vec = {1, 2, 3, 4};
 
-  for (const int&amp;amp; i : vec | std::views::as_const) {
+  for (auto&amp;amp; i : vec | std::views::as_const) {
     std::cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &amp;#39; &amp;#39;;
 
     // 変更不可
-    //*i = 0
+    //i = 0
   }
 }
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ranges -- views::as_const追加 #1084</title>
      <link href="https://cpprefjp.github.io/reference/ranges.html"/>
      <id>953efe6f14e067f5c4d51fa0f30e6ff175859d02:reference/ranges.md</id>
      <updated>2023-09-06T14:41:56+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges.md b/reference/ranges.md
index c7b99a06f..41b8b7b19 100644
--- a/reference/ranges.md
+++ b/reference/ranges.md
@@ -321,8 +321,8 @@ range | adaptor(args...)
 
 | 名前                                          | 説明                                                         | 対応バージョン |
 |-----------------------------------------------|--------------------------------------------------------------|----------------|
-| [`as_const_view`](ranges/as_const_view.md.nolink)    | 各要素をconstにするビュー (class template)                   | C++23          |
-| [`views::as_const`](ranges/as_const.md.nolink)       | `as_const_view`を生成する (customization point object)       | C++23          |
+| [`as_const_view`](ranges/as_const_view.md)    | 各要素をconstにするビュー (class template)                       | C++23          |
+| [`views::as_const`](ranges/as_const_view.md)  | `as_const_view`を生成する (customization point object)         | C++23          |
 
 ### elements view
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>as_const_view -- views::as_const追加 #1084</title>
      <link href="https://cpprefjp.github.io/reference/ranges/as_const_view.html"/>
      <id>953efe6f14e067f5c4d51fa0f30e6ff175859d02:reference/ranges/as_const_view.md</id>
      <updated>2023-09-06T14:41:56+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/as_const_view.md b/reference/ranges/as_const_view.md
new file mode 100644
index 000000000..f335682fb
--- /dev/null
+++ b/reference/ranges/as_const_view.md
@@ -0,0 +1,106 @@
+# as_const_view
+* ranges[meta header]
+* std::ranges[meta namespace]
+* class template[meta id-type]
+* cpp23[meta cpp]
+
+```cpp
+namespace std::ranges {
+  template&amp;lt;view V&amp;gt;
+    requires input_range&amp;lt;V&amp;gt;
+  class as_const_view : public view_interface&amp;lt;as_const_view&amp;lt;V&amp;gt;&amp;gt; { …… }; // (1)
+
+  namespace views {
+    inline constexpr /*unspecified*/ as_const = /*unspecified*/;        // (2)
+  }
+}
+```
+* input_range[link input_range.md]
+* view[link view.md]
+* view_interface[link view_interface.md]
+
+## 概要
+- (1): 各要素を定数化したRangeとして振る舞う[`view`](view.md)
+- (2): `as_const_view`を生成するRangeアダプタオブジェクト
+
+### Rangeコンセプト
+
+| borrowed | sized | output | input | forward | bidirectional | random_access | contiguous | common | viewable | view |
+|----------|-------|--------|-------|---------|---------------|---------------|------------|--------|----------|------|
+| (1)      | (1)   |        | ○     | (1)     | (1)           | (1)           | (1)        | (1)    | ○        | ○    |
+
+- (1): `V`に従う
+
+## 効果
+
+- (2): 式`views::as_const(E)`の効果は次のいずれか（`T = decltype((E))`、`U = remove_cvref_t&amp;lt;T&amp;gt;`とする）
+    - `views::all_t&amp;lt;T&amp;gt;`が`constant_range`のモデルとなる場合 : `views::all(E)`
+    - 任意の型`X`に対して、`U`が`empty_view&amp;lt;X&amp;gt;`である場合 : `auto(views::empty&amp;lt;const X&amp;gt;)`
+    - 任意の型`X`と整数値`Extent`に対して、`U`が`span&amp;lt;X, Extent&amp;gt;`である場合 : `span&amp;lt;const X, Extent&amp;gt;(E)`
+    - 任意の型`X`に対して、`U`が`ref_view&amp;lt;X&amp;gt;`であり、`const X`が`constant_range`のモデルとなる場合 : `ref_view(static_cast&amp;lt;const X&amp;amp;&amp;gt;(E.base()))`
+    - `E`が左辺値であり、`const U`が`constant_range`のモデルとなり、かつ`U`は`view`のモデルとならない場合 : `ref_view(static_cast&amp;lt;const U&amp;amp;&amp;gt;(E))`
+    - それ以外の場合 : `as_const_view(E)`
+
+## メンバ関数
+
+| 名前                                             | 説明                             | 対応バージョン |
+|--------------------------------------------------|----------------------------------|----------------|
+| [`(constructor)`](as_const_view/op_constructor.md.nolink)  | コンストラクタ                   | C++23          |
+| [`base`](as_const_view/base.md.nolink)                     | `V`の参照を取得する              | C++23          |
+| [`begin`](as_const_view/begin.md.nolink)                   | 先頭を指すイテレータを取得する   | C++23          |
+| [`end`](as_const_view/end.md.nolink)                       | 番兵を取得する                   | C++23          |
+| [`size`](as_const_view/size.md.nolink)                     | 要素数を取得する                 | C++23          |
+
+## 継承しているメンバ関数
+
+| 名前                                         | 説明                              | 対応バージョン |
+|----------------------------------------------|----------------------------------|----------------|
+| [`empty`](view_interface/empty.md)           | Rangeが空かどうかを判定する         | C++23          |
+| [`operator bool`](view_interface/op_bool.md) | Rangeが空でないかどうかを判定する    | C++23          |
+| [`front`](view_interface/front.md)           | 先頭要素への参照を取得する           | C++23          |
+| [`back`](view_interface/back.md)             | 末尾要素への参照を取得する           | C++23          |
+| [`operator[]`](view_interface/op_at.md)      | 要素へアクセスする                  | C++23          |
+| [`cbegin`](view_interface/cbegin.md)         | 定数イテレータを取得する             | C++23          |
+| [`cend`](view_interface/cend.md)             | 定数イテレータ（番兵）を取得する      | C++23          |
+
+## 推論補助
+
+| 名前                                                  | 説明                         | 対応バージョン |
+|-------------------------------------------------------|------------------------------|----------------|
+| [`(deduction_guide)`](as_const_view/op_deduction_guide.md.nolink) | クラステンプレートの推論補助 | C++23          |
+
+## 例
+```cpp example
+#include &amp;lt;ranges&amp;gt;
+#include &amp;lt;iostream&amp;gt;
+
+int main() {
+  std::vector&amp;lt;int&amp;gt; vec = {1, 2, 3, 4};
+
+  for (const int&amp;amp; i : vec | std::views::as_const) {
+    std::cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &amp;#39; &amp;#39;;
+
+    // 変更不可
+    //*i = 0
+  }
+}
+```
+* views::as_const[color ff0000]
+
+### 出力
+```
+1 2 3 4 
+```
+
+## バージョン
+### 言語
+- C++23
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): 13.1
+- [Visual C++](/implementation.md#visual_cpp): 2022 Update 6
+
+## 参照
+
+- [P2278R4 `cbegin` should always return a constant iterator](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p2278r4.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
</feed>
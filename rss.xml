<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++ Library Reference</title>
  <link href="http://cpprefjp.github.io" />
  <updated>2014-11-20T02:14:40.498954</updated>
  <id>080775d8-43e7-4134-bbcd-eb37bf6cc51b</id>

  
    <entry>
      <title>alignment_of (C++11) -- alignment_of: 出力例を追記</title>
      <link href="http://cpprefjp.github.io/reference/type_traits/alignment_of.html"/>
      <id>080775d8-43e7-4134-bbcd-eb37bf6cc51b</id>
      <updated>2014-11-16 17:03:57 +0900</updated>
      <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/type_traits/alignment_of.md b/reference/type_traits/alignment_of.md
index 5cd6e61..b15fe9f 100644
--- a/reference/type_traits/alignment_of.md
+++ b/reference/type_traits/alignment_of.md
@@ -32,8 +32,9 @@ int main()
 }
 ```
 
-###出力
+###出力例
 ```
+4
 ```
 
 ##バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
        <content type="html">&lt;h1&gt;alignment_of (C++11)&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;struct&lt;/span&gt; alignment_of {
    &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;static&lt;/span&gt; constexpr std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;size_t&lt;/span&gt; value &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;border: 1px solid #FF0000&#34;&gt;…&lt;/span&gt;;
  };
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;型&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;T&lt;/span&gt;&lt;/code&gt;のアラインメントを取得する。&lt;/p&gt;
&lt;h2&gt;要件&lt;/h2&gt;
&lt;p&gt;型&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;T&lt;/span&gt;&lt;/code&gt;に対して&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;alignof(T)&lt;/span&gt;&lt;/code&gt;が有効であること。&lt;/p&gt;
&lt;h2&gt;効果&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;alignof(T)&lt;/span&gt;&lt;/code&gt;で得られた&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;std::size_t&lt;/span&gt;&lt;/code&gt;型の値を、メンバ定数&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;value&lt;/span&gt;&lt;/code&gt;として定義する。&lt;/p&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;type_traits&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  constexpr std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;size_t&lt;/span&gt; n &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;alignment_of&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;::&lt;/span&gt;value;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; n &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力例&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang, C++11 mode&lt;/a&gt;: 3.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++11 mode&lt;/a&gt;: 4.6.4&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: ??&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>デストラクタ -- stack: 他のクラスに合わせて見出しを「デストラクタ」に修正</title>
      <link href="http://cpprefjp.github.io/reference/stack/-stack.html"/>
      <id>080775d8-43e7-4134-bbcd-eb37bf6cc51b</id>
      <updated>2014-11-16 00:02:32 +0900</updated>
      <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stack/-stack.md b/reference/stack/-stack.md
index c433bda..ab223a5 100644
--- a/reference/stack/-stack.md
+++ b/reference/stack/-stack.md
@@ -1,4 +1,4 @@
-#~stack
+#デストラクタ
 ```cpp
 ~stack();
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
        <content type="html">&lt;h1&gt;デストラクタ&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #666666&#34;&gt;~&lt;/span&gt;stack();
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;stack コンテナアダプタのオブジェクトを破棄する。&lt;/p&gt;
&lt;h2&gt;計算量&lt;/h2&gt;
&lt;p&gt;線形時間 O(n) (全要素のデストラクタ呼び出し)&lt;/p&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;</content>
      
      <author>
        <name>Mitsuru Kariya</name>
        <email>kariya_mitsuru@hotmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- stack: 他のクラスに合わせて見出しを「コンストラクタ」に修正</title>
      <link href="http://cpprefjp.github.io/reference/stack/stack.html"/>
      <id>080775d8-43e7-4134-bbcd-eb37bf6cc51b</id>
      <updated>2014-11-16 00:00:39 +0900</updated>
      <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stack/stack.md b/reference/stack/stack.md
index ce7f0ba..340bdbc 100644
--- a/reference/stack/stack.md
+++ b/reference/stack/stack.md
@@ -1,4 +1,4 @@
-#stack
+#コンストラクタ
 ```cpp
 explicit stack(const Container&amp;amp; cont = Container());
 stack(const stack&amp;amp; st);
&lt;/code&gt;&lt;/pre&gt;</summary>
      
        <content type="html">&lt;h1&gt;コンストラクタ&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;explicit&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;stack&lt;/span&gt;(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; Container&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; cont &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; Container());
stack(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; stack&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; st);

&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// C++11から追加されたコンストラクタ&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;explicit&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;stack&lt;/span&gt;(Container&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; cont &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; Container());
stack(stack&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; st);
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;Allocator&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;explicit&lt;/span&gt; stack(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; Allocator&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; alloc);
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;Allocator&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; stack(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; Container&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; cont, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; Allocator&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; alloc);
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;Allocator&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; stack(Container&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; cont, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; Allocator&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; alloc);
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;Allocator&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; stack(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; stack&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; st, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; Allocator&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; alloc);
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;Allocator&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; stack(stack&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; st, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; Allocator&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; alloc);
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;stack&lt;/span&gt;&lt;/code&gt; コンテナアダプタのオブジェクトを構築する。 
コンテナアダプタは、実際にデータを保持するコンテナオブジェクトを内部に持つが、これは引数として渡されたコンテナオブジェクトをコピー、もしくはムーブして用いる。 
空のコンテナが引数として渡された場合も同様の動作を行う。&lt;/p&gt;
&lt;h2&gt;パラメータ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;cont&lt;/span&gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;初期化に用いるコンテナオブジェクト&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;alloc&lt;/span&gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;内部のコンテナで使用するアロケータオブジェクト&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;st&lt;/span&gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;コピー・ムーブ元の &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;stack&lt;/span&gt;&lt;/code&gt; オブジェクト&lt;/p&gt;
&lt;h2&gt;計算量&lt;/h2&gt;
&lt;p&gt;線形時間 O(n)。&lt;/p&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;utility&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;vector&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;stack&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt; ()
{
  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// デフォルトでは Container == deque&amp;lt;T&amp;gt;&lt;/span&gt;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;vector&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;  vec;

  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 要素を追加&lt;/span&gt;
  vec.push_back(&lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;);
  vec.push_back(&lt;span style=&#34;color: #666666&#34;&gt;2&lt;/span&gt;);
  vec.push_back(&lt;span style=&#34;color: #666666&#34;&gt;3&lt;/span&gt;);

  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// vec を引数に構築&lt;/span&gt;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;stack&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;, std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;vector&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;  st(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;move(vec));

  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;while&lt;/span&gt; (&lt;span style=&#34;color: #666666&#34;&gt;!&lt;/span&gt;st.empty()) {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; st.top() &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34; &#34;&lt;/span&gt;; &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 末尾要素を参照する&lt;/span&gt;
    st.pop(); &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 末尾要素を削除&lt;/span&gt;
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;3 2 1 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/stack/op_assign.html&#34;&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;operator=&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;代入&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</content>
      
      <author>
        <name>Mitsuru Kariya</name>
        <email>kariya_mitsuru@hotmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>stack -- stack: デストラクタのファイル名を修正</title>
      <link href="http://cpprefjp.github.io/reference/stack.html"/>
      <id>080775d8-43e7-4134-bbcd-eb37bf6cc51b</id>
      <updated>2014-11-15 23:24:19 +0900</updated>
      <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stack.md b/reference/stack.md
index 83e9322..183f0e4 100644
--- a/reference/stack.md
+++ b/reference/stack.md
@@ -31,7 +31,7 @@ namespace std {
 | 名前 | 説明 | 対応バージョン |
 |--------------------------------------|----------------------------|-------|
 | [`(constructor)`](./stack/stack.md)  | コンストラクタ             | |
-| [`(destructor)`](./stack/stack-1.md) | デストラクタ               | |
+| [`(destructor)`](./stack/-stack.md)  | デストラクタ               | |
 | [`operator=`](./stack/op_assign.md)  | 代入                       | |
 | [`top`](./stack/top.md)              | 次の要素へアクセスする     | |
 | [`empty`](./stack/empty.md)          | 要素が空であるかを確認する | |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
        <content type="html">&lt;h1&gt;stack&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;Container&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/deque.html&#34;&gt;deque&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;stack&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;stack&lt;/span&gt;&lt;/code&gt; はコンテナアダプタであり、LIFO (last-in first-out) の動作――コンテナの一方から要素が挿入され、挿入された側から要素を取り出す――を実現する目的で設計されている。要素をコンテナの &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;back()&lt;/span&gt;&lt;/code&gt; 側から挿入し、同じく &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;back()&lt;/span&gt;&lt;/code&gt; 側から取り出す。 &lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;stack&lt;/span&gt;&lt;/code&gt; は、所定のメンバ関数を持つコンテナのオブジェクトを内部実装として用いており、標準のコンテナ、もしくは独自に実装したコンテナを指定することができる。 
このコンテナに必要な要件は、以下のメンバ関数を持つことである。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;back()&lt;/span&gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;push_back()&lt;/span&gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;pop_back()&lt;/span&gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;emplace_back()&lt;/span&gt;&lt;/code&gt; (C++11)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;この要件を満たすものとしては &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;vector&lt;/span&gt;&lt;/code&gt; 、&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;deque&lt;/span&gt;&lt;/code&gt; 、&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;list&lt;/span&gt;&lt;/code&gt; があり、デフォルトでは &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;deque&lt;/span&gt;&lt;/code&gt; が使用される。 &lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;stack&lt;/span&gt;&lt;/code&gt; は2つのテンプレートパラメータを持つ。各テンプレートパラメータの意味は以下の通りである。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;T&lt;/span&gt;&lt;/code&gt;: 格納される要素の型&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;Container&lt;/span&gt;&lt;/code&gt;: 要素へのアクセス・保存に用いる内部実装のコンテナクラス&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;メンバ関数&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/stack/stack.html&#34;&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;(constructor)&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コンストラクタ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/stack/-stack.html&#34;&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;(destructor)&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;デストラクタ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/stack/op_assign.html&#34;&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;operator=&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;代入&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/stack/top.html&#34;&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;top&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;次の要素へアクセスする&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/stack/empty.html&#34;&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;empty&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;要素が空であるかを確認する&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/stack/size.html&#34;&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;size&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;要素数を取得する&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/stack/push.html&#34;&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;push&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;要素を追加する&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/stack/emplace.html&#34;&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;emplace&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;直接構築で要素を追加する&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/stack/pop.html&#34;&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;pop&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;次の要素を削除する&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/stack/swap.html&#34;&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;swap&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;他の &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;stack&lt;/span&gt;&lt;/code&gt; オブジェクトと値を入れ替える&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;protectedメンバ変数&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;変数名&lt;/th&gt;
&lt;th&gt;型&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;c&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;Container&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;メンバ型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;container_type&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;Container&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;value_type&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;Container::value_type&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;size_type&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;Container::size_type&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;reference&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;Container::reference&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;const_reference&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;Container::const_reference&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;非メンバ関数&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/stack/op_equal.html&#34;&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;operator==&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;等値比較&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/stack/op_not_equal.html&#34;&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;operator!=&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;非等値比較&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/stack/op_less.html&#34;&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;operator&amp;lt;&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;左辺が右辺より小さいかの判定を行う&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/stack/op_less_equal.html&#34;&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;operator&amp;lt;=&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;左辺が右辺以下かの判定を行う&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/stack/op_greater.html&#34;&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;operator&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;左辺が右辺より大きいかの判定を行う&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/stack/op_greater_equal.html&#34;&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;operator&amp;gt;=&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;左辺が右辺以上かの判定を行う&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/stack/swap_free.html&#34;&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;swap&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2つの&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;stack&lt;/span&gt;&lt;/code&gt;オブジェクトを入れ替える&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;stack&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt; ()
{
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;stack&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;  st;

  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 要素を追加&lt;/span&gt;
  st.push(&lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;);
  st.push(&lt;span style=&#34;color: #666666&#34;&gt;2&lt;/span&gt;);
  st.push(&lt;span style=&#34;color: #666666&#34;&gt;3&lt;/span&gt;);

  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;while&lt;/span&gt; (&lt;span style=&#34;color: #666666&#34;&gt;!&lt;/span&gt;st.empty()) {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; st.top() &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34; &#34;&lt;/span&gt;; &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 末尾要素を参照する&lt;/span&gt;
    st.pop(); &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 末尾要素を削除&lt;/span&gt;
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;3 2 1 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3&gt;参照&lt;/h3&gt;</content>
      
      <author>
        <name>Mitsuru Kariya</name>
        <email>kariya_mitsuru@hotmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>~stack -- stack: デストラクタのファイル名を修正</title>
      <link href="http://cpprefjp.github.io/reference/stack/-stack.html"/>
      <id>080775d8-43e7-4134-bbcd-eb37bf6cc51b</id>
      <updated>2014-11-15 23:24:19 +0900</updated>
      <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stack/-stack.md b/reference/stack/-stack.md
new file mode 100644
index 0000000..c433bda
--- /dev/null
+++ b/reference/stack/-stack.md
@@ -0,0 +1,21 @@
+#~stack
+```cpp
+~stack();
+```
+
+##概要
+stack コンテナアダプタのオブジェクトを破棄する。
+
+
+##計算量
+線形時間 O(n) (全要素のデストラクタ呼び出し)
+
+
+##例
+```cpp
+```
+
+###出力
+```
+```
+
&lt;/code&gt;&lt;/pre&gt;</summary>
      
        <content type="html">&lt;h1&gt;~stack&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #666666&#34;&gt;~&lt;/span&gt;stack();
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;stack コンテナアダプタのオブジェクトを破棄する。&lt;/p&gt;
&lt;h2&gt;計算量&lt;/h2&gt;
&lt;p&gt;線形時間 O(n) (全要素のデストラクタ呼び出し)&lt;/p&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;</content>
      
      <author>
        <name>Mitsuru Kariya</name>
        <email>kariya_mitsuru@hotmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>stack-1.md -- stack: デストラクタのファイル名を修正</title>
      <link href="http://cpprefjp.github.io/reference/stack/stack-1.html"/>
      <id>080775d8-43e7-4134-bbcd-eb37bf6cc51b</id>
      <updated>2014-11-15 23:24:19 +0900</updated>
      <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stack/stack-1.md b/reference/stack/stack-1.md
deleted file mode 100644
index c433bda..0000000
--- a/reference/stack/stack-1.md
+++ /dev/null
@@ -1,21 +0,0 @@
-#~stack
-```cpp
-~stack();
-```
-
-##概要
-stack コンテナアダプタのオブジェクトを破棄する。
-
-
-##計算量
-線形時間 O(n) (全要素のデストラクタ呼び出し)
-
-
-##例
-```cpp
-```
-
-###出力
-```
-```
-
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Mitsuru Kariya</name>
        <email>kariya_mitsuru@hotmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>gslice -- gslice: 例を修正</title>
      <link href="http://cpprefjp.github.io/reference/valarray/gslice.html"/>
      <id>080775d8-43e7-4134-bbcd-eb37bf6cc51b</id>
      <updated>2014-11-15 23:04:16 +0900</updated>
      <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/valarray/gslice.md b/reference/valarray/gslice.md
index d1673df..5b1b52c 100644
--- a/reference/valarray/gslice.md
+++ b/reference/valarray/gslice.md
@@ -35,6 +35,7 @@ namespace std {
 ```cpp
 #include &amp;lt;valarray&amp;gt;
 #include &amp;lt;iostream&amp;gt;
+#include &amp;lt;numeric&amp;gt;
 
 auto main()
   -&amp;gt; int
&lt;/code&gt;&lt;/pre&gt;</summary>
      
        <content type="html">&lt;h1&gt;gslice&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;gslice&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;gslice&lt;/span&gt;&lt;/code&gt;は、&lt;a href=&#34;http://cpprefjp.github.io/reference/valarray/slice.html&#34;&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;std::slice&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; をより一般化したスライス指示用のヘルパークラスである。&lt;/p&gt;
&lt;p&gt;このクラスは、&lt;a href=&#34;http://cpprefjp.github.io/reference/valarray/valarray.html&#34;&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;std::valarray&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; クラスの &lt;a href=&#34;http://cpprefjp.github.io/reference/valarray/valarray/op_at.html&#34;&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;operator[]&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; メンバ関数にスライスの指示を与えるために使用する。&lt;/p&gt;
&lt;p&gt;「&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;gslice&lt;/span&gt;&lt;/code&gt;」は、「generalized slice (汎用スライス)」の略。&lt;/p&gt;
&lt;h2&gt;メンバ関数&lt;/h2&gt;
&lt;h3&gt;構築・破棄&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/valarray/gslice/gslice.html&#34;&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;(constructor)&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コンストラクタ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;その他メンバ関数&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/valarray/gslice/start.html&#34;&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;start&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;スライスを生成する初期位置を取得する&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/valarray/gslice/size.html&#34;&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;size&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;生成するスライスの要素数群の &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;valarray&lt;/span&gt;&lt;/code&gt; オブジェクトを取得する&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/valarray/gslice/stride.html&#34;&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;stride&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;スライスを生成する間隔数群の &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;valarray&lt;/span&gt;&lt;/code&gt; を取得する&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;valarray&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;numeric&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;auto&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
  &lt;span style=&#34;color: #666666&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;
{
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;valarray&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; a( &lt;span style=&#34;color: #666666&#34;&gt;40&lt;/span&gt; );
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;iota( std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;begin(a), std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;end(a), &lt;span style=&#34;color: #666666&#34;&gt;16&lt;/span&gt; );

  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// スライスの開始位置 3（start）から&lt;/span&gt;
  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 10個（strides[0]）おきに 3箇所（length[0]）&lt;/span&gt;
  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// について、さらにそこから、&lt;/span&gt;
  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;//  3個（strides[1]）おきに 4箇所（legnth[1]）&lt;/span&gt;
  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// を抜き出す。&lt;/span&gt;
  constexpr &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;auto&lt;/span&gt;             start   &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;3&lt;/span&gt;;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;valarray&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;size_t&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; lengths &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; {  &lt;span style=&#34;color: #666666&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;4&lt;/span&gt; };
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;valarray&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;size_t&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; strides &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; { &lt;span style=&#34;color: #666666&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;3&lt;/span&gt; };

  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;gslice gs( start, lengths, strides );

  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;auto&lt;/span&gt; gsliced_array &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; a[ gs ];

  decltype( a ) b( gsliced_array );

  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;for&lt;/span&gt; ( &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;auto&lt;/span&gt; v &lt;span style=&#34;color: #666666&#34;&gt;:&lt;/span&gt; b )
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; v &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;color: #BB6622; font-weight: bold&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;/span&gt;;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;flush;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;19
22
25
28
29
32
35
38
39
42
45
48
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
- 19, 29, 39 は &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;strides[0]&lt;/span&gt;&lt;/code&gt; 個おきに &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;lengths[0]&lt;/span&gt;&lt;/code&gt; 個の位置。
    - 19 は元の&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;s&lt;/span&gt;&lt;/code&gt;の &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;start + strides[0] * 0&lt;/span&gt;&lt;/code&gt; 番目の要素。
        - 19, 22, 25, 28 は &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;strides[1]&lt;/span&gt;&lt;/code&gt; 個おきに &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;lengths[1]&lt;/span&gt;&lt;/code&gt; 個の要素。
    - 29 は元の&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;s&lt;/span&gt;&lt;/code&gt;の &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;start + strides[0] * 1&lt;/span&gt;&lt;/code&gt; 番目の要素。
        - 29, 32, 35, 38 は &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;strides[1]&lt;/span&gt;&lt;/code&gt; 個おきに &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;lengths[1]&lt;/span&gt;&lt;/code&gt; 個の要素。
    - 39 は元の&lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;s&lt;/span&gt;&lt;/code&gt;の &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;start + strides[0] * 2&lt;/span&gt;&lt;/code&gt; 番目の要素。
        - 39, 42, 45, 48 は &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;strides[1]&lt;/span&gt;&lt;/code&gt; 個おきに &lt;code&gt;&lt;span style=&#34;color: #000&#34;&gt;lengths[1]&lt;/span&gt;&lt;/code&gt; 個の要素。&lt;/p&gt;</content>
      
      <author>
        <name>Mitsuru Kariya</name>
        <email>kariya_mitsuru@hotmail.com</email>
      </author>
    </entry>
  
</feed>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2022-03-22T17:47:02.523517</updated>
  <id>63e24675-d8af-40e6-89e5-af5df95bd604</id>

  
    <entry>
      <title>in_found_result -- メンバ変数の説明を追加 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_in_found_result.html"/>
      <id>cbdb96f7036e7c353bba2c3de2d4972f81382ed8:reference/algorithm/ranges_in_found_result.md</id>
      <updated>2022-03-23T02:40:55+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_in_found_result.md b/reference/algorithm/ranges_in_found_result.md
index 282a0a411..cce0455d0 100644
--- a/reference/algorithm/ranges_in_found_result.md
+++ b/reference/algorithm/ranges_in_found_result.md
@@ -46,6 +46,15 @@ namespace std::ranges {
 
 標準アルゴリズム関数ではこの型を直接返す代わりに、関数毎にエイリアスを定義している。
 
+
+## メンバ変数
+
+| 名前                          | 説明                         | 対応バージョン |
+|-------------------------------|------------------------------|----------------|
+| `[[no_unique_address]] I in`  | 処理した範囲の末尾           | C++20          |
+| `bool found`                  | 何かを発見したかを表すフラグ | C++20          |
+
+
 ## メンバ関数
 
 | 名前                           | 説明           | 対応バージョン |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>in_fun_result -- メンバ変数の説明を追加 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_in_fun_result.html"/>
      <id>cbdb96f7036e7c353bba2c3de2d4972f81382ed8:reference/algorithm/ranges_in_fun_result.md</id>
      <updated>2022-03-23T02:40:55+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_in_fun_result.md b/reference/algorithm/ranges_in_fun_result.md
index a162a4922..a741ed87e 100644
--- a/reference/algorithm/ranges_in_fun_result.md
+++ b/reference/algorithm/ranges_in_fun_result.md
@@ -47,6 +47,15 @@ namespace std::ranges {
 
 標準アルゴリズム関数ではこの型を直接返す代わりに、関数毎にエイリアスを定義している。
 
+
+## メンバ変数
+
+| 名前                          | 説明                     | 対応バージョン |
+|-------------------------------|--------------------------|----------------|
+| `[[no_unique_address]] I in`  | 処理した範囲の末尾       | C++20          |
+| `[[no_unique_address]] F fun` | 渡された関数オブジェクト | C++20          |
+
+
 ## メンバ関数
 
 | 名前                             | 説明           | 対応バージョン |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>in_in_out_result -- メンバ変数の説明を追加 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_in_in_out_result.html"/>
      <id>cbdb96f7036e7c353bba2c3de2d4972f81382ed8:reference/algorithm/ranges_in_in_out_result.md</id>
      <updated>2022-03-23T02:40:55+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_in_in_out_result.md b/reference/algorithm/ranges_in_in_out_result.md
index dde530c28..6b4fd2bb0 100644
--- a/reference/algorithm/ranges_in_in_out_result.md
+++ b/reference/algorithm/ranges_in_in_out_result.md
@@ -67,6 +67,16 @@ namespace std::ranges {
 
 標準アルゴリズム関数ではこの型を直接返す代わりに、関数毎にエイリアスを定義している。
 
+
+## メンバ変数
+
+| 名前                           | 説明                      | 対応バージョン |
+|--------------------------------|---------------------------|----------------|
+| `[[no_unique_address]] I1 in1` | 1つめの処理した範囲の末尾 | C++20          |
+| `[[no_unique_address]] I2 in2` | 2つめの処理した範囲の末尾 | C++20          |
+| `[[no_unique_address]] O out`  | 出力した範囲の末尾        | C++20          |
+
+
 ## メンバ関数
 
 | 名前                                      | 説明           | 対応バージョン |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>in_in_result -- メンバ変数の説明を追加 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_in_in_result.html"/>
      <id>cbdb96f7036e7c353bba2c3de2d4972f81382ed8:reference/algorithm/ranges_in_in_result.md</id>
      <updated>2022-03-23T02:40:55+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_in_in_result.md b/reference/algorithm/ranges_in_in_result.md
index d44526430..38c8d49c2 100644
--- a/reference/algorithm/ranges_in_in_result.md
+++ b/reference/algorithm/ranges_in_in_result.md
@@ -47,6 +47,15 @@ namespace std::ranges {
 
 標準アルゴリズム関数ではこの型を直接返す代わりに、関数毎にエイリアスを定義している。
 
+
+## メンバ変数
+
+| 名前                           | 説明                      | 対応バージョン |
+|--------------------------------|---------------------------|----------------|
+| `[[no_unique_address]] I1 in1` | 1つめの処理した範囲の末尾 | C++20          |
+| `[[no_unique_address]] I2 in2` | 2つめの処理した範囲の末尾 | C++20          |
+
+
 ## メンバ関数
 
 | 名前                               | 説明           | 対応バージョン |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>in_out_out_result -- メンバ変数の説明を追加 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_in_out_out_result.html"/>
      <id>cbdb96f7036e7c353bba2c3de2d4972f81382ed8:reference/algorithm/ranges_in_out_out_result.md</id>
      <updated>2022-03-23T02:40:55+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_in_out_out_result.md b/reference/algorithm/ranges_in_out_out_result.md
index 1e33f5896..3a28d31f6 100644
--- a/reference/algorithm/ranges_in_out_out_result.md
+++ b/reference/algorithm/ranges_in_out_out_result.md
@@ -47,6 +47,16 @@ namespace std::ranges {
 
 標準アルゴリズム関数ではこの型を直接返す代わりに、関数毎にエイリアスを定義している。
 
+
+## メンバ変数
+
+| 名前                            | 説明                      | 対応バージョン |
+|---------------------------------|---------------------------|----------------|
+| `[[no_unique_address]] I in`    | 処理した範囲の末尾        | C++20          |
+| `[[no_unique_address]] O1 out1` | 1つめの出力した範囲の末尾 | C++20          |
+| `[[no_unique_address]] O2 out2` | 2つめの出力した範囲の末尾 | C++20          |
+
+
 ## メンバ関数
 
 | 名前                                       | 説明           | 対応バージョン |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>in_out_result -- メンバ変数の説明を追加 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_in_out_result.html"/>
      <id>cbdb96f7036e7c353bba2c3de2d4972f81382ed8:reference/algorithm/ranges_in_out_result.md</id>
      <updated>2022-03-23T02:40:55+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_in_out_result.md b/reference/algorithm/ranges_in_out_result.md
index ad8f72ba2..26ba26cde 100644
--- a/reference/algorithm/ranges_in_out_result.md
+++ b/reference/algorithm/ranges_in_out_result.md
@@ -117,6 +117,15 @@ namespace std::ranges {
 
 標準アルゴリズム関数ではこの型を直接返す代わりに、関数毎にエイリアスを定義している。
 
+
+## メンバ変数
+
+| 名前                          | 説明               | 対応バージョン |
+|-------------------------------|--------------------|----------------|
+| `[[no_unique_address]] I in`  | 処理した範囲の末尾 | C++20          |
+| `[[no_unique_address]] O out` | 出力した範囲の末尾 | C++20          |
+
+
 ## メンバ関数
 
 | 名前                             | 説明           | 対応バージョン |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>min_max_result -- メンバ変数の説明を追加 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_min_max_result.html"/>
      <id>cbdb96f7036e7c353bba2c3de2d4972f81382ed8:reference/algorithm/ranges_min_max_result.md</id>
      <updated>2022-03-23T02:40:55+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_min_max_result.md b/reference/algorithm/ranges_min_max_result.md
index c12537343..26a90ee37 100644
--- a/reference/algorithm/ranges_min_max_result.md
+++ b/reference/algorithm/ranges_min_max_result.md
@@ -47,6 +47,15 @@ namespace std::ranges {
 
 標準アルゴリズム関数ではこの型を直接返す代わりに、関数毎にエイリアスを定義している。
 
+
+## メンバ変数
+
+| 名前                          | 説明                                 | 対応バージョン |
+|-------------------------------|--------------------------------------|----------------|
+| `[[no_unique_address]] T min` | 最小値、または最小値を表すイテレータ | C++20          |
+| `[[no_unique_address]] T max` | 最大値、または最大値を表すイテレータ | C++20          |
+
+
 ## メンバ関数
 
 | 名前                          | 説明           | 対応バージョン |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コルーチン -- fix: use webarchive link</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/coroutines.html"/>
      <id>1a1f79a695708971d396fd69a977abbbff1230cc:lang/cpp20/coroutines.md</id>
      <updated>2022-03-22T18:46:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/coroutines.md b/lang/cpp20/coroutines.md
index c4529885a..84980fe30 100644
--- a/lang/cpp20/coroutines.md
+++ b/lang/cpp20/coroutines.md
@@ -621,5 +621,5 @@ C++20コルーチンに関するキーワードは、いずれも接頭辞`co_`
 - [C++ Coroutines: Understanding operator co_await](https://lewissbaker.github.io/2017/11/17/understanding-operator-co-await)
 - [C++ Coroutines: Understanding the promise type](https://lewissbaker.github.io/2018/09/05/understanding-the-promise-type)
 - [C++ Coroutines: Understanding Symmetric Transfer](https://lewissbaker.github.io/2020/05/11/understanding_symmetric_transfer)
-- [C++ co_awaiting coroutines](https://blog.panicsoftware.com/co_awaiting-coroutines/)
+- [C++ co_awaiting coroutines](https://web.archive.org/web/20210421165652/https://blog.panicsoftware.com/co_awaiting-coroutines/)
 - [20分くらいでわかった気分になれるC++20コルーチン](https://www.slideshare.net/yohhoy/20c20)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>binary_search -- 要件の説明を修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_binary_search.html"/>
      <id>89b87ded2e36b3d0e1c7d98dff6f275bcf7cb320:reference/algorithm/ranges_binary_search.md</id>
      <updated>2022-03-22T02:15:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_binary_search.md b/reference/algorithm/ranges_binary_search.md
index 6185c77ae..49266fd76 100644
--- a/reference/algorithm/ranges_binary_search.md
+++ b/reference/algorithm/ranges_binary_search.md
@@ -29,7 +29,7 @@ namespace std::ranges {
 二分探索法による検索を行う。
 
 
-## 要件
+## 事前条件
 `[first,last)` の要素 `e` は `e &amp;lt; value` および `!(value &amp;lt; e)`、または `comp(e, value)` および `!comp(value, e)` によって[区分化](/reference/algorithm.md#sequence-is-partitioned)されていなければならない。
 
 また、`[first, last)` の全ての要素 `e` は、`e &amp;lt; value` であれば `!(value &amp;lt; e)` である、または `comp(e, value)` であれば `!comp(value, e)` である必要がある。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>equal_range -- 要件の説明を修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_equal_range.html"/>
      <id>89b87ded2e36b3d0e1c7d98dff6f275bcf7cb320:reference/algorithm/ranges_equal_range.md</id>
      <updated>2022-03-22T02:15:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_equal_range.md b/reference/algorithm/ranges_equal_range.md
index 0905144fb..72e98876f 100644
--- a/reference/algorithm/ranges_equal_range.md
+++ b/reference/algorithm/ranges_equal_range.md
@@ -30,7 +30,7 @@ namespace std::ranges {
 ## 概要
 指定した値と等しい範囲を取得する。
 
-## 要件
+## 事前条件
 `[first,last)` の要素 `e` は `e &amp;lt; value` および `!(value &amp;lt; e)` 、あるいは `comp(e, value)` および `!comp(value, e)` によって[区分化](/reference/algorithm.md#sequence-is-partitioned)されていなければならない。
 
 また、`[first, last)` の要素 `e` は全て暗黙に、`e &amp;lt; value` が `!(value &amp;lt; e)` または `comp(e, value)` が `!comp(value, e)` を意味している必要がある。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>generate -- 要件の説明を修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_generate.html"/>
      <id>89b87ded2e36b3d0e1c7d98dff6f275bcf7cb320:reference/algorithm/ranges_generate.md</id>
      <updated>2022-03-22T02:15:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_generate.md b/reference/algorithm/ranges_generate.md
index c2d7a902a..323e24417 100644
--- a/reference/algorithm/ranges_generate.md
+++ b/reference/algorithm/ranges_generate.md
@@ -33,10 +33,6 @@ namespace std::ranges {
 * (2): 範囲を直接指定する
 
 
-## 要件
-`gen` は引数を取らないこと。
-
-
 ## 効果
 `[first,last)` のそれぞれのイテレータについて関数オブジェクト `gen` を呼び出し、その戻り値を代入する。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>generate_n -- 要件の説明を修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_generate_n.html"/>
      <id>89b87ded2e36b3d0e1c7d98dff6f275bcf7cb320:reference/algorithm/ranges_generate_n.md</id>
      <updated>2022-03-22T02:15:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_generate_n.md b/reference/algorithm/ranges_generate_n.md
index aa64a224c..fa2808156 100644
--- a/reference/algorithm/ranges_generate_n.md
+++ b/reference/algorithm/ranges_generate_n.md
@@ -22,11 +22,6 @@ namespace std::ranges {
 出力の範囲へ関数の結果を `n` 個書き込む。
 
 
-## 要件
-- `gen` は引数をとらないこと。
-- `Size` は integral type に変換可能であること。
-
-
 ## 効果
 `n` が 1 以上の場合、`[first,last)` のそれぞれのイテレータについて関数オブジェクト `gen` を呼び出し、その戻り値を代入する。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_permutation -- 要件の説明を修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_is_permutation.html"/>
      <id>89b87ded2e36b3d0e1c7d98dff6f275bcf7cb320:reference/algorithm/ranges_is_permutation.md</id>
      <updated>2022-03-22T02:15:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_is_permutation.md b/reference/algorithm/ranges_is_permutation.md
index 065f8cb35..9f7ade40f 100644
--- a/reference/algorithm/ranges_is_permutation.md
+++ b/reference/algorithm/ranges_is_permutation.md
@@ -37,7 +37,7 @@ namespace std::ranges {
 
 
 ## 計算量
-`last2` が与えられている形式の場合、`ForwardIterator1` と `ForwardIterator2` がどちらもランダムアクセスイテレータの要件を満たし、かつ `last1 - first1 != last2 - first2` であれば 1 度も述語の適用を行わない。  
+`last2` が与えられている形式の場合、`I1` と `I2` がどちらも[`random_access_iterator`](/reference/iterator/random_access_iterator.md)のモデルであり、かつ `last1 - first1 != last2 - first2` であれば 1 度も述語の適用を行わない。  
 そうでなければ、[`equal`](/reference/algorithm/equal.md)`(first1, last1, first2, last2) == true` もしくは [`equal`](/reference/algorithm/equal.md)`(first1, last1, first2, last2, pred) == true` の場合（`last2` が無い形式の場合、[`equal`](/reference/algorithm/equal.md) も `last2` の無い形式で置き換える）、[`distance`](/reference/iterator/distance.md)`(first1, last1)` 回の述語適用で完了する。  
 そうでなければ、[`distance`](/reference/iterator/distance.md)`(first1, last1)` をNとした場合に最悪O(N^2)回の述語適用で完了する。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>reverse -- 要件の説明を修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_reverse.html"/>
      <id>89b87ded2e36b3d0e1c7d98dff6f275bcf7cb320:reference/algorithm/ranges_reverse.md</id>
      <updated>2022-03-22T02:15:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_reverse.md b/reference/algorithm/ranges_reverse.md
index e959ffaec..cb3f4c4bf 100644
--- a/reference/algorithm/ranges_reverse.md
+++ b/reference/algorithm/ranges_reverse.md
@@ -30,9 +30,6 @@ namespace std::ranges {
 * (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
-## 要件
-`*first` は `Swappable` でなければならない
-
 
 ## 効果
 0 以上 `(last - first) / 2` 未満の整数 `i` について、[`iter_swap`](iter_swap.md)`(first + i, (last - i) - 1)` を行う
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>upper_bound -- 要件の説明を修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_upper_bound.html"/>
      <id>89b87ded2e36b3d0e1c7d98dff6f275bcf7cb320:reference/algorithm/ranges_upper_bound.md</id>
      <updated>2022-03-22T02:15:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_upper_bound.md b/reference/algorithm/ranges_upper_bound.md
index 775b27972..37d48b82a 100644
--- a/reference/algorithm/ranges_upper_bound.md
+++ b/reference/algorithm/ranges_upper_bound.md
@@ -47,10 +47,8 @@ namespace std::ranges {
 
 
 ## 備考
-- 本関数は、本質的に C++11 で追加された [`partition_point`](partition_point.md) と等価である。  
-	具体的には、[`partition_point`](partition_point.md)`(first, last, [value](const T&amp;amp; e) { return !bool(value &amp;lt; e); })`、あるいは、[`partition_point`](partition_point.md)`(first, last, [value, comp](const T&amp;amp; e) { return !bool(comp(value, e)); })` とすることで等価の結果が得られる。
-- 本関数の要件は、上記の通り C++03 までの方が C++11 よりも厳しい。  
-	しかし、本アルゴリズムの特性上、処理系が C++03 までにしか準拠していない場合でも、昇順に並んでいなくても正常に動作する可能性は高いものと思われる。
+- 本関数は、本質的に [`partition_point`](ranges_partition_point.md) と等価である。  
+	具体的には、[`partition_point`](ranges_partition_point.md)`(first, last, [value](const T&amp;amp; e) { return !bool(value &amp;lt; e); })`、あるいは、[`partition_point`](ranges_partition_point.md)`(first, last, [value, comp](const T&amp;amp; e) { return !bool(comp(value, e)); })` とすることで等価の結果が得られる。
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>remove_copy_if -- リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_remove_copy_if.html"/>
      <id>5109e928f35e46255d7377887e1b42c5225d54ed:reference/algorithm/ranges_remove_copy_if.md</id>
      <updated>2022-03-22T02:09:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_remove_copy_if.md b/reference/algorithm/ranges_remove_copy_if.md
index 5a9362a48..65ddfde49 100644
--- a/reference/algorithm/ranges_remove_copy_if.md
+++ b/reference/algorithm/ranges_remove_copy_if.md
@@ -26,7 +26,7 @@ namespace std::ranges {
 * indirect_unary_predicate[link /reference/iterator/indirect_unary_predicate.md]
 * projected[link /reference/iterator/projected.md]
 * indirectly_copyable[link /reference/iterator/indirectly_copyable.md]
-* remove_copy_result[link ranges_in_out_result.md]
+* remove_copy_if_result[link ranges_in_out_result.md]
 * input_range[link /reference/ranges/input_range.md]
 * iterator_t[link /reference/ranges/iterator_t.md]
 * borrowed_iterator_t[link /reference/ranges/borrowed_iterator_t.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>adjacent_find -- 概要を更新 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_adjacent_find.html"/>
      <id>daac47a8029f5fb2925d82fe4dcbf98056f2b16b:reference/algorithm/ranges_adjacent_find.md</id>
      <updated>2022-03-22T00:56:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_adjacent_find.md b/reference/algorithm/ranges_adjacent_find.md
index 7121bee48..2261d308b 100644
--- a/reference/algorithm/ranges_adjacent_find.md
+++ b/reference/algorithm/ranges_adjacent_find.md
@@ -27,6 +27,9 @@ namespace std::ranges {
 ## 概要
 隣接する要素で条件を満たしている最初の要素を検索する。
 
+* (1): イテレータペアで範囲を指定する
+* (2): 範囲を直接指定する
+
 
 ## 戻り値
 `[first,last)` 内にあるイテレータ i について、[`invoke`](/reference/functional/invoke.md)`(pred, `[`invoke`](/reference/functional/invoke.md)`(proj, *i), `[`invoke`](/reference/functional/invoke.md)`(proj, *(i + 1))) != false` であるような最初のイテレータを返す。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>all_of -- 概要を更新 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_all_of.html"/>
      <id>daac47a8029f5fb2925d82fe4dcbf98056f2b16b:reference/algorithm/ranges_all_of.md</id>
      <updated>2022-03-22T00:56:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_all_of.md b/reference/algorithm/ranges_all_of.md
index 21cda2a60..730b223ea 100644
--- a/reference/algorithm/ranges_all_of.md
+++ b/reference/algorithm/ranges_all_of.md
@@ -23,6 +23,9 @@ namespace std::ranges {
 ## 概要
 範囲の全ての要素が条件を満たすかを判定する。
 
+* (1): イテレータペアで範囲を指定する
+* (2): 範囲を直接指定する
+
 ## テンプレートパラメータ制約
 - (1):
     - `I`が[`input_iterator`](/reference/iterator/input_iterator.md)である
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>any_of -- 概要を更新 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_any_of.html"/>
      <id>daac47a8029f5fb2925d82fe4dcbf98056f2b16b:reference/algorithm/ranges_any_of.md</id>
      <updated>2022-03-22T00:56:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_any_of.md b/reference/algorithm/ranges_any_of.md
index a2b6ae1e0..ec433feda 100644
--- a/reference/algorithm/ranges_any_of.md
+++ b/reference/algorithm/ranges_any_of.md
@@ -23,6 +23,9 @@ namespace std::ranges {
 ## 概要
 範囲のいずれかの要素が条件を満たすかを判定する。
 
+* (1): イテレータペアで範囲を指定する
+* (2): 範囲を直接指定する
+
 ## テンプレートパラメータ制約
 - (1):
     - `I`が[`input_iterator`](/reference/iterator/input_iterator.md)である
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>count -- 概要を更新 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_count.html"/>
      <id>daac47a8029f5fb2925d82fe4dcbf98056f2b16b:reference/algorithm/ranges_count.md</id>
      <updated>2022-03-22T00:56:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_count.md b/reference/algorithm/ranges_count.md
index 0f31af4b6..49d338d93 100644
--- a/reference/algorithm/ranges_count.md
+++ b/reference/algorithm/ranges_count.md
@@ -29,6 +29,9 @@ namespace std::ranges {
 ## 概要
 指定された値と等値な要素の数を数える。
 
+* (1): イテレータペアで範囲を指定する
+* (2): 範囲を直接指定する
+
 ## テンプレートパラメータ制約
 - (1):
     - `I`が[`input_iterator`](/reference/iterator/input_iterator.md)である
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>count_if -- 概要を更新 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_count_if.html"/>
      <id>daac47a8029f5fb2925d82fe4dcbf98056f2b16b:reference/algorithm/ranges_count_if.md</id>
      <updated>2022-03-22T00:56:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_count_if.md b/reference/algorithm/ranges_count_if.md
index 593e963f4..2cf414f54 100644
--- a/reference/algorithm/ranges_count_if.md
+++ b/reference/algorithm/ranges_count_if.md
@@ -27,6 +27,9 @@ namespace std::ranges {
 ## 概要
 条件を満たしている要素の数を数える。
 
+* (1): イテレータペアで範囲を指定する
+* (2): 範囲を直接指定する
+
 ## テンプレートパラメータ制約
 - (1):
     - `I`が[`input_iterator`](/reference/iterator/input_iterator.md)である
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ends_with -- 概要を更新 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_ends_with.html"/>
      <id>daac47a8029f5fb2925d82fe4dcbf98056f2b16b:reference/algorithm/ranges_ends_with.md</id>
      <updated>2022-03-22T00:56:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_ends_with.md b/reference/algorithm/ranges_ends_with.md
index 06fa0976c..99ea4bd30 100644
--- a/reference/algorithm/ranges_ends_with.md
+++ b/reference/algorithm/ranges_ends_with.md
@@ -34,6 +34,9 @@ namespace std::ranges {
 ## 概要
 シーケンスの末尾が指定されたシーケンスと一致するかを調べる
 
+* (1): イテレータペアで範囲を指定する
+* (2): 範囲を直接指定する
+
 ## 戻り値
 
 * (1): 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>equal -- 概要を更新 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_equal.html"/>
      <id>daac47a8029f5fb2925d82fe4dcbf98056f2b16b:reference/algorithm/ranges_equal.md</id>
      <updated>2022-03-22T00:56:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_equal.md b/reference/algorithm/ranges_equal.md
index 9516f0940..13b23e4d8 100644
--- a/reference/algorithm/ranges_equal.md
+++ b/reference/algorithm/ranges_equal.md
@@ -30,6 +30,9 @@ namespace std::ranges {
 ## 概要
 2つの範囲を等値比較する。
 
+* (1): イテレータペアで範囲を指定する
+* (2): 範囲を直接指定する
+
 2つの範囲の要素数および各要素が等値であった場合、`true`を返す。
 
 ## 戻り値
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>find -- 概要を更新 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_find.html"/>
      <id>daac47a8029f5fb2925d82fe4dcbf98056f2b16b:reference/algorithm/ranges_find.md</id>
      <updated>2022-03-22T00:56:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_find.md b/reference/algorithm/ranges_find.md
index 2ae35ee0c..0d20a1b04 100644
--- a/reference/algorithm/ranges_find.md
+++ b/reference/algorithm/ranges_find.md
@@ -28,6 +28,9 @@ namespace std::ranges {
 ## 概要
 指定された値を検索する。
 
+* (1): イテレータペアで範囲を指定する
+* (2): 範囲を直接指定する
+
 
 ## 戻り値
 `[first,last)` あるいは `r` 内のイテレータ i について、[`invoke`](/reference/functional/invoke.md)`(proj, *i) == value` であるような最初のイテレータを返す。そのようなイテレータが見つからなかった場合は `last` を返す。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>find_end -- 概要を更新 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_find_end.html"/>
      <id>daac47a8029f5fb2925d82fe4dcbf98056f2b16b:reference/algorithm/ranges_find_end.md</id>
      <updated>2022-03-22T00:56:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_find_end.md b/reference/algorithm/ranges_find_end.md
index cf9fc0014..fb67c4655 100644
--- a/reference/algorithm/ranges_find_end.md
+++ b/reference/algorithm/ranges_find_end.md
@@ -19,6 +19,9 @@ namespace std::ranges {
 ## 概要
 範囲の中から、特定のサブシーケンスを検索する。
 
+* (1): イテレータペアで範囲を指定する
+* (2): 範囲を直接指定する
+
 
 ## 戻り値
 - (1): `[first1,last1 - (last2 - first2))` 内のイテレータ `i` があるとき、0 以上 `last2 - first2` 未満の全ての整数 `n` について、それぞれ `*(i + n) == *(first2 + n)` もしくは `invoke(pred, invoke(proj1, *(i + n)), invoke(proj2, *(first2 + n)))) != false` であるようなサブシーケンスを探し、見つかった **最後の** サブシーケンス`{i, i + (i == last1 ? 0 : last2 - first2)}`を返す。そのようなイテレータが見つからない、もしくは `[first2,last2)` が空である場合は `{last1, last1}` を返す。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>find_first_of -- 概要を更新 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_find_first_of.html"/>
      <id>daac47a8029f5fb2925d82fe4dcbf98056f2b16b:reference/algorithm/ranges_find_first_of.md</id>
      <updated>2022-03-22T00:56:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_find_first_of.md b/reference/algorithm/ranges_find_first_of.md
index 2e2736939..c71d9979b 100644
--- a/reference/algorithm/ranges_find_first_of.md
+++ b/reference/algorithm/ranges_find_first_of.md
@@ -29,6 +29,9 @@ namespace std::ranges {
 ## 概要
 ある集合の1つとマッチする最初の要素を検索する。
 
+* (1): イテレータペアで範囲を指定する
+* (2): 範囲を直接指定する
+
 
 ## 戻り値
 `[first1,last1 - (last2 - first2))` 内のイテレータ `i` があるとき、`[first2,last2)` 内のイテレータ `j` について、どれかが [`invoke`](/reference/functional/invoke.md)`(pred, `[`invoke`](/reference/functional/invoke.md)`(proj1, *i), `[`invoke`](/reference/functional/invoke.md)`(proj2, *j)) == true` であるような最初のイテレータを返す。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>find_if -- 概要を更新 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_find_if.html"/>
      <id>daac47a8029f5fb2925d82fe4dcbf98056f2b16b:reference/algorithm/ranges_find_if.md</id>
      <updated>2022-03-22T00:56:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_find_if.md b/reference/algorithm/ranges_find_if.md
index a041dbb74..97cc69aee 100644
--- a/reference/algorithm/ranges_find_if.md
+++ b/reference/algorithm/ranges_find_if.md
@@ -25,6 +25,9 @@ namespace std::ranges {
 ## 概要
 範囲の中から、指定された条件を満たす最初の要素を検索する。
 
+* (1): イテレータペアで範囲を指定する
+* (2): 範囲を直接指定する
+
 
 ## 戻り値
 `[first,last)` あるいは `r` 内のイテレータ `i` について、[`invoke`](/reference/functional/invoke.md)`(pred, `[`invoke`](/reference/functional/invoke.md)`(proj, *i)) != false` である最初のイテレータを返す。そのようなイテレータが見つからなかった場合は `last` を返す。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>find_if_not -- 概要を更新 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_find_if_not.html"/>
      <id>daac47a8029f5fb2925d82fe4dcbf98056f2b16b:reference/algorithm/ranges_find_if_not.md</id>
      <updated>2022-03-22T00:56:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_find_if_not.md b/reference/algorithm/ranges_find_if_not.md
index 5be9d90da..5423c1f33 100644
--- a/reference/algorithm/ranges_find_if_not.md
+++ b/reference/algorithm/ranges_find_if_not.md
@@ -25,6 +25,9 @@ namespace std::ranges {
 ## 概要
 範囲の中から、指定された条件を満たさない最初の要素を検索する。
 
+* (1): イテレータペアで範囲を指定する
+* (2): 範囲を直接指定する
+
 
 ## 戻り値
 `[first,last)` あるいは `r` 内のイテレータ `i` について、[`invoke`](/reference/functional/invoke.md)`(pred, `[`invoke`](/reference/functional/invoke.md)`(proj, *i)) == false` である最初のイテレータを返す。そのようなイテレータが見つからなかった場合は `last` を返す。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>for_each -- 概要を更新 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_for_each.html"/>
      <id>daac47a8029f5fb2925d82fe4dcbf98056f2b16b:reference/algorithm/ranges_for_each.md</id>
      <updated>2022-03-22T00:56:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_for_each.md b/reference/algorithm/ranges_for_each.md
index 6100702e2..85795f2be 100644
--- a/reference/algorithm/ranges_for_each.md
+++ b/reference/algorithm/ranges_for_each.md
@@ -27,6 +27,9 @@ namespace std::ranges {
 ## 概要
 範囲の全ての要素に、指定された関数を適用する。
 
+* (1): イテレータペアで範囲を指定する
+* (2): 範囲を直接指定する
+
 ## テンプレートパラメータ制約
 - (1):
     - `I`が[`input_iterator`](/reference/iterator/input_iterator.md)である
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>none_of -- 概要を更新 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_none_of.html"/>
      <id>daac47a8029f5fb2925d82fe4dcbf98056f2b16b:reference/algorithm/ranges_none_of.md</id>
      <updated>2022-03-22T00:56:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_none_of.md b/reference/algorithm/ranges_none_of.md
index 66f1da921..28fa19168 100644
--- a/reference/algorithm/ranges_none_of.md
+++ b/reference/algorithm/ranges_none_of.md
@@ -23,6 +23,9 @@ namespace std::ranges {
 ## 概要
 範囲の全ての要素が条件を満たさないかを判定する。
 
+* (1): イテレータペアで範囲を指定する
+* (2): 範囲を直接指定する
+
 ## テンプレートパラメータ制約
 - (1):
     - `I`が[`input_iterator`](/reference/iterator/input_iterator.md)である
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>search -- 概要を更新 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_search.html"/>
      <id>daac47a8029f5fb2925d82fe4dcbf98056f2b16b:reference/algorithm/ranges_search.md</id>
      <updated>2022-03-22T00:56:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_search.md b/reference/algorithm/ranges_search.md
index 2ec8cb3cd..3d474d81c 100644
--- a/reference/algorithm/ranges_search.md
+++ b/reference/algorithm/ranges_search.md
@@ -29,6 +29,9 @@ namespace std::ranges {
 ## 概要
 あるシーケンスの中から、特定のサブシーケンスを探す
 
+* (1): イテレータペアで範囲を指定する
+* (2): 範囲を直接指定する
+
 ## 戻り値
 - (1) :
     - `[first1,last1 - (last2 - first2))` 内のイテレータ `i` があるとき、0 以上 `last2 - first2` 未満の整数 `n` について、それぞれ [`invoke`](/reference/functional/invoke.md)`(pred, `[`invoke`](/reference/functional/invoke.md)`(proj1, *(i + n)), `[`invoke`](/reference/functional/invoke.md)`(proj2, *(first2 + n)))` であるようなサブシーケンスを探し、見つかった最初のサブシーケンスを返す。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>search_n -- 概要を更新 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_search_n.html"/>
      <id>daac47a8029f5fb2925d82fe4dcbf98056f2b16b:reference/algorithm/ranges_search_n.md</id>
      <updated>2022-03-22T00:56:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_search_n.md b/reference/algorithm/ranges_search_n.md
index 429eb1fac..6ccb4346b 100644
--- a/reference/algorithm/ranges_search_n.md
+++ b/reference/algorithm/ranges_search_n.md
@@ -30,6 +30,9 @@ namespace std::ranges {]
 ## 概要
 あるシーケンスの中から、指定の要素が連続するサブシーケンスを探す。
 
+* (1): イテレータペアで範囲を指定する
+* (2): 範囲を直接指定する
+
 ## 戻り値
 `[first,last-count)` 内のイテレータ `i` があるとき、0 以上 `count` 未満の整数 `n` について、それぞれ [`invoke`](/reference/functional/invoke.md)`(pred, `[`invoke`](/reference/functional/invoke.md)`(proj, *(i + n)), value)` であるようなサブシーケンスを探し、見つかった最初のサブシーケンスを返す。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>starts_with -- 概要を更新 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_starts_with.html"/>
      <id>daac47a8029f5fb2925d82fe4dcbf98056f2b16b:reference/algorithm/ranges_starts_with.md</id>
      <updated>2022-03-22T00:56:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_starts_with.md b/reference/algorithm/ranges_starts_with.md
index a0a817698..2db8929a4 100644
--- a/reference/algorithm/ranges_starts_with.md
+++ b/reference/algorithm/ranges_starts_with.md
@@ -27,6 +27,9 @@ namespace std::ranges {
 ## 概要
 シーケンスの先頭が指定されたシーケンスと一致するかを調べる
 
+* (1): イテレータペアで範囲を指定する
+* (2): 範囲を直接指定する
+
 ## 戻り値
 
 [`ranges::mismatch`](ranges_mismatch.md)`(`[`std::move`](/reference/utility/move.md)`(first1), last1, `[`std::move`](/reference/utility/move.md)`(first2), last2, pred, proj1, proj2).in2 == last2`
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
</feed>
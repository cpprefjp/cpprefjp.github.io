<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2023-04-05T16:27:23.230078</updated>
  <id>1763cc97-745f-4ad6-8b1a-0a2a9cd46168</id>

  
    <entry>
      <title>repeat_view -- Merge pull request #1138 from cupro29/patch-1</title>
      <link href="https://cpprefjp.github.io/reference/ranges/repeat_view.html"/>
      <id>61ffde047a3e14ccab85a79f954e28db2930405e:reference/ranges/repeat_view.md</id>
      <updated>2023-04-06T01:22:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/repeat_view.md b/reference/ranges/repeat_view.md
index 214318809..0f2af5d76 100644
--- a/reference/ranges/repeat_view.md
+++ b/reference/ranges/repeat_view.md
@@ -40,8 +40,8 @@ namespace std::ranges {
 - (1) `Bound = unreachable_sentinel_t` ではない場合
 
 ## 効果
-- 式`views::repear(E)`の効果は`repeat_view(E)`と等しい。
-- 式`views::repear(E, F)`の効果は`repeat_view(E, F)`と等しい。
+- 式`views::repeat(E)`の効果は`repeat_view(E)`と等しい。
+- 式`views::repeat(E, F)`の効果は`repeat_view(E, F)`と等しい。
 
 ## メンバ関数
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>repeat_view -- fix typo</title>
      <link href="https://cpprefjp.github.io/reference/ranges/repeat_view.html"/>
      <id>38aa278067c5ee2a63926bd41401b57d0ab27eb5:reference/ranges/repeat_view.md</id>
      <updated>2023-04-06T01:04:48+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/repeat_view.md b/reference/ranges/repeat_view.md
index 214318809..0f2af5d76 100644
--- a/reference/ranges/repeat_view.md
+++ b/reference/ranges/repeat_view.md
@@ -40,8 +40,8 @@ namespace std::ranges {
 - (1) `Bound = unreachable_sentinel_t` ではない場合
 
 ## 効果
-- 式`views::repear(E)`の効果は`repeat_view(E)`と等しい。
-- 式`views::repear(E, F)`の効果は`repeat_view(E, F)`と等しい。
+- 式`views::repeat(E)`の効果は`repeat_view(E)`と等しい。
+- 式`views::repeat(E, F)`の効果は`repeat_view(E, F)`と等しい。
 
 ## メンバ関数
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Bando Masafumi</name>
        <email>63996969+cupro29@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>advance -- arrange relations in ranges::next/prev/advance</title>
      <link href="https://cpprefjp.github.io/reference/iterator/ranges_advance.html"/>
      <id>ab42c56c60f7caf7c809277e1b204427eb790376:reference/iterator/ranges_advance.md</id>
      <updated>2023-04-01T02:02:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/ranges_advance.md b/reference/iterator/ranges_advance.md
index 9b67945fb..781d03c0e 100644
--- a/reference/iterator/ranges_advance.md
+++ b/reference/iterator/ranges_advance.md
@@ -127,9 +127,10 @@ diff : 2
 | 名前                | 説明                              |
 |---------------------|-----------------------------------|
 | [`next()`](next.md) | `n`回前方に進めたイテレータを返す |
-| [`advance()`](advance.md) | `n`回イテレータを進める       |
+| [`prev()`](prev.md) | `n`回後方に進めたイテレータを返す |
+| [`advance()`](advance.md) | `n`回イテレータを進める |
 | [`ranges::next()`](ranges_next.md) | `n`回あるいは`bound`まで前方に進めたイテレータを返す |
-| [`ranges::advance()`](/reference/iterator/ranges_advance.md) |`n`回あるいは`boundまで`イテレータを進める  |
+| [`rangse::prev()`](ranges_prev.md) | `n`回後方に進めたイテレータを返す |
 
 ## 参照
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>next -- arrange relations in ranges::next/prev/advance</title>
      <link href="https://cpprefjp.github.io/reference/iterator/ranges_next.html"/>
      <id>ab42c56c60f7caf7c809277e1b204427eb790376:reference/iterator/ranges_next.md</id>
      <updated>2023-04-01T02:02:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/ranges_next.md b/reference/iterator/ranges_next.md
index a99a74670..3062d963d 100644
--- a/reference/iterator/ranges_next.md
+++ b/reference/iterator/ranges_next.md
@@ -140,10 +140,11 @@ int main() {
 
 | 名前                | 説明                              |
 |---------------------|-----------------------------------|
+| [`next()`](next.md) | `n`回前方に進めたイテレータを返す |
 | [`prev()`](prev.md) | `n`回後方に進めたイテレータを返す |
-| [`advance()`](advance.md) | `n`回イテレータを進める       |
+| [`advance()`](advance.md) | `n`回イテレータを進める |
 | [`rangse::prev()`](ranges_prev.md) | `n`回後方に進めたイテレータを返す |
-| [`ranges::advance()`](/reference/iterator/ranges_advance.md) |`n`回あるいは`boundまで`イテレータを進める  |
+| [`ranges::advance()`](ranges_advance.md) |`n`回あるいは`boundまで`イテレータを進める |
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>prev -- arrange relations in ranges::next/prev/advance</title>
      <link href="https://cpprefjp.github.io/reference/iterator/ranges_prev.html"/>
      <id>ab42c56c60f7caf7c809277e1b204427eb790376:reference/iterator/ranges_prev.md</id>
      <updated>2023-04-01T02:02:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/ranges_prev.md b/reference/iterator/ranges_prev.md
index 296a2da2b..e5be4ac5d 100644
--- a/reference/iterator/ranges_prev.md
+++ b/reference/iterator/ranges_prev.md
@@ -122,10 +122,11 @@ int main() {
 
 | 名前                | 説明                              |
 |---------------------|-----------------------------------|
+| [`next()`](next.md) | `n`回前方に進めたイテレータを返す |
 | [`prev()`](prev.md) | `n`回後方に進めたイテレータを返す |
-| [`advance()`](advance.md) | `n`回イテレータを進める       |
-| [`rangse::prev()`](ranges_prev.md) | `n`回後方に進めたイテレータを返す |
-| [`ranges::advance()`](/reference/iterator/ranges_advance.md) |`n`回あるいは`boundまで`イテレータを進める  |
+| [`advance()`](advance.md) | `n`回イテレータを進める |
+| [`ranges::next()`](ranges_next.md) | `n`回あるいは`bound`まで前方に進めたイテレータを返す |
+| [`ranges::advance()`](ranges_advance.md) |`n`回あるいは`boundまで`イテレータを進める |
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>return_temporary_buffer -- set link and remove link to own page</title>
      <link href="https://cpprefjp.github.io/reference/memory/return_temporary_buffer.html"/>
      <id>5e61ff5c823cc319809c329792c646f2744e85e1:reference/memory/return_temporary_buffer.md</id>
      <updated>2023-04-01T01:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/memory/return_temporary_buffer.md b/reference/memory/return_temporary_buffer.md
index 9483b9be3..a3e6448f9 100644
--- a/reference/memory/return_temporary_buffer.md
+++ b/reference/memory/return_temporary_buffer.md
@@ -34,7 +34,7 @@ void return_temporary_buffer(T* p);
 
 
 ## 非推奨・削除の詳細
-`std::get_temporary_buffer()`関数と[`std::return_temporary_buffer()`](return_temporary_buffer.md)関数は、関数内での一時的なメモリ確保のために、最適化されたメモリ確保の仕組みを提供することを期待して定義されたが、実際にはどの実装も特別なメモリ確保を行わず、そのために使われてこなかった。
+[`get_temporary_buffer()`](get_temporary_buffer.md)関数と`std::return_temporary_buffer()`関数は、関数内での一時的なメモリ確保のために、最適化されたメモリ確保の仕組みを提供することを期待して定義されたが、実際にはどの実装も特別なメモリ確保を行わず、そのために使われてこなかった。
 
 将来的にスタックからメモリ確保をする仕組みが検討されているが、これらの関数は設計として例外安全性やRAIIといったものが考慮されていない。スタックからメモリ確保する機能が入ったとしても、これらの関数の内部を改善することはできないと判断され、非推奨となった。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>compare_strong_order_fallback -- fix to correct ling</title>
      <link href="https://cpprefjp.github.io/reference/compare/compare_strong_order_fallback.html"/>
      <id>f09cd879a500c63e43eb84f00f7f4704652c9efa:reference/compare/compare_strong_order_fallback.md</id>
      <updated>2023-04-01T01:45:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/compare/compare_strong_order_fallback.md b/reference/compare/compare_strong_order_fallback.md
index b78d7ca36..29fcadee3 100644
--- a/reference/compare/compare_strong_order_fallback.md
+++ b/reference/compare/compare_strong_order_fallback.md
@@ -63,10 +63,10 @@ namespace std {
 上記「効果」節2,3のケースでは、ユーザー定義の`&amp;lt; ==`演算子を定義、もしくは`strong_order()`へアダプトしておくことによって実行される比較をカスタマイズすることができる。
 
 1. --
-2. 引数`a, b`の型`T`を[`strong_order`](weak_order.md)にアダプトしておく。
+2. 引数`a, b`の型`T`を[`strong_order`](strong_order.md)にアダプトしておく。
 3. 引数`a, b`の型`T`に対して、使用可能な`&amp;lt; ==`演算子を定義しておく。
 
-ただし、どのケースにおいてもその戻り値型は[`strong_ordering`](weak_ordering.md)に変換可能でなければならない。
+ただし、どのケースにおいてもその戻り値型は[`strong_ordering`](strong_ordering.md)に変換可能でなければならない。
 
 ## 例
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>partial_order -- fix to correct ling</title>
      <link href="https://cpprefjp.github.io/reference/compare/partial_order.html"/>
      <id>f09cd879a500c63e43eb84f00f7f4704652c9efa:reference/compare/partial_order.md</id>
      <updated>2023-04-01T01:45:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/compare/partial_order.md b/reference/compare/partial_order.md
index d591f65e0..283d85389 100644
--- a/reference/compare/partial_order.md
+++ b/reference/compare/partial_order.md
@@ -66,7 +66,7 @@ namespace std {
 3. 引数`a, b`の型`T`に対して、使用可能な`&amp;lt;=&amp;gt;`演算子を定義しておく。
 4. 引数`a, b`の型`T`を[`weak_order`](weak_order.md)にアダプトしておく。
 
-ただし、どのケースにおいてもその戻り値型は[`partial_ordering`](weak_ordering.md)に変換可能でなければならない。
+ただし、どのケースにおいてもその戻り値型は[`partial_ordering`](partial_ordering.md)に変換可能でなければならない。
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>weak_order -- fix to correct ling</title>
      <link href="https://cpprefjp.github.io/reference/compare/weak_order.html"/>
      <id>f09cd879a500c63e43eb84f00f7f4704652c9efa:reference/compare/weak_order.md</id>
      <updated>2023-04-01T01:45:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/compare/weak_order.md b/reference/compare/weak_order.md
index 4a7987932..6a49ba1f9 100644
--- a/reference/compare/weak_order.md
+++ b/reference/compare/weak_order.md
@@ -25,7 +25,7 @@ namespace std {
 
 1. [`decay`](/reference/type_traits/decay.md)を通した`a, b`の型が異なる場合、呼び出しは不適格（コンパイルエラー）
 
-2. `std::weak_order`（本関数オブジェクト）の宣言を含まないコンテキストで、[`weak_ordering`](strong_ordering.md)`(weak_order(a, b))`が呼び出し可能ならば`weak_ordering(weak_order(a, b))`
+2. `std::weak_order`（本関数オブジェクト）の宣言を含まないコンテキストで、[`weak_ordering`](weak_ordering.md)`(weak_order(a, b))`が呼び出し可能ならば`weak_ordering(weak_order(a, b))`
 
 3. [`decay`](/reference/type_traits/decay.md)を通した`a, b`の型`T`が浮動小数点型の場合、`T`の組み込みの比較演算子および[`strong_order`](strong_order.md)による順序と一貫する[`weak_ordering`](weak_ordering.md)の値を返す。  
    さらに、[`numeric_limits&amp;lt;T&amp;gt;::is_iec559`](/reference/limits/numeric_limits/is_iec559.md)` == true`の場合、追加で以下の同値類の順序に従った順序付けを行う。
@@ -40,9 +40,9 @@ namespace std {
     8. `+Inf`
     9. 全ての`+NaN`
 
-4. [`weak_ordering`](strong_ordering.md)`(a &amp;lt;=&amp;gt; b)`が呼び出し可能ならば`weak_ordering(a &amp;lt;=&amp;gt; b)`
+4. [`weak_ordering`](weak_ordering.md)`(a &amp;lt;=&amp;gt; b)`が呼び出し可能ならば`weak_ordering(a &amp;lt;=&amp;gt; b)`
 
-5. [`weak_ordering(`](strong_ordering.md)[`strong_order`](strong_order.md)`(a, b))`が呼び出し可能ならば`weak_ordering(strong_order(a, b))`
+5. [`weak_ordering(`](weak_ordering.md)[`strong_order`](strong_order.md)`(a, b))`が呼び出し可能ならば`weak_ordering(strong_order(a, b))`
 
 6. それ以外の場合、呼び出しは不適格。
 
@@ -82,7 +82,7 @@ namespace std {
 4. 引数`a, b`の型`T`に対して、使用可能な`&amp;lt;=&amp;gt;`演算子を定義しておく。
 5. 引数`a, b`の型`T`を[`strong_order`](strong_order.md)にアダプトしておく。
 
-ただし、どのケースにおいてもその戻り値型は[`weak_ordering`](strong_ordering.md)に変換可能でなければならない。
+ただし、どのケースにおいてもその戻り値型は[`weak_ordering`](weak_ordering.md)に変換可能でなければならない。
 
 
 ## 備考
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>rend -- fix to correct ling</title>
      <link href="https://cpprefjp.github.io/reference/deque/deque/rend.html"/>
      <id>f09cd879a500c63e43eb84f00f7f4704652c9efa:reference/deque/deque/rend.md</id>
      <updated>2023-04-01T01:45:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/deque/deque/rend.md b/reference/deque/deque/rend.md
index 1b36f2879..7b0beb878 100644
--- a/reference/deque/deque/rend.md
+++ b/reference/deque/deque/rend.md
@@ -68,10 +68,10 @@ int main()
 
 | 名前 | 説明 |
 |--------------------------|--------------------------------------|
-| [`rbegin`](rbegin.md)  | 末尾要素を指す逆イテレータを取得する |
-| [`crbegin`](cbegin.md) | 末尾要素を指す読み取り専用逆イテレータを取得する |
-| [`crend`](crend.md)    | 先頭要素の前を指す読み取り専用逆イテレータを取得する |
-| [`begin`](begin.md)    | 先頭要素を指すイテレータの取得する |
-| [`end`](end.md)        | 末尾要素の次を指すイテレータを取得する |
+| [`rbegin`](rbegin.md)   | 末尾要素を指す逆イテレータを取得する |
+| [`crbegin`](crbegin.md) | 末尾要素を指す読み取り専用逆イテレータを取得する |
+| [`crend`](crend.md)     | 先頭要素の前を指す読み取り専用逆イテレータを取得する |
+| [`begin`](begin.md)     | 先頭要素を指すイテレータの取得する |
+| [`end`](end.md)         | 末尾要素の次を指すイテレータを取得する |
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>future -- fix to correct ling</title>
      <link href="https://cpprefjp.github.io/reference/future.html"/>
      <id>f09cd879a500c63e43eb84f00f7f4704652c9efa:reference/future.md</id>
      <updated>2023-04-01T01:45:46+09:00</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;future&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;future&lt;/span&gt;&lt;span class=&#34;cpp cpp11&#34; title=&#34;C++11で追加&#34;&gt;(C++11)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;future&amp;gt;&lt;/code&gt;ヘッダでは、並行プログラミングのためのデザインパターンのひとつであるFutureパターンに関するクラス・関数を提供する。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/future/future.html&#34;&gt;future&lt;/a&gt;&lt;/code&gt;はデータの準備ができるまで待機してからデータを読み取る。&lt;br /&gt;
&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/future/promise.html&#34;&gt;promise&lt;/a&gt;&lt;/code&gt;はデータを書き込み、準備ができたことを&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/future/future.html&#34;&gt;future&lt;/a&gt;&lt;/code&gt;に通知する。&lt;br /&gt;
&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/future/packaged_task.html&#34;&gt;packaged_task&lt;/a&gt;&lt;/code&gt;は関数の戻り値をデータの書き込みと見なし、関数終了時に&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/future/future.html&#34;&gt;future&lt;/a&gt;&lt;/code&gt;に通知する。さらにこのパターンを容易に扱うための&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/future/async.html&#34;&gt;async()&lt;/a&gt;&lt;/code&gt;関数を提供する。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/future/future_errc.html&#34;&gt;future_errc&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;future&lt;/code&gt;のエラー値(enum class)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/future/launch.html&#34;&gt;launch&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;async()&lt;/code&gt;関数の実行ポリシー(enum class)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/future/future_status.html&#34;&gt;future_status&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;future&lt;/code&gt;の状態値(enum class)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/future/is_error_code_enum.html&#34;&gt;is_error_code_enum&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;future_errc&lt;/code&gt;をエラーコードとして扱うための特殊化(class template)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/future/make_error_code.html&#34;&gt;make_error_code&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;future_errc&lt;/code&gt;から&lt;code&gt;error_code&lt;/code&gt;を生成する(function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/future/make_error_condition.html&#34;&gt;make_error_condition&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;future_errc&lt;/code&gt;から&lt;code&gt;error_condition&lt;/code&gt;を生成する(function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/future/future_category.html&#34;&gt;future_category&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;future_errc&lt;/code&gt;のためのエラーカテゴリを取得する(function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/future/future_error.html&#34;&gt;future_error&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;future&lt;/code&gt;のエラーに関する例外クラス(class)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/future/promise.html&#34;&gt;promise&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;データを書き込み、データの準備ができたことを通知する(class template)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/future/future.html&#34;&gt;future&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;データの準備ができるまで待機し、データを読み取る(class template)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/future/shared_future.html&#34;&gt;shared_future&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;共有方式の&lt;code&gt;future&lt;/code&gt;(class template)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/future/packaged_task.html&#34;&gt;packaged_task&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;非同期タスクの管理(class template)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/future/async.html&#34;&gt;async&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;処理の非同期実行(function template)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>swap (非メンバ関数) -- fix to correct ling</title>
      <link href="https://cpprefjp.github.io/reference/future/promise/swap_free.html"/>
      <id>f09cd879a500c63e43eb84f00f7f4704652c9efa:reference/future/promise/swap_free.md</id>
      <updated>2023-04-01T01:45:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/future/promise/swap_free.md b/reference/future/promise/swap_free.md
index 71376cc6a..5eb6e9519 100644
--- a/reference/future/promise/swap_free.md
+++ b/reference/future/promise/swap_free.md
@@ -16,7 +16,7 @@ namespace std {
 
 
 ## 効果
-`x.`[`swap`](swap_free.md)`(y)`
+`x.`[`swap`](swap.md)`(y)`
 
 
 ## 戻り値
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>showbase -- fix to correct ling</title>
      <link href="https://cpprefjp.github.io/reference/ios/showbase.html"/>
      <id>f09cd879a500c63e43eb84f00f7f4704652c9efa:reference/ios/showbase.md</id>
      <updated>2023-04-01T01:45:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ios/showbase.md b/reference/ios/showbase.md
index 90af9c256..7713ce33a 100644
--- a/reference/ios/showbase.md
+++ b/reference/ios/showbase.md
@@ -11,7 +11,7 @@ namespace std {
 
 ## 概要
 整数出力時に基数を表すプレフィックスを付与することを指示するマニピュレータ。
-[`hex`](hex.md)や[`oct`](hex.md)と組み合わせると、それぞれ0xおよび0が頭に出力される。
+[`hex`](hex.md)や[`oct`](oct.md)と組み合わせると、それぞれ0xおよび0が頭に出力される。
 ただし、0の場合を除く。
 
 `money_put`など、その他の出力でも効果がある場合がある。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>quiet_NaN -- fix to correct ling</title>
      <link href="https://cpprefjp.github.io/reference/limits/numeric_limits/quiet_nan.html"/>
      <id>f09cd879a500c63e43eb84f00f7f4704652c9efa:reference/limits/numeric_limits/quiet_nan.md</id>
      <updated>2023-04-01T01:45:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/limits/numeric_limits/quiet_nan.md b/reference/limits/numeric_limits/quiet_nan.md
index 39e8cc581..4e16529a8 100644
--- a/reference/limits/numeric_limits/quiet_nan.md
+++ b/reference/limits/numeric_limits/quiet_nan.md
@@ -53,6 +53,6 @@ double : 1.#QNAN
 ```
 
 ## 参照
-* [`numeric_limits::has_quiet_NaN`](quiet_nan.md)
+* [`numeric_limits::has_quiet_NaN`](has_quiet_nan.md)
 * [NANの定義について - ぴょぴょぴょ？ - Linuxとかプログラミングの覚え書き](http://d.hatena.ne.jp/pyopyopyo/20100330/p1)
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>signaling_NaN -- fix to correct ling</title>
      <link href="https://cpprefjp.github.io/reference/limits/numeric_limits/signaling_nan.html"/>
      <id>f09cd879a500c63e43eb84f00f7f4704652c9efa:reference/limits/numeric_limits/signaling_nan.md</id>
      <updated>2023-04-01T01:45:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/limits/numeric_limits/signaling_nan.md b/reference/limits/numeric_limits/signaling_nan.md
index 164aa0d04..bc5488544 100644
--- a/reference/limits/numeric_limits/signaling_nan.md
+++ b/reference/limits/numeric_limits/signaling_nan.md
@@ -51,6 +51,6 @@ double : 1.#QNAN
 ```
 
 ## 参照
-* [`numeric_limits::has_quiet_NaN`](signaling_nan.md)
+* [`numeric_limits::has_quiet_NaN`](has_quiet_nan.md)
 * [NANの定義について - ぴょぴょぴょ？ - Linuxとかプログラミングの覚え書き](http://d.hatena.ne.jp/pyopyopyo/20100330/p1)
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>vprint_nonunicode -- fix to correct ling</title>
      <link href="https://cpprefjp.github.io/reference/ostream/vprint_nonunicode.html"/>
      <id>f09cd879a500c63e43eb84f00f7f4704652c9efa:reference/ostream/vprint_nonunicode.md</id>
      <updated>2023-04-01T01:45:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ostream/vprint_nonunicode.md b/reference/ostream/vprint_nonunicode.md
index bdc2408f3..a2894b7f5 100644
--- a/reference/ostream/vprint_nonunicode.md
+++ b/reference/ostream/vprint_nonunicode.md
@@ -50,7 +50,7 @@ namespace std {
 ## 関連項目
 - [`std::print()`](print.md)
 - [`std::println()`](println.md)
-- [`std::vprint_unicode()`](vprint_nonunicode.md)
+- [`std::vprint_unicode()`](vprint_unicode.md)
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>vprint_nonunicode -- fix to correct ling</title>
      <link href="https://cpprefjp.github.io/reference/print/vprint_nonunicode.html"/>
      <id>f09cd879a500c63e43eb84f00f7f4704652c9efa:reference/print/vprint_nonunicode.md</id>
      <updated>2023-04-01T01:45:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/print/vprint_nonunicode.md b/reference/print/vprint_nonunicode.md
index cc4d0accc..d4d6fe31f 100644
--- a/reference/print/vprint_nonunicode.md
+++ b/reference/print/vprint_nonunicode.md
@@ -60,7 +60,7 @@ namespace std {
 ## 関連項目
 - [`std::print()`](print.md)
 - [`std::println()`](println.md)
-- [`std::vprint_unicode()`](vprint_nonunicode.md)
+- [`std::vprint_unicode()`](vprint_unicode.md)
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>split_view -- fix to correct ling</title>
      <link href="https://cpprefjp.github.io/reference/ranges/split_view.html"/>
      <id>f09cd879a500c63e43eb84f00f7f4704652c9efa:reference/ranges/split_view.md</id>
      <updated>2023-04-01T01:45:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/split_view.md b/reference/ranges/split_view.md
index 488812bdc..f09880d28 100644
--- a/reference/ranges/split_view.md
+++ b/reference/ranges/split_view.md
@@ -51,7 +51,7 @@ namespace std::ranges {
 
 ## テンプレートパラメータ制約
 
-- `V`、`Pattern`が[`view`](view.md)かつ[`forward_range`](input_range.md)
+- `V`、`Pattern`が[`view`](view.md)かつ[`forward_range`](forward_range.md)
 - `V`のイテレータと`Pattern`のイテレータが等値比較可能である
 
 ## 効果
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>current -- fix to correct ling</title>
      <link href="https://cpprefjp.github.io/reference/source_location/source_location/current.html"/>
      <id>f09cd879a500c63e43eb84f00f7f4704652c9efa:reference/source_location/source_location/current.md</id>
      <updated>2023-04-01T01:45:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/source_location/source_location/current.md b/reference/source_location/source_location/current.md
index 0b60e977f..0eb4905fe 100644
--- a/reference/source_location/source_location/current.md
+++ b/reference/source_location/source_location/current.md
@@ -25,7 +25,7 @@ static consteval source_location current() noexcept;
 * [`line()`](line.md)の値は`__LINE__`が表すような行番号であり、1オリジンだが、行番号が不明のときは0になる可能性がある。
 * [`column()`](column.md)の値は行頭からのオフセットを表す処理系定義の値で、1オリジンだが、列番号が不明のときは0になる可能性がある。
 * [`file_name()`](file_name.md)の値は`__FILE__`が表すような現在のファイル名である。
-* [`function_name()`](file_name.md)の値は[`__func__`](/lang/cpp11/func.md)が表すような現在の関数名であり、[`__func__`](/lang/cpp11/func.md)が定義されないような状況では空文字列である。
+* [`function_name()`](function_name.md)の値は[`__func__`](/lang/cpp11/func.md)が表すような現在の関数名であり、[`__func__`](/lang/cpp11/func.md)が定義されないような状況では空文字列である。
 
 その他の方法で呼び出されたときは、未規定の有効な値を返す。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_arithmetic -- fix to correct ling</title>
      <link href="https://cpprefjp.github.io/reference/type_traits/is_arithmetic.html"/>
      <id>f09cd879a500c63e43eb84f00f7f4704652c9efa:reference/type_traits/is_arithmetic.md</id>
      <updated>2023-04-01T01:45:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/type_traits/is_arithmetic.md b/reference/type_traits/is_arithmetic.md
index 5699cf6c9..6a1c56619 100644
--- a/reference/type_traits/is_arithmetic.md
+++ b/reference/type_traits/is_arithmetic.md
@@ -19,7 +19,7 @@ namespace std {
 
 
 ## 効果
-`is_arithmetic`は、型`T`が算術型であるならば[`true_type`](true_type.md)から派生し、そうでなければ[`false_type`](true_type.md)から派生する。
+`is_arithmetic`は、型`T`が算術型であるならば[`true_type`](true_type.md)から派生し、そうでなければ[`false_type`](false_type.md)から派生する。
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_fundamental -- fix to correct ling</title>
      <link href="https://cpprefjp.github.io/reference/type_traits/is_fundamental.html"/>
      <id>f09cd879a500c63e43eb84f00f7f4704652c9efa:reference/type_traits/is_fundamental.md</id>
      <updated>2023-04-01T01:45:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/type_traits/is_fundamental.md b/reference/type_traits/is_fundamental.md
index a0b96545a..fa0c1fe22 100644
--- a/reference/type_traits/is_fundamental.md
+++ b/reference/type_traits/is_fundamental.md
@@ -19,7 +19,7 @@ namespace std {
 
 
 ## 効果
-`is_fundamental`は、型`T`が単純型であるならば[`true_type`](true_type.md)から派生し、そうでなければ[`false_type`](true_type.md)から派生する。
+`is_fundamental`は、型`T`が単純型であるならば[`true_type`](true_type.md)から派生し、そうでなければ[`false_type`](false_type.md)から派生する。
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_object -- fix to correct ling</title>
      <link href="https://cpprefjp.github.io/reference/type_traits/is_object.html"/>
      <id>f09cd879a500c63e43eb84f00f7f4704652c9efa:reference/type_traits/is_object.md</id>
      <updated>2023-04-01T01:45:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/type_traits/is_object.md b/reference/type_traits/is_object.md
index 7a68d5dfd..44607d810 100644
--- a/reference/type_traits/is_object.md
+++ b/reference/type_traits/is_object.md
@@ -19,7 +19,7 @@ namespace std {
 
 
 ## 効果
-`is_object`は、型`T`がオブジェクト型であるならば[`true_type`](true_type.md)から派生し、そうでなければ[`false_type`](true_type.md)から派生する。
+`is_object`は、型`T`がオブジェクト型であるならば[`true_type`](true_type.md)から派生し、そうでなければ[`false_type`](false_type.md)から派生する。
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
</feed>
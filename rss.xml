<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2023-04-06T14:39:30.097206</updated>
  <id>eb905b59-f29f-4c62-91e0-ba6e756772fa</id>

  
    <entry>
      <title>print -- remove #</title>
      <link href="https://cpprefjp.github.io/reference/print/print.html"/>
      <id>663009edf7ef89aacce6d49fdbe7f71cd9705ab1:reference/print/print.md</id>
      <updated>2023-04-06T18:38:48+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/print/print.md b/reference/print/print.md
index 8ce2daf05..d4f5dea23 100644
--- a/reference/print/print.md
+++ b/reference/print/print.md
@@ -108,8 +108,8 @@ Hello 42 World
 
 ### モジュールをインポートする例
 ```cpp example
-#import std;
-#import std.compat;
+import std;
+import std.compat;
 
 int main()
 {
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>I</name>
        <email>1091761+wx257osn2@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>repeat_view -- Merge pull request #1138 from cupro29/patch-1</title>
      <link href="https://cpprefjp.github.io/reference/ranges/repeat_view.html"/>
      <id>61ffde047a3e14ccab85a79f954e28db2930405e:reference/ranges/repeat_view.md</id>
      <updated>2023-04-06T01:22:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/repeat_view.md b/reference/ranges/repeat_view.md
index 214318809..0f2af5d76 100644
--- a/reference/ranges/repeat_view.md
+++ b/reference/ranges/repeat_view.md
@@ -40,8 +40,8 @@ namespace std::ranges {
 - (1) `Bound = unreachable_sentinel_t` ではない場合
 
 ## 効果
-- 式`views::repear(E)`の効果は`repeat_view(E)`と等しい。
-- 式`views::repear(E, F)`の効果は`repeat_view(E, F)`と等しい。
+- 式`views::repeat(E)`の効果は`repeat_view(E)`と等しい。
+- 式`views::repeat(E, F)`の効果は`repeat_view(E, F)`と等しい。
 
 ## メンバ関数
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>repeat_view -- fix typo</title>
      <link href="https://cpprefjp.github.io/reference/ranges/repeat_view.html"/>
      <id>38aa278067c5ee2a63926bd41401b57d0ab27eb5:reference/ranges/repeat_view.md</id>
      <updated>2023-04-06T01:04:48+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/repeat_view.md b/reference/ranges/repeat_view.md
index 214318809..0f2af5d76 100644
--- a/reference/ranges/repeat_view.md
+++ b/reference/ranges/repeat_view.md
@@ -40,8 +40,8 @@ namespace std::ranges {
 - (1) `Bound = unreachable_sentinel_t` ではない場合
 
 ## 効果
-- 式`views::repear(E)`の効果は`repeat_view(E)`と等しい。
-- 式`views::repear(E, F)`の効果は`repeat_view(E, F)`と等しい。
+- 式`views::repeat(E)`の効果は`repeat_view(E)`と等しい。
+- 式`views::repeat(E, F)`の効果は`repeat_view(E, F)`と等しい。
 
 ## メンバ関数
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Bando Masafumi</name>
        <email>63996969+cupro29@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>advance -- arrange relations in ranges::next/prev/advance</title>
      <link href="https://cpprefjp.github.io/reference/iterator/ranges_advance.html"/>
      <id>ab42c56c60f7caf7c809277e1b204427eb790376:reference/iterator/ranges_advance.md</id>
      <updated>2023-04-01T02:02:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/ranges_advance.md b/reference/iterator/ranges_advance.md
index 9b67945fb..781d03c0e 100644
--- a/reference/iterator/ranges_advance.md
+++ b/reference/iterator/ranges_advance.md
@@ -127,9 +127,10 @@ diff : 2
 | 名前                | 説明                              |
 |---------------------|-----------------------------------|
 | [`next()`](next.md) | `n`回前方に進めたイテレータを返す |
-| [`advance()`](advance.md) | `n`回イテレータを進める       |
+| [`prev()`](prev.md) | `n`回後方に進めたイテレータを返す |
+| [`advance()`](advance.md) | `n`回イテレータを進める |
 | [`ranges::next()`](ranges_next.md) | `n`回あるいは`bound`まで前方に進めたイテレータを返す |
-| [`ranges::advance()`](/reference/iterator/ranges_advance.md) |`n`回あるいは`boundまで`イテレータを進める  |
+| [`rangse::prev()`](ranges_prev.md) | `n`回後方に進めたイテレータを返す |
 
 ## 参照
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>next -- arrange relations in ranges::next/prev/advance</title>
      <link href="https://cpprefjp.github.io/reference/iterator/ranges_next.html"/>
      <id>ab42c56c60f7caf7c809277e1b204427eb790376:reference/iterator/ranges_next.md</id>
      <updated>2023-04-01T02:02:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/ranges_next.md b/reference/iterator/ranges_next.md
index a99a74670..3062d963d 100644
--- a/reference/iterator/ranges_next.md
+++ b/reference/iterator/ranges_next.md
@@ -140,10 +140,11 @@ int main() {
 
 | 名前                | 説明                              |
 |---------------------|-----------------------------------|
+| [`next()`](next.md) | `n`回前方に進めたイテレータを返す |
 | [`prev()`](prev.md) | `n`回後方に進めたイテレータを返す |
-| [`advance()`](advance.md) | `n`回イテレータを進める       |
+| [`advance()`](advance.md) | `n`回イテレータを進める |
 | [`rangse::prev()`](ranges_prev.md) | `n`回後方に進めたイテレータを返す |
-| [`ranges::advance()`](/reference/iterator/ranges_advance.md) |`n`回あるいは`boundまで`イテレータを進める  |
+| [`ranges::advance()`](ranges_advance.md) |`n`回あるいは`boundまで`イテレータを進める |
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>prev -- arrange relations in ranges::next/prev/advance</title>
      <link href="https://cpprefjp.github.io/reference/iterator/ranges_prev.html"/>
      <id>ab42c56c60f7caf7c809277e1b204427eb790376:reference/iterator/ranges_prev.md</id>
      <updated>2023-04-01T02:02:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/ranges_prev.md b/reference/iterator/ranges_prev.md
index 296a2da2b..e5be4ac5d 100644
--- a/reference/iterator/ranges_prev.md
+++ b/reference/iterator/ranges_prev.md
@@ -122,10 +122,11 @@ int main() {
 
 | 名前                | 説明                              |
 |---------------------|-----------------------------------|
+| [`next()`](next.md) | `n`回前方に進めたイテレータを返す |
 | [`prev()`](prev.md) | `n`回後方に進めたイテレータを返す |
-| [`advance()`](advance.md) | `n`回イテレータを進める       |
-| [`rangse::prev()`](ranges_prev.md) | `n`回後方に進めたイテレータを返す |
-| [`ranges::advance()`](/reference/iterator/ranges_advance.md) |`n`回あるいは`boundまで`イテレータを進める  |
+| [`advance()`](advance.md) | `n`回イテレータを進める |
+| [`ranges::next()`](ranges_next.md) | `n`回あるいは`bound`まで前方に進めたイテレータを返す |
+| [`ranges::advance()`](ranges_advance.md) |`n`回あるいは`boundまで`イテレータを進める |
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>return_temporary_buffer -- set link and remove link to own page</title>
      <link href="https://cpprefjp.github.io/reference/memory/return_temporary_buffer.html"/>
      <id>5e61ff5c823cc319809c329792c646f2744e85e1:reference/memory/return_temporary_buffer.md</id>
      <updated>2023-04-01T01:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/memory/return_temporary_buffer.md b/reference/memory/return_temporary_buffer.md
index 9483b9be3..a3e6448f9 100644
--- a/reference/memory/return_temporary_buffer.md
+++ b/reference/memory/return_temporary_buffer.md
@@ -34,7 +34,7 @@ void return_temporary_buffer(T* p);
 
 
 ## 非推奨・削除の詳細
-`std::get_temporary_buffer()`関数と[`std::return_temporary_buffer()`](return_temporary_buffer.md)関数は、関数内での一時的なメモリ確保のために、最適化されたメモリ確保の仕組みを提供することを期待して定義されたが、実際にはどの実装も特別なメモリ確保を行わず、そのために使われてこなかった。
+[`get_temporary_buffer()`](get_temporary_buffer.md)関数と`std::return_temporary_buffer()`関数は、関数内での一時的なメモリ確保のために、最適化されたメモリ確保の仕組みを提供することを期待して定義されたが、実際にはどの実装も特別なメモリ確保を行わず、そのために使われてこなかった。
 
 将来的にスタックからメモリ確保をする仕組みが検討されているが、これらの関数は設計として例外安全性やRAIIといったものが考慮されていない。スタックからメモリ確保する機能が入ったとしても、これらの関数の内部を改善することはできないと判断され、非推奨となった。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
</feed>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2024-09-24T04:57:23.410973</updated>
  <id>e9f5ecd3-e2fc-498f-b70c-9d915d0c27f8</id>

  
    <entry>
      <title>equal_range -- multimap::equa_range : エラー処理を追加</title>
      <link href="https://cpprefjp.github.io/reference/map/multimap/equal_range.html"/>
      <id>175916c441664380e59c570bc035641e9c9c03b4:reference/map/multimap/equal_range.md</id>
      <updated>2024-09-24T13:54:10+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/map/multimap/equal_range.md b/reference/map/multimap/equal_range.md
index 5c01978a9..e523e8717 100644
--- a/reference/map/multimap/equal_range.md
+++ b/reference/map/multimap/equal_range.md
@@ -58,6 +58,10 @@ int main()
 
   using iterator = decltype(m)::iterator;
   std::pair&amp;lt;iterator, iterator&amp;gt; ret = m.equal_range(&amp;#34;B&amp;#34;);
+  if (ret.first == m.end()) {
+    std::cout &amp;lt;&amp;lt; &amp;#34;not found&amp;#34; &amp;lt;&amp;lt; std::endl;
+    return 1;
+  }
 
   for (iterator it = ret.first; it != ret.second; ++it) {
     std::cout &amp;lt;&amp;lt; it-&amp;gt;first &amp;lt;&amp;lt; &amp;#34;,&amp;#34; &amp;lt;&amp;lt; it-&amp;gt;second &amp;lt;&amp;lt; std::endl;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- 箇条書きの表示崩れを修正</title>
      <link href="https://cpprefjp.github.io/reference/random/uniform_real_distribution/op_constructor.html"/>
      <id>dee2ab32078f385fb64fecae9cb0b6bcb7f767b7:reference/random/uniform_real_distribution/op_constructor.md</id>
      <updated>2024-09-20T09:10:59+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/uniform_real_distribution/op_constructor.md b/reference/random/uniform_real_distribution/op_constructor.md
index b2dc13309..990146a3d 100644
--- a/reference/random/uniform_real_distribution/op_constructor.md
+++ b/reference/random/uniform_real_distribution/op_constructor.md
@@ -84,4 +84,4 @@ int main()
 
 - [P0935R0 Eradicating unnecessarily explicit default constructors from the standard library](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0935r0.html)
 - [C++ の std::uniform_real_distribution はあまり信用できない。](https://qiita.com/Nabetani/items/b6b5f80c77b92ff8bd9f)
-    -　a ≤ x &amp;lt; b なるx を返すはずであるが、その範囲外の値が返ってくるライブラリ実装が存在することの指摘。
+    - a ≤ x &amp;lt; b なるx を返すはずであるが、その範囲外の値が返ってくるライブラリ実装が存在することの指摘。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>if文とswitch文の条件式と初期化を分離 [P0305R1] -- コードの誤りを修正</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/selection_statements_with_initializer.html"/>
      <id>caa8159c251909eb1e20da5620c4acbac1bd1039:lang/cpp17/selection_statements_with_initializer.md</id>
      <updated>2024-09-20T02:16:22+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/selection_statements_with_initializer.md b/lang/cpp17/selection_statements_with_initializer.md
index 5e6a59a6e..56dc5108b 100644
--- a/lang/cpp17/selection_statements_with_initializer.md
+++ b/lang/cpp17/selection_statements_with_initializer.md
@@ -32,7 +32,7 @@ if (status_code c = bar(); c != SUCCESS) {
   …
   return c;
 } else {
-  //ステータスコード C が成功だったら、何かして、処理を続行する
+  //ステータスコード c が成功だったら、何かして、処理を続行する
   …
 }
 //この時点で c は無効
@@ -160,7 +160,7 @@ status_code foo() {
   int n = get_value();
 
   {
-    status_code C = bar(n);
+    status_code c = bar(n);
     if (c != status_code::SUCCESS) { return c; }
   }
   {
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>lpha</name>
        <email>sphenocorona@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>gamma_distribution -- 不自然な日本語を修正</title>
      <link href="https://cpprefjp.github.io/reference/random/gamma_distribution.html"/>
      <id>51384f5095416ae5a11286ed603d7f69ff145e3c:reference/random/gamma_distribution.md</id>
      <updated>2024-09-20T02:15:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/gamma_distribution.md b/reference/random/gamma_distribution.md
index 89f0e08c1..cbcf21a88 100644
--- a/reference/random/gamma_distribution.md
+++ b/reference/random/gamma_distribution.md
@@ -25,7 +25,7 @@ $$ p(x \mid \alpha, \beta) = \frac{e^{-x/\beta}}{\beta^{\alpha} \cdot \Gamma(\al
 ガンマ分布は、以下のような用途に使用できる：
 
 - 均一に忙しいコールセンターに10回電話をかけ、つながるまでの時間の統計を求める
-- 放射性物質の大きなボディが、1000回原子核崩壊するのを観察する
+- 放射性物質の大きな塊があるとき、1000回原子核崩壊するまでにかかる時間を観察する
 
 
 テンプレートパラメータは、以下を意味する：
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>lpha</name>
        <email>sphenocorona@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- uniform_real_distribution: 範囲外が出ることがある件の参照追加</title>
      <link href="https://cpprefjp.github.io/reference/random/uniform_real_distribution/op_constructor.html"/>
      <id>1cb0ea1982be0f8c765149be0aa2d4d832e1245b:reference/random/uniform_real_distribution/op_constructor.md</id>
      <updated>2024-02-01T01:42:36+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/uniform_real_distribution/op_constructor.md b/reference/random/uniform_real_distribution/op_constructor.md
index d64649495..b2dc13309 100644
--- a/reference/random/uniform_real_distribution/op_constructor.md
+++ b/reference/random/uniform_real_distribution/op_constructor.md
@@ -82,4 +82,6 @@ int main()
 
 ## 参照
 
-- [P0935R0 Eradicating unnecessarily explicit default constructors from the standard library](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0935r0.html)
\ No newline at end of file
+- [P0935R0 Eradicating unnecessarily explicit default constructors from the standard library](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0935r0.html)
+- [C++ の std::uniform_real_distribution はあまり信用できない。](https://qiita.com/Nabetani/items/b6b5f80c77b92ff8bd9f)
+    -　a ≤ x &amp;lt; b なるx を返すはずであるが、その範囲外の値が返ってくるライブラリ実装が存在することの指摘。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>lpha</name>
        <email>sphenocorona@gmail.com</email>
      </author>
    </entry>
  
</feed>
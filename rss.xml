<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2021-02-17T08:14:04.312226</updated>
  <id>a95ea3ff-5751-49a1-80ea-89b0942a646d</id>

  
    <entry>
      <title>stacktrace_entry -- stacktrace_entry : 関数名はやっぱりdescriptionに含まれる</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/stacktrace_entry.html"/>
      <id>054df68eb2c2f93385ebacdacac0aee158d1d7db:reference/stacktrace/stacktrace_entry.md</id>
      <updated>2021-02-17T17:09:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/stacktrace_entry.md b/reference/stacktrace/stacktrace_entry.md
index ea329c8d4..73e0ded6b 100644
--- a/reference/stacktrace/stacktrace_entry.md
+++ b/reference/stacktrace/stacktrace_entry.md
@@ -115,7 +115,7 @@ int main() {
 
 ### 出力例
 ```
-main.cpp:5
+g() at main.cpp:5
 main.cpp
 5
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>basic_stacktrace -- 関数名はやっぱり含む。 Revert &#34;basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく&#34;</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace.html"/>
      <id>80f1139af1196a87077881c218acc9570f7c8832:reference/stacktrace/basic_stacktrace.md</id>
      <updated>2021-02-17T17:07:52+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace.md b/reference/stacktrace/basic_stacktrace.md
index fd70de980..e318d6919 100644
--- a/reference/stacktrace/basic_stacktrace.md
+++ b/reference/stacktrace/basic_stacktrace.md
@@ -175,9 +175,9 @@ int main() {
 
 #### 出力例
 ```
- 0# main.cpp:5
- 1# main.cpp:9
- 2# main.cpp:13
+ 0# g() at main.cpp:5
+ 1# f() at main.cpp:9
+ 2# main at main.cpp:13
 ```
 
 ### スタックトレースを出力するアサーションマクロを作る
@@ -210,7 +210,7 @@ int main() {
 
 #### 出力例
 ```
-Expression &amp;#39;i &amp;gt;= 0&amp;#39; is false in main.cpp:15
+Expression &amp;#39;i &amp;gt;= 0&amp;#39; is false in f() at main.cpp:15
 ```
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>at -- 関数名はやっぱり含む。 Revert &#34;basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく&#34;</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/at.html"/>
      <id>80f1139af1196a87077881c218acc9570f7c8832:reference/stacktrace/basic_stacktrace/at.md</id>
      <updated>2021-02-17T17:07:52+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/at.md b/reference/stacktrace/basic_stacktrace/at.md
index af5465069..8e34e8f89 100644
--- a/reference/stacktrace/basic_stacktrace/at.md
+++ b/reference/stacktrace/basic_stacktrace/at.md
@@ -44,7 +44,7 @@ int main() {
 
 ### 出力例
 ```
-main.cpp:5
+g() at main.cpp:5
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>begin -- 関数名はやっぱり含む。 Revert &#34;basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく&#34;</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/begin.html"/>
      <id>80f1139af1196a87077881c218acc9570f7c8832:reference/stacktrace/basic_stacktrace/begin.md</id>
      <updated>2021-02-17T17:07:52+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/begin.md b/reference/stacktrace/basic_stacktrace/begin.md
index 6f4a774f3..15fbe084f 100644
--- a/reference/stacktrace/basic_stacktrace/begin.md
+++ b/reference/stacktrace/basic_stacktrace/begin.md
@@ -45,9 +45,9 @@ int main() {
 
 ### 出力
 ```
-main.cpp:6
-main.cpp:13
-main.cpp:17
+g() at main.cpp:6
+f() at main.cpp:13
+main at main.cpp:17
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>cbegin -- 関数名はやっぱり含む。 Revert &#34;basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく&#34;</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/cbegin.html"/>
      <id>80f1139af1196a87077881c218acc9570f7c8832:reference/stacktrace/basic_stacktrace/cbegin.md</id>
      <updated>2021-02-17T17:07:52+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/cbegin.md b/reference/stacktrace/basic_stacktrace/cbegin.md
index 22fa4a9de..b6eb5b65f 100644
--- a/reference/stacktrace/basic_stacktrace/cbegin.md
+++ b/reference/stacktrace/basic_stacktrace/cbegin.md
@@ -45,9 +45,9 @@ int main() {
 
 ### 出力
 ```
-main.cpp:6
-main.cpp:13
-main.cpp:17
+g() at main.cpp:6
+f() at main.cpp:13
+main at main.cpp:17
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>cend -- 関数名はやっぱり含む。 Revert &#34;basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく&#34;</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/cend.html"/>
      <id>80f1139af1196a87077881c218acc9570f7c8832:reference/stacktrace/basic_stacktrace/cend.md</id>
      <updated>2021-02-17T17:07:52+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/cend.md b/reference/stacktrace/basic_stacktrace/cend.md
index 56744204c..911dc7afb 100644
--- a/reference/stacktrace/basic_stacktrace/cend.md
+++ b/reference/stacktrace/basic_stacktrace/cend.md
@@ -45,9 +45,9 @@ int main() {
 
 ### 出力
 ```
-main.cpp:6
-main.cpp:13
-main.cpp:17
+g() at main.cpp:6
+f() at main.cpp:13
+main at main.cpp:17
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>crbegin -- 関数名はやっぱり含む。 Revert &#34;basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく&#34;</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/crbegin.html"/>
      <id>80f1139af1196a87077881c218acc9570f7c8832:reference/stacktrace/basic_stacktrace/crbegin.md</id>
      <updated>2021-02-17T17:07:52+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/crbegin.md b/reference/stacktrace/basic_stacktrace/crbegin.md
index be9ed0fd9..2c7dc6637 100644
--- a/reference/stacktrace/basic_stacktrace/crbegin.md
+++ b/reference/stacktrace/basic_stacktrace/crbegin.md
@@ -48,9 +48,9 @@ int main() {
 
 ### 出力
 ```
-main.cpp:17
-main.cpp:13
-main.cpp:6
+main at main.cpp:17
+f() at main.cpp:13
+g() at main.cpp:6
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>crend -- 関数名はやっぱり含む。 Revert &#34;basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく&#34;</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/crend.html"/>
      <id>80f1139af1196a87077881c218acc9570f7c8832:reference/stacktrace/basic_stacktrace/crend.md</id>
      <updated>2021-02-17T17:07:52+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/crend.md b/reference/stacktrace/basic_stacktrace/crend.md
index 37c2f9b20..35aee8444 100644
--- a/reference/stacktrace/basic_stacktrace/crend.md
+++ b/reference/stacktrace/basic_stacktrace/crend.md
@@ -48,9 +48,9 @@ int main() {
 
 ### 出力
 ```
-main.cpp:17
-main.cpp:13
-main.cpp:6
+main at main.cpp:17
+f() at main.cpp:13
+g() at main.cpp:6
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>current -- 関数名はやっぱり含む。 Revert &#34;basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく&#34;</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/current.html"/>
      <id>80f1139af1196a87077881c218acc9570f7c8832:reference/stacktrace/basic_stacktrace/current.md</id>
      <updated>2021-02-17T17:07:52+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/current.md b/reference/stacktrace/basic_stacktrace/current.md
index d2295d189..9e18a3e87 100644
--- a/reference/stacktrace/basic_stacktrace/current.md
+++ b/reference/stacktrace/basic_stacktrace/current.md
@@ -69,9 +69,9 @@ int main() {
 
 #### 出力例
 ```
- 0# main.cpp:5
- 1# main.cpp:9
- 2# main.cpp:13
+ 0# g() at main.cpp:5
+ 1# f() at main.cpp:9
+ 2# main at main.cpp:13
 ```
 
 ### 現在位置からN個を除いたスタックトレースを取得する
@@ -95,8 +95,8 @@ int main() {
 
 #### 出力例
 ```
- 0# main.cpp:9
- 1# main.cpp:13
+ 0# f() at main.cpp:9
+ 1# main at main.cpp:13
 ```
 
 ### 指定範囲のスタックトレースを取得する
@@ -120,8 +120,8 @@ int main() {
 
 #### 出力例
 ```
- 0# main.cpp:9
- 1# main.cpp:13
+ 0# f() at main.cpp:9
+ 1# main at main.cpp:13
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>end -- 関数名はやっぱり含む。 Revert &#34;basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく&#34;</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/end.html"/>
      <id>80f1139af1196a87077881c218acc9570f7c8832:reference/stacktrace/basic_stacktrace/end.md</id>
      <updated>2021-02-17T17:07:52+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/end.md b/reference/stacktrace/basic_stacktrace/end.md
index bc4f6ad37..c194a257d 100644
--- a/reference/stacktrace/basic_stacktrace/end.md
+++ b/reference/stacktrace/basic_stacktrace/end.md
@@ -45,9 +45,9 @@ int main() {
 
 ### 出力
 ```
-main.cpp:6
-main.cpp:13
-main.cpp:17
+g() at main.cpp:6
+f() at main.cpp:13
+main at main.cpp:17
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator= -- 関数名はやっぱり含む。 Revert &#34;basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく&#34;</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/op_assign.html"/>
      <id>80f1139af1196a87077881c218acc9570f7c8832:reference/stacktrace/basic_stacktrace/op_assign.md</id>
      <updated>2021-02-17T17:07:52+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/op_assign.md b/reference/stacktrace/basic_stacktrace/op_assign.md
index f1e0189e1..db9c6f047 100644
--- a/reference/stacktrace/basic_stacktrace/op_assign.md
+++ b/reference/stacktrace/basic_stacktrace/op_assign.md
@@ -56,7 +56,7 @@ int main() {
 
 ### 出力例
 ```
-main.cpp:5
+g() at main.cpp:5
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator[] -- 関数名はやっぱり含む。 Revert &#34;basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく&#34;</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/op_at.html"/>
      <id>80f1139af1196a87077881c218acc9570f7c8832:reference/stacktrace/basic_stacktrace/op_at.md</id>
      <updated>2021-02-17T17:07:52+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/op_at.md b/reference/stacktrace/basic_stacktrace/op_at.md
index 807a3c134..8b7d642cb 100644
--- a/reference/stacktrace/basic_stacktrace/op_at.md
+++ b/reference/stacktrace/basic_stacktrace/op_at.md
@@ -48,7 +48,7 @@ int main() {
 
 ### 出力例
 ```
-main.cpp:5
+g() at main.cpp:5
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;&lt; -- 関数名はやっぱり含む。 Revert &#34;basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく&#34;</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/op_ostream.html"/>
      <id>80f1139af1196a87077881c218acc9570f7c8832:reference/stacktrace/basic_stacktrace/op_ostream.md</id>
      <updated>2021-02-17T17:07:52+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/op_ostream.md b/reference/stacktrace/basic_stacktrace/op_ostream.md
index 91ae39907..aae9af152 100644
--- a/reference/stacktrace/basic_stacktrace/op_ostream.md
+++ b/reference/stacktrace/basic_stacktrace/op_ostream.md
@@ -47,9 +47,9 @@ int main() {
 
 ### 出力例
 ```
- 0# main.cpp:5
- 1# main.cpp:9
- 2# main.cpp:13
+ 0# g() at main.cpp:5
+ 1# f() at main.cpp:9
+ 2# main at main.cpp:13
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>rbegin -- 関数名はやっぱり含む。 Revert &#34;basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく&#34;</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/rbegin.html"/>
      <id>80f1139af1196a87077881c218acc9570f7c8832:reference/stacktrace/basic_stacktrace/rbegin.md</id>
      <updated>2021-02-17T17:07:52+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/rbegin.md b/reference/stacktrace/basic_stacktrace/rbegin.md
index c35a8a961..dce03b134 100644
--- a/reference/stacktrace/basic_stacktrace/rbegin.md
+++ b/reference/stacktrace/basic_stacktrace/rbegin.md
@@ -48,9 +48,9 @@ int main() {
 
 ### 出力
 ```
-main.cpp:17
-main.cpp:13
-main.cpp:6
+main at main.cpp:17
+f() at main.cpp:13
+g() at main.cpp:6
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>rend -- 関数名はやっぱり含む。 Revert &#34;basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく&#34;</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/rend.html"/>
      <id>80f1139af1196a87077881c218acc9570f7c8832:reference/stacktrace/basic_stacktrace/rend.md</id>
      <updated>2021-02-17T17:07:52+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/rend.md b/reference/stacktrace/basic_stacktrace/rend.md
index 621141fec..0744d950f 100644
--- a/reference/stacktrace/basic_stacktrace/rend.md
+++ b/reference/stacktrace/basic_stacktrace/rend.md
@@ -48,9 +48,9 @@ int main() {
 
 ### 出力
 ```
-main.cpp:17
-main.cpp:13
-main.cpp:6
+main at main.cpp:17
+f() at main.cpp:13
+g() at main.cpp:6
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>size -- 関数名はやっぱり含む。 Revert &#34;basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく&#34;</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/size.html"/>
      <id>80f1139af1196a87077881c218acc9570f7c8832:reference/stacktrace/basic_stacktrace/size.md</id>
      <updated>2021-02-17T17:07:52+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/size.md b/reference/stacktrace/basic_stacktrace/size.md
index 2cb0e7026..5cf95e4b0 100644
--- a/reference/stacktrace/basic_stacktrace/size.md
+++ b/reference/stacktrace/basic_stacktrace/size.md
@@ -43,9 +43,9 @@ int main() {
 #### 出力例
 ```
 3
- 0# main.cpp:5
- 1# main.cpp:11
- 2# main.cpp:15
+ 0# g() at main.cpp:5
+ 1# f() at main.cpp:11
+ 2# main at main.cpp:15
 ```
 
 
@@ -74,7 +74,7 @@ int main() {
 #### 出力例
 ```
 1
- 0# main.cpp:11
+ 0# f() at main.cpp:11
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>swap -- 関数名はやっぱり含む。 Revert &#34;basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく&#34;</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/swap.html"/>
      <id>80f1139af1196a87077881c218acc9570f7c8832:reference/stacktrace/basic_stacktrace/swap.md</id>
      <updated>2021-02-17T17:07:52+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/swap.md b/reference/stacktrace/basic_stacktrace/swap.md
index 6c39d44e5..46ff167d3 100644
--- a/reference/stacktrace/basic_stacktrace/swap.md
+++ b/reference/stacktrace/basic_stacktrace/swap.md
@@ -48,9 +48,9 @@ int main() {
 
 ### 出力例
 ```
- 0# main.cpp:6
- 1# main.cpp:13
- 2# main.cpp:17
+ 0# g() at main.cpp:6
+ 1# f() at main.cpp:13
+ 2# main at main.cpp:17
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>swap (非メンバ関数) -- 関数名はやっぱり含む。 Revert &#34;basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく&#34;</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/swap_free.html"/>
      <id>80f1139af1196a87077881c218acc9570f7c8832:reference/stacktrace/basic_stacktrace/swap_free.md</id>
      <updated>2021-02-17T17:07:52+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/swap_free.md b/reference/stacktrace/basic_stacktrace/swap_free.md
index 714ff73f8..24797c8de 100644
--- a/reference/stacktrace/basic_stacktrace/swap_free.md
+++ b/reference/stacktrace/basic_stacktrace/swap_free.md
@@ -53,9 +53,9 @@ int main() {
 
 ### 出力例
 ```
- 0# main.cpp:6
- 1# main.cpp:13
- 2# main.cpp:17
+ 0# g() at main.cpp:6
+ 1# f() at main.cpp:13
+ 2# main at main.cpp:17
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>to_string -- 関数名はやっぱり含む。 Revert &#34;basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく&#34;</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/to_string.html"/>
      <id>80f1139af1196a87077881c218acc9570f7c8832:reference/stacktrace/basic_stacktrace/to_string.md</id>
      <updated>2021-02-17T17:07:52+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/to_string.md b/reference/stacktrace/basic_stacktrace/to_string.md
index 4c9892805..ad35d05a0 100644
--- a/reference/stacktrace/basic_stacktrace/to_string.md
+++ b/reference/stacktrace/basic_stacktrace/to_string.md
@@ -48,9 +48,9 @@ int main() {
 
 ### 出力例
 ```
- 0# main.cpp:5
- 1# main.cpp:10
- 2# main.cpp:14
+ 0# g() at main.cpp:5
+ 1# f() at main.cpp:10
+ 2# main at main.cpp:14
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>test -- atomic_flag: test関数のWG21提案文書参照を変更</title>
      <link href="https://cpprefjp.github.io/reference/atomic/atomic_flag/test.html"/>
      <id>ed2033e3a8cba1b80585cc01e02a44ef72f706c8:reference/atomic/atomic_flag/test.md</id>
      <updated>2021-02-17T11:25:10+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/atomic/atomic_flag/test.md b/reference/atomic/atomic_flag/test.md
index 2900aa3e6..a0b1eda2e 100644
--- a/reference/atomic/atomic_flag/test.md
+++ b/reference/atomic/atomic_flag/test.md
@@ -74,6 +74,6 @@ true
 
 
 ## 参照
-- [P0514R4 Efficient concurrent waiting for C++20](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0514r4.pdf)
+- [P0995R1 Improving atomic_flag](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0995r1.html)
 - [ogiroux/atomic_wait - Sample implementation of C++20 atomic_wait/notify](https://github.com/ogiroux/atomic_wait)
 - [P1135R6 The C++20 Synchronization Library](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1135r6.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>atomic_flag_test -- atomic_flag: test関数のWG21提案文書参照を変更</title>
      <link href="https://cpprefjp.github.io/reference/atomic/atomic_flag_test.html"/>
      <id>ed2033e3a8cba1b80585cc01e02a44ef72f706c8:reference/atomic/atomic_flag_test.md</id>
      <updated>2021-02-17T11:25:10+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/atomic/atomic_flag_test.md b/reference/atomic/atomic_flag_test.md
index e915e7167..f5bec5269 100644
--- a/reference/atomic/atomic_flag_test.md
+++ b/reference/atomic/atomic_flag_test.md
@@ -70,6 +70,6 @@ true
 
 
 ## 参照
-- [P0514R4 Efficient concurrent waiting for C++20](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0514r4.pdf)
+- [P0995R1 Improving atomic_flag](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0995r1.html)
 - [ogiroux/atomic_wait - Sample implementation of C++20 atomic_wait/notify](https://github.com/ogiroux/atomic_wait)
 - [P1135R6 The C++20 Synchronization Library](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1135r6.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>atomic_flag_test_explicit -- atomic_flag: test関数のWG21提案文書参照を変更</title>
      <link href="https://cpprefjp.github.io/reference/atomic/atomic_flag_test_explicit.html"/>
      <id>ed2033e3a8cba1b80585cc01e02a44ef72f706c8:reference/atomic/atomic_flag_test_explicit.md</id>
      <updated>2021-02-17T11:25:10+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/atomic/atomic_flag_test_explicit.md b/reference/atomic/atomic_flag_test_explicit.md
index 36668d28c..c18a0d408 100644
--- a/reference/atomic/atomic_flag_test_explicit.md
+++ b/reference/atomic/atomic_flag_test_explicit.md
@@ -78,6 +78,6 @@ true
 
 
 ## 参照
-- [P0514R4 Efficient concurrent waiting for C++20](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0514r4.pdf)
+- [P0995R1 Improving atomic_flag](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0995r1.html)
 - [ogiroux/atomic_wait - Sample implementation of C++20 atomic_wait/notify](https://github.com/ogiroux/atomic_wait)
 - [P1135R6 The C++20 Synchronization Library](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1135r6.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>allocator -- allocator : リンク切れを解消</title>
      <link href="https://cpprefjp.github.io/reference/memory/allocator.html"/>
      <id>bd981e8428a0e92b8683bcc5754dad30a52c6e28:reference/memory/allocator.md</id>
      <updated>2021-02-15T02:32:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/memory/allocator.md b/reference/memory/allocator.md
index 12acf9aef..082f4c4dd 100644
--- a/reference/memory/allocator.md
+++ b/reference/memory/allocator.md
@@ -126,7 +126,7 @@ int main(int argc, char** argv) {
 - [A visitor’s guide to C++ allocators](https://rawgit.com/google/cxx-std-draft/allocator-paper/allocator_user_guide.html)
 - [LWG #2103 - `std::allocator_traits&amp;lt;std::allocator&amp;lt;T&amp;gt;&amp;gt;::propagate_on_container_move_assignment`](http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#2103)
 - [N2669 Thread-Safety in the Standard Library (Rev 2)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2669.htm)
-- [AllocatorAwareContainer: Introduction and pitfalls of `propagate_on_container_XXX` defaults](http://foonathan.github.io/blog/2015/10/05/allocatorawarecontainer-propagation-pitfalls.html)
+- [AllocatorAwareContainer: Introduction and pitfalls of `propagate_on_container_XXX` defaults](https://www.foonathan.net/2015/10/allocatorawarecontainer-propagation-pitfalls/)
 - [P0174R2 Deprecating Vestigial Library Parts in C++17](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0174r2.html)
 - [P0619R4 Reviewing deprecated facilities of C++17 for C++20](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0619r4.html)
 - [N4258 Cleaning-up noexcept in the Library, Rev 3](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4258.pdf)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>scalbn -- リンク切れを解消</title>
      <link href="https://cpprefjp.github.io/reference/cmath/scalbn.html"/>
      <id>6f2bfd6c6285c9afcfa85d7238946cb38fe65306:reference/cmath/scalbn.md</id>
      <updated>2021-02-15T00:15:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/scalbn.md b/reference/cmath/scalbn.md
index bb46c54c5..893959dc6 100644
--- a/reference/cmath/scalbn.md
+++ b/reference/cmath/scalbn.md
@@ -111,5 +111,5 @@ namespace std {
 
 
 ## 参照
-- [WG14 N657 Floating-Point and Complex Arithmetic Enhancements](http://www7.open-std.org/JTC1/SC22/WG14/www/docs/n657.ps)
+- [WG14 N657 Floating-Point and Complex Arithmetic Enhancements](http://www.open-std.org/jtc1/sc22/wg14/www/docs/n657.ps)
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>allocator_traits -- リンク切れを解消</title>
      <link href="https://cpprefjp.github.io/reference/memory/allocator_traits.html"/>
      <id>6f2bfd6c6285c9afcfa85d7238946cb38fe65306:reference/memory/allocator_traits.md</id>
      <updated>2021-02-15T00:15:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/memory/allocator_traits.md b/reference/memory/allocator_traits.md
index 7f9e661e4..ba8698d1d 100644
--- a/reference/memory/allocator_traits.md
+++ b/reference/memory/allocator_traits.md
@@ -210,5 +210,5 @@ int main() {
 - [Allocators@C++11 - Cryolite](http://www.slideshare.net/Cryolite/allocator11final)
 - [A visitor’s guide to C++ allocators](https://rawgit.com/google/cxx-std-draft/allocator-paper/allocator_user_guide.html)
 - [N2982 Allocators post Removal of C++ Concepts (Rev 1)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2009/n2982.pdf)
-- [AllocatorAwareContainer: Introduction and pitfalls of `propagate_on_container_XXX` defaults](http://foonathan.github.io/blog/2015/10/05/allocatorawarecontainer-propagation-pitfalls.html)
+- [AllocatorAwareContainer: Introduction and pitfalls of `propagate_on_container_XXX` defaults](https://www.foonathan.net/2015/10/allocatorawarecontainer-propagation-pitfalls/)
 - [N4258 Cleaning-up noexcept in the Library, Rev 3](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4258.pdf)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2020-10-21T00:29:27.129898</updated>
  <id>71522b5f-f3f6-4d24-84b0-5b036adf4d1c</id>

  
    <entry>
      <title>max_digits10 -- numeric_limits::max_digits10 : コード修飾を追加</title>
      <link href="https://cpprefjp.github.io/reference/limits/numeric_limits/max_digits10.html"/>
      <id>338fed2b053632e6c7cf0cbdb7728c06f87f5244:reference/limits/numeric_limits/max_digits10.md</id>
      <updated>2020-10-21T09:25:17+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/limits/numeric_limits/max_digits10.md b/reference/limits/numeric_limits/max_digits10.md
index f9f003e21..1a2a47893 100644
--- a/reference/limits/numeric_limits/max_digits10.md
+++ b/reference/limits/numeric_limits/max_digits10.md
@@ -87,6 +87,7 @@ int main()
 * std::scientific[link /reference/ios/scientific.md]
 * s.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
 * std::nextafter[link /reference/cmath/nextafter.md]
+* std::uint32_t[link /reference/cstdint/uint32_t.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>max_digits10 -- numeric_limits::max_digits10 : 比較しやすいようビット列も出力</title>
      <link href="https://cpprefjp.github.io/reference/limits/numeric_limits/max_digits10.html"/>
      <id>0c86d176ed4c8ccc69fb9101f9f6e26c75f895cd:reference/limits/numeric_limits/max_digits10.md</id>
      <updated>2020-10-21T05:47:17+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/limits/numeric_limits/max_digits10.md b/reference/limits/numeric_limits/max_digits10.md
index a45560fae..f9f003e21 100644
--- a/reference/limits/numeric_limits/max_digits10.md
+++ b/reference/limits/numeric_limits/max_digits10.md
@@ -39,6 +39,7 @@ static constexpr int max_digits10;
 #include &amp;lt;limits&amp;gt;
 #include &amp;lt;cmath&amp;gt;
 #include &amp;lt;sstream&amp;gt;
+#include &amp;lt;bitset&amp;gt;
 
 std::string make_float_string(float f, int digits) {
   std::stringstream s;
@@ -47,6 +48,16 @@ std::string make_float_string(float f, int digits) {
   return s.str();
 }
 
+std::uint32_t float_to_uint(float f) {
+    std::uint32_t result = 0;
+    std::memcpy(&amp;amp;result, &amp;amp;f, sizeof(std::uint32_t));
+    return result;
+}
+
+std::string make_bit_string(float f) {
+    return std::bitset&amp;lt;32&amp;gt;(float_to_uint(f)).to_string();
+}
+
 int main()
 {
   using limits = std::numeric_limits&amp;lt;float&amp;gt;;
@@ -58,10 +69,15 @@ int main()
   // digits10とmax_digits10での、
   // 下位数ビットが異なる浮動小数点数の出力のされ方を比較
   for (int digits : {limits::digits10, limits::max_digits10}) {
-    std::cout &amp;lt;&amp;lt; &amp;#34;digits : &amp;#34; &amp;lt;&amp;lt; digits &amp;lt;&amp;lt; std::endl;
-    std::cout &amp;lt;&amp;lt; &amp;#34;  &amp;#34; &amp;lt;&amp;lt; make_float_string(3.145900f, digits) &amp;lt;&amp;lt; std::endl;
-    std::cout &amp;lt;&amp;lt; &amp;#34;  &amp;#34; &amp;lt;&amp;lt; make_float_string(std::nextafter(3.145900f, 1.0f), digits) &amp;lt;&amp;lt; std::endl;
+    std::cout &amp;lt;&amp;lt; &amp;#34;[digits : &amp;#34; &amp;lt;&amp;lt; digits &amp;lt;&amp;lt; &amp;#39;]&amp;#39; &amp;lt;&amp;lt; std::endl;
+    std::cout &amp;lt;&amp;lt; make_float_string(3.145900f, digits) &amp;lt;&amp;lt; std::endl;
+    std::cout &amp;lt;&amp;lt; make_float_string(std::nextafter(3.145900f, 1.0f), digits) &amp;lt;&amp;lt; std::endl;
   }
+
+  // それぞれの値のビット列を出力
+  std::cout &amp;lt;&amp;lt; &amp;#34;[bit string]&amp;#34; &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; make_bit_string(3.145900f) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; make_bit_string(std::nextafter(3.145900f, 1.0f)) &amp;lt;&amp;lt; std::endl;
 }
 ```
 * max_digits10[color ff0000]
@@ -77,12 +93,15 @@ int main()
 float digits10 : 6
 float max_digits10 : 9
 
-digits : 6
-  3.145900e+00
-  3.145900e+00
-digits : 9
-  3.145900011e+00
-  3.145899773e+00
+[digits : 6]
+3.145900e+00
+3.145900e+00
+[digits : 9]
+3.145900011e+00
+3.145899773e+00
+[bit string]
+01000000010010010101011001101101
+01000000010010010101011001101100
 ```
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>max_digits10 -- numeric_limits::max_digits10 : サンプルコードを効果がわかるものに修正</title>
      <link href="https://cpprefjp.github.io/reference/limits/numeric_limits/max_digits10.html"/>
      <id>18de127e4f7a73dba2b76921758abac618aa8a95:reference/limits/numeric_limits/max_digits10.md</id>
      <updated>2020-10-21T05:37:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/limits/numeric_limits/max_digits10.md b/reference/limits/numeric_limits/max_digits10.md
index 63ba40ce3..a45560fae 100644
--- a/reference/limits/numeric_limits/max_digits10.md
+++ b/reference/limits/numeric_limits/max_digits10.md
@@ -37,32 +37,52 @@ static constexpr int max_digits10;
 ```cpp example
 #include &amp;lt;iostream&amp;gt;
 #include &amp;lt;limits&amp;gt;
+#include &amp;lt;cmath&amp;gt;
 #include &amp;lt;sstream&amp;gt;
 
-int main()
-{
-  constexpr int d = std::numeric_limits&amp;lt;float&amp;gt;::max_digits10;
-  std::cout &amp;lt;&amp;lt; d &amp;lt;&amp;lt; std::endl;
-
-  float f = 3.145900F;
-
+std::string make_float_string(float f, int digits) {
   std::stringstream s;
-  s.precision(d);
+  s.precision(digits);
   s &amp;lt;&amp;lt; std::scientific &amp;lt;&amp;lt; f;
+  return s.str();
+}
 
-  std::cout &amp;lt;&amp;lt; s.str() &amp;lt;&amp;lt; std::endl;
+int main()
+{
+  using limits = std::numeric_limits&amp;lt;float&amp;gt;;
+
+  std::cout &amp;lt;&amp;lt; &amp;#34;float digits10 : &amp;#34; &amp;lt;&amp;lt; limits::digits10 &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; &amp;#34;float max_digits10 : &amp;#34; &amp;lt;&amp;lt; limits::max_digits10 &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::endl;
+
+  // digits10とmax_digits10での、
+  // 下位数ビットが異なる浮動小数点数の出力のされ方を比較
+  for (int digits : {limits::digits10, limits::max_digits10}) {
+    std::cout &amp;lt;&amp;lt; &amp;#34;digits : &amp;#34; &amp;lt;&amp;lt; digits &amp;lt;&amp;lt; std::endl;
+    std::cout &amp;lt;&amp;lt; &amp;#34;  &amp;#34; &amp;lt;&amp;lt; make_float_string(3.145900f, digits) &amp;lt;&amp;lt; std::endl;
+    std::cout &amp;lt;&amp;lt; &amp;#34;  &amp;#34; &amp;lt;&amp;lt; make_float_string(std::nextafter(3.145900f, 1.0f), digits) &amp;lt;&amp;lt; std::endl;
+  }
 }
 ```
 * max_digits10[color ff0000]
+* digits10[link digits10.md]
 * std::stringstring[link /reference/sstream/basic_stringstream.md.nolink]
 * precision[link /reference/ios/ios_base/precision.md]
 * std::scientific[link /reference/ios/scientific.md]
 * s.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::nextafter[link /reference/cmath/nextafter.md]
 
 ### 出力例
 ```
-9
-3.145900011e+000
+float digits10 : 6
+float max_digits10 : 9
+
+digits : 6
+  3.145900e+00
+  3.145900e+00
+digits : 9
+  3.145900011e+00
+  3.145899773e+00
 ```
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>max_digits10 -- numeric_limits::max_digits10 : 使い所の説明が不足していたので加筆</title>
      <link href="https://cpprefjp.github.io/reference/limits/numeric_limits/max_digits10.html"/>
      <id>235463ef71ed320a6869f62d1dd676ec9faf6334:reference/limits/numeric_limits/max_digits10.md</id>
      <updated>2020-10-21T05:22:56+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/limits/numeric_limits/max_digits10.md b/reference/limits/numeric_limits/max_digits10.md
index fdffdad9d..63ba40ce3 100644
--- a/reference/limits/numeric_limits/max_digits10.md
+++ b/reference/limits/numeric_limits/max_digits10.md
@@ -13,8 +13,9 @@ static constexpr int max_digits10;
 `max_digits10`は、`T`が浮動小数点数型のとき意味を持つ。  
 
 基数`radix`の浮動小数点数を、仮数部がn桁で基数10の浮動小数点数に変換してまた元の基数`radix`の浮動小数点数に変換することを考える。  
-`max_digits10`は、上の変換によって元の浮動小数点数の値が変化しないようなnのうち、最小のものを表す。  
-したがって、浮動小数点数を文字列などに変換する場合に、正確な値を保持するために使用できる。  
+`max_digits10`は、上の変換によって元の浮動小数点数の値が変化しないようなnのうち、最小のものを表す。
+
+通常、浮動小数点数を文字列などに変換する場合には出力精度 (小数点以下の桁数) として[`digits10`](digits10.md) (デフォルト) を使用すれば十分である。しかしその精度では、下位数ビットが異なる値を同値とみなしてしまう場合がある。`max_digits10`を出力精度として使用することで、そのような値の違いに気づくことができる。
 
 `max_digits10`は [`digits`](digits.md) を用いて次のように計算できる：  
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator- -- year_month(_day)の+- : コード修飾を追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month/op_minus.html"/>
      <id>4b17733f07970499684cfa8c2cb1e06c1ed00644:reference/chrono/year_month/op_minus.md</id>
      <updated>2020-10-20T23:36:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month/op_minus.md b/reference/chrono/year_month/op_minus.md
index 28fa3e5c8..accb92cc5 100644
--- a/reference/chrono/year_month/op_minus.md
+++ b/reference/chrono/year_month/op_minus.md
@@ -41,6 +41,8 @@ int main()
   assert(2020y/3 - chrono::years{1} == 2019y/3);
 }
 ```
+* 2020y[link /reference/chrono/year/op_y.md]
+* 2019y[link /reference/chrono/year/op_y.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator+ -- year_month(_day)の+- : コード修飾を追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month/op_plus.html"/>
      <id>4b17733f07970499684cfa8c2cb1e06c1ed00644:reference/chrono/year_month/op_plus.md</id>
      <updated>2020-10-20T23:36:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month/op_plus.md b/reference/chrono/year_month/op_plus.md
index f4f71d326..a97748474 100644
--- a/reference/chrono/year_month/op_plus.md
+++ b/reference/chrono/year_month/op_plus.md
@@ -71,6 +71,8 @@ int main()
   assert(2020y/3 + chrono::years{1} == 2021y/3);
 }
 ```
+* 2020y[link /reference/chrono/year/op_y.md]
+* 2021y[link /reference/chrono/year/op_y.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator- -- year_month(_day)の+- : コード修飾を追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day/op_minus.html"/>
      <id>4b17733f07970499684cfa8c2cb1e06c1ed00644:reference/chrono/year_month_day/op_minus.md</id>
      <updated>2020-10-20T23:36:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day/op_minus.md b/reference/chrono/year_month_day/op_minus.md
index 2bba788d0..4041bc5c6 100644
--- a/reference/chrono/year_month_day/op_minus.md
+++ b/reference/chrono/year_month_day/op_minus.md
@@ -45,6 +45,8 @@ int main()
   assert(2020y/3/1 - chrono::years{1} == 2019y/3/1);
 }
 ```
+* 2020y[link /reference/chrono/year/op_y.md]
+* 2019y[link /reference/chrono/year/op_y.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator+ -- year_month(_day)の+- : コード修飾を追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day/op_plus.html"/>
      <id>4b17733f07970499684cfa8c2cb1e06c1ed00644:reference/chrono/year_month_day/op_plus.md</id>
      <updated>2020-10-20T23:36:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day/op_plus.md b/reference/chrono/year_month_day/op_plus.md
index ea42538b9..7d52c873e 100644
--- a/reference/chrono/year_month_day/op_plus.md
+++ b/reference/chrono/year_month_day/op_plus.md
@@ -78,6 +78,8 @@ int main()
   assert(2020y/3/1 + chrono::years{1} == 2021y/3/1);
 }
 ```
+* 2020y[link /reference/chrono/year/op_y.md]
+* 2021y[link /reference/chrono/year/op_y.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
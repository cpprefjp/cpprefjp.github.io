<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2021-01-27T09:04:24.839276</updated>
  <id>829a85b5-8bbf-4d10-9978-85fd79fe2a42</id>

  
    <entry>
      <title>basic_stacktrace -- basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace.html"/>
      <id>abab91c601328dc4235c664e0d3763facfbb271b:reference/stacktrace/basic_stacktrace.md</id>
      <updated>2021-01-27T17:59:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace.md b/reference/stacktrace/basic_stacktrace.md
index e318d6919..fd70de980 100644
--- a/reference/stacktrace/basic_stacktrace.md
+++ b/reference/stacktrace/basic_stacktrace.md
@@ -175,9 +175,9 @@ int main() {
 
 #### 出力例
 ```
- 0# g() at main.cpp:5
- 1# f() at main.cpp:9
- 2# main at main.cpp:13
+ 0# main.cpp:5
+ 1# main.cpp:9
+ 2# main.cpp:13
 ```
 
 ### スタックトレースを出力するアサーションマクロを作る
@@ -210,7 +210,7 @@ int main() {
 
 #### 出力例
 ```
-Expression &amp;#39;i &amp;gt;= 0&amp;#39; is false in f() at main.cpp:15
+Expression &amp;#39;i &amp;gt;= 0&amp;#39; is false in main.cpp:15
 ```
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>at -- basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/at.html"/>
      <id>abab91c601328dc4235c664e0d3763facfbb271b:reference/stacktrace/basic_stacktrace/at.md</id>
      <updated>2021-01-27T17:59:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/at.md b/reference/stacktrace/basic_stacktrace/at.md
index 8e34e8f89..af5465069 100644
--- a/reference/stacktrace/basic_stacktrace/at.md
+++ b/reference/stacktrace/basic_stacktrace/at.md
@@ -44,7 +44,7 @@ int main() {
 
 ### 出力例
 ```
-g() at main.cpp:5
+main.cpp:5
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>begin -- basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/begin.html"/>
      <id>abab91c601328dc4235c664e0d3763facfbb271b:reference/stacktrace/basic_stacktrace/begin.md</id>
      <updated>2021-01-27T17:59:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/begin.md b/reference/stacktrace/basic_stacktrace/begin.md
index 15fbe084f..6f4a774f3 100644
--- a/reference/stacktrace/basic_stacktrace/begin.md
+++ b/reference/stacktrace/basic_stacktrace/begin.md
@@ -45,9 +45,9 @@ int main() {
 
 ### 出力
 ```
-g() at main.cpp:6
-f() at main.cpp:13
-main at main.cpp:17
+main.cpp:6
+main.cpp:13
+main.cpp:17
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>cbegin -- basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/cbegin.html"/>
      <id>abab91c601328dc4235c664e0d3763facfbb271b:reference/stacktrace/basic_stacktrace/cbegin.md</id>
      <updated>2021-01-27T17:59:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/cbegin.md b/reference/stacktrace/basic_stacktrace/cbegin.md
index b6eb5b65f..22fa4a9de 100644
--- a/reference/stacktrace/basic_stacktrace/cbegin.md
+++ b/reference/stacktrace/basic_stacktrace/cbegin.md
@@ -45,9 +45,9 @@ int main() {
 
 ### 出力
 ```
-g() at main.cpp:6
-f() at main.cpp:13
-main at main.cpp:17
+main.cpp:6
+main.cpp:13
+main.cpp:17
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>cend -- basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/cend.html"/>
      <id>abab91c601328dc4235c664e0d3763facfbb271b:reference/stacktrace/basic_stacktrace/cend.md</id>
      <updated>2021-01-27T17:59:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/cend.md b/reference/stacktrace/basic_stacktrace/cend.md
index 911dc7afb..56744204c 100644
--- a/reference/stacktrace/basic_stacktrace/cend.md
+++ b/reference/stacktrace/basic_stacktrace/cend.md
@@ -45,9 +45,9 @@ int main() {
 
 ### 出力
 ```
-g() at main.cpp:6
-f() at main.cpp:13
-main at main.cpp:17
+main.cpp:6
+main.cpp:13
+main.cpp:17
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>crbegin -- basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/crbegin.html"/>
      <id>abab91c601328dc4235c664e0d3763facfbb271b:reference/stacktrace/basic_stacktrace/crbegin.md</id>
      <updated>2021-01-27T17:59:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/crbegin.md b/reference/stacktrace/basic_stacktrace/crbegin.md
index 2c7dc6637..be9ed0fd9 100644
--- a/reference/stacktrace/basic_stacktrace/crbegin.md
+++ b/reference/stacktrace/basic_stacktrace/crbegin.md
@@ -48,9 +48,9 @@ int main() {
 
 ### 出力
 ```
-main at main.cpp:17
-f() at main.cpp:13
-g() at main.cpp:6
+main.cpp:17
+main.cpp:13
+main.cpp:6
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>crend -- basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/crend.html"/>
      <id>abab91c601328dc4235c664e0d3763facfbb271b:reference/stacktrace/basic_stacktrace/crend.md</id>
      <updated>2021-01-27T17:59:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/crend.md b/reference/stacktrace/basic_stacktrace/crend.md
index 35aee8444..37c2f9b20 100644
--- a/reference/stacktrace/basic_stacktrace/crend.md
+++ b/reference/stacktrace/basic_stacktrace/crend.md
@@ -48,9 +48,9 @@ int main() {
 
 ### 出力
 ```
-main at main.cpp:17
-f() at main.cpp:13
-g() at main.cpp:6
+main.cpp:17
+main.cpp:13
+main.cpp:6
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>current -- basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/current.html"/>
      <id>abab91c601328dc4235c664e0d3763facfbb271b:reference/stacktrace/basic_stacktrace/current.md</id>
      <updated>2021-01-27T17:59:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/current.md b/reference/stacktrace/basic_stacktrace/current.md
index 9e18a3e87..d2295d189 100644
--- a/reference/stacktrace/basic_stacktrace/current.md
+++ b/reference/stacktrace/basic_stacktrace/current.md
@@ -69,9 +69,9 @@ int main() {
 
 #### 出力例
 ```
- 0# g() at main.cpp:5
- 1# f() at main.cpp:9
- 2# main at main.cpp:13
+ 0# main.cpp:5
+ 1# main.cpp:9
+ 2# main.cpp:13
 ```
 
 ### 現在位置からN個を除いたスタックトレースを取得する
@@ -95,8 +95,8 @@ int main() {
 
 #### 出力例
 ```
- 0# f() at main.cpp:9
- 1# main at main.cpp:13
+ 0# main.cpp:9
+ 1# main.cpp:13
 ```
 
 ### 指定範囲のスタックトレースを取得する
@@ -120,8 +120,8 @@ int main() {
 
 #### 出力例
 ```
- 0# f() at main.cpp:9
- 1# main at main.cpp:13
+ 0# main.cpp:9
+ 1# main.cpp:13
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>end -- basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/end.html"/>
      <id>abab91c601328dc4235c664e0d3763facfbb271b:reference/stacktrace/basic_stacktrace/end.md</id>
      <updated>2021-01-27T17:59:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/end.md b/reference/stacktrace/basic_stacktrace/end.md
index c194a257d..bc4f6ad37 100644
--- a/reference/stacktrace/basic_stacktrace/end.md
+++ b/reference/stacktrace/basic_stacktrace/end.md
@@ -45,9 +45,9 @@ int main() {
 
 ### 出力
 ```
-g() at main.cpp:6
-f() at main.cpp:13
-main at main.cpp:17
+main.cpp:6
+main.cpp:13
+main.cpp:17
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator= -- basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/op_assign.html"/>
      <id>abab91c601328dc4235c664e0d3763facfbb271b:reference/stacktrace/basic_stacktrace/op_assign.md</id>
      <updated>2021-01-27T17:59:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/op_assign.md b/reference/stacktrace/basic_stacktrace/op_assign.md
index db9c6f047..f1e0189e1 100644
--- a/reference/stacktrace/basic_stacktrace/op_assign.md
+++ b/reference/stacktrace/basic_stacktrace/op_assign.md
@@ -56,7 +56,7 @@ int main() {
 
 ### 出力例
 ```
-g() at main.cpp:5
+main.cpp:5
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator[] -- basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/op_at.html"/>
      <id>abab91c601328dc4235c664e0d3763facfbb271b:reference/stacktrace/basic_stacktrace/op_at.md</id>
      <updated>2021-01-27T17:59:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/op_at.md b/reference/stacktrace/basic_stacktrace/op_at.md
index 8b7d642cb..807a3c134 100644
--- a/reference/stacktrace/basic_stacktrace/op_at.md
+++ b/reference/stacktrace/basic_stacktrace/op_at.md
@@ -48,7 +48,7 @@ int main() {
 
 ### 出力例
 ```
-g() at main.cpp:5
+main.cpp:5
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;&lt; -- basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/op_ostream.html"/>
      <id>abab91c601328dc4235c664e0d3763facfbb271b:reference/stacktrace/basic_stacktrace/op_ostream.md</id>
      <updated>2021-01-27T17:59:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/op_ostream.md b/reference/stacktrace/basic_stacktrace/op_ostream.md
index aae9af152..91ae39907 100644
--- a/reference/stacktrace/basic_stacktrace/op_ostream.md
+++ b/reference/stacktrace/basic_stacktrace/op_ostream.md
@@ -47,9 +47,9 @@ int main() {
 
 ### 出力例
 ```
- 0# g() at main.cpp:5
- 1# f() at main.cpp:9
- 2# main at main.cpp:13
+ 0# main.cpp:5
+ 1# main.cpp:9
+ 2# main.cpp:13
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>rbegin -- basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/rbegin.html"/>
      <id>abab91c601328dc4235c664e0d3763facfbb271b:reference/stacktrace/basic_stacktrace/rbegin.md</id>
      <updated>2021-01-27T17:59:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/rbegin.md b/reference/stacktrace/basic_stacktrace/rbegin.md
index dce03b134..c35a8a961 100644
--- a/reference/stacktrace/basic_stacktrace/rbegin.md
+++ b/reference/stacktrace/basic_stacktrace/rbegin.md
@@ -48,9 +48,9 @@ int main() {
 
 ### 出力
 ```
-main at main.cpp:17
-f() at main.cpp:13
-g() at main.cpp:6
+main.cpp:17
+main.cpp:13
+main.cpp:6
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>rend -- basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/rend.html"/>
      <id>abab91c601328dc4235c664e0d3763facfbb271b:reference/stacktrace/basic_stacktrace/rend.md</id>
      <updated>2021-01-27T17:59:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/rend.md b/reference/stacktrace/basic_stacktrace/rend.md
index 0744d950f..621141fec 100644
--- a/reference/stacktrace/basic_stacktrace/rend.md
+++ b/reference/stacktrace/basic_stacktrace/rend.md
@@ -48,9 +48,9 @@ int main() {
 
 ### 出力
 ```
-main at main.cpp:17
-f() at main.cpp:13
-g() at main.cpp:6
+main.cpp:17
+main.cpp:13
+main.cpp:6
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>size -- basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/size.html"/>
      <id>abab91c601328dc4235c664e0d3763facfbb271b:reference/stacktrace/basic_stacktrace/size.md</id>
      <updated>2021-01-27T17:59:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/size.md b/reference/stacktrace/basic_stacktrace/size.md
index 5cf95e4b0..2cb0e7026 100644
--- a/reference/stacktrace/basic_stacktrace/size.md
+++ b/reference/stacktrace/basic_stacktrace/size.md
@@ -43,9 +43,9 @@ int main() {
 #### 出力例
 ```
 3
- 0# g() at main.cpp:5
- 1# f() at main.cpp:11
- 2# main at main.cpp:15
+ 0# main.cpp:5
+ 1# main.cpp:11
+ 2# main.cpp:15
 ```
 
 
@@ -74,7 +74,7 @@ int main() {
 #### 出力例
 ```
 1
- 0# f() at main.cpp:11
+ 0# main.cpp:11
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>swap -- basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/swap.html"/>
      <id>abab91c601328dc4235c664e0d3763facfbb271b:reference/stacktrace/basic_stacktrace/swap.md</id>
      <updated>2021-01-27T17:59:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/swap.md b/reference/stacktrace/basic_stacktrace/swap.md
index 46ff167d3..6c39d44e5 100644
--- a/reference/stacktrace/basic_stacktrace/swap.md
+++ b/reference/stacktrace/basic_stacktrace/swap.md
@@ -48,9 +48,9 @@ int main() {
 
 ### 出力例
 ```
- 0# g() at main.cpp:6
- 1# f() at main.cpp:13
- 2# main at main.cpp:17
+ 0# main.cpp:6
+ 1# main.cpp:13
+ 2# main.cpp:17
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>swap (非メンバ関数) -- basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/swap_free.html"/>
      <id>abab91c601328dc4235c664e0d3763facfbb271b:reference/stacktrace/basic_stacktrace/swap_free.md</id>
      <updated>2021-01-27T17:59:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/swap_free.md b/reference/stacktrace/basic_stacktrace/swap_free.md
index 24797c8de..714ff73f8 100644
--- a/reference/stacktrace/basic_stacktrace/swap_free.md
+++ b/reference/stacktrace/basic_stacktrace/swap_free.md
@@ -53,9 +53,9 @@ int main() {
 
 ### 出力例
 ```
- 0# g() at main.cpp:6
- 1# f() at main.cpp:13
- 2# main at main.cpp:17
+ 0# main.cpp:6
+ 1# main.cpp:13
+ 2# main.cpp:17
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>to_string -- basic_stacktrace : stacktrace_entryに関数名の情報がなかったので出力から削除しておく</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/to_string.html"/>
      <id>abab91c601328dc4235c664e0d3763facfbb271b:reference/stacktrace/basic_stacktrace/to_string.md</id>
      <updated>2021-01-27T17:59:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/to_string.md b/reference/stacktrace/basic_stacktrace/to_string.md
index ad35d05a0..4c9892805 100644
--- a/reference/stacktrace/basic_stacktrace/to_string.md
+++ b/reference/stacktrace/basic_stacktrace/to_string.md
@@ -48,9 +48,9 @@ int main() {
 
 ### 出力例
 ```
- 0# g() at main.cpp:5
- 1# f() at main.cpp:10
- 2# main at main.cpp:14
+ 0# main.cpp:5
+ 1# main.cpp:10
+ 2# main.cpp:14
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>stacktrace -- stacktrace_entryクラスページを追加</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace.html"/>
      <id>4a352623211830d331c8c2629b6389059b6832eb:reference/stacktrace.md</id>
      <updated>2021-01-27T17:53:27+09:00</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;stacktrace&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;stacktrace&lt;/span&gt;&lt;span class=&#34;cpp cpp23&#34; title=&#34;C++23で追加&#34;&gt;(C++23)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;stacktrace&amp;gt;&lt;/code&gt;ヘッダでは、現在の実行スレッドのスタックトレースに関する情報を取得する機能を提供する。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/stacktrace/stacktrace_entry.html&#34;&gt;stacktrace_entry&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;個々のスタックトレースの位置情報を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++23&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace.html&#34;&gt;basic_stacktrace&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;スタックトレース全体を取得・参照する型 (class template)&lt;/td&gt;
&lt;td&gt;C++23&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++23&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p0881r7.html&#34; target=&#34;_blank&#34;&gt;P0881R7 A Proposal to add stacktrace library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>basic_stacktrace -- stacktrace_entryクラスページを追加</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace.html"/>
      <id>4a352623211830d331c8c2629b6389059b6832eb:reference/stacktrace/basic_stacktrace.md</id>
      <updated>2021-01-27T17:53:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace.md b/reference/stacktrace/basic_stacktrace.md
index 962c9d25a..e318d6919 100644
--- a/reference/stacktrace/basic_stacktrace.md
+++ b/reference/stacktrace/basic_stacktrace.md
@@ -13,7 +13,7 @@ namespace std {
 }
 ```
 * allocator[link /reference/memory/allocator.md]
-* stacktrace_entry[link stacktrace_entry.md.nolink]
+* stacktrace_entry[link stacktrace_entry.md]
 
 ## 概要
 `basic_stacktrace`は、現在位置からその関数がどこで呼び出されたかの履歴を取得するためのクラスである。この機能は、デバッグに役立つ。
@@ -98,7 +98,7 @@ namespace std {
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| `value_type`       | 要素型 [`stacktrace_entry`](stacktrace_entry.md.nolink) | C++23 |
+| `value_type`       | 要素型 [`stacktrace_entry`](stacktrace_entry.md) | C++23 |
 | `const_reference`  | `const`参照型 `const value_type&amp;amp;` | C++23 |
 | `reference`        | 参照型 `value_type&amp;amp;` | C++23 |
 | `const_iterator`   | 読み取り専用イテレータ型。実装定義のランダムアクセスイテレータ | C++23 |
@@ -204,7 +204,7 @@ int main() {
 }
 ```
 * current[link basic_stacktrace/current.md]
-* std::stacktrace_entry[link stacktrace_entry.md.nolink]
+* std::stacktrace_entry[link stacktrace_entry.md]
 * std::abort()[link /reference/cstdlib/abort.md]
 * std::cerr[link /reference/iostream/cerr.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>begin -- stacktrace_entryクラスページを追加</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/begin.html"/>
      <id>4a352623211830d331c8c2629b6389059b6832eb:reference/stacktrace/basic_stacktrace/begin.md</id>
      <updated>2021-01-27T17:53:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/begin.md b/reference/stacktrace/basic_stacktrace/begin.md
index 62a433b88..15fbe084f 100644
--- a/reference/stacktrace/basic_stacktrace/begin.md
+++ b/reference/stacktrace/basic_stacktrace/begin.md
@@ -41,7 +41,7 @@ int main() {
 * st.begin()[color ff0000]
 * st.end()[link end.md]
 * current()[link current.md]
-* std::stacktrace_entry[link /reference/stacktrace/stacktrace_entry.md.nolink]
+* std::stacktrace_entry[link /reference/stacktrace/stacktrace_entry.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>cbegin -- stacktrace_entryクラスページを追加</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/cbegin.html"/>
      <id>4a352623211830d331c8c2629b6389059b6832eb:reference/stacktrace/basic_stacktrace/cbegin.md</id>
      <updated>2021-01-27T17:53:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/cbegin.md b/reference/stacktrace/basic_stacktrace/cbegin.md
index 9cc9a7f32..b6eb5b65f 100644
--- a/reference/stacktrace/basic_stacktrace/cbegin.md
+++ b/reference/stacktrace/basic_stacktrace/cbegin.md
@@ -41,7 +41,7 @@ int main() {
 * st.cbegin()[color ff0000]
 * st.cend()[link cend.md]
 * current()[link current.md]
-* std::stacktrace_entry[link /reference/stacktrace/stacktrace_entry.md.nolink]
+* std::stacktrace_entry[link /reference/stacktrace/stacktrace_entry.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>cend -- stacktrace_entryクラスページを追加</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/cend.html"/>
      <id>4a352623211830d331c8c2629b6389059b6832eb:reference/stacktrace/basic_stacktrace/cend.md</id>
      <updated>2021-01-27T17:53:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/cend.md b/reference/stacktrace/basic_stacktrace/cend.md
index c8d8735a8..911dc7afb 100644
--- a/reference/stacktrace/basic_stacktrace/cend.md
+++ b/reference/stacktrace/basic_stacktrace/cend.md
@@ -41,7 +41,7 @@ int main() {
 * st.cend()[color ff0000]
 * st.cbegin()[link cbegin.md]
 * current()[link current.md]
-* std::stacktrace_entry[link /reference/stacktrace/stacktrace_entry.md.nolink]
+* std::stacktrace_entry[link /reference/stacktrace/stacktrace_entry.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>crbegin -- stacktrace_entryクラスページを追加</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/crbegin.html"/>
      <id>4a352623211830d331c8c2629b6389059b6832eb:reference/stacktrace/basic_stacktrace/crbegin.md</id>
      <updated>2021-01-27T17:53:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/crbegin.md b/reference/stacktrace/basic_stacktrace/crbegin.md
index 4f4d22d46..2c7dc6637 100644
--- a/reference/stacktrace/basic_stacktrace/crbegin.md
+++ b/reference/stacktrace/basic_stacktrace/crbegin.md
@@ -44,7 +44,7 @@ int main() {
 * st.crbegin()[color ff0000]
 * st.crend()[link crend.md]
 * current()[link current.md]
-* std::stacktrace_entry[link /reference/stacktrace/stacktrace_entry.md.nolink]
+* std::stacktrace_entry[link /reference/stacktrace/stacktrace_entry.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>crend -- stacktrace_entryクラスページを追加</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/crend.html"/>
      <id>4a352623211830d331c8c2629b6389059b6832eb:reference/stacktrace/basic_stacktrace/crend.md</id>
      <updated>2021-01-27T17:53:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/crend.md b/reference/stacktrace/basic_stacktrace/crend.md
index a1fd0b291..35aee8444 100644
--- a/reference/stacktrace/basic_stacktrace/crend.md
+++ b/reference/stacktrace/basic_stacktrace/crend.md
@@ -44,7 +44,7 @@ int main() {
 * st.crend()[color ff0000]
 * st.crbegin()[link crbegin.md]
 * current()[link current.md]
-* std::stacktrace_entry[link /reference/stacktrace/stacktrace_entry.md.nolink]
+* std::stacktrace_entry[link /reference/stacktrace/stacktrace_entry.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>current -- stacktrace_entryクラスページを追加</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/current.html"/>
      <id>4a352623211830d331c8c2629b6389059b6832eb:reference/stacktrace/basic_stacktrace/current.md</id>
      <updated>2021-01-27T17:53:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/current.md b/reference/stacktrace/basic_stacktrace/current.md
index 080415f51..9e18a3e87 100644
--- a/reference/stacktrace/basic_stacktrace/current.md
+++ b/reference/stacktrace/basic_stacktrace/current.md
@@ -34,17 +34,17 @@ static basic_stacktrace
 ## 戻り値
 - (1) :
     - 現在の実行スレッドでの、現在の評価のスタックトレースを保持する`basic_stacktrace`オブジェクトを構築する
-    - `alloc`は[`stacktrace_entry`](/reference/stacktrace/stacktrace_entry.md.nolink)オブジェクトの配列を保持する[`std::vector`](/reference/vector/vector.md)型メンバ変数に渡される
+    - `alloc`は[`stacktrace_entry`](/reference/stacktrace/stacktrace_entry.md)オブジェクトの配列を保持する[`std::vector`](/reference/vector/vector.md)型メンバ変数に渡される
 - (2) :
     - `basic_stacktrace::current(alloc)`で構築されたオブジェクト`st`の[`st.size()`](size.md)を`n`として、
-    - 範囲`[st.begin() + min(n, skip), st.end())`と`alloc`を、[`stacktrace_entry`](/reference/stacktrace/stacktrace_entry.md.nolink)オブジェクトの配列を保持する[`std::vector`](/reference/vector/vector.md)型メンバ変数として保持する。ただし、その初期化に失敗した場合、`basic_stacktrace`オブジェクトは空になる
+    - 範囲`[st.begin() + min(n, skip), st.end())`と`alloc`を、[`stacktrace_entry`](/reference/stacktrace/stacktrace_entry.md)オブジェクトの配列を保持する[`std::vector`](/reference/vector/vector.md)型メンバ変数として保持する。ただし、その初期化に失敗した場合、`basic_stacktrace`オブジェクトは空になる
 - (3) :
     - `basic_stacktrace::current(alloc)`で構築されたオブジェクト`st`の[`st.size()`](size.md)を`n`として、
-    - 範囲`[st.begin() + min(n, skip), st.begin() + min(n, skip + max_depth))`と`alloc`を、[`stacktrace_entry`](/reference/stacktrace/stacktrace_entry.md.nolink)オブジェクトの配列を保持する[`std::vector`](/reference/vector/vector.md)型メンバ変数として保持する。ただし、その初期化に失敗した場合、`basic_stacktrace`オブジェクトは空になる
+    - 範囲`[st.begin() + min(n, skip), st.begin() + min(n, skip + max_depth))`と`alloc`を、[`stacktrace_entry`](/reference/stacktrace/stacktrace_entry.md)オブジェクトの配列を保持する[`std::vector`](/reference/vector/vector.md)型メンバ変数として保持する。ただし、その初期化に失敗した場合、`basic_stacktrace`オブジェクトは空になる
 
 
 ## 備考
-- (1) : 正常にスタックトレースを取得できた場合、構築された`basic_stacktrace`型のオブジェクト`st`の先頭要素`st[0]`は、現在の評価を表す[`stacktrace_entry`](/reference/stacktrace/stacktrace_entry.md.nolink)オブジェクトであり、末尾要素`st[st.size() - 1]`は現在の実行スレッドの初期関数を表す[`stacktrace_entry`](/reference/stacktrace/stacktrace_entry.md.nolink)オブジェクトである
+- (1) : 正常にスタックトレースを取得できた場合、構築された`basic_stacktrace`型のオブジェクト`st`の先頭要素`st[0]`は、現在の評価を表す[`stacktrace_entry`](/reference/stacktrace/stacktrace_entry.md)オブジェクトであり、末尾要素`st[st.size() - 1]`は現在の実行スレッドの初期関数を表す[`stacktrace_entry`](/reference/stacktrace/stacktrace_entry.md)オブジェクトである
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>end -- stacktrace_entryクラスページを追加</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/end.html"/>
      <id>4a352623211830d331c8c2629b6389059b6832eb:reference/stacktrace/basic_stacktrace/end.md</id>
      <updated>2021-01-27T17:53:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/end.md b/reference/stacktrace/basic_stacktrace/end.md
index 8dae22ba7..c194a257d 100644
--- a/reference/stacktrace/basic_stacktrace/end.md
+++ b/reference/stacktrace/basic_stacktrace/end.md
@@ -41,7 +41,7 @@ int main() {
 * st.end()[color ff0000]
 * st.begin()[link begin.md]
 * current()[link current.md]
-* std::stacktrace_entry[link /reference/stacktrace/stacktrace_entry.md.nolink]
+* std::stacktrace_entry[link /reference/stacktrace/stacktrace_entry.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>max_size -- stacktrace_entryクラスページを追加</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/get_allocator.html"/>
      <id>4a352623211830d331c8c2629b6389059b6832eb:reference/stacktrace/basic_stacktrace/get_allocator.md</id>
      <updated>2021-01-27T17:53:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/get_allocator.md b/reference/stacktrace/basic_stacktrace/get_allocator.md
index badcba136..15c2029f2 100644
--- a/reference/stacktrace/basic_stacktrace/get_allocator.md
+++ b/reference/stacktrace/basic_stacktrace/get_allocator.md
@@ -30,7 +30,7 @@ int main() {
 }
 ```
 * trace.get_allocator()[color ff0000]
-* std::stacktrace_entry[link /reference/stacktrace/stacktrace_entry.md.nolink]
+* std::stacktrace_entry[link /reference/stacktrace/stacktrace_entry.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>max_size -- stacktrace_entryクラスページを追加</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/max_size.html"/>
      <id>4a352623211830d331c8c2629b6389059b6832eb:reference/stacktrace/basic_stacktrace/max_size.md</id>
      <updated>2021-01-27T17:53:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/max_size.md b/reference/stacktrace/basic_stacktrace/max_size.md
index cb2587715..3e633e70f 100644
--- a/reference/stacktrace/basic_stacktrace/max_size.md
+++ b/reference/stacktrace/basic_stacktrace/max_size.md
@@ -14,7 +14,7 @@ size_type max_size() const noexcept; // (1) C++23
 
 
 ## 戻り値
-保持している[`std::vector`](/reference/vector/vector.md)`&amp;lt;`[`std::stacktrace_entry`](/reference/stacktrace/stacktrace_entry.md.nolink)`&amp;gt;`型スタックトレースの履歴の、[`max_size()`](/reference/vector/vector/max_size.md)を返す。
+保持している[`std::vector`](/reference/vector/vector.md)`&amp;lt;`[`std::stacktrace_entry`](/reference/stacktrace/stacktrace_entry.md)`&amp;gt;`型スタックトレースの履歴の、[`max_size()`](/reference/vector/vector/max_size.md)を返す。
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- stacktrace_entryクラスページを追加</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/op_constructor.html"/>
      <id>4a352623211830d331c8c2629b6389059b6832eb:reference/stacktrace/basic_stacktrace/op_constructor.md</id>
      <updated>2021-01-27T17:53:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/op_constructor.md b/reference/stacktrace/basic_stacktrace/op_constructor.md
index 004659d96..9c44b68ee 100644
--- a/reference/stacktrace/basic_stacktrace/op_constructor.md
+++ b/reference/stacktrace/basic_stacktrace/op_constructor.md
@@ -33,7 +33,7 @@ basic_stacktrace(basic_stacktrace&amp;amp;&amp;amp; other,
 
 
 ## 効果
-- (2) : 保持する[`std::vector`](/reference/vector/vector.md)`&amp;lt;`[`std::stacktrace_entry`](/reference/stacktrace/stacktrace_entry.md.nolink)`&amp;gt;`型スタックトレースの履歴のオブジェクトに、コンストラクタ引数として`alloc`を渡す
+- (2) : 保持する[`std::vector`](/reference/vector/vector.md)`&amp;lt;`[`std::stacktrace_entry`](/reference/stacktrace/stacktrace_entry.md)`&amp;gt;`型スタックトレースの履歴のオブジェクトに、コンストラクタ引数として`alloc`を渡す
 
 
 ## 事後条件
@@ -88,7 +88,7 @@ int main() {
   f();
 }
 ```
-* std::stacktrace_entry[link /reference/stacktrace/stacktrace_entry.md.nolink]
+* std::stacktrace_entry[link /reference/stacktrace/stacktrace_entry.md]
 * empty()[link empty.md]
 * std::move[link /reference/utility/move.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>rbegin -- stacktrace_entryクラスページを追加</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/rbegin.html"/>
      <id>4a352623211830d331c8c2629b6389059b6832eb:reference/stacktrace/basic_stacktrace/rbegin.md</id>
      <updated>2021-01-27T17:53:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/rbegin.md b/reference/stacktrace/basic_stacktrace/rbegin.md
index 9ad96f570..dce03b134 100644
--- a/reference/stacktrace/basic_stacktrace/rbegin.md
+++ b/reference/stacktrace/basic_stacktrace/rbegin.md
@@ -44,7 +44,7 @@ int main() {
 * st.rbegin()[color ff0000]
 * st.rend()[link rend.md]
 * current()[link current.md]
-* std::stacktrace_entry[link /reference/stacktrace/stacktrace_entry.md.nolink]
+* std::stacktrace_entry[link /reference/stacktrace/stacktrace_entry.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>rend -- stacktrace_entryクラスページを追加</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/rend.html"/>
      <id>4a352623211830d331c8c2629b6389059b6832eb:reference/stacktrace/basic_stacktrace/rend.md</id>
      <updated>2021-01-27T17:53:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/rend.md b/reference/stacktrace/basic_stacktrace/rend.md
index 16f8c75ac..0744d950f 100644
--- a/reference/stacktrace/basic_stacktrace/rend.md
+++ b/reference/stacktrace/basic_stacktrace/rend.md
@@ -44,7 +44,7 @@ int main() {
 * st.rend()[color ff0000]
 * st.rbegin()[link rbegin.md]
 * current()[link current.md]
-* std::stacktrace_entry[link /reference/stacktrace/stacktrace_entry.md.nolink]
+* std::stacktrace_entry[link /reference/stacktrace/stacktrace_entry.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>stacktrace_entry -- stacktrace_entryクラスページを追加</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/stacktrace_entry.html"/>
      <id>4a352623211830d331c8c2629b6389059b6832eb:reference/stacktrace/stacktrace_entry.md</id>
      <updated>2021-01-27T17:53:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/stacktrace_entry.md b/reference/stacktrace/stacktrace_entry.md
new file mode 100644
index 000000000..ea329c8d4
--- /dev/null
+++ b/reference/stacktrace/stacktrace_entry.md
@@ -0,0 +1,130 @@
+# stacktrace_entry
+* stacktrace[meta header]
+* std[meta namespace]
+* class template[meta id-type]
+* cpp23[meta cpp]
+
+```cpp
+namespace std {
+  class stacktrace_entry;
+}
+```
+
+## 概要
+
+
+
+## メンバ関数
+### 構築・破棄
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`(constructor)`](stacktrace_entry/op_constructor.md.nolink) | コンストラクタ | C++23 |
+| `~basic_stacktrace();` | デストラクタ | C++23 |
+| [`operator=`](stacktrace_entry/op_assign.md.nolink) | 代入演算子 | C++23 |
+
+
+### 観測
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`native_handle`](stacktrace_entry/native_handle.md.nolink) | ハンドルを取得する | C++23 |
+| [`operator bool`](stacktrace_entry/op_bool.md.nolink) | 空でないかを判定する | C++23 |
+
+
+### 照会
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`description`](stacktrace_entry/description.md.nolink) | スタックトレースの履歴数を取得する | C++23 |
+| [`source_file`](stacktrace_entry/source_file.md.nolink) | 格納可能な最大の要素数を取得する | C++23 |
+| [`source_line`](stacktrace_entry/source_line.md.nolink) | スタックトレースの履歴が空かどうかを判定する | C++23 |
+
+
+## メンバ型
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| `native_handle_type` | 実装依存のハンドル型 | C++23 |
+
+
+## 非メンバ関数
+### 入出力
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`operator&amp;lt;&amp;lt;`](stacktrace_entry/op_ostream.md.nolink) | 出力ストリームに出力する | C++23 |
+
+
+### 文字列への変換
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`to_string`](stacktrace_entry/to_string.md.nolink) | 文字列に変換する | C++23 |
+
+
+### 比較演算子
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`operator==`](stacktrace_entry/op_equal.md.nolink) | 等値比較を行う | C++23 |
+| `bool operator!=(const stacktrace_entry&amp;amp;, const stacktrace_entry&amp;amp;) noexcept;` | 非等値比較を行う (`==`により使用可能) | C++23 |
+| [`operator&amp;lt;=&amp;gt;`](stacktrace_entry/op_compare_3way.md.nolink) | 三方比較を行う | C++23 |
+| `strong_ordering operator&amp;lt;(const stacktrace_entry&amp;amp;, const stacktrace_entry&amp;amp;) noexcept;` | 左辺が右辺より小さいかを判定する (`&amp;lt;=&amp;gt;`により使用可能) | C++23 |
+| `strong_ordering operator&amp;lt;=(const stacktrace_entry&amp;amp;, const stacktrace_entry&amp;amp;) noexcept;` | 左辺が右辺以下かを判定する (`&amp;lt;=&amp;gt;`により使用可能) | C++23 |
+| `strong_ordering operator&amp;gt;(const stacktrace_entry&amp;amp;, const stacktrace_entry&amp;amp;) noexcept;` | 左辺が右辺より大きいかを判定する (`&amp;lt;=&amp;gt;`により使用可能) | C++23 |
+| `strong_ordering operator&amp;gt;=(const stacktrace_entry&amp;amp;, const stacktrace_entry&amp;amp;) noexcept;` | 左辺が右辺以上かを判定する (`&amp;lt;=&amp;gt;`により使用可能) | C++23 |
+
+
+## ハッシュサポート
+
+| 名前 | 説明 | 対応バージョン |
+|------------------------------------------------|----------------------------------------|-------|
+| `template &amp;lt;class T&amp;gt; struct hash;`              | `hash`クラスの先行宣言                 | C++23 |
+| `template &amp;lt;&amp;gt;`&amp;lt;br/&amp;gt; `struct hash&amp;lt;stacktrace_entry&amp;gt;;` | `hash`クラスの`stacktrace_entry`に対する特殊化 | C++23 |
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;stacktrace&amp;gt;
+
+void g() {
+  std::stacktrace st = std::stacktrace::current(0, 1);
+  std::stacktrace_entry entry = st[0];
+
+  std::cout &amp;lt;&amp;lt; entry.description() &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; entry.source_file() &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; entry.source_line() &amp;lt;&amp;lt; std::endl;
+}
+
+void f() {
+  g();
+}
+
+int main() {
+  f();
+}
+```
+* std::stacktrace_entry[color ff0000]
+* std::stacktrace[link basic_stacktrace.md]
+* current()[link basic_stacktrace/current.md]
+* entry.description()[link stacktrace_entry/description.md.nolink]
+* entry.source_file()[link stacktrace_entry/source_file.md.nolink]
+* entry.source_line()[link stacktrace_entry/source_line.md.nolink]
+
+### 出力例
+```
+main.cpp:5
+main.cpp
+5
+```
+
+## バージョン
+### 言語
+- C++23
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>(符号付き)size_tリテラルのためのサフィックス -- cpp23/literal_suffix_for_signed_size_t: 表記ゆれを統一</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/literal_suffix_for_signed_size_t.html"/>
      <id>0686e9c5983f3307b3edc6f4039af5d0b4b2b536:lang/cpp23/literal_suffix_for_signed_size_t.md</id>
      <updated>2021-01-27T10:10:10+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/literal_suffix_for_signed_size_t.md b/lang/cpp23/literal_suffix_for_signed_size_t.md
index 7ebf516f4..aa551dbca 100644
--- a/lang/cpp23/literal_suffix_for_signed_size_t.md
+++ b/lang/cpp23/literal_suffix_for_signed_size_t.md
@@ -26,8 +26,7 @@ for (auto i = 0u, s = v.size(); i &amp;lt; s; ++i) {}
 for (auto i = 0, s = v.size(); i &amp;lt; s; ++i) {}
 
 // case 3
-for (auto i = 0uz, s = v.size(); i &amp;lt; s; ++i) {
-}
+for (auto i = 0uz, s = v.size(); i &amp;lt; s; ++i) {}
 ```
 
 ここでのcase 1では、`0u`は`unsigned int`型リテラルとなり、[`size_t`](/reference/cstddef/size_t.md)型が64ビットとして定義される場合に、[`size_t`](/reference/cstddef/size_t.md)型を`unsigned int`型に丸めるために警告が出力される可能性がある。
@@ -44,7 +43,7 @@ std::size_t size = …;
 // case 1
 std::size_t clamped_size = std::max(0, std::min(54, size));
 
-case 2
+// case 2
 std::size_t clamped_size = std::max(0uz, std::min(54uz, size));
 ```
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator= -- basic_stacktrace : コード修飾を追加</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/op_assign.html"/>
      <id>9b529e8fefc1560ce4398258221a4eab58278e7b:reference/stacktrace/basic_stacktrace/op_assign.md</id>
      <updated>2021-01-27T09:19:43+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/op_assign.md b/reference/stacktrace/basic_stacktrace/op_assign.md
index f88277d1d..db9c6f047 100644
--- a/reference/stacktrace/basic_stacktrace/op_assign.md
+++ b/reference/stacktrace/basic_stacktrace/op_assign.md
@@ -14,6 +14,7 @@ basic_stacktrace&amp;amp; operator=(basic_stacktrace&amp;amp;&amp;amp; other)
     allocator_traits&amp;lt;Allocator&amp;gt;::is_always_equal::value
   );                                                        // (2) C++23
 ```
+* allocator_traits[link /reference/memory/allocator_traits.md]
 
 ## 概要
 - (1) コピー代入
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- basic_stacktrace : コード修飾を追加</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/op_constructor.html"/>
      <id>9b529e8fefc1560ce4398258221a4eab58278e7b:reference/stacktrace/basic_stacktrace/op_constructor.md</id>
      <updated>2021-01-27T09:19:43+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/op_constructor.md b/reference/stacktrace/basic_stacktrace/op_constructor.md
index 51db44501..004659d96 100644
--- a/reference/stacktrace/basic_stacktrace/op_constructor.md
+++ b/reference/stacktrace/basic_stacktrace/op_constructor.md
@@ -19,6 +19,7 @@ basic_stacktrace(const basic_stacktrace&amp;amp; other,
 basic_stacktrace(basic_stacktrace&amp;amp;&amp;amp; other,
                  const allocator_type&amp;amp; alloc);                   // (6) C++23
 ```
+* is_nothrow_default_constructible_v[link /reference/type_traits/is_nothrow_default_constructible.md]
 
 ## 概要
 `basic_stacktrace`オブジェクトを構築する。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>basic_stacktrace -- basic_stacktrace: コンストラクタと代入演算子を追加して完了</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace.html"/>
      <id>751f5e90bf9c712252720039c291c15093316db9:reference/stacktrace/basic_stacktrace.md</id>
      <updated>2021-01-27T08:55:22+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace.md b/reference/stacktrace/basic_stacktrace.md
index 83c9768f5..962c9d25a 100644
--- a/reference/stacktrace/basic_stacktrace.md
+++ b/reference/stacktrace/basic_stacktrace.md
@@ -37,9 +37,9 @@ namespace std {
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`(constructor)`](basic_stacktrace/op_constructor.md.nolink) | コンストラクタ | C++23 |
-| [`(destructor)`](basic_stacktrace/op_destructor.md.nolink)   | デストラクタ | C++23 |
-| [`operator=`](basic_stacktrace/op_assign.md.nolink) | 代入演算子 | C++23 |
+| [`(constructor)`](basic_stacktrace/op_constructor.md) | コンストラクタ | C++23 |
+| `~basic_stacktrace();` | デストラクタ | C++23 |
+| [`operator=`](basic_stacktrace/op_assign.md) | 代入演算子 | C++23 |
 
 
 ### アロケータ
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator= -- basic_stacktrace: コンストラクタと代入演算子を追加して完了</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/op_assign.html"/>
      <id>751f5e90bf9c712252720039c291c15093316db9:reference/stacktrace/basic_stacktrace/op_assign.md</id>
      <updated>2021-01-27T08:55:22+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/op_assign.md b/reference/stacktrace/basic_stacktrace/op_assign.md
new file mode 100644
index 000000000..f88277d1d
--- /dev/null
+++ b/reference/stacktrace/basic_stacktrace/op_assign.md
@@ -0,0 +1,69 @@
+# operator=
+* stacktrace[meta header]
+* std[meta namespace]
+* basic_stacktrace[meta class]
+* function[meta id-type]
+* cpp23[meta cpp]
+
+```cpp
+basic_stacktrace&amp;amp; operator=(const basic_stacktrace&amp;amp; other); // (1) C++23
+
+basic_stacktrace&amp;amp; operator=(basic_stacktrace&amp;amp;&amp;amp; other)
+  noexcept(
+    allocator_traits&amp;lt;Allocator&amp;gt;::propagate_on_container_move_assignment::value ||
+    allocator_traits&amp;lt;Allocator&amp;gt;::is_always_equal::value
+  );                                                        // (2) C++23
+```
+
+## 概要
+- (1) コピー代入
+- (2) ムーブ代入
+
+
+## 例外
+- (1), (2) : 実装は、メモリ確保に失敗した場合に[`empty()`](empty.md)を`true`にすることで例外仕様を強化できる
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;stacktrace&amp;gt;
+
+void g() {
+  std::stacktrace st = std::stacktrace::current();
+
+  // (1) コピー代入
+  std::stacktrace st2;
+  st2 = st;
+
+  // (2) ムーブ代入
+  std::stacktrace st3;
+  st3 = std::move(st2);
+
+  std::cout &amp;lt;&amp;lt; st3[0] &amp;lt;&amp;lt; std::endl;
+}
+
+void f() {
+  g();
+}
+
+int main() {
+  f();
+}
+```
+* current()[link current.md]
+
+### 出力例
+```
+g() at main.cpp:5
+```
+
+
+## バージョン
+### 言語
+- C++23
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- basic_stacktrace: コンストラクタと代入演算子を追加して完了</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/basic_stacktrace/op_constructor.html"/>
      <id>751f5e90bf9c712252720039c291c15093316db9:reference/stacktrace/basic_stacktrace/op_constructor.md</id>
      <updated>2021-01-27T08:55:22+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/basic_stacktrace/op_constructor.md b/reference/stacktrace/basic_stacktrace/op_constructor.md
new file mode 100644
index 000000000..51db44501
--- /dev/null
+++ b/reference/stacktrace/basic_stacktrace/op_constructor.md
@@ -0,0 +1,106 @@
+# コンストラクタ
+* stacktrace[meta header]
+* std[meta namespace]
+* basic_stacktrace[meta class]
+* function[meta id-type]
+* cpp23[meta cpp]
+
+```cpp
+basic_stacktrace()
+  noexcept(is_nothrow_default_constructible_v&amp;lt;allocator_type&amp;gt;);  // (1) C++23
+
+explicit basic_stacktrace(const allocator_type&amp;amp; alloc) noexcept; // (2) C++23
+
+basic_stacktrace(const basic_stacktrace&amp;amp; other);                 // (3) C++23
+basic_stacktrace(basic_stacktrace&amp;amp;&amp;amp; other) noexcept;             // (4) C++23
+
+basic_stacktrace(const basic_stacktrace&amp;amp; other,
+                 const allocator_type&amp;amp; alloc);                   // (5) C++23
+basic_stacktrace(basic_stacktrace&amp;amp;&amp;amp; other,
+                 const allocator_type&amp;amp; alloc);                   // (6) C++23
+```
+
+## 概要
+`basic_stacktrace`オブジェクトを構築する。
+
+- (1) : デフォルト構築
+- (2) : アロケータを指定して構築
+- (3) : コピー構築
+- (4) : ムーブ構築
+- (5) : アロケータを指定してコピー構築
+- (6) : アロケータを指定してムーブ構築
+
+
+## 効果
+- (2) : 保持する[`std::vector`](/reference/vector/vector.md)`&amp;lt;`[`std::stacktrace_entry`](/reference/stacktrace/stacktrace_entry.md.nolink)`&amp;gt;`型スタックトレースの履歴のオブジェクトに、コンストラクタ引数として`alloc`を渡す
+
+
+## 事後条件
+- (1), (2) : [`empty()`](empty.md)が`true`になること
+
+
+## 例外
+- (3), (4), (5), (6) : 実装は、メモリ確保に失敗した場合に[`empty()`](empty.md)を`true`にすることで例外仕様を強化できる
+
+
+## 備考
+- 実装は、これらのコンストラクタのほかに、[`current()`](current.md)関数によるスタックトレース履歴を保持するための追加のコンストラクタをもっている可能性がある
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;stacktrace&amp;gt;
+
+void g() {
+  // (1) デフォルト構築
+  std::stacktrace st1{};
+  assert(st1.empty());
+
+  // (2) アロケータを指定して構築
+  std::allocator&amp;lt;std::stacktrace_entry&amp;gt; alloc{};
+  std::stacktrace st2{alloc};
+  assert(st2.empty());
+
+  // (3) コピー構築
+  std::stacktrace st3 = st1;
+  assert(st3 == st1);
+
+  // (4) ムーブ構築
+  std::stacktrace st4 = std::move(st3);
+  assert(st4 == st1);
+
+  // (5) アロケータを指定してコピー構築
+  std::stacktrace st5{st1, alloc};
+  assert(st5 == st1); // アロケータは比較されない
+
+  // (6) アロケータを指定してムーブ構築
+  std::stacktrace st6{std::move(st5), alloc};
+  assert(st6 == st1);
+}
+
+void f() {
+  g();
+}
+
+int main() {
+  f();
+}
+```
+* std::stacktrace_entry[link /reference/stacktrace/stacktrace_entry.md.nolink]
+* empty()[link empty.md]
+* std::move[link /reference/utility/move.md]
+
+### 出力
+```
+```
+
+
+## バージョン
+### 言語
+- C++23
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
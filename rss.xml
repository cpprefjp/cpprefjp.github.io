<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2022-03-19T22:27:43.384967</updated>
  <id>cecba818-1079-4232-8f31-87ef4f64b17d</id>

  
    <entry>
      <title>algorithm -- ranges::sortの説明を追加 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm.html"/>
      <id>7874a832d37c9a712c92f4c8e0c22598eb380aa2:reference/algorithm.md</id>
      <updated>2022-03-20T07:22:11+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm.md b/reference/algorithm.md
index c8c52e457..9f329068e 100644
--- a/reference/algorithm.md
+++ b/reference/algorithm.md
@@ -274,7 +274,7 @@ ranges::sort(pv, {}, &amp;amp;Parson::name);
 | [`partial_sort_copy`](algorithm/partial_sort_copy.md) | 範囲を部分的にソートした結果を他の範囲にコピーする | |
 | [`is_sorted`](algorithm/is_sorted.md)                 | ソート済みか判定する | C++11 |
 | [`is_sorted_until`](algorithm/is_sorted_until.md)     | ソート済みか判定し、ソートされていない位置のイテレータを取得する | C++11 |
-| [`ranges::sort`](algorithm/ranges_sort.md.nolink)                           | 範囲を並べ替える                                                 | C++20 |
+| [`ranges::sort`](algorithm/ranges_sort.md)                           | 範囲を並べ替える                                                 | C++20 |
 | [`ranges::stable_sort`](algorithm/ranges_stable_sort.md.nolink)             | 範囲を安定ソートで並べ替える                                     | C++20 |
 | [`ranges::partial_sort`](algorithm/ranges_partial_sort.md.nolink)           | 範囲を部分的にソートし、先頭N個を並んだ状態にする                | C++20 |
 | [`ranges::partial_sort_copy`](algorithm/ranges_partial_sort_copy.md.nolink) | 範囲を部分的にソートした結果を他の範囲にコピーする               | C++20 |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sort -- ranges::sortの説明を追加 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_sort.html"/>
      <id>7874a832d37c9a712c92f4c8e0c22598eb380aa2:reference/algorithm/ranges_sort.md</id>
      <updated>2022-03-20T07:22:11+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_sort.md b/reference/algorithm/ranges_sort.md
new file mode 100644
index 000000000..c18c8c166
--- /dev/null
+++ b/reference/algorithm/ranges_sort.md
@@ -0,0 +1,171 @@
+# sort
+* algorithm[meta header]
+* std::ranges[meta namespace]
+* function template[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::ranges {
+  template&amp;lt;random_access_iterator I, sentinel_for&amp;lt;I&amp;gt; S, class Comp = ranges::less, class Proj = identity&amp;gt;
+    requires sortable&amp;lt;I, Comp, Proj&amp;gt;
+  constexpr I sort(I first, S last, Comp comp = {}, Proj proj = {});            // (1)
+
+  template&amp;lt;random_access_range R, class Comp = ranges::less, class Proj = identity&amp;gt;
+    requires sortable&amp;lt;iterator_t&amp;lt;R&amp;gt;, Comp, Proj&amp;gt;
+  constexpr borrowed_iterator_t&amp;lt;R&amp;gt; sort(R&amp;amp;&amp;amp; r, Comp comp = {}, Proj proj = {}); // (2)
+}
+```
+* random_access_iterator[link /reference/iterator/random_access_iterator.md]
+* sentinel_for[link /reference/iterator/sentinel_for.md]
+* ranges::less[link /reference/functional/ranges_less.md]
+* identity[link /reference/functional/identity.md]
+* sortable[link /reference/iterator/sortable.md]
+* random_access_range[link /reference/ranges/random_access_range.md]
+* iterator_t[link /reference/ranges/iterator_t.md]
+* borrowed_iterator_t[link /reference/ranges/borrowed_iterator_t.md]
+
+## 概要
+範囲を並べ替える
+
+* (1): イテレーターペアで範囲を指定する
+* (2): 範囲を直接指定する
+
+## 効果
+`[first,last)` の範囲をソートする
+
+## 戻り値
+`last`
+
+## 計算量
+- O(N log N) (N == `last - first`) 回の比較
+
+## 備考
+- この関数には、特定のアルゴリズムで実装すべきという規定はない
+- 実装のアルゴリズムとしては、クイックソートの改良版であるイントロソートが使われることが多い
+
+## 例
+### 基本的な使い方
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;vector&amp;gt;
+#include &amp;lt;algorithm&amp;gt;
+
+int main()
+{
+  std::vector&amp;lt;int&amp;gt; v = {3, 1, 4, 2, 5};
+
+  // 昇順に並べ替える
+  std::ranges::sort(v);
+
+  for (int i : v) {
+    std::cout &amp;lt;&amp;lt; i;
+  }
+  std::cout &amp;lt;&amp;lt; std::endl;
+
+  // 降順に並べ替える
+  std::ranges::sort(v, std::ranges::greater());
+
+  for (int i : v) {
+    std::cout &amp;lt;&amp;lt; i;
+  }
+  std::cout &amp;lt;&amp;lt; std::endl;
+}
+```
+* std::ranges::sort[color ff0000]
+
+#### 出力
+```
+12345
+54321
+```
+
+### ユーザー定義型の配列を並べ替える
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;vector&amp;gt;
+#include &amp;lt;string&amp;gt;
+#include &amp;lt;algorithm&amp;gt;
+
+// 要素がひとつの場合
+struct MyInt {
+  int value;
+
+  friend auto operator&amp;lt;=&amp;gt;(const MyInt&amp;amp;, const MyInt&amp;amp;) = default;
+};
+
+// 要素が複数の場合
+struct Person {
+  int id;
+  int age;
+  std::string name;
+
+  friend auto operator&amp;lt;=&amp;gt;(const Person&amp;amp;, const Person&amp;amp;) = default;
+};
+
+int main() {
+  std::vector&amp;lt;MyInt&amp;gt; v1 {
+    MyInt{3},
+    MyInt{1},
+    MyInt{2},
+  };
+  std::ranges::sort(v1);
+
+  std::vector&amp;lt;Person&amp;gt; v2 {
+    Person{3, 30, &amp;#34;Carol&amp;#34;},
+    Person{1, 18, &amp;#34;Alice&amp;#34;},
+    Person{2, 32, &amp;#34;Bob&amp;#34;},
+  };
+  std::ranges::sort(v2);
+
+  std::vector&amp;lt;Person&amp;gt; v3 {
+    Person{3, 30, &amp;#34;Carol&amp;#34;},
+    Person{1, 18, &amp;#34;Alice&amp;#34;},
+    Person{2, 32, &amp;#34;Bob&amp;#34;},
+  };
+  // 特定のメンバでソート
+  std::ranges::sort(v2, {}, &amp;amp;Person::age);
+
+  for (const MyInt&amp;amp; x : v1) {
+    std::cout &amp;lt;&amp;lt; x.value &amp;lt;&amp;lt; std::endl;
+  }
+  std::cout &amp;lt;&amp;lt; std::endl;
+
+  for (const Person&amp;amp; x : v2) {
+    std::cout &amp;lt;&amp;lt; x.name &amp;lt;&amp;lt; std::endl;
+  }
+  std::cout &amp;lt;&amp;lt; std::endl;
+
+  for (const Person&amp;amp; x : v3) {
+    std::cout &amp;lt;&amp;lt; x.name &amp;lt;&amp;lt; std::endl;
+  }
+}
+```
+* std::ranges::sort[color ff0000]
+
+#### 出力
+```
+1
+2
+3
+
+Alice
+Bob
+Carol
+
+Alice
+Carol
+Bob
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): 10.1.0
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
+
+## 参照
+- [N4861 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>adjacent_find -- 参照リンクを修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_adjacent_find.html"/>
      <id>ab62174a9d4dfa9bd777d247e67af24340c3dc5c:reference/algorithm/ranges_adjacent_find.md</id>
      <updated>2022-03-20T07:14:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_adjacent_find.md b/reference/algorithm/ranges_adjacent_find.md
index 13e149535..7121bee48 100644
--- a/reference/algorithm/ranges_adjacent_find.md
+++ b/reference/algorithm/ranges_adjacent_find.md
@@ -116,4 +116,4 @@ inline constexpr adjacent_find_impl adjacent_find;
 - [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
 
 ## 参照
-- [N4821 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
+- [N4861 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>all_of -- 参照リンクを修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_all_of.html"/>
      <id>ab62174a9d4dfa9bd777d247e67af24340c3dc5c:reference/algorithm/ranges_all_of.md</id>
      <updated>2022-03-20T07:14:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_all_of.md b/reference/algorithm/ranges_all_of.md
index da98f8ef5..21cda2a60 100644
--- a/reference/algorithm/ranges_all_of.md
+++ b/reference/algorithm/ranges_all_of.md
@@ -113,4 +113,4 @@ inline constexpr all_of_impl all_of;
 - [`ranges::none_of`](/reference/algorithm/ranges_none_of.md)
 
 ## 参照
-- [N4821 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
+- [N4861 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>any_of -- 参照リンクを修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_any_of.html"/>
      <id>ab62174a9d4dfa9bd777d247e67af24340c3dc5c:reference/algorithm/ranges_any_of.md</id>
      <updated>2022-03-20T07:14:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_any_of.md b/reference/algorithm/ranges_any_of.md
index e4386d795..a2b6ae1e0 100644
--- a/reference/algorithm/ranges_any_of.md
+++ b/reference/algorithm/ranges_any_of.md
@@ -116,4 +116,4 @@ inline constexpr any_of_impl any_of;
 
 
 ## 参照
-- [N4821 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
+- [N4861 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>count -- 参照リンクを修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_count.html"/>
      <id>ab62174a9d4dfa9bd777d247e67af24340c3dc5c:reference/algorithm/ranges_count.md</id>
      <updated>2022-03-20T07:14:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_count.md b/reference/algorithm/ranges_count.md
index f0ed20105..0f31af4b6 100644
--- a/reference/algorithm/ranges_count.md
+++ b/reference/algorithm/ranges_count.md
@@ -113,4 +113,4 @@ inline constexpr count_impl count;
 - [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
 
 ## 参照
-- [N4821 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
+- [N4861 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>count_if -- 参照リンクを修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_count_if.html"/>
      <id>ab62174a9d4dfa9bd777d247e67af24340c3dc5c:reference/algorithm/ranges_count_if.md</id>
      <updated>2022-03-20T07:14:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_count_if.md b/reference/algorithm/ranges_count_if.md
index b4aa6c9be..593e963f4 100644
--- a/reference/algorithm/ranges_count_if.md
+++ b/reference/algorithm/ranges_count_if.md
@@ -111,4 +111,4 @@ inline constexpr count_if_impl count_if;
 - [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
 
 ## 参照
-- [N4821 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
+- [N4861 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>equal -- 参照リンクを修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_equal.html"/>
      <id>ab62174a9d4dfa9bd777d247e67af24340c3dc5c:reference/algorithm/ranges_equal.md</id>
      <updated>2022-03-20T07:14:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_equal.md b/reference/algorithm/ranges_equal.md
index b1faa1bda..9516f0940 100644
--- a/reference/algorithm/ranges_equal.md
+++ b/reference/algorithm/ranges_equal.md
@@ -122,4 +122,4 @@ inline constexpr equal_impl equal;
 - [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
 
 ## 参照
-- [N4821 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
+- [N4861 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>find -- 参照リンクを修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_find.html"/>
      <id>ab62174a9d4dfa9bd777d247e67af24340c3dc5c:reference/algorithm/ranges_find.md</id>
      <updated>2022-03-20T07:14:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_find.md b/reference/algorithm/ranges_find.md
index c48ae0f43..2ae35ee0c 100644
--- a/reference/algorithm/ranges_find.md
+++ b/reference/algorithm/ranges_find.md
@@ -105,4 +105,4 @@ inline constexpr find_impl find;
 - [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
 
 ## 参照
-- [N4821 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
+- [N4861 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>find_end -- 参照リンクを修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_find_end.html"/>
      <id>ab62174a9d4dfa9bd777d247e67af24340c3dc5c:reference/algorithm/ranges_find_end.md</id>
      <updated>2022-03-20T07:14:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_find_end.md b/reference/algorithm/ranges_find_end.md
index d229238c8..cf9fc0014 100644
--- a/reference/algorithm/ranges_find_end.md
+++ b/reference/algorithm/ranges_find_end.md
@@ -103,4 +103,4 @@ inline constexpr find_end_impl find_end;
 - [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
 
 ## 参照
-- [N4821 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
+- [N4861 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>find_first_of -- 参照リンクを修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_find_first_of.html"/>
      <id>ab62174a9d4dfa9bd777d247e67af24340c3dc5c:reference/algorithm/ranges_find_first_of.md</id>
      <updated>2022-03-20T07:14:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_find_first_of.md b/reference/algorithm/ranges_find_first_of.md
index 03fb751ac..2e2736939 100644
--- a/reference/algorithm/ranges_find_first_of.md
+++ b/reference/algorithm/ranges_find_first_of.md
@@ -118,4 +118,4 @@ inline constexpr find_first_of_impl find_first_of;
 - [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
 
 ## 参照
-- [N4821 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
+- [N4861 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>find_if -- 参照リンクを修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_find_if.html"/>
      <id>ab62174a9d4dfa9bd777d247e67af24340c3dc5c:reference/algorithm/ranges_find_if.md</id>
      <updated>2022-03-20T07:14:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_find_if.md b/reference/algorithm/ranges_find_if.md
index 00aecc5bc..a041dbb74 100644
--- a/reference/algorithm/ranges_find_if.md
+++ b/reference/algorithm/ranges_find_if.md
@@ -101,4 +101,4 @@ inline constexpr find_if_impl find_if;
 - [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
 
 ## 参照
-- [N4821 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
+- [N4861 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>find_if_not -- 参照リンクを修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_find_if_not.html"/>
      <id>ab62174a9d4dfa9bd777d247e67af24340c3dc5c:reference/algorithm/ranges_find_if_not.md</id>
      <updated>2022-03-20T07:14:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_find_if_not.md b/reference/algorithm/ranges_find_if_not.md
index dd7ce77e7..5be9d90da 100644
--- a/reference/algorithm/ranges_find_if_not.md
+++ b/reference/algorithm/ranges_find_if_not.md
@@ -101,4 +101,4 @@ inline constexpr find_if_not_impl find_if_not;
 - [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
 
 ## 参照
-- [N4821 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
+- [N4861 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>for_each -- 参照リンクを修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_for_each.html"/>
      <id>ab62174a9d4dfa9bd777d247e67af24340c3dc5c:reference/algorithm/ranges_for_each.md</id>
      <updated>2022-03-20T07:14:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_for_each.md b/reference/algorithm/ranges_for_each.md
index 6837a0f22..3db4f4ca8 100644
--- a/reference/algorithm/ranges_for_each.md
+++ b/reference/algorithm/ranges_for_each.md
@@ -136,4 +136,4 @@ inline constexpr for_each_impl for_each;
 
 
 ## 参照
-- [N4821 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
+- [N4861 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>for_each_n -- 参照リンクを修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_for_each_n.html"/>
      <id>ab62174a9d4dfa9bd777d247e67af24340c3dc5c:reference/algorithm/ranges_for_each_n.md</id>
      <updated>2022-03-20T07:14:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_for_each_n.md b/reference/algorithm/ranges_for_each_n.md
index 29560990c..04e082207 100644
--- a/reference/algorithm/ranges_for_each_n.md
+++ b/reference/algorithm/ranges_for_each_n.md
@@ -112,4 +112,4 @@ inline constexpr for_each_n_impl for_each_n;
 
 
 ## 参照
-- [N4821 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
+- [N4861 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>mismatch -- 参照リンクを修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_mismatch.html"/>
      <id>ab62174a9d4dfa9bd777d247e67af24340c3dc5c:reference/algorithm/ranges_mismatch.md</id>
      <updated>2022-03-20T07:14:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_mismatch.md b/reference/algorithm/ranges_mismatch.md
index fc2907d51..923fd5530 100644
--- a/reference/algorithm/ranges_mismatch.md
+++ b/reference/algorithm/ranges_mismatch.md
@@ -153,4 +153,4 @@ inline constexpr mismatch_impl mismatch;
 
 
 ## 参照
-- [N4821 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
+- [N4861 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>none_of -- 参照リンクを修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_none_of.html"/>
      <id>ab62174a9d4dfa9bd777d247e67af24340c3dc5c:reference/algorithm/ranges_none_of.md</id>
      <updated>2022-03-20T07:14:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_none_of.md b/reference/algorithm/ranges_none_of.md
index 565f38ae2..66f1da921 100644
--- a/reference/algorithm/ranges_none_of.md
+++ b/reference/algorithm/ranges_none_of.md
@@ -128,4 +128,4 @@ inline constexpr none_of_impl none_of;
 
 
 ## 参照
-- [N4821 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
+- [N4861 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>search -- 参照リンクを修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_search.html"/>
      <id>ab62174a9d4dfa9bd777d247e67af24340c3dc5c:reference/algorithm/ranges_search.md</id>
      <updated>2022-03-20T07:14:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_search.md b/reference/algorithm/ranges_search.md
index da4d59038..2ec8cb3cd 100644
--- a/reference/algorithm/ranges_search.md
+++ b/reference/algorithm/ranges_search.md
@@ -121,4 +121,4 @@ inline constexpr search_impl search;
 - [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
 
 ## 参照
-- [N4821 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
+- [N4861 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>search_n -- 参照リンクを修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_search_n.html"/>
      <id>ab62174a9d4dfa9bd777d247e67af24340c3dc5c:reference/algorithm/ranges_search_n.md</id>
      <updated>2022-03-20T07:14:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_search_n.md b/reference/algorithm/ranges_search_n.md
index 738defe83..429eb1fac 100644
--- a/reference/algorithm/ranges_search_n.md
+++ b/reference/algorithm/ranges_search_n.md
@@ -141,4 +141,4 @@ inline constexpr search_n_impl search_n;
 - [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
 
 ## 参照
-- [N4821 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
+- [N4861 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>starts_with -- 実装例を修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_starts_with.html"/>
      <id>cf6a4fc4061fd74fedc1b54d2067a49b07a51ef0:reference/algorithm/ranges_starts_with.md</id>
      <updated>2022-03-18T05:12:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_starts_with.md b/reference/algorithm/ranges_starts_with.md
index 3587ee965..a0a817698 100644
--- a/reference/algorithm/ranges_starts_with.md
+++ b/reference/algorithm/ranges_starts_with.md
@@ -64,13 +64,13 @@ int main() {
 struct starts_with_impl {
   template&amp;lt;input_iterator I1, sentinel_for&amp;lt;I1&amp;gt; S1, input_iterator I2, sentinel_for&amp;lt;I2&amp;gt; S2, class Pred = ranges::equal_to, class Proj1 = identity, class Proj2 = identity&amp;gt;
     requires indirectly_comparable&amp;lt;I1, I2, Pred, Proj1, Proj2&amp;gt;
-  constexpr bool starts_with(I1 first1, S1 last1, I2 first2, S2 last2, Pred pred = {}, Proj1 proj1 = {}, Proj2 proj2 = {}) const {
+  constexpr bool operator()(I1 first1, S1 last1, I2 first2, S2 last2, Pred pred = {}, Proj1 proj1 = {}, Proj2 proj2 = {}) const {
     return mismatch(move(first1), last1, move(first2), last2, pred, proj1, proj2).in2 == last2;
   }
 
   template&amp;lt;input_range R1, input_range R2, class Pred = ranges::equal_to, class Proj1 = identity, class Proj2 = identity&amp;gt;
     requires indirectly_comparable&amp;lt;iterator_t&amp;lt;R1&amp;gt;, iterator_t&amp;lt;R2&amp;gt;, Pred, Proj1, Proj2&amp;gt;
-  constexpr bool starts_with(R1&amp;amp;&amp;amp; r1, R2&amp;amp;&amp;amp; r2, Pred pred = {}, Proj1 proj1 = {}, Proj2 proj2 = {}) const {
+  constexpr bool operator()(R1&amp;amp;&amp;amp; r1, R2&amp;amp;&amp;amp; r2, Pred pred = {}, Proj1 proj1 = {}, Proj2 proj2 = {}) const {
     return (*this)(begin(r1), end(r1), begin(r2), end(r2), ref(pred), ref(proj1), ref(proj2));
   }
 };
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コミュニティリスト -- typo</title>
      <link href="https://cpprefjp.github.io/mailing-lists.html"/>
      <id>d9d065ddd6cf0648af2b97c04cc396dce3340c38:mailing-lists.md</id>
      <updated>2022-03-20T03:55:58+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;コミュニティリスト&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;h2&gt;メーリングリスト&lt;/h2&gt;
&lt;p&gt;以下は、標準C++関係のメーリングリストである。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.isocpp.org/mailman/listinfo.cgi/&#34; target=&#34;_blank&#34;&gt;一覧&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.isocpp.org/mailman/listinfo.cgi/std-discussion&#34; target=&#34;_blank&#34;&gt;ISO C++ Standard - Discussion&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;標準C++の言語機能やライブラリがなぜこうなっているのだろうか？どうやって使うのだろうか？複数の機能をどのように組み合わせればいいのか？といった疑問。もしくは標準にバグを見つけた？このグループでは、委員会メンバを含むエキスパートがその疑問に答える。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.isocpp.org/mailman/listinfo.cgi/std-proposals&#34; target=&#34;_blank&#34;&gt;ISO C++ Standard - Future Proposals&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;新たな言語機能やライブラリの詳細な提案を書く前に、早期のフィードバックが必要？このグループは、ISO C++の将来的な言語機能やライブラリについて議論する場所である。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.isocpp.org/mailman/listinfo.cgi/sg5&#34; target=&#34;_blank&#34;&gt;SG5 Transactional Memory&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Study Group 5は、C++にトランザクショナルメモリを追加するための調査と議論を行う場所である。SG5グループには、有用な議論とペーパー、電話会議、およびその他の有用な情報へのポインタが含まれる。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.isocpp.org/mailman/listinfo.cgi/sg7&#34; target=&#34;_blank&#34;&gt;SG7 Reflection&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Study Group 7は、C++のリフレクション機能について議論する場所である。最初はコンパイル時リフレクションに注目して議論していく。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.isocpp.org/mailman/listinfo.cgi/sg13&#34; target=&#34;_blank&#34;&gt;SG13 HMI&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Study Group 13は、低レベルのグラフィクス、照準 (pointing)のI/Oプリミティブを開発、提案する場所である&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.isocpp.org/mailman/listinfo.cgi/sg14&#34; target=&#34;_blank&#34;&gt;SG14 Low Latency:Game Dev/Financial/Trading/Simulation/Embedded Devices&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Study Group 14は、ゲーム、金融、銀行、シミュレーションなどのリアルタイム要件や性能や効率がとくに重視される分野のための低レイテンシーについての議論をする場所である&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.isocpp.org/mailman/listinfo.cgi/sg15&#34; target=&#34;_blank&#34;&gt;SG15 WG21 Tooling Study Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Study Group 15は、C++用のツールサポートに関する新たな提案を行う場所である&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.isocpp.org/mailman/listinfo.cgi/sg19&#34; target=&#34;_blank&#34;&gt;SG19 Machine Learning&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Study Group 19は、高速なイテレーション、配列、行列、線形代数、計算のためのデータのメモリ転送、スケーリング、グラフ処理などのサポートについて、C++の機能での対処、改善を議論する場所である&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.isocpp.org/mailman/listinfo.cgi/sg20&#34; target=&#34;_blank&#34;&gt;SG20 Education&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Study Group 20は、C++教育のための現代的な教材を作成する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;チャットリスト&lt;/h2&gt;
&lt;p&gt;以下は、C++の話題が盛んなチャットツールのリストである。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cppalliance.org/slack/&#34; target=&#34;_blank&#34;&gt;CPP Lang (Slack)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;世界中のC ++のユーザーを同じ場所に集める目的で作られたSlackワークスペース。&lt;a href=&#34;https://cppalliance.org/&#34; target=&#34;_blank&#34;&gt;The C++ Alliance&lt;/a&gt; が運営している。&lt;br /&gt;
&lt;code&gt;cmake&lt;/code&gt;, &lt;code&gt;boost&lt;/code&gt;, &lt;code&gt;feature_standard&lt;/code&gt; などチャネルが多数存在する。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/STL/wiki/&#34; target=&#34;_blank&#34;&gt;MSVC STL (Discord) &lt;/a&gt;&lt;ul&gt;
&lt;li&gt;The Microsoft C++ team が開設したDiscordチャネル。&lt;br /&gt;
  microsoft/STL の開発状況や、次期リリース情報などがリアルタイムに判る。参加者との質疑応答も盛んに行われている。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akiko Kawai</name>
        <email>haruka.sao@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コミュニティリスト -- メーリングリストページの項目を分けた #954</title>
      <link href="https://cpprefjp.github.io/mailing-lists.html"/>
      <id>e82b1ba803eac9d0b47af89c339bb695bf624499:mailing-lists.md</id>
      <updated>2022-03-20T03:21:58+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;コミュニティリスト&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;h2&gt;メーリングリスト&lt;/h2&gt;
&lt;p&gt;以下は、標準C++関係のメーリングリストでである。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.isocpp.org/mailman/listinfo.cgi/&#34; target=&#34;_blank&#34;&gt;一覧&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.isocpp.org/mailman/listinfo.cgi/std-discussion&#34; target=&#34;_blank&#34;&gt;ISO C++ Standard - Discussion&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;標準C++の言語機能やライブラリがなぜこうなっているのだろうか？どうやって使うのだろうか？複数の機能をどのように組み合わせればいいのか？といった疑問。もしくは標準にバグを見つけた？このグループでは、委員会メンバを含むエキスパートがその疑問に答える。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.isocpp.org/mailman/listinfo.cgi/std-proposals&#34; target=&#34;_blank&#34;&gt;ISO C++ Standard - Future Proposals&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;新たな言語機能やライブラリの詳細な提案を書く前に、早期のフィードバックが必要？このグループは、ISO C++の将来的な言語機能やライブラリについて議論する場所である。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.isocpp.org/mailman/listinfo.cgi/sg5&#34; target=&#34;_blank&#34;&gt;SG5 Transactional Memory&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Study Group 5は、C++にトランザクショナルメモリを追加するための調査と議論を行う場所である。SG5グループには、有用な議論とペーパー、電話会議、およびその他の有用な情報へのポインタが含まれる。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.isocpp.org/mailman/listinfo.cgi/sg7&#34; target=&#34;_blank&#34;&gt;SG7 Reflection&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Study Group 7は、C++のリフレクション機能について議論する場所である。最初はコンパイル時リフレクションに注目して議論していく。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.isocpp.org/mailman/listinfo.cgi/sg13&#34; target=&#34;_blank&#34;&gt;SG13 HMI&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Study Group 13は、低レベルのグラフィクス、照準 (pointing)のI/Oプリミティブを開発、提案する場所である&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.isocpp.org/mailman/listinfo.cgi/sg14&#34; target=&#34;_blank&#34;&gt;SG14 Low Latency:Game Dev/Financial/Trading/Simulation/Embedded Devices&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Study Group 14は、ゲーム、金融、銀行、シミュレーションなどのリアルタイム要件や性能や効率がとくに重視される分野のための低レイテンシーについての議論をする場所である&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.isocpp.org/mailman/listinfo.cgi/sg15&#34; target=&#34;_blank&#34;&gt;SG15 WG21 Tooling Study Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Study Group 15は、C++用のツールサポートに関する新たな提案を行う場所である&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.isocpp.org/mailman/listinfo.cgi/sg19&#34; target=&#34;_blank&#34;&gt;SG19 Machine Learning&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Study Group 19は、高速なイテレーション、配列、行列、線形代数、計算のためのデータのメモリ転送、スケーリング、グラフ処理などのサポートについて、C++の機能での対処、改善を議論する場所である&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.isocpp.org/mailman/listinfo.cgi/sg20&#34; target=&#34;_blank&#34;&gt;SG20 Education&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Study Group 20は、C++教育のための現代的な教材を作成する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;チャットリスト&lt;/h2&gt;
&lt;p&gt;以下は、C++の話題が盛んなチャットツールのリストである。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cppalliance.org/slack/&#34; target=&#34;_blank&#34;&gt;CPP Lang (Slack)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;世界中のC ++のユーザーを同じ場所に集める目的で作られたSlackワークスペース。&lt;a href=&#34;https://cppalliance.org/&#34; target=&#34;_blank&#34;&gt;The C++ Alliance&lt;/a&gt; が運営している。&lt;br /&gt;
&lt;code&gt;cmake&lt;/code&gt;, &lt;code&gt;boost&lt;/code&gt;, &lt;code&gt;feature_standard&lt;/code&gt; などチャネルが多数存在する。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/STL/wiki/&#34; target=&#34;_blank&#34;&gt;MSVC STL (Discord) &lt;/a&gt;&lt;ul&gt;
&lt;li&gt;The Microsoft C++ team が開設したDiscordチャネル。&lt;br /&gt;
  microsoft/STL の開発状況や、次期リリース情報などがリアルタイムに判る。参加者との質疑応答も盛んに行われている。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akiko Kawai</name>
        <email>haruka.sao@gmail.com</email>
      </author>
    </entry>
  
</feed>
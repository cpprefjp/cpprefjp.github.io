<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2022-11-06T02:48:14.024578</updated>
  <id>4cc14c5a-b012-47d0-93e1-dc5aa067589c</id>

  
    <entry>
      <title>lexicographical_compare_three_way -- lexicographical_compare_three_way : リストのネスト修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/lexicographical_compare_three_way.html"/>
      <id>5eb07474ace3fcc011f25fe14f0525963f584f48:reference/algorithm/lexicographical_compare_three_way.md</id>
      <updated>2022-11-04T15:49:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/lexicographical_compare_three_way.md b/reference/algorithm/lexicographical_compare_three_way.md
index cbd754428..f0349739a 100644
--- a/reference/algorithm/lexicographical_compare_three_way.md
+++ b/reference/algorithm/lexicographical_compare_three_way.md
@@ -51,9 +51,9 @@ namespace std {
 
 - (1) : 次のいずれか
     - `E(i) != 0`が`true`となる`[0, N)`内の最小の整数`i`について、`E(i)`
-      - `comp`の意味で異なる最初の要素についての三方比較の結果を返す
+        - `comp`の意味で異なる最初の要素についての三方比較の結果を返す
     - そのような`i`が存在しない場合 : `(last1 - first1) &amp;lt;=&amp;gt; (last2 - first2)`
-      - 全ての要素が等しいならば、長さを比較する
+        - 全ての要素が等しいならば、長さを比較する
 
 - (2) : 以下と等価、すなわち(1)に委譲
   ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>lexicographical_compare_three_way -- lexicographical_compare_three_way issue2310対応</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/lexicographical_compare_three_way.html"/>
      <id>edf362f514e89eb5c526b48c1799c125bb683be0:reference/algorithm/lexicographical_compare_three_way.md</id>
      <updated>2022-11-04T15:39:20+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/lexicographical_compare_three_way.md b/reference/algorithm/lexicographical_compare_three_way.md
index 9a0f8ce0e..cbd754428 100644
--- a/reference/algorithm/lexicographical_compare_three_way.md
+++ b/reference/algorithm/lexicographical_compare_three_way.md
@@ -47,15 +47,13 @@ namespace std {
 
 ## 効果
 
-- (1) : 以下と等価
-  ```cpp
-  for ( ; first1 != last1 &amp;amp;&amp;amp; first2 != last2; void(++first1), void(++first2) )
-    if (auto cmp = comp(*first1, *first2); cmp != 0)
-      return cmp;
-  return first1 != last1 ? strong_ordering::greater :
-         first2 != last2 ? strong_ordering::less :
-                           strong_ordering::equal;
-  ```
+まず、`N`をmin`(last1 - first1, last2 - first2)`、`E(n)`を`comp(*(first1 + n), *(first2 + n))`で定義する。
+
+- (1) : 次のいずれか
+    - `E(i) != 0`が`true`となる`[0, N)`内の最小の整数`i`について、`E(i)`
+      - `comp`の意味で異なる最初の要素についての三方比較の結果を返す
+    - そのような`i`が存在しない場合 : `(last1 - first1) &amp;lt;=&amp;gt; (last2 - first2)`
+      - 全ての要素が等しいならば、長さを比較する
 
 - (2) : 以下と等価、すなわち(1)に委譲
   ```cpp
@@ -69,6 +67,12 @@ namespace std {
 戻り値型となる比較カテゴリ型を`Cat`とすると、  
 範囲`[first1, last1)`が、辞書式比較で範囲`[first2, last2)`より大きい場合は`Cat::greator`を返し、小さい場合`Cat::less`を返し、等しいのならば`Cat::equivalent`を返す。
 
+## 計算量
+
+「効果」節の`N`について
+
+高々`N`回の`comp`による比較が行われる。
+
 ## 例
 ```cpp example
 #include &amp;lt;iostream&amp;gt;
@@ -137,3 +141,4 @@ true
 - [P0768R1 Library support for the spaceship (comparison) operator](http://wg21.link/p0768)
 - [P1614R2 The Mothership has Landed (Adding `&amp;lt;=&amp;gt;` to the Library)](http://wg21.link/p1614)
 - [P2051R0 C++ Standard Library Issues to be moved in Prague](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2051r0.html)
+- [LWG Issue 3410. lexicographical_compare_three_way is overspecified](https://cplusplus.github.io/LWG/issue3410)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>endl -- endl: 例示出力を修正</title>
      <link href="https://cpprefjp.github.io/reference/ostream/endl.html"/>
      <id>402cfd349469ff935ba09bd49acb72dfd06d7241:reference/ostream/endl.md</id>
      <updated>2022-10-31T15:40:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ostream/endl.md b/reference/ostream/endl.md
index a0bf42c2b..710e3f5fd 100644
--- a/reference/ostream/endl.md
+++ b/reference/ostream/endl.md
@@ -41,6 +41,7 @@ int main() {
 ### 出力
 ```
 Kamaboko
+cpprefjp
 ```
 
 ## 実装例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>counted -- Defect Report P2367R0 に対応</title>
      <link href="https://cpprefjp.github.io/reference/ranges/counted.html"/>
      <id>d71a736545fe28f9cf488dbb6adada7832412aa1:reference/ranges/counted.md</id>
      <updated>2022-10-30T12:59:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/counted.md b/reference/ranges/counted.md
index 0bd332f0d..6ec99f3f9 100644
--- a/reference/ranges/counted.md
+++ b/reference/ranges/counted.md
@@ -30,9 +30,9 @@ namespace std::ranges::views {
 式`E`をイテレータ、式`F`を進める数、イテレータ型`T`を[`decay_t`](/reference/type_traits/decay.md)`&amp;lt;`[`decltype`](/lang/cpp11/decltype.md)`((E))&amp;gt;`、イテレータの差の型`D`を[`iter_difference_t`](/reference/iterator/iter_difference_t.md)`&amp;lt;T&amp;gt;`とする。式`views::counted(E, F)`の効果は以下の通り。
 
 - [`decltype`](/lang/cpp11/decltype.md)`((F))`が[`convertible_to`](/reference/concepts/convertible_to.md)`&amp;lt;D&amp;gt;`のモデルでなければ、呼び出しは不適格。
-- `T`が[`contiguous_iterator`](/reference/iterator/contiguous_iterator.md)のモデルであれば、[`span`](/reference/span/span.md)`{`[`to_address`](/reference/memory/to_address.md)`(E), static_cast&amp;lt;D&amp;gt;(F)}`と等しい。
-- `T`が[`random_access_iterator`](/reference/iterator/random_access_iterator.md)のモデルであれば、[`subrange`](subrange.md)`{E, E + static_cast&amp;lt;D&amp;gt;(F)}`と等しい。
-- それ以外のとき、[`subrange`](subrange.md)`{`[`counted_iterator`](/reference/iterator/counted_iterator.md)`{E, F}, `[`default_sentinel`](/reference/iterator/default_sentinel_t.md)`}`と等しい。
+- `T`が[`contiguous_iterator`](/reference/iterator/contiguous_iterator.md)のモデルであれば、[`span`](/reference/span/span.md)`(`[`to_address`](/reference/memory/to_address.md)`(E), static_cast&amp;lt;D&amp;gt;(F))`と等しい。
+- `T`が[`random_access_iterator`](/reference/iterator/random_access_iterator.md)のモデルであれば、[`subrange`](subrange.md)`(E, E + static_cast&amp;lt;D&amp;gt;(F))`と等しい。
+- それ以外のとき、[`subrange`](subrange.md)`(`[`counted_iterator`](/reference/iterator/counted_iterator.md)`(E, F), `[`default_sentinel`](/reference/iterator/default_sentinel_t.md)`)`と等しい。
 
 ## 例
 ```cpp example
@@ -76,3 +76,4 @@ int main() {
 ## 参照
 - [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
 - [C++20 ranges](https://techbookfest.org/product/5134506308665344)
+- [P2367R0 Remove misuses of list-initialization from Clause 24](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2367r0.html) (本論文はC++20に遡って適用されている)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>acd1034</name>
        <email>48613285+acd1034@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>drop_view -- Defect Report P2367R0 に対応</title>
      <link href="https://cpprefjp.github.io/reference/ranges/drop_view.html"/>
      <id>d71a736545fe28f9cf488dbb6adada7832412aa1:reference/ranges/drop_view.md</id>
      <updated>2022-10-30T12:59:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/drop_view.md b/reference/ranges/drop_view.md
index 0c2ae32e3..d61a98dbc 100644
--- a/reference/ranges/drop_view.md
+++ b/reference/ranges/drop_view.md
@@ -39,13 +39,13 @@ namespace std::ranges {
 
 - (2): `E`および`F`を式、型`T`を[`remove_cvref_t`](/reference/type_traits/remove_cvref.md)`&amp;lt;`[`decltype`](/lang/cpp11/decltype.md)`((E))&amp;gt;`、型`D`を[`range_difference_t`](range_difference_t.md)`&amp;lt;`[`decltype`](/lang/cpp11/decltype.md)`((E))&amp;gt;`とする。式`views::drop(E, F)`の効果は以下の通り
     - [`decltype`](/lang/cpp11/decltype.md)`((F))`が[`convertible_to`](/reference/concepts/convertible_to.md)`&amp;lt;D&amp;gt;`のモデルでなければ、呼び出しは不適格
-    - `T`が[`ranges::empty_view`](empty_view.md)の特殊化であれば、`((void) F, `[`decay-copy`](/reference/exposition-only/decay-copy.md)`(E))`と等しい
-    - `T`が[`random_access_range`](random_access_range.md)および[`sized_range`](sized_range.md)のモデルであり、かつ次のいずれかの特殊化であるとき、`T{`[`ranges::begin`](begin.md)`(E) + `[`min`](/reference/algorithm/min.md)`&amp;lt;D&amp;gt;(`[`ranges::size`](size.md)`(E), F), `[`ranges::end`](begin.md)`(E)}`と等しい。ただし、`E`は1度だけ評価される
+    - `T`が[`ranges::empty_view`](empty_view.md)の特殊化であれば、`((void) F, `[`decay-copy`](/reference/exposition-only/decay-copy.md)`(E))`と等しい。ただし、`E`と`F`の評価順序は不定順で序列化(indeterminately sequenced)される
+    - `T`が[`random_access_range`](random_access_range.md)および[`sized_range`](sized_range.md)のモデルであり、かつ次のいずれかの特殊化であるとき、`T(`[`ranges::begin`](begin.md)`(E) + `[`min`](/reference/algorithm/min.md)`&amp;lt;D&amp;gt;(`[`ranges::size`](size.md)`(E), F), `[`ranges::end`](begin.md)`(E))`と等しい。ただし、`E`は1度だけ評価される
         - [`span`](/reference/span/span.md) (ただし、`T::extent == `[`dynamic_extent`](/reference/span/dynamic_extent.md)であること)
         - [`basic_string_view`](/reference/string_view/basic_string_view.md)
         - [`ranges::iota_view`](iota_view.md)
         - [`ranges::subrange`](subrange.md)
-    - それ以外のとき、`ranges::drop_view{E, F}`
+    - それ以外のとき、`ranges::drop_view(E, F)`
 
 `drop_view`でラップする必要が無い型では`drop_view`を使わないようになっている。
 
@@ -112,3 +112,4 @@ int main() {
 ## 参照
 - [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
 - [C++20 ranges](https://techbookfest.org/product/5134506308665344)
+- [P2367R0 Remove misuses of list-initialization from Clause 24](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2367r0.html) (本論文はC++20に遡って適用されている)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>acd1034</name>
        <email>48613285+acd1034@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>drop_while_view -- Defect Report P2367R0 に対応</title>
      <link href="https://cpprefjp.github.io/reference/ranges/drop_while_view.html"/>
      <id>d71a736545fe28f9cf488dbb6adada7832412aa1:reference/ranges/drop_while_view.md</id>
      <updated>2022-10-30T12:59:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/drop_while_view.md b/reference/ranges/drop_while_view.md
index c0f2c91d7..04f64b355 100644
--- a/reference/ranges/drop_while_view.md
+++ b/reference/ranges/drop_while_view.md
@@ -43,7 +43,7 @@ namespace std::ranges {
 
 ## 効果
 
-- (2): 式`views::drop_while(E, F)`の効果は`drop_while_view{E, F}`と等しい
+- (2): 式`views::drop_while(E, F)`の効果は`drop_while_view(E, F)`と等しい
 
 ## メンバ関数
 
@@ -106,3 +106,4 @@ int main() {
 ## 参照
 - [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
 - [C++20 ranges](https://techbookfest.org/product/5134506308665344)
+- [P2367R0 Remove misuses of list-initialization from Clause 24](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2367r0.html) (本論文はC++20に遡って適用されている)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>acd1034</name>
        <email>48613285+acd1034@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>filter_view -- Defect Report P2367R0 に対応</title>
      <link href="https://cpprefjp.github.io/reference/ranges/filter_view.html"/>
      <id>d71a736545fe28f9cf488dbb6adada7832412aa1:reference/ranges/filter_view.md</id>
      <updated>2022-10-30T12:59:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/filter_view.md b/reference/ranges/filter_view.md
index ea6d50012..66fe5eaa2 100644
--- a/reference/ranges/filter_view.md
+++ b/reference/ranges/filter_view.md
@@ -53,7 +53,7 @@ namespace std::ranges {
 
 ## 効果
 
-- (2): 式`views::filter(E, P)`の効果は`filter_view{E, P}`と等しい
+- (2): 式`views::filter(E, P)`の効果は`filter_view(E, P)`と等しい
 
 ## メンバ関数
 
@@ -119,3 +119,4 @@ int main() {
 ## 参照
 - [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
 - [C++20 ranges](https://techbookfest.org/product/5134506308665344)
+- [P2367R0 Remove misuses of list-initialization from Clause 24](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2367r0.html) (本論文はC++20に遡って適用されている)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>acd1034</name>
        <email>48613285+acd1034@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>iota_view -- Defect Report P2367R0 に対応</title>
      <link href="https://cpprefjp.github.io/reference/ranges/iota_view.html"/>
      <id>d71a736545fe28f9cf488dbb6adada7832412aa1:reference/ranges/iota_view.md</id>
      <updated>2022-10-30T12:59:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/iota_view.md b/reference/ranges/iota_view.md
index bb0db8423..56b4ef48c 100644
--- a/reference/ranges/iota_view.md
+++ b/reference/ranges/iota_view.md
@@ -51,8 +51,8 @@ namespace std::ranges {
 
 ## 効果
 
-- 式`views::iota(E)`の効果は`iota_view{E}`と等しい。
-- 式`views::iota(E, F)`の効果は`iota_view{E, F}`と等しい。
+- 式`views::iota(E)`の効果は`iota_view(E)`と等しい。
+- 式`views::iota(E, F)`の効果は`iota_view(E, F)`と等しい。
 
 ## メンバ関数
 
@@ -200,4 +200,5 @@ FizzBuzz
 ## 参照
 - [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
 - [C++20 ranges](https://techbookfest.org/product/5134506308665344)
-- [P2325R3 Views should not be required to be default constructible](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2325r3.html)
+- [P2325R3 Views should not be required to be default constructible](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2325r3.html) (本論文はC++20に遡って適用されている)
+- [P2367R0 Remove misuses of list-initialization from Clause 24](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2367r0.html) (本論文はC++20に遡って適用されている)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>acd1034</name>
        <email>48613285+acd1034@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>single_view -- Defect Report P2367R0 に対応</title>
      <link href="https://cpprefjp.github.io/reference/ranges/single_view.html"/>
      <id>d71a736545fe28f9cf488dbb6adada7832412aa1:reference/ranges/single_view.md</id>
      <updated>2022-10-30T12:59:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/single_view.md b/reference/ranges/single_view.md
index ea366e68c..f4892d5fd 100644
--- a/reference/ranges/single_view.md
+++ b/reference/ranges/single_view.md
@@ -34,7 +34,7 @@ namespace std::ranges {
 - [`is_object_v`](/reference/type_traits/is_object.md)`&amp;lt;T&amp;gt;`
 
 ## 効果
-- 式`views::single(E)`の効果は`single_view{E}`と等しい。
+- 式`views::single(E)`の効果は`single_view&amp;lt;decay_t&amp;lt;decltype((E))&amp;gt;&amp;gt;(E)`と等しい。
 
 ## メンバ関数
 
@@ -60,6 +60,12 @@ namespace std::ranges {
 | [`back`](view_interface/back.md)             | 末尾要素への参照を取得する        | C++20          |
 | [`operator[]`](view_interface/op_at.md)      | 要素へアクセスする                | C++20          |
 
+## 推論補助
+
+| 名前                                                  | 説明                         | 対応バージョン |
+|-------------------------------------------------------|------------------------------|----------------|
+| [`(deduction_guide)`](single_view/op_deduction_guide.md.nolink) | クラステンプレートの推論補助 | C++20          |
+
 ## 例
 ```cpp example
 #include &amp;lt;ranges&amp;gt;
@@ -147,3 +153,4 @@ namespace std::ranges {
 ## 参照
 - [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
 - [C++20 ranges](https://techbookfest.org/product/5134506308665344)
+- [P2367R0 Remove misuses of list-initialization from Clause 24](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2367r0.html) (本論文はC++20に遡って適用されている)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>acd1034</name>
        <email>48613285+acd1034@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>split_view -- Defect Report P2367R0 に対応</title>
      <link href="https://cpprefjp.github.io/reference/ranges/split_view.html"/>
      <id>d71a736545fe28f9cf488dbb6adada7832412aa1:reference/ranges/split_view.md</id>
      <updated>2022-10-30T12:59:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/split_view.md b/reference/ranges/split_view.md
index 0965e6de7..e9aabc9c5 100644
--- a/reference/ranges/split_view.md
+++ b/reference/ranges/split_view.md
@@ -52,7 +52,7 @@ namespace std::ranges {
 
 ## 効果
 
-- (2): 式`views::split(E, F)`の効果は`split_view{E, F}`と等しい。
+- (2): 式`views::split(E, F)`の効果は`split_view(E, F)`と等しい。
 
 ## メンバ関数
 
@@ -117,3 +117,4 @@ world
 - [P2210R2 Superior String Splitting](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2210r2.html)
 - [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
 - [C++20 ranges](https://techbookfest.org/product/5134506308665344)
+- [P2367R0 Remove misuses of list-initialization from Clause 24](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2367r0.html) (本論文はC++20に遡って適用されている)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>acd1034</name>
        <email>48613285+acd1034@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- Defect Report P2367R0 に対応</title>
      <link href="https://cpprefjp.github.io/reference/ranges/subrange/op_constructor.html"/>
      <id>d71a736545fe28f9cf488dbb6adada7832412aa1:reference/ranges/subrange/op_constructor.md</id>
      <updated>2022-10-30T12:59:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/subrange/op_constructor.md b/reference/ranges/subrange/op_constructor.md
index b52536d62..8eab2f6f5 100644
--- a/reference/ranges/subrange/op_constructor.md
+++ b/reference/ranges/subrange/op_constructor.md
@@ -127,3 +127,4 @@ int main()
 ## 参照
 - [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
 - [C++20 ranges](https://techbookfest.org/product/5134506308665344)
+- [P2367R0 Remove misuses of list-initialization from Clause 24](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2367r0.html) (本論文はC++20に遡って適用されている)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>acd1034</name>
        <email>48613285+acd1034@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>take_view -- Defect Report P2367R0 に対応</title>
      <link href="https://cpprefjp.github.io/reference/ranges/take_view.html"/>
      <id>d71a736545fe28f9cf488dbb6adada7832412aa1:reference/ranges/take_view.md</id>
      <updated>2022-10-30T12:59:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/take_view.md b/reference/ranges/take_view.md
index e13819564..99b7b65da 100644
--- a/reference/ranges/take_view.md
+++ b/reference/ranges/take_view.md
@@ -39,13 +39,13 @@ namespace std::ranges {
 
 - (2): `E`および`F`を式、型`T`を[`remove_cvref_t`](/reference/type_traits/remove_cvref.md)`&amp;lt;`[`decltype`](/lang/cpp11/decltype.md)`((E))&amp;gt;`、型`D`を[`range_difference_t`](range_difference_t.md)`&amp;lt;`[`decltype`](/lang/cpp11/decltype.md)`((E))&amp;gt;`とする。式`views::take(E, F)`の効果は以下の通り
     - [`decltype`](/lang/cpp11/decltype.md)`((F))`が[`convertible_to`](/reference/concepts/convertible_to.md)`&amp;lt;D&amp;gt;`のモデルでなければ、呼び出しは不適格
-    - `T`が[`ranges::empty_view`](empty_view.md)の特殊化であれば、`((void) F, `[`decay-copy`](/reference/exposition-only/decay-copy.md)`(E))`と等しい
-    - `T`が[`random_access_range`](random_access_range.md)および[`sized_range`](sized_range.md)のモデルであり、かつ次のいずれかの特殊化であるとき、`T{`[`ranges::begin`](begin.md)`(E), `[`ranges::begin`](begin.md)`(E) + `[`min`](/reference/algorithm/min.md)`&amp;lt;D&amp;gt;(`[`ranges::size`](size.md)`(E), F)}`と等しい。ただし、`E`は1度だけ評価される
+    - `T`が[`ranges::empty_view`](empty_view.md)の特殊化であれば、`((void) F, `[`decay-copy`](/reference/exposition-only/decay-copy.md)`(E))`と等しい。ただし、`E`と`F`の評価順序は不定順で序列化(indeterminately sequenced)される
+    - `T`が[`random_access_range`](random_access_range.md)および[`sized_range`](sized_range.md)のモデルであり、かつ次のいずれかの特殊化であるとき、`T(`[`ranges::begin`](begin.md)`(E), `[`ranges::begin`](begin.md)`(E) + `[`min`](/reference/algorithm/min.md)`&amp;lt;D&amp;gt;(`[`ranges::size`](size.md)`(E), F))`と等しい。ただし、`E`は1度だけ評価される
         - [`span`](/reference/span/span.md) (ただし、`T::extent == `[`dynamic_extent`](/reference/span/dynamic_extent.md)であること)
         - [`basic_string_view`](/reference/string_view/basic_string_view.md)
         - [`ranges::iota_view`](iota_view.md)
         - [`ranges::subrange`](subrange.md)
-    - それ以外のとき、`ranges::take_view{E, F}`
+    - それ以外のとき、`ranges::take_view(E, F)`
 
 `take_view`でラップする必要が無い型では`take_view`を使わないようになっている。
 
@@ -112,3 +112,4 @@ int main() {
 ## 参照
 - [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
 - [C++20 ranges](https://techbookfest.org/product/5134506308665344)
+- [P2367R0 Remove misuses of list-initialization from Clause 24](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2367r0.html) (本論文はC++20に遡って適用されている)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>acd1034</name>
        <email>48613285+acd1034@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>take_while_view -- Defect Report P2367R0 に対応</title>
      <link href="https://cpprefjp.github.io/reference/ranges/take_while_view.html"/>
      <id>d71a736545fe28f9cf488dbb6adada7832412aa1:reference/ranges/take_while_view.md</id>
      <updated>2022-10-30T12:59:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/take_while_view.md b/reference/ranges/take_while_view.md
index abf221a5b..010a96460 100644
--- a/reference/ranges/take_while_view.md
+++ b/reference/ranges/take_while_view.md
@@ -43,7 +43,7 @@ namespace std::ranges {
 
 ## 効果
 
-- (2): 式`views::take_while(E, F)`の効果は`take_while_view{E, F}`と等しい
+- (2): 式`views::take_while(E, F)`の効果は`take_while_view(E, F)`と等しい
 
 ## メンバ関数
 
@@ -106,3 +106,4 @@ int main() {
 ## 参照
 - [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
 - [C++20 ranges](https://techbookfest.org/product/5134506308665344)
+- [P2367R0 Remove misuses of list-initialization from Clause 24](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2367r0.html) (本論文はC++20に遡って適用されている)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>acd1034</name>
        <email>48613285+acd1034@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>transform_view -- Defect Report P2367R0 に対応</title>
      <link href="https://cpprefjp.github.io/reference/ranges/transform_view.html"/>
      <id>d71a736545fe28f9cf488dbb6adada7832412aa1:reference/ranges/transform_view.md</id>
      <updated>2022-10-30T12:59:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/transform_view.md b/reference/ranges/transform_view.md
index bc336d028..0da9da6cb 100644
--- a/reference/ranges/transform_view.md
+++ b/reference/ranges/transform_view.md
@@ -51,7 +51,7 @@ namespace std::ranges {
 
 ## 効果
 
-- (2): 式`views::transform(E, P)`の効果は`transform_view{E, P}`と等しい
+- (2): 式`views::transform(E, P)`の効果は`transform_view(E, P)`と等しい
 
 ## メンバ関数
 
@@ -118,3 +118,4 @@ int main() {
 ## 参照
 - [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
 - [C++20 ranges](https://techbookfest.org/product/5134506308665344)
+- [P2367R0 Remove misuses of list-initialization from Clause 24](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2367r0.html) (本論文はC++20に遡って適用されている)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>acd1034</name>
        <email>48613285+acd1034@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>all -- 参考文献のコメントスタイルを変更</title>
      <link href="https://cpprefjp.github.io/reference/ranges/all.html"/>
      <id>aa89446ac74c04899b579e54212fbc30299ece15:reference/ranges/all.md</id>
      <updated>2022-10-30T12:21:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/all.md b/reference/ranges/all.md
index 782d3642b..32dbc38da 100644
--- a/reference/ranges/all.md
+++ b/reference/ranges/all.md
@@ -67,5 +67,4 @@ int main() {
 - [N4892 24 Ranges library](https://timsong-cpp.github.io/cppwp/ranges)
 - [C++20 ranges](https://techbookfest.org/product/5134506308665344)
 - [［C++］ `&amp;lt;ranges&amp;gt;`のviewを見る19 - owning_view](https://zenn.dev/onihusube/articles/fd07528b68ae0c)
-- [P2415R2 What is a `view`?](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2415r2.html)
-  - 本論文はC++20に遡って適用されている
+- [P2415R2 What is a `view`?](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2415r2.html) (本論文はC++20に遡って適用されている)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>acd1034</name>
        <email>48613285+acd1034@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>owning_view -- 参考文献のコメントスタイルを変更</title>
      <link href="https://cpprefjp.github.io/reference/ranges/owning_view.html"/>
      <id>aa89446ac74c04899b579e54212fbc30299ece15:reference/ranges/owning_view.md</id>
      <updated>2022-10-30T12:21:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/owning_view.md b/reference/ranges/owning_view.md
index e5041eeb2..37a65ab4f 100644
--- a/reference/ranges/owning_view.md
+++ b/reference/ranges/owning_view.md
@@ -171,5 +171,4 @@ namespace std::ranges {
 - [N4892 24 Ranges library](https://timsong-cpp.github.io/cppwp/ranges)
 - [C++20 ranges](https://techbookfest.org/product/5134506308665344)
 - [［C++］ `&amp;lt;ranges&amp;gt;`のviewを見る19 - owning_view](https://zenn.dev/onihusube/articles/fd07528b68ae0c)
-- [P2415R2 What is a `view`?](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2415r2.html)
-  - 本論文はC++20に遡って適用されている
+- [P2415R2 What is a `view`?](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2415r2.html) (本論文はC++20に遡って適用されている)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>acd1034</name>
        <email>48613285+acd1034@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>view -- 参考文献のコメントスタイルを変更</title>
      <link href="https://cpprefjp.github.io/reference/ranges/view.html"/>
      <id>aa89446ac74c04899b579e54212fbc30299ece15:reference/ranges/view.md</id>
      <updated>2022-10-30T12:21:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/view.md b/reference/ranges/view.md
index 80a18fe57..bb08bfeec 100644
--- a/reference/ranges/view.md
+++ b/reference/ranges/view.md
@@ -76,7 +76,5 @@ int main()
 ## 参照
 - [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
 - [C++20 ranges](https://techbookfest.org/product/5134506308665344)
-- [P2325R3 Views should not be required to be default constructible](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2325r3.html)
-  - 本論文はC++20に遡って適用されている
-- [P2415R2 What is a `view`?](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2415r2.html)
-  - 本論文はC++20に遡って適用されている
+- [P2325R3 Views should not be required to be default constructible](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2325r3.html) (本論文はC++20に遡って適用されている)
+- [P2415R2 What is a `view`?](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2415r2.html) (本論文はC++20に遡って適用されている)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>acd1034</name>
        <email>48613285+acd1034@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>viewable_range -- 参考文献のコメントスタイルを変更</title>
      <link href="https://cpprefjp.github.io/reference/ranges/viewable_range.html"/>
      <id>aa89446ac74c04899b579e54212fbc30299ece15:reference/ranges/viewable_range.md</id>
      <updated>2022-10-30T12:21:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/viewable_range.md b/reference/ranges/viewable_range.md
index 2867e590f..5d481d216 100644
--- a/reference/ranges/viewable_range.md
+++ b/reference/ranges/viewable_range.md
@@ -53,5 +53,4 @@ Rangeアダプタを適用するには、`viewable_range`である必要があ
 - [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
 - [C++20 ranges](https://techbookfest.org/product/5134506308665344)
 - [LWG Issue 3481 `viewable_range` mishandles lvalue move-only views](https://cplusplus.github.io/LWG/lwg-defects.html#3481)
-- [P2415R2 What is a `view`?](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2415r2.html)
-  - 本論文はC++20に遡って適用されている
+- [P2415R2 What is a `view`?](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2415r2.html) (本論文はC++20に遡って適用されている)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>acd1034</name>
        <email>48613285+acd1034@users.noreply.github.com</email>
      </author>
    </entry>
  
</feed>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2020-06-02T04:26:09.407257</updated>
  <id>01c18765-5fd2-40ca-8969-9cb4b12d4315</id>

  
    <entry>
      <title>sys_info -- sys_info : formatterを追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/sys_info.html"/>
      <id>2a64d964fc82fae96899d7718cddebfbf39f7b56:reference/chrono/sys_info.md</id>
      <updated>2020-06-02T13:21:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/sys_info.md b/reference/chrono/sys_info.md
index 82d82c7e0..b0b20493a 100644
--- a/reference/chrono/sys_info.md
+++ b/reference/chrono/sys_info.md
@@ -12,11 +12,7 @@ namespace std::chrono {
     seconds offset;
     minutes save;
     string abbrev;
-  };                    // (1) C++20
-
-  template &amp;lt;class charT, class traits&amp;gt;
-  std::basic_ostream&amp;lt;charT, traits&amp;gt;&amp;amp;
-    operator&amp;lt;&amp;lt;(std::basic_ostream&amp;lt;charT, traits&amp;gt;&amp;amp; os, const sys_info&amp;amp; si); // (2)
+  };
 }
 ```
 * sys_seconds[link sys_time.md]
@@ -27,9 +23,8 @@ namespace std::chrono {
 
 このクラスの情報は、[`sys_time`](sys_time.md)から[`local_time`](local_time.md)に変換する際に使用される。
 
-- (1) : システム時間に関するタイムゾーン情報のクラス
-- (2) : 出力ストリームへの出力
 
+## メンバ変数
 
 | 変数 | 説明 |
 |------|------|
@@ -39,12 +34,11 @@ namespace std::chrono {
 | `abbrev` | 関連する[`time_zone`](time_zone.md)および[`time_point`](time_point.md)に使用される現在の「略称 (abbreviation)」を意味する。略称はタイムゾーンごとに一意に定まるわけではないため、略称からタイムゾーンおよびUTCタイムゾーンからのオフセット時間を確実にマッピングすることはできない |
 
 
-## 効果
-- (2) : `si`を未規定のフォーマットで`os`に出力する
-
+## 文字列フォーマット
 
-## 戻り値
-- (2) : `return os;`
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`formatter`](sys_info/formatter.md) | [`std::formatter`](/reference/format/formatter.md)クラスの特殊化 | C++20 |
 
 
 ## 例
@@ -63,9 +57,6 @@ int main()
   chrono::sys_info si = tz-&amp;gt;get_info(now);
   std::cout &amp;lt;&amp;lt; chrono::floor&amp;lt;chrono::hours&amp;gt;(si.offset).count() &amp;lt;&amp;lt; &amp;#34; hours&amp;#34; &amp;lt;&amp;lt; std::endl; // UTCタイムゾーンからの差分時間
   std::cout &amp;lt;&amp;lt; si.abbrev &amp;lt;&amp;lt; std::endl; // タイムゾーンの略称
-
-  std::cout &amp;lt;&amp;lt; std::endl;
-  std::cout &amp;lt;&amp;lt; si &amp;lt;&amp;lt; std::endl; // タイムゾーン情報全体を出力
 }
 ```
 * chrono::sys_info[color ff0000]
@@ -77,12 +68,12 @@ int main()
 * chrono::floor[link time_point/floor.md]
 * count()[link /reference/chrono/duration/count.md]
 
-### 出力例
+### 出力
 ```
+9 hours
+JST
 ```
 
-(未検証)
-
 ## バージョン
 ### 言語
 - C++20
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>formatter -- sys_info : formatterを追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/sys_info/formatter.html"/>
      <id>2a64d964fc82fae96899d7718cddebfbf39f7b56:reference/chrono/sys_info/formatter.md</id>
      <updated>2020-06-02T13:21:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/sys_info/formatter.md b/reference/chrono/sys_info/formatter.md
new file mode 100644
index 000000000..d20423f0f
--- /dev/null
+++ b/reference/chrono/sys_info/formatter.md
@@ -0,0 +1,70 @@
+# formatter
+* chrono[meta header]
+* std[meta namespace]
+* class[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std {
+  template &amp;lt;class charT&amp;gt;
+  struct formatter&amp;lt;chrono::sys_info, charT&amp;gt;;
+}
+```
+
+## 概要
+`sys_info`クラスに対する[`std::formatter`](/reference/format/formatter.md)クラステンプレートの特殊化。
+
+フォーマット指定子としては、以下を使用できる：
+
+| フォーマット指定子 | 説明 |
+|--------------------|------|
+| `%z`  | ISO 8601フォーマットでのUTCからのオフセット (日本だと`&amp;#34;+0900&amp;#34;`) |
+| `%Ez` | オフセットの時と分の間にコロン (:) が挿入される (日本だと`&amp;#34;+09:00&amp;#34;`) |
+| `%0z` | `%Ez`と等価 |
+| `%Z`  | タイムゾーンの略称 (日本だと`&amp;#34;JST&amp;#34;`) |
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+
+int main()
+{
+  auto now = chrono::system_clock::now();
+
+  // 日本のタイムゾーン
+  const chrono::time_zone* tz = chrono::locate_zone(&amp;#34;Asia/Tokyo&amp;#34;);
+  chrono::sys_info si = tz-&amp;gt;get_info(now);
+
+  // デフォルトフォーマットはoperator&amp;lt;&amp;lt;と同じ (フォーマット未規定)
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;{}&amp;#34;, si) &amp;lt;&amp;lt; std::endl;
+
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;{:%z}&amp;#34;, si) &amp;lt;&amp;lt; std::endl; // オフセット時間
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;{:%Z}&amp;#34;, si) &amp;lt;&amp;lt; std::endl; // タイムゾーンの略称
+}
+```
+* chrono::system_clock[link /reference/chrono/system_clock.md]
+* now()[link /reference/chrono/system_clock/now.md]
+* chrono::time_zone[link /reference/chrono/time_zone.md]
+* chrono::locate_zone[link /reference/chrono/locate_zone.md]
+* std::format[link /reference/chrono/format.md]
+
+### 出力例
+```
+(未検証の行)
++0900
+JST
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): (9.0時点で実装なし)
+- [GCC](/implementation.md#gcc): (9.2時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;&lt; -- sys_info : formatterを追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/sys_info/op_ostream.html"/>
      <id>2a64d964fc82fae96899d7718cddebfbf39f7b56:reference/chrono/sys_info/op_ostream.md</id>
      <updated>2020-06-02T13:21:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/sys_info/op_ostream.md b/reference/chrono/sys_info/op_ostream.md
new file mode 100644
index 000000000..95eb23dca
--- /dev/null
+++ b/reference/chrono/sys_info/op_ostream.md
@@ -0,0 +1,66 @@
+# operator&amp;lt;&amp;lt;
+* chrono[meta header]
+* std::chrono[meta namespace]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  template &amp;lt;class charT, class traits&amp;gt;
+  std::basic_ostream&amp;lt;charT, traits&amp;gt;&amp;amp;
+    operator&amp;lt;&amp;lt;(std::basic_ostream&amp;lt;charT, traits&amp;gt;&amp;amp; os, const sys_info&amp;amp; si); // (1) C++20
+}
+```
+
+## 概要
+`sys_info`オブジェクトを出力ストリームに出力する。
+
+
+## 効果
+`si`を未規定のフォーマットで`os`に出力する
+
+
+## 戻り値
+```cpp
+return os;
+```
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+
+int main()
+{
+  auto now = chrono::system_clock::now();
+
+  // 日本のタイムゾーン
+  const chrono::time_zone* tz = chrono::locate_zone(&amp;#34;Asia/Tokyo&amp;#34;);
+  chrono::sys_info si = tz-&amp;gt;get_info(now);
+
+  std::cout &amp;lt;&amp;lt; si &amp;lt;&amp;lt; std::endl; // タイムゾーン情報全体を出力
+}
+```
+* chrono::time_zone[link /reference/chrono/time_zone.md]
+* tz-&amp;gt;get_info[link /reference/chrono/time_zone/get_info.md]
+* chrono::locate_zone[link /reference/chrono/locate_zone.md]
+* chrono::system_clock[link /reference/chrono/system_clock.md]
+* now()[link /reference/chrono/system_clock/now.md]
+
+### 出力例
+```
+```
+
+(未検証)
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): (9.0時点で実装なし)
+- [GCC](/implementation.md#gcc): (9.2時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>insert_after -- forward_list::insert_after : 計算量について追記</title>
      <link href="https://cpprefjp.github.io/reference/forward_list/forward_list/insert_after.html"/>
      <id>e775c725b5c45e8912ae2babebb7fa0e28e20093:reference/forward_list/forward_list/insert_after.md</id>
      <updated>2020-06-02T00:43:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/forward_list/forward_list/insert_after.md b/reference/forward_list/forward_list/insert_after.md
index 13010fa28..d094c039f 100644
--- a/reference/forward_list/forward_list/insert_after.md
+++ b/reference/forward_list/forward_list/insert_after.md
@@ -43,8 +43,11 @@ iterator insert_after(const_iterator position,
 - (3), (4), (5) : 最後に挿入された要素を指すイテレータ、挿入されなかった時は`position`
 
 ## 計算量
-定数時間
 
+- (1), (2) : 定数時間
+- (3) : `n`に対して線形時間
+- (4) : `std::distance(first, last)`に対して線形時間
+- (5) : `il.size()`に対して線形時間
 
 ## 例
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>insert_after -- forward_list::insert_after : 戻り値について追記</title>
      <link href="https://cpprefjp.github.io/reference/forward_list/forward_list/insert_after.html"/>
      <id>279c624c17a1e108887fc4a35ee67da530d8c1fe:reference/forward_list/forward_list/insert_after.md</id>
      <updated>2020-06-02T00:37:05+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/forward_list/forward_list/insert_after.md b/reference/forward_list/forward_list/insert_after.md
index c67381c48..13010fa28 100644
--- a/reference/forward_list/forward_list/insert_after.md
+++ b/reference/forward_list/forward_list/insert_after.md
@@ -38,8 +38,9 @@ iterator insert_after(const_iterator position,
 
 
 ## 戻り値
-挿入された要素を指すイテレータ
 
+- (1), (2) : 挿入された要素を指すイテレータ
+- (3), (4), (5) : 最後に挿入された要素を指すイテレータ、挿入されなかった時は`position`
 
 ## 計算量
 定数時間
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>year_month_day -- year_month_day : formatterを追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day.html"/>
      <id>fd1b42604debcc02ed94f9b6aae854d7db38cbc3:reference/chrono/year_month_day.md</id>
      <updated>2020-06-01T22:40:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day.md b/reference/chrono/year_month_day.md
index f22bf93f5..89c9eef9f 100644
--- a/reference/chrono/year_month_day.md
+++ b/reference/chrono/year_month_day.md
@@ -91,6 +91,13 @@ namespace std::chrono {
 | [`from_stream`](year_month_day/from_stream.md) | フォーマット指定して入力ストリームから入力する | C++20 |
 
 
+## 文字列フォーマット
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`formatter`](year_month_day/formatter.md) | [`std::formatter`](/reference/format/formatter.md)クラスの特殊化 | C++20 |
+
+
 ## 例
 ### 基本的な使い方 (C++20)
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>formatter -- year_month_day : formatterを追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day/formatter.html"/>
      <id>fd1b42604debcc02ed94f9b6aae854d7db38cbc3:reference/chrono/year_month_day/formatter.md</id>
      <updated>2020-06-01T22:40:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day/formatter.md b/reference/chrono/year_month_day/formatter.md
new file mode 100644
index 000000000..4887da06f
--- /dev/null
+++ b/reference/chrono/year_month_day/formatter.md
@@ -0,0 +1,81 @@
+# formatter
+* chrono[meta header]
+* std[meta namespace]
+* class[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std {
+  template &amp;lt;class charT&amp;gt;
+  struct formatter&amp;lt;chrono::year_month_day, charT&amp;gt;;
+}
+```
+
+## 概要
+`year_month_day`クラスに対する[`std::formatter`](/reference/format/formatter.md)クラステンプレートの特殊化。
+
+フォーマット指定子としては、以下を使用できる：
+
+| フォーマット指定子 | 説明 |
+|--------------------|------|
+| `%D` | `%m/%d/%y`と等価 |
+| `%F` | `%Y-%m-%d`と等価 |
+| `%j` | 年の日 (1月1日を`001`とした経過日) |
+| `%x` | ロケール依存の日付表現 |
+| `%Ex` | `%x`の異なる表現 |
+
+その他、[`day`](/reference/chrono/day/formatter.md)、[`month`](/reference/chrono/month/formatter.md)、[`year`](/reference/chrono/year/formatter.md)で利用可能なフォーマット指定子を使用できる。
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+#include &amp;lt;format&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main() {
+  chrono::year_month_day date = 2020y/3/1;
+
+  // デフォルトフォーマットはoperator&amp;lt;&amp;lt;と同じ
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;1 : {}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;2 : {:%D}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;3 : {:%F}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;4 : {:%x}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;5 : {:%Y年%m月%d日}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+
+  // ロケール依存の出力
+  std::cout &amp;lt;&amp;lt; std::format(std::locale(&amp;#34;ja_JP.UTF-8&amp;#34;), &amp;#34;6 : {:%x}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(std::locale(&amp;#34;ja_JP.UTF-8&amp;#34;), &amp;#34;7 : {:%Ex}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+}
+```
+* std::format[link /reference/chrono/format.md]
+* std::locale[link /reference/locale/locale.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+
+### 出力
+```
+1 : 2020-03-01
+2 : Mar/01/2020
+3 : 2020-03-01
+4 : 03/01/20
+5 : 2020年03月01日
+6 : 2020年03月01日
+7 : 令和02年03月01日
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): (9.0時点で実装なし)
+- [GCC](/implementation.md#gcc): (9.2時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 関連項目
+- [chronoの`std::format()`](/reference/chrono/format.md) (フォーマットの詳細)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>formatter -- durationのformatter : 指定できるフォーマット指定子を記載</title>
      <link href="https://cpprefjp.github.io/reference/chrono/duration/formatter.html"/>
      <id>87c3b7fa1c8006ce43db4e22b562904841d9b4cf:reference/chrono/duration/formatter.md</id>
      <updated>2020-06-01T22:07:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/duration/formatter.md b/reference/chrono/duration/formatter.md
index 7b0925dbf..d0bcf9c33 100644
--- a/reference/chrono/duration/formatter.md
+++ b/reference/chrono/duration/formatter.md
@@ -14,6 +14,17 @@ namespace std {
 ## 概要
 `duration`クラスに対する[`std::formatter`](/reference/format/formatter.md)クラステンプレートの特殊化。
 
+フォーマット指定子としては、以下を使用できる：
+
+| フォーマット指定子 | 説明 |
+|--------------------|------|
+| `%q` | `duration`単位ごとのサフィックス。`duration`の`operator&amp;lt;&amp;lt;`で出力されるサフィックスと等価 |
+| `%Q` | `duration`の数値。`.count()`で取得した値 |
+| `%S` | 2桁0埋めの秒 |
+| `%M` | 2桁0埋めの分 |
+| `%H` | 24時間時計での2桁0埋めの時 |
+| `%I` | 12時間時計での2桁0埋めの時 |
+| `%p` | 12時間時計でのロケール依存の午前・午後の表現 |
 
 ## 備考
 - `Rep`が浮動小数点数である場合のみ、フォーマットとして浮動小数点数の精度を指定でき、そうでない場合に指定すると[`std::format_error`](/reference/format/format_error.md)例外が送出される
@@ -33,6 +44,12 @@ int main()
   // デフォルトフォーマットは、operator&amp;lt;&amp;lt;で出力されるものと同じ
   std::cout &amp;lt;&amp;lt; std::format(&amp;#34;{}&amp;#34;, chrono::seconds{3}) &amp;lt;&amp;lt; std::endl;
 
+  // 単位ごとのサフィックス
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;{:%q}&amp;#34;, chrono::seconds{3}) &amp;lt;&amp;lt; std::endl;
+
+  // duration::count()で取得した値
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;{:%Q}&amp;#34;, chrono::seconds{3}) &amp;lt;&amp;lt; std::endl;
+
   // フォーマット指定子を使用した場合、サフィックスは出力されない
   std::cout &amp;lt;&amp;lt; std::format(&amp;#34;seconds : {:%S}&amp;#34;, chrono::seconds{3}) &amp;lt;&amp;lt; std::endl;
   std::cout &amp;lt;&amp;lt; std::format(&amp;#34;minutes : {:%M}&amp;#34;, chrono::minutes{3}) &amp;lt;&amp;lt; std::endl;
@@ -46,6 +63,8 @@ int main()
 ### 出力
 ```
 3s
+s
+3
 seconds : 03
 minutes : 03
 24-hours : 15
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2020-10-22T14:38:05.411290</updated>
  <id>c4018105-d8f5-4cae-9536-eedee99bc8b7</id>

  
    <entry>
      <title>コンストラクタ -- year_month_day_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day/op_constructor.html"/>
      <id>aa41b093b72b37d51e825af3d9eff9250d98e4ad:reference/chrono/year_month_day/op_constructor.md</id>
      <updated>2020-10-22T16:58:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day/op_constructor.md b/reference/chrono/year_month_day/op_constructor.md
index ada55a854..35e5f959f 100644
--- a/reference/chrono/year_month_day/op_constructor.md
+++ b/reference/chrono/year_month_day/op_constructor.md
@@ -44,7 +44,7 @@ year_month_day(year_month_day&amp;amp;&amp;amp;) = default;                         // (7) C++20
 - (2) :
     - `y`、`m`、`d`をメンバ変数として保持する
 - (3) :
-    - 年のメンバ変数として`ymdl.`[`year()`](/reference/chrono/year_month_day_last/year.md.nolink)の値、月のメンバ変数として`ymdl.`[`month()`](/reference/chrono/year_month_day_last/month.md.nolink)の値、日のメンバ変数として`ymdl.`[`day()`](/reference/chrono/year_month_day_last/day.md.nolink)の値を保持する
+    - 年のメンバ変数として`ymdl.`[`year()`](/reference/chrono/year_month_day_last/year.md)の値、月のメンバ変数として`ymdl.`[`month()`](/reference/chrono/year_month_day_last/month.md)の値、日のメンバ変数として`ymdl.`[`day()`](/reference/chrono/year_month_day_last/day.md)の値を保持する
 - (4) : `dp`が指すシステム時間に対応する年、月、日の値を求めて構築する
 - (5) : `dp`が指すシステム時間に対応する年、月、日の値を求めて構築する
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator local_days -- year_month_day_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day/op_local_days.html"/>
      <id>aa41b093b72b37d51e825af3d9eff9250d98e4ad:reference/chrono/year_month_day/op_local_days.md</id>
      <updated>2020-10-22T16:58:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day/op_local_days.md b/reference/chrono/year_month_day/op_local_days.md
index dafb0f076..5045f69dd 100644
--- a/reference/chrono/year_month_day/op_local_days.md
+++ b/reference/chrono/year_month_day/op_local_days.md
@@ -39,11 +39,11 @@ using namespace std::chrono_literals;
 
 int main()
 {
-  // year_month_dayからsys_daysへの暗黙変換
+  // year_month_dayからlocal_daysへの暗黙変換
   chrono::local_days date {2020y/3/1};
   std::cout &amp;lt;&amp;lt; date &amp;lt;&amp;lt; std::endl;
 
-  // 日だけ範囲外に大きくなった場合でも、システム日付を求められる
+  // 日だけ範囲外に大きくなった場合でも、ローカル日付を求められる
   chrono::local_days over_day {2019y/2/29};
   std::cout &amp;lt;&amp;lt; over_day &amp;lt;&amp;lt; std::endl;
 
@@ -51,7 +51,6 @@ int main()
   std::cout &amp;lt;&amp;lt; over_min_day &amp;lt;&amp;lt; std::endl;
 }
 ```
-* ok()[color ff0000]
 * chrono::local_days[link /reference/chrono/local_time.md]
 * 2020y[link /reference/chrono/year/op_y.md]
 * 2019y[link /reference/chrono/year/op_y.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator sys_days -- year_month_day_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day/op_sys_days.html"/>
      <id>aa41b093b72b37d51e825af3d9eff9250d98e4ad:reference/chrono/year_month_day/op_sys_days.md</id>
      <updated>2020-10-22T16:58:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day/op_sys_days.md b/reference/chrono/year_month_day/op_sys_days.md
index 082c54301..7920dd0c7 100644
--- a/reference/chrono/year_month_day/op_sys_days.md
+++ b/reference/chrono/year_month_day/op_sys_days.md
@@ -50,7 +50,6 @@ int main()
   std::cout &amp;lt;&amp;lt; over_min_day &amp;lt;&amp;lt; std::endl;
 }
 ```
-* ok()[color ff0000]
 * chrono::sys_days[link /reference/chrono/sys_time.md]
 * 2020y[link /reference/chrono/year/op_y.md]
 * 2019y[link /reference/chrono/year/op_y.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>year_month_day_last -- year_month_day_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day_last.html"/>
      <id>aa41b093b72b37d51e825af3d9eff9250d98e4ad:reference/chrono/year_month_day_last.md</id>
      <updated>2020-10-22T16:58:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day_last.md b/reference/chrono/year_month_day_last.md
index e5748a6ad..405ccc77c 100644
--- a/reference/chrono/year_month_day_last.md
+++ b/reference/chrono/year_month_day_last.md
@@ -25,7 +25,7 @@ namespace std::chrono {
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`(constructor)`](year_month_day_last/op_constructor.md.nolink) | コンストラクタ | C++20 |
+| [`(constructor)`](year_month_day_last/op_constructor.md) | コンストラクタ | C++20 |
 | `year_month_day_last&amp;amp; operator=(const year_month_day_last&amp;amp;) = default;`&amp;lt;br/&amp;gt; `year_month_day_last&amp;amp; operator=(year_month_day_last&amp;amp;&amp;amp;) = default;` | 代入演算子 | C++20 |
 
 
@@ -33,33 +33,33 @@ namespace std::chrono {
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`operator+=`](year_month_day_last/op_plus_assign.md.nolink)  | 加算の複合代入 | C++20 |
-| [`operator-=`](year_month_day_last/op_minus_assign.md.nolink) | 減算の複合代入 | C++20 |
+| [`operator+=`](year_month_day_last/op_plus_assign.md)  | 加算の複合代入 | C++20 |
+| [`operator-=`](year_month_day_last/op_minus_assign.md) | 減算の複合代入 | C++20 |
 
 
 ### 観測
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`year`](year_month_day_last/year.md.nolink)   | 年要素を取得する | C++20 |
-| [`month`](year_month_day_last/month.md.nolink) | 月要素を取得する | C++20 |
-| [`month_day_last`](year_month_day_last/month_day_last.md.nolink) | 月とその最終日の要素を取得する | C++20 |
-| [`day`](year_month_day_last/day.md.nolink)     | 日要素を求める | C++20 |
+| [`year`](year_month_day_last/year.md)   | 年要素を取得する | C++20 |
+| [`month`](year_month_day_last/month.md) | 月要素を取得する | C++20 |
+| [`month_day_last`](year_month_day_last/month_day_last.md) | 月とその最終日の要素を取得する | C++20 |
+| [`day`](year_month_day_last/day.md)     | 日要素を求める | C++20 |
 
 
 ### 変換
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`operator sys_days`](year_month_day_last/op_sys_days.md.nolink)     | システム時間の日付への型変換演算子 | C++20 |
-| [`operator local_days`](year_month_day_last/op_local_days.md.nolink) | ローカル時間の日付への型変換演算子 | C++20 |
+| [`operator sys_days`](year_month_day_last/op_sys_days.md)     | システム時間の日付への型変換演算子 | C++20 |
+| [`operator local_days`](year_month_day_last/op_local_days.md) | ローカル時間の日付への型変換演算子 | C++20 |
 
 
 ### 検証
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`ok`](year_month_day_last/ok.md.nolink) | 値が範囲に収まっているか判定する | C++20 |
+| [`ok`](year_month_day_last/ok.md) | 値が範囲に収まっているか判定する | C++20 |
 
 
 ## 非メンバ関数
@@ -67,17 +67,17 @@ namespace std::chrono {
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`operator+`](year_month_day_last/op_plus.md.nolink)  | 加算 | C++20 |
-| [`operator-`](year_month_day_last/op_minus.md.nolink) | 減算 | C++20 |
+| [`operator+`](year_month_day_last/op_plus.md)  | 加算 | C++20 |
+| [`operator-`](year_month_day_last/op_minus.md) | 減算 | C++20 |
 
 
 ### 比較演算
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`operator==`](year_month_day_last/op_equal.md.nolink) | 等値比較を行う | C++20 |
+| [`operator==`](year_month_day_last/op_equal.md) | 等値比較を行う | C++20 |
 | `bool operator!=(const year_month_day_last&amp;amp;, const year_month_day_last&amp;amp;) noexcept;` | 非等値比較を行う (`==`により使用可能) | C++20 |
-| [`operator&amp;lt;=&amp;gt;`](year_month_day_last/op_compare_3way.md.nolink) | 三方比較を行う | C++20 |
+| [`operator&amp;lt;=&amp;gt;`](year_month_day_last/op_compare_3way.md) | 三方比較を行う | C++20 |
 | `bool operator&amp;lt;(const year_month_day_last&amp;amp;, const year_month_day_last&amp;amp;) noexcept;` | 左辺が右辺より小さいかを判定する (`&amp;lt;=&amp;gt;`により使用可能) | C++20 |
 | `bool operator&amp;lt;=(const year_month_day_last&amp;amp;, const year_month_day_last&amp;amp;) noexcept;` | 左辺が右辺以下を判定する (`&amp;lt;=&amp;gt;`により使用可能) | C++20 |
 | `bool operator&amp;gt;(const year_month_day_last&amp;amp;, const year_month_day_last&amp;amp;) noexcept;` | 左辺が右辺より大きいかを判定する (`&amp;lt;=&amp;gt;`により使用可能) | C++20 |
@@ -88,14 +88,14 @@ namespace std::chrono {
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`operator&amp;lt;&amp;lt;`](year_month_day_last/op_ostream.md.nolink) | 出力ストリームに出力する | C++20 |
+| [`operator&amp;lt;&amp;lt;`](year_month_day_last/op_ostream.md) | 出力ストリームに出力する | C++20 |
 
 
 ## 文字列フォーマット
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`formatter`](year_month_day_last/formatter.md.nolink) | [`std::formatter`](/reference/format/formatter.md)クラスの特殊化 | C++20 |
+| [`formatter`](year_month_day_last/formatter.md) | [`std::formatter`](/reference/format/formatter.md)クラスの特殊化 | C++20 |
 
 
 ## 例
@@ -134,7 +134,7 @@ int main()
 * February[link month_constants.md]
 * last[link last_spec.md]
 * sys_days[link sys_time.md]
-* date5.day()[link year_month_day_last/day.md.nolink]
+* date5.day()[link year_month_day_last/day.md]
 * year_month_day[link year_month_day.md]
 
 ### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>day -- year_month_day_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day_last/day.html"/>
      <id>aa41b093b72b37d51e825af3d9eff9250d98e4ad:reference/chrono/year_month_day_last/day.md</id>
      <updated>2020-10-22T16:58:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day_last/day.md b/reference/chrono/year_month_day_last/day.md
new file mode 100644
index 000000000..91590dffc
--- /dev/null
+++ b/reference/chrono/year_month_day_last/day.md
@@ -0,0 +1,57 @@
+# day
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_day_last[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr chrono::day day() const noexcept; // (1) C++20
+```
+* chrono::day[link /reference/chrono/day.md]
+
+## 概要
+日要素を求める。
+
+
+## 戻り値
+[`ok()`](ok.md)が`true`である場合、`*this`に設定された年と月の組で表現できる最終日を返す。そうでなければ、未規定の値を返す。
+
+
+## 備考
+- この値は要求に応じて計算されるだろう
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::year_month_day_last date = 2020y/2/chrono::last;
+  chrono::day d = date.day();
+  assert(d == 29d);
+}
+```
+* date.day()[color ff0000]
+* chrono::day[link /reference/chrono/day.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* 29d[link /reference/chrono/day/op_d.md]
+* chrono::last[link /reference/chrono/last_spec.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>formatter -- year_month_day_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day_last/formatter.html"/>
      <id>aa41b093b72b37d51e825af3d9eff9250d98e4ad:reference/chrono/year_month_day_last/formatter.md</id>
      <updated>2020-10-22T16:58:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day_last/formatter.md b/reference/chrono/year_month_day_last/formatter.md
new file mode 100644
index 000000000..01a9edd26
--- /dev/null
+++ b/reference/chrono/year_month_day_last/formatter.md
@@ -0,0 +1,81 @@
+# formatter
+* chrono[meta header]
+* std[meta namespace]
+* class[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std {
+  template &amp;lt;class charT&amp;gt;
+  struct formatter&amp;lt;chrono::year_month_day_last, charT&amp;gt;;
+}
+```
+
+## 概要
+`year_month_day_last`クラスに対する[`std::formatter`](/reference/format/formatter.md)クラステンプレートの特殊化。
+
+フォーマットフラグとしては、以下を使用できる：
+
+| フォーマットフラグ | 説明 |
+|--------------------|------|
+| `%D` | `%m/%d/%y`と等価 |
+| `%F` | `%Y-%m-%d`と等価 |
+| `%j` | 年の日 (1月1日を`001`とした経過日) |
+| `%x` | ロケール依存の日付表現 |
+| `%Ex` | `%x`の異なる表現 |
+
+その他、[`day`](/reference/chrono/day/formatter.md)、[`month`](/reference/chrono/month/formatter.md)、[`year`](/reference/chrono/year/formatter.md)で利用可能なフォーマットフラグを使用できる。
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+#include &amp;lt;format&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main() {
+  chrono::year_month_day_last date = 2020y/2/chrono::last;
+
+  // デフォルトフォーマットはoperator&amp;lt;&amp;lt;と同じ
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;1 : {}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;2 : {:%D}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;3 : {:%F}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;4 : {:%x}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;5 : {:%Y年%m月%d日}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+
+  // ロケール依存の出力
+  std::cout &amp;lt;&amp;lt; std::format(std::locale(&amp;#34;ja_JP.UTF-8&amp;#34;), &amp;#34;6 : {:%x}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(std::locale(&amp;#34;ja_JP.UTF-8&amp;#34;), &amp;#34;7 : {:%Ex}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+}
+```
+* std::format[link /reference/chrono/format.md]
+* std::locale[link /reference/locale/locale.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+
+### 出力
+```
+1 : 2020/Feb/last
+2 : Feb/29/2020
+3 : 2020-02-29
+4 : 02/29/20
+5 : 2020年02月29日
+6 : 2020年02月29日
+7 : 令和02年02月29日
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): (9.0時点で実装なし)
+- [GCC](/implementation.md#gcc): (9.2時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 関連項目
+- [chronoの`std::format()`](/reference/chrono/format.md) (フォーマットの詳細)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>month -- year_month_day_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day_last/month.html"/>
      <id>aa41b093b72b37d51e825af3d9eff9250d98e4ad:reference/chrono/year_month_day_last/month.md</id>
      <updated>2020-10-22T16:58:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day_last/month.md b/reference/chrono/year_month_day_last/month.md
new file mode 100644
index 000000000..26f3bb62f
--- /dev/null
+++ b/reference/chrono/year_month_day_last/month.md
@@ -0,0 +1,53 @@
+# month
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_day_last[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr chrono::month month() const noexcept; // (1) C++20
+```
+* chrono::month[link /reference/chrono/month.md]
+
+## 概要
+月要素を取得する。
+
+
+## 戻り値
+コンストラクタで設定されて保持している月の最終日オブジェクトから、月の値を返す。
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::year_month_day_last date = 2020y/2/chrono::last;
+  chrono::month m = date.month();
+  assert(m == chrono::February);
+}
+```
+* date.month()[color ff0000]
+* chrono::month[link /reference/chrono/month.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::February[link /reference/chrono/month_constants.md]
+* chrono::last[link /reference/chrono/last_spec.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>month_day_last -- year_month_day_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day_last/month_day_last.html"/>
      <id>aa41b093b72b37d51e825af3d9eff9250d98e4ad:reference/chrono/year_month_day_last/month_day_last.md</id>
      <updated>2020-10-22T16:58:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day_last/month_day_last.md b/reference/chrono/year_month_day_last/month_day_last.md
new file mode 100644
index 000000000..74273dcaf
--- /dev/null
+++ b/reference/chrono/year_month_day_last/month_day_last.md
@@ -0,0 +1,53 @@
+# month_day_last
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_day_last[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr chrono::month_day_last month_day_last() const noexcept; // (1) C++20
+```
+* chrono::month_day_last[link /reference/chrono/month_day_last.md]
+
+## 概要
+月の最終日要素を取得する。
+
+
+## 戻り値
+コンストラクタで設定されて保持している月の最終日オブジェクトを返す。
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::year_month_day_last date = 2020y/2/chrono::last;
+  chrono::month_day_last mdl = date.month_day_last();
+  assert(mdl == chrono::February/chrono::last);
+}
+```
+* date.month()[color ff0000]
+* chrono::month_day_last[link /reference/chrono/month_day_last.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::February[link /reference/chrono/month_constants.md]
+* chrono::last[link /reference/chrono/last_spec.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ok -- year_month_day_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day_last/ok.html"/>
      <id>aa41b093b72b37d51e825af3d9eff9250d98e4ad:reference/chrono/year_month_day_last/ok.md</id>
      <updated>2020-10-22T16:58:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day_last/ok.md b/reference/chrono/year_month_day_last/ok.md
new file mode 100644
index 000000000..582e712e9
--- /dev/null
+++ b/reference/chrono/year_month_day_last/ok.md
@@ -0,0 +1,50 @@
+# ok
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_day_last[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr bool ok() const noexcept; // (1) C++20
+```
+
+## 概要
+`year_month_day_last`オブジェクトの値が有効な日付の範囲内かを判定する。
+
+
+## 戻り値
+以下の全ての条件を満たす場合にこの関数は`true`を返し、そうでなければ`false`を返す：
+
+- [`year()`](year.md)メンバ関数によって返されるオブジェクト`y`の[`ok()`](/reference/chrono/year/ok.md)が`true`
+- [`month_day_last()`](month_day_last.md)メンバ関数によって返されるオブジェクト`mdl`の[`ok()`](/reference/chrono/month/ok.md)が`true`
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  assert((2020y/2/chrono::last).ok()  == true);
+}
+```
+* ok()[color ff0000]
+* chrono::last[link /reference/chrono/last_spec.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;=&gt; -- year_month_day_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day_last/op_compare_3way.html"/>
      <id>aa41b093b72b37d51e825af3d9eff9250d98e4ad:reference/chrono/year_month_day_last/op_compare_3way.md</id>
      <updated>2020-10-22T16:58:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day_last/op_compare_3way.md b/reference/chrono/year_month_day_last/op_compare_3way.md
new file mode 100644
index 000000000..4db45fedb
--- /dev/null
+++ b/reference/chrono/year_month_day_last/op_compare_3way.md
@@ -0,0 +1,71 @@
+# operator&amp;lt;=&amp;gt;
+* chrono[meta header]
+* std::chrono[meta namespace]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  constexpr strong_ordering
+    operator&amp;lt;=&amp;gt;(const year_month_day_last&amp;amp; x,
+                const year_month_day_last&amp;amp; y) noexcept; // (1) C++20
+}
+```
+
+## 概要
+`year_month_day_last`同士の三方比較を行う。
+
+
+## 戻り値
+- (1) : 以下と等価：
+
+```cpp
+if (auto c = x.year() &amp;lt;=&amp;gt; y.year(); c != 0) return c;
+return x.month_day_last() &amp;lt;=&amp;gt; y.month_day_last();
+```
+* year()[link year.md]
+* month_day_last()[link month_day_last.md]
+
+
+## 例外
+投げない
+
+
+## 備考
+- この演算子により、`operator&amp;lt;`、`operator&amp;lt;=`、`operator&amp;gt;`、`operator&amp;gt;=`が使用可能になる
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+using std::chrono::last;
+using namespace std::chrono_literals;
+
+int main()
+{
+  assert((2020y/3/last &amp;lt;=&amp;gt; 2020y/3/last) == 0);
+
+  assert(2020y/2/last &amp;lt; 2020y/3/last);
+  assert(2020y/2/last &amp;lt;= 2020y/3/last);
+
+  assert(2020y/3/last &amp;gt; 2020y/2/last);
+  assert(2020y/3/last &amp;gt;= 2020y/2/last);
+}
+```
+* 2020y[link /reference/chrono/year/op_y.md]
+* last[link /reference/chrono/last_spec.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): (9.0時点で実装なし)
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- year_month_day_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day_last/op_constructor.html"/>
      <id>aa41b093b72b37d51e825af3d9eff9250d98e4ad:reference/chrono/year_month_day_last/op_constructor.md</id>
      <updated>2020-10-22T16:58:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day_last/op_constructor.md b/reference/chrono/year_month_day_last/op_constructor.md
new file mode 100644
index 000000000..538c79ecf
--- /dev/null
+++ b/reference/chrono/year_month_day_last/op_constructor.md
@@ -0,0 +1,70 @@
+# コンストラクタ
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_day_last[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+year_month_day_last() = delete;                            // (1) C++20
+
+constexpr year_month_day_last(
+  const chrono::year&amp;amp; y,
+  const chrono::month_day_last&amp;amp; mdl) noexcept;             // (2) C++20
+
+year_month_day_last(const year_month_day_last&amp;amp;) = default; // (3) C++20
+year_month_day_last(year_month_day_last&amp;amp;&amp;amp;) = default;      // (4) C++20
+```
+* chrono::year[link /reference/chrono/year.md]
+* chrono::month_day_last[link /reference/chrono/month_day_last.md]
+
+## 概要
+- (1) : デフォルトコンストラクタ。定義されない
+- (2) : 年、月の最終日の値をそれぞれ指定して構築する
+- (3) : コピーコンストラクタ
+- (4) : ムーブコンストラクタ
+
+
+## 効果
+- (2) : `y`、`mdl`をメンバ変数として保持する
+
+
+## 例外
+投げない
+
+
+### 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::year_month_day_last date1{2020y, chrono::February/chrono::last};
+  chrono::year_month_day_last date2{chrono::year{2020}, chrono::last/chrono::month{2}};
+  assert(chrono::year_month_day{date1} == 2020y/2/29);
+  assert(chrono::year_month_day{date2} == 2020y/2/29);
+}
+```
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::February[link /reference/chrono/month_constants.md]
+* chrono::year[link /reference/chrono/year.md]
+* chrono::month[link /reference/chrono/month.md]
+* chrono::last[link /reference/chrono/last_spec.md]
+* chrono::year_month_day[link /reference/chrono/year_month_day.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator== -- year_month_day_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day_last/op_equal.html"/>
      <id>aa41b093b72b37d51e825af3d9eff9250d98e4ad:reference/chrono/year_month_day_last/op_equal.md</id>
      <updated>2020-10-22T16:58:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day_last/op_equal.md b/reference/chrono/year_month_day_last/op_equal.md
new file mode 100644
index 000000000..584db1de8
--- /dev/null
+++ b/reference/chrono/year_month_day_last/op_equal.md
@@ -0,0 +1,65 @@
+# operator==
+* chrono[meta header]
+* std::chrono[meta namespace]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  constexpr bool
+    operator==(const year_month_day_last&amp;amp; x,
+               const year_month_day_last&amp;amp; y) noexcept; // (1) C++20
+}
+```
+
+## 概要
+`year_month_day_last`同士の等値比較を行う。
+
+
+## 戻り値
+- (1) :
+
+```cpp
+return x.year() == y.year() &amp;amp;&amp;amp; x.month_day_last() == y.month_day_last();
+```
+* year()[link year.md]
+* month_day_last()[link month_day_last.md]
+
+
+## 例外
+投げない
+
+
+## 備考
+- この演算子により、`operator!=`が使用可能になる
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+using std::chrono::last;
+using namespace std::chrono_literals;
+
+int main()
+{
+  assert(2020y/3/last == 2020y/3/last);
+  assert(2020y/3/last != 2020y/2/last);
+}
+```
+* 2020y[link /reference/chrono/year/op_y.md]
+* last[link /reference/chrono/last_spec.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator local_days -- year_month_day_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day_last/op_local_days.html"/>
      <id>aa41b093b72b37d51e825af3d9eff9250d98e4ad:reference/chrono/year_month_day_last/op_local_days.md</id>
      <updated>2020-10-22T16:58:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day_last/op_local_days.md b/reference/chrono/year_month_day_last/op_local_days.md
new file mode 100644
index 000000000..fbc85a9db
--- /dev/null
+++ b/reference/chrono/year_month_day_last/op_local_days.md
@@ -0,0 +1,61 @@
+# operator local_days
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_day_last[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr explicit operator local_days() const noexcept; // (1) C++20
+```
+* local_days[link /reference/chrono/local_time.md]
+
+## 概要
+`year_month_day_last`オブジェクトをローカル時間の日付に、明示的に型変換する。
+
+
+## 戻り値
+```cpp
+return local_days{sys_days{*this}.time_since_epoch()};
+```
+* local_days[link /reference/chrono/local_time.md]
+* sys_days[link /reference/chrono/sys_time.md]
+* time_since_epoch()[link /reference/chrono/time_point/time_since_epoch.md]
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  // year_month_day_lastからlocal_daysへの暗黙変換
+  chrono::local_days date {2020y/2/chrono::last};
+  std::cout &amp;lt;&amp;lt; date &amp;lt;&amp;lt; std::endl;
+}
+```
+* chrono::local_days[link /reference/chrono/local_time.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::last[link /reference/chrono/last_spec.md]
+
+### 出力
+```
+2020-02-29 00:00:00
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 関連項目
+- [`operator sys_days`](op_sys_days.md)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator- -- year_month_day_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day_last/op_minus.html"/>
      <id>aa41b093b72b37d51e825af3d9eff9250d98e4ad:reference/chrono/year_month_day_last/op_minus.md</id>
      <updated>2020-10-22T16:58:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day_last/op_minus.md b/reference/chrono/year_month_day_last/op_minus.md
new file mode 100644
index 000000000..1d5be3967
--- /dev/null
+++ b/reference/chrono/year_month_day_last/op_minus.md
@@ -0,0 +1,64 @@
+# operator-
+* chrono[meta header]
+* std::chrono[meta namespace]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  constexpr year_month_day_last
+    operator-(const year_month_day_last&amp;amp; ymdl,
+              const months&amp;amp; dm) noexcept;      // (1) C++20
+  constexpr year_month_day_last
+    operator-(const year_month_day_last&amp;amp; ymdl,
+              const years&amp;amp; dy) noexcept;       // (2) C++20
+}
+```
+
+## 概要
+`year_month_day_last`の減算を行う。
+
+- (1) : `year_month_day_last`から月の時間間隔を減算する
+- (2) : `year_month_day_last`から年の時間間隔を減算する
+
+
+## 戻り値
+- (1) : `return ymdl + (-dm);`
+- (2) : `return ymdl + (-dy);`
+
+
+## 例外
+投げない
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  assert(chrono::year_month_day{2020y/3/chrono::last - chrono::months{1}} == 2020y/2/29);
+  assert(chrono::year_month_day{2021y/2/chrono::last - chrono::years{1}} == 2020y/2/29);
+}
+```
+* 2020y[link /reference/chrono/year/op_y.md]
+* 2021y[link /reference/chrono/year/op_y.md]
+* chrono::last[link /reference/chrono/last_spec.md]
+* chrono::year_month_day[link /reference/chrono/year_month_day.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator-= -- year_month_day_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day_last/op_minus_assign.html"/>
      <id>aa41b093b72b37d51e825af3d9eff9250d98e4ad:reference/chrono/year_month_day_last/op_minus_assign.md</id>
      <updated>2020-10-22T16:58:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day_last/op_minus_assign.md b/reference/chrono/year_month_day_last/op_minus_assign.md
new file mode 100644
index 000000000..5a9e9c50a
--- /dev/null
+++ b/reference/chrono/year_month_day_last/op_minus_assign.md
@@ -0,0 +1,69 @@
+# operator-=
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_day_last[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr year_month_day_last&amp;amp; operator-=(const months&amp;amp; m) noexcept; // (1) C++20
+constexpr year_month_day_last&amp;amp; operator-=(const years&amp;amp; y) noexcept;  // (2) C++20
+```
+
+## 概要
+`year_month_day_last`の値に対して減算の複合代入を行う。
+
+- (1) : 月の時間間隔を減算する
+- (2) : 年の時間間隔を減算する
+
+パラメータの型が、カレンダー時間の[`month`](/reference/chrono/month.md)、[`year`](/reference/chrono/year.md)ではなく、時間間隔を表す[`months`](/reference/chrono/duration_aliases.md)、[`years`](/reference/chrono/duration_aliases.md)であることに注意。
+
+
+## 効果
+- (1) : `*this = *this - m`
+- (2) : `*this = *this - y`
+
+
+## 戻り値
+- (1), (2) : `*this`
+
+
+## 例外
+投げない
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::year_month_day_last date = 2021y/3/chrono::last;
+
+  date -= chrono::months{1}; // 1ヶ月戻す
+  date -= chrono::years{1};  // 1年戻す
+
+  assert(chrono::year_month_day{date} == 2020y/2/29);
+}
+```
+* 2020y[link /reference/chrono/year/op_y.md]
+* 2021y[link /reference/chrono/year/op_y.md]
+* chrono::last[link /reference/chrono/last_spec.md]
+* chrono::year_month_day[link /reference/chrono/year_month_day.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): (9.2時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;&lt; -- year_month_day_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day_last/op_ostream.html"/>
      <id>aa41b093b72b37d51e825af3d9eff9250d98e4ad:reference/chrono/year_month_day_last/op_ostream.md</id>
      <updated>2020-10-22T16:58:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day_last/op_ostream.md b/reference/chrono/year_month_day_last/op_ostream.md
new file mode 100644
index 000000000..bd1abc245
--- /dev/null
+++ b/reference/chrono/year_month_day_last/op_ostream.md
@@ -0,0 +1,64 @@
+# operator&amp;lt;&amp;lt;
+* chrono[meta header]
+* std::chrono[meta namespace]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  template &amp;lt;class charT, class traits&amp;gt;
+  std::basic_ostream&amp;lt;charT, traits&amp;gt;&amp;amp;
+    operator&amp;lt;&amp;lt;(std::basic_ostream&amp;lt;charT, traits&amp;gt;&amp;amp; os, const year_month_day_last&amp;amp; ymdl); // (1) C++20
+}
+```
+
+## 概要
+`year_month_day_last`オブジェクトを出力ストリームに出力する。
+
+
+## 戻り値
+便宜上のリテラルキャスト`STATICALLY-WIDEN`を導入する。`STATICALLY-WIDEN&amp;lt;charT&amp;gt;(&amp;#34;...&amp;#34;)`は、`charT`が`char`である場合は`&amp;#34;...&amp;#34;`、`charT`が`wchar_t`である場合は`L&amp;#34;...&amp;#34;`を意味する。
+
+- (1) : 以下と等価：
+    ```cpp
+    return os &amp;lt;&amp;lt; format(STATICALLY-WIDEN&amp;lt;charT&amp;gt;(&amp;#34;{}/{}&amp;#34;),
+                        ymdl.year(), ymdl.month_day_last());
+    ```
+    * format[link /reference/format/format.md]
+    * ymdl.year()[link year.md]
+    * ymdl.month_day_last()[link month_day_last.md]
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+using std::chrono::last;
+using namespace std::chrono_literals;
+
+int main()
+{
+  std::cout &amp;lt;&amp;lt; 2020y/2/last &amp;lt;&amp;lt; std::endl;
+}
+```
+* 2020y[link /reference/chrono/year/op_y.md]
+* last[link /reference/chrono/last_spec.md]
+
+### 出力
+```
+2020/Feb/last
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): (9.0時点で実装なし)
+- [GCC](/implementation.md#gcc): (9.2時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 関連項目
+- [chronoの`std::format()`](/reference/chrono/format.md) (フォーマットの詳細)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator+ -- year_month_day_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day_last/op_plus.html"/>
      <id>aa41b093b72b37d51e825af3d9eff9250d98e4ad:reference/chrono/year_month_day_last/op_plus.md</id>
      <updated>2020-10-22T16:58:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day_last/op_plus.md b/reference/chrono/year_month_day_last/op_plus.md
new file mode 100644
index 000000000..90831ea16
--- /dev/null
+++ b/reference/chrono/year_month_day_last/op_plus.md
@@ -0,0 +1,101 @@
+# operator+
+* chrono[meta header]
+* std::chrono[meta namespace]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  constexpr year_month_day_last
+    operator+(const year_month_day_last&amp;amp; ymdl,
+              const months&amp;amp; dm) noexcept;                // (1) C++20
+  constexpr year_month_day_last
+    operator+(const months&amp;amp; dm,
+              const year_month_day_last&amp;amp; ymdl) noexcept; // (2) C++20
+
+  constexpr year_month_day_last
+    operator+(const year_month_day_last&amp;amp; ymdl,
+              const years&amp;amp; dy) noexcept;                 // (3) C++20
+  constexpr year_month_day_last
+    operator+(const years&amp;amp; dy,
+              const year_month_day_last&amp;amp; ymdl) noexcept; // (4) C++20
+}
+```
+
+## 概要
+`year_month_day_last`の加算を行う。
+
+- (1) : `year_month_day_last`に月の時間間隔を加算する
+- (2) : 月の時間間隔に`year_month_day_last`を加算する
+- (3) : `year_month_day_last`に年の時間間隔を加算する
+- (4) : 年の時間間隔に`year_month_day_last`を加算する
+
+
+## 戻り値
+- (1) :
+
+```cpp
+return (ymdl.year() / ymdl.month() + dm) / last;
+```
+* ymdl.year()[link year.md]
+* ymdl.month()[link month.md]
+* last[link /reference/chrono/last_spec.md]
+
+
+- (2) :
+
+```cpp
+return ymdl + dm;
+```
+
+- (3) :
+
+```cpp
+return (ymdl.year() + dy) / ymdl.month() / last;
+```
+* ymdl.year()[link year.md]
+* ymdl.month()[link month.md]
+* last[link /reference/chrono/last_spec.md]
+
+- (4) :
+
+```cpp
+return ymdl + dy;
+```
+
+
+## 例外
+投げない
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  assert(chrono::year_month_day{2020y/1/chrono::last + chrono::months{1}} == 2020y/2/29);
+  assert(chrono::year_month_day{2019y/2/chrono::last + chrono::years{1}} == 2020y/2/29);
+}
+```
+* 2019y[link /reference/chrono/year/op_y.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::last[link /reference/chrono/last_spec.md]
+* chrono::year_month_day[link /reference/chrono/year_month_day.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator+= -- year_month_day_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day_last/op_plus_assign.html"/>
      <id>aa41b093b72b37d51e825af3d9eff9250d98e4ad:reference/chrono/year_month_day_last/op_plus_assign.md</id>
      <updated>2020-10-22T16:58:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day_last/op_plus_assign.md b/reference/chrono/year_month_day_last/op_plus_assign.md
new file mode 100644
index 000000000..7c556bf39
--- /dev/null
+++ b/reference/chrono/year_month_day_last/op_plus_assign.md
@@ -0,0 +1,69 @@
+# operator+=
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_day_last[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr year_month_day_last&amp;amp; operator+=(const months&amp;amp; m) noexcept; // (1) C++20
+constexpr year_month_day_last&amp;amp; operator+=(const years&amp;amp; y) noexcept;  // (2) C++20
+```
+
+## 概要
+`year_month_day_last`の値に対して加算の複合代入を行う。
+
+- (1) : 月の時間間隔を加算する
+- (2) : 年の時間間隔を加算する
+
+パラメータの型が、カレンダー時間の[`month`](/reference/chrono/month.md)、[`year`](/reference/chrono/year.md)ではなく、時間間隔を表す[`months`](/reference/chrono/duration_aliases.md)、[`years`](/reference/chrono/duration_aliases.md)であることに注意。
+
+
+## 効果
+- (1) : `*this = *this + m`
+- (2) : `*this = *this + y`
+
+
+## 戻り値
+- (1), (2) : `*this`
+
+
+## 例外
+投げない
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::year_month_day_last date = 2019y/1/chrono::last;
+
+  date += chrono::months{1}; // 1ヶ月進める
+  date += chrono::years{1};  // 1年進める
+
+  assert(chrono::year_month_day{date} == 2020y/2/29);
+}
+```
+* 2019y[link /reference/chrono/year/op_y.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::last[link /reference/chrono/last_spec.md]
+* chrono::year_month_day[link /reference/chrono/year_month_day.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator sys_days -- year_month_day_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day_last/op_sys_days.html"/>
      <id>aa41b093b72b37d51e825af3d9eff9250d98e4ad:reference/chrono/year_month_day_last/op_sys_days.md</id>
      <updated>2020-10-22T16:58:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day_last/op_sys_days.md b/reference/chrono/year_month_day_last/op_sys_days.md
new file mode 100644
index 000000000..cfb38654f
--- /dev/null
+++ b/reference/chrono/year_month_day_last/op_sys_days.md
@@ -0,0 +1,60 @@
+# operator sys_days
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_day_last[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr operator sys_days() const noexcept; // (1) C++20
+```
+* sys_days[link /reference/chrono/sys_time.md]
+
+## 概要
+`year_month_day_last`オブジェクトをシステム時間の日付に、暗黙に型変換する。
+
+
+## 戻り値
+```cpp
+return sys_days{year()/month()/day()};
+```
+* sys_days[link /reference/chrono/sys_time.md]
+* year()[link year.md]
+* month()[link month.md]
+* day()[link day.md]
+
+([`year_month_day`](/reference/chrono/year_month_day.md)クラスの[`sys_days`への変換演算子](/reference/chrono/year_month_day/op_sys_days.md)で変換される)
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  // year_month_day_lastからsys_daysへの暗黙変換
+  chrono::sys_days date = 2020y/2/chrono::last;
+  std::cout &amp;lt;&amp;lt; date &amp;lt;&amp;lt; std::endl;
+}
+```
+* chrono::sys_days[link /reference/chrono/sys_time.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::last[link /reference/chrono/last_spec.md]
+
+### 出力
+```
+2020-02-29
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>year -- year_month_day_last : メンバ、非メンバを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day_last/year.html"/>
      <id>aa41b093b72b37d51e825af3d9eff9250d98e4ad:reference/chrono/year_month_day_last/year.md</id>
      <updated>2020-10-22T16:58:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day_last/year.md b/reference/chrono/year_month_day_last/year.md
new file mode 100644
index 000000000..593c570e8
--- /dev/null
+++ b/reference/chrono/year_month_day_last/year.md
@@ -0,0 +1,52 @@
+# year
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_day_last[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr chrono::year year() const noexcept; // (1) C++20
+```
+* chrono::year[link /reference/chrono/year.md]
+
+## 概要
+年要素を取得する。
+
+
+## 戻り値
+コンストラクタで設定されて保持している年オブジェクトを返す。
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::year_month_day_last date = 2020y/2/chrono::last;
+  chrono::year y = date.year();
+  assert(y == 2020y);
+}
+```
+* date.year()[color ff0000]
+* chrono::year[link /reference/chrono/year.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::last[link /reference/chrono/last_spec.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>chrono -- chrono : year_month_day_lastクラスページを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono.html"/>
      <id>6091df91ed5d44c87d52199ddb1bea68db145780:reference/chrono.md</id>
      <updated>2020-10-22T00:34:16+09:00</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;chrono&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;chrono&lt;/span&gt;&lt;span class=&#34;cpp cpp11&#34; title=&#34;C++11で追加&#34;&gt;(C++11)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;chrono&amp;gt;&lt;/code&gt;ヘッダは、時間に関するユーティリティとして機能する関数・クラスを提供する。このヘッダに含まれる関数・クラスは、&lt;code&gt;std::chrono&lt;/code&gt;名前空間で定義される。&lt;/p&gt;
&lt;p&gt;このライブラリは、タイムアウト、操作間隔、スケジューリングといった短期間の操作を主な用途として想定している。そのためカレンダー機能としては遥かな過去・未来を扱えるようにはなっていない。&lt;/p&gt;
&lt;h2&gt;時間を表す型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration.html&#34;&gt;duration&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間の間隔(class template)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/time_point.html&#34;&gt;time_point&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間軸上の一点(class template)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/treat_as_floating_point.html&#34;&gt;treat_as_floating_point&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;duration&lt;/code&gt;内部表現の型が浮動小数点型かを判定するためのトレイト(class template)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_values.html&#34;&gt;duration_values&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;duration&lt;/code&gt;内部表現の特別な値を取得するためのトレイト(class template)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;時間の単位を表す型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;nanoseconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ナノ秒を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;microseconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;マイクロ秒を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;milliseconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ミリ秒を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;minutes&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;分を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;hours&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;days&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;weeks&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;週を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;years&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;months&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;時計型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/is_clock.html&#34;&gt;is_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;クロック型かを判定する (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/system_clock.html&#34;&gt;system_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;システム時間のクロック(class)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/steady_clock.html&#34;&gt;steady_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間が逆行しないクロック(class)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/high_resolution_clock.html&#34;&gt;high_resolution_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;高分解能クロック(class)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/utc_clock.html&#34;&gt;utc_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;UTC時間 (協定世界時) のクロック (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/tai_clock.html&#34;&gt;tai_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;TAI時間 (国際原子時) のクロック (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/gps_clock.html&#34;&gt;gps_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;GPS時間のクロック (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/file_clock.html&#34;&gt;file_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ファイル時間を作るために使用されるクロック (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;システム時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/sys_time.html&#34;&gt;sys_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;システム時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/sys_time.html&#34;&gt;sys_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でシステム時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/sys_time.html&#34;&gt;sys_days&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日単位でシステム時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;ローカル時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_time.html&#34;&gt;local_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間を表す擬似的なクロック (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_time.html&#34;&gt;local_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_time.html&#34;&gt;local_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でローカル時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_time.html&#34;&gt;local_days&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日単位でローカル時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;UTC時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/utc_time.html&#34;&gt;utc_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;UTC時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/utc_time.html&#34;&gt;utc_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でUTC時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;TAI時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/tai_time.html&#34;&gt;tai_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;TAI時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/tai_time.html&#34;&gt;tai_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でTAI時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;GPS時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/gps_time.html&#34;&gt;gps_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;GPS時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/gps_time.html&#34;&gt;gps_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でGPS時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;ファイル時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/file_time.html&#34;&gt;file_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ファイル時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;時計時間の変換&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/clock_time_conversion.html&#34;&gt;clock_time_conversion&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時計間の変換方法を組み合わせごとに定義するためのクラス (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/clock_cast.html&#34;&gt;clock_cast&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ほかの時計時間のtime_pointに変換する (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;うるう秒の情報&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/leap_second_info.html&#34;&gt;leap_second_info&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;うるう秒の情報を扱うクラス (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/get_leap_second_info.html&#34;&gt;get_leap_second_info&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した日時までに挿入されたうるう秒の回数を取得する (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;カレンダー型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/last_spec.html&#34;&gt;last_spec&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月の最終日、週の最終日など、文脈に応じた「最後」を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/day.html&#34;&gt;day&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;未規定の月の指定した日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month.html&#34;&gt;month&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月単体の値を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year.html&#34;&gt;year&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;カレンダーの年を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday.html&#34;&gt;weekday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;週の日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_indexed.html&#34;&gt;weekday_indexed&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;N回目の指定した曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_last.html&#34;&gt;weekday_last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;未規定の月の最後の指定した曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_day.html&#34;&gt;month_day&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月と日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_day_last.html&#34;&gt;month_day_last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した月の最終日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_weekday.html&#34;&gt;month_weekday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月の指定したN番目の曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_weekday_last.html&#34;&gt;month_weekday_last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月の指定した最終回目の曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year_month.html&#34;&gt;year_month&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年と月を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year_month_day.html&#34;&gt;year_month_day&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年、月、日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year_month_day_last.html&#34;&gt;year_month_day_last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年、月、月の最終日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year_month_weekday.md.nolink&#34;&gt;year_month_weekday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年、月、N回目の指定した曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year_month_weekday_last.md.nolink&#34;&gt;year_month_weekday_last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年、月、月の最後の指定した曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;1日内の時間情報&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/time_of_day.md.nolink&#34;&gt;time_of_day&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1日内の時間情報を取得するクラス (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/hh_mm_ss.md.nolink&#34;&gt;hh_mm_ss&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時、分、秒を表すクラス (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/is_am.md.nolink&#34;&gt;is_am&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間が午前かを判定する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/is_pm.md.nolink&#34;&gt;is_pm&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間が午後かを判定する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/make12.md.nolink&#34;&gt;make12&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[1h, 12h]&lt;/code&gt;の時間範囲に変換する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/make24.md.nolink&#34;&gt;make24&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間を午前&lt;code&gt;[0h, 11h]&lt;/code&gt;か午後&lt;code&gt;[12h, 23h]&lt;/code&gt;の範囲に変換する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;タイムゾーン&lt;/h2&gt;
&lt;h3&gt;タイムゾーンのデータベース&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/tzdb.html&#34;&gt;tzdb&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンのデータベース型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/get_tzdb.html&#34;&gt;get_tzdb&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンデータベースを取得する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/tzdb_list.html&#34;&gt;tzdb_list&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンデータベースのリスト (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/get_tzdb_list.html&#34;&gt;get_tzdb_list&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンデータベースのリストを取得する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/locate_zone.html&#34;&gt;locate_zone&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した名前のタイムゾーンを取得する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/current_zone.html&#34;&gt;current_zone&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;現在のタイムゾーンを取得する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;リモートタイムゾーンデータベースのサポート&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/reload_tzdb.html&#34;&gt;reload_tzdb&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;リモートタイムゾーンデータベースを再読み込みする (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/remote_version.html&#34;&gt;remote_version&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;リモートタイムゾーンデータベースの最新バージョン番号を取得する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;例外クラス&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/nonexistent_local_time.html&#34;&gt;nonexistent_local_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;存在しないローカル時間をシステム時間に変換しようとした (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/ambiguous_local_time.html&#34;&gt;ambiguous_local_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間があいまい (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;タイムゾーン&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/sys_info.html&#34;&gt;sys_info&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;システム時間用のタイムゾーン情報 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_info.html&#34;&gt;local_info&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間用のタイムゾーン情報 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/choose.html&#34;&gt;choose&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンを変換する際に、早い時間側と遅い時間側どちらに丸めるかの種類 (enum)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/time_zone.html&#34;&gt;time_zone&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンの変換を扱うクラス (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/zoned_traits.html&#34;&gt;zoned_traits&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーン取得のカスタマイズ用中間インタフェース (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/zoned_time.html&#34;&gt;zoned_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンを考慮した時間軸上の一点を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/zoned_time.html&#34;&gt;zoned_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でタイムゾーンを考慮した時間軸上の一点を表す型 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;うるう秒サポート&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/leap_second.html&#34;&gt;leap_second&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;うるう秒が挿入された日時を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;リンク&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/time_zone_link.html&#34;&gt;time_zone_link&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンの代替名を管理する型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;文字列フォーマット&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local-time-format-t.html&#34;&gt;local-time-format-t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間を文字列フォーマットするために必要な情報をまとめた説明用の型 (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_time_format.html&#34;&gt;local_time_format&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間の文字列フォーマット用オブジェクトを生成する (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/format.html&#34;&gt;format&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列フォーマット&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;文字列解析&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/parse.html&#34;&gt;parse&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日時文字列を解析する入力マニピュレータ (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;カレンダー定数&lt;/h2&gt;
&lt;h3&gt;最後&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/last_spec.html&#34;&gt;last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月の最終日、週の最終日など、文脈に応じた「最後」を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;曜日&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Sunday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Monday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Tuesday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;火曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Wednesday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;水曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Thursday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;木曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Friday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;金曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Saturday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;土曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;月&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;January&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;February&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;2月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;March&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;3月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;April&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;4月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;May&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;5月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;June&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;6月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;July&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;7月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;August&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;8月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;September&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;9月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;October&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;10月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;November&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;11月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;December&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;12月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2661.htm&#34; target=&#34;_blank&#34;&gt;N2661 A Foundation to Sleep On&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0216r0.html&#34; target=&#34;_blank&#34;&gt;P0216R0 C++ Standard Proposal — A Time-Zone Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0355r7.html&#34; target=&#34;_blank&#34;&gt;P0355R7 Extending &lt;code&gt;&amp;lt;chrono&amp;gt;&lt;/code&gt; to Calendars and Time Zones&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>month_day_last -- chrono : year_month_day_lastクラスページを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_day_last.html"/>
      <id>6091df91ed5d44c87d52199ddb1bea68db145780:reference/chrono/month_day_last.md</id>
      <updated>2020-10-22T00:34:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_day_last.md b/reference/chrono/month_day_last.md
index f902af818..fced325c1 100644
--- a/reference/chrono/month_day_last.md
+++ b/reference/chrono/month_day_last.md
@@ -13,7 +13,7 @@ namespace std::chrono {
 ## 概要
 `month_day_last`は、未規定の年の、月の最終日を表すカレンダー表現のためクラスである。
 
-2月の最終日が年によって異なることもあり、このクラスでは月の最終日が何日なのかは取得できない。そのためには、年情報を付加して[`year_month_day_last`](year_month_day_last.md.nolink)クラスに変換する必要がある。
+2月の最終日が年によって異なることもあり、このクラスでは月の最終日が何日なのかは取得できない。そのためには、年情報を付加して[`year_month_day_last`](year_month_day_last.md)クラスに変換する必要がある。
 
 このクラスは等値比較および大小比較ができ、[EqualityComparable](/reference/concepts/equality_comparable.md)およびLessThanComparableの要件を満たす。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator/ -- chrono : year_month_day_lastクラスページを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_day_last/op_append.html"/>
      <id>6091df91ed5d44c87d52199ddb1bea68db145780:reference/chrono/month_day_last/op_append.md</id>
      <updated>2020-10-22T00:34:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_day_last/op_append.md b/reference/chrono/month_day_last/op_append.md
index f117c21d1..76031ff3e 100644
--- a/reference/chrono/month_day_last/op_append.md
+++ b/reference/chrono/month_day_last/op_append.md
@@ -13,7 +13,7 @@ namespace std::chrono {
 }
 ```
 * year[link /reference/chrono/year.md]
-* year_month_day_last[link /reference/chrono/year_month_day_last.md.nolink]
+* year_month_day_last[link /reference/chrono/year_month_day_last.md]
 
 ## 概要
 カレンダー要素同士をつなぎ合わせる。
@@ -47,7 +47,7 @@ int main()
 * March[link /reference/chrono/month_constants.md]
 * last[link /reference/chrono/last_spec.md]
 * 2020y[link /reference/chrono/year/op_y.md]
-* year_month_day_last[link /reference/chrono/year_month_day_last.md.nolink]
+* year_month_day_last[link /reference/chrono/year_month_day_last.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator/ -- chrono : year_month_day_lastクラスページを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year/op_append.html"/>
      <id>6091df91ed5d44c87d52199ddb1bea68db145780:reference/chrono/year/op_append.md</id>
      <updated>2020-10-22T00:34:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year/op_append.md b/reference/chrono/year/op_append.md
index cc9400468..deebddb13 100644
--- a/reference/chrono/year/op_append.md
+++ b/reference/chrono/year/op_append.md
@@ -46,7 +46,7 @@ namespace std::chrono {
 * year_month[link /reference/chrono/year_month.md]
 * year_month_day[link /reference/chrono/year_month_day.md]
 * month_day[link /reference/chrono/month_day.md]
-* year_month_day_last[link /reference/chrono/year_month_day_last.md.nolink]
+* year_month_day_last[link /reference/chrono/year_month_day_last.md]
 * month_day_last[link /reference/chrono/month_day_last.md]
 * year_month_weekday[link /reference/chrono/year_month_weekday.md.nolink]
 * month_weekday[link /reference/chrono/month_weekday.md]
@@ -73,11 +73,11 @@ namespace std::chrono {
 - (2) : `return y /` [`month`](/reference/chrono/month.md)`{m};`
 - (3) : `return y / md.`[`month()`](/reference/chrono/month_day/month.md) `/ md.`[`day()`](/reference/chrono/month_day/day.md)`;`
 - (4) : `return year(y) / md;`
-- (5) : `return` [`year_month_day_last`](/reference/year_month_day_last.md.nolink)`{y, mdl};`
+- (5) : `return` [`year_month_day_last`](/reference/chrono/year_month_day_last.md)`{y, mdl};`
 - (6) : `return year(y) / mdl;`
-- (7) : `return` [`year_month_weekday`](/reference/year_month_weekday.md.nolink)`{y, mwd.`[`month()`](/reference/chrono/month_weekday/month.md)`, mwd.`[`weekday_indexed()`](/reference/chrono/month_weekday/weekday_indexed.md)`};`
+- (7) : `return` [`year_month_weekday`](/reference/chrono/year_month_weekday.md.nolink)`{y, mwd.`[`month()`](/reference/chrono/month_weekday/month.md)`, mwd.`[`weekday_indexed()`](/reference/chrono/month_weekday/weekday_indexed.md)`};`
 - (8) : `return year(y) / mwd;`
-- (9) : `return` [`year_month_weekday_last`](/reference/year_month_weekday_last.md.nolink)`{y, mwdl.`[`month()`](/reference/chrono/month_weekday_last/month.md)`, mwdl.`[`weekday_last()`](/reference/chrono/month_weekday_last/weekday_last.md)`};`
+- (9) : `return` [`year_month_weekday_last`](/reference/chrono/year_month_weekday_last.md.nolink)`{y, mwdl.`[`month()`](/reference/chrono/month_weekday_last/month.md)`, mwdl.`[`weekday_last()`](/reference/chrono/month_weekday_last/weekday_last.md)`};`
 - (10) : `return year(y) / mwdl;`
 
 
@@ -122,7 +122,7 @@ int main()
 * Sunday[link /reference/chrono/weekday_constants.md]
 * year_month[link /reference/chrono/year_month.md]
 * year_month_day[link /reference/chrono/year_month_day.md]
-* year_month_day_last[link /reference/chrono/year_month_day_last.md.nolink]
+* year_month_day_last[link /reference/chrono/year_month_day_last.md]
 * year_month_weekday[link /reference/chrono/year_month_weekday.md.nolink]
 * year_month_weekday_last[link /reference/chrono/year_month_weekday_last.md.nolink]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator/ -- chrono : year_month_day_lastクラスページを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month/op_append.html"/>
      <id>6091df91ed5d44c87d52199ddb1bea68db145780:reference/chrono/year_month/op_append.md</id>
      <updated>2020-10-22T00:34:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month/op_append.md b/reference/chrono/year_month/op_append.md
index af907c69e..9738b1b21 100644
--- a/reference/chrono/year_month/op_append.md
+++ b/reference/chrono/year_month/op_append.md
@@ -25,7 +25,7 @@ namespace std::chrono {
 ```
 * day[link /reference/chrono/day.md]
 * year_month_day[link /reference/chrono/year_month_day.md]
-* year_month_day_last[link /reference/chrono/year_month_day_last.md.nolink]
+* year_month_day_last[link /reference/chrono/year_month_day_last.md]
 * year_month_weekday[link /reference/chrono/year_month_weekday.md.nolink]
 * year_month_weekday_last[link /reference/chrono/year_month_weekday_last.md.nolink]
 
@@ -42,7 +42,7 @@ namespace std::chrono {
 ## 戻り値
 - (1) : `return` [`year_month_day`](/reference/chrono/year_month_day.md)`{ym.`[`year()`](year.md)`, ym.`[`month()`](month.md)`, d};`
 - (2) : `return ym /` [`day`](/reference/chrono/day.md)`(d);`
-- (3) : `return` [`year_month_day_last`](/reference/chrono/year_month_day_last.md.nolink)`{ym.`[`year()`](year.md)`,` [`month_day_last`](/reference/chrono/month_day_last.md)`{ym.`[`month()`](month.md)`}};`
+- (3) : `return` [`year_month_day_last`](/reference/chrono/year_month_day_last.md)`{ym.`[`year()`](year.md)`,` [`month_day_last`](/reference/chrono/month_day_last.md)`{ym.`[`month()`](month.md)`}};`
 - (4) : `return` [`year_month_weekday`](/reference/chrono/year_month_weekday.md.nolink)`{ym.`[`year()`](year.md)`, ym.`[`month()`](month.md)`, wdi};`
 - (5) : `return` [`year_month_weekday_last`](/reference/chrono/year_month_weekday_last.md.nolink)`{ym.`[`year()`](year.md)`, ym.`[`month()`](month.md)`, wdl};`
 
@@ -78,7 +78,7 @@ int main()
 * 2020y[link /reference/chrono/year/op_y.md]
 * 1d[link /reference/chrono/day/op_d.md]
 * year_month_day[link /reference/chrono/year_month_day.md]
-* year_month_day_last[link /reference/chrono/year_month_day_last.md.nolink]
+* year_month_day_last[link /reference/chrono/year_month_day_last.md]
 * month_day_last[link /reference/chrono/month_day_last.md]
 * year_month_weekday[link /reference/chrono/year_month_weekday.md.nolink]
 * year_month_weekday_last[link /reference/chrono/year_month_weekday_last.md.nolink]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- chrono : year_month_day_lastクラスページを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day/op_constructor.html"/>
      <id>6091df91ed5d44c87d52199ddb1bea68db145780:reference/chrono/year_month_day/op_constructor.md</id>
      <updated>2020-10-22T00:34:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day/op_constructor.md b/reference/chrono/year_month_day/op_constructor.md
index 984595aaa..ada55a854 100644
--- a/reference/chrono/year_month_day/op_constructor.md
+++ b/reference/chrono/year_month_day/op_constructor.md
@@ -24,7 +24,7 @@ year_month_day(year_month_day&amp;amp;&amp;amp;) = default;                         // (7) C++20
 * chrono::year[link /reference/chrono/year.md]
 * chrono::month[link /reference/chrono/month.md]
 * chrono::day[link /reference/chrono/day.md]
-* year_month_day_last[link /reference/chrono/year_month_day_last.md.nolink]
+* year_month_day_last[link /reference/chrono/year_month_day_last.md]
 * sys_days[link /reference/chrono/sys_time.md]
 * local_days[link /reference/chrono/local_time.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>year_month_day_last -- chrono : year_month_day_lastクラスページを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day_last.html"/>
      <id>6091df91ed5d44c87d52199ddb1bea68db145780:reference/chrono/year_month_day_last.md</id>
      <updated>2020-10-22T00:34:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day_last.md b/reference/chrono/year_month_day_last.md
new file mode 100644
index 000000000..e5748a6ad
--- /dev/null
+++ b/reference/chrono/year_month_day_last.md
@@ -0,0 +1,156 @@
+# year_month_day_last
+* chrono[meta header]
+* std::chrono[meta namespace]
+* class[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  class year_month_day_last;
+}
+```
+
+## 概要
+`year_month_day_last`は、年、月、月の最終日を表すカレンダー表現のためクラスである。
+
+このクラスは、年、および月に関する演算に対応している。ただし、日に関する演算はできない。
+
+このクラスは等値比較および大小比較ができ、[EqualityComparable](/reference/concepts/equality_comparable.md)およびLessThanComparableの要件を満たす。
+
+このクラスは、[トリビアルコピー可能](/reference/type_traits/is_trivially_copyable.md)で、かつ[スタンダードレイアウト型](/reference/type_traits/is_standard_layout.md)である。
+
+
+## メンバ関数
+### 構築／コピー／破棄
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`(constructor)`](year_month_day_last/op_constructor.md.nolink) | コンストラクタ | C++20 |
+| `year_month_day_last&amp;amp; operator=(const year_month_day_last&amp;amp;) = default;`&amp;lt;br/&amp;gt; `year_month_day_last&amp;amp; operator=(year_month_day_last&amp;amp;&amp;amp;) = default;` | 代入演算子 | C++20 |
+
+
+### 算術演算
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`operator+=`](year_month_day_last/op_plus_assign.md.nolink)  | 加算の複合代入 | C++20 |
+| [`operator-=`](year_month_day_last/op_minus_assign.md.nolink) | 減算の複合代入 | C++20 |
+
+
+### 観測
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`year`](year_month_day_last/year.md.nolink)   | 年要素を取得する | C++20 |
+| [`month`](year_month_day_last/month.md.nolink) | 月要素を取得する | C++20 |
+| [`month_day_last`](year_month_day_last/month_day_last.md.nolink) | 月とその最終日の要素を取得する | C++20 |
+| [`day`](year_month_day_last/day.md.nolink)     | 日要素を求める | C++20 |
+
+
+### 変換
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`operator sys_days`](year_month_day_last/op_sys_days.md.nolink)     | システム時間の日付への型変換演算子 | C++20 |
+| [`operator local_days`](year_month_day_last/op_local_days.md.nolink) | ローカル時間の日付への型変換演算子 | C++20 |
+
+
+### 検証
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`ok`](year_month_day_last/ok.md.nolink) | 値が範囲に収まっているか判定する | C++20 |
+
+
+## 非メンバ関数
+### 算術演算
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`operator+`](year_month_day_last/op_plus.md.nolink)  | 加算 | C++20 |
+| [`operator-`](year_month_day_last/op_minus.md.nolink) | 減算 | C++20 |
+
+
+### 比較演算
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`operator==`](year_month_day_last/op_equal.md.nolink) | 等値比較を行う | C++20 |
+| `bool operator!=(const year_month_day_last&amp;amp;, const year_month_day_last&amp;amp;) noexcept;` | 非等値比較を行う (`==`により使用可能) | C++20 |
+| [`operator&amp;lt;=&amp;gt;`](year_month_day_last/op_compare_3way.md.nolink) | 三方比較を行う | C++20 |
+| `bool operator&amp;lt;(const year_month_day_last&amp;amp;, const year_month_day_last&amp;amp;) noexcept;` | 左辺が右辺より小さいかを判定する (`&amp;lt;=&amp;gt;`により使用可能) | C++20 |
+| `bool operator&amp;lt;=(const year_month_day_last&amp;amp;, const year_month_day_last&amp;amp;) noexcept;` | 左辺が右辺以下を判定する (`&amp;lt;=&amp;gt;`により使用可能) | C++20 |
+| `bool operator&amp;gt;(const year_month_day_last&amp;amp;, const year_month_day_last&amp;amp;) noexcept;` | 左辺が右辺より大きいかを判定する (`&amp;lt;=&amp;gt;`により使用可能) | C++20 |
+| `bool operator&amp;gt;=(const year_month_day_last&amp;amp;, const year_month_day_last&amp;amp;) noexcept;` | 左辺が右辺以上を判定する (`&amp;lt;=&amp;gt;`により使用可能) | C++20 |
+
+
+### 入出力
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`operator&amp;lt;&amp;lt;`](year_month_day_last/op_ostream.md.nolink) | 出力ストリームに出力する | C++20 |
+
+
+## 文字列フォーマット
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`formatter`](year_month_day_last/formatter.md.nolink) | [`std::formatter`](/reference/format/formatter.md)クラスの特殊化 | C++20 |
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+using namespace std::chrono;
+
+int main()
+{
+  // すべて2020年2月の最終日を表す
+  year_month_day_last date1 = 2020y/2/last;
+  year_month_day_last date2 = 2020y/February/last;
+  year_month_day_last date3 = February/last/2020y;
+  year_month_day_last date4 = February/last/2020;
+
+  // 各カレンダー要素のコンストラクタはexplicitなので、
+  // 指定順は年、月の最終日で決まっているが、int値は指定できない
+  year_month_day_last date5{2020y, February/last};
+  std::cout &amp;lt;&amp;lt; date5 &amp;lt;&amp;lt; std::endl;
+
+  // 2020年2月の最終日が何日かを求める
+  std::cout &amp;lt;&amp;lt; date5.day() &amp;lt;&amp;lt; std::endl;
+
+  // 日単位のシステム時間に変換
+  sys_days sd{date5};
+  std::cout &amp;lt;&amp;lt; sd &amp;lt;&amp;lt; std::endl;
+
+  // 年月日に変換
+  year_month_day ymd{date5};
+  std::cout &amp;lt;&amp;lt; ymd &amp;lt;&amp;lt; std::endl;
+}
+```
+* 2020y[link year/op_y.md]
+* February[link month_constants.md]
+* last[link last_spec.md]
+* sys_days[link sys_time.md]
+* date5.day()[link year_month_day_last/day.md.nolink]
+* year_month_day[link year_month_day.md]
+
+### 出力
+```
+2020/02/last
+29
+2020-02-29
+2020-02-29
+```
+
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0 (出力ストリームなし)
+- [GCC](/implementation.md#gcc): 11.1 (出力ストリームなし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>max_digits10 -- numeric_limits::max_digits10 : コード修飾を追加</title>
      <link href="https://cpprefjp.github.io/reference/limits/numeric_limits/max_digits10.html"/>
      <id>338fed2b053632e6c7cf0cbdb7728c06f87f5244:reference/limits/numeric_limits/max_digits10.md</id>
      <updated>2020-10-21T09:25:17+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/limits/numeric_limits/max_digits10.md b/reference/limits/numeric_limits/max_digits10.md
index f9f003e21..1a2a47893 100644
--- a/reference/limits/numeric_limits/max_digits10.md
+++ b/reference/limits/numeric_limits/max_digits10.md
@@ -87,6 +87,7 @@ int main()
 * std::scientific[link /reference/ios/scientific.md]
 * s.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
 * std::nextafter[link /reference/cmath/nextafter.md]
+* std::uint32_t[link /reference/cstdint/uint32_t.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>max_digits10 -- numeric_limits::max_digits10 : 比較しやすいようビット列も出力</title>
      <link href="https://cpprefjp.github.io/reference/limits/numeric_limits/max_digits10.html"/>
      <id>0c86d176ed4c8ccc69fb9101f9f6e26c75f895cd:reference/limits/numeric_limits/max_digits10.md</id>
      <updated>2020-10-21T05:47:17+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/limits/numeric_limits/max_digits10.md b/reference/limits/numeric_limits/max_digits10.md
index a45560fae..f9f003e21 100644
--- a/reference/limits/numeric_limits/max_digits10.md
+++ b/reference/limits/numeric_limits/max_digits10.md
@@ -39,6 +39,7 @@ static constexpr int max_digits10;
 #include &amp;lt;limits&amp;gt;
 #include &amp;lt;cmath&amp;gt;
 #include &amp;lt;sstream&amp;gt;
+#include &amp;lt;bitset&amp;gt;
 
 std::string make_float_string(float f, int digits) {
   std::stringstream s;
@@ -47,6 +48,16 @@ std::string make_float_string(float f, int digits) {
   return s.str();
 }
 
+std::uint32_t float_to_uint(float f) {
+    std::uint32_t result = 0;
+    std::memcpy(&amp;amp;result, &amp;amp;f, sizeof(std::uint32_t));
+    return result;
+}
+
+std::string make_bit_string(float f) {
+    return std::bitset&amp;lt;32&amp;gt;(float_to_uint(f)).to_string();
+}
+
 int main()
 {
   using limits = std::numeric_limits&amp;lt;float&amp;gt;;
@@ -58,10 +69,15 @@ int main()
   // digits10とmax_digits10での、
   // 下位数ビットが異なる浮動小数点数の出力のされ方を比較
   for (int digits : {limits::digits10, limits::max_digits10}) {
-    std::cout &amp;lt;&amp;lt; &amp;#34;digits : &amp;#34; &amp;lt;&amp;lt; digits &amp;lt;&amp;lt; std::endl;
-    std::cout &amp;lt;&amp;lt; &amp;#34;  &amp;#34; &amp;lt;&amp;lt; make_float_string(3.145900f, digits) &amp;lt;&amp;lt; std::endl;
-    std::cout &amp;lt;&amp;lt; &amp;#34;  &amp;#34; &amp;lt;&amp;lt; make_float_string(std::nextafter(3.145900f, 1.0f), digits) &amp;lt;&amp;lt; std::endl;
+    std::cout &amp;lt;&amp;lt; &amp;#34;[digits : &amp;#34; &amp;lt;&amp;lt; digits &amp;lt;&amp;lt; &amp;#39;]&amp;#39; &amp;lt;&amp;lt; std::endl;
+    std::cout &amp;lt;&amp;lt; make_float_string(3.145900f, digits) &amp;lt;&amp;lt; std::endl;
+    std::cout &amp;lt;&amp;lt; make_float_string(std::nextafter(3.145900f, 1.0f), digits) &amp;lt;&amp;lt; std::endl;
   }
+
+  // それぞれの値のビット列を出力
+  std::cout &amp;lt;&amp;lt; &amp;#34;[bit string]&amp;#34; &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; make_bit_string(3.145900f) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; make_bit_string(std::nextafter(3.145900f, 1.0f)) &amp;lt;&amp;lt; std::endl;
 }
 ```
 * max_digits10[color ff0000]
@@ -77,12 +93,15 @@ int main()
 float digits10 : 6
 float max_digits10 : 9
 
-digits : 6
-  3.145900e+00
-  3.145900e+00
-digits : 9
-  3.145900011e+00
-  3.145899773e+00
+[digits : 6]
+3.145900e+00
+3.145900e+00
+[digits : 9]
+3.145900011e+00
+3.145899773e+00
+[bit string]
+01000000010010010101011001101101
+01000000010010010101011001101100
 ```
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>max_digits10 -- numeric_limits::max_digits10 : サンプルコードを効果がわかるものに修正</title>
      <link href="https://cpprefjp.github.io/reference/limits/numeric_limits/max_digits10.html"/>
      <id>18de127e4f7a73dba2b76921758abac618aa8a95:reference/limits/numeric_limits/max_digits10.md</id>
      <updated>2020-10-21T05:37:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/limits/numeric_limits/max_digits10.md b/reference/limits/numeric_limits/max_digits10.md
index 63ba40ce3..a45560fae 100644
--- a/reference/limits/numeric_limits/max_digits10.md
+++ b/reference/limits/numeric_limits/max_digits10.md
@@ -37,32 +37,52 @@ static constexpr int max_digits10;
 ```cpp example
 #include &amp;lt;iostream&amp;gt;
 #include &amp;lt;limits&amp;gt;
+#include &amp;lt;cmath&amp;gt;
 #include &amp;lt;sstream&amp;gt;
 
-int main()
-{
-  constexpr int d = std::numeric_limits&amp;lt;float&amp;gt;::max_digits10;
-  std::cout &amp;lt;&amp;lt; d &amp;lt;&amp;lt; std::endl;
-
-  float f = 3.145900F;
-
+std::string make_float_string(float f, int digits) {
   std::stringstream s;
-  s.precision(d);
+  s.precision(digits);
   s &amp;lt;&amp;lt; std::scientific &amp;lt;&amp;lt; f;
+  return s.str();
+}
 
-  std::cout &amp;lt;&amp;lt; s.str() &amp;lt;&amp;lt; std::endl;
+int main()
+{
+  using limits = std::numeric_limits&amp;lt;float&amp;gt;;
+
+  std::cout &amp;lt;&amp;lt; &amp;#34;float digits10 : &amp;#34; &amp;lt;&amp;lt; limits::digits10 &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; &amp;#34;float max_digits10 : &amp;#34; &amp;lt;&amp;lt; limits::max_digits10 &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::endl;
+
+  // digits10とmax_digits10での、
+  // 下位数ビットが異なる浮動小数点数の出力のされ方を比較
+  for (int digits : {limits::digits10, limits::max_digits10}) {
+    std::cout &amp;lt;&amp;lt; &amp;#34;digits : &amp;#34; &amp;lt;&amp;lt; digits &amp;lt;&amp;lt; std::endl;
+    std::cout &amp;lt;&amp;lt; &amp;#34;  &amp;#34; &amp;lt;&amp;lt; make_float_string(3.145900f, digits) &amp;lt;&amp;lt; std::endl;
+    std::cout &amp;lt;&amp;lt; &amp;#34;  &amp;#34; &amp;lt;&amp;lt; make_float_string(std::nextafter(3.145900f, 1.0f), digits) &amp;lt;&amp;lt; std::endl;
+  }
 }
 ```
 * max_digits10[color ff0000]
+* digits10[link digits10.md]
 * std::stringstring[link /reference/sstream/basic_stringstream.md.nolink]
 * precision[link /reference/ios/ios_base/precision.md]
 * std::scientific[link /reference/ios/scientific.md]
 * s.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::nextafter[link /reference/cmath/nextafter.md]
 
 ### 出力例
 ```
-9
-3.145900011e+000
+float digits10 : 6
+float max_digits10 : 9
+
+digits : 6
+  3.145900e+00
+  3.145900e+00
+digits : 9
+  3.145900011e+00
+  3.145899773e+00
 ```
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
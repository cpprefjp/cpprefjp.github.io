<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2021-02-24T14:46:23.596275</updated>
  <id>bbe0adad-e1db-4ff1-9d78-5b3271631b0a</id>

  
    <entry>
      <title>ends -- Merge pull request #849 from KodaiYM/correct-endl-to-ends</title>
      <link href="https://cpprefjp.github.io/reference/ostream/ends.html"/>
      <id>def90f353f7c88c4b8d0c9c48c86d15bfbfb3b4e:reference/ostream/ends.md</id>
      <updated>2021-02-22T15:24:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ostream/ends.md b/reference/ostream/ends.md
index 23d1cbda4..08f218790 100644
--- a/reference/ostream/ends.md
+++ b/reference/ostream/ends.md
@@ -26,7 +26,7 @@ namespace std {
 ```cpp
 namespace std {
   template&amp;lt;class CharT, class Traits&amp;gt;
-  basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; endl(basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; os) {
+  basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; ends(basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; os) {
     return os.put(CharT());
   }
 }
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ends -- std::ends の実装例の誤記 endl を ends に修正</title>
      <link href="https://cpprefjp.github.io/reference/ostream/ends.html"/>
      <id>5500d068a3c15c25e120eb954d43789dec0d8f4a:reference/ostream/ends.md</id>
      <updated>2021-02-21T21:07:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ostream/ends.md b/reference/ostream/ends.md
index 23d1cbda4..08f218790 100644
--- a/reference/ostream/ends.md
+++ b/reference/ostream/ends.md
@@ -26,7 +26,7 @@ namespace std {
 ```cpp
 namespace std {
   template&amp;lt;class CharT, class Traits&amp;gt;
-  basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; endl(basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; os) {
+  basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; ends(basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; os) {
     return os.put(CharT());
   }
 }
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>KodaiYM</name>
        <email>solceansky@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コルーチン -- cpp20/coroutines: await式の動作仕様説明誤りを修正</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/coroutines.html"/>
      <id>915231378b023040ca072b1eb2651da56e42e4b4:lang/cpp20/coroutines.md</id>
      <updated>2021-02-19T13:47:51+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/coroutines.md b/lang/cpp20/coroutines.md
index be87605f8..7146d8f5e 100644
--- a/lang/cpp20/coroutines.md
+++ b/lang/cpp20/coroutines.md
@@ -306,7 +306,7 @@ Await式の評価では、次のような補助的な型、式、オブジェク
 
 Await式は式 _await-resume_ と同じ型、同じ値カテゴリを持つ。
 
-Await式は式 _o_ と式 _await-resume_ を評価し、続いて：
+Await式は式 _o_ と式 _await-ready_ を評価し、続いて：
 
 - _await-ready_ の結果が`false`の場合、コルーチンは中断状態とみなされる。その後に：
     - _await-suspend_ の型が[`std::coroutine_handle&amp;lt;Z&amp;gt;`](/reference/coroutine/coroutine_handle.md)の場合、_await-suspend_[`.resume()`](/reference/coroutine/coroutine_handle/resume.md)が評価される。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コルーチン -- cpp20/coroutines: await式の出現可能箇所説明を改善</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/coroutines.html"/>
      <id>d595f3c8dce3a057452ebe389a9bd60e1ddaea2b:lang/cpp20/coroutines.md</id>
      <updated>2021-02-19T13:24:06+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/coroutines.md b/lang/cpp20/coroutines.md
index 5d0279af8..be87605f8 100644
--- a/lang/cpp20/coroutines.md
+++ b/lang/cpp20/coroutines.md
@@ -281,7 +281,7 @@ co_await cast-expression
 ```
 * cast-expression[italic]
 
-Await式は、コルーチン本体複合文の内側（かつハンドラの外側）の潜在的に評価される式(potentially-evaluated expression)でのみ、出現してよい。
+Await式は、コルーチン本体複合文の内側（かつ`try`～`catch`構文の`catch`節の外側）において潜在的に評価される式(potentially-evaluated expression)でのみ、出現してよい。
 宣言文やfor構文の宣言を伴う初期化部では、その初期化子の中でのみAwait式が出現してよい。
 デフォルト引数ではAwait式を用いることはできない。
 Await式は、静的記憶域もしくは[スレッドローカル](/lang/cpp11/thread_local_storage.md)なブロックスコープ変数の初期化に出現してはならない。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>stacktrace_entry -- stacktrace_entry : 関数名はやっぱりdescriptionに含まれる</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/stacktrace_entry.html"/>
      <id>054df68eb2c2f93385ebacdacac0aee158d1d7db:reference/stacktrace/stacktrace_entry.md</id>
      <updated>2021-02-17T17:09:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/stacktrace_entry.md b/reference/stacktrace/stacktrace_entry.md
index ea329c8d4..73e0ded6b 100644
--- a/reference/stacktrace/stacktrace_entry.md
+++ b/reference/stacktrace/stacktrace_entry.md
@@ -115,7 +115,7 @@ int main() {
 
 ### 出力例
 ```
-main.cpp:5
+g() at main.cpp:5
 main.cpp
 5
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
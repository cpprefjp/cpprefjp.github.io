<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2020-11-24T10:01:06.310153</updated>
  <id>dfd7b68d-e68c-47ad-8df2-2f876e0ab8bd</id>

  
    <entry>
      <title>コンストラクタ -- zoned_timeのコンストラクタ : TimeZonePtrだけを与えた場合にtime_pointをデフォルト構築する</title>
      <link href="https://cpprefjp.github.io/reference/chrono/zoned_time/op_constructor.html"/>
      <id>630bf8098503f77399ecae52fcbddf54c8a80e18:reference/chrono/zoned_time/op_constructor.md</id>
      <updated>2020-11-24T18:54:59+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/zoned_time/op_constructor.md b/reference/chrono/zoned_time/op_constructor.md
index 9e1c33afc..cd2cb0968 100644
--- a/reference/chrono/zoned_time/op_constructor.md
+++ b/reference/chrono/zoned_time/op_constructor.md
@@ -95,7 +95,7 @@ zoned_time(string_view name,
 ## 効果
 - (1) : [`traits::default_zone()`](/reference/chrono/zoned_traits/default_zone.md)によって得られたタイムゾーンオブジェクトへのポインタと、デフォルト構築した[`sys_time`](/reference/chrono/sys_time.md)`&amp;lt;Duration&amp;gt;`オブジェクトをメンバ変数として保持する
 - (3) : [`traits::default_zone()`](/reference/chrono/zoned_traits/default_zone.md)によって得られた[`time_zone`](/reference/chrono/time_zone.md)オブジェクトへのポインタと`st`を、メンバ変数として保持する
-- (4) : [`std::move`](/reference/utility/move.md)`(z)`をタイムゾーンオブジェクトへのポインタとして、メンバ変数に保持する
+- (4) : [`std::move`](/reference/utility/move.md)`(z)`をタイムゾーンオブジェクトへのポインタとしてメンバ変数に保持し、時間点をデフォルト構築する
 - (5) : [`traits::locate_zone`](/reference/chrono/zoned_traits/locate_zone.md)`(name)`と、デフォルト構築した[`sys_time`](/reference/chrono/sys_time.md)`&amp;lt;Duration&amp;gt;`オブジェクトをメンバ変数として保持する
 - (6) : `zt`がもつタイムゾーンオブジェクトへのポインタと時間点をメンバ変数として保持する
 - (7) : タイムゾーンオブジェクトへのポインタ[`std::move`](/reference/utility/move.md)`(z)`、および時間点`st`をメンバ変数に保持する
@@ -214,5 +214,6 @@ int main()
 
 
 ## 参照
+- [LWG Issue 3224. `zoned_time` constructor from `TimeZonePtr` does not specify initialization of `tp_`](https://wg21.cmeerw.net/lwg/issue3224)
 - [LWG Issue 3225. `zoned_time` converting constructor shall not be `noexcept`](https://wg21.cmeerw.net/lwg/issue3225)
 - [LWG Issue 3226. `zoned_time` constructor from `string_view` should accept `zoned_time&amp;lt;Duration2, TimeZonePtr2&amp;gt;`](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3226)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- zoned_timeのコンストラクタ : 変換コンストラクタからnoexceptを削除</title>
      <link href="https://cpprefjp.github.io/reference/chrono/zoned_time/op_constructor.html"/>
      <id>640838738c784b3fd27f7b07e04cab210b878983:reference/chrono/zoned_time/op_constructor.md</id>
      <updated>2020-11-24T18:50:52+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/zoned_time/op_constructor.md b/reference/chrono/zoned_time/op_constructor.md
index 163037664..9e1c33afc 100644
--- a/reference/chrono/zoned_time/op_constructor.md
+++ b/reference/chrono/zoned_time/op_constructor.md
@@ -15,7 +15,7 @@ explicit zoned_time(TimeZonePtr z);                                     // (4) C
 explicit zoned_time(string_view name);                                  // (5) C++20
 
 template &amp;lt;class Duration2&amp;gt;
-zoned_time(const zoned_time&amp;lt;Duration2, TimeZonePtr&amp;gt;&amp;amp; zt) noexcept;      // (6) C++20
+zoned_time(const zoned_time&amp;lt;Duration2, TimeZonePtr&amp;gt;&amp;amp; zt);               // (6) C++20
 
 zoned_time(TimeZonePtr z, const sys_time&amp;lt;Duration&amp;gt;&amp;amp; st);                // (7) C++20
 zoned_time(string_view name, const sys_time&amp;lt;Duration&amp;gt;&amp;amp; st);             // (8) C++20
@@ -214,4 +214,5 @@ int main()
 
 
 ## 参照
-- [P2117R0 C++ Standard Library Issues Resolved Directly In Prague](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html)
+- [LWG Issue 3225. `zoned_time` converting constructor shall not be `noexcept`](https://wg21.cmeerw.net/lwg/issue3225)
+- [LWG Issue 3226. `zoned_time` constructor from `string_view` should accept `zoned_time&amp;lt;Duration2, TimeZonePtr2&amp;gt;`](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3226)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>format -- chronoのformat : %yと%Yのロケール依存フォーマットに対応したissueを記載</title>
      <link href="https://cpprefjp.github.io/reference/chrono/format.html"/>
      <id>13bf6de1f8699f1e6865d22d7b0e94f2d5a1a87b:reference/chrono/format.md</id>
      <updated>2020-11-24T18:47:58+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/format.md b/reference/chrono/format.md
index 4b22dbff0..10c9f36a4 100644
--- a/reference/chrono/format.md
+++ b/reference/chrono/format.md
@@ -80,6 +80,7 @@ chronoライブラリではこれに加え、たとえばデフォルトでは
 
 ## 参照
 - [P1361R2 Integration of chrono with text formatting](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1361r2.pdf)
-- [P2117R0 C++ Standard Library Issues Resolved Directly In Prague](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html)
+- [LWG Issue 3262. Formatting of negative durations is not specified](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3262)
+- [LWG Issue 3230. Format specifier `%y`/`%Y` is missing locale alternative versions](https://wg21.cmeerw.net/lwg/issue3230)
 - [LWG Issue 3262. Formatting of negative durations is not specified](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3262)
 - [LWG Issue 3270. Parsing and formatting `%j` with `duration`s](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3270)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>day -- year_month_day_last : !ok()の場合のday()の戻り値が規定されていなかった問題に対応したissueを記載</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day_last/day.html"/>
      <id>7ae2265f2016ed5d7168107597ab506e614bca3b:reference/chrono/year_month_day_last/day.md</id>
      <updated>2020-11-24T18:43:33+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day_last/day.md b/reference/chrono/year_month_day_last/day.md
index 91590dffc..2bd81dcfd 100644
--- a/reference/chrono/year_month_day_last/day.md
+++ b/reference/chrono/year_month_day_last/day.md
@@ -55,3 +55,7 @@ int main()
 - [Clang](/implementation.md#clang): 8.0
 - [GCC](/implementation.md#gcc): 11.1
 - [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 参照
+- [LWG Issue 3231. `year_month_day_last::day` specification does not cover `!ok()` values](https://wg21.cmeerw.net/lwg/issue3231)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>推論補助 -- zoned_timeの推論ガイド : common_typeをとっていなかった問題に対応したissueを記載</title>
      <link href="https://cpprefjp.github.io/reference/chrono/zoned_time/op_deduction_guide.html"/>
      <id>495432852d8e1a66be0fd3546e7df70feb3bb096:reference/chrono/zoned_time/op_deduction_guide.md</id>
      <updated>2020-11-24T18:41:10+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/zoned_time/op_deduction_guide.md b/reference/chrono/zoned_time/op_deduction_guide.md
index 4ea873e1f..55473dcc9 100644
--- a/reference/chrono/zoned_time/op_deduction_guide.md
+++ b/reference/chrono/zoned_time/op_deduction_guide.md
@@ -149,4 +149,5 @@ int main()
 
 
 ## 参照
-- [P2051R0 C++ Standard Library Issues to be moved in Prague](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2051r0.html)
+- [LWG Issue 3232. Inconsistency in `zoned_time` deduction guides](https://wg21.cmeerw.net/lwg/issue3232)
+- [LWG Issue 3294. `zoned_time` deduction guides misinterprets `string`/`char*`](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2051r0.html#3294)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2022-03-18T10:35:39.649584</updated>
  <id>d742bdd3-f97e-4abd-ba7d-363508debac2</id>

  
    <entry>
      <title>istream -- {i,o}stream: マニュピュレータを分離</title>
      <link href="https://cpprefjp.github.io/reference/istream.html"/>
      <id>bb762853552c648fbbd694acbdf7ebd966a67ea2:reference/istream.md</id>
      <updated>2022-03-18T19:30:22+09:00</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;istream&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;istream&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;istream&amp;gt;&lt;/code&gt;ヘッダでは、入力・入出力処理に関するクラスやマニピュレータ（の実体である関数）などが定義されている。&lt;/p&gt;
&lt;h2&gt;型と関数（マニピュレータを除く）&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/istream/basic_istream.html&#34;&gt;basic_istream&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;入力ストリーム (class template)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/istream/basic_iostream.html&#34;&gt;basic_iostream&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;入出力ストリーム (class template)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;マニピュレータ&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/istream/ws.html&#34;&gt;ws&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;空白を読み飛ばす&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++98&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ostream -- {i,o}stream: マニュピュレータを分離</title>
      <link href="https://cpprefjp.github.io/reference/ostream.html"/>
      <id>bb762853552c648fbbd694acbdf7ebd966a67ea2:reference/ostream.md</id>
      <updated>2022-03-18T19:30:22+09:00</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;ostream&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;ostream&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;ostream&amp;gt;&lt;/code&gt;ヘッダでは、出力処理に関するクラスやマニピュレータ（の実体である関数）などが定義されている。&lt;/p&gt;
&lt;h2&gt;型と関数（マニピュレータを除く）&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ostream/basic_ostream.html&#34;&gt;basic_ostream&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;出力ストリーム (class template)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;マニピュレータ&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ostream/endl.html&#34;&gt;endl&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;改行を出力し、バッファを出力して空にする&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ostream/ends.html&#34;&gt;ends&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ヌル文字を出力する&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ostream/flush.html&#34;&gt;flush&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;バッファを出力して空にする&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ostream/flush_emit.html&#34;&gt;flush_emit&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/syncstream/basic_osyncstream.html&#34;&gt;std::basic_osyncstream&lt;/a&gt;&lt;/code&gt;をフラッシュし、保留中の出力を転送する&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ostream/emit_on_flush.html&#34;&gt;emit_on_flush&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/syncstream/basic_osyncstream.html&#34;&gt;std::basic_osyncstream&lt;/a&gt;&lt;/code&gt;の同期時排出ポリシーを&lt;code&gt;true&lt;/code&gt;にする&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ostream/noemit_on_flush.html&#34;&gt;noemit_on_flush&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/syncstream/basic_osyncstream.html&#34;&gt;std::basic_osyncstream&lt;/a&gt;&lt;/code&gt;の同期時排出ポリシーを&lt;code&gt;false&lt;/code&gt;にする&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++98&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ネストする集成体初期化における波カッコ省略を許可 -- Merge pull request #955 from s-hiiragi/patch-1</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/brace_elision_in_array_temporary_initialization.html"/>
      <id>21322578af4ece88a48d1bf4df2c3807bd61fe6b:lang/cpp14/brace_elision_in_array_temporary_initialization.md</id>
      <updated>2022-03-17T12:41:45+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/brace_elision_in_array_temporary_initialization.md b/lang/cpp14/brace_elision_in_array_temporary_initialization.md
index 1e6a21d39..9b42e3fa0 100644
--- a/lang/cpp14/brace_elision_in_array_temporary_initialization.md
+++ b/lang/cpp14/brace_elision_in_array_temporary_initialization.md
@@ -1,4 +1,4 @@
-# 宣言時のメンバ初期化を持つ型の集成体初期化を許可
+# ネストする集成体初期化における波カッコ省略を許可
 * cpp14[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>algorithm -- Merge pull request #956 from cpprefjp/rename_file</title>
      <link href="https://cpprefjp.github.io/reference/algorithm.html"/>
      <id>6a60d7e9c20307a9f04a207f5551332d0fbf6fe6:reference/algorithm.md</id>
      <updated>2022-03-17T02:37:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm.md b/reference/algorithm.md
index cd7232663..c8c52e457 100644
--- a/reference/algorithm.md
+++ b/reference/algorithm.md
@@ -145,7 +145,6 @@ ranges::sort(pv, {}, &amp;amp;Parson::name);
 | 名前 | 説明 | 対応バージョン |
 |-----------------------------------------------------|------------------------------------------|-------|
 | [`copy`](algorithm/copy.md)                       | 指定された範囲の要素をコピーする         | |
-| [`copy`](algorithm/copy.md)                       | 指定された範囲の要素をコピーする         | |
 | [`copy_n`](algorithm/copy_n.md)                   | 指定された数の要素をコピーする           | C++11 |
 | [`copy_if`](algorithm/copy_if.md)                 | 条件を満たす要素のみをコピーする         | C++11 |
 | [`copy_backward`](algorithm/copy_backward.md)     | 指定された範囲の要素を後ろからコピーする | |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>crend -- Merge pull request #956 from cpprefjp/rename_file</title>
      <link href="https://cpprefjp.github.io/reference/array/array/crend.html"/>
      <id>6a60d7e9c20307a9f04a207f5551332d0fbf6fe6:reference/array/array/crend.md</id>
      <updated>2022-03-17T02:37:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/array/array/crend.md b/reference/array/array/crend.md
index 1efac121b..c98811f79 100644
--- a/reference/array/array/crend.md
+++ b/reference/array/array/crend.md
@@ -14,7 +14,7 @@ constexpr const_reverse_iterator crend() const noexcept; // C++17
 
 先頭要素の前を指す読み取り専用逆イテレータを取得する。
 
-[`rend()`](rend.md)は非`const`な`array`オブジェクトに対して`reverse_iterator`を返し、`const`な`array`オブジェクトに対しては`const_reverse_iterator`を返すが、`cend()`は`const_reverse_iterator`を返すバージョンのみが提供されている。
+[`rend()`](rend.md)は非`const`な`array`オブジェクトに対して`reverse_iterator`を返し、`const`な`array`オブジェクトに対しては`const_reverse_iterator`を返すが、`crend()`は`const_reverse_iterator`を返すバージョンのみが提供されている。
 アルゴリズムにイテレータの組を渡す際、アルゴリズム内でデータの書き換えが起こらないというユーザーの意図を示す場合などに有用である。
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>forward_list -- Merge pull request #956 from cpprefjp/rename_file</title>
      <link href="https://cpprefjp.github.io/reference/forward_list/forward_list.html"/>
      <id>6a60d7e9c20307a9f04a207f5551332d0fbf6fe6:reference/forward_list/forward_list.md</id>
      <updated>2022-03-17T02:37:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/forward_list/forward_list.md b/reference/forward_list/forward_list.md
index c81522800..243e66af2 100644
--- a/reference/forward_list/forward_list.md
+++ b/reference/forward_list/forward_list.md
@@ -58,7 +58,7 @@ namespace std {
 | [`begin`](forward_list/begin.md) | 先頭要素を指すイテレータを取得する | C++11 |
 | [`end`](forward_list/end.md) | 末尾の次を指すイテレータを取得する | C++11 |
 | [`cbegin`](forward_list/cbegin.md) | 先頭要素を指す読み取り専用イテレータを取得する | C++11 |
-| [`cbefore_begin`](forward_list/before_cbegin.md) | 先頭要素の前を指す読み取り専用イテレータを取得する | C++11 |
+| [`cbefore_begin`](forward_list/cbefore_begin.md) | 先頭要素の前を指す読み取り専用イテレータを取得する | C++11 |
 | [`cend`](forward_list/cend.md) | 末尾の次を指す読み取り専用イテレータを取得する | C++11 |
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>cbefore_begin -- Merge pull request #956 from cpprefjp/rename_file</title>
      <link href="https://cpprefjp.github.io/reference/forward_list/forward_list/cbefore_begin.html"/>
      <id>6a60d7e9c20307a9f04a207f5551332d0fbf6fe6:reference/forward_list/forward_list/cbefore_begin.md</id>
      <updated>2022-03-17T02:37:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/forward_list/forward_list/cbefore_begin.md b/reference/forward_list/forward_list/cbefore_begin.md
new file mode 100644
index 000000000..33083f005
--- /dev/null
+++ b/reference/forward_list/forward_list/cbefore_begin.md
@@ -0,0 +1,78 @@
+# cbefore_begin
+* forward_list[meta header]
+* std[meta namespace]
+* forward_list[meta class]
+* function[meta id-type]
+* cpp11[meta cpp]
+
+```cpp
+const_iterator cbefore_begin() const noexcept;
+```
+
+## 概要
+先頭要素の前を指す読み取り専用イテレータを取得する。
+
+この関数は、[`insert_after()`](insert_after.md)メンバ関数で先頭に要素を挿入するために使用できる。
+
+
+## 戻り値
+先頭要素の前を指す読み取り専用イテレータを返す。
+
+
+## 例外
+投げない
+
+
+## 備考
+この関数によって返されるイテレータは、以下の特徴を持つ：
+
+- 間接参照できない
+- インクリメントすると[`cbegin()`](cbegin.md)と等値になる
+- [`cend()`](cend.md)と等値にはならない
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;forward_list&amp;gt;
+#include &amp;lt;algorithm&amp;gt;
+
+int main()
+{
+  std::forward_list&amp;lt;int&amp;gt; ls;
+
+  ls.push_front(3);
+  ls.insert_after(ls.cbefore_begin(), 1); // 先頭に挿入
+
+  std::for_each(ls.cbegin(), ls.cend(), [](int x) {
+    std::cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; std::endl;
+  });
+}
+```
+* cbefore_begin[color ff0000]
+* ls.push_front[link push_front.md]
+* ls.insert_after[link insert_after.md]
+* ls.cbegin()[link cbegin.md]
+* ls.cend()[link cend.md]
+
+
+### 出力
+```
+1
+3
+```
+
+## バージョン
+### 言語
+- C++11
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): 4.7.0
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): 2010, 2012, 2013, 2015, 2017
+
+
+## 参照
+
+
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>crend -- Merge pull request #956 from cpprefjp/rename_file</title>
      <link href="https://cpprefjp.github.io/reference/vector/vector/crend.html"/>
      <id>6a60d7e9c20307a9f04a207f5551332d0fbf6fe6:reference/vector/vector/crend.md</id>
      <updated>2022-03-17T02:37:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/vector/vector/crend.md b/reference/vector/vector/crend.md
index 387f9d58d..6c6d3f62d 100644
--- a/reference/vector/vector/crend.md
+++ b/reference/vector/vector/crend.md
@@ -12,7 +12,7 @@ const_reverse_iterator crend() const noexcept;
 ## 概要
 先頭要素の前を指す読み取り専用逆イテレータを取得する。
 
-[`rend`](rend.md)`()`は非`const`な`vector`オブジェクトに対して`reverse_iterator`を返し、`const`な`vector`オブジェクトに対しては`const_reverse_iterator`を返すが、`cend()`は`const_reverse_iterator`を返すバージョンのみが提供されている。
+[`rend`](rend.md)`()`は非`const`な`vector`オブジェクトに対して`reverse_iterator`を返し、`const`な`vector`オブジェクトに対しては`const_reverse_iterator`を返すが、`crend()`は`const_reverse_iterator`を返すバージョンのみが提供されている。
 
 アルゴリズムにイテレータの組を渡す際、アルゴリズム内でデータの書き換えが起こらないというユーザーの意図を示す場合などに有用である。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>algorithm -- rename before_cbegin.md to cbefore_begin.md.</title>
      <link href="https://cpprefjp.github.io/reference/algorithm.html"/>
      <id>a2f851790978bad125767f41bb03c8141558d989:reference/algorithm.md</id>
      <updated>2022-03-16T20:17:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm.md b/reference/algorithm.md
index cd7232663..c8c52e457 100644
--- a/reference/algorithm.md
+++ b/reference/algorithm.md
@@ -145,7 +145,6 @@ ranges::sort(pv, {}, &amp;amp;Parson::name);
 | 名前 | 説明 | 対応バージョン |
 |-----------------------------------------------------|------------------------------------------|-------|
 | [`copy`](algorithm/copy.md)                       | 指定された範囲の要素をコピーする         | |
-| [`copy`](algorithm/copy.md)                       | 指定された範囲の要素をコピーする         | |
 | [`copy_n`](algorithm/copy_n.md)                   | 指定された数の要素をコピーする           | C++11 |
 | [`copy_if`](algorithm/copy_if.md)                 | 条件を満たす要素のみをコピーする         | C++11 |
 | [`copy_backward`](algorithm/copy_backward.md)     | 指定された範囲の要素を後ろからコピーする | |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>crend -- rename before_cbegin.md to cbefore_begin.md.</title>
      <link href="https://cpprefjp.github.io/reference/array/array/crend.html"/>
      <id>a2f851790978bad125767f41bb03c8141558d989:reference/array/array/crend.md</id>
      <updated>2022-03-16T20:17:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/array/array/crend.md b/reference/array/array/crend.md
index 1efac121b..c98811f79 100644
--- a/reference/array/array/crend.md
+++ b/reference/array/array/crend.md
@@ -14,7 +14,7 @@ constexpr const_reverse_iterator crend() const noexcept; // C++17
 
 先頭要素の前を指す読み取り専用逆イテレータを取得する。
 
-[`rend()`](rend.md)は非`const`な`array`オブジェクトに対して`reverse_iterator`を返し、`const`な`array`オブジェクトに対しては`const_reverse_iterator`を返すが、`cend()`は`const_reverse_iterator`を返すバージョンのみが提供されている。
+[`rend()`](rend.md)は非`const`な`array`オブジェクトに対して`reverse_iterator`を返し、`const`な`array`オブジェクトに対しては`const_reverse_iterator`を返すが、`crend()`は`const_reverse_iterator`を返すバージョンのみが提供されている。
 アルゴリズムにイテレータの組を渡す際、アルゴリズム内でデータの書き換えが起こらないというユーザーの意図を示す場合などに有用である。
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>forward_list -- rename before_cbegin.md to cbefore_begin.md.</title>
      <link href="https://cpprefjp.github.io/reference/forward_list/forward_list.html"/>
      <id>a2f851790978bad125767f41bb03c8141558d989:reference/forward_list/forward_list.md</id>
      <updated>2022-03-16T20:17:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/forward_list/forward_list.md b/reference/forward_list/forward_list.md
index c81522800..243e66af2 100644
--- a/reference/forward_list/forward_list.md
+++ b/reference/forward_list/forward_list.md
@@ -58,7 +58,7 @@ namespace std {
 | [`begin`](forward_list/begin.md) | 先頭要素を指すイテレータを取得する | C++11 |
 | [`end`](forward_list/end.md) | 末尾の次を指すイテレータを取得する | C++11 |
 | [`cbegin`](forward_list/cbegin.md) | 先頭要素を指す読み取り専用イテレータを取得する | C++11 |
-| [`cbefore_begin`](forward_list/before_cbegin.md) | 先頭要素の前を指す読み取り専用イテレータを取得する | C++11 |
+| [`cbefore_begin`](forward_list/cbefore_begin.md) | 先頭要素の前を指す読み取り専用イテレータを取得する | C++11 |
 | [`cend`](forward_list/cend.md) | 末尾の次を指す読み取り専用イテレータを取得する | C++11 |
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>cbefore_begin -- rename before_cbegin.md to cbefore_begin.md.</title>
      <link href="https://cpprefjp.github.io/reference/forward_list/forward_list/cbefore_begin.html"/>
      <id>a2f851790978bad125767f41bb03c8141558d989:reference/forward_list/forward_list/cbefore_begin.md</id>
      <updated>2022-03-16T20:17:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/forward_list/forward_list/cbefore_begin.md b/reference/forward_list/forward_list/cbefore_begin.md
new file mode 100644
index 000000000..33083f005
--- /dev/null
+++ b/reference/forward_list/forward_list/cbefore_begin.md
@@ -0,0 +1,78 @@
+# cbefore_begin
+* forward_list[meta header]
+* std[meta namespace]
+* forward_list[meta class]
+* function[meta id-type]
+* cpp11[meta cpp]
+
+```cpp
+const_iterator cbefore_begin() const noexcept;
+```
+
+## 概要
+先頭要素の前を指す読み取り専用イテレータを取得する。
+
+この関数は、[`insert_after()`](insert_after.md)メンバ関数で先頭に要素を挿入するために使用できる。
+
+
+## 戻り値
+先頭要素の前を指す読み取り専用イテレータを返す。
+
+
+## 例外
+投げない
+
+
+## 備考
+この関数によって返されるイテレータは、以下の特徴を持つ：
+
+- 間接参照できない
+- インクリメントすると[`cbegin()`](cbegin.md)と等値になる
+- [`cend()`](cend.md)と等値にはならない
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;forward_list&amp;gt;
+#include &amp;lt;algorithm&amp;gt;
+
+int main()
+{
+  std::forward_list&amp;lt;int&amp;gt; ls;
+
+  ls.push_front(3);
+  ls.insert_after(ls.cbefore_begin(), 1); // 先頭に挿入
+
+  std::for_each(ls.cbegin(), ls.cend(), [](int x) {
+    std::cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; std::endl;
+  });
+}
+```
+* cbefore_begin[color ff0000]
+* ls.push_front[link push_front.md]
+* ls.insert_after[link insert_after.md]
+* ls.cbegin()[link cbegin.md]
+* ls.cend()[link cend.md]
+
+
+### 出力
+```
+1
+3
+```
+
+## バージョン
+### 言語
+- C++11
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): 4.7.0
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): 2010, 2012, 2013, 2015, 2017
+
+
+## 参照
+
+
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>crend -- rename before_cbegin.md to cbefore_begin.md.</title>
      <link href="https://cpprefjp.github.io/reference/vector/vector/crend.html"/>
      <id>a2f851790978bad125767f41bb03c8141558d989:reference/vector/vector/crend.md</id>
      <updated>2022-03-16T20:17:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/vector/vector/crend.md b/reference/vector/vector/crend.md
index 387f9d58d..6c6d3f62d 100644
--- a/reference/vector/vector/crend.md
+++ b/reference/vector/vector/crend.md
@@ -12,7 +12,7 @@ const_reverse_iterator crend() const noexcept;
 ## 概要
 先頭要素の前を指す読み取り専用逆イテレータを取得する。
 
-[`rend`](rend.md)`()`は非`const`な`vector`オブジェクトに対して`reverse_iterator`を返し、`const`な`vector`オブジェクトに対しては`const_reverse_iterator`を返すが、`cend()`は`const_reverse_iterator`を返すバージョンのみが提供されている。
+[`rend`](rend.md)`()`は非`const`な`vector`オブジェクトに対して`reverse_iterator`を返し、`const`な`vector`オブジェクトに対しては`const_reverse_iterator`を返すが、`crend()`は`const_reverse_iterator`を返すバージョンのみが提供されている。
 
 アルゴリズムにイテレータの組を渡す際、アルゴリズム内でデータの書き換えが起こらないというユーザーの意図を示す場合などに有用である。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ネストする集成体初期化における波カッコ省略を許可 -- ページのタイトルが誤っている</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/brace_elision_in_array_temporary_initialization.html"/>
      <id>5410b50ec886f88960eaf553a8ae146eab0a4411:lang/cpp14/brace_elision_in_array_temporary_initialization.md</id>
      <updated>2022-03-16T17:30:52+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/brace_elision_in_array_temporary_initialization.md b/lang/cpp14/brace_elision_in_array_temporary_initialization.md
index 1e6a21d39..9b42e3fa0 100644
--- a/lang/cpp14/brace_elision_in_array_temporary_initialization.md
+++ b/lang/cpp14/brace_elision_in_array_temporary_initialization.md
@@ -1,4 +1,4 @@
-# 宣言時のメンバ初期化を持つ型の集成体初期化を許可
+# ネストする集成体初期化における波カッコ省略を許可
 * cpp14[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>s_hiiragi</name>
        <email>hiiragi.lab@gmail.com</email>
      </author>
    </entry>
  
</feed>
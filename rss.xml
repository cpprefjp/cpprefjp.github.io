<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2024-04-28T03:35:09.940938</updated>
  <id>868c8525-6b4f-45ac-82d5-f85665c24993</id>

  
    <entry>
      <title>デストラクタ -- promiseデストラクタの効果に例外を格納する動作を追記 #1270</title>
      <link href="https://cpprefjp.github.io/reference/future/promise/op_destructor.html"/>
      <id>4796c01cbd893195591f4f637f2f966066f550bf:reference/future/promise/op_destructor.md</id>
      <updated>2024-04-28T12:31:10+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/future/promise/op_destructor.md b/reference/future/promise/op_destructor.md
index 98de6b511..0d07b50f5 100644
--- a/reference/future/promise/op_destructor.md
+++ b/reference/future/promise/op_destructor.md
@@ -14,8 +14,8 @@
 
 
 ## 効果
-共有状態を放棄する
-
+- 共有状態を持っていればそれを解放する。
+- ただし、持っている共有状態が準備完了状態([`future_status::ready`](../future_status.md))でなければ、error conditionとして[`broken_promise`](../future_errc.md)を持つ[`future_error`](../future_error.md)例外オブジェクトを格納して、準備完了状態にしたのち、それを解放する。
 
 ## 例
 ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>tshino</name>
        <email>tshino.ssr@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>async -- Merge pull request #1271 from cpprefjp/Nagarei/fix-async-exception</title>
      <link href="https://cpprefjp.github.io/reference/future/async.html"/>
      <id>970a04ceaf4913f40a3e6a0e91a40154af119bfc:reference/future/async.md</id>
      <updated>2024-04-27T20:01:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/future/async.md b/reference/future/async.md
index 50f3d223f..de63ef902 100644
--- a/reference/future/async.md
+++ b/reference/future/async.md
@@ -85,9 +85,9 @@ namespace std {
 非同期実行される関数オブジェクト`f`の結果値取得のための`future`オブジェクトを返す。
 
 ## 例外
-この関数は、以下のerror conditionを持つ[`future_error`](future_error.md)例外オブジェクトを送出する可能性がある：
+この関数は、以下のerror conditionを持つ[`system_error`](/reference/system_error/system_error.md)例外オブジェクトを送出する可能性がある：
 
-- [`resource_unavailable_try_again`](future_errc.md) ： [`launch::async`](launch.md)が指定され、新たなスレッドを起動しようとしたができなかった
+- [`resource_unavailable_try_again`](/reference/system_error/errc.md) ： [`launch::async`](launch.md)が指定され、新たなスレッドを起動しようとしたができなかった
 
 ## launch::asyncポリシーを指定した場合の注意点
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>async -- `std::async` throw `std::system_error`</title>
      <link href="https://cpprefjp.github.io/reference/future/async.html"/>
      <id>0a7bbedcfb3cbe0c6fc59102d25a3e71a2447461:reference/future/async.md</id>
      <updated>2024-04-27T16:04:39+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/future/async.md b/reference/future/async.md
index 50f3d223f..de63ef902 100644
--- a/reference/future/async.md
+++ b/reference/future/async.md
@@ -85,9 +85,9 @@ namespace std {
 非同期実行される関数オブジェクト`f`の結果値取得のための`future`オブジェクトを返す。
 
 ## 例外
-この関数は、以下のerror conditionを持つ[`future_error`](future_error.md)例外オブジェクトを送出する可能性がある：
+この関数は、以下のerror conditionを持つ[`system_error`](/reference/system_error/system_error.md)例外オブジェクトを送出する可能性がある：
 
-- [`resource_unavailable_try_again`](future_errc.md) ： [`launch::async`](launch.md)が指定され、新たなスレッドを起動しようとしたができなかった
+- [`resource_unavailable_try_again`](/reference/system_error/errc.md) ： [`launch::async`](launch.md)が指定され、新たなスレッドを起動しようとしたができなかった
 
 ## launch::asyncポリシーを指定した場合の注意点
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Nagarei</name>
        <email>Nagarei@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>リファレンス -- add reference of &lt;cctype&gt;</title>
      <link href="https://cpprefjp.github.io/reference.html"/>
      <id>eee789586e274dcb2402dfe3c0faea2845bbd843:reference.md</id>
      <updated>2024-04-20T16:37:57+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;リファレンス&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;h2&gt;目次&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference.html#language-support&#34;&gt;言語サポートライブラリ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference.html#concepts&#34;&gt;コンセプトライブラリ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference.html#diagnostics&#34;&gt;診断ライブラリ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference.html#general-utils&#34;&gt;汎用的なユーティリティライブラリ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference.html#strings&#34;&gt;文字列ライブラリ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference.html#localization&#34;&gt;ローカライズライブラリ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference.html#container&#34;&gt;コンテナライブラリ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference.html#iterator&#34;&gt;イテレータライブラリ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference.html#ranges&#34;&gt;レンジライブラリ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference.html#algorithm&#34;&gt;アルゴリズムライブラリ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference.html#numerics&#34;&gt;数値ライブラリ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference.html#debug&#34;&gt;デバッグライブラリ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference.html#io&#34;&gt;入出力ライブラリ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference.html#regular-expressions&#34;&gt;正規表現ライブラリ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference.html#atomic-operations&#34;&gt;アトミック操作ライブラリ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference.html#thread-support&#34;&gt;スレッドサポートライブラリ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference.html#clib-facilities&#34;&gt;C言語互換ライブラリ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference.html#exposition-only&#34;&gt;説明専用ライブラリ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference.html#language-support-library&#34; id=&#34;language-support&#34;&gt;言語サポートライブラリ&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ヘッダ&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/limits.html&#34;&gt;&amp;lt;limits&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;実装プロパティ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/version.html&#34;&gt;&amp;lt;version&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;実装依存のバージョン情報&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/stdfloat.html&#34;&gt;&amp;lt;stdfloat&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;拡張浮動小数点数型&lt;/td&gt;
&lt;td&gt;C++23&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/new.html&#34;&gt;&amp;lt;new&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;動的メモリ管理&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/typeinfo.html&#34;&gt;&amp;lt;typeinfo&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;型情報&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/source_location.html&#34;&gt;&amp;lt;source_location&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ソースコード上の位置&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exception.html&#34;&gt;&amp;lt;exception&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;例外ハンドリング&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/initializer_list.html&#34;&gt;&amp;lt;initializer_list&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;初期化子リスト&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/compare.html&#34;&gt;&amp;lt;compare&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;比較演算&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/coroutine.html&#34;&gt;&amp;lt;coroutine&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;コルーチン&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference.html#concepts&#34; id=&#34;concepts&#34;&gt;コンセプトライブラリ&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ヘッダ&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/concepts.html&#34;&gt;&amp;lt;concepts&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;言語関係のコンセプト&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference.html#diagnostics&#34; id=&#34;diagnostics&#34;&gt;診断ライブラリ&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ヘッダ&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/stdexcept.html&#34;&gt;&amp;lt;stdexcept&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;例外クラス&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/system_error.html&#34;&gt;&amp;lt;system_error&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;システムエラーサポート&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference.html#general-utils&#34; id=&#34;general-utils&#34;&gt;汎用的なユーティリティライブラリ&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ヘッダ&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/utility.html&#34;&gt;&amp;lt;utility&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ユーティリティコンポーネント&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/bitset.html&#34;&gt;&amp;lt;bitset&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビットの固定サイズシーケンス&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ratio.html&#34;&gt;&amp;lt;ratio&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;コンパイル時有理数&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/tuple.html&#34;&gt;&amp;lt;tuple&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タプル&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/optional.html&#34;&gt;&amp;lt;optional&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;任意で値を持たせられるオブジェクト&lt;/td&gt;
&lt;td&gt;C++17&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/variant.html&#34;&gt;&amp;lt;variant&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;候補の型を切り替えながら保持できる記憶域型&lt;/td&gt;
&lt;td&gt;C++17&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/any.html&#34;&gt;&amp;lt;any&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;あらゆる型の値を保持できる記憶域型&lt;/td&gt;
&lt;td&gt;C++17&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/expected.html&#34;&gt;&amp;lt;expected&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;正常値かエラー値のどちらかを持たせられるオブジェクト&lt;/td&gt;
&lt;td&gt;C++23&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/type_traits.html&#34;&gt;&amp;lt;type_traits&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;型特性&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/functional.html&#34;&gt;&amp;lt;functional&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;関数オブジェクト&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/memory.html&#34;&gt;&amp;lt;memory&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;メモリ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/scoped_allocator.html&#34;&gt;&amp;lt;scoped_allocator&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;スコープ付きアロケータ&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/memory_resource.html&#34;&gt;&amp;lt;memory_resource&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;多相アロケータ&lt;/td&gt;
&lt;td&gt;C++17&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono.html&#34;&gt;&amp;lt;chrono&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間ユーティリティ&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/typeindex.html&#34;&gt;&amp;lt;typeindex&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;型のインデックス&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/execution.html&#34;&gt;&amp;lt;execution&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;実行ポリシー&lt;/td&gt;
&lt;td&gt;C++17&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/charconv.html&#34;&gt;&amp;lt;charconv&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;高速な文字列 ⇔ 数値変換&lt;/td&gt;
&lt;td&gt;C++17&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format.html&#34;&gt;&amp;lt;format&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列フォーマット&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/stacktrace.html&#34;&gt;&amp;lt;stacktrace&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;スタックトレース&lt;/td&gt;
&lt;td&gt;C++23&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference.html#strings&#34; id=&#34;strings&#34;&gt;文字列ライブラリ&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ヘッダ&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/string.html&#34;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列クラスと、文字特性&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/string_view.html&#34;&gt;&amp;lt;string_view&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;所有権を持たず文字列を参照する文字列クラス&lt;/td&gt;
&lt;td&gt;C++17&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference.html#localization&#34; id=&#34;localization&#34;&gt;ローカライズライブラリ&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ヘッダ&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/locale.html&#34;&gt;&amp;lt;locale&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ロケール&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/text_encoding.md.nolink&#34;&gt;&amp;lt;text_encoding&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列エンコーディングの識別&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/codecvt.html&#34;&gt;&amp;lt;codecvt&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;コード変換ファセット&lt;/td&gt;
&lt;td&gt;C++11&lt;br /&gt; C++17から非推奨&lt;br /&gt; C++26で削除&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference.html#container&#34; id=&#34;container&#34;&gt;コンテナライブラリ&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ヘッダ&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/array.html&#34;&gt;&amp;lt;array&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;配列&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/deque.html&#34;&gt;&amp;lt;deque&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;両端キュー&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/forward_list.html&#34;&gt;&amp;lt;forward_list&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;単方向リスト&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/list.html&#34;&gt;&amp;lt;list&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;双方向リスト&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/queue.html&#34;&gt;&amp;lt;queue&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;FIFOキュー&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/stack.html&#34;&gt;&amp;lt;stack&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;LIFOスタック&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/vector.html&#34;&gt;&amp;lt;vector&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ベクタ配列&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/map.html&#34;&gt;&amp;lt;map&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;順序付き連想配列&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/set.html&#34;&gt;&amp;lt;set&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;順序付き集合&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/flat_map.html&#34;&gt;&amp;lt;flat_map&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ソート済みキーによる順序付き連想配列&lt;/td&gt;
&lt;td&gt;C++23&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/flat_set.md.nolink&#34;&gt;&amp;lt;flat_set&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ソート済みキーによる順序付き集合&lt;/td&gt;
&lt;td&gt;C++23&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/unordered_map.html&#34;&gt;&amp;lt;unordered_map&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;非順序連想配列&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/unordered_set.html&#34;&gt;&amp;lt;unordered_set&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;非順序集合&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/span.html&#34;&gt;&amp;lt;span&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;部分シーケンスの参照&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/mdspan.html&#34;&gt;&amp;lt;mdspan&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;多次元配列ビュー&lt;/td&gt;
&lt;td&gt;C++23&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference.html#iterator&#34; id=&#34;iterator&#34;&gt;イテレータライブラリ&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ヘッダ&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/iterator.html&#34;&gt;&amp;lt;iterator&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;イテレータの定義&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference.html#ranges&#34; id=&#34;ranges&#34;&gt;レンジライブラリ&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ヘッダ&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges.html&#34;&gt;&amp;lt;ranges&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;レンジアルゴリズム&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/generator.html&#34;&gt;&amp;lt;generator&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;コルーチンによるレンジ生成&lt;/td&gt;
&lt;td&gt;C++23&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference.html#algorithm&#34; id=&#34;algorithm&#34;&gt;アルゴリズムライブラリ&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ヘッダ&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/algorithm.html&#34;&gt;&amp;lt;algorithm&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;アルゴリズム&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference.html#numerics&#34; id=&#34;numerics&#34;&gt;数値ライブラリ&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ヘッダ&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/complex.html&#34;&gt;&amp;lt;complex&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/bit.html&#34;&gt;&amp;lt;bit&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビット操作&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/random.html&#34;&gt;&amp;lt;random&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;乱数生成&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/valarray.html&#34;&gt;&amp;lt;valarray&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;数値の配列&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/numeric.html&#34;&gt;&amp;lt;numeric&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;一般的な数値操作&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/numbers.html&#34;&gt;&amp;lt;numbers&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;数値&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/linalg.html&#34;&gt;&amp;lt;linalg&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;線形代数&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;https://cpprefjp.github.io/debug&#34; id=&#34;debug&#34;&gt;デバッグライブラリ&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ヘッダ&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/debugging.md.nolink&#34;&gt;&amp;lt;debugging&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;デバッグサポート&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference.html#io&#34; id=&#34;io&#34;&gt;入出力ライブラリ&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ヘッダ&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;iosfwd&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;先行宣言&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/iostream.html&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;標準&lt;code&gt;iostream&lt;/code&gt;オブジェクト&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ios.html&#34;&gt;&amp;lt;ios&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;iostream&lt;/code&gt;基底クラス&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/streambuf.html&#34;&gt;&amp;lt;streambuf&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ストリームバッファ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/istream.html&#34;&gt;&amp;lt;istream&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;入力ストリーム&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ostream.html&#34;&gt;&amp;lt;ostream&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;出力ストリーム&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/iomanip.html&#34;&gt;&amp;lt;iomanip&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;フォーマットとマニピュレータ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/sstream.html&#34;&gt;&amp;lt;sstream&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列ストリーム&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/fstream.html&#34;&gt;&amp;lt;fstream&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ファイルストリーム&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/filesystem.html&#34;&gt;&amp;lt;filesystem&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ファイルシステム&lt;/td&gt;
&lt;td&gt;C++17&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/syncstream.html&#34;&gt;&amp;lt;syncstream&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;同期化出力ストリームラッパー&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/spanstream.md.nolink&#34;&gt;&amp;lt;spanstream&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;メモリバッファの所有権をもたないストリーム&lt;/td&gt;
&lt;td&gt;C++23&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/print.html&#34;&gt;&amp;lt;print&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;書式指定による出力&lt;/td&gt;
&lt;td&gt;C++23&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference.html#regular-expressions&#34; id=&#34;regular-expressions&#34;&gt;正規表現ライブラリ&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ヘッダ&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/regex.html&#34;&gt;&amp;lt;regex&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;正規表現&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference.html#atomic-operations&#34; id=&#34;atomic-operations&#34;&gt;アトミック操作ライブラリ&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ヘッダ&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/atomic.html&#34;&gt;&amp;lt;atomic&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;アトミックアクセスのためのコンポーネント&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/stdatomic.h.html&#34;&gt;&amp;lt;stdatomic.h&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;アトミック操作のC互換ライブラリ&lt;/td&gt;
&lt;td&gt;C++23&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference.html#thread-support&#34; id=&#34;thread-support&#34;&gt;スレッドサポートライブラリ&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ヘッダ&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/stop_token.html&#34;&gt;&amp;lt;stop_token&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;停止状態&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/thread.html&#34;&gt;&amp;lt;thread&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;スレッド&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/mutex.html&#34;&gt;&amp;lt;mutex&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ミューテックス&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/shared_mutex.html&#34;&gt;&amp;lt;shared_mutex&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;共有ミューテックス&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/condition_variable.html&#34;&gt;&amp;lt;condition_variable&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;条件変数&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/semaphore.html&#34;&gt;&amp;lt;semaphore&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;セマフォ&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/latch.html&#34;&gt;&amp;lt;latch&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ラッチ同期&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/barrier.html&#34;&gt;&amp;lt;barrier&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;バリア同期&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/future.html&#34;&gt;&amp;lt;future&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Future&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/rcu.md.nolink&#34;&gt;&amp;lt;rcu&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;データの参照・更新&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/hazard_pointer.md.nolink&#34;&gt;&amp;lt;hazard_pointer&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ハザードポインタ&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference.html#clib-facilities&#34; id=&#34;clib-facilities&#34;&gt;C言語互換ライブラリ&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ヘッダ&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/cassert.html&#34;&gt;&amp;lt;cassert&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;アサート&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;ccomplex&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数&lt;/td&gt;
&lt;td&gt;C++11 (C99)&lt;br /&gt; C++17で非推奨&lt;br /&gt; C++20で削除&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/cctype.html&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字種別の判定と変換&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/cerrno.html&#34;&gt;&amp;lt;cerrno&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;エラー番号&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/cfenv.html&#34;&gt;&amp;lt;cfenv&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;浮動小数点環境へのアクセス&lt;/td&gt;
&lt;td&gt;C++11 (C99)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/cfloat.html&#34;&gt;&amp;lt;cfloat&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;浮動小数点数の定数&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;cinttypes&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;固定精度整数のための書式指定マクロ&lt;/td&gt;
&lt;td&gt;C++11 (C99)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;ciso646&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;に対する別名&lt;code&gt;and&lt;/code&gt;のような、各種演算子に対するマクロを定義する。&lt;br /&gt; ただしC++ではこれらの別名はキーワードとして定義されるため、このヘッダでは何も定義されない。&lt;/td&gt;
&lt;td&gt;C++20で削除&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/climits.html&#34;&gt;&amp;lt;climits&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;整数型の最小値、最大値を表すマクロ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;clocale&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ロケール&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/cmath.html&#34;&gt;&amp;lt;cmath&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;数学関数&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;csetjmp&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ジャンプ処理&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;csignal&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;シグナル&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;cstdalign&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;アライメント操作のマクロ&lt;/td&gt;
&lt;td&gt;C++17で非推奨&lt;br /&gt; C++20で削除&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;cstdarg&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;可変引数操作&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;cstdbool&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;真理値型の定義&lt;/td&gt;
&lt;td&gt;C++11 (C99)&lt;br /&gt; C++17で非推奨&lt;br /&gt; C++20で削除&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/cstddef.html&#34;&gt;&amp;lt;cstddef&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;基本的な型、値、マクロの定義&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/cstdint.html&#34;&gt;&amp;lt;cstdint&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;大きさが規定されている整数型&lt;/td&gt;
&lt;td&gt;C++11 (C99)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/cstdio.html&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;入出力&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/cstdlib.html&#34;&gt;&amp;lt;cstdlib&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ユーティリティ関数&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;cstring&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列操作&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;ctgmath&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ジェネリックな数学関数&lt;/td&gt;
&lt;td&gt;C++11 (C99)&lt;br /&gt; C++17で非推奨&lt;br /&gt; C++20で削除&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ctime.html&#34;&gt;&amp;lt;ctime&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日付・時間&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;cuchar&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ユニコード文字型&lt;/td&gt;
&lt;td&gt;C++11 (C11)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;cwchar&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ワイド文字型&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;cwctype&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ワイド文字の種別と判定&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference.html#exposition-only&#34; id=&#34;exposition-only&#34;&gt;説明専用ライブラリ&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ヘッダ&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/exposition-only.html&#34;&gt;exposition-only&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;説明のためのものを集めたページ (実際のライブラリではない)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;</content>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>cctype -- add reference of &lt;cctype&gt;</title>
      <link href="https://cpprefjp.github.io/reference/cctype.html"/>
      <id>eee789586e274dcb2402dfe3c0faea2845bbd843:reference/cctype.md</id>
      <updated>2024-04-20T16:37:57+09:00</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;cctype&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;cctype&amp;gt;&lt;/code&gt;ヘッダでは、文字の種別判定関数と変換関数を定義する。これは、C言語の標準ライブラリ&lt;code&gt;&amp;lt;ctype.h&amp;gt;&lt;/code&gt;と同じである。&lt;/p&gt;
&lt;p&gt;全ての関数で、文字は&lt;code&gt;int&lt;/code&gt;型で表される。
また、全ての関数はロケールの影響を受ける。&lt;/p&gt;
&lt;h2&gt;判定関数&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/cctype/isalnum.html&#34;&gt;isalnum&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字が英数字であるかを判定する&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/cctype/isalpha.html&#34;&gt;isalpha&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字が英文字であるかを判定する&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/cctype/isblank.html&#34;&gt;isblank&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字が空白文字であるかを判定する&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/cctype/iscntrl.html&#34;&gt;iscntrl&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字が制御文字であるかを判定する&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/cctype/isdigit.html&#34;&gt;isdigit&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字が数字であるかを判定する&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/cctype/isgraph.html&#34;&gt;isgraph&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字が図表文字であるかを判定する&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/cctype/islower.html&#34;&gt;islower&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字が小文字であるかを判定する&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/cctype/isprint.html&#34;&gt;isprint&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字が表示文字であるかを判定する&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/cctype/ispunct.html&#34;&gt;ispunct&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字が区切り文字であるかを判定する&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/cctype/isspace.html&#34;&gt;isspace&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字が空白文字であるかを判定する&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/cctype/isupper.html&#34;&gt;isupper&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字が大文字であるかを判定する&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/cctype/isxdigit.html&#34;&gt;isxdigit&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字が16進数字であるかを判定する&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;変換関数&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/cctype/tolower.html&#34;&gt;tolower&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字を小文字に変換する&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/cctype/toupper.html&#34;&gt;toupper&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字を大文字に変換する&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;</content>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>isalnum -- add reference of &lt;cctype&gt;</title>
      <link href="https://cpprefjp.github.io/reference/cctype/isalnum.html"/>
      <id>eee789586e274dcb2402dfe3c0faea2845bbd843:reference/cctype/isalnum.md</id>
      <updated>2024-04-20T16:37:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cctype/isalnum.md b/reference/cctype/isalnum.md
new file mode 100644
index 000000000..0528d51a4
--- /dev/null
+++ b/reference/cctype/isalnum.md
@@ -0,0 +1,52 @@
+# isalnum
+* cctype[meta header]
+* std[meta namespace]
+* function[meta id-type]
+
+```cpp
+namespace std {
+  int isalnum(int ch);
+}
+```
+
+
+## 概要
+`ch` が英数字かどうかを判定する（判定はロケールの影響を受ける）。
+
+
+## 戻り値
+`ch` が英数字と判定されれば非ゼロを、そうでなければゼロを返す。
+
+
+## 例
+```cpp example
+#include &amp;lt;cctype&amp;gt;
+#include &amp;lt;iostream&amp;gt;
+
+int main() {
+    std::cout &amp;lt;&amp;lt; &amp;#34;isalnum(&amp;#39;A&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isalnum(&amp;#39;A&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isalnum(&amp;#39;a&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isalnum(&amp;#39;a&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isalnum(&amp;#39;Z&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isalnum(&amp;#39;Z&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isalnum(&amp;#39;z&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isalnum(&amp;#39;z&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isalnum(&amp;#39;3&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isalnum(&amp;#39;3&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isalnum(&amp;#39;.&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isalnum(&amp;#39;.&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isalnum(&amp;#39; &amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isalnum(&amp;#39; &amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isalnum(&amp;#39;\\n&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isalnum(&amp;#39;\n&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isalnum(&amp;#39;0x0f&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isalnum(15) &amp;lt;&amp;lt; std::endl;
+}
+```
+* std::isalnum[color ff0000]
+
+
+## 出力例
+```
+isalnum(&amp;#39;A&amp;#39;) = 8
+isalnum(&amp;#39;a&amp;#39;) = 8
+isalnum(&amp;#39;Z&amp;#39;) = 8
+isalnum(&amp;#39;z&amp;#39;) = 8
+isalnum(&amp;#39;3&amp;#39;) = 8
+isalnum(&amp;#39;.&amp;#39;) = 0
+isalnum(&amp;#39; &amp;#39;) = 0
+isalnum(&amp;#39;\n&amp;#39;) = 0
+isalnum(&amp;#39;0x0f&amp;#39;) = 0
+```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>isalpha -- add reference of &lt;cctype&gt;</title>
      <link href="https://cpprefjp.github.io/reference/cctype/isalpha.html"/>
      <id>eee789586e274dcb2402dfe3c0faea2845bbd843:reference/cctype/isalpha.md</id>
      <updated>2024-04-20T16:37:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cctype/isalpha.md b/reference/cctype/isalpha.md
new file mode 100644
index 000000000..3fce38668
--- /dev/null
+++ b/reference/cctype/isalpha.md
@@ -0,0 +1,52 @@
+# isalpha
+* cctype[meta header]
+* std[meta namespace]
+* function[meta id-type]
+
+```cpp
+namespace std {
+  int isalpha(int ch);
+}
+```
+
+
+## 概要
+`ch` が英文字かどうかを判定する（判定はロケールの影響を受ける）。
+
+
+## 戻り値
+`ch` が英文字と判定されれば非ゼロを、そうでなければゼロを返す。
+
+
+## 例
+```cpp example
+#include &amp;lt;cctype&amp;gt;
+#include &amp;lt;iostream&amp;gt;
+
+int main() {
+    std::cout &amp;lt;&amp;lt; &amp;#34;isalpha(&amp;#39;A&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isalpha(&amp;#39;A&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isalpha(&amp;#39;a&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isalpha(&amp;#39;a&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isalpha(&amp;#39;Z&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isalpha(&amp;#39;Z&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isalpha(&amp;#39;z&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isalpha(&amp;#39;z&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isalpha(&amp;#39;3&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isalpha(&amp;#39;3&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isalpha(&amp;#39;.&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isalpha(&amp;#39;.&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isalpha(&amp;#39; &amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isalpha(&amp;#39; &amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isalpha(&amp;#39;\\n&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isalpha(&amp;#39;\n&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isalpha(&amp;#39;0x0f&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isalpha(15) &amp;lt;&amp;lt; std::endl;
+}
+```
+* std::isalpha[color ff0000]
+
+
+## 出力例
+```
+isalpha(&amp;#39;A&amp;#39;) = 1024
+isalpha(&amp;#39;a&amp;#39;) = 1024
+isalpha(&amp;#39;Z&amp;#39;) = 1024
+isalpha(&amp;#39;z&amp;#39;) = 1024
+isalpha(&amp;#39;3&amp;#39;) = 0
+isalpha(&amp;#39;.&amp;#39;) = 0
+isalpha(&amp;#39; &amp;#39;) = 0
+isalpha(&amp;#39;\n&amp;#39;) = 0
+isalpha(&amp;#39;0x0f&amp;#39;) = 0
+```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>isblank -- add reference of &lt;cctype&gt;</title>
      <link href="https://cpprefjp.github.io/reference/cctype/isblank.html"/>
      <id>eee789586e274dcb2402dfe3c0faea2845bbd843:reference/cctype/isblank.md</id>
      <updated>2024-04-20T16:37:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cctype/isblank.md b/reference/cctype/isblank.md
new file mode 100644
index 000000000..39871ad13
--- /dev/null
+++ b/reference/cctype/isblank.md
@@ -0,0 +1,53 @@
+# isblank
+* cctype[meta header]
+* std[meta namespace]
+* function[meta id-type]
+* cpp11[meta cpp]
+
+```cpp
+namespace std {
+  int isblank(int ch);
+}
+```
+
+
+## 概要
+`ch` が空白文字かどうかを判定する（判定はロケールの影響を受ける）。
+
+
+## 戻り値
+`ch` が空白文字と判定されれば非ゼロを、そうでなければゼロを返す。
+
+
+## 例
+```cpp example
+#include &amp;lt;cctype&amp;gt;
+#include &amp;lt;iostream&amp;gt;
+
+int main() {
+    std::cout &amp;lt;&amp;lt; &amp;#34;isblank(&amp;#39;A&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isblank(&amp;#39;A&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isblank(&amp;#39;a&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isblank(&amp;#39;a&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isblank(&amp;#39;Z&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isblank(&amp;#39;Z&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isblank(&amp;#39;z&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isblank(&amp;#39;z&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isblank(&amp;#39;3&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isblank(&amp;#39;3&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isblank(&amp;#39;.&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isblank(&amp;#39;.&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isblank(&amp;#39; &amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isblank(&amp;#39; &amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isblank(&amp;#39;\\n&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isblank(&amp;#39;\n&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isblank(&amp;#39;0x0f&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isblank(15) &amp;lt;&amp;lt; std::endl;
+}
+```
+* std::isblank[color ff0000]
+
+
+## 出力例
+```
+isblank(&amp;#39;A&amp;#39;) = 0
+isblank(&amp;#39;a&amp;#39;) = 0
+isblank(&amp;#39;Z&amp;#39;) = 0
+isblank(&amp;#39;z&amp;#39;) = 0
+isblank(&amp;#39;3&amp;#39;) = 0
+isblank(&amp;#39;.&amp;#39;) = 0
+isblank(&amp;#39; &amp;#39;) = 1
+isblank(&amp;#39;\n&amp;#39;) = 0
+isblank(&amp;#39;0x0f&amp;#39;) = 0
+```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>iscntrl -- add reference of &lt;cctype&gt;</title>
      <link href="https://cpprefjp.github.io/reference/cctype/iscntrl.html"/>
      <id>eee789586e274dcb2402dfe3c0faea2845bbd843:reference/cctype/iscntrl.md</id>
      <updated>2024-04-20T16:37:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cctype/iscntrl.md b/reference/cctype/iscntrl.md
new file mode 100644
index 000000000..cf1cd8939
--- /dev/null
+++ b/reference/cctype/iscntrl.md
@@ -0,0 +1,52 @@
+# iscntrl
+* cctype[meta header]
+* std[meta namespace]
+* function[meta id-type]
+
+```cpp
+namespace std {
+  int iscntrl(int ch);
+}
+```
+
+
+## 概要
+`ch` が制御文字かどうかを判定する（判定はロケールの影響を受ける）。
+
+
+## 戻り値
+`ch` が制御文字と判定されれば非ゼロを、そうでなければゼロを返す。
+
+
+## 例
+```cpp example
+#include &amp;lt;cctype&amp;gt;
+#include &amp;lt;iostream&amp;gt;
+
+int main() {
+    std::cout &amp;lt;&amp;lt; &amp;#34;iscntrl(&amp;#39;A&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::iscntrl(&amp;#39;A&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;iscntrl(&amp;#39;a&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::iscntrl(&amp;#39;a&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;iscntrl(&amp;#39;Z&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::iscntrl(&amp;#39;Z&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;iscntrl(&amp;#39;z&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::iscntrl(&amp;#39;z&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;iscntrl(&amp;#39;3&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::iscntrl(&amp;#39;3&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;iscntrl(&amp;#39;.&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::iscntrl(&amp;#39;.&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;iscntrl(&amp;#39; &amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::iscntrl(&amp;#39; &amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;iscntrl(&amp;#39;\\n&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::iscntrl(&amp;#39;\n&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;iscntrl(&amp;#39;0x0f&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::iscntrl(15) &amp;lt;&amp;lt; std::endl;
+}
+```
+* std::iscntrl[color ff0000]
+
+
+## 出力例
+```
+iscntrl(&amp;#39;A&amp;#39;) = 0
+iscntrl(&amp;#39;a&amp;#39;) = 0
+iscntrl(&amp;#39;Z&amp;#39;) = 0
+iscntrl(&amp;#39;z&amp;#39;) = 0
+iscntrl(&amp;#39;3&amp;#39;) = 0
+iscntrl(&amp;#39;.&amp;#39;) = 0
+iscntrl(&amp;#39; &amp;#39;) = 0
+iscntrl(&amp;#39;\n&amp;#39;) = 2
+iscntrl(&amp;#39;0x0f&amp;#39;) = 2
+```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>isdigit -- add reference of &lt;cctype&gt;</title>
      <link href="https://cpprefjp.github.io/reference/cctype/isdigit.html"/>
      <id>eee789586e274dcb2402dfe3c0faea2845bbd843:reference/cctype/isdigit.md</id>
      <updated>2024-04-20T16:37:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cctype/isdigit.md b/reference/cctype/isdigit.md
new file mode 100644
index 000000000..995c1724e
--- /dev/null
+++ b/reference/cctype/isdigit.md
@@ -0,0 +1,52 @@
+# isdigit
+* cctype[meta header]
+* std[meta namespace]
+* function[meta id-type]
+
+```cpp
+namespace std {
+  int isdigit(int ch);
+}
+```
+
+
+## 概要
+`ch` が数字かどうかを判定する（判定はロケールの影響を受ける）。
+
+
+## 戻り値
+`ch` が数字と判定されれば非ゼロを、そうでなければゼロを返す。
+
+
+## 例
+```cpp example
+#include &amp;lt;cctype&amp;gt;
+#include &amp;lt;iostream&amp;gt;
+
+int main() {
+    std::cout &amp;lt;&amp;lt; &amp;#34;isdigit(&amp;#39;A&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isdigit(&amp;#39;A&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isdigit(&amp;#39;a&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isdigit(&amp;#39;a&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isdigit(&amp;#39;Z&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isdigit(&amp;#39;Z&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isdigit(&amp;#39;z&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isdigit(&amp;#39;z&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isdigit(&amp;#39;3&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isdigit(&amp;#39;3&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isdigit(&amp;#39;.&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isdigit(&amp;#39;.&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isdigit(&amp;#39; &amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isdigit(&amp;#39; &amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isdigit(&amp;#39;\\n&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isdigit(&amp;#39;\n&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isdigit(&amp;#39;0x0f&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isdigit(15) &amp;lt;&amp;lt; std::endl;
+}
+```
+* std::isdigit[color ff0000]
+
+
+## 出力例
+```
+isdigit(&amp;#39;A&amp;#39;) = 0
+isdigit(&amp;#39;a&amp;#39;) = 0
+isdigit(&amp;#39;Z&amp;#39;) = 0
+isdigit(&amp;#39;z&amp;#39;) = 0
+isdigit(&amp;#39;3&amp;#39;) = 1
+isdigit(&amp;#39;.&amp;#39;) = 0
+isdigit(&amp;#39; &amp;#39;) = 0
+isdigit(&amp;#39;\n&amp;#39;) = 0
+isdigit(&amp;#39;0x0f&amp;#39;) = 0
+```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>isgraph -- add reference of &lt;cctype&gt;</title>
      <link href="https://cpprefjp.github.io/reference/cctype/isgraph.html"/>
      <id>eee789586e274dcb2402dfe3c0faea2845bbd843:reference/cctype/isgraph.md</id>
      <updated>2024-04-20T16:37:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cctype/isgraph.md b/reference/cctype/isgraph.md
new file mode 100644
index 000000000..a1176c7eb
--- /dev/null
+++ b/reference/cctype/isgraph.md
@@ -0,0 +1,52 @@
+# isgraph
+* cctype[meta header]
+* std[meta namespace]
+* function[meta id-type]
+
+```cpp
+namespace std {
+  int isgraph(int ch);
+}
+```
+
+
+## 概要
+`ch` が図表文字（空白を除く表示文字）かどうかを判定する（判定はロケールの影響を受ける）。
+
+
+## 戻り値
+`ch` が図表文字と判定されれば非ゼロを、そうでなければゼロを返す。
+
+
+## 例
+```cpp example
+#include &amp;lt;cctype&amp;gt;
+#include &amp;lt;iostream&amp;gt;
+
+int main() {
+    std::cout &amp;lt;&amp;lt; &amp;#34;isgraph(&amp;#39;A&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isgraph(&amp;#39;A&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isgraph(&amp;#39;a&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isgraph(&amp;#39;a&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isgraph(&amp;#39;Z&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isgraph(&amp;#39;Z&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isgraph(&amp;#39;z&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isgraph(&amp;#39;z&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isgraph(&amp;#39;3&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isgraph(&amp;#39;3&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isgraph(&amp;#39;.&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isgraph(&amp;#39;.&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isgraph(&amp;#39; &amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isgraph(&amp;#39; &amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isgraph(&amp;#39;\\n&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isgraph(&amp;#39;\n&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isgraph(&amp;#39;0x0f&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isgraph(15) &amp;lt;&amp;lt; std::endl;
+}
+```
+* std::isgraph[color ff0000]
+
+
+## 出力例
+```
+isgraph(&amp;#39;A&amp;#39;) = 32768
+isgraph(&amp;#39;a&amp;#39;) = 32768
+isgraph(&amp;#39;Z&amp;#39;) = 32768
+isgraph(&amp;#39;z&amp;#39;) = 32768
+isgraph(&amp;#39;3&amp;#39;) = 32768
+isgraph(&amp;#39;.&amp;#39;) = 32768
+isgraph(&amp;#39; &amp;#39;) = 0
+isgraph(&amp;#39;\n&amp;#39;) = 0
+isgraph(&amp;#39;0x0f&amp;#39;) = 0
+```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>islower -- add reference of &lt;cctype&gt;</title>
      <link href="https://cpprefjp.github.io/reference/cctype/islower.html"/>
      <id>eee789586e274dcb2402dfe3c0faea2845bbd843:reference/cctype/islower.md</id>
      <updated>2024-04-20T16:37:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cctype/islower.md b/reference/cctype/islower.md
new file mode 100644
index 000000000..5632c75d8
--- /dev/null
+++ b/reference/cctype/islower.md
@@ -0,0 +1,52 @@
+# islower
+* cctype[meta header]
+* std[meta namespace]
+* function[meta id-type]
+
+```cpp
+namespace std {
+  int islower(int ch);
+}
+```
+
+
+## 概要
+`ch` が小文字かどうかを判定する（判定はロケールの影響を受ける）。
+
+
+## 戻り値
+`ch` が小文字と判定されれば非ゼロを、そうでなければゼロを返す。
+
+
+## 例
+```cpp example
+#include &amp;lt;cctype&amp;gt;
+#include &amp;lt;iostream&amp;gt;
+
+int main() {
+    std::cout &amp;lt;&amp;lt; &amp;#34;islower(&amp;#39;A&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::islower(&amp;#39;A&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;islower(&amp;#39;a&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::islower(&amp;#39;a&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;islower(&amp;#39;Z&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::islower(&amp;#39;Z&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;islower(&amp;#39;z&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::islower(&amp;#39;z&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;islower(&amp;#39;3&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::islower(&amp;#39;3&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;islower(&amp;#39;.&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::islower(&amp;#39;.&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;islower(&amp;#39; &amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::islower(&amp;#39; &amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;islower(&amp;#39;\\n&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::islower(&amp;#39;\n&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;islower(&amp;#39;0x0f&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::islower(15) &amp;lt;&amp;lt; std::endl;
+}
+```
+* std::islower[color ff0000]
+
+
+## 出力例
+```
+islower(&amp;#39;A&amp;#39;) = 0
+islower(&amp;#39;a&amp;#39;) = 512
+islower(&amp;#39;Z&amp;#39;) = 0
+islower(&amp;#39;z&amp;#39;) = 512
+islower(&amp;#39;3&amp;#39;) = 0
+islower(&amp;#39;.&amp;#39;) = 0
+islower(&amp;#39; &amp;#39;) = 0
+islower(&amp;#39;\n&amp;#39;) = 0
+islower(&amp;#39;0x0f&amp;#39;) = 0
+```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>isprint -- add reference of &lt;cctype&gt;</title>
      <link href="https://cpprefjp.github.io/reference/cctype/isprint.html"/>
      <id>eee789586e274dcb2402dfe3c0faea2845bbd843:reference/cctype/isprint.md</id>
      <updated>2024-04-20T16:37:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cctype/isprint.md b/reference/cctype/isprint.md
new file mode 100644
index 000000000..321757b41
--- /dev/null
+++ b/reference/cctype/isprint.md
@@ -0,0 +1,52 @@
+# isprint
+* cctype[meta header]
+* std[meta namespace]
+* function[meta id-type]
+
+```cpp
+namespace std {
+  int isprint(int ch);
+}
+```
+
+
+## 概要
+`ch` が表示文字かどうかを判定する（判定はロケールの影響を受ける）。
+
+
+## 戻り値
+`ch` が表示文字と判定されれば非ゼロを、そうでなければゼロを返す。
+
+
+## 例
+```cpp example
+#include &amp;lt;cctype&amp;gt;
+#include &amp;lt;iostream&amp;gt;
+
+int main() {
+    std::cout &amp;lt;&amp;lt; &amp;#34;isprint(&amp;#39;A&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isprint(&amp;#39;A&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isprint(&amp;#39;a&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isprint(&amp;#39;a&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isprint(&amp;#39;Z&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isprint(&amp;#39;Z&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isprint(&amp;#39;z&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isprint(&amp;#39;z&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isprint(&amp;#39;3&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isprint(&amp;#39;3&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isprint(&amp;#39;.&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isprint(&amp;#39;.&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isprint(&amp;#39; &amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isprint(&amp;#39; &amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isprint(&amp;#39;\\n&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isprint(&amp;#39;\n&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isprint(&amp;#39;0x0f&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isprint(15) &amp;lt;&amp;lt; std::endl;
+}
+```
+* std::isprint[color ff0000]
+
+
+## 出力例
+```
+isprint(&amp;#39;A&amp;#39;) = 16384
+isprint(&amp;#39;a&amp;#39;) = 16384
+isprint(&amp;#39;Z&amp;#39;) = 16384
+isprint(&amp;#39;z&amp;#39;) = 16384
+isprint(&amp;#39;3&amp;#39;) = 16384
+isprint(&amp;#39;.&amp;#39;) = 16384
+isprint(&amp;#39; &amp;#39;) = 16384
+isprint(&amp;#39;\n&amp;#39;) = 0
+isprint(&amp;#39;0x0f&amp;#39;) = 0
+```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ispunct -- add reference of &lt;cctype&gt;</title>
      <link href="https://cpprefjp.github.io/reference/cctype/ispunct.html"/>
      <id>eee789586e274dcb2402dfe3c0faea2845bbd843:reference/cctype/ispunct.md</id>
      <updated>2024-04-20T16:37:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cctype/ispunct.md b/reference/cctype/ispunct.md
new file mode 100644
index 000000000..4c44ffc4c
--- /dev/null
+++ b/reference/cctype/ispunct.md
@@ -0,0 +1,52 @@
+# ispunct
+* cctype[meta header]
+* std[meta namespace]
+* function[meta id-type]
+
+```cpp
+namespace std {
+  int ispunct(int ch);
+}
+```
+
+
+## 概要
+`ch` が区切り文字かどうかを判定する（判定はロケールの影響を受ける）。
+
+
+## 戻り値
+`ch` が区切り文字と判定されれば非ゼロを、そうでなければゼロを返す。
+
+
+## 例
+```cpp example
+#include &amp;lt;cctype&amp;gt;
+#include &amp;lt;iostream&amp;gt;
+
+int main() {
+    std::cout &amp;lt;&amp;lt; &amp;#34;ispunct(&amp;#39;A&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::ispunct(&amp;#39;A&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;ispunct(&amp;#39;a&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::ispunct(&amp;#39;a&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;ispunct(&amp;#39;Z&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::ispunct(&amp;#39;Z&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;ispunct(&amp;#39;z&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::ispunct(&amp;#39;z&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;ispunct(&amp;#39;3&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::ispunct(&amp;#39;3&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;ispunct(&amp;#39;.&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::ispunct(&amp;#39;.&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;ispunct(&amp;#39; &amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::ispunct(&amp;#39; &amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;ispunct(&amp;#39;\\n&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::ispunct(&amp;#39;\n&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;ispunct(&amp;#39;0x0f&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::ispunct(15) &amp;lt;&amp;lt; std::endl;
+}
+```
+* std::ispunct[color ff0000]
+
+
+## 出力例
+```
+ispunct(&amp;#39;A&amp;#39;) = 0
+ispunct(&amp;#39;a&amp;#39;) = 0
+ispunct(&amp;#39;Z&amp;#39;) = 0
+ispunct(&amp;#39;z&amp;#39;) = 0
+ispunct(&amp;#39;3&amp;#39;) = 0
+ispunct(&amp;#39;.&amp;#39;) = 4
+ispunct(&amp;#39; &amp;#39;) = 0
+ispunct(&amp;#39;\n&amp;#39;) = 0
+ispunct(&amp;#39;0x0f&amp;#39;) = 0
+```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>isspace -- add reference of &lt;cctype&gt;</title>
      <link href="https://cpprefjp.github.io/reference/cctype/isspace.html"/>
      <id>eee789586e274dcb2402dfe3c0faea2845bbd843:reference/cctype/isspace.md</id>
      <updated>2024-04-20T16:37:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cctype/isspace.md b/reference/cctype/isspace.md
new file mode 100644
index 000000000..087dd8fc2
--- /dev/null
+++ b/reference/cctype/isspace.md
@@ -0,0 +1,52 @@
+# isspace
+* cctype[meta header]
+* std[meta namespace]
+* function[meta id-type]
+
+```cpp
+namespace std {
+  int isspace(int ch);
+}
+```
+
+
+## 概要
+`ch` が空白文字かどうかを判定する（判定はロケールの影響を受ける）。
+
+
+## 戻り値
+`ch` が空白文字と判定されれば非ゼロを、そうでなければゼロを返す。
+
+
+## 例
+```cpp example
+#include &amp;lt;cctype&amp;gt;
+#include &amp;lt;iostream&amp;gt;
+
+int main() {
+    std::cout &amp;lt;&amp;lt; &amp;#34;isspace(&amp;#39;A&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isspace(&amp;#39;A&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isspace(&amp;#39;a&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isspace(&amp;#39;a&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isspace(&amp;#39;Z&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isspace(&amp;#39;Z&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isspace(&amp;#39;z&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isspace(&amp;#39;z&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isspace(&amp;#39;3&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isspace(&amp;#39;3&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isspace(&amp;#39;.&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isspace(&amp;#39;.&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isspace(&amp;#39; &amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isspace(&amp;#39; &amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isspace(&amp;#39;\\n&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isspace(&amp;#39;\n&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isspace(&amp;#39;0x0f&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isspace(15) &amp;lt;&amp;lt; std::endl;
+}
+```
+* std::isspace[color ff0000]
+
+
+## 出力例
+```
+isspace(&amp;#39;A&amp;#39;) = 0
+isspace(&amp;#39;a&amp;#39;) = 0
+isspace(&amp;#39;Z&amp;#39;) = 0
+isspace(&amp;#39;z&amp;#39;) = 0
+isspace(&amp;#39;3&amp;#39;) = 0
+isspace(&amp;#39;.&amp;#39;) = 0
+isspace(&amp;#39; &amp;#39;) = 8192
+isspace(&amp;#39;\n&amp;#39;) = 8192
+isspace(&amp;#39;0x0f&amp;#39;) = 0
+```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>isupper -- add reference of &lt;cctype&gt;</title>
      <link href="https://cpprefjp.github.io/reference/cctype/isupper.html"/>
      <id>eee789586e274dcb2402dfe3c0faea2845bbd843:reference/cctype/isupper.md</id>
      <updated>2024-04-20T16:37:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cctype/isupper.md b/reference/cctype/isupper.md
new file mode 100644
index 000000000..26b29e1f7
--- /dev/null
+++ b/reference/cctype/isupper.md
@@ -0,0 +1,52 @@
+# isupper
+* cctype[meta header]
+* std[meta namespace]
+* function[meta id-type]
+
+```cpp
+namespace std {
+  int isupper(int ch);
+}
+```
+
+
+## 概要
+`ch` が大文字かどうかを判定する（判定はロケールの影響を受ける）。
+
+
+## 戻り値
+`ch` が大文字と判定されれば非ゼロを、そうでなければゼロを返す。
+
+
+## 例
+```cpp example
+#include &amp;lt;cctype&amp;gt;
+#include &amp;lt;iostream&amp;gt;
+
+int main() {
+    std::cout &amp;lt;&amp;lt; &amp;#34;isupper(&amp;#39;A&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isupper(&amp;#39;A&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isupper(&amp;#39;a&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isupper(&amp;#39;a&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isupper(&amp;#39;Z&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isupper(&amp;#39;Z&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isupper(&amp;#39;z&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isupper(&amp;#39;z&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isupper(&amp;#39;3&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isupper(&amp;#39;3&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isupper(&amp;#39;.&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isupper(&amp;#39;.&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isupper(&amp;#39; &amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isupper(&amp;#39; &amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isupper(&amp;#39;\\n&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isupper(&amp;#39;\n&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isupper(&amp;#39;0x0f&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isupper(15) &amp;lt;&amp;lt; std::endl;
+}
+```
+* std::isupper[color ff0000]
+
+
+## 出力例
+```
+isupper(&amp;#39;A&amp;#39;) = 256
+isupper(&amp;#39;a&amp;#39;) = 0
+isupper(&amp;#39;Z&amp;#39;) = 256
+isupper(&amp;#39;z&amp;#39;) = 0
+isupper(&amp;#39;3&amp;#39;) = 0
+isupper(&amp;#39;.&amp;#39;) = 0
+isupper(&amp;#39; &amp;#39;) = 0
+isupper(&amp;#39;\n&amp;#39;) = 0
+isupper(&amp;#39;0x0f&amp;#39;) = 0
+```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>isxdigit -- add reference of &lt;cctype&gt;</title>
      <link href="https://cpprefjp.github.io/reference/cctype/isxdigit.html"/>
      <id>eee789586e274dcb2402dfe3c0faea2845bbd843:reference/cctype/isxdigit.md</id>
      <updated>2024-04-20T16:37:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cctype/isxdigit.md b/reference/cctype/isxdigit.md
new file mode 100644
index 000000000..979820e37
--- /dev/null
+++ b/reference/cctype/isxdigit.md
@@ -0,0 +1,52 @@
+# isxdigit
+* cctype[meta header]
+* std[meta namespace]
+* function[meta id-type]
+
+```cpp
+namespace std {
+  int isxdigit(int ch);
+}
+```
+
+
+## 概要
+`ch` が16進数字かどうかを判定する（判定はロケールの影響を受ける）。
+
+
+## 戻り値
+`ch` が16進数字と判定されれば非ゼロを、そうでなければゼロを返す。
+
+
+## 例
+```cpp example
+#include &amp;lt;cctype&amp;gt;
+#include &amp;lt;iostream&amp;gt;
+
+int main() {
+    std::cout &amp;lt;&amp;lt; &amp;#34;isxdigit(&amp;#39;A&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isxdigit(&amp;#39;A&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isxdigit(&amp;#39;a&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isxdigit(&amp;#39;a&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isxdigit(&amp;#39;Z&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isxdigit(&amp;#39;Z&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isxdigit(&amp;#39;z&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isxdigit(&amp;#39;z&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isxdigit(&amp;#39;3&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isxdigit(&amp;#39;3&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isxdigit(&amp;#39;.&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isxdigit(&amp;#39;.&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isxdigit(&amp;#39; &amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isxdigit(&amp;#39; &amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isxdigit(&amp;#39;\\n&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isxdigit(&amp;#39;\n&amp;#39;) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;isxdigit(&amp;#39;0x0f&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; std::isxdigit(15) &amp;lt;&amp;lt; std::endl;
+}
+```
+* std::isxdigit[color ff0000]
+
+
+## 出力例
+```
+isxdigit(&amp;#39;A&amp;#39;) = 4096
+isxdigit(&amp;#39;a&amp;#39;) = 4096
+isxdigit(&amp;#39;Z&amp;#39;) = 0
+isxdigit(&amp;#39;z&amp;#39;) = 0
+isxdigit(&amp;#39;3&amp;#39;) = 4096
+isxdigit(&amp;#39;.&amp;#39;) = 0
+isxdigit(&amp;#39; &amp;#39;) = 0
+isxdigit(&amp;#39;\n&amp;#39;) = 0
+isxdigit(&amp;#39;0x0f&amp;#39;) = 0
+```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>tolower -- add reference of &lt;cctype&gt;</title>
      <link href="https://cpprefjp.github.io/reference/cctype/tolower.html"/>
      <id>eee789586e274dcb2402dfe3c0faea2845bbd843:reference/cctype/tolower.md</id>
      <updated>2024-04-20T16:37:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cctype/tolower.md b/reference/cctype/tolower.md
new file mode 100644
index 000000000..838d96ba0
--- /dev/null
+++ b/reference/cctype/tolower.md
@@ -0,0 +1,44 @@
+# tolower
+* cctype[meta header]
+* std[meta namespace]
+* function[meta id-type]
+
+```cpp
+namespace std {
+  int tolower(int ch);
+}
+```
+
+
+## 概要
+`ch` を小文字に変換する（変換はロケールの影響を受ける）。
+
+
+## 戻り値
+`ch` に小文字があれば、小文字化した `ch`。小文字がなければ `ch`。
+
+
+## 例
+```cpp example
+#include &amp;lt;cctype&amp;gt;
+#include &amp;lt;iostream&amp;gt;
+
+int main() {
+    std::cout &amp;lt;&amp;lt; &amp;#34;tolower(&amp;#39;A&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; static_cast&amp;lt;char&amp;gt;(std::tolower(&amp;#39;A&amp;#39;)) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;tolower(&amp;#39;a&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; static_cast&amp;lt;char&amp;gt;(std::tolower(&amp;#39;a&amp;#39;)) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;tolower(&amp;#39;1&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; static_cast&amp;lt;char&amp;gt;(std::tolower(&amp;#39;1&amp;#39;)) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;tolower(&amp;#39;.&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; static_cast&amp;lt;char&amp;gt;(std::tolower(&amp;#39;.&amp;#39;)) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;tolower(&amp;#39;$&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; static_cast&amp;lt;char&amp;gt;(std::tolower(&amp;#39;$&amp;#39;)) &amp;lt;&amp;lt; std::endl;
+}
+```
+* std::tolower[color ff0000]
+
+
+## 出力例
+```
+tolower(&amp;#39;A&amp;#39;) = a
+tolower(&amp;#39;a&amp;#39;) = a
+tolower(&amp;#39;1&amp;#39;) = 1
+tolower(&amp;#39;.&amp;#39;) = .
+tolower(&amp;#39;$&amp;#39;) = $
+```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>toupper -- add reference of &lt;cctype&gt;</title>
      <link href="https://cpprefjp.github.io/reference/cctype/toupper.html"/>
      <id>eee789586e274dcb2402dfe3c0faea2845bbd843:reference/cctype/toupper.md</id>
      <updated>2024-04-20T16:37:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cctype/toupper.md b/reference/cctype/toupper.md
new file mode 100644
index 000000000..b48446459
--- /dev/null
+++ b/reference/cctype/toupper.md
@@ -0,0 +1,44 @@
+# toupper
+* cctype[meta header]
+* std[meta namespace]
+* function[meta id-type]
+
+```cpp
+namespace std {
+  int toupper(int ch);
+}
+```
+
+
+## 概要
+`ch` を大文字に変換する（変換はロケールの影響を受ける）。
+
+
+## 戻り値
+`ch` に大文字があれば、大文字化した `ch`。大文字がなければ `ch`。
+
+
+## 例
+```cpp example
+#include &amp;lt;cctype&amp;gt;
+#include &amp;lt;iostream&amp;gt;
+
+int main() {
+    std::cout &amp;lt;&amp;lt; &amp;#34;toupper(&amp;#39;A&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; static_cast&amp;lt;char&amp;gt;(std::toupper(&amp;#39;A&amp;#39;)) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;toupper(&amp;#39;a&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; static_cast&amp;lt;char&amp;gt;(std::toupper(&amp;#39;a&amp;#39;)) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;toupper(&amp;#39;1&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; static_cast&amp;lt;char&amp;gt;(std::toupper(&amp;#39;1&amp;#39;)) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;toupper(&amp;#39;.&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; static_cast&amp;lt;char&amp;gt;(std::toupper(&amp;#39;.&amp;#39;)) &amp;lt;&amp;lt; std::endl
+              &amp;lt;&amp;lt; &amp;#34;toupper(&amp;#39;$&amp;#39;) = &amp;#34; &amp;lt;&amp;lt; static_cast&amp;lt;char&amp;gt;(std::toupper(&amp;#39;$&amp;#39;)) &amp;lt;&amp;lt; std::endl;
+}
+```
+* std::toupper[color ff0000]
+
+
+## 出力例
+```
+toupper(&amp;#39;A&amp;#39;) = A
+toupper(&amp;#39;a&amp;#39;) = A
+toupper(&amp;#39;1&amp;#39;) = 1
+toupper(&amp;#39;.&amp;#39;) = .
+toupper(&amp;#39;$&amp;#39;) = $
+```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator new -- Merge pull request #1269 from cpprefjp/Nagarei/fix-typo-at-op_new</title>
      <link href="https://cpprefjp.github.io/reference/new/op_new.html"/>
      <id>fbf0fce7252d9c4b4f5f50f5fafc7c7df74cbe08:reference/new/op_new.md</id>
      <updated>2024-04-19T16:46:10+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/new/op_new.md b/reference/new/op_new.md
index 89b286a5e..c098d8be1 100644
--- a/reference/new/op_new.md
+++ b/reference/new/op_new.md
@@ -136,7 +136,7 @@ int main()
     // (5) char 配列のスタック領域に、cl 型変数を動的に作成
     // 領域のアライメントに注意
     alignas(cl) char one_field[sizeof(cl)] = {};
-    int* p3 = new(one_field) cl();
+    cl* p3 = new(one_field) cl();
     p3-&amp;gt;~cl();  // delete は使えないため、デストラクタを直接呼び出す
   }
   catch (std::bad_alloc&amp;amp; e) {
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
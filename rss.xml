<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2025-05-29T08:43:15.319151</updated>
  <id>7afd5023-15f2-4fec-a954-4a571918a266</id>

  
    <entry>
      <title>end -- filter_view : バージョン指定ミスを修正 #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges/filter_view/end.html"/>
      <id>d3f5ac2de2123122828ef67e8ac0187ca6d87524:reference/ranges/filter_view/end.md</id>
      <updated>2025-05-29T17:39:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/filter_view/end.md b/reference/ranges/filter_view/end.md
index bbb68419e..5a9f716e1 100644
--- a/reference/ranges/filter_view/end.md
+++ b/reference/ranges/filter_view/end.md
@@ -3,7 +3,7 @@
 * std::ranges[meta namespace]
 * filter_view[meta class]
 * function[meta id-type]
-* cpp23[meta cpp]
+* cpp20[meta cpp]
 
 ```cpp
 constexpr auto end() {
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>iterator -- filter_view : バージョン指定ミスを修正 #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges/filter_view/iterator.html"/>
      <id>d3f5ac2de2123122828ef67e8ac0187ca6d87524:reference/ranges/filter_view/iterator.md</id>
      <updated>2025-05-29T17:39:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/filter_view/iterator.md b/reference/ranges/filter_view/iterator.md
index 46f7645b4..d991a8d4f 100644
--- a/reference/ranges/filter_view/iterator.md
+++ b/reference/ranges/filter_view/iterator.md
@@ -3,7 +3,7 @@
 * std::ranges[meta namespace]
 * filter_view[meta class]
 * class template[meta id-type]
-* cpp23[meta cpp]
+* cpp20[meta cpp]
 
 ```cpp
 namespace std::ranges {
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sentinel -- filter_view : バージョン指定ミスを修正 #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges/filter_view/sentinel.html"/>
      <id>d3f5ac2de2123122828ef67e8ac0187ca6d87524:reference/ranges/filter_view/sentinel.md</id>
      <updated>2025-05-29T17:39:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/filter_view/sentinel.md b/reference/ranges/filter_view/sentinel.md
index 6cbf94292..df9e737f1 100644
--- a/reference/ranges/filter_view/sentinel.md
+++ b/reference/ranges/filter_view/sentinel.md
@@ -3,7 +3,7 @@
 * std::ranges[meta namespace]
 * filter_view[meta class]
 * class template[meta id-type]
-* cpp23[meta cpp]
+* cpp20[meta cpp]
 
 ```cpp
 namespace std::ranges {
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>let_value -- execution: 微調整 (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/let_value.html"/>
      <id>82881a7387799eeb154f46dc7cf93f733f8fdea6:reference/execution/execution/let_value.md</id>
      <updated>2025-05-29T16:49:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/let_value.md b/reference/execution/execution/let_value.md
index 728a686fa..becaf6055 100644
--- a/reference/execution/execution/let_value.md
+++ b/reference/execution/execution/let_value.md
@@ -227,8 +227,8 @@ namespace ex = std::execution;
 int main()
 {
   { // 関数呼び出し
-    ex::sender snd0 = ex::just(21);
-    ex::sender snd1 = ex::let_value(
+    ex::sender auto snd0 = ex::just(21);
+    ex::sender auto snd1 = ex::let_value(
       snd0,
       [](int n) -&amp;gt; ex::sender auto {
         return ex::just(n * 2);
@@ -238,7 +238,7 @@ int main()
   }
 
   { // パイプライン記法
-    ex::sender sndr = ex::just(21)
+    ex::sender auto sndr = ex::just(21)
       | ex::let_value(
           [](int n) -&amp;gt; ex::sender auto {
             return ex::just(n * 2);
@@ -361,6 +361,7 @@ int main()
 * ex::set_value[link set_value.md]
 * ex::set_error_t[link set_error.md]
 * ex::set_error[link set_error.md]
+* ex::just[link just.md]
 * ex::just_stopped[link just_stopped.md]
 * ex::operation_state_t[link operation_state.md]
 * std::this_thread::sync_wait_with_variant[link ../this_thread/sync_wait_with_variant.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>read_env -- execution: 微調整 (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/read_env.html"/>
      <id>82881a7387799eeb154f46dc7cf93f733f8fdea6:reference/execution/execution/read_env.md</id>
      <updated>2025-05-29T16:49:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/read_env.md b/reference/execution/execution/read_env.md
index ca8e9dfbe..b679a92b3 100644
--- a/reference/execution/execution/read_env.md
+++ b/reference/execution/execution/read_env.md
@@ -57,7 +57,7 @@ int main()
   ex::sender auto sndr = ex::read_env(ex::get_scheduler)
     | ex::let_value([](auto sch) -&amp;gt; ex::sender auto {
         // sch := sync_wait内部のScheduler
-        return ex::starts_on(sch, std::just(42));
+        return ex::starts_on(sch, ex::just(42));
       });
   auto [val] = std::this_thread::sync_wait(sndr).value();
   std::println(&amp;#34;{}&amp;#34;, val);
@@ -66,7 +66,9 @@ int main()
 * ex::read_env[color ff0000]
 * ex::sender[link sender.md]
 * ex::get_scheduler[link get_scheduler.md]
+* ex::let_value[lin let_value.md]
 * ex::starts_on[link starts_on.md]
+* ex::just[lin just.md]
 * std::this_thread::sync_wait[link ../this_thread/sync_wait.md]
 * value()[link /reference/optional/optional/value.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>schedule -- execution: 微調整 (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/schedule.html"/>
      <id>82881a7387799eeb154f46dc7cf93f733f8fdea6:reference/execution/execution/schedule.md</id>
      <updated>2025-05-29T16:49:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/schedule.md b/reference/execution/execution/schedule.md
index 915d9e716..ed254fc64 100644
--- a/reference/execution/execution/schedule.md
+++ b/reference/execution/execution/schedule.md
@@ -73,6 +73,8 @@ int main()
 * finish()[link run_loop/finish.md]
 * std::move[link /reference/utility/move.md]
 * std::this_thread::get_id()[link /reference/thread/this_thread/get_id.md]
+* std::this_thread::sync_wait[link ../this_thread/sync_wait.md]
+* value()[link /reference/optional/optional/value.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>schedule_from -- execution: 微調整 (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/schedule_from.html"/>
      <id>82881a7387799eeb154f46dc7cf93f733f8fdea6:reference/execution/execution/schedule_from.md</id>
      <updated>2025-05-29T16:49:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/schedule_from.md b/reference/execution/execution/schedule_from.md
index b72a43225..6c3014d2c 100644
--- a/reference/execution/execution/schedule_from.md
+++ b/reference/execution/execution/schedule_from.md
@@ -52,7 +52,7 @@ namespace std::execution {
 * default-impls[link impls-for.md]
 * see below[italic]
 
-`impls-for&amp;lt;decayed-typeof&amp;lt;schedule_from_t&amp;gt;&amp;gt;::get-attrs`メンバは、下記ラムダ式と等価な関数呼び出し可能なオブジェクトで初期化される。
+`impls-for&amp;lt;schedule_from_t&amp;gt;::get-attrs`メンバは、下記ラムダ式と等価な関数呼び出し可能なオブジェクトで初期化される。
 
 ```cpp
 [](const auto&amp;amp; data, const auto&amp;amp; child) noexcept -&amp;gt; decltype(auto) {
@@ -64,7 +64,7 @@ namespace std::execution {
 * FWD-ENV[link ../forwarding_query.md]
 * get_env[link get_env.md]
 
-`impls-for&amp;lt;decayed-typeof&amp;lt;schedule_from_t&amp;gt;&amp;gt;::get-state`メンバは、下記ラムダ式と等価な関数呼び出し可能なオブジェクトで初期化される。
+`impls-for&amp;lt;schedule_from_t&amp;gt;::get-state`メンバは、下記ラムダ式と等価な関数呼び出し可能なオブジェクトで初期化される。
 
 ```cpp
 []&amp;lt;class Sndr, class Rcvr&amp;gt;(Sndr&amp;amp;&amp;amp; sndr, Rcvr&amp;amp; rcvr) noexcept(see below)
@@ -110,7 +110,7 @@ namespace std::execution {
 
 - `receiver_t`は説明専用クラス`receiver-type`のエイリアスとする。
 
-`impls-for&amp;lt;decayed-typeof&amp;lt;schedule_from_t&amp;gt;&amp;gt;::complete`メンバは、下記ラムダ式と等価な関数呼び出し可能なオブジェクトで初期化される。
+`impls-for&amp;lt;schedule_from_t&amp;gt;::complete`メンバは、下記ラムダ式と等価な関数呼び出し可能なオブジェクトで初期化される。
 
 ```cpp
 []&amp;lt;class Tag, class... Args&amp;gt;(auto, auto&amp;amp; state, auto&amp;amp; rcvr, Tag, Args&amp;amp;&amp;amp;... args) noexcept
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>starts_on -- execution: 微調整 (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/starts_on.html"/>
      <id>82881a7387799eeb154f46dc7cf93f733f8fdea6:reference/execution/execution/starts_on.md</id>
      <updated>2025-05-29T16:49:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/starts_on.md b/reference/execution/execution/starts_on.md
index 9b7603c13..4f23445fb 100644
--- a/reference/execution/execution/starts_on.md
+++ b/reference/execution/execution/starts_on.md
@@ -114,6 +114,7 @@ int main()
 * ex::run_loop[link run_loop.md]
 * ex::sender[link sender.md]
 * ex::scheduler[link scheduler.md]
+* ex::just[link just.md]
 * ex::then[link then.md]
 * get_scheduler()[link run_loop/get_scheduler.md]
 * run()[link run_loop/run.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>execution -- execution: just_error,just_stopped (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution.html"/>
      <id>d134ea8c1cc43660d7f61bf4844fae87085d1a5e:reference/execution/execution.md</id>
      <updated>2025-05-29T15:55:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution.md b/reference/execution/execution.md
index ef8fdbfc6..24fc001d0 100644
--- a/reference/execution/execution.md
+++ b/reference/execution/execution.md
@@ -100,8 +100,8 @@ namespace std::execution {
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
 | [`execution::just`](execution/just.md) | 値を送信するSender (customization point object) | C++26 |
-| [`execution::just_error`](execution/just_error.md.nolink) | エラーを送信するSender (customization point object) | C++26 |
-| [`execution::just_stopped`](execution/just_stopped.md.nolink) | 停止を送信するSender (customization point object) | C++26 |
+| [`execution::just_error`](execution/just_error.md) | エラーを送信するSender (customization point object) | C++26 |
+| [`execution::just_stopped`](execution/just_stopped.md) | 停止を送信するSender (customization point object) | C++26 |
 | [`execution::read_env`](execution/read_env.md) | Receiver環境からクエリオブジェクトで値を読み取るSender (customization point object) | C++26 |
 | [`execution::schedule`](execution/schedule.md) | Scheduler上で実行されるSender (customization point object) | C++26 |
 | [`execution::schedule_result_t`](execution/schedule_result_t.md) | [`schedule`](execution/schedule.md)結果型を取得 (alias template) | C++26 |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>error_types_of_t -- execution: just_error,just_stopped (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/error_types_of_t.html"/>
      <id>d134ea8c1cc43660d7f61bf4844fae87085d1a5e:reference/execution/execution/error_types_of_t.md</id>
      <updated>2025-05-29T15:55:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/error_types_of_t.md b/reference/execution/execution/error_types_of_t.md
index d3e6fe645..c6e5f147b 100644
--- a/reference/execution/execution/error_types_of_t.md
+++ b/reference/execution/execution/error_types_of_t.md
@@ -53,7 +53,7 @@ int main()
 * ex::error_types_of_t[color ff0000]
 * ex::sender[link sender.md]
 * ex::just[link just.md]
-* ex::just_error[link just_error.md.nolink]
+* ex::just_error[link just_error.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>just -- execution: just_error,just_stopped (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/just.html"/>
      <id>d134ea8c1cc43660d7f61bf4844fae87085d1a5e:reference/execution/execution/just.md</id>
      <updated>2025-05-29T15:55:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/just.md b/reference/execution/execution/just.md
index dedcc340c..f5a6c1861 100644
--- a/reference/execution/execution/just.md
+++ b/reference/execution/execution/just.md
@@ -17,8 +17,17 @@ namespace std::execution {
 
 
 ## 効果
-- 呼び出し式`just(ts...)`は、`(`[`movable-value`](../movable-value.md)`&amp;lt;Ts&amp;gt; &amp;amp;&amp;amp;...) == false`のとき不適格となる。
-- そうでなければ、式[`make-sender`](make-sender.md)`(just,` [`product-type`](product-type.md)`{ts...})`と等価。
+説明用のパック`ts`に対して、パック`Ts`を`decltype((ts))`とする。下記いずれかの条件をみたすとき、呼び出し式`just(ts...)`は不適格となる。
+
+- `(`[`movable-value`](../movable-value.md)`&amp;lt;Ts&amp;gt; &amp;amp;&amp;amp;...) == false`
+
+そうでなければ、呼び出し式`just(ts...)`は下記と等価。
+
+```cpp
+make-sender(just, product-type{ts...})
+```
+* make-sender[link make-sender.md]
+* product-type[link product-type.md]
 
 
 ### Senderアルゴリズムタグ `just`
@@ -43,22 +52,34 @@ namespace std::execution {
 * std::move[link /reference/utility/move.md]
 
 
+## カスタマイゼーションポイント
+[Receiver](receiver.md)との[接続(connect)](connect.md)時に、[関連付けられた実行ドメイン](get-domain-late.md)に対して[`execution::transform_sender`](transform_sender.md)経由でSender変換が行われる。
+[デフォルト実行ドメイン](default_domain.md)では無変換。
+
+
 ## 例
 ```cpp example
+#include &amp;lt;string&amp;gt;
 #include &amp;lt;print&amp;gt;
 #include &amp;lt;execution&amp;gt;
 namespace ex = std::execution;
+using namespace std::string_literals;
 
 int main()
 {
-  // 値(123,&amp;#39;X&amp;#39;)の送信結果は tuple&amp;lt;int,char&amp;gt; 型で受け取る
-  ex::sender auto snd1 = ex::just(123, &amp;#39;X&amp;#39;);
-  std::tuple&amp;lt;int, char&amp;gt; result1 = std::this_thread::sync_wait(snd1).value();
+  // 空の値を送信するSender
+  ex::sender auto snd0 = ex::just();
+  std::tuple&amp;lt;&amp;gt; result0 = std::this_thread::sync_wait(snd0).value();
+  std::println(&amp;#34;result0={}&amp;#34;, result0);
+
+  // 値&amp;#34;C++&amp;#34;を送信するSender
+  ex::sender auto snd1 = ex::just(&amp;#34;C++&amp;#34;s);
+  std::tuple&amp;lt;std::string&amp;gt; result1 = std::this_thread::sync_wait(snd1).value();
   std::println(&amp;#34;result1={}&amp;#34;, result1);
 
-  // 空値の送信結果は tuple&amp;lt;&amp;gt; 型で受け取る
-  ex::sender auto snd2 = ex::just();
-  std::tuple&amp;lt;&amp;gt; result2 = std::this_thread::sync_wait(snd2).value();
+  // 値(123,&amp;#39;X&amp;#39;)を送信するSender
+  ex::sender auto snd2 = ex::just(123, &amp;#39;X&amp;#39;);
+  std::tuple&amp;lt;int, char&amp;gt; result2 = std::this_thread::sync_wait(snd2).value();
   std::println(&amp;#34;result2={}&amp;#34;, result2);
 }
 ```
@@ -69,8 +90,9 @@ int main()
 
 ### 出力
 ```
-result1=(123, &amp;#39;X&amp;#39;)
-result2=()
+result0=()
+result1=(&amp;#34;C++&amp;#34;)
+result2=(123, &amp;#39;X&amp;#39;)
 ```
 
 
@@ -86,9 +108,10 @@ result2=()
 
 
 ## 関連項目
-- [`execution::just_error`](just_error.md.nolink)
-- [`execution::just_stopped`](just_stopped.md.nolink)
+- [`execution::just_error`](just_error.md)
+- [`execution::just_stopped`](just_stopped.md)
 
 
 ## 参照
+- [P2999R3 Sender Algorithm Customization](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p2999r3.html)
 - [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>just_error -- execution: just_error,just_stopped (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/just_error.html"/>
      <id>d134ea8c1cc43660d7f61bf4844fae87085d1a5e:reference/execution/execution/just_error.md</id>
      <updated>2025-05-29T15:55:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/just_error.md b/reference/execution/execution/just_error.md
new file mode 100644
index 000000000..840f2c3a9
--- /dev/null
+++ b/reference/execution/execution/just_error.md
@@ -0,0 +1,98 @@
+# just_error
+* execution[meta header]
+* cpo[meta id-type]
+* std::execution[meta namespace]
+* cpp26[meta cpp]
+
+```cpp
+namespace std::execution {
+  struct just_error_t { unspecified };
+  inline constexpr just_error_t just_error{};
+}
+```
+* unspecified[italic]
+
+## 概要
+`just_error`は、非同期操作の[開始(start)](start.md)で[エラー完了関数](set_error.md)を呼び出すSenderファクトリである。
+
+
+## 効果
+説明用のパック`ts`に対して、パック`Ts`を`decltype((ts))`とする。下記いずれかの条件をみたすとき、呼び出し式`just_error(ts...)`は不適格となる。
+
+- `(`[`movable-value`](../movable-value.md)`&amp;lt;Ts&amp;gt; &amp;amp;&amp;amp;...) == false`、もしくは
+- `sizeof...(ts) == 1`が`false`
+
+そうでなければ、呼び出し式`just_error(ts...)`は下記と等価。
+
+```cpp
+make-sender(just_error, product-type{ts...})
+```
+* make-sender[link make-sender.md]
+* product-type[link product-type.md]
+
+
+### Senderアルゴリズムタグ `just_error`
+Senderアルゴリズム動作説明用のクラステンプレート[`impls-for`](impls-for.md)に対して、下記の特殊化が定義される。
+
+```cpp
+namespace std::execution {
+  template&amp;lt;&amp;gt;
+  struct impls-for&amp;lt;decayed-typeof&amp;lt;just_error&amp;gt;&amp;gt; : default-impls {
+    static constexpr auto start =
+      [](auto&amp;amp; state, auto&amp;amp; rcvr) noexcept -&amp;gt; void {
+        auto&amp;amp; [...ts] = state;
+        set_error(std::move(rcvr), std::move(ts)...);
+      };
+  };
+}
+```
+* decayed-typeof[link decayed-typeof.md.nolink]
+* impls-for[link impls-for.md]
+* default-impls[link impls-for.md]
+* set_error[link set_error.md]
+* std::move[link /reference/utility/move.md]
+
+
+## カスタマイゼーションポイント
+[Receiver](receiver.md)との[接続(connect)](connect.md)時に、[関連付けられた実行ドメイン](get-domain-late.md)に対して[`execution::transform_sender`](transform_sender.md)経由でSender変換が行われる。
+[デフォルト実行ドメイン](default_domain.md)では無変換。
+
+
+## 例
+```cpp example
+#include &amp;lt;execution&amp;gt;
+namespace ex = std::execution;
+
+int main()
+{
+  // エラー(42)を送信するSender
+  ex::sender auto sndr = ex::just_error(42);
+}
+```
+* ex::just_error[color ff0000]
+* ex::sender[link sender.md]
+
+### 出力
+```
+```
+
+
+## バージョン
+### 言語
+- C++26
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
+
+
+## 関連項目
+- [`execution::just`](just.md)
+- [`execution::just_stopped`](just_stopped.md)
+
+
+## 参照
+- [P2999R3 Sender Algorithm Customization](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p2999r3.html)
+- [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>just_stopped -- execution: just_error,just_stopped (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/just_stopped.html"/>
      <id>d134ea8c1cc43660d7f61bf4844fae87085d1a5e:reference/execution/execution/just_stopped.md</id>
      <updated>2025-05-29T15:55:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/just_stopped.md b/reference/execution/execution/just_stopped.md
new file mode 100644
index 000000000..a48ed153f
--- /dev/null
+++ b/reference/execution/execution/just_stopped.md
@@ -0,0 +1,93 @@
+# just_stopped
+* execution[meta header]
+* cpo[meta id-type]
+* std::execution[meta namespace]
+* cpp26[meta cpp]
+
+```cpp
+namespace std::execution {
+  struct just_stopped_t { unspecified };
+  inline constexpr just_stopped_t just_stopped{};
+}
+```
+* unspecified[italic]
+
+## 概要
+`just_stopped`は、非同期操作の[開始(start)](start.md)で[停止完了関数](set_stopped.md)を呼び出すSenderファクトリである。
+
+
+## 効果
+呼び出し式`just_stopped()`は下記と等価。
+
+```cpp
+make-sender(just_stopped, product-type{})
+```
+* make-sender[link make-sender.md]
+* product-type[link product-type.md]
+
+
+### Senderアルゴリズムタグ `just_stopped`
+Senderアルゴリズム動作説明用のクラステンプレート[`impls-for`](impls-for.md)に対して、下記の特殊化が定義される。
+
+```cpp
+namespace std::execution {
+  template&amp;lt;&amp;gt;
+  struct impls-for&amp;lt;decayed-typeof&amp;lt;just_stopped&amp;gt;&amp;gt; : default-impls {
+    static constexpr auto start =
+      [](auto&amp;amp; state, auto&amp;amp; rcvr) noexcept -&amp;gt; void {
+        /*auto&amp;amp; [...ts] = state;*/
+        set_stopped(std::move(rcvr));
+      };
+  };
+}
+```
+* decayed-typeof[link decayed-typeof.md.nolink]
+* impls-for[link impls-for.md]
+* default-impls[link impls-for.md]
+* set_stopped[link set_stopped.md]
+* std::move[link /reference/utility/move.md]
+
+
+## カスタマイゼーションポイント
+[Receiver](receiver.md)との[接続(connect)](connect.md)時に、[関連付けられた実行ドメイン](get-domain-late.md)に対して[`execution::transform_sender`](transform_sender.md)経由でSender変換が行われる。
+[デフォルト実行ドメイン](default_domain.md)では無変換。
+
+
+## 例
+```cpp example
+#include &amp;lt;execution&amp;gt;
+namespace ex = std::execution;
+
+int main()
+{
+  // 停止を送信するSender
+  ex::sender auto sndr = ex::just_stopped();
+}
+```
+* ex::just_stopped[color ff0000]
+* ex::sender[link sender.md]
+
+### 出力
+```
+```
+
+
+## バージョン
+### 言語
+- C++26
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
+
+
+## 関連項目
+- [`execution::just`](just.md)
+- [`execution::just_error`](just_error.md)
+
+
+## 参照
+- [P2999R3 Sender Algorithm Customization](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p2999r3.html)
+- [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>let_value -- execution: just_error,just_stopped (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/let_value.html"/>
      <id>d134ea8c1cc43660d7f61bf4844fae87085d1a5e:reference/execution/execution/let_value.md</id>
      <updated>2025-05-29T15:55:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/let_value.md b/reference/execution/execution/let_value.md
index 5a216c85f..728a686fa 100644
--- a/reference/execution/execution/let_value.md
+++ b/reference/execution/execution/let_value.md
@@ -361,7 +361,7 @@ int main()
 * ex::set_value[link set_value.md]
 * ex::set_error_t[link set_error.md]
 * ex::set_error[link set_error.md]
-* ex::just_stopped[link just_stopped.md.nolink]
+* ex::just_stopped[link just_stopped.md]
 * ex::operation_state_t[link operation_state.md]
 * std::this_thread::sync_wait_with_variant[link ../this_thread/sync_wait_with_variant.md]
 * std::move[link /reference/utility/move.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sends_stopped -- execution: just_error,just_stopped (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/sends_stopped.html"/>
      <id>d134ea8c1cc43660d7f61bf4844fae87085d1a5e:reference/execution/execution/sends_stopped.md</id>
      <updated>2025-05-29T15:55:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/sends_stopped.md b/reference/execution/execution/sends_stopped.md
index d4cbda9e0..810f929f8 100644
--- a/reference/execution/execution/sends_stopped.md
+++ b/reference/execution/execution/sends_stopped.md
@@ -44,7 +44,7 @@ int main()
 * ex::sends_stopped[color ff0000]
 * ex::sender[link sender.md]
 * ex::just[link just.md]
-* ex::just_stopped[link just_stopped.md.nolink]
+* ex::just_stopped[link just_stopped.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>value_types_of_t -- execution: just_error,just_stopped (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/value_types_of_t.html"/>
      <id>d134ea8c1cc43660d7f61bf4844fae87085d1a5e:reference/execution/execution/value_types_of_t.md</id>
      <updated>2025-05-29T15:55:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/value_types_of_t.md b/reference/execution/execution/value_types_of_t.md
index d2f0ec8b4..4b082d771 100644
--- a/reference/execution/execution/value_types_of_t.md
+++ b/reference/execution/execution/value_types_of_t.md
@@ -55,7 +55,7 @@ int main()
 * ex::value_types_of_t[color ff0000]
 * ex::sender[link sender.md]
 * ex::just[link just.md]
-* ex::just_error[link just_error.md.nolink]
+* ex::just_error[link just_error.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>when_all_with_variant -- execution: just_error,just_stopped (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/when_all_with_variant.html"/>
      <id>d134ea8c1cc43660d7f61bf4844fae87085d1a5e:reference/execution/execution/when_all_with_variant.md</id>
      <updated>2025-05-29T15:55:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/when_all_with_variant.md b/reference/execution/execution/when_all_with_variant.md
index fb413fec8..1329f52b6 100644
--- a/reference/execution/execution/when_all_with_variant.md
+++ b/reference/execution/execution/when_all_with_variant.md
@@ -55,10 +55,10 @@ return when_all(into_variant(std::forward_like&amp;lt;decltype((sndr))&amp;gt;(child))...);
 
 
 ## カスタマイゼーションポイント
-Senderアルゴリズム構築時に、関連付けられた実行ドメインに対して[`execution::transform_sender`](transform_sender.md)経由でSender変換が行われる。
+Senderアルゴリズム構築時に、全入力Senderに関連付けられた共通の実行ドメイン`CD`に対して[`execution::transform_sender`](transform_sender.md)経由でSender変換が行われる。
 [デフォルト実行ドメイン](default_domain.md)では無変換。
 
-[Receiver](receiver.md)との[接続(connect)](connect.md)時に、関連付けられた実行ドメインに対して[`execution::transform_sender`](transform_sender.md)経由でSender変換が行われる。
+[Receiver](receiver.md)との[接続(connect)](connect.md)時に、[関連付けられた実行ドメイン](get-domain-late.md)に対して[`execution::transform_sender`](transform_sender.md)経由でSender変換が行われる。
 [デフォルト実行ドメイン](default_domain.md)では`when_all_with_variant.transform_sender(sndr, env)`が呼ばれ、前述仕様通りのSenderへと変換される。
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>filter_view -- filter_view : emptyは継承してた #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges/filter_view.html"/>
      <id>cb70d2cd764f019f5f31daf4e75225e55fac9801:reference/ranges/filter_view.md</id>
      <updated>2025-05-29T15:14:48+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/filter_view.md b/reference/ranges/filter_view.md
index 099745d59..31d7da22f 100644
--- a/reference/ranges/filter_view.md
+++ b/reference/ranges/filter_view.md
@@ -75,6 +75,7 @@ namespace std::ranges {
 | [`operator bool`](view_interface/op_bool.md) | Rangeが空でないかどうかを判定する | C++20          |
 | [`front`](view_interface/front.md)           | 先頭要素への参照を取得する        | C++20          |
 | [`back`](view_interface/back.md)             | 末尾要素への参照を取得する        | C++20          |
+| [`empty`](view_interface/empty.md)           | Rangeが空かどうかを判定する       | C++20          |
 | [`cbegin`](view_interface/cbegin.md)         | 定数イテレータを取得する          | C++23          |
 | [`cend`](view_interface/cend.md)             | 定数イテレータ（番兵）を取得する  | C++23          |
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
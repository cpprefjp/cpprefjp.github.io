<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2025-07-07T04:39:37.735097</updated>
  <id>72994e93-e971-413b-90cd-b373ff723e3d</id>

  
    <entry>
      <title>ファイルを読み込む#embed命令を追加 [P1967R14] -- cpp26/embed: remove redundant &#39;;&#39;</title>
      <link href="https://cpprefjp.github.io/lang/cpp26/embed.html"/>
      <id>293009535b8359be4d1a71250c41561a5b16008b:lang/cpp26/embed.md</id>
      <updated>2025-07-07T13:17:55+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp26/embed.md b/lang/cpp26/embed.md
index 7b2b64d8a..fa2b4860f 100644
--- a/lang/cpp26/embed.md
+++ b/lang/cpp26/embed.md
@@ -46,7 +46,7 @@ int main() {
 ```cpp example
 int main() {
   constexpr unsigned char limited_data[] = {
-    #embed &amp;#34;data.bin&amp;#34; limit(1024);
+    #embed &amp;#34;data.bin&amp;#34; limit(1024)
   };
   constexpr unsigned char prefixed_data[] = {
     #embed &amp;#34;data.bin&amp;#34; prefix(0x01, 0x02, 0x03)
@@ -79,4 +79,4 @@ int main() {
 
 
 ## 参照
-- [P1967R14 #embed - a scannable, tooling-friendly binary resource inclusion mechanism](https://open-std.org/jtc1/sc22/wg21/docs/papers/2025/p1967r14.html)
\ No newline at end of file
+- [P1967R14 #embed - a scannable, tooling-friendly binary resource inclusion mechanism](https://open-std.org/jtc1/sc22/wg21/docs/papers/2025/p1967r14.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>for_each_n -- added link for for_each_n.md</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/for_each_n.html"/>
      <id>3d4a2ef2be4363b9eeaf84defd850ce37ad723c3:reference/algorithm/for_each_n.md</id>
      <updated>2025-07-07T12:36:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/for_each_n.md b/reference/algorithm/for_each_n.md
index 452705bc0..20f2eee4a 100644
--- a/reference/algorithm/for_each_n.md
+++ b/reference/algorithm/for_each_n.md
@@ -79,6 +79,10 @@ int main()
 }
 ```
 * std::for_each_n[color ff0000]
+* std::vector[link /reference/vector/vector.md]
+* v.begin[link /reference/vector/vector/begin.md]
+* std::cout[link /reference/iostream/cout.md]
+* std::endl[link /reference/ostream/endl.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>rotarymars</name>
        <email>s.goto2050@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>find -- added link for find.md</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/find.html"/>
      <id>85f63fe01aab3114b1dc208a551f60ac80d59a95:reference/algorithm/find.md</id>
      <updated>2025-07-07T12:36:00+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/find.md b/reference/algorithm/find.md
index 2eb04c2dd..0c025c676 100644
--- a/reference/algorithm/find.md
+++ b/reference/algorithm/find.md
@@ -81,6 +81,11 @@ int main() {
 }
 ```
 * std::find[color ff0000]
+* std::vector[link /reference/vector/vector.md]
+* v.begin[link /reference/vector/vector/begin.md]
+* v.end[link /reference/vector/vector/end.md]
+* std::cout[link /reference/iostream/cout.md]
+* std::endl[link /reference/ostream/endl.md]
 
 #### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>rotarymars</name>
        <email>s.goto2050@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>find_if -- added link for find_if.md</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/find_if.html"/>
      <id>95f352f636a6a3ca4f058666f9ffba80f0fd37ff:reference/algorithm/find_if.md</id>
      <updated>2025-07-07T12:35:24+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/find_if.md b/reference/algorithm/find_if.md
index c3cb3a8ad..915d36bb9 100644
--- a/reference/algorithm/find_if.md
+++ b/reference/algorithm/find_if.md
@@ -53,6 +53,11 @@ int main() {
 }
 ```
 * std::find_if[color ff0000]
+* std::vector[link /reference/vector/vector.md]
+* v.begin[link /reference/vector/vector/begin.md]
+* v.end[link /reference/vector/vector/end.md]
+* std::cout[link /reference/iostream/cout.md]
+* std::endl[link /reference/ostream/endl.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>rotarymars</name>
        <email>s.goto2050@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>find_if_not -- added link for find_if_not.md</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/find_if_not.html"/>
      <id>405e787e5a8c0abc5a3e9b07a34c57de9c4739af:reference/algorithm/find_if_not.md</id>
      <updated>2025-07-07T12:34:39+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/find_if_not.md b/reference/algorithm/find_if_not.md
index 352e17c24..8c9242507 100644
--- a/reference/algorithm/find_if_not.md
+++ b/reference/algorithm/find_if_not.md
@@ -54,6 +54,11 @@ int main() {
 }
 ```
 * std::find_if_not[color ff0000]
+* std::vector[link /reference/vector/vector.md]
+* v.begin[link /reference/vector/vector/begin.md]
+* v.end[link /reference/vector/vector/end.md]
+* std::cout[link /reference/iostream/cout.md]
+* std::endl[link /reference/ostream/endl.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>rotarymars</name>
        <email>s.goto2050@gmail.com</email>
      </author>
    </entry>
  
</feed>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2025-02-13T07:27:24.150550</updated>
  <id>38c5fe7c-948e-44a9-9dc1-7bb167f8c136</id>

  
    <entry>
      <title>処理系 -- versionをVersionに変更</title>
      <link href="https://cpprefjp.github.io/implementation.html"/>
      <id>336d8aabbfb28ac189be48b3ae1fb85469d59b97:implementation.md</id>
      <updated>2025-02-13T16:09:29+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;処理系&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#clang&#34;&gt;Clang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#gcc&#34;&gt;GNU Compiler Collection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#icc&#34;&gt;Intel C++ Compiler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#visual_cpp&#34;&gt;Microsoft Visual C++&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;本サイトにおける処理系バージョンに記載&lt;/h2&gt;
&lt;p&gt;本サイトのリファレンスページでは、「処理系」の項目にバージョン番号を記載している。これは、処理系がその機能をサポート開始した厳密なバージョンではなく、リファレンス執筆者が動作確認できたバージョンである。&lt;/p&gt;
&lt;p&gt;古くからサポートされている機能だが、古い処理系を入手することが難しい場合などがあるため、本サイトではこのようなルールになっている。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;#clang&#34; id=&#34;clang&#34;&gt;Clang&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;このサイトでは Clang と呼ぶ。「クラン(グ)」と読む。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://clang.llvm.org/&#34; target=&#34;_blank&#34;&gt;&#34;clang&#34; C Language Family Frontend for LLVM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;別名&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;clang&lt;/li&gt;
&lt;li&gt;clang++&lt;/li&gt;
&lt;li&gt;Apple LLVMコンパイラ&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;C++11の機能を有効にする&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-std=c++11&lt;/code&gt;オプションを使用する。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;C++14の機能を有効にする&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Clang 3.2から3.4までは、&lt;code&gt;-std=c++1y&lt;/code&gt;オプションを使用する。&lt;ul&gt;
&lt;li&gt;GNU拡張を有効にする&lt;code&gt;-std=gnu++1y&lt;/code&gt;オプションもある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Clang 3.5以降は、&lt;code&gt;-std=c++14&lt;/code&gt;オプションを使用する(以前までのオプションも使用できる)。&lt;ul&gt;
&lt;li&gt;GNU拡張を有効にする&lt;code&gt;-std=gnu++14&lt;/code&gt;オプションもある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Clang 6.0以降は、C++14がデフォルトとなる。デフォルトバージョンのコンパイルオプションは&lt;code&gt;-std=gnu++14&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;C++17の機能を有効にする&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Clang 3.5から4.0までは、&lt;code&gt;-std=c++1z&lt;/code&gt;オプションを使用する。&lt;ul&gt;
&lt;li&gt;GNU拡張を有効にする&lt;code&gt;-std=gnu++1z&lt;/code&gt;オプションもある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Clang 5.0以降は、&lt;code&gt;-std=c++17&lt;/code&gt;オプションを使用する(以前までのオプションも使用できる)。&lt;ul&gt;
&lt;li&gt;GNU拡張を有効にする&lt;code&gt;-std=gnu++17&lt;/code&gt;オプションもある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Clang 16.0以降はC++17がデフォルトとなる。デフォルトバージョンのコンパイルオプションは&lt;code&gt;-std=gnu++17&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;C++20の機能を有効にする&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Clang 6.0以降は、&lt;code&gt;-std=c++2a&lt;/code&gt;オプションを使用する。&lt;ul&gt;
&lt;li&gt;GNU拡張を有効にする&lt;code&gt;-std=gnu++2a&lt;/code&gt;オプションもある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Clang 11.0以降は、&lt;code&gt;-std=c++20&lt;/code&gt;オプションを使用する(以前までのオプションも使用できる)。&lt;ul&gt;
&lt;li&gt;GNU拡張を有効にする&lt;code&gt;-std=gnu++20&lt;/code&gt;オプションもある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;C++23の機能を有効にする&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Clang 12.0以降は、&lt;code&gt;-std=c++2b&lt;/code&gt;オプションを使用する。&lt;ul&gt;
&lt;li&gt;GNU拡張を有効にする&lt;code&gt;-std=gnu++2b&lt;/code&gt;オプションもある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Clang 17.0以降は、&lt;code&gt;-std=c++23&lt;/code&gt;オプションを使用する(以前までのオプションも使用できる)。&lt;ul&gt;
&lt;li&gt;GNU拡張を有効にする&lt;code&gt;-std=gnu++23&lt;/code&gt;オプションもある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;C++26の機能を有効にする&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Clang 17.0以降は、&lt;code&gt;-std=c++2c&lt;/code&gt;オプションを使用する。&lt;ul&gt;
&lt;li&gt;GNU拡張を有効にする&lt;code&gt;-std=gnu++2c&lt;/code&gt;オプションもある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#gcc&#34; id=&#34;gcc&#34;&gt;GNU Compiler Collection&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;このサイトでは GCC と呼ぶ&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gcc.gnu.org/&#34; target=&#34;_blank&#34;&gt;GCC, the GNU Compiler Collection - GNU Project - Free Software Foundation (FSF)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://mingw-w64.org/&#34; target=&#34;_blank&#34;&gt;Mingw-w64 - GCC for Windows 64 &amp;amp; 32 bits [mingw-w64]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.equation.com/servlet/equation.cmd?fa=fortran&#34; target=&#34;_blank&#34;&gt;Fortran, C, C++ for Windows&lt;/a&gt; (MinGW バイナリ)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;別名&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;gcc&lt;/li&gt;
&lt;li&gt;g++&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;C++11の機能を有効にする&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;GCC 4.3から4.6までは、&lt;code&gt;-std=c++0x&lt;/code&gt;オプションを使用する。&lt;ul&gt;
&lt;li&gt;GNU拡張を有効にする&lt;code&gt;-std=gnu++0x&lt;/code&gt;オプションもある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;GCC 4.7以降は、&lt;code&gt;-std=c++11&lt;/code&gt;オプションを使用する (旧オプションは非推奨)。&lt;ul&gt;
&lt;li&gt;GNU拡張を有効にする&lt;code&gt;-std=gnu++11&lt;/code&gt;オプションもある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;C++14の機能を有効にする&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;GCC 4.8から4.9までは、&lt;code&gt;-std=c++1y&lt;/code&gt;オプションを使用する。&lt;ul&gt;
&lt;li&gt;GNU拡張を有効にする&lt;code&gt;-std=gnu++1y&lt;/code&gt;オプションもある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;GCC 5.1以降は、&lt;code&gt;-std=c++14&lt;/code&gt;オプションを使用する (旧オプションは非推奨)。&lt;ul&gt;
&lt;li&gt;GNU拡張を有効にする&lt;code&gt;-std=gnu++14&lt;/code&gt;オプションもある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;GCC 6.1以降は、C++14がデフォルトとなる。デフォルトバージョンのコンパイルオプションは&lt;code&gt;-std=gnu++14&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;C++17の機能を有効にする&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;GCC 6.1以降は、&lt;code&gt;-std=c++1z&lt;/code&gt;オプションを使用する。&lt;ul&gt;
&lt;li&gt;GNU拡張を有効にする&lt;code&gt;-std=gnu++1z&lt;/code&gt;オプションもある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;GCC 7.1以降は、&lt;code&gt;-std=c++17&lt;/code&gt;オプションを使用する。&lt;ul&gt;
&lt;li&gt;GNU拡張を有効にする&lt;code&gt;-std=gnu++17&lt;/code&gt;オプションもある (旧オプションは非推奨)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;GCC 11.1以降は、C++17がデフォルトとなる。デフォルトバージョンのコンパイルオプションは&lt;code&gt;-std=gnu++17&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;C++20の機能を有効にする&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;GCC 8.1以降は、&lt;code&gt;-std=c++2a&lt;/code&gt;オプションを使用する。&lt;ul&gt;
&lt;li&gt;GNU拡張を有効にする&lt;code&gt;-std=gnu++2a&lt;/code&gt;オプションもある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;GCC 10.1以降は、&lt;code&gt;-std=c++20&lt;/code&gt;オプションを使用する。&lt;ul&gt;
&lt;li&gt;GNU拡張を有効にする&lt;code&gt;-std=gnu++20&lt;/code&gt;オプションもある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;C++23の機能を有効にする&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;GCC 11.1以降は、&lt;code&gt;-std=c++23&lt;/code&gt;オプションもしくは仮称バージョンの&lt;code&gt;-std=c++2b&lt;/code&gt;オプションを使用する。&lt;ul&gt;
&lt;li&gt;GNU拡張を有効にする&lt;code&gt;-std=gnu++23&lt;/code&gt;および&lt;code&gt;-std=gnu++2b&lt;/code&gt;オプションもある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#icc&#34; id=&#34;icc&#34;&gt;Intel C++ Compiler&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;このサイトでは ICC と呼ぶ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.xlsoft.com/jp/products/intel/compilers/ccl/index.html?tab=0&#34; target=&#34;_blank&#34;&gt;XLsoft エクセルソフト : インテル C++ Composer XE Linux 版/インテル C++ コンパイラー XE Linux 版 製品紹介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.xlsoft.com/jp/products/intel/compilers/ccl/index.html?tab=0&#34; target=&#34;_blank&#34;&gt;XLsoft エクセルソフト : インテル C++ Composer XE Mac OS 版/インテル C++ コンパイラー XE Mac OS 版 製品紹介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.xlsoft.com/jp/products/intel/compilers/ccw/index.html?tab=0&#34; target=&#34;_blank&#34;&gt;XLsoft エクセルソフト : インテル C++ Composer XE Windows 版/インテル C++ コンパイラー XE Windows 版 製品紹介&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;別名&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;ICC&lt;/li&gt;
&lt;li&gt;ICL&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;C++11の機能を有効にする&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Windowsでは&lt;code&gt;/Qstd:c++11&lt;/code&gt;、Linux/macOSでは&lt;code&gt;-std=c++11&lt;/code&gt;オプションを使用する。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;C++14の機能を有効にする&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;ICC 16.0からは、Windowsでは&lt;code&gt;/Qstd:c++14&lt;/code&gt;オプション、Linux/macOSでは&lt;code&gt;-std=c++14&lt;/code&gt;オプションを使用する。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;C++17の機能を有効にする&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;ICC 17.0からは、Windowsでは&lt;code&gt;/Qstd:c++17&lt;/code&gt;オプション、Linux/macOSでは&lt;code&gt;-std=c++17&lt;/code&gt;オプションを使用する。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#visual_cpp&#34; id=&#34;visual_cpp&#34;&gt;Microsoft Visual C++&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;このサイトでは Visual C++ と呼ぶ。Visual Studio 2012 以降、Visual C++は独立した製品名ではなくなり製品Visual Studioのみに含まれるようになったが、当サイトでは製品に含まれているコンポーネント名としてのVisual C++を採用する。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.visualstudio.com/ja-jp/visual-studio-homepage-vs.aspx&#34; target=&#34;_blank&#34;&gt;Visual Studio - Microsoft Developer Tools&lt;/a&gt;: Visual C++を含む統合開発環境。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://visualstudio.microsoft.com/ja/downloads/&#34; target=&#34;_blank&#34;&gt;Build Tools for Visual Studio&lt;/a&gt;: コマンドラインのみからコンパイルするために必要な環境を構築するもの。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;別名&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;VC&lt;/li&gt;
&lt;li&gt;VC++&lt;/li&gt;
&lt;li&gt;MSVC&lt;/li&gt;
&lt;li&gt;cl&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a href=&#34;#visual_cpp_ver&#34; id=&#34;visual_cpp_ver&#34;&gt;バージョンの表記&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;以下に当サイトにおけるバージョン表記と、製品・バージョン等の対応を示す。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;表記&lt;/th&gt;
&lt;th&gt;製品名 [Visual Studio バージョン] &lt;sup&gt;&lt;a href=&#34;#note-t1-1&#34; id=&#34;note_ref-t1-1&#34;&gt;†1&lt;/a&gt;&lt;/sup&gt;&lt;/th&gt;
&lt;th&gt;VC++ バージョン &lt;sup&gt;&lt;a href=&#34;#note-t1-2&#34; id=&#34;note_ref-t1-2&#34;&gt;†2&lt;/a&gt;&lt;/sup&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;_MSC_VER&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;_MSC_FULL_VER&lt;/code&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2022 Update 12&lt;/td&gt;
&lt;td&gt;Visual Studio 2022 Version 17.12.4&lt;/td&gt;
&lt;td&gt;14.42&lt;/td&gt;
&lt;td&gt;1942&lt;/td&gt;
&lt;td&gt;194234436&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2022 Update 12&lt;/td&gt;
&lt;td&gt;Visual Studio 2022 Version 17.12.3&lt;/td&gt;
&lt;td&gt;14.42&lt;/td&gt;
&lt;td&gt;1942&lt;/td&gt;
&lt;td&gt;194234435&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2022 Update 11&lt;/td&gt;
&lt;td&gt;Visual Studio 2022 Version 17.11.0&lt;/td&gt;
&lt;td&gt;14.41&lt;/td&gt;
&lt;td&gt;1941&lt;/td&gt;
&lt;td&gt;194134120&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2022 Update 10&lt;/td&gt;
&lt;td&gt;Visual Studio 2022 Version 17.10.5&lt;/td&gt;
&lt;td&gt;14.40&lt;/td&gt;
&lt;td&gt;1939&lt;/td&gt;
&lt;td&gt;194033811&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2022 Update 9&lt;/td&gt;
&lt;td&gt;Visual Studio 2022 Version 17.9.2&lt;/td&gt;
&lt;td&gt;14.39&lt;/td&gt;
&lt;td&gt;1939&lt;/td&gt;
&lt;td&gt;193933521&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2022 Update 8&lt;/td&gt;
&lt;td&gt;Visual Studio 2022 version 17.8.3&lt;/td&gt;
&lt;td&gt;14.38&lt;/td&gt;
&lt;td&gt;1938&lt;/td&gt;
&lt;td&gt;193833133&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2022 Update 7&lt;/td&gt;
&lt;td&gt;Visual Studio 2022 version 17.7.0&lt;/td&gt;
&lt;td&gt;14.37&lt;/td&gt;
&lt;td&gt;1937&lt;/td&gt;
&lt;td&gt;193732822&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2022 Update 6&lt;/td&gt;
&lt;td&gt;Visual Studio 2022 version 17.6.2&lt;/td&gt;
&lt;td&gt;14.36&lt;/td&gt;
&lt;td&gt;1936&lt;/td&gt;
&lt;td&gt;193632532&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2022 Update 5&lt;/td&gt;
&lt;td&gt;Visual Studio 2022 version 17.5.4&lt;/td&gt;
&lt;td&gt;??&lt;/td&gt;
&lt;td&gt;1935&lt;/td&gt;
&lt;td&gt;193532217&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2022 Update 4&lt;/td&gt;
&lt;td&gt;Visual Studio 2022 version 17.4.9&lt;/td&gt;
&lt;td&gt;??&lt;/td&gt;
&lt;td&gt;1934&lt;/td&gt;
&lt;td&gt;193431944&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2022 Update 3&lt;/td&gt;
&lt;td&gt;Visual Studio 2022 version 17.3.6&lt;/td&gt;
&lt;td&gt;14.33&lt;/td&gt;
&lt;td&gt;1933&lt;/td&gt;
&lt;td&gt;193331630&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2022 Update 2&lt;/td&gt;
&lt;td&gt;Visual Studio 2022 version 17.2.2&lt;/td&gt;
&lt;td&gt;14.32&lt;/td&gt;
&lt;td&gt;1932&lt;/td&gt;
&lt;td&gt;193231329&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2022&lt;/td&gt;
&lt;td&gt;Visual Studio 2022 version 17.0.2&lt;/td&gt;
&lt;td&gt;14.30&lt;/td&gt;
&lt;td&gt;1930&lt;/td&gt;
&lt;td&gt;193030706&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2022&lt;/td&gt;
&lt;td&gt;Visual Studio 2022 version 17.0.1&lt;/td&gt;
&lt;td&gt;14.30&lt;/td&gt;
&lt;td&gt;1930&lt;/td&gt;
&lt;td&gt;193030705&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019 Update 11&lt;/td&gt;
&lt;td&gt;Visual Studio 2019 バージョン 16.11.2&lt;/td&gt;
&lt;td&gt;14.28&lt;/td&gt;
&lt;td&gt;1929&lt;/td&gt;
&lt;td&gt;192930133&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019 Update 9&lt;/td&gt;
&lt;td&gt;Visual Studio 2019 バージョン 16.9.2&lt;/td&gt;
&lt;td&gt;14.28&lt;/td&gt;
&lt;td&gt;1928&lt;/td&gt;
&lt;td&gt;192829913&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019 Update 8&lt;/td&gt;
&lt;td&gt;Visual Studio 2019 バージョン 16.8.2&lt;/td&gt;
&lt;td&gt;14.28&lt;/td&gt;
&lt;td&gt;1928&lt;/td&gt;
&lt;td&gt;192829334&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019 Update 8&lt;/td&gt;
&lt;td&gt;Visual Studio 2019 バージョン 16.8.1&lt;/td&gt;
&lt;td&gt;14.28&lt;/td&gt;
&lt;td&gt;1928&lt;/td&gt;
&lt;td&gt;192829333&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019 Update 7&lt;/td&gt;
&lt;td&gt;Visual Studio 2019 バージョン 16.7&lt;/td&gt;
&lt;td&gt;14.27&lt;/td&gt;
&lt;td&gt;1927&lt;/td&gt;
&lt;td&gt;192729112&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019 Update 6&lt;/td&gt;
&lt;td&gt;Visual Studio 2019 バージョン 16.6.2&lt;/td&gt;
&lt;td&gt;14.26&lt;/td&gt;
&lt;td&gt;1926&lt;/td&gt;
&lt;td&gt;192628806&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019 Update 5&lt;/td&gt;
&lt;td&gt;Visual Studio 2019 バージョン 16.5.1&lt;/td&gt;
&lt;td&gt;14.25&lt;/td&gt;
&lt;td&gt;1925&lt;/td&gt;
&lt;td&gt;192528611&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019 Update 4&lt;/td&gt;
&lt;td&gt;Visual Studio 2019 バージョン 16.4.0&lt;/td&gt;
&lt;td&gt;14.24&lt;/td&gt;
&lt;td&gt;1924&lt;/td&gt;
&lt;td&gt;192428314&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019 Update 3&lt;/td&gt;
&lt;td&gt;Visual Studio 2019 バージョン 16.3.2&lt;/td&gt;
&lt;td&gt;14.23&lt;/td&gt;
&lt;td&gt;1923&lt;/td&gt;
&lt;td&gt;192328105&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019 Update 2&lt;/td&gt;
&lt;td&gt;Visual Studio 2019 バージョン 16.2.3&lt;/td&gt;
&lt;td&gt;14.22&lt;/td&gt;
&lt;td&gt;1922&lt;/td&gt;
&lt;td&gt;192227905&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019 Update 1&lt;/td&gt;
&lt;td&gt;Visual Studio 2019 バージョン 16.1.2&lt;/td&gt;
&lt;td&gt;14.21&lt;/td&gt;
&lt;td&gt;1921&lt;/td&gt;
&lt;td&gt;192127702&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019&lt;/td&gt;
&lt;td&gt;Visual Studio 2019 バージョン 16.0.0&lt;/td&gt;
&lt;td&gt;14.20&lt;/td&gt;
&lt;td&gt;1920&lt;/td&gt;
&lt;td&gt;192027508&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 9&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.9.11&lt;/td&gt;
&lt;td&gt;14.16&lt;/td&gt;
&lt;td&gt;1916&lt;/td&gt;
&lt;td&gt;191627030&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 9&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.9.7&lt;/td&gt;
&lt;td&gt;14.16&lt;/td&gt;
&lt;td&gt;1916&lt;/td&gt;
&lt;td&gt;191627027&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 9&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.9.5&lt;/td&gt;
&lt;td&gt;14.16&lt;/td&gt;
&lt;td&gt;1916&lt;/td&gt;
&lt;td&gt;191627026&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 9&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.9.4&lt;/td&gt;
&lt;td&gt;14.16&lt;/td&gt;
&lt;td&gt;1916&lt;/td&gt;
&lt;td&gt;191627025&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 9&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.9.1&lt;/td&gt;
&lt;td&gt;14.16&lt;/td&gt;
&lt;td&gt;1916&lt;/td&gt;
&lt;td&gt;191627023&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 9&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.9.0&lt;/td&gt;
&lt;td&gt;14.16&lt;/td&gt;
&lt;td&gt;1916&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 8&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.8.0&lt;/td&gt;
&lt;td&gt;14.15&lt;/td&gt;
&lt;td&gt;1915&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.7.5&lt;/td&gt;
&lt;td&gt;14.14&lt;/td&gt;
&lt;td&gt;1914&lt;/td&gt;
&lt;td&gt;191426433&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.7.3&lt;/td&gt;
&lt;td&gt;14.14&lt;/td&gt;
&lt;td&gt;1914&lt;/td&gt;
&lt;td&gt;191426430&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.7.2&lt;/td&gt;
&lt;td&gt;14.14&lt;/td&gt;
&lt;td&gt;1914&lt;/td&gt;
&lt;td&gt;191426429&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.7.1&lt;/td&gt;
&lt;td&gt;14.14&lt;/td&gt;
&lt;td&gt;1914&lt;/td&gt;
&lt;td&gt;191426428&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 6&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.6.7&lt;/td&gt;
&lt;td&gt;14.13&lt;/td&gt;
&lt;td&gt;1913&lt;/td&gt;
&lt;td&gt;191326132&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 6&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.6.6&lt;/td&gt;
&lt;td&gt;14.13&lt;/td&gt;
&lt;td&gt;1913&lt;/td&gt;
&lt;td&gt;191326131&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 6&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.6.4&lt;/td&gt;
&lt;td&gt;14.13&lt;/td&gt;
&lt;td&gt;1913&lt;/td&gt;
&lt;td&gt;191326129&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 6&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.6.3&lt;/td&gt;
&lt;td&gt;14.13&lt;/td&gt;
&lt;td&gt;1913&lt;/td&gt;
&lt;td&gt;191326129&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 6&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.6.2&lt;/td&gt;
&lt;td&gt;14.13&lt;/td&gt;
&lt;td&gt;1913&lt;/td&gt;
&lt;td&gt;191326128&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 6&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.6.1&lt;/td&gt;
&lt;td&gt;14.13&lt;/td&gt;
&lt;td&gt;1913&lt;/td&gt;
&lt;td&gt;191326128&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 6&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.6.0&lt;/td&gt;
&lt;td&gt;14.13&lt;/td&gt;
&lt;td&gt;1913&lt;/td&gt;
&lt;td&gt;191326128&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.5.7&lt;/td&gt;
&lt;td&gt;14.12&lt;/td&gt;
&lt;td&gt;1912&lt;/td&gt;
&lt;td&gt;191225835&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.5.6&lt;/td&gt;
&lt;td&gt;14.12&lt;/td&gt;
&lt;td&gt;1912&lt;/td&gt;
&lt;td&gt;191225835&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.5.4&lt;/td&gt;
&lt;td&gt;14.12&lt;/td&gt;
&lt;td&gt;1912&lt;/td&gt;
&lt;td&gt;191225834&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.5.3&lt;/td&gt;
&lt;td&gt;14.12&lt;/td&gt;
&lt;td&gt;1912&lt;/td&gt;
&lt;td&gt;191225834&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.5.2&lt;/td&gt;
&lt;td&gt;14.12&lt;/td&gt;
&lt;td&gt;1912&lt;/td&gt;
&lt;td&gt;191225831&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 4&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.4.5&lt;/td&gt;
&lt;td&gt;14.11&lt;/td&gt;
&lt;td&gt;1911&lt;/td&gt;
&lt;td&gt;191125547&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 4&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.4.4&lt;/td&gt;
&lt;td&gt;14.11&lt;/td&gt;
&lt;td&gt;1911&lt;/td&gt;
&lt;td&gt;191125542&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.3.3&lt;/td&gt;
&lt;td&gt;14.11&lt;/td&gt;
&lt;td&gt;1911&lt;/td&gt;
&lt;td&gt;191125507&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 2 &lt;sup&gt;&lt;a href=&#34;#note-t1-3&#34; id=&#34;note_ref-t1-3-a&#34;&gt;†3&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.2&lt;/td&gt;
&lt;td&gt;14.10&lt;/td&gt;
&lt;td&gt;1910&lt;/td&gt;
&lt;td&gt;191025017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 1 &lt;sup&gt;&lt;a href=&#34;#note-t1-3&#34; id=&#34;note_ref-t1-3-b&#34;&gt;†3&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.1&lt;/td&gt;
&lt;td&gt;14.10&lt;/td&gt;
&lt;td&gt;1910&lt;/td&gt;
&lt;td&gt;191025017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.0&lt;/td&gt;
&lt;td&gt;14.10 &lt;sup&gt;&lt;a href=&#34;#note-t1-4&#34; id=&#34;note_ref-t1-4&#34;&gt;†4&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;1910&lt;/td&gt;
&lt;td&gt;191025017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2015 Update 3&lt;/td&gt;
&lt;td&gt;Visual Studio 2015 Update 3 [14.0]&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;1900&lt;/td&gt;
&lt;td&gt;190024210&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2015 Update 2&lt;/td&gt;
&lt;td&gt;Visual Studio 2015 Update 2 [14.0]&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;1900&lt;/td&gt;
&lt;td&gt;190023918&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2015 Update 1&lt;/td&gt;
&lt;td&gt;Visual Studio 2015 Update 1 [14.0]&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;1900&lt;/td&gt;
&lt;td&gt;190023506&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;td&gt;Visual Studio 2015          [14.0]&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;1900&lt;/td&gt;
&lt;td&gt;190023026&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2013 Update 5&lt;/td&gt;
&lt;td&gt;Visual Studio 2013 Update 5 [12.0]&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;1800&lt;/td&gt;
&lt;td&gt;180040629&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2013 Update 4&lt;/td&gt;
&lt;td&gt;Visual Studio 2013 Update 4 [12.0]&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;1800&lt;/td&gt;
&lt;td&gt;180031101&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2013 Update 3&lt;/td&gt;
&lt;td&gt;Visual Studio 2013 Update 3 [12.0]&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;1800&lt;/td&gt;
&lt;td&gt;180030723&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2013 Update 2&lt;/td&gt;
&lt;td&gt;Visual Studio 2013 Update 2 [12.0]&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;1800&lt;/td&gt;
&lt;td&gt;180030501&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2013 Update 1 &lt;sup&gt;&lt;a href=&#34;#note-t1-3&#34; id=&#34;note_ref-t1-3-c&#34;&gt;†3&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;Visual Studio 2013 Update 1 [12.0]&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;1800&lt;/td&gt;
&lt;td&gt;180021005&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;td&gt;Visual Studio 2013          [12.0]&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;1800&lt;/td&gt;
&lt;td&gt;180021005&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2012 Update 4&lt;/td&gt;
&lt;td&gt;Visual Studio 2012 Update 4 [11.0]&lt;/td&gt;
&lt;td&gt;11.0&lt;/td&gt;
&lt;td&gt;1700&lt;/td&gt;
&lt;td&gt;170061030&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2012 Update 3&lt;/td&gt;
&lt;td&gt;Visual Studio 2012 Update 3 [11.0]&lt;/td&gt;
&lt;td&gt;11.0&lt;/td&gt;
&lt;td&gt;1700&lt;/td&gt;
&lt;td&gt;170060610&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2012 Update 2&lt;/td&gt;
&lt;td&gt;Visual Studio 2012 Update 2 [11.0]&lt;/td&gt;
&lt;td&gt;11.0&lt;/td&gt;
&lt;td&gt;1700&lt;/td&gt;
&lt;td&gt;170060315&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2012 Update 1&lt;/td&gt;
&lt;td&gt;Visual Studio 2012 Update 1 [11.0]&lt;/td&gt;
&lt;td&gt;11.0&lt;/td&gt;
&lt;td&gt;1700&lt;/td&gt;
&lt;td&gt;170051106&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2012&lt;/td&gt;
&lt;td&gt;Visual Studio 2012          [11.0]&lt;/td&gt;
&lt;td&gt;11.0&lt;/td&gt;
&lt;td&gt;1700&lt;/td&gt;
&lt;td&gt;170050727&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2010 SP1&lt;/td&gt;
&lt;td&gt;Visual Studio 2010 SP1      [10.0]&lt;br /&gt;Visual C++ 2010 SP1     [10.0]&lt;/td&gt;
&lt;td&gt;10.0&lt;/td&gt;
&lt;td&gt;1600&lt;/td&gt;
&lt;td&gt;160040219&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2010&lt;/td&gt;
&lt;td&gt;Visual Studio 2010          [10.0]&lt;br /&gt;Visual C++ 2010         [10.0]&lt;/td&gt;
&lt;td&gt;10.0&lt;/td&gt;
&lt;td&gt;1600&lt;/td&gt;
&lt;td&gt;160030319&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2008 SP1&lt;/td&gt;
&lt;td&gt;Visual Studio 2008 SP1      [9.0] &lt;br /&gt;Visual C++ 2008 SP1     [9.0]&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;150030729&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2008&lt;/td&gt;
&lt;td&gt;Visual Studio 2008          [9.0] &lt;br /&gt;Visual C++ 2008         [9.0]&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;150021022&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2005 SP1&lt;/td&gt;
&lt;td&gt;Visual Studio 2005 SP1      [8.0] &lt;br /&gt;Visual C++ 2005 SP1     [8.0]&lt;/td&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;1400&lt;/td&gt;
&lt;td&gt;140050727&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2005&lt;/td&gt;
&lt;td&gt;Visual Studio 2005          [8.0] &lt;br /&gt;Visual C++ 2005         [8.0]&lt;/td&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;1400&lt;/td&gt;
&lt;td&gt;140050320&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Windows Server 2003 SP1 DDK (for AMD64)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;1400&lt;/td&gt;
&lt;td&gt;140040310&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2003 SP1&lt;/td&gt;
&lt;td&gt;Visual Studio .NET 2003 SP1 [7.1]&lt;br /&gt;Visual C++ .NET 2003 SP1 [7.1]&lt;/td&gt;
&lt;td&gt;7.1&lt;/td&gt;
&lt;td&gt;1310&lt;/td&gt;
&lt;td&gt;13106030&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Windows Server 2003 SP1 DDK&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;1310&lt;/td&gt;
&lt;td&gt;13104035&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2003&lt;/td&gt;
&lt;td&gt;Visual Studio .NET 2003     [7.1]&lt;br /&gt;Visual C++ .NET 2003     [7.1]&lt;/td&gt;
&lt;td&gt;7.1&lt;/td&gt;
&lt;td&gt;1310&lt;/td&gt;
&lt;td&gt;13103077&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Visual Studio Toolkit 2003  [7.1]&lt;/td&gt;
&lt;td&gt;7.1&lt;/td&gt;
&lt;td&gt;1310&lt;/td&gt;
&lt;td&gt;13103052&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Windows Server 2003 DDK&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;1310&lt;/td&gt;
&lt;td&gt;13102179&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2002&lt;/td&gt;
&lt;td&gt;Visual Studio .NET 2002     [7.0]&lt;br /&gt;Visual C++ .NET 2002     [7.0]&lt;/td&gt;
&lt;td&gt;7.0&lt;/td&gt;
&lt;td&gt;1300&lt;/td&gt;
&lt;td&gt;13009466&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Windows XP SP1 DDK&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;1300&lt;/td&gt;
&lt;td&gt;13009176&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6.0 SP6&lt;/td&gt;
&lt;td&gt;Visual Studio 6.0 SP6&lt;br /&gt;Visual C++ 6.0 SP6&lt;/td&gt;
&lt;td&gt;6.0&lt;/td&gt;
&lt;td&gt;1200&lt;/td&gt;
&lt;td&gt;12008804&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6.0 SP5&lt;/td&gt;
&lt;td&gt;Visual Studio 6.0 SP5&lt;br /&gt;Visual C++ 6.0 SP5&lt;/td&gt;
&lt;td&gt;6.0&lt;/td&gt;
&lt;td&gt;1200&lt;/td&gt;
&lt;td&gt;12008804&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Visual Studio 97 [5.0]&lt;br /&gt;Visual C++ 5.0&lt;/td&gt;
&lt;td&gt;5.0&lt;/td&gt;
&lt;td&gt;1100&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Visual C++ 4.2&lt;/td&gt;
&lt;td&gt;4.2&lt;/td&gt;
&lt;td&gt;1020&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Visual C++ 4.1&lt;/td&gt;
&lt;td&gt;4.1&lt;/td&gt;
&lt;td&gt;1010&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Visual C++ 4.0&lt;/td&gt;
&lt;td&gt;4.0&lt;/td&gt;
&lt;td&gt;1000&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Visual C++ 2.0&lt;/td&gt;
&lt;td&gt;2.0&lt;/td&gt;
&lt;td&gt;900&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Visual C++ 1.0&lt;/td&gt;
&lt;td&gt;1.0&lt;/td&gt;
&lt;td&gt;800&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Microsoft C/C++ 7.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Microsoft C 6.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;600&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;#note_ref-t1-1&#34; id=&#34;note-t1-1&#34;&gt;^&lt;/a&gt;&lt;/strong&gt; 製品名の列にはVisual C++コンパイラを含む実際に入手する製品の名称を示す。製品のエディション (Express/Standard/Professional/Enterprise/Community 他) は省略する。Visual Studioの製品バージョンは、製品名に現れていないときは &lt;code&gt;[ ～ ]&lt;/code&gt; 内に記す。製品バージョンは、2017以降、メインメニューの [ヘルプ]-[Microsoft Visual Studio のバージョン情報] から確認できるものを指す。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;#note_ref-t1-2&#34; id=&#34;note-t1-2&#34;&gt;^&lt;/a&gt;&lt;/strong&gt; VC++バージョンの列にはVisual C++ツールセットのバージョンを記述する。この表では特にVisual C++を入れた時に既定で選択されるツールセットのみについて扱う。Visual Studio 2022においては&lt;code&gt;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC&lt;/code&gt;配下のフォルダ名(&lt;code&gt;14.39.33519&lt;/code&gt;など)で確認できる。&lt;/li&gt;
&lt;li&gt;&lt;a id=&#34;note-t1-3&#34;&gt;^&lt;/a&gt; &lt;sup&gt;&lt;a href=&#34;#note_ref-t1-3-a&#34;&gt;&lt;strong&gt;a&lt;/strong&gt;&lt;/a&gt;&lt;/sup&gt; &lt;sup&gt;&lt;a href=&#34;#note_ref-t1-3-b&#34;&gt;&lt;strong&gt;b&lt;/strong&gt;&lt;/a&gt;&lt;/sup&gt; &lt;sup&gt;&lt;a href=&#34;#note_ref-t1-3-c&#34;&gt;&lt;strong&gt;c&lt;/strong&gt;&lt;/a&gt;&lt;/sup&gt; IDEのみ修正され、コンパイラ、ヘッダー、ライブラリ等は変更されなかった。&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/vcblog/2017/08/11/c17-features-and-stl-fixes-in-vs-2017-15-3/&#34; target=&#34;_blank&#34;&gt;C++17 Features And STL Fixes In VS 2017 15.3 | Visual C++ Team Blog&lt;/a&gt; - &#34;&lt;em&gt;After VS 2017 RTM, the 15.1 and 15.2 updates improved the IDE. The 15.3 update improves both the IDE and the toolset.&lt;/em&gt;&#34;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://support.microsoft.com/en-us/help/2911573/description-of-visual-studio-2013-update-1&#34; target=&#34;_blank&#34;&gt;Description of Visual Studio 2013 Update 1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;#note_ref-t1-4&#34; id=&#34;note-t1-4&#34;&gt;^&lt;/a&gt;&lt;/strong&gt; 2017は2015とバイナリ互換が保たれているためメジャーバージョンアップは行われなかった。その結果、製品バージョンとVisual C++バージョンが一致しなくなった。
  &lt;a href=&#34;https://blogs.msdn.microsoft.com/vcblog/2017/03/07/binary-compatibility-and-pain-free-upgrade-why-moving-to-visual-studio-2017-is-almost-too-easy/&#34; target=&#34;_blank&#34;&gt;Binary Compatibility and Pain-free Upgrade: Why Moving to Visual Studio 2017 is almost “too easy”&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2015以降、Visual Studioの既定のインストールではVisual C++は入らなくなった。Visual StudioのインストーラでVisual C++コンポーネントを選択する必要がある。
  &lt;a href=&#34;https://docs.microsoft.com/ja-JP/previous-versions/60k1461a(v=vs.140)?redirectedfrom=MSDN&#34; target=&#34;_blank&#34;&gt;Visual Studio 2015 の Visual C++&lt;/a&gt; の [警告] を参照。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;2017 Update 5からside-by-sideがサポートされ、一つの製品内で同時に複数のVisual C++ツールセットを選択できるようになった。
  &lt;a href=&#34;https://blogs.msdn.microsoft.com/vcblog/2017/11/15/side-by-side-minor-version-msvc-toolsets-in-visual-studio-2017/&#34; target=&#34;_blank&#34;&gt;Side-by-side minor version MSVC toolsets in Visual Studio 2017 | Visual C++ Team Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;C++11の機能を有効にする&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11は常に有効である&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;C++14の機能を有効にする&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++14は常に有効である&lt;/li&gt;
&lt;li&gt;2015 Update 3から&lt;code&gt;/std:c++14&lt;/code&gt;オプションが導入されたが既定値でありC++14を無効化する機能は提供されていない。&lt;code&gt;_MSVC_LANG&lt;/code&gt;マクロの値は&lt;code&gt;201402&lt;/code&gt;になる&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;C++17の機能を有効にする&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2015 Update 2以前に実装された機能については、互換性の観点から常に有効である&lt;/li&gt;
&lt;li&gt;2015 Update 3以降に実装された機能については、&lt;code&gt;/std:c++17&lt;/code&gt;オプションを使用する。&lt;code&gt;_MSVC_LANG&lt;/code&gt;マクロの値は&lt;code&gt;201703&lt;/code&gt;になる&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;C++20の機能を有効にする&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2019以降に実装された機能については、&lt;code&gt;/std:c++latest&lt;/code&gt;オプションを使用する&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;最新バージョンの言語機能を有効にする&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2015 Update 3以降は&lt;code&gt;/std:c++latest&lt;/code&gt;オプションを使用する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/cpp/build/reference/std-specify-language-standard-version&#34; target=&#34;_blank&#34;&gt;-std (Specify Language Standard Version) | Microsoft Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/cpp/preprocessor/predefined-macros&#34; target=&#34;_blank&#34;&gt;Predefined Macros | Microsoft Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/vcblog/2016/06/07/standards-version-switches-in-the-compiler/&#34; target=&#34;_blank&#34;&gt;Standards version switches in the compiler&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Yuhki Ogasawara</name>
        <email>y121516@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>flat_multiset -- add op_deduction_guide to flat_set. (#1079)</title>
      <link href="https://cpprefjp.github.io/reference/flat_set/flat_multiset.html"/>
      <id>f7e7a97f12518a9c88ecb00272734282b6c09772:reference/flat_set/flat_multiset.md</id>
      <updated>2025-02-11T09:56:48+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_set/flat_multiset.md b/reference/flat_set/flat_multiset.md
index e6e3bd6ad..60d49067e 100644
--- a/reference/flat_set/flat_multiset.md
+++ b/reference/flat_set/flat_multiset.md
@@ -136,7 +136,7 @@ namespace std {
 
 | 名前 | 説明 | 対応バージョン |
 |---------------------------------------------|------------------------------------|-------|
-| [`(deduction_guide)`](flat_multiset/op_deduction_guide.md.nolink) | クラステンプレートの推論補助 | C++23 |
+| [`(deduction_guide)`](flat_multiset/op_deduction_guide.md) | クラステンプレートの推論補助 | C++23 |
 
 
 ## その他
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>推論補助 -- add op_deduction_guide to flat_set. (#1079)</title>
      <link href="https://cpprefjp.github.io/reference/flat_set/flat_multiset/op_deduction_guide.html"/>
      <id>f7e7a97f12518a9c88ecb00272734282b6c09772:reference/flat_set/flat_multiset/op_deduction_guide.md</id>
      <updated>2025-02-11T09:56:48+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_set/flat_multiset/op_deduction_guide.md b/reference/flat_set/flat_multiset/op_deduction_guide.md
new file mode 100644
index 000000000..2b1a907c9
--- /dev/null
+++ b/reference/flat_set/flat_multiset/op_deduction_guide.md
@@ -0,0 +1,106 @@
+# 推論補助
+* flat_set[meta header]
+* std[meta namespace]
+* flat_multiset[meta class]
+* cpp23[meta cpp]
+
+```cpp
+namespace std {
+  // 説明用の型
+  template &amp;lt;class InputIterator&amp;gt;
+  using iter_val_t = typename iterator_traits&amp;lt;InputIterator&amp;gt;::value_type;
+  template&amp;lt;class Allocator, class T&amp;gt;
+  using alloc_rebind = typename allocator_traits&amp;lt;Allocator&amp;gt;::template rebind_alloc&amp;lt;T&amp;gt;;
+
+  template&amp;lt;class KeyContainer, class Compare = less&amp;lt;typename KeyContainer::value_type&amp;gt;&amp;gt;
+  flat_multiset(KeyContainer, Compare = Compare())
+    -&amp;gt; flat_multiset&amp;lt;typename KeyContainer::value_type, Compare, KeyContainer&amp;gt;;         // (1)
+
+  template&amp;lt;class KeyContainer, class Allocator&amp;gt;
+  flat_multiset(KeyContainer, Allocator)
+    -&amp;gt; flat_multiset&amp;lt;typename KeyContainer::value_type,
+                less&amp;lt;typename KeyContainer::value_type&amp;gt;, KeyContainer&amp;gt;;                 // (2)
+
+  template&amp;lt;class KeyContainer, class Compare, class Allocator&amp;gt;
+  flat_multiset(KeyContainer, Compare, Allocator)
+    -&amp;gt; flat_multiset&amp;lt;typename KeyContainer::value_type, Compare, KeyContainer&amp;gt;;         // (3)
+
+  template&amp;lt;class KeyContainer, class Compare = less&amp;lt;typename KeyContainer::value_type&amp;gt;&amp;gt;
+  flat_multiset(sorted_equivalent_t, KeyContainer, Compare = Compare())
+    -&amp;gt; flat_multiset&amp;lt;typename KeyContainer::value_type, Compare, KeyContainer&amp;gt;;         // (4)
+
+  template&amp;lt;class KeyContainer, class Allocator&amp;gt;
+  flat_multiset(sorted_equivalent_t, KeyContainer, Allocator)
+    -&amp;gt; flat_multiset&amp;lt;typename KeyContainer::value_type,
+                less&amp;lt;typename KeyContainer::value_type&amp;gt;, KeyContainer&amp;gt;;                 // (5)
+
+  template&amp;lt;class KeyContainer, class Compare, class Allocator&amp;gt;
+  flat_multiset(sorted_equivalent_t, KeyContainer, Compare, Allocator)
+    -&amp;gt; flat_multiset&amp;lt;typename KeyContainer::value_type, Compare, KeyContainer&amp;gt;;         // (6)
+
+  template&amp;lt;class InputIterator, class Compare = less&amp;lt;iter_val_t&amp;lt;InputIterator&amp;gt;&amp;gt;&amp;gt;
+  flat_multiset(InputIterator, InputIterator, Compare = Compare())
+    -&amp;gt; flat_multiset&amp;lt;iter_val_t&amp;lt;InputIterator&amp;gt;, Compare&amp;gt;;                               // (7)
+
+  template&amp;lt;class InputIterator, class Compare = less&amp;lt;iter_val_t&amp;lt;InputIterator&amp;gt;&amp;gt;&amp;gt;
+  flat_multiset(sorted_equivalent_t, InputIterator, InputIterator, Compare = Compare())
+    -&amp;gt; flat_multiset&amp;lt;iter_val_t&amp;lt;InputIterator&amp;gt;, Compare&amp;gt;;                               // (8)
+
+  template&amp;lt;ranges::input_range R, class Compare = less&amp;lt;ranges::range_value_t&amp;lt;R&amp;gt;&amp;gt;,
+           class Allocator = allocator&amp;lt;ranges::range_value_t&amp;lt;R&amp;gt;&amp;gt;&amp;gt;
+  flat_multiset(from_range_t, R&amp;amp;&amp;amp;, Compare = Compare(), Allocator = Allocator())
+    -&amp;gt; flat_multiset&amp;lt;ranges::range_value_t&amp;lt;R&amp;gt;, Compare,
+                vector&amp;lt;ranges::range_value_t&amp;lt;R&amp;gt;,
+                alloc_rebind&amp;lt;Allocator, ranges::range_value_t&amp;lt;R&amp;gt;&amp;gt;&amp;gt;&amp;gt;;                    // (9)
+
+  template&amp;lt;ranges::input_range R, class Allocator&amp;gt;
+  flat_multiset(from_range_t, R&amp;amp;&amp;amp;, Allocator)
+    -&amp;gt; flat_multiset&amp;lt;ranges::range_value_t&amp;lt;R&amp;gt;, less&amp;lt;ranges::range_value_t&amp;lt;R&amp;gt;&amp;gt;,
+                vector&amp;lt;ranges::range_value_t&amp;lt;R&amp;gt;,
+                alloc_rebind&amp;lt;Allocator, ranges::range_value_t&amp;lt;R&amp;gt;&amp;gt;&amp;gt;&amp;gt;;                    // (10)
+
+  template&amp;lt;class Key, class Compare = less&amp;lt;Key&amp;gt;&amp;gt;
+  flat_multiset(initializer_list&amp;lt;Key&amp;gt;, Compare = Compare())
+    -&amp;gt; flat_multiset&amp;lt;Key, Compare&amp;gt;;                                                     // (11)
+
+  template&amp;lt;class Key, class Compare = less&amp;lt;Key&amp;gt;&amp;gt;
+  flat_multiset(sorted_equivalent_t, initializer_list&amp;lt;Key&amp;gt;, Compare = Compare())
+    -&amp;gt; flat_multiset&amp;lt;Key, Compare&amp;gt;;                                                     // (12)
+```
+* vector[link /reference/vector/vector.md]
+* from_range_t[link ../../ranges/from_range_t.md]
+* sorted_equivalent_t[link ../sorted_equivalent_t.md]
+* iterator_traits[link /reference/iterator/iterator_traits.md]
+* less[link /reference/functional/less.md]
+* allocator[link /reference/memory/allocator.md]
+* initializer_list[link /reference/initializer_list/initializer_list.md]
+* ranges::input_range[link /reference/ranges/input_range.md]
+* ranges::range_value_t[link /reference/ranges/range_value_t.md]
+* allocator_traits[link /reference/memory/allocator_traits.md]
+
+
+## 概要
+`std::flat_multiset`クラステンプレートの型推論補助。
+
+- (1) : キーのコンテナ、比較関数からの推論
+- (2) : キーのコンテナ、アロケータからの推論
+- (3) : キーのコンテナ、比較関数、アロケータからの推論
+- (4) : キーのコンテナ、比較関数からの推論
+- (5) : キーのコンテナ、アロケータからの推論
+- (6) : キーのコンテナ、比較関数、アロケータからの推論
+- (7) : イテレータ範囲、比較関数からの推論
+- (8) : イテレータ範囲、比較関数からの推論
+- (9) : Range、比較関数、アロケータからの推論
+- (10) : Range、アロケータからの推論
+- (11) : 初期化子リスト、比較関数からの推論
+- (12) : 初期化子リスト、比較関数からの推論
+
+
+## バージョン
+### 言語
+- C++23
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>flat_set -- add op_deduction_guide to flat_set. (#1079)</title>
      <link href="https://cpprefjp.github.io/reference/flat_set/flat_set.html"/>
      <id>f7e7a97f12518a9c88ecb00272734282b6c09772:reference/flat_set/flat_set.md</id>
      <updated>2025-02-11T09:56:48+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_set/flat_set.md b/reference/flat_set/flat_set.md
index c4715fbc2..ece18174a 100644
--- a/reference/flat_set/flat_set.md
+++ b/reference/flat_set/flat_set.md
@@ -136,7 +136,7 @@ namespace std {
 
 | 名前 | 説明 | 対応バージョン |
 |---------------------------------------------|------------------------------------|-------|
-| [`(deduction_guide)`](flat_set/op_deduction_guide.md.nolink) | クラステンプレートの推論補助 | C++23 |
+| [`(deduction_guide)`](flat_set/op_deduction_guide.md) | クラステンプレートの推論補助 | C++23 |
 
 
 ## その他
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>推論補助 -- add op_deduction_guide to flat_set. (#1079)</title>
      <link href="https://cpprefjp.github.io/reference/flat_set/flat_set/op_deduction_guide.html"/>
      <id>f7e7a97f12518a9c88ecb00272734282b6c09772:reference/flat_set/flat_set/op_deduction_guide.md</id>
      <updated>2025-02-11T09:56:48+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_set/flat_set/op_deduction_guide.md b/reference/flat_set/flat_set/op_deduction_guide.md
new file mode 100644
index 000000000..cadaca6b2
--- /dev/null
+++ b/reference/flat_set/flat_set/op_deduction_guide.md
@@ -0,0 +1,106 @@
+# 推論補助
+* flat_set[meta header]
+* std[meta namespace]
+* flat_set[meta class]
+* cpp23[meta cpp]
+
+```cpp
+namespace std {
+  // 説明用の型
+  template &amp;lt;class InputIterator&amp;gt;
+  using iter_val_t = typename iterator_traits&amp;lt;InputIterator&amp;gt;::value_type;
+  template&amp;lt;class Allocator, class T&amp;gt;
+  using alloc_rebind = typename allocator_traits&amp;lt;Allocator&amp;gt;::template rebind_alloc&amp;lt;T&amp;gt;;
+
+  template&amp;lt;class KeyContainer, class Compare = less&amp;lt;typename KeyContainer::value_type&amp;gt;&amp;gt;
+  flat_set(KeyContainer, Compare = Compare())
+    -&amp;gt; flat_set&amp;lt;typename KeyContainer::value_type, Compare, KeyContainer&amp;gt;;              // (1)
+
+  template&amp;lt;class KeyContainer, class Allocator&amp;gt;
+  flat_set(KeyContainer, Allocator)
+    -&amp;gt; flat_set&amp;lt;typename KeyContainer::value_type,
+                less&amp;lt;typename KeyContainer::value_type&amp;gt;, KeyContainer&amp;gt;;                 // (2)
+
+  template&amp;lt;class KeyContainer, class Compare, class Allocator&amp;gt;
+  flat_set(KeyContainer, Compare, Allocator)
+    -&amp;gt; flat_set&amp;lt;typename KeyContainer::value_type, Compare, KeyContainer&amp;gt;;              // (3)
+
+  template&amp;lt;class KeyContainer, class Compare = less&amp;lt;typename KeyContainer::value_type&amp;gt;&amp;gt;
+  flat_set(sorted_unique_t, KeyContainer, Compare = Compare())
+    -&amp;gt; flat_set&amp;lt;typename KeyContainer::value_type, Compare, KeyContainer&amp;gt;;              // (4)
+
+  template&amp;lt;class KeyContainer, class Allocator&amp;gt;
+  flat_set(sorted_unique_t, KeyContainer, Allocator)
+    -&amp;gt; flat_set&amp;lt;typename KeyContainer::value_type,
+                less&amp;lt;typename KeyContainer::value_type&amp;gt;, KeyContainer&amp;gt;;                 // (5)
+
+  template&amp;lt;class KeyContainer, class Compare, class Allocator&amp;gt;
+  flat_set(sorted_unique_t, KeyContainer, Compare, Allocator)
+    -&amp;gt; flat_set&amp;lt;typename KeyContainer::value_type, Compare, KeyContainer&amp;gt;;              // (6)
+
+  template&amp;lt;class InputIterator, class Compare = less&amp;lt;iter_val_t&amp;lt;InputIterator&amp;gt;&amp;gt;&amp;gt;
+  flat_set(InputIterator, InputIterator, Compare = Compare())
+    -&amp;gt; flat_set&amp;lt;iter_val_t&amp;lt;InputIterator&amp;gt;, Compare&amp;gt;;                                    // (7)
+
+  template&amp;lt;class InputIterator, class Compare = less&amp;lt;iter_val_t&amp;lt;InputIterator&amp;gt;&amp;gt;&amp;gt;
+  flat_set(sorted_unique_t, InputIterator, InputIterator, Compare = Compare())
+    -&amp;gt; flat_set&amp;lt;iter_val_t&amp;lt;InputIterator&amp;gt;, Compare&amp;gt;;                                    // (8)
+
+  template&amp;lt;ranges::input_range R, class Compare = less&amp;lt;ranges::range_value_t&amp;lt;R&amp;gt;&amp;gt;,
+           class Allocator = allocator&amp;lt;ranges::range_value_t&amp;lt;R&amp;gt;&amp;gt;&amp;gt;
+  flat_set(from_range_t, R&amp;amp;&amp;amp;, Compare = Compare(), Allocator = Allocator())
+    -&amp;gt; flat_set&amp;lt;ranges::range_value_t&amp;lt;R&amp;gt;, Compare,
+                vector&amp;lt;ranges::range_value_t&amp;lt;R&amp;gt;,
+                alloc_rebind&amp;lt;Allocator, ranges::range_value_t&amp;lt;R&amp;gt;&amp;gt;&amp;gt;&amp;gt;;                    // (9)
+
+  template&amp;lt;ranges::input_range R, class Allocator&amp;gt;
+  flat_set(from_range_t, R&amp;amp;&amp;amp;, Allocator)
+    -&amp;gt; flat_set&amp;lt;ranges::range_value_t&amp;lt;R&amp;gt;, less&amp;lt;ranges::range_value_t&amp;lt;R&amp;gt;&amp;gt;,
+                vector&amp;lt;ranges::range_value_t&amp;lt;R&amp;gt;,
+                alloc_rebind&amp;lt;Allocator, ranges::range_value_t&amp;lt;R&amp;gt;&amp;gt;&amp;gt;&amp;gt;;                    // (10)
+
+  template&amp;lt;class Key, class Compare = less&amp;lt;Key&amp;gt;&amp;gt;
+  flat_set(initializer_list&amp;lt;Key&amp;gt;, Compare = Compare())
+    -&amp;gt; flat_set&amp;lt;Key, Compare&amp;gt;;                                                          // (11)
+
+  template&amp;lt;class Key, class Compare = less&amp;lt;Key&amp;gt;&amp;gt;
+  flat_set(sorted_unique_t, initializer_list&amp;lt;Key&amp;gt;, Compare = Compare())
+    -&amp;gt; flat_set&amp;lt;Key, Compare&amp;gt;;                                                          // (12)
+```
+* vector[link /reference/vector/vector.md]
+* from_range_t[link ../../ranges/from_range_t.md]
+* sorted_unique_t[link ../sorted_unique_t.md]
+* iterator_traits[link /reference/iterator/iterator_traits.md]
+* less[link /reference/functional/less.md]
+* allocator[link /reference/memory/allocator.md]
+* initializer_list[link /reference/initializer_list/initializer_list.md]
+* ranges::input_range[link /reference/ranges/input_range.md]
+* ranges::range_value_t[link /reference/ranges/range_value_t.md]
+* allocator_traits[link /reference/memory/allocator_traits.md]
+
+
+## 概要
+`std::flat_set`クラステンプレートの型推論補助。
+
+- (1) : キーのコンテナ、比較関数からの推論
+- (2) : キーのコンテナ、アロケータからの推論
+- (3) : キーのコンテナ、比較関数、アロケータからの推論
+- (4) : キーのコンテナ、比較関数からの推論
+- (5) : キーのコンテナ、アロケータからの推論
+- (6) : キーのコンテナ、比較関数、アロケータからの推論
+- (7) : イテレータ範囲、比較関数からの推論
+- (8) : イテレータ範囲、比較関数からの推論
+- (9) : Range、比較関数、アロケータからの推論
+- (10) : Range、アロケータからの推論
+- (11) : 初期化子リスト、比較関数からの推論
+- (12) : 初期化子リスト、比較関数からの推論
+
+
+## バージョン
+### 言語
+- C++23
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>flat_map -- add op_deduction_guide to flat_map. (#1078)</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map.html"/>
      <id>c55d9f2489cf0f0a96a65a511e8862953667746d:reference/flat_map/flat_map.md</id>
      <updated>2025-02-11T09:56:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map.md b/reference/flat_map/flat_map.md
index 47eb5dfba..584048a91 100644
--- a/reference/flat_map/flat_map.md
+++ b/reference/flat_map/flat_map.md
@@ -149,7 +149,7 @@ namespace std {
 
 | 名前 | 説明 | 対応バージョン |
 |---------------------------------------------|------------------------------------|-------|
-| [`(deduction_guide)`](flat_map/op_deduction_guide.md.nolink) | クラステンプレートの推論補助 | C++23 |
+| [`(deduction_guide)`](flat_map/op_deduction_guide.md) | クラステンプレートの推論補助 | C++23 |
 
 
 ## その他
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>推論補助 -- add op_deduction_guide to flat_map. (#1078)</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map/op_deduction_guide.html"/>
      <id>c55d9f2489cf0f0a96a65a511e8862953667746d:reference/flat_map/flat_map/op_deduction_guide.md</id>
      <updated>2025-02-11T09:56:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map/op_deduction_guide.md b/reference/flat_map/flat_map/op_deduction_guide.md
new file mode 100644
index 000000000..3bb63d4d8
--- /dev/null
+++ b/reference/flat_map/flat_map/op_deduction_guide.md
@@ -0,0 +1,132 @@
+# 推論補助
+* flat_map[meta header]
+* std[meta namespace]
+* flat_map[meta class]
+* cpp23[meta cpp]
+
+```cpp
+namespace std {
+  // 説明用の型
+  template &amp;lt;class InputIterator&amp;gt;
+  using iter_key_t = remove_const_t&amp;lt;typename iterator_traits&amp;lt;InputIterator&amp;gt;::value_type::first_type&amp;gt;;
+  template &amp;lt;class InputIterator&amp;gt;
+  using iter_val_t = typename iterator_traits&amp;lt;InputIterator&amp;gt;::value_type::second_type;
+  template&amp;lt;ranges::input_range Range&amp;gt;
+  using range_key_t = remove_const_t&amp;lt;typename ranges::range_value_t&amp;lt;Range&amp;gt;::first_type&amp;gt;;
+  template&amp;lt;ranges::input_range Range&amp;gt;
+  using range_val_t = typename ranges::range_value_t&amp;lt;Range&amp;gt;::second_type;
+  template&amp;lt;class Allocator, class T&amp;gt;
+  using alloc_rebind = typename allocator_traits&amp;lt;Allocator&amp;gt;::template rebind_alloc&amp;lt;T&amp;gt;;
+
+  template&amp;lt;class KeyContainer, class MappedContainer,
+           class Compare = less&amp;lt;typename KeyContainer::value_type&amp;gt;&amp;gt;
+  flat_map(KeyContainer, MappedContainer, Compare = Compare())
+    -&amp;gt; flat_map&amp;lt;typename KeyContainer::value_type, typename MappedContainer::value_type,
+                Compare, KeyContainer, MappedContainer&amp;gt;;                                 // (1)
+
+  template&amp;lt;class KeyContainer, class MappedContainer, class Allocator&amp;gt;
+  flat_map(KeyContainer, MappedContainer, Allocator)
+    -&amp;gt; flat_map&amp;lt;typename KeyContainer::value_type, typename MappedContainer::value_type,
+                less&amp;lt;typename KeyContainer::value_type&amp;gt;, KeyContainer, MappedContainer&amp;gt;; // (2)
+
+  template&amp;lt;class KeyContainer, class MappedContainer, class Compare, class Allocator&amp;gt;
+  flat_map(KeyContainer, MappedContainer, Compare, Allocator)
+    -&amp;gt; flat_map&amp;lt;typename KeyContainer::value_type, typename MappedContainer::value_type,
+                Compare, KeyContainer, MappedContainer&amp;gt;;                                 // (3)
+
+  template&amp;lt;class KeyContainer, class MappedContainer,
+           class Compare = less&amp;lt;typename KeyContainer::value_type&amp;gt;&amp;gt;
+  flat_map(sorted_unique_t, KeyContainer, MappedContainer, Compare = Compare())
+    -&amp;gt; flat_map&amp;lt;typename KeyContainer::value_type, typename MappedContainer::value_type,
+                Compare, KeyContainer, MappedContainer&amp;gt;;                                 // (4)
+
+  template&amp;lt;class KeyContainer, class MappedContainer, class Allocator&amp;gt;
+  flat_map(sorted_unique_t, KeyContainer, MappedContainer, Allocator)
+    -&amp;gt; flat_map&amp;lt;typename KeyContainer::value_type, typename MappedContainer::value_type,
+                less&amp;lt;typename KeyContainer::value_type&amp;gt;, KeyContainer, MappedContainer&amp;gt;; // (5)
+
+  template&amp;lt;class KeyContainer, class MappedContainer, class Compare, class Allocator&amp;gt;
+  flat_map(sorted_unique_t, KeyContainer, MappedContainer, Compare, Allocator)
+    -&amp;gt; flat_map&amp;lt;typename KeyContainer::value_type, typename MappedContainer::value_type,
+                Compare, KeyContainer, MappedContainer&amp;gt;;                                 // (6)
+
+  template&amp;lt;class InputIterator, class Compare = less&amp;lt;iter_key_t&amp;lt;InputIterator&amp;gt;&amp;gt;&amp;gt;
+  flat_map(InputIterator, InputIterator, Compare = Compare())
+    -&amp;gt; flat_map&amp;lt;iter_key_t&amp;lt;InputIterator&amp;gt;, iter_val_t&amp;lt;InputIterator&amp;gt;, Compare&amp;gt;;          // (7)
+
+  template&amp;lt;class InputIterator, class Compare = less&amp;lt;iter_key_t&amp;lt;InputIterator&amp;gt;&amp;gt;&amp;gt;
+  flat_map(sorted_unique_t, InputIterator, InputIterator, Compare = Compare())
+    -&amp;gt; flat_map&amp;lt;iter_key_t&amp;lt;InputIterator&amp;gt;, iter_val_t&amp;lt;InputIterator&amp;gt;, Compare&amp;gt;;          // (8)
+
+  template&amp;lt;ranges::input_range R, class Compare = less&amp;lt;range_key_t&amp;lt;R&amp;gt;&amp;gt;,
+           class Allocator = allocator&amp;lt;byte&amp;gt;&amp;gt;
+  flat_map(from_range_t, R&amp;amp;&amp;amp;, Compare = Compare(), Allocator = Allocator())
+    -&amp;gt; flat_map&amp;lt;range_key_t&amp;lt;R&amp;gt;, range_val_t&amp;lt;R&amp;gt;, Compare,
+                vector&amp;lt;range_key_t&amp;lt;R&amp;gt;, alloc_rebind&amp;lt;Allocator, range_key_t&amp;lt;R&amp;gt;&amp;gt;&amp;gt;,
+                vector&amp;lt;range_val_t&amp;lt;R&amp;gt;, alloc_rebind&amp;lt;Allocator, range_val_t&amp;lt;R&amp;gt;&amp;gt;&amp;gt;&amp;gt;;        // (9)
+
+  template&amp;lt;ranges::input_range R, class Allocator&amp;gt;
+  flat_map(from_range_t, R&amp;amp;&amp;amp;, Allocator)
+    -&amp;gt; flat_map&amp;lt;range_key_t&amp;lt;R&amp;gt;, range_val_t&amp;lt;R&amp;gt;, less&amp;lt;range_key_t&amp;lt;R&amp;gt;&amp;gt;,
+                vector&amp;lt;range_key_t&amp;lt;R&amp;gt;, alloc_rebind&amp;lt;Allocator, range_key_t&amp;lt;R&amp;gt;&amp;gt;&amp;gt;,
+                vector&amp;lt;range_val_t&amp;lt;R&amp;gt;, alloc_rebind&amp;lt;Allocator, range_val_t&amp;lt;R&amp;gt;&amp;gt;&amp;gt;&amp;gt;;        // (10)
+
+  template&amp;lt;class Key, class T, class Compare = less&amp;lt;Key&amp;gt;&amp;gt;
+  flat_map(initializer_list&amp;lt;pair&amp;lt;Key, T&amp;gt;&amp;gt;, Compare = Compare())
+    -&amp;gt; flat_map&amp;lt;Key, T, Compare&amp;gt;;                                                        // (11)
+
+  template&amp;lt;class Key, class T, class Compare = less&amp;lt;Key&amp;gt;&amp;gt;
+  flat_map(sorted_unique_t, initializer_list&amp;lt;pair&amp;lt;Key, T&amp;gt;&amp;gt;, Compare = Compare())
+    -&amp;gt; flat_map&amp;lt;Key, T, Compare&amp;gt;;                                                        // (12)
+```
+* vector[link /reference/vector/vector.md]
+* from_range_t[link ../../ranges/from_range_t.md]
+* sorted_unique_t[link ../sorted_unique_t.md]
+* remove_const_t[link /reference/type_traits/remove_const.md]
+* pair[link /reference/utility/pair.md]
+* iterator_traits[link /reference/iterator/iterator_traits.md]
+* less[link /reference/functional/less.md]
+* allocator[link /reference/memory/allocator.md]
+* initializer_list[link /reference/initializer_list/initializer_list.md]
+* ranges::input_range[link /reference/ranges/input_range.md]
+* allocator_traits[link /reference/memory/allocator_traits.md]
+* byte[link /reference/cstddef/byte.md]
+
+
+## 概要
+`std::flat_map`クラステンプレートの型推論補助。
+
+- (1) : キーのコンテナ、値のコンテナ、比較関数からの推論
+- (2) : キーのコンテナ、値のコンテナ、アロケータからの推論
+- (3) : キーのコンテナ、値のコンテナ、比較関数、アロケータからの推論
+- (4) : キーのコンテナ、値のコンテナ、比較関数からの推論
+- (5) : キーのコンテナ、値のコンテナ、アロケータからの推論
+- (6) : キーのコンテナ、値のコンテナ、比較関数、アロケータからの推論
+- (7) : イテレータ範囲、比較関数からの推論
+- (8) : イテレータ範囲、比較関数からの推論
+- (9) : Range、比較関数、アロケータからの推論
+- (10) : Range、アロケータからの推論
+- (11) : 初期化子リスト、比較関数からの推論
+- (12) : 初期化子リスト、比較関数からの推論
+
+
+## 備考
+- C++23時点において、`flat_map`の推論補助は使いにくい。これはイテレータ範囲や組でのキーの型が`const Key`となっているためだ。この使いにくさは、将来の言語拡張で改良される可能性がある。
+    ```cpp
+    flat_map m = {{1, 1}, {2, 2}, {3, 3}}; // コンパイルエラー！ 初期化子リストからconst Keyを導出できない
+    flat_map m2 = initializer_list&amp;lt;pair&amp;lt;const int, int&amp;gt;&amp;gt;({{1, 1}, {2, 2}, {3, 3}}); // OK
+    ```
+
+
+## バージョン
+### 言語
+- C++23
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
+
+
+## 参照
+- [LWG Issue 3025. Map-like container deduction guides should use `pair&amp;lt;Key, T&amp;gt;`, not `pair&amp;lt;const Key, T&amp;gt;`](https://wg21.cmeerw.net/lwg/issue3025)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>flat_multimap -- add op_deduction_guide to flat_map. (#1078)</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_multimap.html"/>
      <id>c55d9f2489cf0f0a96a65a511e8862953667746d:reference/flat_map/flat_multimap.md</id>
      <updated>2025-02-11T09:56:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_multimap.md b/reference/flat_map/flat_multimap.md
index 414944d1a..cc49593b5 100644
--- a/reference/flat_map/flat_multimap.md
+++ b/reference/flat_map/flat_multimap.md
@@ -145,7 +145,7 @@ namespace std {
 
 | 名前 | 説明 | 対応バージョン |
 |---------------------------------------------|------------------------------------|-------|
-| [`(deduction_guide)`](flat_multimap/op_deduction_guide.md.nolink) | クラステンプレートの推論補助 | C++23 |
+| [`(deduction_guide)`](flat_multimap/op_deduction_guide.md) | クラステンプレートの推論補助 | C++23 |
 
 
 ## その他
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>推論補助 -- add op_deduction_guide to flat_map. (#1078)</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_multimap/op_deduction_guide.html"/>
      <id>c55d9f2489cf0f0a96a65a511e8862953667746d:reference/flat_map/flat_multimap/op_deduction_guide.md</id>
      <updated>2025-02-11T09:56:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_multimap/op_deduction_guide.md b/reference/flat_map/flat_multimap/op_deduction_guide.md
new file mode 100644
index 000000000..811665f2a
--- /dev/null
+++ b/reference/flat_map/flat_multimap/op_deduction_guide.md
@@ -0,0 +1,132 @@
+# 推論補助
+* flat_map[meta header]
+* std[meta namespace]
+* flat_multimap[meta class]
+* cpp23[meta cpp]
+
+```cpp
+namespace std {
+  // 説明用の型
+  template &amp;lt;class InputIterator&amp;gt;
+  using iter_key_t = remove_const_t&amp;lt;typename iterator_traits&amp;lt;InputIterator&amp;gt;::value_type::first_type&amp;gt;;
+  template &amp;lt;class InputIterator&amp;gt;
+  using iter_val_t = typename iterator_traits&amp;lt;InputIterator&amp;gt;::value_type::second_type;
+  template&amp;lt;ranges::input_range Range&amp;gt;
+  using range_key_t = remove_const_t&amp;lt;typename ranges::range_value_t&amp;lt;Range&amp;gt;::first_type&amp;gt;;
+  template&amp;lt;ranges::input_range Range&amp;gt;
+  using range_val_t = typename ranges::range_value_t&amp;lt;Range&amp;gt;::second_type;
+  template&amp;lt;class Allocator, class T&amp;gt;
+  using alloc_rebind = typename allocator_traits&amp;lt;Allocator&amp;gt;::template rebind_alloc&amp;lt;T&amp;gt;;
+
+  template&amp;lt;class KeyContainer, class MappedContainer,
+           class Compare = less&amp;lt;typename KeyContainer::value_type&amp;gt;&amp;gt;
+  flat_multimap(KeyContainer, MappedContainer, Compare = Compare())
+    -&amp;gt; flat_multimap&amp;lt;typename KeyContainer::value_type, typename MappedContainer::value_type,
+                Compare, KeyContainer, MappedContainer&amp;gt;;                                      // (1)
+
+  template&amp;lt;class KeyContainer, class MappedContainer, class Allocator&amp;gt;
+  flat_multimap(KeyContainer, MappedContainer, Allocator)
+    -&amp;gt; flat_multimap&amp;lt;typename KeyContainer::value_type, typename MappedContainer::value_type,
+                less&amp;lt;typename KeyContainer::value_type&amp;gt;, KeyContainer, MappedContainer&amp;gt;;      // (2)
+
+  template&amp;lt;class KeyContainer, class MappedContainer, class Compare, class Allocator&amp;gt;
+  flat_multimap(KeyContainer, MappedContainer, Compare, Allocator)
+    -&amp;gt; flat_multimap&amp;lt;typename KeyContainer::value_type, typename MappedContainer::value_type,
+                Compare, KeyContainer, MappedContainer&amp;gt;;                                      // (3)
+
+  template&amp;lt;class KeyContainer, class MappedContainer,
+           class Compare = less&amp;lt;typename KeyContainer::value_type&amp;gt;&amp;gt;
+  flat_multimap(sorted_equivalent_t, KeyContainer, MappedContainer, Compare = Compare())
+    -&amp;gt; flat_multimap&amp;lt;typename KeyContainer::value_type, typename MappedContainer::value_type,
+                Compare, KeyContainer, MappedContainer&amp;gt;;                                      // (4)
+
+  template&amp;lt;class KeyContainer, class MappedContainer, class Allocator&amp;gt;
+  flat_multimap(sorted_equivalent_t, KeyContainer, MappedContainer, Allocator)
+    -&amp;gt; flat_multimap&amp;lt;typename KeyContainer::value_type, typename MappedContainer::value_type,
+                less&amp;lt;typename KeyContainer::value_type&amp;gt;, KeyContainer, MappedContainer&amp;gt;;      // (5)
+
+  template&amp;lt;class KeyContainer, class MappedContainer, class Compare, class Allocator&amp;gt;
+  flat_multimap(sorted_equivalent_t, KeyContainer, MappedContainer, Compare, Allocator)
+    -&amp;gt; flat_multimap&amp;lt;typename KeyContainer::value_type, typename MappedContainer::value_type,
+                Compare, KeyContainer, MappedContainer&amp;gt;;                                      // (6)
+
+  template&amp;lt;class InputIterator, class Compare = less&amp;lt;iter_key_t&amp;lt;InputIterator&amp;gt;&amp;gt;&amp;gt;
+  flat_multimap(InputIterator, InputIterator, Compare = Compare())
+    -&amp;gt; flat_multimap&amp;lt;iter_key_t&amp;lt;InputIterator&amp;gt;, iter_val_t&amp;lt;InputIterator&amp;gt;, Compare&amp;gt;;          // (7)
+
+  template&amp;lt;class InputIterator, class Compare = less&amp;lt;iter_key_t&amp;lt;InputIterator&amp;gt;&amp;gt;&amp;gt;
+  flat_multimap(sorted_equivalent_t, InputIterator, InputIterator, Compare = Compare())
+    -&amp;gt; flat_multimap&amp;lt;iter_key_t&amp;lt;InputIterator&amp;gt;, iter_val_t&amp;lt;InputIterator&amp;gt;, Compare&amp;gt;;          // (8)
+
+  template&amp;lt;ranges::input_range R, class Compare = less&amp;lt;range_key_t&amp;lt;R&amp;gt;&amp;gt;,
+           class Allocator = allocator&amp;lt;byte&amp;gt;&amp;gt;
+  flat_multimap(from_range_t, R&amp;amp;&amp;amp;, Compare = Compare(), Allocator = Allocator())
+    -&amp;gt; flat_multimap&amp;lt;range_key_t&amp;lt;R&amp;gt;, range_val_t&amp;lt;R&amp;gt;, Compare,
+                vector&amp;lt;range_key_t&amp;lt;R&amp;gt;, alloc_rebind&amp;lt;Allocator, range_key_t&amp;lt;R&amp;gt;&amp;gt;&amp;gt;,
+                vector&amp;lt;range_val_t&amp;lt;R&amp;gt;, alloc_rebind&amp;lt;Allocator, range_val_t&amp;lt;R&amp;gt;&amp;gt;&amp;gt;&amp;gt;;             // (9)
+
+  template&amp;lt;ranges::input_range R, class Allocator&amp;gt;
+  flat_multimap(from_range_t, R&amp;amp;&amp;amp;, Allocator)
+    -&amp;gt; flat_multimap&amp;lt;range_key_t&amp;lt;R&amp;gt;, range_val_t&amp;lt;R&amp;gt;, less&amp;lt;range_key_t&amp;lt;R&amp;gt;&amp;gt;,
+                vector&amp;lt;range_key_t&amp;lt;R&amp;gt;, alloc_rebind&amp;lt;Allocator, range_key_t&amp;lt;R&amp;gt;&amp;gt;&amp;gt;,
+                vector&amp;lt;range_val_t&amp;lt;R&amp;gt;, alloc_rebind&amp;lt;Allocator, range_val_t&amp;lt;R&amp;gt;&amp;gt;&amp;gt;&amp;gt;;             // (10)
+
+  template&amp;lt;class Key, class T, class Compare = less&amp;lt;Key&amp;gt;&amp;gt;
+  flat_multimap(initializer_list&amp;lt;pair&amp;lt;Key, T&amp;gt;&amp;gt;, Compare = Compare())
+    -&amp;gt; flat_multimap&amp;lt;Key, T, Compare&amp;gt;;                                                        // (11)
+
+  template&amp;lt;class Key, class T, class Compare = less&amp;lt;Key&amp;gt;&amp;gt;
+  flat_multimap(sorted_equivalent_t, initializer_list&amp;lt;pair&amp;lt;Key, T&amp;gt;&amp;gt;, Compare = Compare())
+    -&amp;gt; flat_multimap&amp;lt;Key, T, Compare&amp;gt;;                                                        // (12)
+```
+* vector[link /reference/vector/vector.md]
+* from_range_t[link ../../ranges/from_range_t.md]
+* sorted_equivalent_t[link ../sorted_equivalent_t.md]
+* remove_const_t[link /reference/type_traits/remove_const.md]
+* pair[link /reference/utility/pair.md]
+* iterator_traits[link /reference/iterator/iterator_traits.md]
+* less[link /reference/functional/less.md]
+* allocator[link /reference/memory/allocator.md]
+* initializer_list[link /reference/initializer_list/initializer_list.md]
+* ranges::input_range[link /reference/ranges/input_range.md]
+* allocator_traits[link /reference/memory/allocator_traits.md]
+* byte[link /reference/cstddef/byte.md]
+
+
+## 概要
+`std::flat_multimap`クラステンプレートの型推論補助。
+
+- (1) : キーのコンテナ、値のコンテナ、比較関数からの推論
+- (2) : キーのコンテナ、値のコンテナ、アロケータからの推論
+- (3) : キーのコンテナ、値のコンテナ、比較関数、アロケータからの推論
+- (4) : キーのコンテナ、値のコンテナ、比較関数からの推論
+- (5) : キーのコンテナ、値のコンテナ、アロケータからの推論
+- (6) : キーのコンテナ、値のコンテナ、比較関数、アロケータからの推論
+- (7) : イテレータ範囲、比較関数からの推論
+- (8) : イテレータ範囲、比較関数からの推論
+- (9) : Range、比較関数、アロケータからの推論
+- (10) : Range、アロケータからの推論
+- (11) : 初期化子リスト、比較関数からの推論
+- (12) : 初期化子リスト、比較関数からの推論
+
+
+## 備考
+- C++23時点において、`flat_multimap`の推論補助は使いにくい。これはイテレータ範囲や組でのキーの型が`const Key`となっているためだ。この使いにくさは、将来の言語拡張で改良される可能性がある。
+    ```cpp
+    flat_multimap m = {{1, 1}, {2, 2}, {3, 3}}; // コンパイルエラー！ 初期化子リストからconst Keyを導出できない
+    flat_multimap m2 = initializer_list&amp;lt;pair&amp;lt;const int, int&amp;gt;&amp;gt;({{1, 1}, {2, 2}, {3, 3}}); // OK
+    ```
+
+
+## バージョン
+### 言語
+- C++23
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
+
+
+## 参照
+- [LWG Issue 3025. Map-like container deduction guides should use `pair&amp;lt;Key, T&amp;gt;`, not `pair&amp;lt;const Key, T&amp;gt;`](https://wg21.cmeerw.net/lwg/issue3025)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>assoc_legendre -- Merge pull request #1407 from akinomyoga/math-functions</title>
      <link href="https://cpprefjp.github.io/reference/cmath/assoc_legendre.html"/>
      <id>90d18978aa30dee75c8dd471283a7ba1c961f9e8:reference/cmath/assoc_legendre.md</id>
      <updated>2025-02-09T21:40:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/assoc_legendre.md b/reference/cmath/assoc_legendre.md
index dc96d1b09..41ec51eb7 100644
--- a/reference/cmath/assoc_legendre.md
+++ b/reference/cmath/assoc_legendre.md
@@ -59,6 +59,30 @@ $$
 - `l &amp;gt;= 128` の場合、この関数の呼び出しの効果は実装定義である
 - (1) : C++23では、拡張浮動小数点数型を含む浮動小数点数型へのオーバーロードとして定義された
 
+### 負の m の対応
+この標準関数は $m$ が正の場合にしか対応していない。
+一方でルジャンドル陪関数はロドリゲスの公式を用いて負の $m$ に対して自然に拡張され、
+このことは球面調和関数を定義する上でも使われる。
+負の $m$ に対してもルジャンドル陪関数を計算する必要がある場合は、関係式
+$$ P_l^{-m}(x) = (-1)^m \frac{(l-m)!}{(l+m)!} P_l^m(x) $$
+を用いる必要がある。
+
+```cpp
+#include &amp;lt;cmath&amp;gt;
+
+// 負の m にも対応した実装例
+double assoc_legendre(unsigned l, int m, double x) {
+  if (m &amp;gt;= 0)
+    return std::assoc_legendre(l, (unsigned) m, x);
+  else
+    return std::pow(-1.0, m) * (std::tgamma(1.0 + l + m) / std::tgamma(1.0 + l - m)) * std::assoc_legendre(l, (unsigned) -m, x);
+}
+```
+* std::assoc_legendre[color ff0000]
+* std::tgamma[link tgamma.md]
+
+上記の例では簡単のために階乗をガンマ関数 $n! = \Gamma(n + 1)$ ([`tgamma`](tgamma.md)) で計算しているが、
+計算効率やオーバーフローなどを考えると、直接 $(l + |m|)\cdots(l - |m| + 1)$ で割り算したり、係数を事前計算しておくなど工夫すると良い。
 
 ## 例
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>legendre -- Merge pull request #1407 from akinomyoga/math-functions</title>
      <link href="https://cpprefjp.github.io/reference/cmath/legendre.html"/>
      <id>90d18978aa30dee75c8dd471283a7ba1c961f9e8:reference/cmath/legendre.md</id>
      <updated>2025-02-09T21:40:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/legendre.md b/reference/cmath/legendre.md
index 5e35b3d88..9c9e54241 100644
--- a/reference/cmath/legendre.md
+++ b/reference/cmath/legendre.md
@@ -103,6 +103,9 @@ legendre(3, 1) = 1
 - [ICC](/implementation.md#icc): ??
 - [Visual C++](/implementation.md#visual_cpp): ??
 
+### 備考
+- GCC 7, 8 には $x$ として [-1.0, 1.0] の範囲外の値を渡した時に、[`std::domain_error`](/reference/stdexcept.md) を投げるバグがあった (GCC 7.5, 8.2, 8.4 [mark verified])。
+  GCC 9 以降では直っている (GCC 9.3, 10.5, 11.4, 12.3, 13.2, 15.0 [mark verified])。
 
 ## 実装例
 ### 閉形式
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>lgamma -- Merge pull request #1407 from akinomyoga/math-functions</title>
      <link href="https://cpprefjp.github.io/reference/cmath/lgamma.html"/>
      <id>90d18978aa30dee75c8dd471283a7ba1c961f9e8:reference/cmath/lgamma.md</id>
      <updated>2025-02-09T21:40:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/lgamma.md b/reference/cmath/lgamma.md
index bcb8dd552..03027e27d 100644
--- a/reference/cmath/lgamma.md
+++ b/reference/cmath/lgamma.md
@@ -35,7 +35,7 @@ namespace std {
 * Integral[italic]
 
 ## 概要
-ガンマ関数の絶対値の自然対数を求める。
+ガンマ関数 $\Gamma(x)$ ([`tgamma`](tgamma.md)) の絶対値の自然対数を求める。
 
 - (1) : `float`に対するオーバーロード
 - (2) : `double`に対するオーバーロード
@@ -60,7 +60,8 @@ namespace std {
     - `x = -∞` の場合、戻り値は `+∞` となる。
     - `x = +∞` の場合、戻り値は `+∞` となる。
 - C++23では、(1)、(2)、(3)が(4)に統合され、拡張浮動小数点数型を含む浮動小数点数型へのオーバーロードとして定義された
-
+- この関数はガンマ関数 ([`tgamma`](tgamma.md)) がオーバーフローするような場合に使う。
+  具体例については[ガンマ関数の備考](tgamma.md#remarks-lgamma)を参照のこと。
 
 ## 例
 ```cpp example
@@ -107,6 +108,8 @@ lgamma(+∞)  = inf
 
 - GCC 4.6.1 以上
 
+## 関連項目
+- ガンマ関数 [`tgamma`](tgamma.md)
 
 ## 参照
 - [P1467R9 Extended floating-point types and standard names](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p1467r9.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sph_legendre -- Merge pull request #1407 from akinomyoga/math-functions</title>
      <link href="https://cpprefjp.github.io/reference/cmath/sph_legendre.html"/>
      <id>90d18978aa30dee75c8dd471283a7ba1c961f9e8:reference/cmath/sph_legendre.md</id>
      <updated>2025-02-09T21:40:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/sph_legendre.md b/reference/cmath/sph_legendre.md
index 1f32cba3d..daa2b669b 100644
--- a/reference/cmath/sph_legendre.md
+++ b/reference/cmath/sph_legendre.md
@@ -47,7 +47,7 @@ namespace std {
 
 
 ## 戻り値
-引数 `l`, `m`, `theta` について $Y_l^m(\theta, 0)$ を返す。
+引数 `l`, `m`, `theta` について $Y_l^m(\theta, 0)$ (ただし $0 \le m \le l$) を返す。
 $Y_l^m(\theta, \phi)$ は球面調和関数
 $$
 Y_l^m(\theta, \phi) = (-1)^m \sqrt{\frac{2l + 1}{4\pi} \frac{(l - m)!}{(l + m)!}} P_l^m(\cos \theta) \exp(i m \phi)
@@ -56,23 +56,85 @@ $$
 である。
 $P_l^m$ はルジャンドル陪関数 ([`assoc_legendre`](assoc_legendre.md)) である。
 
-
 ## 備考
 - `l &amp;gt;= 128` の場合、この関数の呼び出しの効果は実装定義である
 - (1) : C++23では、拡張浮動小数点数型を含む浮動小数点数型へのオーバーロードとして定義された
 
+### 球面調和関数
+球面調和関数として使う場合には $\phi$ 依存性は自分で与える必要がある。
+また、この標準関数は $m\ge0$ にしか対応していないので、$m &amp;lt; 0$ の時の球面調和関数を計算したければ自分で $Y_l^{|m|}(\theta,0)$ の値を調節して使う必要がある。
+ルジャンドル陪関数の性質 $P_l^{-m}(x) = (-1)^m [(l - m)!/(l + m)!] P_l^m(x)$ より、一般の $m$ の球面調和関数は
+$$
+\begin{align*}
+Y_l^m(\theta, \phi)
+  &amp;amp;= (-1)^{(m+|m|)/2} \sqrt{\frac{2l + 1}{4\pi} \frac{(l - |m|)!}{(l + |m|)!}} P_l^{|m|}(\cos \theta) e^{i m \phi} \\
+  &amp;amp;= \begin{cases}
+    Y_l^{m}(\theta, 0) e^{im\phi}, &amp;amp; (0 \le m \le l), \\
+    (-1)^{|m|} Y_l^{|m|}(\theta, 0) e^{im\phi}, &amp;amp; (-l \le m &amp;lt; 0).
+  \end{cases}
+\end{align*}
+$$
+で与えられる。
+
+```cpp
+#include &amp;lt;cmath&amp;gt;
+#include &amp;lt;complex&amp;gt;
+#include &amp;lt;numbers&amp;gt;
+
+// 球面調和関数の実装例
+std::complex&amp;lt;double&amp;gt; sph_harmonics(unsigned l, int m, double theta, double phi) {
+  if (m &amp;gt;= 0)
+    return std::sph_legendre(l, (unsigned) m, theta) * std::polar(1.0, m * phi);
+  else
+    return std::sph_legendre(l, (unsigned) -m, theta) * std::polar(1.0, m * (phi - std::numbers::pi));
+}
+```
+* std::sph_legendre[color ff0000]
+* std::polar[link /reference/complex/complex/polar.md]
+* std::numbers::pi[link /reference/numbers/pi.md]
+
+また線形結合を取り直して実数にした、実数球面調和関数 $Y_{lm}(\theta,\phi)$ を計算することもできる。
+
+$$
+Y_{lm}(\theta,\phi)
+= \begin{cases}
+  \frac{(-1)^m Y_l^{|m|}(\theta,\phi) - Y_l^{-|m|}(\theta,\phi)}{\sqrt{2} i} = \sqrt{2} (-1)^{|m|} Y_l^{|m|}(\theta, 0) \sin(|m|\phi), &amp;amp; (-l \le m &amp;lt; 0), \\
+  Y_l^0 = Y_l^0(\theta, 0), &amp;amp; (m = 0), \\
+  \frac{(-1)^m Y_l^{|m|}(\theta,\phi) + Y_l^{-|m|}(\theta,\phi)}{\sqrt{2}} = \sqrt{2} (-1)^{|m|} Y_l^{|m|}(\theta, 0) \cos(|m|\phi), &amp;amp; (0 &amp;lt; m \le l).
+\end{cases}
+$$
+
+```cpp
+#include &amp;lt;cmath&amp;gt;
+#include &amp;lt;numbers&amp;gt;
+
+// 実数球面調和関数の実装例
+double real_sph_harmonics(unsigned l, int m, double theta, double phi) {
+  if (m == 0)
+    return std::sph_legendre(l, 0u, theta);
+  else if (m &amp;gt; 0)
+    return std::numbers::sqrt2 * std::sph_legendre(l, (unsigned) m, theta) * std::cos(m * (phi - std::numbers::pi));
+  else
+    return std::numbers::sqrt2 * std::sph_legendre(l, (unsigned) -m, theta) * std::sin(-m * (phi - std::numbers::pi));
+}
+```
+* std::sph_legendre[color ff0000]
+* std::numbers::pi[link /reference/numbers/pi.md]
+* std::numbers::sqrt2[link /reference/numbers/sqrt2.md]
 
 ## 例
 ```cpp example
 #include &amp;lt;cmath&amp;gt;
 #include &amp;lt;complex&amp;gt;
+#include &amp;lt;numbers&amp;gt;
 #include &amp;lt;iostream&amp;gt;
 
-constexpr double pi = 3.141592653589793;
-
 // 球面調和関数
-std::complex&amp;lt;double&amp;gt; sph_harmonics(unsigned l, unsigned m, double theta, double phi) {
-  return std::sph_legendre(l, m, theta) * std::polar(1.0, m * phi);
+std::complex&amp;lt;double&amp;gt; sph_harmonics(unsigned l, int m, double theta, double phi) {
+  if (m &amp;gt;= 0)
+    return std::sph_legendre(l, (unsigned) m, theta) * std::polar(1.0, m * phi);
+  else
+    return std::sph_legendre(l, (unsigned) -m, theta) * std::polar(1.0, m * (phi - std::numbers::pi));
 }
 
 int main() {
@@ -82,9 +144,9 @@ int main() {
 
   std::cout &amp;lt;&amp;lt; &amp;#34;#θ / π\tφ / π\tY_&amp;#34; &amp;lt;&amp;lt; l &amp;lt;&amp;lt; &amp;#34;^&amp;#34; &amp;lt;&amp;lt; m &amp;lt;&amp;lt; &amp;#34;(θ, φ)\n&amp;#34;;
   for (double t : {0., 0.25, 0.5, 0.75, 1.}) {
-    double theta = t * pi;
+    double theta = t * std::numbers::pi;
     for (double p : {0., 0.25, 0.5, 0.75, 1., 1.25, 1.5, 1.75, 2.}) {
-      double phi = p * pi / 4;
+      double phi = p * std::numbers::pi / 4;
       std::cout &amp;lt;&amp;lt; t &amp;lt;&amp;lt; &amp;#34;\t&amp;#34; &amp;lt;&amp;lt; p &amp;lt;&amp;lt; &amp;#34;\t&amp;#34; &amp;lt;&amp;lt; sph_harmonics(l, m, theta, phi) &amp;lt;&amp;lt; &amp;#34;\n&amp;#34;;
       if (t == 0 || t == 1) break;
     }
@@ -93,6 +155,7 @@ int main() {
 ```
 * std::sph_legendre[color ff0000]
 * std::polar[link /reference/complex/complex/polar.md]
+* std::numbers::pi[link /reference/numbers/pi.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>tgamma -- Merge pull request #1407 from akinomyoga/math-functions</title>
      <link href="https://cpprefjp.github.io/reference/cmath/tgamma.html"/>
      <id>90d18978aa30dee75c8dd471283a7ba1c961f9e8:reference/cmath/tgamma.md</id>
      <updated>2025-02-09T21:40:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/tgamma.md b/reference/cmath/tgamma.md
index 4f3e397eb..615ff7717 100644
--- a/reference/cmath/tgamma.md
+++ b/reference/cmath/tgamma.md
@@ -47,12 +47,12 @@ namespace std {
 
 
 ## 戻り値
-引数 `x` のガンマ関数を返す。
+引数 `x` のガンマ関数 $\Gamma(x)$ を返す。
 
+$$ \Gamma (x) = \int_0^\infty t^{x-1} e^{-t} dt $$
 
 ## 備考
-- $$ f(x) = \Gamma (x) $$
-- ガンマ関数は階乗の一般化である。
+- ガンマ関数は階乗の一般化である。階乗はガンマ関数を用いて $n! = \Gamma(n + 1)$ で計算できる。
 - C++11 以降では、処理系が IEC 60559 に準拠している場合（[`std::numeric_limits`](../limits/numeric_limits.md)`&amp;lt;T&amp;gt;::`[`is_iec559`](../limits/numeric_limits/is_iec559.md)`() != false`）、以下の規定が追加される。
     - `x = ±0` の場合、戻り値は `±∞` となり、
     [`FE_DIVBYZERO`](../cfenv/fe_divbyzero.md)（ゼロ除算浮動小数点例外）が発生する。
@@ -64,6 +64,32 @@ namespace std {
 - `gamma` という関数は既にあったが処理系によって定義が違ったため、本当の (true) ガンマ関数 `tgamma` と名付けられた。
 - C++23では、(1)、(2)、(3)が(4)に統合され、拡張浮動小数点数型を含む浮動小数点数型へのオーバーロードとして定義された
 
+### &amp;lt;a id=&amp;#34;remarks-lgamma&amp;#34; href=&amp;#34;#remarks-lgamma&amp;#34;&amp;gt;lgamma との使い分け&amp;lt;/a&amp;gt;
+ガンマ関数は急激に増加し容易にオーバーフローするので、代わりにガンマ関数の結果を自然対数で返す関数 [`lgamma`](lgamma.md) を用いた方が良いことが多くある。
+例えばガンマ関数の比を計算する場合には、 ガンマ関数の対数の差を取ってから指数関数 [`std::exp`](exp.md) を適用するのが賢明である。
+
+$$ \frac{\Gamma(2026)}{\Gamma(2025)} = \exp[\ln\Gamma(2026) - \ln\Gamma(2025)] $$
+
+```cpp example
+#include &amp;lt;cmath&amp;gt;
+#include &amp;lt;iostream&amp;gt;
+int main() {
+  std::cout &amp;lt;&amp;lt; std::tgamma(2026.0) / std::tgamma(2025.0) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::exp(std::lgamma(2026.0) - std::lgamma(2025.0)) &amp;lt;&amp;lt; std::endl;
+}
+```
+* std::tgamma[color ff0000]
+* std::lgamma[color 0000ff][link lgamma.md]
+
+出力例
+```
+-nan
+2025
+```
+
+上の結果では、直接ガンマ関数を計算した場合はオーバーフローによって inf / inf となり最終結果が -nan になっているが、`lgamma` を使った場合には正しい値が計算できている。
+ただし、`lgamma` は飽くまでガンマ関数の「絶対値」の対数であることに注意する。
+ガンマ関数の引数が負になる場合はガンマ関数が負の値を取りうるので符号は別に求める必要がある。
 
 ## 例
 ```cpp example
@@ -110,6 +136,8 @@ tgamma(+∞)  = inf
 
 - GCC 4.6.1 以上
 
+## 関連項目
+- ガンマ関数の絶対値の自然対数 [`lgamma`](lgamma.md)
 
 ## 参照
 - [P1467R9 Extended floating-point types and standard names](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p1467r9.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>lgamma -- cmath (tgamma): lgamma を使うべき場合について記述</title>
      <link href="https://cpprefjp.github.io/reference/cmath/lgamma.html"/>
      <id>932634a1150d4190d7060f9810f699e98061f462:reference/cmath/lgamma.md</id>
      <updated>2025-02-09T16:31:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/lgamma.md b/reference/cmath/lgamma.md
index 60de4faba..03027e27d 100644
--- a/reference/cmath/lgamma.md
+++ b/reference/cmath/lgamma.md
@@ -60,7 +60,8 @@ namespace std {
     - `x = -∞` の場合、戻り値は `+∞` となる。
     - `x = +∞` の場合、戻り値は `+∞` となる。
 - C++23では、(1)、(2)、(3)が(4)に統合され、拡張浮動小数点数型を含む浮動小数点数型へのオーバーロードとして定義された
-
+- この関数はガンマ関数 ([`tgamma`](tgamma.md)) がオーバーフローするような場合に使う。
+  具体例については[ガンマ関数の備考](tgamma.md#remarks-lgamma)を参照のこと。
 
 ## 例
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>tgamma -- cmath (tgamma): lgamma を使うべき場合について記述</title>
      <link href="https://cpprefjp.github.io/reference/cmath/tgamma.html"/>
      <id>932634a1150d4190d7060f9810f699e98061f462:reference/cmath/tgamma.md</id>
      <updated>2025-02-09T16:31:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/tgamma.md b/reference/cmath/tgamma.md
index 4dcbd333a..615ff7717 100644
--- a/reference/cmath/tgamma.md
+++ b/reference/cmath/tgamma.md
@@ -64,6 +64,32 @@ $$ \Gamma (x) = \int_0^\infty t^{x-1} e^{-t} dt $$
 - `gamma` という関数は既にあったが処理系によって定義が違ったため、本当の (true) ガンマ関数 `tgamma` と名付けられた。
 - C++23では、(1)、(2)、(3)が(4)に統合され、拡張浮動小数点数型を含む浮動小数点数型へのオーバーロードとして定義された
 
+### &amp;lt;a id=&amp;#34;remarks-lgamma&amp;#34; href=&amp;#34;#remarks-lgamma&amp;#34;&amp;gt;lgamma との使い分け&amp;lt;/a&amp;gt;
+ガンマ関数は急激に増加し容易にオーバーフローするので、代わりにガンマ関数の結果を自然対数で返す関数 [`lgamma`](lgamma.md) を用いた方が良いことが多くある。
+例えばガンマ関数の比を計算する場合には、 ガンマ関数の対数の差を取ってから指数関数 [`std::exp`](exp.md) を適用するのが賢明である。
+
+$$ \frac{\Gamma(2026)}{\Gamma(2025)} = \exp[\ln\Gamma(2026) - \ln\Gamma(2025)] $$
+
+```cpp example
+#include &amp;lt;cmath&amp;gt;
+#include &amp;lt;iostream&amp;gt;
+int main() {
+  std::cout &amp;lt;&amp;lt; std::tgamma(2026.0) / std::tgamma(2025.0) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::exp(std::lgamma(2026.0) - std::lgamma(2025.0)) &amp;lt;&amp;lt; std::endl;
+}
+```
+* std::tgamma[color ff0000]
+* std::lgamma[color 0000ff][link lgamma.md]
+
+出力例
+```
+-nan
+2025
+```
+
+上の結果では、直接ガンマ関数を計算した場合はオーバーフローによって inf / inf となり最終結果が -nan になっているが、`lgamma` を使った場合には正しい値が計算できている。
+ただし、`lgamma` は飽くまでガンマ関数の「絶対値」の対数であることに注意する。
+ガンマ関数の引数が負になる場合はガンマ関数が負の値を取りうるので符号は別に求める必要がある。
 
 ## 例
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
</feed>
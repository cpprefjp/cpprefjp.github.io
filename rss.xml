<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2020-10-28T09:07:54.774237</updated>
  <id>cd0dc3d0-fb75-47be-8a18-868dbbb486f4</id>

  
    <entry>
      <title>year_month_weekday -- year_month_weekday : sys_daysとlocal_daysへの型変換演算子を追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday.html"/>
      <id>1b9c361e32f43d3c6c2b56243e5d9519226cfd38:reference/chrono/year_month_weekday.md</id>
      <updated>2020-10-28T18:02:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday.md b/reference/chrono/year_month_weekday.md
index 68928aa78..bde7796a1 100644
--- a/reference/chrono/year_month_weekday.md
+++ b/reference/chrono/year_month_weekday.md
@@ -52,8 +52,8 @@ namespace std::chrono {
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`operator sys_days`](year_month_weekday/op_sys_days.md.nolink)     | システム時間の日付への型変換演算子 | C++20 |
-| [`operator local_days`](year_month_weekday/op_local_days.md.nolink) | ローカル時間の日付への型変換演算子 | C++20 |
+| [`operator sys_days`](year_month_weekday/op_sys_days.md)     | システム時間の日付への型変換演算子 | C++20 |
+| [`operator local_days`](year_month_weekday/op_local_days.md) | ローカル時間の日付への型変換演算子 | C++20 |
 
 
 ### 検証
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator local_days -- year_month_weekday : sys_daysとlocal_daysへの型変換演算子を追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/op_local_days.html"/>
      <id>1b9c361e32f43d3c6c2b56243e5d9519226cfd38:reference/chrono/year_month_weekday/op_local_days.md</id>
      <updated>2020-10-28T18:02:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/op_local_days.md b/reference/chrono/year_month_weekday/op_local_days.md
new file mode 100644
index 000000000..f8a3cce1f
--- /dev/null
+++ b/reference/chrono/year_month_weekday/op_local_days.md
@@ -0,0 +1,71 @@
+# operator local_days
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_weekday[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr explicit operator local_days() const noexcept; // (1) C++20
+```
+* local_days[link /reference/chrono/local_time.md]
+
+## 概要
+`year_month_weekday`オブジェクトをローカル時間の日付に、明示的に型変換する。
+
+
+## 戻り値
+```cpp
+return local_days{sys_days{*this}.time_since_epoch()};
+```
+* local_days[link /reference/chrono/local_time.md]
+* sys_days[link /reference/chrono/sys_time.md]
+* time_since_epoch()[link /reference/chrono/time_point/time_since_epoch.md]
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  // year_month_dayからlocal_daysへの暗黙変換
+  chrono::local_days date1{2020y/3/chrono::Sunday[1]};
+  assert(chrono::year_month_day{date1} == 2020y/3/1);
+
+  chrono::local_days date2{2020y/3/chrono::Sunday[2]};
+  assert(chrono::year_month_day{date2} == 2020y/3/8);
+
+  chrono::local_days date3{2020y/3/chrono::Sunday[0]};
+  assert(chrono::year_month_day{date3} == 2020y/2/23);
+}
+```
+* chrono::local_days[link /reference/chrono/local_time.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* chrono::year_month_day[link /reference/chrono/year_month_day.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+#### 備考
+- GCC 11のtrunkバージョンでは`index() == 0`の場合に間違った値が返る。正式リリース時には直っている可能性がある
+    - [Bug 97613 - `chrono::year_month_weekday` cast to `sys_days` : return bad value if `index() == 0`](https://gcc.gnu.org/bugzilla/show_bug.cgi?id=97613)
+
+
+## 関連項目
+- [`operator sys_days`](op_sys_days.md)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator sys_days -- year_month_weekday : sys_daysとlocal_daysへの型変換演算子を追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/op_sys_days.html"/>
      <id>1b9c361e32f43d3c6c2b56243e5d9519226cfd38:reference/chrono/year_month_weekday/op_sys_days.md</id>
      <updated>2020-10-28T18:02:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/op_sys_days.md b/reference/chrono/year_month_weekday/op_sys_days.md
new file mode 100644
index 000000000..4150654e7
--- /dev/null
+++ b/reference/chrono/year_month_weekday/op_sys_days.md
@@ -0,0 +1,63 @@
+# operator sys_days
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_weekday[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr operator sys_days() const noexcept; // (1) C++20
+```
+* sys_days[link /reference/chrono/sys_time.md]
+
+## 概要
+`year_month_weekday`オブジェクトをシステム時間の日付に、暗黙に型変換する。
+
+
+## 戻り値
+- [`year()`](year.md)`.`[`ok()`](/reference/chrono/year/ok.md) `&amp;amp;&amp;amp;` [`month()`](month.md)`.`[`ok()`](/reference/chrono/month/ok.md) `&amp;amp;&amp;amp;` [`weekday()`](weekday.md)`.`[`ok()`](/reference/chrono/weekday/ok.md)が`true`である場合、[`year()`](year.md)`/`[`month()`](month.md)の最初の[`weekday()`](weekday.md)の`(`[`index()`](index.md) `- 1) * 7`日後を表す[`sys_days`](/reference/chrono/sys_time.md)を返す
+- [`index()`](index.md)が`0`である場合、[`year()`](year.md)`/`[`month()`](month.md)の最初の[`weekday()`](weekday.md)の7日前の日付を表す[`sys_days`](/reference/chrono/sys_time.md)を返す
+- そうでない場合、未規定の値を返す
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::sys_days date1 = 2020y/3/chrono::Sunday[1];
+  assert(chrono::year_month_day{date1} == 2020y/3/1);
+
+  chrono::sys_days date2 = 2020y/3/chrono::Sunday[2];
+  assert(chrono::year_month_day{date2} == 2020y/3/8);
+
+  chrono::sys_days date3 = 2020y/3/chrono::Sunday[0];
+  assert(chrono::year_month_day{date3} == 2020y/2/23);
+}
+```
+* chrono::sys_days[link /reference/chrono/sys_time.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* chrono::year_month_day[link /reference/chrono/year_month_day.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+#### 備考
+- GCC 11のtrunkバージョンでは`index() == 0`の場合に間違った値が返る。正式リリース時には直っている可能性がある
+    - [Bug 97613 - `chrono::year_month_weekday` cast to `sys_days` : return bad value if `index() == 0`](https://gcc.gnu.org/bugzilla/show_bug.cgi?id=97613)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- year_month_weekdayのコンストラクタ : 仕様の変数名ミスを修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/op_constructor.html"/>
      <id>3dca3a22fbceadcda4d9c536cd916b672c495849:reference/chrono/year_month_weekday/op_constructor.md</id>
      <updated>2020-10-28T17:01:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/op_constructor.md b/reference/chrono/year_month_weekday/op_constructor.md
index 37d6f7a55..1498edf33 100644
--- a/reference/chrono/year_month_weekday/op_constructor.md
+++ b/reference/chrono/year_month_weekday/op_constructor.md
@@ -48,7 +48,7 @@ year_month_weekday(year_month_weekday&amp;amp;&amp;amp;) = default;      // (6) C++20
 
 
 ## 備考
-- (3) : `year_month_weekday`クラスのあらゆる値`ymdl`について、`ymdl.`[`ok()`](ok.md)が`true`である値はすべて、`ymdl == year_month_weekday{sys_days{ymdl}}`が`true`となる
+- (3) : `year_month_weekday`クラスのあらゆる値`ymwd`について、`ymwd.`[`ok()`](ok.md)が`true`である値はすべて、`ymwd == year_month_weekday{sys_days{ymwd}}`が`true`となる
 
 
 ### 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- year_month_weekday : リンクミス、コピペミスを修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/op_constructor.html"/>
      <id>cda03d26308d83080e635d709931526526dc5adb:reference/chrono/year_month_weekday/op_constructor.md</id>
      <updated>2020-10-27T17:25:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/op_constructor.md b/reference/chrono/year_month_weekday/op_constructor.md
index ba516f07a..37d6f7a55 100644
--- a/reference/chrono/year_month_weekday/op_constructor.md
+++ b/reference/chrono/year_month_weekday/op_constructor.md
@@ -24,8 +24,8 @@ year_month_weekday(year_month_weekday&amp;amp;&amp;amp;) = default;      // (6) C++20
 * chrono::year[link /reference/chrono/year.md]
 * chrono::month[link /reference/chrono/month.md]
 * chrono::weekday_indexed[link /reference/chrono/weekday_indexed.md]
-* sys_days[link /reference/chrono/sys_days.md]
-* local_days[link /reference/chrono/local_days.md]
+* sys_days[link /reference/chrono/sys_time.md]
+* local_days[link /reference/chrono/local_time.md]
 
 ## 概要
 - (1) : デフォルトコンストラクタ
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>weekday_indexed -- year_month_weekday : リンクミス、コピペミスを修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/weekday_indexed.html"/>
      <id>cda03d26308d83080e635d709931526526dc5adb:reference/chrono/year_month_weekday/weekday_indexed.md</id>
      <updated>2020-10-27T17:25:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/weekday_indexed.md b/reference/chrono/year_month_weekday/weekday_indexed.md
new file mode 100644
index 000000000..a4b6aa9b4
--- /dev/null
+++ b/reference/chrono/year_month_weekday/weekday_indexed.md
@@ -0,0 +1,52 @@
+# weekday_indexed
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_weekday[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr chrono::weekday_indexed weekday_indexed() const noexcept; // (1) C++20
+```
+* chrono::weekday_indexed[link /reference/chrono/weekday_indexed.md]
+
+## 概要
+N回目の曜日要素を取得する。
+
+
+## 戻り値
+コンストラクタで設定されて保持しているN回目の曜日オブジェクトを返す。
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::year_month_weekday date = 2020y/3/chrono::Sunday[2];
+  chrono::weekday_indexed wdi = date.weekday_indexed();
+  assert(wdi == chrono::Sunday[2]);
+}
+```
+* date.weekday_indexed()[color ff0000]
+* chrono::weekday_indexed[link /reference/chrono/weekday_indexed.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- year_month_weekday : コンストラクタとゲッター関係を追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day/op_constructor.html"/>
      <id>5086cf3853be1e42f4887fb53a71832c75e7101f:reference/chrono/year_month_day/op_constructor.md</id>
      <updated>2020-10-27T17:20:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day/op_constructor.md b/reference/chrono/year_month_day/op_constructor.md
index 35e5f959f..2700e1d61 100644
--- a/reference/chrono/year_month_day/op_constructor.md
+++ b/reference/chrono/year_month_day/op_constructor.md
@@ -46,7 +46,7 @@ year_month_day(year_month_day&amp;amp;&amp;amp;) = default;                         // (7) C++20
 - (3) :
     - 年のメンバ変数として`ymdl.`[`year()`](/reference/chrono/year_month_day_last/year.md)の値、月のメンバ変数として`ymdl.`[`month()`](/reference/chrono/year_month_day_last/month.md)の値、日のメンバ変数として`ymdl.`[`day()`](/reference/chrono/year_month_day_last/day.md)の値を保持する
 - (4) : `dp`が指すシステム時間に対応する年、月、日の値を求めて構築する
-- (5) : `dp`が指すシステム時間に対応する年、月、日の値を求めて構築する
+- (5) : `dp`が指すローカル時間に対応する年、月、日の値を求めて構築する
 
 
 ## 例外
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>month_day_last -- year_month_weekday : コンストラクタとゲッター関係を追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day_last/month_day_last.html"/>
      <id>5086cf3853be1e42f4887fb53a71832c75e7101f:reference/chrono/year_month_day_last/month_day_last.md</id>
      <updated>2020-10-27T17:20:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day_last/month_day_last.md b/reference/chrono/year_month_day_last/month_day_last.md
index 74273dcaf..4a63aaa8b 100644
--- a/reference/chrono/year_month_day_last/month_day_last.md
+++ b/reference/chrono/year_month_day_last/month_day_last.md
@@ -33,7 +33,7 @@ int main()
   assert(mdl == chrono::February/chrono::last);
 }
 ```
-* date.month()[color ff0000]
+* date.month_day_last()[color ff0000]
 * chrono::month_day_last[link /reference/chrono/month_day_last.md]
 * 2020y[link /reference/chrono/year/op_y.md]
 * chrono::February[link /reference/chrono/month_constants.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ok -- year_month_weekday : コンストラクタとゲッター関係を追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day_last/ok.html"/>
      <id>5086cf3853be1e42f4887fb53a71832c75e7101f:reference/chrono/year_month_day_last/ok.md</id>
      <updated>2020-10-27T17:20:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day_last/ok.md b/reference/chrono/year_month_day_last/ok.md
index 582e712e9..36391a22b 100644
--- a/reference/chrono/year_month_day_last/ok.md
+++ b/reference/chrono/year_month_day_last/ok.md
@@ -17,7 +17,7 @@ constexpr bool ok() const noexcept; // (1) C++20
 以下の全ての条件を満たす場合にこの関数は`true`を返し、そうでなければ`false`を返す：
 
 - [`year()`](year.md)メンバ関数によって返されるオブジェクト`y`の[`ok()`](/reference/chrono/year/ok.md)が`true`
-- [`month_day_last()`](month_day_last.md)メンバ関数によって返されるオブジェクト`mdl`の[`ok()`](/reference/chrono/month/ok.md)が`true`
+- [`month_day_last()`](month_day_last.md)メンバ関数によって返されるオブジェクト`mdl`の[`ok()`](/reference/chrono/month_day_last/ok.md)が`true`
 
 
 ## 例
@@ -30,7 +30,7 @@ using namespace std::chrono_literals;
 
 int main()
 {
-  assert((2020y/2/chrono::last).ok()  == true);
+  assert((2020y/2/chrono::last).ok() == true);
 }
 ```
 * ok()[color ff0000]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>year_month_weekday -- year_month_weekday : コンストラクタとゲッター関係を追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday.html"/>
      <id>5086cf3853be1e42f4887fb53a71832c75e7101f:reference/chrono/year_month_weekday.md</id>
      <updated>2020-10-27T17:20:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday.md b/reference/chrono/year_month_weekday.md
index e776e986f..68928aa78 100644
--- a/reference/chrono/year_month_weekday.md
+++ b/reference/chrono/year_month_weekday.md
@@ -25,7 +25,7 @@ namespace std::chrono {
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`(constructor)`](year_month_weekday/op_constructor.md.nolink) | コンストラクタ | C++20 |
+| [`(constructor)`](year_month_weekday/op_constructor.md) | コンストラクタ | C++20 |
 | `year_month_weekday&amp;amp; operator=(const year_month_weekday&amp;amp;) = default;`&amp;lt;br/&amp;gt; `year_month_weekday&amp;amp; operator=(year_month_weekday&amp;amp;&amp;amp;) = default;` | 代入演算子 | C++20 |
 
 
@@ -41,11 +41,11 @@ namespace std::chrono {
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`year`](year_month_weekday/year.md.nolink)       | 年要素を取得する | C++20 |
-| [`month`](year_month_weekday/month.md.nolink)     | 月要素を取得する | C++20 |
-| [`weekday`](year_month_weekday/weekday.md.nolink) | 曜日要素を取得する | C++20 |
-| [`index`](year_month_weekday/index.md.nolink)     | 何回目の曜日かを取得する | C++20 |
-| [`weekday_indexed`](year_month_weekday/weekday_indexed.md.nolink) | N回目の曜日要素を取得する | C++20 |
+| [`year`](year_month_weekday/year.md)       | 年要素を取得する | C++20 |
+| [`month`](year_month_weekday/month.md)     | 月要素を取得する | C++20 |
+| [`weekday`](year_month_weekday/weekday.md) | 曜日要素を取得する | C++20 |
+| [`index`](year_month_weekday/index.md)     | 何回目の曜日かを取得する | C++20 |
+| [`weekday_indexed`](year_month_weekday/weekday_indexed.md) | N回目の曜日要素を取得する | C++20 |
 
 
 ### 変換
@@ -60,7 +60,7 @@ namespace std::chrono {
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`ok`](year_month_weekday/ok.md.nolink) | 値が範囲に収まっているか判定する | C++20 |
+| [`ok`](year_month_weekday/ok.md) | 値が範囲に収まっているか判定する | C++20 |
 
 
 ## 非メンバ関数
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>index -- year_month_weekday : コンストラクタとゲッター関係を追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/index.html"/>
      <id>5086cf3853be1e42f4887fb53a71832c75e7101f:reference/chrono/year_month_weekday/index.md</id>
      <updated>2020-10-27T17:20:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/index.md b/reference/chrono/year_month_weekday/index.md
new file mode 100644
index 000000000..6ae55bfa8
--- /dev/null
+++ b/reference/chrono/year_month_weekday/index.md
@@ -0,0 +1,56 @@
+# index
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_weekday[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr unsigned int index() const noexcept; // (1) C++20
+```
+
+## 概要
+何回目の曜日かを取得する。
+
+
+## 戻り値
+以下と等価：
+
+```cpp
+return weekday_indexed().index();
+```
+* weekday_indexed()[link weekday_indexed.md]
+* index()[link /reference/chrono/weekday_indexed/index.md]
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::year_month_weekday date = 2020y/3/chrono::Sunday[2];
+  unsigned int i = date.index();
+  assert(i == 2);
+}
+```
+* date.index()[color ff0000]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>month -- year_month_weekday : コンストラクタとゲッター関係を追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/month.html"/>
      <id>5086cf3853be1e42f4887fb53a71832c75e7101f:reference/chrono/year_month_weekday/month.md</id>
      <updated>2020-10-27T17:20:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/month.md b/reference/chrono/year_month_weekday/month.md
new file mode 100644
index 000000000..4a1467338
--- /dev/null
+++ b/reference/chrono/year_month_weekday/month.md
@@ -0,0 +1,53 @@
+# month
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_weekday[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr chrono::month month() const noexcept; // (1) C++20
+```
+* chrono::month[link /reference/chrono/month.md]
+
+## 概要
+月要素を取得する。
+
+
+## 戻り値
+コンストラクタで設定されて保持している月オブジェクトを返す。
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::year_month_weekday date = 2020y/3/chrono::Sunday[2];
+  chrono::month m = date.month();
+  assert(m == chrono::March);
+}
+```
+* date.month()[color ff0000]
+* chrono::month[link /reference/chrono/month.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::March[link /reference/chrono/month_constants.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ok -- year_month_weekday : コンストラクタとゲッター関係を追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/ok.html"/>
      <id>5086cf3853be1e42f4887fb53a71832c75e7101f:reference/chrono/year_month_weekday/ok.md</id>
      <updated>2020-10-27T17:20:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/ok.md b/reference/chrono/year_month_weekday/ok.md
new file mode 100644
index 000000000..60b83dfa4
--- /dev/null
+++ b/reference/chrono/year_month_weekday/ok.md
@@ -0,0 +1,53 @@
+# ok
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_weekday[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr bool ok() const noexcept; // (1) C++20
+```
+
+## 概要
+`year_month_weekday`オブジェクトの値が有効な日付の範囲内かを判定する。
+
+
+## 戻り値
+- 以下のいずれかの条件を満たす場合にこの関数は`false`を返す：
+    - [`year()`](year.md)メンバ関数によって返されるオブジェクト`y`の[`ok()`](/reference/chrono/year/ok.md)が`false`
+    - [`month()`](month.md)メンバ関数によって返されるオブジェクト`m`の[`ok()`](/reference/chrono/month/ok.md)が`false`
+    - [`weekday_indexed()`](weekday_indexed.md)メンバ関数によって返されるオブジェクト`wdi`の[`ok()`](/reference/chrono/weekday_indexed/ok.md)が`false`
+- `*this`が妥当な日付を表す場合、この関数は`true`を返す
+- いずれにも合致しない場合、`false`を返す
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  assert((2020y/3/chrono::Sunday[2]).ok() == true);
+  assert((2020y/3/chrono::Sunday[0]).ok() == false);
+}
+```
+* ok()[color ff0000]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- year_month_weekday : コンストラクタとゲッター関係を追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/op_constructor.html"/>
      <id>5086cf3853be1e42f4887fb53a71832c75e7101f:reference/chrono/year_month_weekday/op_constructor.md</id>
      <updated>2020-10-27T17:20:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/op_constructor.md b/reference/chrono/year_month_weekday/op_constructor.md
new file mode 100644
index 000000000..ba516f07a
--- /dev/null
+++ b/reference/chrono/year_month_weekday/op_constructor.md
@@ -0,0 +1,87 @@
+# コンストラクタ
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_weekday[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+year_month_weekday() = default;                            // (1) C++20
+
+constexpr year_month_weekday(
+  const chrono::year&amp;amp; y,
+  const chrono::month&amp;amp; m,
+  const chrono::weekday_indexed&amp;amp; wdi) noexcept;            // (2) C++20
+
+constexpr
+  year_month_weekday(const sys_days&amp;amp; dp) noexcept;         // (3) C++20
+constexpr explicit
+  year_month_weekday(const local_days&amp;amp; dp) noexcept;       // (4) C++20
+
+year_month_weekday(const year_month_weekday&amp;amp;) = default; // (5) C++20
+year_month_weekday(year_month_weekday&amp;amp;&amp;amp;) = default;      // (6) C++20
+```
+* chrono::year[link /reference/chrono/year.md]
+* chrono::month[link /reference/chrono/month.md]
+* chrono::weekday_indexed[link /reference/chrono/weekday_indexed.md]
+* sys_days[link /reference/chrono/sys_days.md]
+* local_days[link /reference/chrono/local_days.md]
+
+## 概要
+- (1) : デフォルトコンストラクタ
+- (2) : 年、月、N回目の曜日の値をそれぞれ指定して構築する
+- (3) : 日単位のシステム時間から変換して構築
+- (4) : 日単位のローカル時間から変換して構築
+- (5) : コピーコンストラクタ
+- (6) : ムーブコンストラクタ
+
+
+## 効果
+- (1) : デフォルト初期化では年、月、曜日とN回目の値がそれぞれ符号なし整数の未初期化値となり、値初期化では値0となる
+- (2) : `y`、`m`、`wdi`をメンバ変数として保持する
+- (3) : `dp`が指すシステム時間に対応する年、月、日の値を求めて構築する
+- (4) : [`sys_days`](/reference/chrono/sys_time.md)`{dp.`[`time_since_epoch()`](/reference/chrono/time_point/time_since_epoch.md)`}`と等価
+
+
+## 例外
+投げない
+
+
+## 備考
+- (3) : `year_month_weekday`クラスのあらゆる値`ymdl`について、`ymdl.`[`ok()`](ok.md)が`true`である値はすべて、`ymdl == year_month_weekday{sys_days{ymdl}}`が`true`となる
+
+
+### 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::year_month_weekday date1{2020y, chrono::March, chrono::Sunday[2]};
+  chrono::year_month_weekday date2{chrono::year{2020}, chrono::month{3}, chrono::Sunday[2]};
+  assert(date1 == 2020y/3/chrono::Sunday[2]);
+  assert(date2 == 2020y/3/chrono::Sunday[2]);
+}
+```
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::March[link /reference/chrono/month_constants.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* chrono::year[link /reference/chrono/year.md]
+* chrono::month[link /reference/chrono/month.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>weekday copy.md -- year_month_weekday : コンストラクタとゲッター関係を追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/weekday copy.html"/>
      <id>5086cf3853be1e42f4887fb53a71832c75e7101f:reference/chrono/year_month_weekday/weekday copy.md</id>
      <updated>2020-10-27T17:20:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>weekday -- year_month_weekday : コンストラクタとゲッター関係を追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/weekday.html"/>
      <id>5086cf3853be1e42f4887fb53a71832c75e7101f:reference/chrono/year_month_weekday/weekday.md</id>
      <updated>2020-10-27T17:20:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/weekday.md b/reference/chrono/year_month_weekday/weekday.md
new file mode 100644
index 000000000..5d8190aa7
--- /dev/null
+++ b/reference/chrono/year_month_weekday/weekday.md
@@ -0,0 +1,58 @@
+# weekday
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_weekday[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr chrono::weekday weekday() const noexcept; // (1) C++20
+```
+* chrono::weekday[link /reference/chrono/weekday.md]
+
+## 概要
+曜日要素を取得する。
+
+
+## 戻り値
+以下と等価：
+
+```cpp
+return weekday_indexed().weekday();
+```
+* weekday_indexed()[link weekday_indexed.md]
+* weekday()[link /reference/chrono/weekday_indexed/weekday.md]
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::year_month_weekday date = 2020y/3/chrono::Sunday[2];
+  chrono::weekday wd = date.weekday();
+  assert(wd == chrono::Sunday);
+}
+```
+* date.weekday()[color ff0000]
+* chrono::weekday[link /reference/chrono/weekday.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>year -- year_month_weekday : コンストラクタとゲッター関係を追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/year.html"/>
      <id>5086cf3853be1e42f4887fb53a71832c75e7101f:reference/chrono/year_month_weekday/year.md</id>
      <updated>2020-10-27T17:20:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/year.md b/reference/chrono/year_month_weekday/year.md
new file mode 100644
index 000000000..061d118a2
--- /dev/null
+++ b/reference/chrono/year_month_weekday/year.md
@@ -0,0 +1,52 @@
+# year
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_weekday[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr chrono::year year() const noexcept; // (1) C++20
+```
+* chrono::year[link /reference/chrono/year.md]
+
+## 概要
+年要素を取得する。
+
+
+## 戻り値
+コンストラクタで設定されて保持している年オブジェクトを返す。
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::year_month_weekday date = 2020y/3/chrono::Sunday[2];
+  chrono::year y = date.year();
+  assert(y == 2020y);
+}
+```
+* date.year()[color ff0000]
+* chrono::year[link /reference/chrono/year.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>chrono -- chrono : year_month_weekdayクラスページを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono.html"/>
      <id>72b402df3c3fe81c9070fc4b85dc7f50796dd7d7:reference/chrono.md</id>
      <updated>2020-10-26T19:13:43+09:00</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;chrono&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;chrono&lt;/span&gt;&lt;span class=&#34;cpp cpp11&#34; title=&#34;C++11で追加&#34;&gt;(C++11)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;chrono&amp;gt;&lt;/code&gt;ヘッダは、時間に関するユーティリティとして機能する関数・クラスを提供する。このヘッダに含まれる関数・クラスは、&lt;code&gt;std::chrono&lt;/code&gt;名前空間で定義される。&lt;/p&gt;
&lt;p&gt;このライブラリは、タイムアウト、操作間隔、スケジューリングといった短期間の操作を主な用途として想定している。そのためカレンダー機能としては遥かな過去・未来を扱えるようにはなっていない。&lt;/p&gt;
&lt;h2&gt;時間を表す型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration.html&#34;&gt;duration&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間の間隔(class template)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/time_point.html&#34;&gt;time_point&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間軸上の一点(class template)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/treat_as_floating_point.html&#34;&gt;treat_as_floating_point&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;duration&lt;/code&gt;内部表現の型が浮動小数点型かを判定するためのトレイト(class template)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_values.html&#34;&gt;duration_values&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;duration&lt;/code&gt;内部表現の特別な値を取得するためのトレイト(class template)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;時間の単位を表す型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;nanoseconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ナノ秒を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;microseconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;マイクロ秒を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;milliseconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ミリ秒を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;minutes&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;分を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;hours&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;days&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;weeks&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;週を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;years&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;months&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;時計型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/is_clock.html&#34;&gt;is_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;クロック型かを判定する (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/system_clock.html&#34;&gt;system_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;システム時間のクロック(class)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/steady_clock.html&#34;&gt;steady_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間が逆行しないクロック(class)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/high_resolution_clock.html&#34;&gt;high_resolution_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;高分解能クロック(class)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/utc_clock.html&#34;&gt;utc_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;UTC時間 (協定世界時) のクロック (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/tai_clock.html&#34;&gt;tai_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;TAI時間 (国際原子時) のクロック (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/gps_clock.html&#34;&gt;gps_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;GPS時間のクロック (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/file_clock.html&#34;&gt;file_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ファイル時間を作るために使用されるクロック (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;システム時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/sys_time.html&#34;&gt;sys_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;システム時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/sys_time.html&#34;&gt;sys_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でシステム時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/sys_time.html&#34;&gt;sys_days&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日単位でシステム時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;ローカル時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_time.html&#34;&gt;local_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間を表す擬似的なクロック (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_time.html&#34;&gt;local_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_time.html&#34;&gt;local_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でローカル時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_time.html&#34;&gt;local_days&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日単位でローカル時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;UTC時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/utc_time.html&#34;&gt;utc_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;UTC時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/utc_time.html&#34;&gt;utc_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でUTC時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;TAI時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/tai_time.html&#34;&gt;tai_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;TAI時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/tai_time.html&#34;&gt;tai_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でTAI時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;GPS時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/gps_time.html&#34;&gt;gps_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;GPS時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/gps_time.html&#34;&gt;gps_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でGPS時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;ファイル時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/file_time.html&#34;&gt;file_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ファイル時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;時計時間の変換&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/clock_time_conversion.html&#34;&gt;clock_time_conversion&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時計間の変換方法を組み合わせごとに定義するためのクラス (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/clock_cast.html&#34;&gt;clock_cast&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ほかの時計時間のtime_pointに変換する (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;うるう秒の情報&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/leap_second_info.html&#34;&gt;leap_second_info&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;うるう秒の情報を扱うクラス (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/get_leap_second_info.html&#34;&gt;get_leap_second_info&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した日時までに挿入されたうるう秒の回数を取得する (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;カレンダー型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/last_spec.html&#34;&gt;last_spec&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月の最終日、週の最終日など、文脈に応じた「最後」を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/day.html&#34;&gt;day&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;未規定の月の指定した日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month.html&#34;&gt;month&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月単体の値を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year.html&#34;&gt;year&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;カレンダーの年を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday.html&#34;&gt;weekday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;週の日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_indexed.html&#34;&gt;weekday_indexed&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;N回目の指定した曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_last.html&#34;&gt;weekday_last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;未規定の月の最後の指定した曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_day.html&#34;&gt;month_day&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月と日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_day_last.html&#34;&gt;month_day_last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した月の最終日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_weekday.html&#34;&gt;month_weekday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月の指定したN番目の曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_weekday_last.html&#34;&gt;month_weekday_last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月の指定した最終回目の曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year_month.html&#34;&gt;year_month&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年と月を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year_month_day.html&#34;&gt;year_month_day&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年、月、日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year_month_day_last.html&#34;&gt;year_month_day_last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年、月、月の最終日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year_month_weekday.html&#34;&gt;year_month_weekday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年、月、N回目の指定した曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year_month_weekday_last.md.nolink&#34;&gt;year_month_weekday_last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年、月、月の最後の指定した曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;1日内の時間情報&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/time_of_day.md.nolink&#34;&gt;time_of_day&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1日内の時間情報を取得するクラス (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/hh_mm_ss.md.nolink&#34;&gt;hh_mm_ss&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時、分、秒を表すクラス (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/is_am.md.nolink&#34;&gt;is_am&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間が午前かを判定する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/is_pm.md.nolink&#34;&gt;is_pm&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間が午後かを判定する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/make12.md.nolink&#34;&gt;make12&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[1h, 12h]&lt;/code&gt;の時間範囲に変換する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/make24.md.nolink&#34;&gt;make24&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間を午前&lt;code&gt;[0h, 11h]&lt;/code&gt;か午後&lt;code&gt;[12h, 23h]&lt;/code&gt;の範囲に変換する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;タイムゾーン&lt;/h2&gt;
&lt;h3&gt;タイムゾーンのデータベース&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/tzdb.html&#34;&gt;tzdb&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンのデータベース型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/get_tzdb.html&#34;&gt;get_tzdb&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンデータベースを取得する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/tzdb_list.html&#34;&gt;tzdb_list&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンデータベースのリスト (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/get_tzdb_list.html&#34;&gt;get_tzdb_list&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンデータベースのリストを取得する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/locate_zone.html&#34;&gt;locate_zone&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した名前のタイムゾーンを取得する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/current_zone.html&#34;&gt;current_zone&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;現在のタイムゾーンを取得する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;リモートタイムゾーンデータベースのサポート&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/reload_tzdb.html&#34;&gt;reload_tzdb&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;リモートタイムゾーンデータベースを再読み込みする (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/remote_version.html&#34;&gt;remote_version&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;リモートタイムゾーンデータベースの最新バージョン番号を取得する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;例外クラス&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/nonexistent_local_time.html&#34;&gt;nonexistent_local_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;存在しないローカル時間をシステム時間に変換しようとした (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/ambiguous_local_time.html&#34;&gt;ambiguous_local_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間があいまい (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;タイムゾーン&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/sys_info.html&#34;&gt;sys_info&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;システム時間用のタイムゾーン情報 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_info.html&#34;&gt;local_info&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間用のタイムゾーン情報 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/choose.html&#34;&gt;choose&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンを変換する際に、早い時間側と遅い時間側どちらに丸めるかの種類 (enum)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/time_zone.html&#34;&gt;time_zone&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンの変換を扱うクラス (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/zoned_traits.html&#34;&gt;zoned_traits&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーン取得のカスタマイズ用中間インタフェース (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/zoned_time.html&#34;&gt;zoned_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンを考慮した時間軸上の一点を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/zoned_time.html&#34;&gt;zoned_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でタイムゾーンを考慮した時間軸上の一点を表す型 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;うるう秒サポート&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/leap_second.html&#34;&gt;leap_second&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;うるう秒が挿入された日時を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;リンク&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/time_zone_link.html&#34;&gt;time_zone_link&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンの代替名を管理する型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;文字列フォーマット&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local-time-format-t.html&#34;&gt;local-time-format-t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間を文字列フォーマットするために必要な情報をまとめた説明用の型 (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_time_format.html&#34;&gt;local_time_format&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間の文字列フォーマット用オブジェクトを生成する (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/format.html&#34;&gt;format&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列フォーマット&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;文字列解析&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/parse.html&#34;&gt;parse&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日時文字列を解析する入力マニピュレータ (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;カレンダー定数&lt;/h2&gt;
&lt;h3&gt;最後&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/last_spec.html&#34;&gt;last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月の最終日、週の最終日など、文脈に応じた「最後」を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;曜日&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Sunday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Monday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Tuesday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;火曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Wednesday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;水曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Thursday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;木曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Friday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;金曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Saturday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;土曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;月&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;January&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;February&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;2月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;March&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;3月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;April&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;4月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;May&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;5月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;June&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;6月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;July&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;7月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;August&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;8月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;September&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;9月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;October&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;10月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;November&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;11月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;December&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;12月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2661.htm&#34; target=&#34;_blank&#34;&gt;N2661 A Foundation to Sleep On&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0216r0.html&#34; target=&#34;_blank&#34;&gt;P0216R0 C++ Standard Proposal — A Time-Zone Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0355r7.html&#34; target=&#34;_blank&#34;&gt;P0355R7 Extending &lt;code&gt;&amp;lt;chrono&amp;gt;&lt;/code&gt; to Calendars and Time Zones&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>month_weekday -- chrono : year_month_weekdayクラスページを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_weekday.html"/>
      <id>72b402df3c3fe81c9070fc4b85dc7f50796dd7d7:reference/chrono/month_weekday.md</id>
      <updated>2020-10-26T19:13:43+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_weekday.md b/reference/chrono/month_weekday.md
index dea949c65..4420fdac6 100644
--- a/reference/chrono/month_weekday.md
+++ b/reference/chrono/month_weekday.md
@@ -13,7 +13,7 @@ namespace std::chrono {
 ## 概要
 `month_weekday`は、未規定の年の、月の指定したN回目の曜日を表すカレンダー表現のためクラスである。
 
-年が規定されないために、このクラスでは月の指定したN回目の曜日が何日なのかは取得できない。年情報を付加して[`year_month_weekday`](year_month_weekday.md.nolink)クラスに変換し、そこからシステム時間もしくはローカル時間に変換するか、そこからさらに[`year_month_day`](year_month_day.md)クラスに変換することで日を取得できる。
+年が規定されないために、このクラスでは月の指定したN回目の曜日が何日なのかは取得できない。年情報を付加して[`year_month_weekday`](year_month_weekday.md)クラスに変換し、そこからシステム時間もしくはローカル時間に変換するか、そこからさらに[`year_month_day`](year_month_day.md)クラスに変換することで日を取得できる。
 
 このクラスは等値比較ができ、[EqualityComparable](/reference/concepts/equality_comparable.md)の要件を満たす。
 
@@ -112,7 +112,7 @@ int main()
 * chrono::Sunday[link weekday_constants.md]
 * chrono::month[link month.md]
 * chrono::weekday_indexed[link weekday_indexed.md]
-* chrono::year_month_weekday[link year_month_weekday.md.nolink]
+* chrono::year_month_weekday[link year_month_weekday.md]
 * chrono::sys_days[link sys_time.md]
 * chrono::year_month_day[link year_month_day.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator/ -- chrono : year_month_weekdayクラスページを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_weekday/op_append.html"/>
      <id>72b402df3c3fe81c9070fc4b85dc7f50796dd7d7:reference/chrono/month_weekday/op_append.md</id>
      <updated>2020-10-26T19:13:43+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_weekday/op_append.md b/reference/chrono/month_weekday/op_append.md
index 35e32c424..99a05ef9e 100644
--- a/reference/chrono/month_weekday/op_append.md
+++ b/reference/chrono/month_weekday/op_append.md
@@ -14,7 +14,7 @@ namespace std::chrono {
 }
 ```
 * year[link /reference/chrono/year.md]
-* year_month_weekday[link /reference/chrono/year_month_weekday.md.nolink]
+* year_month_weekday[link /reference/chrono/year_month_weekday.md]
 
 ## 概要
 カレンダー要素同士をつなぎ合わせる。
@@ -48,7 +48,7 @@ int main()
 * March[link /reference/chrono/month_constants.md]
 * Sunday[link /reference/chrono/weekday_constants.md]
 * 2020y[link /reference/chrono/year/op_y.md]
-* chrono::year_month_weekday[link /reference/chrono/year_month_weekday.md.nolink]
+* chrono::year_month_weekday[link /reference/chrono/year_month_weekday.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator[] -- chrono : year_month_weekdayクラスページを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/weekday/op_at.html"/>
      <id>72b402df3c3fe81c9070fc4b85dc7f50796dd7d7:reference/chrono/weekday/op_at.md</id>
      <updated>2020-10-26T19:13:43+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/weekday/op_at.md b/reference/chrono/weekday/op_at.md
index a22e9dbf6..fea5d0bcb 100644
--- a/reference/chrono/weekday/op_at.md
+++ b/reference/chrono/weekday/op_at.md
@@ -58,8 +58,8 @@ int main()
 * chrono::Sunday[link /reference/chrono/weekday_constants.md]
 * chrono::November[link /reference/chrono/month_constants.md]
 * last[link /reference/chrono/last_spec.md]
-* year_month_weekday[link /reference/chrono/year_month_weekday.md.nolink]
-* year_month_weekday_last[link /reference/chrono/year_month_weekday.md.nolink]
+* year_month_weekday[link /reference/chrono/year_month_weekday.md]
+* year_month_weekday_last[link /reference/chrono/year_month_weekday_last.md.nolink]
 * year_month_day[link /reference/chrono/year_month_day.md]
 * date.day()[link /reference/chrono/year_month_day/day.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>weekday_indexed -- chrono : year_month_weekdayクラスページを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/weekday_indexed.html"/>
      <id>72b402df3c3fe81c9070fc4b85dc7f50796dd7d7:reference/chrono/weekday_indexed.md</id>
      <updated>2020-10-26T19:13:43+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/weekday_indexed.md b/reference/chrono/weekday_indexed.md
index ae9f591c3..6278a3ce5 100644
--- a/reference/chrono/weekday_indexed.md
+++ b/reference/chrono/weekday_indexed.md
@@ -90,7 +90,7 @@ int main() {
 * 2020y[link year/op_y.md]
 * wi1.weekday()[link weekday_indexed/weekday.md]
 * wi1.index()[link weekday_indexed/index.md]
-* chrono::year_month_weekday[link year_month_weekday.md.nolink]
+* chrono::year_month_weekday[link year_month_weekday.md]
 * chrono::sys_days[link sys_time.md]
 * chrono::year_month_day[link year_month_day.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator/ -- chrono : year_month_weekdayクラスページを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year/op_append.html"/>
      <id>72b402df3c3fe81c9070fc4b85dc7f50796dd7d7:reference/chrono/year/op_append.md</id>
      <updated>2020-10-26T19:13:43+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year/op_append.md b/reference/chrono/year/op_append.md
index deebddb13..0f990a733 100644
--- a/reference/chrono/year/op_append.md
+++ b/reference/chrono/year/op_append.md
@@ -48,7 +48,7 @@ namespace std::chrono {
 * month_day[link /reference/chrono/month_day.md]
 * year_month_day_last[link /reference/chrono/year_month_day_last.md]
 * month_day_last[link /reference/chrono/month_day_last.md]
-* year_month_weekday[link /reference/chrono/year_month_weekday.md.nolink]
+* year_month_weekday[link /reference/chrono/year_month_weekday.md]
 * month_weekday[link /reference/chrono/month_weekday.md]
 * year_month_weekday_last[link /reference/chrono/year_month_weekday_last.md.nolink]
 * month_weekday_last[link /reference/chrono/month_weekday_last.md]
@@ -75,7 +75,7 @@ namespace std::chrono {
 - (4) : `return year(y) / md;`
 - (5) : `return` [`year_month_day_last`](/reference/chrono/year_month_day_last.md)`{y, mdl};`
 - (6) : `return year(y) / mdl;`
-- (7) : `return` [`year_month_weekday`](/reference/chrono/year_month_weekday.md.nolink)`{y, mwd.`[`month()`](/reference/chrono/month_weekday/month.md)`, mwd.`[`weekday_indexed()`](/reference/chrono/month_weekday/weekday_indexed.md)`};`
+- (7) : `return` [`year_month_weekday`](/reference/chrono/year_month_weekday.md)`{y, mwd.`[`month()`](/reference/chrono/month_weekday/month.md)`, mwd.`[`weekday_indexed()`](/reference/chrono/month_weekday/weekday_indexed.md)`};`
 - (8) : `return year(y) / mwd;`
 - (9) : `return` [`year_month_weekday_last`](/reference/chrono/year_month_weekday_last.md.nolink)`{y, mwdl.`[`month()`](/reference/chrono/month_weekday_last/month.md)`, mwdl.`[`weekday_last()`](/reference/chrono/month_weekday_last/weekday_last.md)`};`
 - (10) : `return year(y) / mwdl;`
@@ -123,7 +123,7 @@ int main()
 * year_month[link /reference/chrono/year_month.md]
 * year_month_day[link /reference/chrono/year_month_day.md]
 * year_month_day_last[link /reference/chrono/year_month_day_last.md]
-* year_month_weekday[link /reference/chrono/year_month_weekday.md.nolink]
+* year_month_weekday[link /reference/chrono/year_month_weekday.md]
 * year_month_weekday_last[link /reference/chrono/year_month_weekday_last.md.nolink]
 
 ### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator/ -- chrono : year_month_weekdayクラスページを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month/op_append.html"/>
      <id>72b402df3c3fe81c9070fc4b85dc7f50796dd7d7:reference/chrono/year_month/op_append.md</id>
      <updated>2020-10-26T19:13:43+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month/op_append.md b/reference/chrono/year_month/op_append.md
index 9738b1b21..718d3bcbf 100644
--- a/reference/chrono/year_month/op_append.md
+++ b/reference/chrono/year_month/op_append.md
@@ -26,7 +26,7 @@ namespace std::chrono {
 * day[link /reference/chrono/day.md]
 * year_month_day[link /reference/chrono/year_month_day.md]
 * year_month_day_last[link /reference/chrono/year_month_day_last.md]
-* year_month_weekday[link /reference/chrono/year_month_weekday.md.nolink]
+* year_month_weekday[link /reference/chrono/year_month_weekday.md]
 * year_month_weekday_last[link /reference/chrono/year_month_weekday_last.md.nolink]
 
 ## 概要
@@ -43,7 +43,7 @@ namespace std::chrono {
 - (1) : `return` [`year_month_day`](/reference/chrono/year_month_day.md)`{ym.`[`year()`](year.md)`, ym.`[`month()`](month.md)`, d};`
 - (2) : `return ym /` [`day`](/reference/chrono/day.md)`(d);`
 - (3) : `return` [`year_month_day_last`](/reference/chrono/year_month_day_last.md)`{ym.`[`year()`](year.md)`,` [`month_day_last`](/reference/chrono/month_day_last.md)`{ym.`[`month()`](month.md)`}};`
-- (4) : `return` [`year_month_weekday`](/reference/chrono/year_month_weekday.md.nolink)`{ym.`[`year()`](year.md)`, ym.`[`month()`](month.md)`, wdi};`
+- (4) : `return` [`year_month_weekday`](/reference/chrono/year_month_weekday.md)`{ym.`[`year()`](year.md)`, ym.`[`month()`](month.md)`, wdi};`
 - (5) : `return` [`year_month_weekday_last`](/reference/chrono/year_month_weekday_last.md.nolink)`{ym.`[`year()`](year.md)`, ym.`[`month()`](month.md)`, wdl};`
 
 
@@ -80,7 +80,7 @@ int main()
 * year_month_day[link /reference/chrono/year_month_day.md]
 * year_month_day_last[link /reference/chrono/year_month_day_last.md]
 * month_day_last[link /reference/chrono/month_day_last.md]
-* year_month_weekday[link /reference/chrono/year_month_weekday.md.nolink]
+* year_month_weekday[link /reference/chrono/year_month_weekday.md]
 * year_month_weekday_last[link /reference/chrono/year_month_weekday_last.md.nolink]
 
 ### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>year_month_weekday -- chrono : year_month_weekdayクラスページを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday.html"/>
      <id>72b402df3c3fe81c9070fc4b85dc7f50796dd7d7:reference/chrono/year_month_weekday.md</id>
      <updated>2020-10-26T19:13:43+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday.md b/reference/chrono/year_month_weekday.md
new file mode 100644
index 000000000..e776e986f
--- /dev/null
+++ b/reference/chrono/year_month_weekday.md
@@ -0,0 +1,147 @@
+# year_month_weekday
+* chrono[meta header]
+* std::chrono[meta namespace]
+* class[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  class year_month_weekday;
+}
+```
+
+## 概要
+`year_month_weekday`は、年、月、N回目の曜日を表すカレンダー表現のためクラスである。
+
+このクラスは、年、および月に関する演算に対応している。ただし、日に関する演算はできない。日を求める`day()`メンバ関数は持っておらず、日は`sys_days`への変換演算子でより効率的に求めることができる。
+
+このクラスは等値比較ができ、[EqualityComparable](/reference/concepts/equality_comparable.md)の要件を満たす。
+
+このクラスは、[トリビアルコピー可能](/reference/type_traits/is_trivially_copyable.md)で、かつ[スタンダードレイアウト型](/reference/type_traits/is_standard_layout.md)である。
+
+
+## メンバ関数
+### 構築／コピー／破棄
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`(constructor)`](year_month_weekday/op_constructor.md.nolink) | コンストラクタ | C++20 |
+| `year_month_weekday&amp;amp; operator=(const year_month_weekday&amp;amp;) = default;`&amp;lt;br/&amp;gt; `year_month_weekday&amp;amp; operator=(year_month_weekday&amp;amp;&amp;amp;) = default;` | 代入演算子 | C++20 |
+
+
+### 算術演算
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`operator+=`](year_month_weekday/op_plus_assign.md.nolink)  | 加算の複合代入 | C++20 |
+| [`operator-=`](year_month_weekday/op_minus_assign.md.nolink) | 減算の複合代入 | C++20 |
+
+
+### 観測
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`year`](year_month_weekday/year.md.nolink)       | 年要素を取得する | C++20 |
+| [`month`](year_month_weekday/month.md.nolink)     | 月要素を取得する | C++20 |
+| [`weekday`](year_month_weekday/weekday.md.nolink) | 曜日要素を取得する | C++20 |
+| [`index`](year_month_weekday/index.md.nolink)     | 何回目の曜日かを取得する | C++20 |
+| [`weekday_indexed`](year_month_weekday/weekday_indexed.md.nolink) | N回目の曜日要素を取得する | C++20 |
+
+
+### 変換
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`operator sys_days`](year_month_weekday/op_sys_days.md.nolink)     | システム時間の日付への型変換演算子 | C++20 |
+| [`operator local_days`](year_month_weekday/op_local_days.md.nolink) | ローカル時間の日付への型変換演算子 | C++20 |
+
+
+### 検証
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`ok`](year_month_weekday/ok.md.nolink) | 値が範囲に収まっているか判定する | C++20 |
+
+
+## 非メンバ関数
+### 算術演算
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`operator+`](year_month_weekday/op_plus.md.nolink)  | 加算 | C++20 |
+| [`operator-`](year_month_weekday/op_minus.md.nolink) | 減算 | C++20 |
+
+
+### 比較演算
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`operator==`](year_month_weekday/op_equal.md.nolink) | 等値比較を行う | C++20 |
+| `bool operator!=(const year_month_weekday&amp;amp;, const year_month_weekday&amp;amp;) noexcept;` | 非等値比較を行う (`==`により使用可能) | C++20 |
+
+
+### 入出力
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`operator&amp;lt;&amp;lt;`](year_month_weekday/op_ostream.md.nolink) | 出力ストリームに出力する | C++20 |
+
+
+## 文字列フォーマット
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`formatter`](year_month_weekday/formatter.md.nolink) | [`std::formatter`](/reference/format/formatter.md)クラスの特殊化 | C++20 |
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+using namespace std::chrono;
+
+int main()
+{
+  // すべて2020年3月の2回目の日曜日を表す
+  year_month_weekday date1 = 2020y/3/Sunday[2];
+  year_month_weekday date2 = 2020y/March/Sunday[2];
+  year_month_weekday date3 = March/Sunday[2]/2020y;
+  year_month_weekday date4 = March/Sunday[2]/2020;
+
+  // 各カレンダー要素のコンストラクタはexplicitなので、
+  // 指定順は年、月、N回目の曜日で決まっているが、int値は指定できない
+  year_month_weekday date5{2020y, March, Sunday[2]};
+  std::cout &amp;lt;&amp;lt; date5 &amp;lt;&amp;lt; std::endl;
+
+  // 日単位のシステム時間に変換
+  sys_days sd{date5};
+  std::cout &amp;lt;&amp;lt; sd &amp;lt;&amp;lt; std::endl;
+
+  // 年月日に変換
+  year_month_day ymd{sd};
+  std::cout &amp;lt;&amp;lt; ymd &amp;lt;&amp;lt; std::endl;
+}
+```
+* 2020y[link year/op_y.md]
+* March[link month_constants.md]
+* Sunday[link weekday_constants.md]
+* sys_days[link sys_time.md]
+* year_month_day[link year_month_day.md]
+
+### 出力
+```
+2020/Mar/Sun[2]
+2020-03-08
+2020-03-08
+```
+
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0 (出力ストリームなし)
+- [GCC](/implementation.md#gcc): 11.1 (出力ストリームなし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
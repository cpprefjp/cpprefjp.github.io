<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2022-06-25T14:40:19.403880</updated>
  <id>5e994e1b-4801-4e86-b36c-76f4e7eba90a</id>

  
    <entry>
      <title>month -- fix typo regarding decrement</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month.html"/>
      <id>843786a07d59a2931a50a51fdaba8ea89a692bfc:reference/chrono/month.md</id>
      <updated>2022-06-24T18:14:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month.md b/reference/chrono/month.md
index 6f779fcf9..90e089342 100644
--- a/reference/chrono/month.md
+++ b/reference/chrono/month.md
@@ -38,7 +38,7 @@ namespace std::chrono {
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
 | [`operator++`](month/op_increment.md)    | インクリメント | C++20 |
-| [`operator-=`](month/op_decrement.md)    | デクリメント   | C++20 |
+| [`operator--`](month/op_decrement.md)    | デクリメント   | C++20 |
 | [`operator+=`](month/op_plus_assign.md)  | 加算の複合代入 | C++20 |
 | [`operator-=`](month/op_minus_assign.md) | 減算の複合代入 | C++20 |
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>weekday -- fix typo regarding decrement</title>
      <link href="https://cpprefjp.github.io/reference/chrono/weekday.html"/>
      <id>843786a07d59a2931a50a51fdaba8ea89a692bfc:reference/chrono/weekday.md</id>
      <updated>2022-06-24T18:14:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/weekday.md b/reference/chrono/weekday.md
index aa1a891e0..399ffa320 100644
--- a/reference/chrono/weekday.md
+++ b/reference/chrono/weekday.md
@@ -34,7 +34,7 @@ namespace std::chrono {
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
 | [`operator++`](weekday/op_increment.md)    | インクリメント | C++20 |
-| [`operator-=`](weekday/op_decrement.md)    | デクリメント   | C++20 |
+| [`operator--`](weekday/op_decrement.md)    | デクリメント   | C++20 |
 | [`operator+=`](weekday/op_plus_assign.md)  | 加算の複合代入 | C++20 |
 | [`operator-=`](weekday/op_minus_assign.md) | 減算の複合代入 | C++20 |
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>year -- fix typo regarding decrement</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year.html"/>
      <id>843786a07d59a2931a50a51fdaba8ea89a692bfc:reference/chrono/year.md</id>
      <updated>2022-06-24T18:14:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year.md b/reference/chrono/year.md
index 0dde7e599..a2a186b5d 100644
--- a/reference/chrono/year.md
+++ b/reference/chrono/year.md
@@ -40,7 +40,7 @@ namespace std::chrono {
 | [`operator+`](year/op_unary_plus.md)    | 正の符号       | C++20 |
 | [`operator-`](year/op_unary_minus.md)   | 負の符号 (符号反転する) | C++20 |
 | [`operator++`](year/op_increment.md)    | インクリメント | C++20 |
-| [`operator-=`](year/op_decrement.md)    | デクリメント   | C++20 |
+| [`operator--`](year/op_decrement.md)    | デクリメント   | C++20 |
 | [`operator+=`](year/op_plus_assign.md)  | 加算の複合代入 | C++20 |
 | [`operator-=`](year/op_minus_assign.md) | 減算の複合代入 | C++20 |
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>counted_iterator -- fix typo regarding decrement</title>
      <link href="https://cpprefjp.github.io/reference/iterator/counted_iterator.html"/>
      <id>843786a07d59a2931a50a51fdaba8ea89a692bfc:reference/iterator/counted_iterator.md</id>
      <updated>2022-06-24T18:14:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/counted_iterator.md b/reference/iterator/counted_iterator.md
index e5f100af1..23d5a7a9f 100644
--- a/reference/iterator/counted_iterator.md
+++ b/reference/iterator/counted_iterator.md
@@ -52,7 +52,7 @@ namespace std {
 | [`count`](counted_iterator/count.md)          | 代入演算子 | C++20 |
 | [`operator*`](counted_iterator/op_deref.md)           | 間接参照演算子 | C++20 |
 | [`operator++`](counted_iterator/op_increment.md)      | イテレータをインクリメントする | C++20 |
-| [`operator--`](counted_iterator/op_decrement.md)      | イテレータをインクリメントする | C++20 |
+| [`operator--`](counted_iterator/op_decrement.md)      | イテレータをデクリメントする | C++20 |
 | [`operator+`](counted_iterator/op_plus.md)      | イテレータを進める | C++20 |
 | [`operator+=`](counted_iterator/op_plus_assign.md)    | イテレータ自身を進める | C++20 |
 | [`operator-`](counted_iterator/op_unary_minus.md)     | イテレータを逆に進める | C++20 |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>float_t -- cmath/float_t: x86かつSSE2有効時の型情報修正</title>
      <link href="https://cpprefjp.github.io/reference/cmath/float_t.html"/>
      <id>ba5ca48c6f507fbd85c646ce65c73a1d1695dd5c:reference/cmath/float_t.md</id>
      <updated>2022-06-23T13:42:08+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/float_t.md b/reference/cmath/float_t.md
index 0549345f9..c2fad06c2 100644
--- a/reference/cmath/float_t.md
+++ b/reference/cmath/float_t.md
@@ -27,5 +27,5 @@ namespace std {
 - [Visual C++](/implementation.md#visual_cpp): 2013, 2015, 2017
 	- 2013では、常に`float`の別名。
 	- 2015で、ターゲットのCPUアーキテクチャが`x86`以外である場合、`float`の別名。
-	- 2015で、ターゲットのCPUアーキテクチャが`x86`で、SSE2を使用する場合（`/arch:SSE2`以上のコンパイラオプション）、`double`の別名。
+	- 2015で、ターゲットのCPUアーキテクチャが`x86`で、SSE2を使用する場合（`/arch:SSE2`以上のコンパイラオプション）、`float`の別名。
 	- 2015で、ターゲットのCPUアーキテクチャが`x86`で、SSE2を使用しない場合（`/arch:IA32`や`/arch:SSE`コンパイラオプション）、`long double`の別名。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>common_comparison_category -- common_comparison_category : サンプルコード修正</title>
      <link href="https://cpprefjp.github.io/reference/compare/common_comparison_category.html"/>
      <id>93872494a0eca724e086587646817f6fd1adb574:reference/compare/common_comparison_category.md</id>
      <updated>2022-06-23T10:03:09+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/compare/common_comparison_category.md b/reference/compare/common_comparison_category.md
index b6cd58227..1dc35ac91 100644
--- a/reference/compare/common_comparison_category.md
+++ b/reference/compare/common_comparison_category.md
@@ -47,7 +47,7 @@ namespace std {
 #include &amp;lt;type_traits&amp;gt;
 
 template&amp;lt;typename T, typename Cat&amp;gt;
-using fallback_comp3way = std::conditional_t&amp;lt;std::three_way_comparable&amp;lt;T&amp;gt;, std::compare_three_way_result_t&amp;lt;T&amp;gt;, Cat&amp;gt;;
+using fallback_comp3way_t = std::conditional_t&amp;lt;std::three_way_comparable&amp;lt;T&amp;gt;, std::compare_three_way_result&amp;lt;T&amp;gt;, std::type_identity&amp;lt;Cat&amp;gt;&amp;gt;::type;
 
 using category = std::weak_ordering;
 
@@ -57,11 +57,11 @@ struct triple {
   T2 t2;
   T3 t3;
 
-  //&amp;lt;=&amp;gt;を使用可能ならそれを、そうでないなら&amp;lt; ==を使ってdefault実装
+  // &amp;lt;=&amp;gt;を使用可能ならそれを、そうでないなら&amp;lt; ==を使ってdefault実装
   auto operator&amp;lt;=&amp;gt;(const triple&amp;amp;) const
-    -&amp;gt; std::common_comparison_category_t&amp;lt;fallback_comp3way&amp;lt;T1, category&amp;gt;, fallback_comp3way&amp;lt;T2, category&amp;gt;, fallback_comp3way&amp;lt;T3, category&amp;gt;&amp;gt;
+    -&amp;gt; std::common_comparison_category_t&amp;lt;fallback_comp3way_t&amp;lt;T1, category&amp;gt;, fallback_comp3way_t&amp;lt;T2, category&amp;gt;, fallback_comp3way_t&amp;lt;T3, category&amp;gt;&amp;gt;
       = default;
-}
+};
 
 struct no_spaceship {
   int n;
@@ -75,8 +75,7 @@ struct no_spaceship {
   }
 };
 
-int main()
-{
+int main() {
   triple&amp;lt;int, double, no_spaceship&amp;gt; t1 = {10, 3.14, {20}}, t2 = {10, 3.14, {30}};
 
   std::cout &amp;lt;&amp;lt; std::boolalpha;
@@ -87,6 +86,7 @@ int main()
 }
 ```
 * common_comparison_category_t[color ff0000]
+* type_identity[link /reference/type_traits/type_identity.md]
 
 ### 出力
 ```
@@ -96,8 +96,6 @@ false
 false
 ```
 
-このコードをコンパイルできるコンパイラがまだないため、結果は予想。
-
 ## バージョン
 ### 言語
 - C++20
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>compare_three_way_result -- compare_three_way_result : シンプル化</title>
      <link href="https://cpprefjp.github.io/reference/compare/compare_three_way_result.html"/>
      <id>9f5298a509928a0beb752759be6fd1f50fa07325:reference/compare/compare_three_way_result.md</id>
      <updated>2022-06-23T01:40:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/compare/compare_three_way_result.md b/reference/compare/compare_three_way_result.md
index 60aac5dd5..8af93a5ed 100644
--- a/reference/compare/compare_three_way_result.md
+++ b/reference/compare/compare_three_way_result.md
@@ -42,25 +42,19 @@ namespace std {
 #include &amp;lt;type_traits&amp;gt;
 
 template&amp;lt;typename T, typename Cat&amp;gt;
-struct fallback_comp3way {
-  using type = Cat;
-};
-
-template&amp;lt;std::three_way_comparable T, typename Cat&amp;gt;
-struct fallback_comp3way&amp;lt;T, Cat&amp;gt; {
-  using type = std::compare_three_way_result_t&amp;lt;T&amp;gt;;
-};
+using fallback_comp3way_t = std::conditional_t&amp;lt;std::three_way_comparable&amp;lt;T&amp;gt;, std::compare_three_way_result&amp;lt;T&amp;gt;, std::type_identity&amp;lt;Cat&amp;gt;&amp;gt;::type;
 
 template&amp;lt;typename T&amp;gt;
 struct wrap {
   T t;
 
-  //&amp;lt;=&amp;gt;を使用可能ならそれを、そうでないなら&amp;lt; ==を使ってdefault実装
+  // &amp;lt;=&amp;gt;を使用可能ならそれを、そうでないなら&amp;lt; ==を使ってdefault実装
   auto operator&amp;lt;=&amp;gt;(const wrap&amp;amp;) const
-    -&amp;gt; fallback_comp3way&amp;lt;T, std::weak_ordering&amp;gt;::type
+    -&amp;gt; fallback_comp3way_t&amp;lt;T, std::weak_ordering&amp;gt;
       = default;
 }
 
+// &amp;lt;=&amp;gt;を定義しない型
 struct no_spaceship {
   int n;
 
@@ -85,6 +79,7 @@ int main()
 }
 ```
 * compare_three_way_result_t[color ff0000]
+* type_identity[link /reference/type_traits/type_identity.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>compare_three_way_result -- compare_three_way_result : サンプルコードを動くように修正</title>
      <link href="https://cpprefjp.github.io/reference/compare/compare_three_way_result.html"/>
      <id>03e07f60c74b80e61a0afc55e016b6c7e2a24d0d:reference/compare/compare_three_way_result.md</id>
      <updated>2022-06-23T01:25:17+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/compare/compare_three_way_result.md b/reference/compare/compare_three_way_result.md
index fa4895254..60aac5dd5 100644
--- a/reference/compare/compare_three_way_result.md
+++ b/reference/compare/compare_three_way_result.md
@@ -42,7 +42,14 @@ namespace std {
 #include &amp;lt;type_traits&amp;gt;
 
 template&amp;lt;typename T, typename Cat&amp;gt;
-using fallback_comp3way = std::conditional_t&amp;lt;std::three_way_comparable&amp;lt;T&amp;gt;, std::compare_three_way_result_t&amp;lt;T&amp;gt;, Cat&amp;gt;;
+struct fallback_comp3way {
+  using type = Cat;
+};
+
+template&amp;lt;std::three_way_comparable T, typename Cat&amp;gt;
+struct fallback_comp3way&amp;lt;T, Cat&amp;gt; {
+  using type = std::compare_three_way_result_t&amp;lt;T&amp;gt;;
+};
 
 template&amp;lt;typename T&amp;gt;
 struct wrap {
@@ -50,7 +57,7 @@ struct wrap {
 
   //&amp;lt;=&amp;gt;を使用可能ならそれを、そうでないなら&amp;lt; ==を使ってdefault実装
   auto operator&amp;lt;=&amp;gt;(const wrap&amp;amp;) const
-    -&amp;gt; fallback_comp3way&amp;lt;T, std::weak_ordering&amp;gt;
+    -&amp;gt; fallback_comp3way&amp;lt;T, std::weak_ordering&amp;gt;::type
       = default;
 }
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
</feed>
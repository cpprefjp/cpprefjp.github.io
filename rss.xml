<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2023-10-31T02:27:00.341825</updated>
  <id>c75cf5ca-89a1-4994-8190-55eca115b9a2</id>

  
    <entry>
      <title>equal_to -- ranges::less 等のサンプルコードのコンパイルエラーを修正</title>
      <link href="https://cpprefjp.github.io/reference/functional/ranges_equal_to.html"/>
      <id>c9a543d972fa76272af7350fe9a3af9e571ab42c:reference/functional/ranges_equal_to.md</id>
      <updated>2023-10-31T11:22:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/functional/ranges_equal_to.md b/reference/functional/ranges_equal_to.md
index fba4e4737..94c0f6abb 100644
--- a/reference/functional/ranges_equal_to.md
+++ b/reference/functional/ranges_equal_to.md
@@ -51,7 +51,7 @@ namespace std::ranges {
 
 int main()
 {
-  std::cout &amp;lt;&amp;lt; std::boolalpha &amp;lt;&amp;lt; std::ranges::equal_to&amp;lt;int&amp;gt;()(3, 3) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::boolalpha &amp;lt;&amp;lt; std::ranges::equal_to()(3, 3) &amp;lt;&amp;lt; std::endl;
 }
 ```
 * std::ranges::equal_to[color ff0000]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Ryo Suzuki</name>
        <email>reputeless+github@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>greater -- ranges::less 等のサンプルコードのコンパイルエラーを修正</title>
      <link href="https://cpprefjp.github.io/reference/functional/ranges_greater.html"/>
      <id>c9a543d972fa76272af7350fe9a3af9e571ab42c:reference/functional/ranges_greater.md</id>
      <updated>2023-10-31T11:22:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/functional/ranges_greater.md b/reference/functional/ranges_greater.md
index 6abf76d46..4223b5899 100644
--- a/reference/functional/ranges_greater.md
+++ b/reference/functional/ranges_greater.md
@@ -49,7 +49,7 @@ namespace std::ranges {
 
 int main()
 {
-  std::cout &amp;lt;&amp;lt; std::boolalpha &amp;lt;&amp;lt; std::ranges::greater&amp;lt;int&amp;gt;()(3, 2) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::boolalpha &amp;lt;&amp;lt; std::ranges::greater()(3, 2) &amp;lt;&amp;lt; std::endl;
 }
 ```
 * std::ranges::greater[color ff0000]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Ryo Suzuki</name>
        <email>reputeless+github@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>greater_equal -- ranges::less 等のサンプルコードのコンパイルエラーを修正</title>
      <link href="https://cpprefjp.github.io/reference/functional/ranges_greater_equal.html"/>
      <id>c9a543d972fa76272af7350fe9a3af9e571ab42c:reference/functional/ranges_greater_equal.md</id>
      <updated>2023-10-31T11:22:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/functional/ranges_greater_equal.md b/reference/functional/ranges_greater_equal.md
index 0a47d6eb4..a0e3337f4 100644
--- a/reference/functional/ranges_greater_equal.md
+++ b/reference/functional/ranges_greater_equal.md
@@ -49,7 +49,7 @@ namespace std::ranges {
 
 int main()
 {
-  std::cout &amp;lt;&amp;lt; std::boolalpha &amp;lt;&amp;lt; std::ranges::greater_equal&amp;lt;int&amp;gt;()(3, 2) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::boolalpha &amp;lt;&amp;lt; std::ranges::greater_equal()(3, 2) &amp;lt;&amp;lt; std::endl;
 }
 ```
 * std::ranges::greater_equal[color ff0000]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Ryo Suzuki</name>
        <email>reputeless+github@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>less -- ranges::less 等のサンプルコードのコンパイルエラーを修正</title>
      <link href="https://cpprefjp.github.io/reference/functional/ranges_less.html"/>
      <id>c9a543d972fa76272af7350fe9a3af9e571ab42c:reference/functional/ranges_less.md</id>
      <updated>2023-10-31T11:22:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/functional/ranges_less.md b/reference/functional/ranges_less.md
index 7e3f6323f..5ebebc91c 100644
--- a/reference/functional/ranges_less.md
+++ b/reference/functional/ranges_less.md
@@ -52,7 +52,7 @@ namespace std::ranges {
 
 int main()
 {
-  std::cout &amp;lt;&amp;lt; std::boolalpha &amp;lt;&amp;lt; std::ranges::less&amp;lt;int&amp;gt;()(2, 3) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::boolalpha &amp;lt;&amp;lt; std::ranges::less()(2, 3) &amp;lt;&amp;lt; std::endl;
 }
 ```
 * std::ranges::less[color ff0000]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Ryo Suzuki</name>
        <email>reputeless+github@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>less_equal -- ranges::less 等のサンプルコードのコンパイルエラーを修正</title>
      <link href="https://cpprefjp.github.io/reference/functional/ranges_less_equal.html"/>
      <id>c9a543d972fa76272af7350fe9a3af9e571ab42c:reference/functional/ranges_less_equal.md</id>
      <updated>2023-10-31T11:22:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/functional/ranges_less_equal.md b/reference/functional/ranges_less_equal.md
index 580cf3084..96cbc5aa6 100644
--- a/reference/functional/ranges_less_equal.md
+++ b/reference/functional/ranges_less_equal.md
@@ -49,7 +49,7 @@ namespace std::ranges {
 
 int main()
 {
-  std::cout &amp;lt;&amp;lt; std::boolalpha &amp;lt;&amp;lt; std::ranges::less_equal&amp;lt;int&amp;gt;()(2, 3) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::boolalpha &amp;lt;&amp;lt; std::ranges::less_equal()(2, 3) &amp;lt;&amp;lt; std::endl;
 }
 ```
 * std::ranges::less_equal[color ff0000]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Ryo Suzuki</name>
        <email>reputeless+github@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>not_equal_to -- ranges::less 等のサンプルコードのコンパイルエラーを修正</title>
      <link href="https://cpprefjp.github.io/reference/functional/ranges_not_equal_to.html"/>
      <id>c9a543d972fa76272af7350fe9a3af9e571ab42c:reference/functional/ranges_not_equal_to.md</id>
      <updated>2023-10-31T11:22:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/functional/ranges_not_equal_to.md b/reference/functional/ranges_not_equal_to.md
index b9ce3e099..5254d6b9d 100644
--- a/reference/functional/ranges_not_equal_to.md
+++ b/reference/functional/ranges_not_equal_to.md
@@ -48,7 +48,7 @@ namespace std::ranges {
 
 int main()
 {
-  std::cout &amp;lt;&amp;lt; std::boolalpha &amp;lt;&amp;lt; std::ranges::not_equal_to&amp;lt;int&amp;gt;()(3, 3) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::boolalpha &amp;lt;&amp;lt; std::ranges::not_equal_to()(3, 3) &amp;lt;&amp;lt; std::endl;
 }
 ```
 * std::ranges::not_equal_to[color ff0000]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Ryo Suzuki</name>
        <email>reputeless+github@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>スタイル -- Merge pull request #1208 from ROCKTAKEY/use-source-code-block-to-list-style</title>
      <link href="https://cpprefjp.github.io/working_style.html"/>
      <id>0f8fbdea31f98bb089a65f432e4c2ab44a533fd3:working_style.md</id>
      <updated>2023-10-30T19:48:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/working_style.md b/working_style.md
index ee0da6fab..07f729d4a 100644
--- a/working_style.md
+++ b/working_style.md
@@ -7,12 +7,14 @@
 
 型修飾のスタイル：
 
-- A) const T &amp;amp;v
-- B) const T&amp;amp; v
-- C) const T &amp;amp; v
-- D) T const &amp;amp;v
-- E) T const&amp;amp; v
-- F) T const &amp;amp; v
+```cpp
+/* (A) */ const T &amp;amp;v
+/* (B) */ const T&amp;amp; v
+/* (C) */ const T &amp;amp; v
+/* (D) */ T const &amp;amp;v
+/* (E) */ T const&amp;amp; v
+/* (F) */ T const &amp;amp; v
+```
 
 本サイトでは、Bのスタイルで型修飾を行います。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>暗黙のラムダキャプチャを簡略化 -- fix some typo</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/simplifying_implicit_lambda_capture.html"/>
      <id>de4b233c1adaaabaa2a35c4e3005828b50cef34b:lang/cpp20/simplifying_implicit_lambda_capture.md</id>
      <updated>2023-10-29T14:59:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/simplifying_implicit_lambda_capture.md b/lang/cpp20/simplifying_implicit_lambda_capture.md
index 573ab11e0..0b54668fd 100644
--- a/lang/cpp20/simplifying_implicit_lambda_capture.md
+++ b/lang/cpp20/simplifying_implicit_lambda_capture.md
@@ -2,7 +2,7 @@
 * cpp20[meta cpp]
 
 ## 概要
-ここでは、ラムダ式での暗黙のキャプチャについて、以下のN個の問題を解決する：
+ここでは、ラムダ式での暗黙のキャプチャについて、以下の問題を解決する：
 
 1. ラムダ式内での`decltype((x))`の使用
 2. ラムダ式での構造化束縛のキャプチャ
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>to_array -- fix some typo</title>
      <link href="https://cpprefjp.github.io/reference/array/to_array.html"/>
      <id>de4b233c1adaaabaa2a35c4e3005828b50cef34b:reference/array/to_array.md</id>
      <updated>2023-10-29T14:59:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/array/to_array.md b/reference/array/to_array.md
index b96f234ca..15ad63c03 100644
--- a/reference/array/to_array.md
+++ b/reference/array/to_array.md
@@ -1,6 +1,6 @@
 # to_array
 * array[meta header]
-* function[meta id-type]
+* function template[meta id-type]
 * std[meta namespace]
 * cpp20[meta cpp]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>to_int_type -- fix some typo</title>
      <link href="https://cpprefjp.github.io/reference/string/char_traits/to_int_type.html"/>
      <id>de4b233c1adaaabaa2a35c4e3005828b50cef34b:reference/string/char_traits/to_int_type.md</id>
      <updated>2023-10-29T14:59:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string/char_traits/to_int_type.md b/reference/string/char_traits/to_int_type.md
index 1c8285f22..05b150404 100644
--- a/reference/string/char_traits/to_int_type.md
+++ b/reference/string/char_traits/to_int_type.md
@@ -28,11 +28,11 @@ static constexpr int_type to_int_type(char_type c) noexcept; // C++11
 
 int main()
 {
-  int x = std::char_traits&amp;lt;char&amp;gt;::to_char_type(&amp;#39;A&amp;#39;);
+  int x = std::char_traits&amp;lt;char&amp;gt;::to_int_type(&amp;#39;A&amp;#39;);
   std::cout &amp;lt;&amp;lt; std::hex &amp;lt;&amp;lt; x &amp;lt;&amp;lt; std::endl;
 }
 ```
-* to_char_type[color ff0000]
+* to_int_type[color ff0000]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>[=]によるthisの暗黙のキャプチャを非推奨化 -- improve some examples</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/deprecate_implicit_capture_of_this_via_defcopy.html"/>
      <id>3f57b6362da6d563cc732cc0155939599ba43bab:lang/cpp20/deprecate_implicit_capture_of_this_via_defcopy.md</id>
      <updated>2023-10-29T14:53:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/deprecate_implicit_capture_of_this_via_defcopy.md b/lang/cpp20/deprecate_implicit_capture_of_this_via_defcopy.md
index 6f66c2db7..c557cb099 100644
--- a/lang/cpp20/deprecate_implicit_capture_of_this_via_defcopy.md
+++ b/lang/cpp20/deprecate_implicit_capture_of_this_via_defcopy.md
@@ -21,7 +21,7 @@ struct X {
     };
 
     auto y = [=, this] {  // C++20から推奨される方法：
-      return value + g(); // [=]ではthisポインタはキャプチャされなくなるため、thisを指定してキャプチャすること
+      return value + g(); // [=, this]と別々に指定することで、thisポインタもキャプチャしていることが明示される
     };
   }
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>from_chars -- improve some examples</title>
      <link href="https://cpprefjp.github.io/reference/charconv/from_chars.html"/>
      <id>3f57b6362da6d563cc732cc0155939599ba43bab:reference/charconv/from_chars.md</id>
      <updated>2023-10-29T14:53:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/charconv/from_chars.md b/reference/charconv/from_chars.md
index fe8be9296..d23eec298 100644
--- a/reference/charconv/from_chars.md
+++ b/reference/charconv/from_chars.md
@@ -121,6 +121,7 @@ C++標準はこれら関数の実装の詳細について何も規定しない
 
 ```cpp example
 #include &amp;lt;iostream&amp;gt;
+#include &amp;lt;iomanip&amp;gt;
 #include &amp;lt;charconv&amp;gt;
 
 int main()
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_trivially_copyable -- improve some examples</title>
      <link href="https://cpprefjp.github.io/reference/type_traits/is_trivially_copyable.html"/>
      <id>3f57b6362da6d563cc732cc0155939599ba43bab:reference/type_traits/is_trivially_copyable.md</id>
      <updated>2023-10-29T14:53:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/type_traits/is_trivially_copyable.md b/reference/type_traits/is_trivially_copyable.md
index 7cb491a8c..52671bec7 100644
--- a/reference/type_traits/is_trivially_copyable.md
+++ b/reference/type_traits/is_trivially_copyable.md
@@ -70,7 +70,7 @@ struct optional {
         = default;
     // #2
     optional(optional const&amp;amp; rhs)
-            requires copy_constructible&amp;lt;T&amp;gt;;
+            requires std::copy_constructible&amp;lt;T&amp;gt;;
 };
 ```
 * std::is_trivially_copy_constructible_v[link /reference/type_traits/is_trivially_copy_constructible.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>スタイル -- working_style: 型修飾のスタイルの一覧を等幅フォントで表示するよう修正</title>
      <link href="https://cpprefjp.github.io/working_style.html"/>
      <id>2c7cf5e6f86de685aca92bd133c4be459df95ec7:working_style.md</id>
      <updated>2023-10-27T18:16:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/working_style.md b/working_style.md
index ee0da6fab..07f729d4a 100644
--- a/working_style.md
+++ b/working_style.md
@@ -7,12 +7,14 @@
 
 型修飾のスタイル：
 
-- A) const T &amp;amp;v
-- B) const T&amp;amp; v
-- C) const T &amp;amp; v
-- D) T const &amp;amp;v
-- E) T const&amp;amp; v
-- F) T const &amp;amp; v
+```cpp
+/* (A) */ const T &amp;amp;v
+/* (B) */ const T&amp;amp; v
+/* (C) */ const T &amp;amp; v
+/* (D) */ T const &amp;amp;v
+/* (E) */ T const&amp;amp; v
+/* (F) */ T const &amp;amp; v
+```
 
 本サイトでは、Bのスタイルで型修飾を行います。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>ROCKTAKEY</name>
        <email>rocktakey@gmail.com</email>
      </author>
    </entry>
  
</feed>
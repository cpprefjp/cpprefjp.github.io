<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2023-07-07T14:43:05.069379</updated>
  <id>f6537339-0727-4e79-9de7-749f97441009</id>

  
    <entry>
      <title>operator-= -- fetch_sub の typo 修正</title>
      <link href="https://cpprefjp.github.io/reference/atomic/atomic/op_minus_assign.html"/>
      <id>c1346e39c869eddfdd51c5154b6c8dea1da75cc8:reference/atomic/atomic/op_minus_assign.md</id>
      <updated>2023-07-05T02:42:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/atomic/atomic/op_minus_assign.md b/reference/atomic/atomic/op_minus_assign.md
index 45302ce31..cec6f3039 100644
--- a/reference/atomic/atomic/op_minus_assign.md
+++ b/reference/atomic/atomic/op_minus_assign.md
@@ -11,7 +11,7 @@ T operator-=(T operand) noexcept;          // (2) C++11
 ```
 
 ## 概要
-加算を行う
+減算を行う
 
 
 ## テンプレートパラメータ制約
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>basic_istringstream -- stringstreamコンストラクタのフォーマット修正</title>
      <link href="https://cpprefjp.github.io/reference/sstream/basic_istringstream.html"/>
      <id>a3cf8a41e6d89778b12af4a438e40d1b1f52b673:reference/sstream/basic_istringstream.md</id>
      <updated>2023-07-05T02:32:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/sstream/basic_istringstream.md b/reference/sstream/basic_istringstream.md
index 5965a4499..82c8acc69 100644
--- a/reference/sstream/basic_istringstream.md
+++ b/reference/sstream/basic_istringstream.md
@@ -25,8 +25,8 @@ namespace std {
 
 | 名前                                | 説明                                       | 対応バージョン |
 |-------------------------------------|--------------------------------------------|----------------|
-| (constructor)                       | コンストラクタ                             | |
-| (destructor)                        | デストラクタ                               | |
+| `(constructor)`                     | コンストラクタ                             | |
+| `(destructor)`                      | デストラクタ                               | |
 | `operator=`                         | ムーブ代入                                 | C++11 |
 | `swap`                              | 値の交換                                   | C++11 |
 | `rdbuf`                             | ストリームバッファオブジェクトの設定・取得 | |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>basic_ostringstream -- stringstreamコンストラクタのフォーマット修正</title>
      <link href="https://cpprefjp.github.io/reference/sstream/basic_ostringstream.html"/>
      <id>a3cf8a41e6d89778b12af4a438e40d1b1f52b673:reference/sstream/basic_ostringstream.md</id>
      <updated>2023-07-05T02:32:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/sstream/basic_ostringstream.md b/reference/sstream/basic_ostringstream.md
index f3f0112e5..e6f90336c 100644
--- a/reference/sstream/basic_ostringstream.md
+++ b/reference/sstream/basic_ostringstream.md
@@ -25,8 +25,8 @@ namespace std {
 
 | 名前                                | 説明                                       | 対応バージョン |
 |-------------------------------------|--------------------------------------------|----------------|
-| (constructor)                       | コンストラクタ                             | |
-| (destructor)                        | デストラクタ                               | |
+| `(constructor)`                     | コンストラクタ                             | |
+| `(destructor)`                      | デストラクタ                               | |
 | `operator=`                         | ムーブ代入                                 | C++11 |
 | `swap`                              | 値の交換                                   | C++11 |
 | `rdbuf`                             | ストリームバッファオブジェクトの設定・取得 | |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>basic_stringbuf -- stringstreamコンストラクタのフォーマット修正</title>
      <link href="https://cpprefjp.github.io/reference/sstream/basic_stringbuf.html"/>
      <id>a3cf8a41e6d89778b12af4a438e40d1b1f52b673:reference/sstream/basic_stringbuf.md</id>
      <updated>2023-07-05T02:32:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/sstream/basic_stringbuf.md b/reference/sstream/basic_stringbuf.md
index e5781a87d..eeb830933 100644
--- a/reference/sstream/basic_stringbuf.md
+++ b/reference/sstream/basic_stringbuf.md
@@ -25,8 +25,8 @@ namespace std {
 
 | 名前                            | 説明                                       | 対応バージョン |
 |---------------------------------|--------------------------------------------|----------------|
-| (constructor)                   | コンストラクタ                             | |
-| (destructor)                    | デストラクタ                               | |
+| `(constructor)`                 | コンストラクタ                             | |
+| `(destructor)`                  | デストラクタ                               | |
 | `operator=`                     | ムーブ代入                                 | C++11 |
 | `swap`                          | 値の交換                                   | C++11 |
 | [`str`](basic_stringbuf/str.md) | 文字列オブジェクトの設定・取得             | |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>basic_stringstream -- stringstreamコンストラクタのフォーマット修正</title>
      <link href="https://cpprefjp.github.io/reference/sstream/basic_stringstream.html"/>
      <id>a3cf8a41e6d89778b12af4a438e40d1b1f52b673:reference/sstream/basic_stringstream.md</id>
      <updated>2023-07-05T02:32:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/sstream/basic_stringstream.md b/reference/sstream/basic_stringstream.md
index 01fd9ce37..71337c146 100644
--- a/reference/sstream/basic_stringstream.md
+++ b/reference/sstream/basic_stringstream.md
@@ -25,8 +25,8 @@ namespace std {
 
 | 名前                                | 説明                                       | 対応バージョン |
 |-------------------------------------|--------------------------------------------|----------------|
-| (constructor)                       | コンストラクタ                             | |
-| (destructor)                        | デストラクタ                               | |
+| `(constructor)`                     | コンストラクタ                             | |
+| `(destructor)`                      | デストラクタ                               | |
 | `operator=`                         | ムーブ代入                                 | C++11 |
 | `swap`                              | 値の交換                                   | C++11 |
 | `rdbuf`                             | ストリームバッファオブジェクトの設定・取得 | |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>生文字列リテラル -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/raw_string_literals.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:lang/cpp11/raw_string_literals.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/raw_string_literals.md b/lang/cpp11/raw_string_literals.md
index c2e97999b..1a12d5302 100644
--- a/lang/cpp11/raw_string_literals.md
+++ b/lang/cpp11/raw_string_literals.md
@@ -129,8 +129,8 @@ int main()
 * c_str()[link /reference/string/basic_string/c_str.md]
 * std::streambuf[link /reference/streambuf/basic_streambuf.md]
 * rdbuf[link /reference/ios/basic_ios/rdbuf.md]
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* str()[link /reference/sstream/basic_stringstream/str.md]
 * std::fprintf[link /reference/cstdio/fprintf.md.nolink]
 * Boost.Format[link http://www.boost.org/libs/format]
 * fmtlib[link https://github.com/fmtlib/fmt]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>可変引数テンプレート -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/variadic_templates.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:lang/cpp11/variadic_templates.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/variadic_templates.md b/lang/cpp11/variadic_templates.md
index fefba1917..27b024adf 100644
--- a/lang/cpp11/variadic_templates.md
+++ b/lang/cpp11/variadic_templates.md
@@ -323,7 +323,7 @@ hello
       f(1, &amp;#39;a&amp;#39;, &amp;#34;hello&amp;#34;);
     }
     ```
-    * std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
+    * std::stringstream[link /reference/sstream/basic_stringstream.md]
 
 - 複数のパラメータパックに対して拡張を行う場合、それらのパラメータパックは同じ要素数でなければならない。そうでない場合、プログラムは不適格となる
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;&lt; -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/chrono/duration/op_ostream.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/chrono/duration/op_ostream.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/duration/op_ostream.md b/reference/chrono/duration/op_ostream.md
index 8220e3402..044a8c65f 100644
--- a/reference/chrono/duration/op_ostream.md
+++ b/reference/chrono/duration/op_ostream.md
@@ -33,12 +33,12 @@ s.precision(os.precision());
 s &amp;lt;&amp;lt; d.count() &amp;lt;&amp;lt; units_suffix;
 return os &amp;lt;&amp;lt; s.str();
 ```
-* basic_ostringstream[link /reference/sstream/basic_ostringstream.md.nolink]
+* basic_ostringstream[link /reference/sstream/basic_ostringstream.md]
 * flags[link /reference/ios/ios_base/flags.md]
 * s.imbue[link /reference/ios/ios_base/imbue.md]
 * os.getloc()[link /reference/ios/ios_base/getloc.md]
 * precision[link /reference/ios/ios_base/precision.md]
-* s.str()[link /reference/sstream/basic_ostringstream/str.md.nolink]
+* s.str()[link /reference/sstream/basic_ostringstream/str.md]
 
 ここでの`units_suffix`は、`Period::type`単位型に以下のように対応する：
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;&lt; -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/complex/complex/op_ostream.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/complex/complex/op_ostream.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/complex/complex/op_ostream.md b/reference/complex/complex/op_ostream.md
index d9ae353a4..6f696c235 100644
--- a/reference/complex/complex/op_ostream.md
+++ b/reference/complex/complex/op_ostream.md
@@ -25,14 +25,14 @@ s.precision(os.precision());
 s &amp;lt;&amp;lt; &amp;#39;(&amp;#39; &amp;lt;&amp;lt; x.real() &amp;lt;&amp;lt; &amp;#34;,&amp;#34; &amp;lt;&amp;lt; x.imag() &amp;lt;&amp;lt; &amp;#39;)&amp;#39;;
 return os &amp;lt;&amp;lt; s.str();
 ```
-* basic_ostringstream[link /reference/sstream/basic_ostringstream.md.nolink]
+* basic_ostringstream[link /reference/sstream/basic_ostringstream.md]
 * flags[link /reference/ios/ios_base/flags.md]
 * imbue[link /reference/ios/basic_ios/imbue.md]
 * getloc[link /reference/ios/ios_base/getloc.md]
 * precision[link /reference/ios/ios_base/precision.md]
 * real[link real.md]
 * imag[link imag.md]
-* str[link /reference/sstream/basic_ostringstream/str.md.nolink]
+* str[link /reference/sstream/basic_ostringstream/str.md]
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>quoted -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/iomanip/quoted.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/iomanip/quoted.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iomanip/quoted.md b/reference/iomanip/quoted.md
index 315e97653..eb1fd9bab 100644
--- a/reference/iomanip/quoted.md
+++ b/reference/iomanip/quoted.md
@@ -115,7 +115,7 @@ int main()
 }
 ```
 * std::quoted[color ff0000]
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
 
 ## 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>rdbuf -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/ios/basic_ios/rdbuf.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/ios/basic_ios/rdbuf.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ios/basic_ios/rdbuf.md b/reference/ios/basic_ios/rdbuf.md
index afefc59a9..82ac9860b 100644
--- a/reference/ios/basic_ios/rdbuf.md
+++ b/reference/ios/basic_ios/rdbuf.md
@@ -40,10 +40,10 @@ int main()
   std::cout &amp;lt;&amp;lt; sstr.str();
 }
 ```
-* std::ostringstream[link ../../sstream/basic_ostringstream.md.nolink]
+* std::ostringstream[link ../../sstream/basic_ostringstream.md]
 * std::streambuf[link ../../streambuf/basic_streambuf.md]
 * rdbuf[color ff0000]
-* str()[link ../../sstream/basic_ostringstream/str.md.nolink]
+* str()[link ../../sstream/basic_ostringstream/str.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>iword -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/ios/ios_base/iword.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/ios/ios_base/iword.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ios/ios_base/iword.md b/reference/ios/ios_base/iword.md
index d4caa916a..38a08214f 100644
--- a/reference/ios/ios_base/iword.md
+++ b/reference/ios/ios_base/iword.md
@@ -97,7 +97,7 @@ int main()
 * iword[color ff0000]
 * xalloc[link xalloc.md]
 * std::ostream[link ../../ostream/basic_ostream.md]
-* std::stringstream[link ../../sstream/basic_stringstream.md.nolink]
+* std::stringstream[link ../../sstream/basic_stringstream.md]
 * std::ios_base[link ../ios_base.md]
 * insert[link ../../string/basic_string/insert.md]
 * bad()[link ../basic_ios/bad.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>pword -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/ios/ios_base/pword.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/ios/ios_base/pword.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ios/ios_base/pword.md b/reference/ios/ios_base/pword.md
index c089d4a08..f767722ac 100644
--- a/reference/ios/ios_base/pword.md
+++ b/reference/ios/ios_base/pword.md
@@ -109,7 +109,7 @@ int main()
 * pword[color ff0000]
 * xalloc()[link xalloc.md]
 * std::ostream[link ../../ostream/basic_ostream.md]
-* std::stringstream[link ../../sstream/basic_stringstream.md.nolink]
+* std::stringstream[link ../../sstream/basic_stringstream.md]
 * std::ios_base[link ../ios_base.md]
 * bad()[link ../basic_ios/bad.md]
 * event[link type-event.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>register_callback -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/ios/ios_base/register_callback.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/ios/ios_base/register_callback.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ios/ios_base/register_callback.md b/reference/ios/ios_base/register_callback.md
index 3f5baa92f..45df7a602 100644
--- a/reference/ios/ios_base/register_callback.md
+++ b/reference/ios/ios_base/register_callback.md
@@ -78,7 +78,7 @@ int main()
 }
 ```
 * std::ios_base[link ../ios_base.md]
-* std::stringstream[link ../../sstream/basic_stringstream.md.nolink]
+* std::stringstream[link ../../sstream/basic_stringstream.md]
 * erase_event[link type-event.md]
 * copyfmt_event[link type-event.md]
 * imbue_event[link type-event.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>event -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/ios/ios_base/type-event.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/ios/ios_base/type-event.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ios/ios_base/type-event.md b/reference/ios/ios_base/type-event.md
index 1c62cd590..3886c4032 100644
--- a/reference/ios/ios_base/type-event.md
+++ b/reference/ios/ios_base/type-event.md
@@ -66,7 +66,7 @@ int main()
 }
 ```
 * std::ios_base[link ../ios_base.md]
-* std::stringstream[link ../../sstream/basic_stringstream.md.nolink]
+* std::stringstream[link ../../sstream/basic_stringstream.md]
 * event[color ff0000]
 * erase_event[color ff0000]
 * copyfmt_event[color ff0000]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>openmode -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/ios/ios_base/type-openmode.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/ios/ios_base/type-openmode.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ios/ios_base/type-openmode.md b/reference/ios/ios_base/type-openmode.md
index 93076eead..4bce2140e 100644
--- a/reference/ios/ios_base/type-openmode.md
+++ b/reference/ios/ios_base/type-openmode.md
@@ -48,10 +48,10 @@ int main()
 }
 ```
 * std::ios_base[link ../ios_base.md]
-* std::ostringstream[link ../../sstream/basic_ostringstream.md.nolink]
+* std::ostringstream[link ../../sstream/basic_ostringstream.md]
 * seekp[link ../../ostream/basic_ostream/seekp.md]
 * std::flush[link ../../ostream/flush.md]
-* str()[link ../../sstream/basic_ostringstream/str.md.nolink]
+* str()[link ../../sstream/basic_ostringstream/str.md]
 * openmode[color ff0000]
 * out[color ff0000]
 * ate[color ff0000]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>seekdir -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/ios/ios_base/type-seekdir.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/ios/ios_base/type-seekdir.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ios/ios_base/type-seekdir.md b/reference/ios/ios_base/type-seekdir.md
index 53ee0a8ad..e5b3a674d 100644
--- a/reference/ios/ios_base/type-seekdir.md
+++ b/reference/ios/ios_base/type-seekdir.md
@@ -45,10 +45,10 @@ int main()
 }
 ```
 * std::ios_base[link ../ios_base.md]
-* std::ostringstream[link ../../sstream/basic_ostringstream.md.nolink]
+* std::ostringstream[link ../../sstream/basic_ostringstream.md]
 * seekp[link ../../ostream/basic_ostream/seekp.md]
 * std::flush[link ../../ostream/flush.md]
-* str()[link ../../sstream/basic_ostringstream/str.md.nolink]
+* str()[link ../../sstream/basic_ostringstream/str.md]
 * out[link type-openmode.md]
 * seekdir[color ff0000]
 * beg[color ff0000]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>xalloc -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/ios/ios_base/xalloc.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/ios/ios_base/xalloc.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ios/ios_base/xalloc.md b/reference/ios/ios_base/xalloc.md
index 9afeec126..41f7f70b3 100644
--- a/reference/ios/ios_base/xalloc.md
+++ b/reference/ios/ios_base/xalloc.md
@@ -87,7 +87,7 @@ int main()
 * std::ios_base::xalloc()[color ff0000]
 * std::ostream[link /reference/ostream/basic_ostream.md]
 * pword[link pword.md]
-* std::ostringstream[link /reference/sstream/basic_ostringstream.md.nolink]
+* std::ostringstream[link /reference/sstream/basic_ostringstream.md]
 * std::hex[link /reference/ios/hex.md]
 
 ### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>istream_iterator -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/iterator/istream_iterator.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/iterator/istream_iterator.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/istream_iterator.md b/reference/iterator/istream_iterator.md
index 98a9df2ae..3d2818ea5 100644
--- a/reference/iterator/istream_iterator.md
+++ b/reference/iterator/istream_iterator.md
@@ -82,7 +82,7 @@ int main()
 }
 ```
 * std::istream_iterator[color ff0000]
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator-&gt; -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/iterator/istream_iterator/op_arrow.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/iterator/istream_iterator/op_arrow.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/istream_iterator/op_arrow.md b/reference/iterator/istream_iterator/op_arrow.md
index 53557602f..bc9733d43 100644
--- a/reference/iterator/istream_iterator/op_arrow.md
+++ b/reference/iterator/istream_iterator/op_arrow.md
@@ -38,7 +38,7 @@ int main()
 }
 ```
 * it-&amp;gt;c_str()[color ff0000]
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/iterator/istream_iterator/op_constructor.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/iterator/istream_iterator/op_constructor.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/istream_iterator/op_constructor.md b/reference/iterator/istream_iterator/op_constructor.md
index 138bb078b..65b84578e 100644
--- a/reference/iterator/istream_iterator/op_constructor.md
+++ b/reference/iterator/istream_iterator/op_constructor.md
@@ -38,7 +38,7 @@ int main()
   });
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator* -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/iterator/istream_iterator/op_deref.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/iterator/istream_iterator/op_deref.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/istream_iterator/op_deref.md b/reference/iterator/istream_iterator/op_deref.md
index 070ca3586..a1899a556 100644
--- a/reference/iterator/istream_iterator/op_deref.md
+++ b/reference/iterator/istream_iterator/op_deref.md
@@ -40,7 +40,7 @@ int main()
 }
 ```
 * *it[color ff0000]
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator== -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/iterator/istream_iterator/op_equal.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/iterator/istream_iterator/op_equal.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/istream_iterator/op_equal.md b/reference/iterator/istream_iterator/op_equal.md
index d0c092673..7e38e6da1 100644
--- a/reference/iterator/istream_iterator/op_equal.md
+++ b/reference/iterator/istream_iterator/op_equal.md
@@ -64,7 +64,7 @@ int main()
   std::cout &amp;lt;&amp;lt; &amp;#34;it1 == last : &amp;#34; &amp;lt;&amp;lt; (it1 == last) &amp;lt;&amp;lt; std::endl;
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator++ -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/iterator/istream_iterator/op_increment.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/iterator/istream_iterator/op_increment.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/istream_iterator/op_increment.md b/reference/iterator/istream_iterator/op_increment.md
index 1c8b2e384..d2baaefc5 100644
--- a/reference/iterator/istream_iterator/op_increment.md
+++ b/reference/iterator/istream_iterator/op_increment.md
@@ -49,7 +49,7 @@ int main()
 }
 ```
 * ++it[color ff0000]
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator!= -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/iterator/istream_iterator/op_not_equal.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/iterator/istream_iterator/op_not_equal.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/istream_iterator/op_not_equal.md b/reference/iterator/istream_iterator/op_not_equal.md
index 12a3345b4..b03419ffc 100644
--- a/reference/iterator/istream_iterator/op_not_equal.md
+++ b/reference/iterator/istream_iterator/op_not_equal.md
@@ -56,7 +56,7 @@ int main()
   std::cout &amp;lt;&amp;lt; &amp;#34;it1 == last : &amp;#34; &amp;lt;&amp;lt; (it1 != last) &amp;lt;&amp;lt; std::endl;
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>istreambuf_iterator -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/iterator/istreambuf_iterator.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/iterator/istreambuf_iterator.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/istreambuf_iterator.md b/reference/iterator/istreambuf_iterator.md
index 0dff73f38..066c5a35f 100644
--- a/reference/iterator/istreambuf_iterator.md
+++ b/reference/iterator/istreambuf_iterator.md
@@ -81,7 +81,7 @@ int main()
 }
 ```
 * std::istreambuf_iterator[color ff0000]
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>equal -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/iterator/istreambuf_iterator/equal.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/iterator/istreambuf_iterator/equal.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/istreambuf_iterator/equal.md b/reference/iterator/istreambuf_iterator/equal.md
index c057189b2..9b6ba5fe5 100644
--- a/reference/iterator/istreambuf_iterator/equal.md
+++ b/reference/iterator/istreambuf_iterator/equal.md
@@ -50,7 +50,7 @@ int main()
 }
 ```
 * equal[color ff0000]
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/iterator/istreambuf_iterator/op_constructor.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/iterator/istreambuf_iterator/op_constructor.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/istreambuf_iterator/op_constructor.md b/reference/iterator/istreambuf_iterator/op_constructor.md
index 7c014b3e4..2bbdf5059 100644
--- a/reference/iterator/istreambuf_iterator/op_constructor.md
+++ b/reference/iterator/istreambuf_iterator/op_constructor.md
@@ -40,7 +40,7 @@ int main()
   std::cout &amp;lt;&amp;lt; *it2 &amp;lt;&amp;lt; std::endl;
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator* -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/iterator/istreambuf_iterator/op_deref.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/iterator/istreambuf_iterator/op_deref.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/istreambuf_iterator/op_deref.md b/reference/iterator/istreambuf_iterator/op_deref.md
index 2c55b7e42..3c2f8a993 100644
--- a/reference/iterator/istreambuf_iterator/op_deref.md
+++ b/reference/iterator/istreambuf_iterator/op_deref.md
@@ -33,7 +33,7 @@ int main()
   std::cout &amp;lt;&amp;lt; *it &amp;lt;&amp;lt; std::endl;
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator== -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/iterator/istreambuf_iterator/op_equal.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/iterator/istreambuf_iterator/op_equal.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/istreambuf_iterator/op_equal.md b/reference/iterator/istreambuf_iterator/op_equal.md
index 11384386d..cfebc4f4d 100644
--- a/reference/iterator/istreambuf_iterator/op_equal.md
+++ b/reference/iterator/istreambuf_iterator/op_equal.md
@@ -68,7 +68,7 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator++ -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/iterator/istreambuf_iterator/op_increment.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/iterator/istreambuf_iterator/op_increment.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/istreambuf_iterator/op_increment.md b/reference/iterator/istreambuf_iterator/op_increment.md
index ebf62e6ba..a6db381d0 100644
--- a/reference/iterator/istreambuf_iterator/op_increment.md
+++ b/reference/iterator/istreambuf_iterator/op_increment.md
@@ -47,7 +47,7 @@ int main()
 ```
 * ++it[color ff0000]
 * it++[color ff0000]
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator!= -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/iterator/istreambuf_iterator/op_not_equal.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/iterator/istreambuf_iterator/op_not_equal.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/istreambuf_iterator/op_not_equal.md b/reference/iterator/istreambuf_iterator/op_not_equal.md
index 3271bc401..c567d8dd9 100644
--- a/reference/iterator/istreambuf_iterator/op_not_equal.md
+++ b/reference/iterator/istreambuf_iterator/op_not_equal.md
@@ -50,7 +50,7 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>max_digits10 -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/limits/numeric_limits/max_digits10.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/limits/numeric_limits/max_digits10.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/limits/numeric_limits/max_digits10.md b/reference/limits/numeric_limits/max_digits10.md
index c59e97981..d5869cfae 100644
--- a/reference/limits/numeric_limits/max_digits10.md
+++ b/reference/limits/numeric_limits/max_digits10.md
@@ -82,10 +82,10 @@ int main()
 ```
 * max_digits10[color ff0000]
 * digits10[link digits10.md]
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
 * precision[link /reference/ios/ios_base/precision.md]
 * std::scientific[link /reference/ios/scientific.md]
-* s.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* s.str()[link /reference/sstream/basic_stringstream/str.md]
 * std::nextafter[link /reference/cmath/nextafter.md]
 * std::uint32_t[link /reference/cstdint/uint32_t.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>seekp -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/ostream/basic_ostream/seekp.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/ostream/basic_ostream/seekp.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ostream/basic_ostream/seekp.md b/reference/ostream/basic_ostream/seekp.md
index 8e741a962..fe5c1d4e3 100644
--- a/reference/ostream/basic_ostream/seekp.md
+++ b/reference/ostream/basic_ostream/seekp.md
@@ -47,9 +47,9 @@ int main() {
   std::cout &amp;lt;&amp;lt; os.str() &amp;lt;&amp;lt; std::endl;
 }
 ```
-* std::ostringstream[link ../../sstream/basic_ostringstream.md.nolink]
+* std::ostringstream[link ../../sstream/basic_ostringstream.md]
 * seekp[color ff0000]
-* str()[link ../../sstream/basic_ostringstream/str.md.nolink]
+* str()[link ../../sstream/basic_ostringstream/str.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>tellp -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/ostream/basic_ostream/tellp.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/ostream/basic_ostream/tellp.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ostream/basic_ostream/tellp.md b/reference/ostream/basic_ostream/tellp.md
index fbe665627..bd012c8f2 100644
--- a/reference/ostream/basic_ostream/tellp.md
+++ b/reference/ostream/basic_ostream/tellp.md
@@ -37,9 +37,9 @@ int main() {
   std::cout &amp;lt;&amp;lt; os.str() &amp;lt;&amp;lt; std::endl;
 }
 ```
-* std::ostringstream[link ../../sstream/basic_ostringstream.md.nolink]
+* std::ostringstream[link ../../sstream/basic_ostringstream.md]
 * tellp[color ff0000]
-* str()[link ../../sstream/basic_ostringstream/str.md.nolink]
+* str()[link ../../sstream/basic_ostringstream/str.md]
 * seekp[link seekp.md]
 
 ### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/random/bernoulli_distribution/op_istream.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/random/bernoulli_distribution/op_istream.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/bernoulli_distribution/op_istream.md b/reference/random/bernoulli_distribution/op_istream.md
index b3d999bb2..36d40820e 100644
--- a/reference/random/bernoulli_distribution/op_istream.md
+++ b/reference/random/bernoulli_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/random/binomial_distribution/op_istream.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/random/binomial_distribution/op_istream.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/binomial_distribution/op_istream.md b/reference/random/binomial_distribution/op_istream.md
index 1511a602f..607274a36 100644
--- a/reference/random/binomial_distribution/op_istream.md
+++ b/reference/random/binomial_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/random/cauchy_distribution/op_istream.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/random/cauchy_distribution/op_istream.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/cauchy_distribution/op_istream.md b/reference/random/cauchy_distribution/op_istream.md
index d2ce80ff4..13cd70ca7 100644
--- a/reference/random/cauchy_distribution/op_istream.md
+++ b/reference/random/cauchy_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/random/chi_squared_distribution/op_istream.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/random/chi_squared_distribution/op_istream.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/chi_squared_distribution/op_istream.md b/reference/random/chi_squared_distribution/op_istream.md
index 7ad6d295f..4c465091a 100644
--- a/reference/random/chi_squared_distribution/op_istream.md
+++ b/reference/random/chi_squared_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/random/discard_block_engine/op_istream.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/random/discard_block_engine/op_istream.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/discard_block_engine/op_istream.md b/reference/random/discard_block_engine/op_istream.md
index 65f0aaf44..8936b30c1 100644
--- a/reference/random/discard_block_engine/op_istream.md
+++ b/reference/random/discard_block_engine/op_istream.md
@@ -62,8 +62,8 @@ int main()
 }
 ```
 * std::ranlux24[link /reference/random/ranlux24.md]
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/random/discrete_distribution/op_istream.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/random/discrete_distribution/op_istream.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/discrete_distribution/op_istream.md b/reference/random/discrete_distribution/op_istream.md
index 56db0c66c..9a4959877 100644
--- a/reference/random/discrete_distribution/op_istream.md
+++ b/reference/random/discrete_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/random/exponential_distribution/op_istream.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/random/exponential_distribution/op_istream.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/exponential_distribution/op_istream.md b/reference/random/exponential_distribution/op_istream.md
index 2da09364c..41a2e64fa 100644
--- a/reference/random/exponential_distribution/op_istream.md
+++ b/reference/random/exponential_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/random/extreme_value_distribution/op_istream.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/random/extreme_value_distribution/op_istream.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/extreme_value_distribution/op_istream.md b/reference/random/extreme_value_distribution/op_istream.md
index 5a793168c..7865c3388 100644
--- a/reference/random/extreme_value_distribution/op_istream.md
+++ b/reference/random/extreme_value_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/random/fisher_f_distribution/op_istream.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/random/fisher_f_distribution/op_istream.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/fisher_f_distribution/op_istream.md b/reference/random/fisher_f_distribution/op_istream.md
index 06baf1b92..df5d15d1a 100644
--- a/reference/random/fisher_f_distribution/op_istream.md
+++ b/reference/random/fisher_f_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/random/gamma_distribution/op_istream.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/random/gamma_distribution/op_istream.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/gamma_distribution/op_istream.md b/reference/random/gamma_distribution/op_istream.md
index 0a5b21991..df99de101 100644
--- a/reference/random/gamma_distribution/op_istream.md
+++ b/reference/random/gamma_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/random/geometric_distribution/op_istream.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/random/geometric_distribution/op_istream.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/geometric_distribution/op_istream.md b/reference/random/geometric_distribution/op_istream.md
index 962a83f91..d37e845a6 100644
--- a/reference/random/geometric_distribution/op_istream.md
+++ b/reference/random/geometric_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/random/independent_bits_engine/op_istream.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/random/independent_bits_engine/op_istream.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/independent_bits_engine/op_istream.md b/reference/random/independent_bits_engine/op_istream.md
index fce419449..225d30de2 100644
--- a/reference/random/independent_bits_engine/op_istream.md
+++ b/reference/random/independent_bits_engine/op_istream.md
@@ -65,8 +65,8 @@ int main()
 }
 ```
 * std::uint64_t[link /reference/cstdint/uint64_t.md]
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/random/linear_congruential_engine/op_istream.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/random/linear_congruential_engine/op_istream.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/linear_congruential_engine/op_istream.md b/reference/random/linear_congruential_engine/op_istream.md
index e232d7086..751725d01 100644
--- a/reference/random/linear_congruential_engine/op_istream.md
+++ b/reference/random/linear_congruential_engine/op_istream.md
@@ -62,8 +62,8 @@ int main()
 }
 ```
 * std::minstd_rand[link /reference/random/minstd_rand.md]
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/random/lognormal_distribution/op_istream.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/random/lognormal_distribution/op_istream.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/lognormal_distribution/op_istream.md b/reference/random/lognormal_distribution/op_istream.md
index bf0026f8b..d1d505a7c 100644
--- a/reference/random/lognormal_distribution/op_istream.md
+++ b/reference/random/lognormal_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/random/mersenne_twister_engine/op_istream.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/random/mersenne_twister_engine/op_istream.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/mersenne_twister_engine/op_istream.md b/reference/random/mersenne_twister_engine/op_istream.md
index dd184fade..3c04d5eab 100644
--- a/reference/random/mersenne_twister_engine/op_istream.md
+++ b/reference/random/mersenne_twister_engine/op_istream.md
@@ -64,8 +64,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/random/negative_binomial_distribution/op_istream.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/random/negative_binomial_distribution/op_istream.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/negative_binomial_distribution/op_istream.md b/reference/random/negative_binomial_distribution/op_istream.md
index f5e18a82f..0f250f580 100644
--- a/reference/random/negative_binomial_distribution/op_istream.md
+++ b/reference/random/negative_binomial_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/random/normal_distribution/op_istream.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/random/normal_distribution/op_istream.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/normal_distribution/op_istream.md b/reference/random/normal_distribution/op_istream.md
index 54556f72b..a23c58c6e 100644
--- a/reference/random/normal_distribution/op_istream.md
+++ b/reference/random/normal_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/random/piecewise_constant_distribution/op_istream.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/random/piecewise_constant_distribution/op_istream.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/piecewise_constant_distribution/op_istream.md b/reference/random/piecewise_constant_distribution/op_istream.md
index 99adc1306..8fc62b4b1 100644
--- a/reference/random/piecewise_constant_distribution/op_istream.md
+++ b/reference/random/piecewise_constant_distribution/op_istream.md
@@ -68,8 +68,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 * intervals.begin()[link /reference/array/array/begin.md]
 * intervals.end()[link /reference/array/array/end.md]
 * densities.begin()[link /reference/array/array/begin.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/random/piecewise_linear_distribution/op_istream.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/random/piecewise_linear_distribution/op_istream.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/piecewise_linear_distribution/op_istream.md b/reference/random/piecewise_linear_distribution/op_istream.md
index bd530aa0e..763e0734d 100644
--- a/reference/random/piecewise_linear_distribution/op_istream.md
+++ b/reference/random/piecewise_linear_distribution/op_istream.md
@@ -68,8 +68,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 * intervals.begin()[link /reference/array/array/begin.md]
 * intervals.end()[link /reference/array/array/end.md]
 * densities.begin()[link /reference/array/array/begin.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/random/poisson_distribution/op_istream.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/random/poisson_distribution/op_istream.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/poisson_distribution/op_istream.md b/reference/random/poisson_distribution/op_istream.md
index 47bd55b47..eef3fdf98 100644
--- a/reference/random/poisson_distribution/op_istream.md
+++ b/reference/random/poisson_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/random/shuffle_order_engine/op_istream.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/random/shuffle_order_engine/op_istream.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/shuffle_order_engine/op_istream.md b/reference/random/shuffle_order_engine/op_istream.md
index 5541d888b..5f7187420 100644
--- a/reference/random/shuffle_order_engine/op_istream.md
+++ b/reference/random/shuffle_order_engine/op_istream.md
@@ -62,8 +62,8 @@ int main()
 }
 ```
 * std::knuth_b[link /reference/random/knuth_b.md]
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/random/student_t_distribution/op_istream.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/random/student_t_distribution/op_istream.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/student_t_distribution/op_istream.md b/reference/random/student_t_distribution/op_istream.md
index fe7000f64..d3ad5c925 100644
--- a/reference/random/student_t_distribution/op_istream.md
+++ b/reference/random/student_t_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/random/subtract_with_carry_engine/op_istream.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/random/subtract_with_carry_engine/op_istream.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/subtract_with_carry_engine/op_istream.md b/reference/random/subtract_with_carry_engine/op_istream.md
index e3e70d273..ec76e3031 100644
--- a/reference/random/subtract_with_carry_engine/op_istream.md
+++ b/reference/random/subtract_with_carry_engine/op_istream.md
@@ -62,8 +62,8 @@ int main()
 }
 ```
 * std::ranlux24_base[link /reference/random/ranlux24_base.md]
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/random/uniform_int_distribution/op_istream.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/random/uniform_int_distribution/op_istream.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/uniform_int_distribution/op_istream.md b/reference/random/uniform_int_distribution/op_istream.md
index 8b9f6f184..2ba9daac8 100644
--- a/reference/random/uniform_int_distribution/op_istream.md
+++ b/reference/random/uniform_int_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/random/uniform_real_distribution/op_istream.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/random/uniform_real_distribution/op_istream.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/uniform_real_distribution/op_istream.md b/reference/random/uniform_real_distribution/op_istream.md
index 8089f4d46..41fc4079a 100644
--- a/reference/random/uniform_real_distribution/op_istream.md
+++ b/reference/random/uniform_real_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/random/weibull_distribution/op_istream.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/random/weibull_distribution/op_istream.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/weibull_distribution/op_istream.md b/reference/random/weibull_distribution/op_istream.md
index 6d27afbdb..c02900b8f 100644
--- a/reference/random/weibull_distribution/op_istream.md
+++ b/reference/random/weibull_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>sstream -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/sstream.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/sstream.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;sstream&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;sstream&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;sstream&amp;gt;&lt;/code&gt;ヘッダでは、文字列オブジェクトを出力先・入力元とするストリームクラスを定義する。&lt;/p&gt;
&lt;h2&gt;ストリームバッファ&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/sstream/basic_stringbuf.html&#34;&gt;basic_stringbuf&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列ストリームバッファ(class template)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/sstream/basic_stringbuf.html&#34;&gt;stringbuf&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;char&lt;/code&gt;版の文字列ストリームバッファ(type-alias)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/sstream/basic_stringbuf.html&#34;&gt;wstringbuf&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;wchar_t&lt;/code&gt;版の文字列ストリームバッファ(type-alias)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;入力ストリーム&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/sstream/basic_istringstream.html&#34;&gt;basic_istringstream&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列入力ストリーム(class template)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/sstream/basic_istringstream.html&#34;&gt;istringstream&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;char&lt;/code&gt;版の文字列入力ストリーム(type-alias)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/sstream/basic_istringstream.html&#34;&gt;wistringstream&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;wchar_t&lt;/code&gt;版の文字列入力ストリーム(type-alias)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;出力ストリーム&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/sstream/basic_ostringstream.html&#34;&gt;basic_ostringstream&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列出力ストリーム(class template)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/sstream/basic_ostringstream.html&#34;&gt;ostringstream&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;char&lt;/code&gt;版の文字列出力ストリーム(type-alias)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/sstream/basic_ostringstream.html&#34;&gt;wostringstream&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;wchar_t&lt;/code&gt;版の文字列出力ストリーム(type-alias)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;入出力ストリーム&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/sstream/basic_stringstream.html&#34;&gt;basic_stringstream&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列入出力ストリーム(class template)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/sstream/basic_stringstream.html&#34;&gt;stringstream&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;char&lt;/code&gt;版の文字列入出力ストリーム(type-alias)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/sstream/basic_stringstream.html&#34;&gt;wstringstream&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;wchar_t&lt;/code&gt;版の文字列入出力ストリーム(type-alias)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>basic_istringstream -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/sstream/basic_istringstream.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/sstream/basic_istringstream.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/sstream/basic_istringstream.md b/reference/sstream/basic_istringstream.md
index 374ce0799..5965a4499 100644
--- a/reference/sstream/basic_istringstream.md
+++ b/reference/sstream/basic_istringstream.md
@@ -18,18 +18,20 @@ namespace std {
 * basic_istream[link /reference/istream/basic_istream.md]
 
 ## 概要
+バッファに保持された文字列への読み取り操作ができるストリーム
 
 
 ## メンバ関数
 
-| 名前          | 説明                                       | 対応バージョン |
-|---------------|--------------------------------------------|----------------|
-| (constructor) | コンストラクタ                             | |
-| (destructor)  | デストラクタ                               | |
-| `operator=`   | ムーブ代入                                 | C++11 |
-| `swap`        | 値の交換                                   | C++11 |
-| `rdbuf`       | ストリームバッファオブジェクトの設定・取得 | |
-| `str`         | 文字列オブジェクトの設定・取得             | |
+| 名前                                | 説明                                       | 対応バージョン |
+|-------------------------------------|--------------------------------------------|----------------|
+| (constructor)                       | コンストラクタ                             | |
+| (destructor)                        | デストラクタ                               | |
+| `operator=`                         | ムーブ代入                                 | C++11 |
+| `swap`                              | 値の交換                                   | C++11 |
+| `rdbuf`                             | ストリームバッファオブジェクトの設定・取得 | |
+| [`str`](basic_istringstream/str.md) | 文字列オブジェクトの設定・取得             | |
+| `view`                              | 文字列ビューオブジェクトの取得             | C++20 |
 
 
 ## 非メンバ関数
@@ -58,3 +60,5 @@ namespace std {
 ```
 ```
 
+## 参照
+- [P0408R7 Efficient Access to `basic_stringbuf`’s Buffer](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p0408r7.pdf)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>str -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/sstream/basic_istringstream/str.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/sstream/basic_istringstream/str.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/sstream/basic_istringstream/str.md b/reference/sstream/basic_istringstream/str.md
new file mode 100644
index 000000000..ef88b9951
--- /dev/null
+++ b/reference/sstream/basic_istringstream/str.md
@@ -0,0 +1,33 @@
+# str
+* sstream[meta header]
+* std[meta namespace]
+* basic_istringstream[meta class]
+* function[meta id-type]
+
+```cpp
+basic_string&amp;lt;CharT, Traits, Allocator&amp;gt; str() const;                // (1) C++03
+basic_string&amp;lt;CharT, Traits, Allocator&amp;gt; str() const &amp;amp;;              // (1) C++20
+template &amp;lt;class SAlloc&amp;gt;
+basic_string&amp;lt;CharT, Traits, SAlloc&amp;gt; str(const SAlloc&amp;amp; sa) const &amp;amp;; // (2) C++20
+basic_string&amp;lt;CharT, Traits, Allocator&amp;gt; str() const &amp;amp;&amp;amp;;             // (3) C++20
+
+void str(const basic_string&amp;lt;CharT, Traits, Allocator&amp;gt;&amp;amp; s);  // (4)
+template &amp;lt;class SAlloc&amp;gt;
+void str(const basic_string&amp;lt;CharT, Traits, SAlloc&amp;gt;&amp;amp; s);     // (5) C++20
+void str(const basic_string&amp;lt;CharT, Traits, Allocator&amp;gt;&amp;amp;&amp;amp; s); // (6) C++20
+```
+* basic_string[link /reference/string/basic_string.md]
+
+## 概要
+文字列オブジェクトを取得または設定する。
+
+## 効果
+- (1) : `return rdbuf()-&amp;gt;str()` と等価
+- (2) : `return rdbuf()-&amp;gt;str(sa)` と等価
+- (3) : `return std::move(*rdbuf()).str()` と等価
+- (4) : `rdbuf()-&amp;gt;str(s)` と等価
+- (5) : `rdbuf()-&amp;gt;str(s)` と等価
+- (6) : `rdbuf()-&amp;gt;str(std::move(s))` と等価
+
+## 関連項目
+[basic_stringbuf::str](../basic_stringbuf/str.md)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>basic_ostringstream -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/sstream/basic_ostringstream.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/sstream/basic_ostringstream.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/sstream/basic_ostringstream.md b/reference/sstream/basic_ostringstream.md
new file mode 100644
index 000000000..f3f0112e5
--- /dev/null
+++ b/reference/sstream/basic_ostringstream.md
@@ -0,0 +1,64 @@
+# basic_ostringstream
+* sstream[meta header]
+* std[meta namespace]
+* class template[meta id-type]
+
+```cpp
+namespace std {
+  template &amp;lt;class CharT, class Traits = char_traits&amp;lt;CharT&amp;gt;,
+            class Allocator = allocator&amp;lt;CharT&amp;gt; &amp;gt;
+  class basic_ostringstream : public basic_ostream&amp;lt;CharT, Traits&amp;gt;;
+
+  using ostringstream  = basic_ostringstream&amp;lt;char&amp;gt;;
+  using wostringstream = basic_ostringstream&amp;lt;wchar_t&amp;gt;;
+}
+```
+* char_traits[link /reference/string/char_traits.md]
+* allocator[link /reference/memory/allocator.md]
+* basic_ostream[link /reference/ostream/basic_ostream.md]
+
+## 概要
+バッファに保持された文字列への書き込み操作ができるストリーム
+
+
+## メンバ関数
+
+| 名前                                | 説明                                       | 対応バージョン |
+|-------------------------------------|--------------------------------------------|----------------|
+| (constructor)                       | コンストラクタ                             | |
+| (destructor)                        | デストラクタ                               | |
+| `operator=`                         | ムーブ代入                                 | C++11 |
+| `swap`                              | 値の交換                                   | C++11 |
+| `rdbuf`                             | ストリームバッファオブジェクトの設定・取得 | |
+| [`str`](basic_ostringstream/str.md) | 文字列オブジェクトの設定・取得             | |
+| `view`                              | 文字列ビューオブジェクトの取得             | C++20 |
+
+
+## 非メンバ関数
+
+| 名前   | 説明                          | 対応バージョン |
+|--------|-------------------------------|----------------|
+| `swap` | 2つのオブジェクトを入れ替える | C++11 |
+
+
+## メンバ型
+
+| 名前             | 説明                          | 対応バージョン |
+|------------------|-------------------------------|----------------|
+| `char_type`      | テンプレート仮引数`CharT`     | |
+| `int_type`       | `Traits::int_type`            | |
+| `pos_type`       | `Traits::pos_type`            | |
+| `off_type`       | `Traits::off_type`            | |
+| `traits_type`    | テンプレート仮引数`Traits`    | |
+| `allocator_type` | テンプレート仮引数`Allocator` | |
+
+## 例
+```cpp
+```
+
+### 出力
+```
+```
+
+## 参照
+- [P0408R7 Efficient Access to `basic_stringbuf`’s Buffer](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p0408r7.pdf)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>str -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/sstream/basic_ostringstream/str.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/sstream/basic_ostringstream/str.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/sstream/basic_ostringstream/str.md b/reference/sstream/basic_ostringstream/str.md
new file mode 100644
index 000000000..c00d569fb
--- /dev/null
+++ b/reference/sstream/basic_ostringstream/str.md
@@ -0,0 +1,33 @@
+# str
+* sstream[meta header]
+* std[meta namespace]
+* basic_ostringstream[meta class]
+* function[meta id-type]
+
+```cpp
+basic_string&amp;lt;CharT, Traits, Allocator&amp;gt; str() const;                // (1) C++03
+basic_string&amp;lt;CharT, Traits, Allocator&amp;gt; str() const &amp;amp;;              // (1) C++20
+template &amp;lt;class SAlloc&amp;gt;
+basic_string&amp;lt;CharT, Traits, SAlloc&amp;gt; str(const SAlloc&amp;amp; sa) const &amp;amp;; // (2) C++20
+basic_string&amp;lt;CharT, Traits, Allocator&amp;gt; str() const &amp;amp;&amp;amp;;             // (3) C++20
+
+void str(const basic_string&amp;lt;CharT, Traits, Allocator&amp;gt;&amp;amp; s);  // (4)
+template &amp;lt;class SAlloc&amp;gt;
+void str(const basic_string&amp;lt;CharT, Traits, SAlloc&amp;gt;&amp;amp; s);     // (5) C++20
+void str(const basic_string&amp;lt;CharT, Traits, Allocator&amp;gt;&amp;amp;&amp;amp; s); // (6) C++20
+```
+* basic_string[link /reference/string/basic_string.md]
+
+## 概要
+文字列オブジェクトを取得または設定する。
+
+## 効果
+- (1) : `return rdbuf()-&amp;gt;str()` と等価
+- (2) : `return rdbuf()-&amp;gt;str(sa)` と等価
+- (3) : `return std::move(*rdbuf()).str()` と等価
+- (4) : `rdbuf()-&amp;gt;str(s)` と等価
+- (5) : `rdbuf()-&amp;gt;str(s)` と等価
+- (6) : `rdbuf()-&amp;gt;str(std::move(s))` と等価
+
+## 関連項目
+[basic_stringbuf::str](../basic_stringbuf/str.md)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>basic_stringbuf -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/sstream/basic_stringbuf.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/sstream/basic_stringbuf.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/sstream/basic_stringbuf.md b/reference/sstream/basic_stringbuf.md
new file mode 100644
index 000000000..e5781a87d
--- /dev/null
+++ b/reference/sstream/basic_stringbuf.md
@@ -0,0 +1,57 @@
+# basic_stringbuf
+* sstream[meta header]
+* std[meta namespace]
+* class template[meta id-type]
+
+```cpp
+namespace std {
+  template &amp;lt;class CharT, class Traits = char_traits&amp;lt;CharT&amp;gt;,
+            class Allocator = allocator&amp;lt;CharT&amp;gt; &amp;gt;
+  class basic_stringbuf : public basic_streambuf&amp;lt;CharT, Traits&amp;gt;;
+
+  using stringbuf  = basic_stringbuf&amp;lt;char&amp;gt;;
+  using wstringbuf = basic_stringbuf&amp;lt;wchar_t&amp;gt;;
+}
+```
+* char_traits[link /reference/string/char_traits.md]
+* allocator[link /reference/memory/allocator.md]
+* basic_streambuf[link /reference/streambuf/basic_streambuf.md]
+
+## 概要
+文字列を保持するストリームバッファ
+
+
+## メンバ関数
+
+| 名前                            | 説明                                       | 対応バージョン |
+|---------------------------------|--------------------------------------------|----------------|
+| (constructor)                   | コンストラクタ                             | |
+| (destructor)                    | デストラクタ                               | |
+| `operator=`                     | ムーブ代入                                 | C++11 |
+| `swap`                          | 値の交換                                   | C++11 |
+| [`str`](basic_stringbuf/str.md) | 文字列オブジェクトの設定・取得             | |
+| `view`                          | 文字列ビューオブジェクトの取得             | C++20 |
+| `get_allocator`                 | アロケータの取得                           | C++20 |
+
+
+## 非メンバ関数
+
+| 名前   | 説明                          | 対応バージョン |
+|--------|-------------------------------|----------------|
+| `swap` | 2つのオブジェクトを入れ替える | C++11 |
+
+
+## メンバ型
+
+| 名前             | 説明                          | 対応バージョン |
+|------------------|-------------------------------|----------------|
+| `char_type`      | テンプレート仮引数`CharT`     | |
+| `int_type`       | `Traits::int_type`            | |
+| `pos_type`       | `Traits::pos_type`            | |
+| `off_type`       | `Traits::off_type`            | |
+| `traits_type`    | テンプレート仮引数`Traits`    | |
+| `allocator_type` | テンプレート仮引数`Allocator` | |
+
+
+## 参照
+- [P0408R7 Efficient Access to `basic_stringbuf`’s Buffer](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p0408r7.pdf)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>str -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/sstream/basic_stringbuf/str.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/sstream/basic_stringbuf/str.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/sstream/basic_stringbuf/str.md b/reference/sstream/basic_stringbuf/str.md
new file mode 100644
index 000000000..d02eed80a
--- /dev/null
+++ b/reference/sstream/basic_stringbuf/str.md
@@ -0,0 +1,30 @@
+# str
+* sstream[meta header]
+* std[meta namespace]
+* basic_stringbuf[meta class]
+* function[meta id-type]
+
+```cpp
+basic_string&amp;lt;CharT, Traits, Allocator&amp;gt; str() const;                // (1) C++03
+basic_string&amp;lt;CharT, Traits, Allocator&amp;gt; str() const &amp;amp;;              // (1) C++20
+template &amp;lt;class SAlloc&amp;gt;
+basic_string&amp;lt;CharT, Traits, SAlloc&amp;gt; str(const SAlloc&amp;amp; sa) const &amp;amp;; // (2) C++20
+basic_string&amp;lt;CharT, Traits, Allocator&amp;gt; str() const &amp;amp;&amp;amp;;             // (3) C++20
+
+void str(const basic_string&amp;lt;CharT, Traits, Allocator&amp;gt;&amp;amp; s);  // (4)
+template &amp;lt;class SAlloc&amp;gt;
+void str(const basic_string&amp;lt;CharT, Traits, SAlloc&amp;gt;&amp;amp; s);     // (5) C++20
+void str(const basic_string&amp;lt;CharT, Traits, Allocator&amp;gt;&amp;amp;&amp;amp; s); // (6) C++20
+```
+* basic_string[link /reference/string/basic_string.md]
+
+## 概要
+文字列オブジェクトを取得または設定する。
+
+## 効果
+- (1) : 文字列オブジェクトを取得する
+- (2) : 文字列オブジェクトを取得して、`SAlloc`型のアロケータ`sa`によって確保する
+- (3) : 保持する文字列オブジェクトをムーブして取得する
+- (4) : 文字列オブジェクト`s`を設定する
+- (5) : `SAlloc`型のアロケータによって確保されているデータをコピーして、文字列オブジェクト`s`を設定する
+- (6) : 与えられた文字列オブジェクト`s`をムーブして設定する
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>basic_stringstream -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/sstream/basic_stringstream.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/sstream/basic_stringstream.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/sstream/basic_stringstream.md b/reference/sstream/basic_stringstream.md
new file mode 100644
index 000000000..01fd9ce37
--- /dev/null
+++ b/reference/sstream/basic_stringstream.md
@@ -0,0 +1,64 @@
+# basic_stringstream
+* sstream[meta header]
+* std[meta namespace]
+* class template[meta id-type]
+
+```cpp
+namespace std {
+  template &amp;lt;class CharT, class Traits = char_traits&amp;lt;CharT&amp;gt;,
+            class Allocator = allocator&amp;lt;CharT&amp;gt; &amp;gt;
+  class basic_stringstream : public basic_iostream&amp;lt;CharT, Traits&amp;gt;;
+
+  using stringstream  = basic_stringstream&amp;lt;char&amp;gt;;
+  using wstringstream = basic_stringstream&amp;lt;wchar_t&amp;gt;;
+}
+```
+* char_traits[link /reference/string/char_traits.md]
+* allocator[link /reference/memory/allocator.md]
+* basic_iostream[link /reference/istream/basic_iostream.md]
+
+## 概要
+バッファに保持された文字列への読み取りおよび書き込み操作ができるストリーム
+
+
+## メンバ関数
+
+| 名前                                | 説明                                       | 対応バージョン |
+|-------------------------------------|--------------------------------------------|----------------|
+| (constructor)                       | コンストラクタ                             | |
+| (destructor)                        | デストラクタ                               | |
+| `operator=`                         | ムーブ代入                                 | C++11 |
+| `swap`                              | 値の交換                                   | C++11 |
+| `rdbuf`                             | ストリームバッファオブジェクトの設定・取得 | |
+| [`str`](basic_stringstream/str.md)  | 文字列オブジェクトの設定・取得             | |
+| `view`                              | 文字列ビューオブジェクトの取得             | C++20 |
+
+
+## 非メンバ関数
+
+| 名前   | 説明                          | 対応バージョン |
+|--------|-------------------------------|----------------|
+| `swap` | 2つのオブジェクトを入れ替える | C++11 |
+
+
+## メンバ型
+
+| 名前             | 説明                          | 対応バージョン |
+|------------------|-------------------------------|----------------|
+| `char_type`      | テンプレート仮引数`CharT`     | |
+| `int_type`       | `Traits::int_type`            | |
+| `pos_type`       | `Traits::pos_type`            | |
+| `off_type`       | `Traits::off_type`            | |
+| `traits_type`    | テンプレート仮引数`Traits`    | |
+| `allocator_type` | テンプレート仮引数`Allocator` | |
+
+## 例
+```cpp
+```
+
+### 出力
+```
+```
+
+## 参照
+- [P0408R7 Efficient Access to `basic_stringbuf`’s Buffer](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p0408r7.pdf)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>str -- Merge pull request #1158 from grafi-tt/sstream-and-cpp20effcientstr</title>
      <link href="https://cpprefjp.github.io/reference/sstream/basic_stringstream/str.html"/>
      <id>15748003b1aad96a225ce71f885c12867e9925a2:reference/sstream/basic_stringstream/str.md</id>
      <updated>2023-07-05T02:08:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/sstream/basic_stringstream/str.md b/reference/sstream/basic_stringstream/str.md
new file mode 100644
index 000000000..d76900b4f
--- /dev/null
+++ b/reference/sstream/basic_stringstream/str.md
@@ -0,0 +1,33 @@
+# str
+* sstream[meta header]
+* std[meta namespace]
+* basic_stringstream[meta class]
+* function[meta id-type]
+
+```cpp
+basic_string&amp;lt;CharT, Traits, Allocator&amp;gt; str() const;                // (1) C++03
+basic_string&amp;lt;CharT, Traits, Allocator&amp;gt; str() const &amp;amp;;              // (1) C++20
+template &amp;lt;class SAlloc&amp;gt;
+basic_string&amp;lt;CharT, Traits, SAlloc&amp;gt; str(const SAlloc&amp;amp; sa) const &amp;amp;; // (2) C++20
+basic_string&amp;lt;CharT, Traits, Allocator&amp;gt; str() const &amp;amp;&amp;amp;;             // (3) C++20
+
+void str(const basic_string&amp;lt;CharT, Traits, Allocator&amp;gt;&amp;amp; s);  // (4)
+template &amp;lt;class SAlloc&amp;gt;
+void str(const basic_string&amp;lt;CharT, Traits, SAlloc&amp;gt;&amp;amp; s);     // (5) C++20
+void str(const basic_string&amp;lt;CharT, Traits, Allocator&amp;gt;&amp;amp;&amp;amp; s); // (6) C++20
+```
+* basic_string[link /reference/string/basic_string.md]
+
+## 概要
+文字列オブジェクトを取得または設定する。
+
+## 効果
+- (1) : `return rdbuf()-&amp;gt;str()` と等価
+- (2) : `return rdbuf()-&amp;gt;str(sa)` と等価
+- (3) : `return std::move(*rdbuf()).str()` と等価
+- (4) : `rdbuf()-&amp;gt;str(s)` と等価
+- (5) : `rdbuf()-&amp;gt;str(s)` と等価
+- (6) : `rdbuf()-&amp;gt;str(std::move(s))` と等価
+
+## 関連項目
+[basic_stringbuf::str](../basic_stringbuf/str.md)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>生文字列リテラル -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/raw_string_literals.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:lang/cpp11/raw_string_literals.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/raw_string_literals.md b/lang/cpp11/raw_string_literals.md
index c2e97999b..1a12d5302 100644
--- a/lang/cpp11/raw_string_literals.md
+++ b/lang/cpp11/raw_string_literals.md
@@ -129,8 +129,8 @@ int main()
 * c_str()[link /reference/string/basic_string/c_str.md]
 * std::streambuf[link /reference/streambuf/basic_streambuf.md]
 * rdbuf[link /reference/ios/basic_ios/rdbuf.md]
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* str()[link /reference/sstream/basic_stringstream/str.md]
 * std::fprintf[link /reference/cstdio/fprintf.md.nolink]
 * Boost.Format[link http://www.boost.org/libs/format]
 * fmtlib[link https://github.com/fmtlib/fmt]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>可変引数テンプレート -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/variadic_templates.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:lang/cpp11/variadic_templates.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/variadic_templates.md b/lang/cpp11/variadic_templates.md
index fefba1917..27b024adf 100644
--- a/lang/cpp11/variadic_templates.md
+++ b/lang/cpp11/variadic_templates.md
@@ -323,7 +323,7 @@ hello
       f(1, &amp;#39;a&amp;#39;, &amp;#34;hello&amp;#34;);
     }
     ```
-    * std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
+    * std::stringstream[link /reference/sstream/basic_stringstream.md]
 
 - 複数のパラメータパックに対して拡張を行う場合、それらのパラメータパックは同じ要素数でなければならない。そうでない場合、プログラムは不適格となる
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;&lt; -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/duration/op_ostream.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/chrono/duration/op_ostream.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/duration/op_ostream.md b/reference/chrono/duration/op_ostream.md
index 8220e3402..044a8c65f 100644
--- a/reference/chrono/duration/op_ostream.md
+++ b/reference/chrono/duration/op_ostream.md
@@ -33,12 +33,12 @@ s.precision(os.precision());
 s &amp;lt;&amp;lt; d.count() &amp;lt;&amp;lt; units_suffix;
 return os &amp;lt;&amp;lt; s.str();
 ```
-* basic_ostringstream[link /reference/sstream/basic_ostringstream.md.nolink]
+* basic_ostringstream[link /reference/sstream/basic_ostringstream.md]
 * flags[link /reference/ios/ios_base/flags.md]
 * s.imbue[link /reference/ios/ios_base/imbue.md]
 * os.getloc()[link /reference/ios/ios_base/getloc.md]
 * precision[link /reference/ios/ios_base/precision.md]
-* s.str()[link /reference/sstream/basic_ostringstream/str.md.nolink]
+* s.str()[link /reference/sstream/basic_ostringstream/str.md]
 
 ここでの`units_suffix`は、`Period::type`単位型に以下のように対応する：
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;&lt; -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/complex/complex/op_ostream.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/complex/complex/op_ostream.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/complex/complex/op_ostream.md b/reference/complex/complex/op_ostream.md
index d9ae353a4..6f696c235 100644
--- a/reference/complex/complex/op_ostream.md
+++ b/reference/complex/complex/op_ostream.md
@@ -25,14 +25,14 @@ s.precision(os.precision());
 s &amp;lt;&amp;lt; &amp;#39;(&amp;#39; &amp;lt;&amp;lt; x.real() &amp;lt;&amp;lt; &amp;#34;,&amp;#34; &amp;lt;&amp;lt; x.imag() &amp;lt;&amp;lt; &amp;#39;)&amp;#39;;
 return os &amp;lt;&amp;lt; s.str();
 ```
-* basic_ostringstream[link /reference/sstream/basic_ostringstream.md.nolink]
+* basic_ostringstream[link /reference/sstream/basic_ostringstream.md]
 * flags[link /reference/ios/ios_base/flags.md]
 * imbue[link /reference/ios/basic_ios/imbue.md]
 * getloc[link /reference/ios/ios_base/getloc.md]
 * precision[link /reference/ios/ios_base/precision.md]
 * real[link real.md]
 * imag[link imag.md]
-* str[link /reference/sstream/basic_ostringstream/str.md.nolink]
+* str[link /reference/sstream/basic_ostringstream/str.md]
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>quoted -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/iomanip/quoted.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/iomanip/quoted.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iomanip/quoted.md b/reference/iomanip/quoted.md
index 315e97653..eb1fd9bab 100644
--- a/reference/iomanip/quoted.md
+++ b/reference/iomanip/quoted.md
@@ -115,7 +115,7 @@ int main()
 }
 ```
 * std::quoted[color ff0000]
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
 
 ## 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>rdbuf -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/ios/basic_ios/rdbuf.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/ios/basic_ios/rdbuf.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ios/basic_ios/rdbuf.md b/reference/ios/basic_ios/rdbuf.md
index afefc59a9..82ac9860b 100644
--- a/reference/ios/basic_ios/rdbuf.md
+++ b/reference/ios/basic_ios/rdbuf.md
@@ -40,10 +40,10 @@ int main()
   std::cout &amp;lt;&amp;lt; sstr.str();
 }
 ```
-* std::ostringstream[link ../../sstream/basic_ostringstream.md.nolink]
+* std::ostringstream[link ../../sstream/basic_ostringstream.md]
 * std::streambuf[link ../../streambuf/basic_streambuf.md]
 * rdbuf[color ff0000]
-* str()[link ../../sstream/basic_ostringstream/str.md.nolink]
+* str()[link ../../sstream/basic_ostringstream/str.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>iword -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/ios/ios_base/iword.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/ios/ios_base/iword.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ios/ios_base/iword.md b/reference/ios/ios_base/iword.md
index d4caa916a..38a08214f 100644
--- a/reference/ios/ios_base/iword.md
+++ b/reference/ios/ios_base/iword.md
@@ -97,7 +97,7 @@ int main()
 * iword[color ff0000]
 * xalloc[link xalloc.md]
 * std::ostream[link ../../ostream/basic_ostream.md]
-* std::stringstream[link ../../sstream/basic_stringstream.md.nolink]
+* std::stringstream[link ../../sstream/basic_stringstream.md]
 * std::ios_base[link ../ios_base.md]
 * insert[link ../../string/basic_string/insert.md]
 * bad()[link ../basic_ios/bad.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>pword -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/ios/ios_base/pword.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/ios/ios_base/pword.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ios/ios_base/pword.md b/reference/ios/ios_base/pword.md
index c089d4a08..f767722ac 100644
--- a/reference/ios/ios_base/pword.md
+++ b/reference/ios/ios_base/pword.md
@@ -109,7 +109,7 @@ int main()
 * pword[color ff0000]
 * xalloc()[link xalloc.md]
 * std::ostream[link ../../ostream/basic_ostream.md]
-* std::stringstream[link ../../sstream/basic_stringstream.md.nolink]
+* std::stringstream[link ../../sstream/basic_stringstream.md]
 * std::ios_base[link ../ios_base.md]
 * bad()[link ../basic_ios/bad.md]
 * event[link type-event.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>register_callback -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/ios/ios_base/register_callback.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/ios/ios_base/register_callback.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ios/ios_base/register_callback.md b/reference/ios/ios_base/register_callback.md
index 3f5baa92f..45df7a602 100644
--- a/reference/ios/ios_base/register_callback.md
+++ b/reference/ios/ios_base/register_callback.md
@@ -78,7 +78,7 @@ int main()
 }
 ```
 * std::ios_base[link ../ios_base.md]
-* std::stringstream[link ../../sstream/basic_stringstream.md.nolink]
+* std::stringstream[link ../../sstream/basic_stringstream.md]
 * erase_event[link type-event.md]
 * copyfmt_event[link type-event.md]
 * imbue_event[link type-event.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>event -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/ios/ios_base/type-event.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/ios/ios_base/type-event.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ios/ios_base/type-event.md b/reference/ios/ios_base/type-event.md
index 1c62cd590..3886c4032 100644
--- a/reference/ios/ios_base/type-event.md
+++ b/reference/ios/ios_base/type-event.md
@@ -66,7 +66,7 @@ int main()
 }
 ```
 * std::ios_base[link ../ios_base.md]
-* std::stringstream[link ../../sstream/basic_stringstream.md.nolink]
+* std::stringstream[link ../../sstream/basic_stringstream.md]
 * event[color ff0000]
 * erase_event[color ff0000]
 * copyfmt_event[color ff0000]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>openmode -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/ios/ios_base/type-openmode.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/ios/ios_base/type-openmode.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ios/ios_base/type-openmode.md b/reference/ios/ios_base/type-openmode.md
index 93076eead..4bce2140e 100644
--- a/reference/ios/ios_base/type-openmode.md
+++ b/reference/ios/ios_base/type-openmode.md
@@ -48,10 +48,10 @@ int main()
 }
 ```
 * std::ios_base[link ../ios_base.md]
-* std::ostringstream[link ../../sstream/basic_ostringstream.md.nolink]
+* std::ostringstream[link ../../sstream/basic_ostringstream.md]
 * seekp[link ../../ostream/basic_ostream/seekp.md]
 * std::flush[link ../../ostream/flush.md]
-* str()[link ../../sstream/basic_ostringstream/str.md.nolink]
+* str()[link ../../sstream/basic_ostringstream/str.md]
 * openmode[color ff0000]
 * out[color ff0000]
 * ate[color ff0000]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>seekdir -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/ios/ios_base/type-seekdir.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/ios/ios_base/type-seekdir.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ios/ios_base/type-seekdir.md b/reference/ios/ios_base/type-seekdir.md
index 53ee0a8ad..e5b3a674d 100644
--- a/reference/ios/ios_base/type-seekdir.md
+++ b/reference/ios/ios_base/type-seekdir.md
@@ -45,10 +45,10 @@ int main()
 }
 ```
 * std::ios_base[link ../ios_base.md]
-* std::ostringstream[link ../../sstream/basic_ostringstream.md.nolink]
+* std::ostringstream[link ../../sstream/basic_ostringstream.md]
 * seekp[link ../../ostream/basic_ostream/seekp.md]
 * std::flush[link ../../ostream/flush.md]
-* str()[link ../../sstream/basic_ostringstream/str.md.nolink]
+* str()[link ../../sstream/basic_ostringstream/str.md]
 * out[link type-openmode.md]
 * seekdir[color ff0000]
 * beg[color ff0000]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>xalloc -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/ios/ios_base/xalloc.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/ios/ios_base/xalloc.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ios/ios_base/xalloc.md b/reference/ios/ios_base/xalloc.md
index 9afeec126..41f7f70b3 100644
--- a/reference/ios/ios_base/xalloc.md
+++ b/reference/ios/ios_base/xalloc.md
@@ -87,7 +87,7 @@ int main()
 * std::ios_base::xalloc()[color ff0000]
 * std::ostream[link /reference/ostream/basic_ostream.md]
 * pword[link pword.md]
-* std::ostringstream[link /reference/sstream/basic_ostringstream.md.nolink]
+* std::ostringstream[link /reference/sstream/basic_ostringstream.md]
 * std::hex[link /reference/ios/hex.md]
 
 ### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>istream_iterator -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/iterator/istream_iterator.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/iterator/istream_iterator.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/istream_iterator.md b/reference/iterator/istream_iterator.md
index 98a9df2ae..3d2818ea5 100644
--- a/reference/iterator/istream_iterator.md
+++ b/reference/iterator/istream_iterator.md
@@ -82,7 +82,7 @@ int main()
 }
 ```
 * std::istream_iterator[color ff0000]
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator-&gt; -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/iterator/istream_iterator/op_arrow.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/iterator/istream_iterator/op_arrow.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/istream_iterator/op_arrow.md b/reference/iterator/istream_iterator/op_arrow.md
index 53557602f..bc9733d43 100644
--- a/reference/iterator/istream_iterator/op_arrow.md
+++ b/reference/iterator/istream_iterator/op_arrow.md
@@ -38,7 +38,7 @@ int main()
 }
 ```
 * it-&amp;gt;c_str()[color ff0000]
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/iterator/istream_iterator/op_constructor.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/iterator/istream_iterator/op_constructor.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/istream_iterator/op_constructor.md b/reference/iterator/istream_iterator/op_constructor.md
index 138bb078b..65b84578e 100644
--- a/reference/iterator/istream_iterator/op_constructor.md
+++ b/reference/iterator/istream_iterator/op_constructor.md
@@ -38,7 +38,7 @@ int main()
   });
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator* -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/iterator/istream_iterator/op_deref.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/iterator/istream_iterator/op_deref.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/istream_iterator/op_deref.md b/reference/iterator/istream_iterator/op_deref.md
index 070ca3586..a1899a556 100644
--- a/reference/iterator/istream_iterator/op_deref.md
+++ b/reference/iterator/istream_iterator/op_deref.md
@@ -40,7 +40,7 @@ int main()
 }
 ```
 * *it[color ff0000]
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator== -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/iterator/istream_iterator/op_equal.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/iterator/istream_iterator/op_equal.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/istream_iterator/op_equal.md b/reference/iterator/istream_iterator/op_equal.md
index d0c092673..7e38e6da1 100644
--- a/reference/iterator/istream_iterator/op_equal.md
+++ b/reference/iterator/istream_iterator/op_equal.md
@@ -64,7 +64,7 @@ int main()
   std::cout &amp;lt;&amp;lt; &amp;#34;it1 == last : &amp;#34; &amp;lt;&amp;lt; (it1 == last) &amp;lt;&amp;lt; std::endl;
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator++ -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/iterator/istream_iterator/op_increment.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/iterator/istream_iterator/op_increment.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/istream_iterator/op_increment.md b/reference/iterator/istream_iterator/op_increment.md
index 1c8b2e384..d2baaefc5 100644
--- a/reference/iterator/istream_iterator/op_increment.md
+++ b/reference/iterator/istream_iterator/op_increment.md
@@ -49,7 +49,7 @@ int main()
 }
 ```
 * ++it[color ff0000]
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator!= -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/iterator/istream_iterator/op_not_equal.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/iterator/istream_iterator/op_not_equal.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/istream_iterator/op_not_equal.md b/reference/iterator/istream_iterator/op_not_equal.md
index 12a3345b4..b03419ffc 100644
--- a/reference/iterator/istream_iterator/op_not_equal.md
+++ b/reference/iterator/istream_iterator/op_not_equal.md
@@ -56,7 +56,7 @@ int main()
   std::cout &amp;lt;&amp;lt; &amp;#34;it1 == last : &amp;#34; &amp;lt;&amp;lt; (it1 != last) &amp;lt;&amp;lt; std::endl;
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>istreambuf_iterator -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/iterator/istreambuf_iterator.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/iterator/istreambuf_iterator.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/istreambuf_iterator.md b/reference/iterator/istreambuf_iterator.md
index 0dff73f38..066c5a35f 100644
--- a/reference/iterator/istreambuf_iterator.md
+++ b/reference/iterator/istreambuf_iterator.md
@@ -81,7 +81,7 @@ int main()
 }
 ```
 * std::istreambuf_iterator[color ff0000]
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>equal -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/iterator/istreambuf_iterator/equal.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/iterator/istreambuf_iterator/equal.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/istreambuf_iterator/equal.md b/reference/iterator/istreambuf_iterator/equal.md
index c057189b2..9b6ba5fe5 100644
--- a/reference/iterator/istreambuf_iterator/equal.md
+++ b/reference/iterator/istreambuf_iterator/equal.md
@@ -50,7 +50,7 @@ int main()
 }
 ```
 * equal[color ff0000]
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/iterator/istreambuf_iterator/op_constructor.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/iterator/istreambuf_iterator/op_constructor.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/istreambuf_iterator/op_constructor.md b/reference/iterator/istreambuf_iterator/op_constructor.md
index 7c014b3e4..2bbdf5059 100644
--- a/reference/iterator/istreambuf_iterator/op_constructor.md
+++ b/reference/iterator/istreambuf_iterator/op_constructor.md
@@ -40,7 +40,7 @@ int main()
   std::cout &amp;lt;&amp;lt; *it2 &amp;lt;&amp;lt; std::endl;
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator* -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/iterator/istreambuf_iterator/op_deref.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/iterator/istreambuf_iterator/op_deref.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/istreambuf_iterator/op_deref.md b/reference/iterator/istreambuf_iterator/op_deref.md
index 2c55b7e42..3c2f8a993 100644
--- a/reference/iterator/istreambuf_iterator/op_deref.md
+++ b/reference/iterator/istreambuf_iterator/op_deref.md
@@ -33,7 +33,7 @@ int main()
   std::cout &amp;lt;&amp;lt; *it &amp;lt;&amp;lt; std::endl;
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator== -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/iterator/istreambuf_iterator/op_equal.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/iterator/istreambuf_iterator/op_equal.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/istreambuf_iterator/op_equal.md b/reference/iterator/istreambuf_iterator/op_equal.md
index 11384386d..cfebc4f4d 100644
--- a/reference/iterator/istreambuf_iterator/op_equal.md
+++ b/reference/iterator/istreambuf_iterator/op_equal.md
@@ -68,7 +68,7 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator++ -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/iterator/istreambuf_iterator/op_increment.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/iterator/istreambuf_iterator/op_increment.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/istreambuf_iterator/op_increment.md b/reference/iterator/istreambuf_iterator/op_increment.md
index ebf62e6ba..a6db381d0 100644
--- a/reference/iterator/istreambuf_iterator/op_increment.md
+++ b/reference/iterator/istreambuf_iterator/op_increment.md
@@ -47,7 +47,7 @@ int main()
 ```
 * ++it[color ff0000]
 * it++[color ff0000]
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator!= -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/iterator/istreambuf_iterator/op_not_equal.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/iterator/istreambuf_iterator/op_not_equal.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/istreambuf_iterator/op_not_equal.md b/reference/iterator/istreambuf_iterator/op_not_equal.md
index 3271bc401..c567d8dd9 100644
--- a/reference/iterator/istreambuf_iterator/op_not_equal.md
+++ b/reference/iterator/istreambuf_iterator/op_not_equal.md
@@ -50,7 +50,7 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>max_digits10 -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/limits/numeric_limits/max_digits10.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/limits/numeric_limits/max_digits10.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/limits/numeric_limits/max_digits10.md b/reference/limits/numeric_limits/max_digits10.md
index c59e97981..d5869cfae 100644
--- a/reference/limits/numeric_limits/max_digits10.md
+++ b/reference/limits/numeric_limits/max_digits10.md
@@ -82,10 +82,10 @@ int main()
 ```
 * max_digits10[color ff0000]
 * digits10[link digits10.md]
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
 * precision[link /reference/ios/ios_base/precision.md]
 * std::scientific[link /reference/ios/scientific.md]
-* s.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* s.str()[link /reference/sstream/basic_stringstream/str.md]
 * std::nextafter[link /reference/cmath/nextafter.md]
 * std::uint32_t[link /reference/cstdint/uint32_t.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>seekp -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/ostream/basic_ostream/seekp.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/ostream/basic_ostream/seekp.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ostream/basic_ostream/seekp.md b/reference/ostream/basic_ostream/seekp.md
index 8e741a962..fe5c1d4e3 100644
--- a/reference/ostream/basic_ostream/seekp.md
+++ b/reference/ostream/basic_ostream/seekp.md
@@ -47,9 +47,9 @@ int main() {
   std::cout &amp;lt;&amp;lt; os.str() &amp;lt;&amp;lt; std::endl;
 }
 ```
-* std::ostringstream[link ../../sstream/basic_ostringstream.md.nolink]
+* std::ostringstream[link ../../sstream/basic_ostringstream.md]
 * seekp[color ff0000]
-* str()[link ../../sstream/basic_ostringstream/str.md.nolink]
+* str()[link ../../sstream/basic_ostringstream/str.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>tellp -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/ostream/basic_ostream/tellp.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/ostream/basic_ostream/tellp.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ostream/basic_ostream/tellp.md b/reference/ostream/basic_ostream/tellp.md
index fbe665627..bd012c8f2 100644
--- a/reference/ostream/basic_ostream/tellp.md
+++ b/reference/ostream/basic_ostream/tellp.md
@@ -37,9 +37,9 @@ int main() {
   std::cout &amp;lt;&amp;lt; os.str() &amp;lt;&amp;lt; std::endl;
 }
 ```
-* std::ostringstream[link ../../sstream/basic_ostringstream.md.nolink]
+* std::ostringstream[link ../../sstream/basic_ostringstream.md]
 * tellp[color ff0000]
-* str()[link ../../sstream/basic_ostringstream/str.md.nolink]
+* str()[link ../../sstream/basic_ostringstream/str.md]
 * seekp[link seekp.md]
 
 ### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/random/bernoulli_distribution/op_istream.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/random/bernoulli_distribution/op_istream.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/bernoulli_distribution/op_istream.md b/reference/random/bernoulli_distribution/op_istream.md
index b3d999bb2..36d40820e 100644
--- a/reference/random/bernoulli_distribution/op_istream.md
+++ b/reference/random/bernoulli_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/random/binomial_distribution/op_istream.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/random/binomial_distribution/op_istream.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/binomial_distribution/op_istream.md b/reference/random/binomial_distribution/op_istream.md
index 1511a602f..607274a36 100644
--- a/reference/random/binomial_distribution/op_istream.md
+++ b/reference/random/binomial_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/random/cauchy_distribution/op_istream.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/random/cauchy_distribution/op_istream.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/cauchy_distribution/op_istream.md b/reference/random/cauchy_distribution/op_istream.md
index d2ce80ff4..13cd70ca7 100644
--- a/reference/random/cauchy_distribution/op_istream.md
+++ b/reference/random/cauchy_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/random/chi_squared_distribution/op_istream.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/random/chi_squared_distribution/op_istream.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/chi_squared_distribution/op_istream.md b/reference/random/chi_squared_distribution/op_istream.md
index 7ad6d295f..4c465091a 100644
--- a/reference/random/chi_squared_distribution/op_istream.md
+++ b/reference/random/chi_squared_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/random/discard_block_engine/op_istream.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/random/discard_block_engine/op_istream.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/discard_block_engine/op_istream.md b/reference/random/discard_block_engine/op_istream.md
index 65f0aaf44..8936b30c1 100644
--- a/reference/random/discard_block_engine/op_istream.md
+++ b/reference/random/discard_block_engine/op_istream.md
@@ -62,8 +62,8 @@ int main()
 }
 ```
 * std::ranlux24[link /reference/random/ranlux24.md]
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/random/discrete_distribution/op_istream.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/random/discrete_distribution/op_istream.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/discrete_distribution/op_istream.md b/reference/random/discrete_distribution/op_istream.md
index 56db0c66c..9a4959877 100644
--- a/reference/random/discrete_distribution/op_istream.md
+++ b/reference/random/discrete_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/random/exponential_distribution/op_istream.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/random/exponential_distribution/op_istream.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/exponential_distribution/op_istream.md b/reference/random/exponential_distribution/op_istream.md
index 2da09364c..41a2e64fa 100644
--- a/reference/random/exponential_distribution/op_istream.md
+++ b/reference/random/exponential_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/random/extreme_value_distribution/op_istream.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/random/extreme_value_distribution/op_istream.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/extreme_value_distribution/op_istream.md b/reference/random/extreme_value_distribution/op_istream.md
index 5a793168c..7865c3388 100644
--- a/reference/random/extreme_value_distribution/op_istream.md
+++ b/reference/random/extreme_value_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/random/fisher_f_distribution/op_istream.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/random/fisher_f_distribution/op_istream.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/fisher_f_distribution/op_istream.md b/reference/random/fisher_f_distribution/op_istream.md
index 06baf1b92..df5d15d1a 100644
--- a/reference/random/fisher_f_distribution/op_istream.md
+++ b/reference/random/fisher_f_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/random/gamma_distribution/op_istream.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/random/gamma_distribution/op_istream.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/gamma_distribution/op_istream.md b/reference/random/gamma_distribution/op_istream.md
index 0a5b21991..df99de101 100644
--- a/reference/random/gamma_distribution/op_istream.md
+++ b/reference/random/gamma_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/random/geometric_distribution/op_istream.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/random/geometric_distribution/op_istream.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/geometric_distribution/op_istream.md b/reference/random/geometric_distribution/op_istream.md
index 962a83f91..d37e845a6 100644
--- a/reference/random/geometric_distribution/op_istream.md
+++ b/reference/random/geometric_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/random/independent_bits_engine/op_istream.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/random/independent_bits_engine/op_istream.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/independent_bits_engine/op_istream.md b/reference/random/independent_bits_engine/op_istream.md
index fce419449..225d30de2 100644
--- a/reference/random/independent_bits_engine/op_istream.md
+++ b/reference/random/independent_bits_engine/op_istream.md
@@ -65,8 +65,8 @@ int main()
 }
 ```
 * std::uint64_t[link /reference/cstdint/uint64_t.md]
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/random/linear_congruential_engine/op_istream.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/random/linear_congruential_engine/op_istream.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/linear_congruential_engine/op_istream.md b/reference/random/linear_congruential_engine/op_istream.md
index e232d7086..751725d01 100644
--- a/reference/random/linear_congruential_engine/op_istream.md
+++ b/reference/random/linear_congruential_engine/op_istream.md
@@ -62,8 +62,8 @@ int main()
 }
 ```
 * std::minstd_rand[link /reference/random/minstd_rand.md]
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/random/lognormal_distribution/op_istream.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/random/lognormal_distribution/op_istream.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/lognormal_distribution/op_istream.md b/reference/random/lognormal_distribution/op_istream.md
index bf0026f8b..d1d505a7c 100644
--- a/reference/random/lognormal_distribution/op_istream.md
+++ b/reference/random/lognormal_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/random/mersenne_twister_engine/op_istream.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/random/mersenne_twister_engine/op_istream.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/mersenne_twister_engine/op_istream.md b/reference/random/mersenne_twister_engine/op_istream.md
index dd184fade..3c04d5eab 100644
--- a/reference/random/mersenne_twister_engine/op_istream.md
+++ b/reference/random/mersenne_twister_engine/op_istream.md
@@ -64,8 +64,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/random/negative_binomial_distribution/op_istream.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/random/negative_binomial_distribution/op_istream.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/negative_binomial_distribution/op_istream.md b/reference/random/negative_binomial_distribution/op_istream.md
index f5e18a82f..0f250f580 100644
--- a/reference/random/negative_binomial_distribution/op_istream.md
+++ b/reference/random/negative_binomial_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/random/normal_distribution/op_istream.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/random/normal_distribution/op_istream.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/normal_distribution/op_istream.md b/reference/random/normal_distribution/op_istream.md
index 54556f72b..a23c58c6e 100644
--- a/reference/random/normal_distribution/op_istream.md
+++ b/reference/random/normal_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/random/piecewise_constant_distribution/op_istream.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/random/piecewise_constant_distribution/op_istream.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/piecewise_constant_distribution/op_istream.md b/reference/random/piecewise_constant_distribution/op_istream.md
index 99adc1306..8fc62b4b1 100644
--- a/reference/random/piecewise_constant_distribution/op_istream.md
+++ b/reference/random/piecewise_constant_distribution/op_istream.md
@@ -68,8 +68,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 * intervals.begin()[link /reference/array/array/begin.md]
 * intervals.end()[link /reference/array/array/end.md]
 * densities.begin()[link /reference/array/array/begin.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/random/piecewise_linear_distribution/op_istream.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/random/piecewise_linear_distribution/op_istream.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/piecewise_linear_distribution/op_istream.md b/reference/random/piecewise_linear_distribution/op_istream.md
index bd530aa0e..763e0734d 100644
--- a/reference/random/piecewise_linear_distribution/op_istream.md
+++ b/reference/random/piecewise_linear_distribution/op_istream.md
@@ -68,8 +68,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 * intervals.begin()[link /reference/array/array/begin.md]
 * intervals.end()[link /reference/array/array/end.md]
 * densities.begin()[link /reference/array/array/begin.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/random/poisson_distribution/op_istream.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/random/poisson_distribution/op_istream.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/poisson_distribution/op_istream.md b/reference/random/poisson_distribution/op_istream.md
index 47bd55b47..eef3fdf98 100644
--- a/reference/random/poisson_distribution/op_istream.md
+++ b/reference/random/poisson_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/random/shuffle_order_engine/op_istream.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/random/shuffle_order_engine/op_istream.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/shuffle_order_engine/op_istream.md b/reference/random/shuffle_order_engine/op_istream.md
index 5541d888b..5f7187420 100644
--- a/reference/random/shuffle_order_engine/op_istream.md
+++ b/reference/random/shuffle_order_engine/op_istream.md
@@ -62,8 +62,8 @@ int main()
 }
 ```
 * std::knuth_b[link /reference/random/knuth_b.md]
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/random/student_t_distribution/op_istream.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/random/student_t_distribution/op_istream.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/student_t_distribution/op_istream.md b/reference/random/student_t_distribution/op_istream.md
index fe7000f64..d3ad5c925 100644
--- a/reference/random/student_t_distribution/op_istream.md
+++ b/reference/random/student_t_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/random/subtract_with_carry_engine/op_istream.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/random/subtract_with_carry_engine/op_istream.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/subtract_with_carry_engine/op_istream.md b/reference/random/subtract_with_carry_engine/op_istream.md
index e3e70d273..ec76e3031 100644
--- a/reference/random/subtract_with_carry_engine/op_istream.md
+++ b/reference/random/subtract_with_carry_engine/op_istream.md
@@ -62,8 +62,8 @@ int main()
 }
 ```
 * std::ranlux24_base[link /reference/random/ranlux24_base.md]
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/random/uniform_int_distribution/op_istream.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/random/uniform_int_distribution/op_istream.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/uniform_int_distribution/op_istream.md b/reference/random/uniform_int_distribution/op_istream.md
index 8b9f6f184..2ba9daac8 100644
--- a/reference/random/uniform_int_distribution/op_istream.md
+++ b/reference/random/uniform_int_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/random/uniform_real_distribution/op_istream.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/random/uniform_real_distribution/op_istream.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/uniform_real_distribution/op_istream.md b/reference/random/uniform_real_distribution/op_istream.md
index 8089f4d46..41fc4079a 100644
--- a/reference/random/uniform_real_distribution/op_istream.md
+++ b/reference/random/uniform_real_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/random/weibull_distribution/op_istream.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/random/weibull_distribution/op_istream.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/weibull_distribution/op_istream.md b/reference/random/weibull_distribution/op_istream.md
index 6d27afbdb..c02900b8f 100644
--- a/reference/random/weibull_distribution/op_istream.md
+++ b/reference/random/weibull_distribution/op_istream.md
@@ -59,8 +59,8 @@ int main()
   }
 }
 ```
-* std::stringstream[link /reference/sstream/basic_stringstream.md.nolink]
-* ss.str()[link /reference/sstream/basic_stringstream/str.md.nolink]
+* std::stringstream[link /reference/sstream/basic_stringstream.md]
+* ss.str()[link /reference/sstream/basic_stringstream/str.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>sstream -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/sstream.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/sstream.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;sstream&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;sstream&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;sstream&amp;gt;&lt;/code&gt;ヘッダでは、文字列オブジェクトを出力先・入力元とするストリームクラスを定義する。&lt;/p&gt;
&lt;h2&gt;ストリームバッファ&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/sstream/basic_stringbuf.html&#34;&gt;basic_stringbuf&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列ストリームバッファ(class template)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/sstream/basic_stringbuf.html&#34;&gt;stringbuf&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;char&lt;/code&gt;版の文字列ストリームバッファ(type-alias)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/sstream/basic_stringbuf.html&#34;&gt;wstringbuf&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;wchar_t&lt;/code&gt;版の文字列ストリームバッファ(type-alias)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;入力ストリーム&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/sstream/basic_istringstream.html&#34;&gt;basic_istringstream&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列入力ストリーム(class template)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/sstream/basic_istringstream.html&#34;&gt;istringstream&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;char&lt;/code&gt;版の文字列入力ストリーム(type-alias)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/sstream/basic_istringstream.html&#34;&gt;wistringstream&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;wchar_t&lt;/code&gt;版の文字列入力ストリーム(type-alias)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;出力ストリーム&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/sstream/basic_ostringstream.html&#34;&gt;basic_ostringstream&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列出力ストリーム(class template)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/sstream/basic_ostringstream.html&#34;&gt;ostringstream&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;char&lt;/code&gt;版の文字列出力ストリーム(type-alias)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/sstream/basic_ostringstream.html&#34;&gt;wostringstream&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;wchar_t&lt;/code&gt;版の文字列出力ストリーム(type-alias)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;入出力ストリーム&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/sstream/basic_stringstream.html&#34;&gt;basic_stringstream&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列入出力ストリーム(class template)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/sstream/basic_stringstream.html&#34;&gt;stringstream&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;char&lt;/code&gt;版の文字列入出力ストリーム(type-alias)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/sstream/basic_stringstream.html&#34;&gt;wstringstream&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;wchar_t&lt;/code&gt;版の文字列入出力ストリーム(type-alias)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>basic_istringstream -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/sstream/basic_istringstream.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/sstream/basic_istringstream.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/sstream/basic_istringstream.md b/reference/sstream/basic_istringstream.md
index 374ce0799..5965a4499 100644
--- a/reference/sstream/basic_istringstream.md
+++ b/reference/sstream/basic_istringstream.md
@@ -18,18 +18,20 @@ namespace std {
 * basic_istream[link /reference/istream/basic_istream.md]
 
 ## 概要
+バッファに保持された文字列への読み取り操作ができるストリーム
 
 
 ## メンバ関数
 
-| 名前          | 説明                                       | 対応バージョン |
-|---------------|--------------------------------------------|----------------|
-| (constructor) | コンストラクタ                             | |
-| (destructor)  | デストラクタ                               | |
-| `operator=`   | ムーブ代入                                 | C++11 |
-| `swap`        | 値の交換                                   | C++11 |
-| `rdbuf`       | ストリームバッファオブジェクトの設定・取得 | |
-| `str`         | 文字列オブジェクトの設定・取得             | |
+| 名前                                | 説明                                       | 対応バージョン |
+|-------------------------------------|--------------------------------------------|----------------|
+| (constructor)                       | コンストラクタ                             | |
+| (destructor)                        | デストラクタ                               | |
+| `operator=`                         | ムーブ代入                                 | C++11 |
+| `swap`                              | 値の交換                                   | C++11 |
+| `rdbuf`                             | ストリームバッファオブジェクトの設定・取得 | |
+| [`str`](basic_istringstream/str.md) | 文字列オブジェクトの設定・取得             | |
+| `view`                              | 文字列ビューオブジェクトの取得             | C++20 |
 
 
 ## 非メンバ関数
@@ -58,3 +60,5 @@ namespace std {
 ```
 ```
 
+## 参照
+- [P0408R7 Efficient Access to `basic_stringbuf`’s Buffer](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p0408r7.pdf)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>str -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/sstream/basic_istringstream/str.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/sstream/basic_istringstream/str.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/sstream/basic_istringstream/str.md b/reference/sstream/basic_istringstream/str.md
new file mode 100644
index 000000000..ef88b9951
--- /dev/null
+++ b/reference/sstream/basic_istringstream/str.md
@@ -0,0 +1,33 @@
+# str
+* sstream[meta header]
+* std[meta namespace]
+* basic_istringstream[meta class]
+* function[meta id-type]
+
+```cpp
+basic_string&amp;lt;CharT, Traits, Allocator&amp;gt; str() const;                // (1) C++03
+basic_string&amp;lt;CharT, Traits, Allocator&amp;gt; str() const &amp;amp;;              // (1) C++20
+template &amp;lt;class SAlloc&amp;gt;
+basic_string&amp;lt;CharT, Traits, SAlloc&amp;gt; str(const SAlloc&amp;amp; sa) const &amp;amp;; // (2) C++20
+basic_string&amp;lt;CharT, Traits, Allocator&amp;gt; str() const &amp;amp;&amp;amp;;             // (3) C++20
+
+void str(const basic_string&amp;lt;CharT, Traits, Allocator&amp;gt;&amp;amp; s);  // (4)
+template &amp;lt;class SAlloc&amp;gt;
+void str(const basic_string&amp;lt;CharT, Traits, SAlloc&amp;gt;&amp;amp; s);     // (5) C++20
+void str(const basic_string&amp;lt;CharT, Traits, Allocator&amp;gt;&amp;amp;&amp;amp; s); // (6) C++20
+```
+* basic_string[link /reference/string/basic_string.md]
+
+## 概要
+文字列オブジェクトを取得または設定する。
+
+## 効果
+- (1) : `return rdbuf()-&amp;gt;str()` と等価
+- (2) : `return rdbuf()-&amp;gt;str(sa)` と等価
+- (3) : `return std::move(*rdbuf()).str()` と等価
+- (4) : `rdbuf()-&amp;gt;str(s)` と等価
+- (5) : `rdbuf()-&amp;gt;str(s)` と等価
+- (6) : `rdbuf()-&amp;gt;str(std::move(s))` と等価
+
+## 関連項目
+[basic_stringbuf::str](../basic_stringbuf/str.md)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>basic_ostringstream -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/sstream/basic_ostringstream.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/sstream/basic_ostringstream.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/sstream/basic_ostringstream.md b/reference/sstream/basic_ostringstream.md
new file mode 100644
index 000000000..f3f0112e5
--- /dev/null
+++ b/reference/sstream/basic_ostringstream.md
@@ -0,0 +1,64 @@
+# basic_ostringstream
+* sstream[meta header]
+* std[meta namespace]
+* class template[meta id-type]
+
+```cpp
+namespace std {
+  template &amp;lt;class CharT, class Traits = char_traits&amp;lt;CharT&amp;gt;,
+            class Allocator = allocator&amp;lt;CharT&amp;gt; &amp;gt;
+  class basic_ostringstream : public basic_ostream&amp;lt;CharT, Traits&amp;gt;;
+
+  using ostringstream  = basic_ostringstream&amp;lt;char&amp;gt;;
+  using wostringstream = basic_ostringstream&amp;lt;wchar_t&amp;gt;;
+}
+```
+* char_traits[link /reference/string/char_traits.md]
+* allocator[link /reference/memory/allocator.md]
+* basic_ostream[link /reference/ostream/basic_ostream.md]
+
+## 概要
+バッファに保持された文字列への書き込み操作ができるストリーム
+
+
+## メンバ関数
+
+| 名前                                | 説明                                       | 対応バージョン |
+|-------------------------------------|--------------------------------------------|----------------|
+| (constructor)                       | コンストラクタ                             | |
+| (destructor)                        | デストラクタ                               | |
+| `operator=`                         | ムーブ代入                                 | C++11 |
+| `swap`                              | 値の交換                                   | C++11 |
+| `rdbuf`                             | ストリームバッファオブジェクトの設定・取得 | |
+| [`str`](basic_ostringstream/str.md) | 文字列オブジェクトの設定・取得             | |
+| `view`                              | 文字列ビューオブジェクトの取得             | C++20 |
+
+
+## 非メンバ関数
+
+| 名前   | 説明                          | 対応バージョン |
+|--------|-------------------------------|----------------|
+| `swap` | 2つのオブジェクトを入れ替える | C++11 |
+
+
+## メンバ型
+
+| 名前             | 説明                          | 対応バージョン |
+|------------------|-------------------------------|----------------|
+| `char_type`      | テンプレート仮引数`CharT`     | |
+| `int_type`       | `Traits::int_type`            | |
+| `pos_type`       | `Traits::pos_type`            | |
+| `off_type`       | `Traits::off_type`            | |
+| `traits_type`    | テンプレート仮引数`Traits`    | |
+| `allocator_type` | テンプレート仮引数`Allocator` | |
+
+## 例
+```cpp
+```
+
+### 出力
+```
+```
+
+## 参照
+- [P0408R7 Efficient Access to `basic_stringbuf`’s Buffer](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p0408r7.pdf)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>str -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/sstream/basic_ostringstream/str.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/sstream/basic_ostringstream/str.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/sstream/basic_ostringstream/str.md b/reference/sstream/basic_ostringstream/str.md
new file mode 100644
index 000000000..c00d569fb
--- /dev/null
+++ b/reference/sstream/basic_ostringstream/str.md
@@ -0,0 +1,33 @@
+# str
+* sstream[meta header]
+* std[meta namespace]
+* basic_ostringstream[meta class]
+* function[meta id-type]
+
+```cpp
+basic_string&amp;lt;CharT, Traits, Allocator&amp;gt; str() const;                // (1) C++03
+basic_string&amp;lt;CharT, Traits, Allocator&amp;gt; str() const &amp;amp;;              // (1) C++20
+template &amp;lt;class SAlloc&amp;gt;
+basic_string&amp;lt;CharT, Traits, SAlloc&amp;gt; str(const SAlloc&amp;amp; sa) const &amp;amp;; // (2) C++20
+basic_string&amp;lt;CharT, Traits, Allocator&amp;gt; str() const &amp;amp;&amp;amp;;             // (3) C++20
+
+void str(const basic_string&amp;lt;CharT, Traits, Allocator&amp;gt;&amp;amp; s);  // (4)
+template &amp;lt;class SAlloc&amp;gt;
+void str(const basic_string&amp;lt;CharT, Traits, SAlloc&amp;gt;&amp;amp; s);     // (5) C++20
+void str(const basic_string&amp;lt;CharT, Traits, Allocator&amp;gt;&amp;amp;&amp;amp; s); // (6) C++20
+```
+* basic_string[link /reference/string/basic_string.md]
+
+## 概要
+文字列オブジェクトを取得または設定する。
+
+## 効果
+- (1) : `return rdbuf()-&amp;gt;str()` と等価
+- (2) : `return rdbuf()-&amp;gt;str(sa)` と等価
+- (3) : `return std::move(*rdbuf()).str()` と等価
+- (4) : `rdbuf()-&amp;gt;str(s)` と等価
+- (5) : `rdbuf()-&amp;gt;str(s)` と等価
+- (6) : `rdbuf()-&amp;gt;str(std::move(s))` と等価
+
+## 関連項目
+[basic_stringbuf::str](../basic_stringbuf/str.md)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>basic_stringbuf -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/sstream/basic_stringbuf.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/sstream/basic_stringbuf.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/sstream/basic_stringbuf.md b/reference/sstream/basic_stringbuf.md
new file mode 100644
index 000000000..e5781a87d
--- /dev/null
+++ b/reference/sstream/basic_stringbuf.md
@@ -0,0 +1,57 @@
+# basic_stringbuf
+* sstream[meta header]
+* std[meta namespace]
+* class template[meta id-type]
+
+```cpp
+namespace std {
+  template &amp;lt;class CharT, class Traits = char_traits&amp;lt;CharT&amp;gt;,
+            class Allocator = allocator&amp;lt;CharT&amp;gt; &amp;gt;
+  class basic_stringbuf : public basic_streambuf&amp;lt;CharT, Traits&amp;gt;;
+
+  using stringbuf  = basic_stringbuf&amp;lt;char&amp;gt;;
+  using wstringbuf = basic_stringbuf&amp;lt;wchar_t&amp;gt;;
+}
+```
+* char_traits[link /reference/string/char_traits.md]
+* allocator[link /reference/memory/allocator.md]
+* basic_streambuf[link /reference/streambuf/basic_streambuf.md]
+
+## 概要
+文字列を保持するストリームバッファ
+
+
+## メンバ関数
+
+| 名前                            | 説明                                       | 対応バージョン |
+|---------------------------------|--------------------------------------------|----------------|
+| (constructor)                   | コンストラクタ                             | |
+| (destructor)                    | デストラクタ                               | |
+| `operator=`                     | ムーブ代入                                 | C++11 |
+| `swap`                          | 値の交換                                   | C++11 |
+| [`str`](basic_stringbuf/str.md) | 文字列オブジェクトの設定・取得             | |
+| `view`                          | 文字列ビューオブジェクトの取得             | C++20 |
+| `get_allocator`                 | アロケータの取得                           | C++20 |
+
+
+## 非メンバ関数
+
+| 名前   | 説明                          | 対応バージョン |
+|--------|-------------------------------|----------------|
+| `swap` | 2つのオブジェクトを入れ替える | C++11 |
+
+
+## メンバ型
+
+| 名前             | 説明                          | 対応バージョン |
+|------------------|-------------------------------|----------------|
+| `char_type`      | テンプレート仮引数`CharT`     | |
+| `int_type`       | `Traits::int_type`            | |
+| `pos_type`       | `Traits::pos_type`            | |
+| `off_type`       | `Traits::off_type`            | |
+| `traits_type`    | テンプレート仮引数`Traits`    | |
+| `allocator_type` | テンプレート仮引数`Allocator` | |
+
+
+## 参照
+- [P0408R7 Efficient Access to `basic_stringbuf`’s Buffer](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p0408r7.pdf)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>str -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/sstream/basic_stringbuf/str.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/sstream/basic_stringbuf/str.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/sstream/basic_stringbuf/str.md b/reference/sstream/basic_stringbuf/str.md
new file mode 100644
index 000000000..d02eed80a
--- /dev/null
+++ b/reference/sstream/basic_stringbuf/str.md
@@ -0,0 +1,30 @@
+# str
+* sstream[meta header]
+* std[meta namespace]
+* basic_stringbuf[meta class]
+* function[meta id-type]
+
+```cpp
+basic_string&amp;lt;CharT, Traits, Allocator&amp;gt; str() const;                // (1) C++03
+basic_string&amp;lt;CharT, Traits, Allocator&amp;gt; str() const &amp;amp;;              // (1) C++20
+template &amp;lt;class SAlloc&amp;gt;
+basic_string&amp;lt;CharT, Traits, SAlloc&amp;gt; str(const SAlloc&amp;amp; sa) const &amp;amp;; // (2) C++20
+basic_string&amp;lt;CharT, Traits, Allocator&amp;gt; str() const &amp;amp;&amp;amp;;             // (3) C++20
+
+void str(const basic_string&amp;lt;CharT, Traits, Allocator&amp;gt;&amp;amp; s);  // (4)
+template &amp;lt;class SAlloc&amp;gt;
+void str(const basic_string&amp;lt;CharT, Traits, SAlloc&amp;gt;&amp;amp; s);     // (5) C++20
+void str(const basic_string&amp;lt;CharT, Traits, Allocator&amp;gt;&amp;amp;&amp;amp; s); // (6) C++20
+```
+* basic_string[link /reference/string/basic_string.md]
+
+## 概要
+文字列オブジェクトを取得または設定する。
+
+## 効果
+- (1) : 文字列オブジェクトを取得する
+- (2) : 文字列オブジェクトを取得して、`SAlloc`型のアロケータ`sa`によって確保する
+- (3) : 保持する文字列オブジェクトをムーブして取得する
+- (4) : 文字列オブジェクト`s`を設定する
+- (5) : `SAlloc`型のアロケータによって確保されているデータをコピーして、文字列オブジェクト`s`を設定する
+- (6) : 与えられた文字列オブジェクト`s`をムーブして設定する
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>basic_stringstream -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/sstream/basic_stringstream.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/sstream/basic_stringstream.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/sstream/basic_stringstream.md b/reference/sstream/basic_stringstream.md
new file mode 100644
index 000000000..01fd9ce37
--- /dev/null
+++ b/reference/sstream/basic_stringstream.md
@@ -0,0 +1,64 @@
+# basic_stringstream
+* sstream[meta header]
+* std[meta namespace]
+* class template[meta id-type]
+
+```cpp
+namespace std {
+  template &amp;lt;class CharT, class Traits = char_traits&amp;lt;CharT&amp;gt;,
+            class Allocator = allocator&amp;lt;CharT&amp;gt; &amp;gt;
+  class basic_stringstream : public basic_iostream&amp;lt;CharT, Traits&amp;gt;;
+
+  using stringstream  = basic_stringstream&amp;lt;char&amp;gt;;
+  using wstringstream = basic_stringstream&amp;lt;wchar_t&amp;gt;;
+}
+```
+* char_traits[link /reference/string/char_traits.md]
+* allocator[link /reference/memory/allocator.md]
+* basic_iostream[link /reference/istream/basic_iostream.md]
+
+## 概要
+バッファに保持された文字列への読み取りおよび書き込み操作ができるストリーム
+
+
+## メンバ関数
+
+| 名前                                | 説明                                       | 対応バージョン |
+|-------------------------------------|--------------------------------------------|----------------|
+| (constructor)                       | コンストラクタ                             | |
+| (destructor)                        | デストラクタ                               | |
+| `operator=`                         | ムーブ代入                                 | C++11 |
+| `swap`                              | 値の交換                                   | C++11 |
+| `rdbuf`                             | ストリームバッファオブジェクトの設定・取得 | |
+| [`str`](basic_stringstream/str.md)  | 文字列オブジェクトの設定・取得             | |
+| `view`                              | 文字列ビューオブジェクトの取得             | C++20 |
+
+
+## 非メンバ関数
+
+| 名前   | 説明                          | 対応バージョン |
+|--------|-------------------------------|----------------|
+| `swap` | 2つのオブジェクトを入れ替える | C++11 |
+
+
+## メンバ型
+
+| 名前             | 説明                          | 対応バージョン |
+|------------------|-------------------------------|----------------|
+| `char_type`      | テンプレート仮引数`CharT`     | |
+| `int_type`       | `Traits::int_type`            | |
+| `pos_type`       | `Traits::pos_type`            | |
+| `off_type`       | `Traits::off_type`            | |
+| `traits_type`    | テンプレート仮引数`Traits`    | |
+| `allocator_type` | テンプレート仮引数`Allocator` | |
+
+## 例
+```cpp
+```
+
+### 出力
+```
+```
+
+## 参照
+- [P0408R7 Efficient Access to `basic_stringbuf`’s Buffer](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p0408r7.pdf)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>str -- stringstream関連のページ作成および、C++20での効率化について参照追加</title>
      <link href="https://cpprefjp.github.io/reference/sstream/basic_stringstream/str.html"/>
      <id>fb9bf3a994183126c8e0bde4f49c4738dacb1daa:reference/sstream/basic_stringstream/str.md</id>
      <updated>2023-07-05T01:35:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/sstream/basic_stringstream/str.md b/reference/sstream/basic_stringstream/str.md
new file mode 100644
index 000000000..d76900b4f
--- /dev/null
+++ b/reference/sstream/basic_stringstream/str.md
@@ -0,0 +1,33 @@
+# str
+* sstream[meta header]
+* std[meta namespace]
+* basic_stringstream[meta class]
+* function[meta id-type]
+
+```cpp
+basic_string&amp;lt;CharT, Traits, Allocator&amp;gt; str() const;                // (1) C++03
+basic_string&amp;lt;CharT, Traits, Allocator&amp;gt; str() const &amp;amp;;              // (1) C++20
+template &amp;lt;class SAlloc&amp;gt;
+basic_string&amp;lt;CharT, Traits, SAlloc&amp;gt; str(const SAlloc&amp;amp; sa) const &amp;amp;; // (2) C++20
+basic_string&amp;lt;CharT, Traits, Allocator&amp;gt; str() const &amp;amp;&amp;amp;;             // (3) C++20
+
+void str(const basic_string&amp;lt;CharT, Traits, Allocator&amp;gt;&amp;amp; s);  // (4)
+template &amp;lt;class SAlloc&amp;gt;
+void str(const basic_string&amp;lt;CharT, Traits, SAlloc&amp;gt;&amp;amp; s);     // (5) C++20
+void str(const basic_string&amp;lt;CharT, Traits, Allocator&amp;gt;&amp;amp;&amp;amp; s); // (6) C++20
+```
+* basic_string[link /reference/string/basic_string.md]
+
+## 概要
+文字列オブジェクトを取得または設定する。
+
+## 効果
+- (1) : `return rdbuf()-&amp;gt;str()` と等価
+- (2) : `return rdbuf()-&amp;gt;str(sa)` と等価
+- (3) : `return std::move(*rdbuf()).str()` と等価
+- (4) : `rdbuf()-&amp;gt;str(s)` と等価
+- (5) : `rdbuf()-&amp;gt;str(s)` と等価
+- (6) : `rdbuf()-&amp;gt;str(std::move(s))` と等価
+
+## 関連項目
+[basic_stringbuf::str](../basic_stringbuf/str.md)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>make_reverse_iterator -- typo: make_reverse_iteratorの言語バージョン</title>
      <link href="https://cpprefjp.github.io/reference/iterator/make_reverse_iterator.html"/>
      <id>08a97ea65ad85cbb646cd58753e5860600ff337f:reference/iterator/make_reverse_iterator.md</id>
      <updated>2023-07-04T00:53:39+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/make_reverse_iterator.md b/reference/iterator/make_reverse_iterator.md
index 5f6d11908..6998582c9 100644
--- a/reference/iterator/make_reverse_iterator.md
+++ b/reference/iterator/make_reverse_iterator.md
@@ -8,7 +8,7 @@
 namespace std {
   template &amp;lt;class Iterator&amp;gt;
   reverse_iterator&amp;lt;Iterator&amp;gt;
-    make_reverse_iterator(Iterator i); // C++03
+    make_reverse_iterator(Iterator i); // C++14
 
   template &amp;lt;class Iterator&amp;gt;
   constexpr reverse_iterator&amp;lt;Iterator&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>ToruNiina</name>
        <email>niina.toru.68u@gmail.com</email>
      </author>
    </entry>
  
</feed>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2025-05-28T09:32:47.915574</updated>
  <id>c54fe045-d901-483a-a3bd-eda85b09b679</id>

  
    <entry>
      <title>basic_filebuf -- 表の表示崩れを修正</title>
      <link href="https://cpprefjp.github.io/reference/fstream/basic_filebuf.html"/>
      <id>16242c558605d77ff06276bab29d0701fdc2c0a9:reference/fstream/basic_filebuf.md</id>
      <updated>2025-05-28T18:29:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/fstream/basic_filebuf.md b/reference/fstream/basic_filebuf.md
index 110b46a66..5f8acb66e 100644
--- a/reference/fstream/basic_filebuf.md
+++ b/reference/fstream/basic_filebuf.md
@@ -51,8 +51,8 @@ Cの`FILE*`に対する入出力関数を使って実装される。
 
 ### 環境固有の情報
 
-| 名前 ｜ 説明｜対応バージョン |
-|-----|-----|-------------|
+| 名前 | 説明 ｜ 対応バージョン |
+|-----|------|--------------|
 | [`native_handle()`](basic_filebuf/native_handle.md) | ネイティブハンドルを取得する［処理系定義］ | C++26 |
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>basic_fstream -- 表の表示崩れを修正</title>
      <link href="https://cpprefjp.github.io/reference/fstream/basic_fstream.html"/>
      <id>16242c558605d77ff06276bab29d0701fdc2c0a9:reference/fstream/basic_fstream.md</id>
      <updated>2025-05-28T18:29:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/fstream/basic_fstream.md b/reference/fstream/basic_fstream.md
index 38d2bd7be..6db7c5139 100644
--- a/reference/fstream/basic_fstream.md
+++ b/reference/fstream/basic_fstream.md
@@ -34,8 +34,8 @@ namespace std {
 
 ### ネイティブハンドルの取得
 
-| 名前 | 説明｜対応バージョン |
-|-----|-----|-------------|
+| 名前 | 説明 ｜ 対応バージョン |
+|-----|------|--------------|
 | [`native_handle()`](basic_fstream/native_handle.md) | ネイティブハンドルを取得する［処理系定義］ | C++26 |
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>basic_ifstream -- 表の表示崩れを修正</title>
      <link href="https://cpprefjp.github.io/reference/fstream/basic_ifstream.html"/>
      <id>16242c558605d77ff06276bab29d0701fdc2c0a9:reference/fstream/basic_ifstream.md</id>
      <updated>2025-05-28T18:29:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/fstream/basic_ifstream.md b/reference/fstream/basic_ifstream.md
index 6c1b64081..fd40a5789 100644
--- a/reference/fstream/basic_ifstream.md
+++ b/reference/fstream/basic_ifstream.md
@@ -35,8 +35,8 @@ namespace std {
 
 ### ネイティブハンドルの取得
 
-| 名前 | 説明｜対応バージョン |
-|-----|-----|-------------|
+| 名前 | 説明 ｜ 対応バージョン |
+|-----|------|--------------|
 | [`native_handle()`](basic_ifstream/native_handle.md) | ネイティブハンドルを取得する［処理系定義］ | C++26 |
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>basic_ofstream -- 表の表示崩れを修正</title>
      <link href="https://cpprefjp.github.io/reference/fstream/basic_ofstream.html"/>
      <id>16242c558605d77ff06276bab29d0701fdc2c0a9:reference/fstream/basic_ofstream.md</id>
      <updated>2025-05-28T18:29:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/fstream/basic_ofstream.md b/reference/fstream/basic_ofstream.md
index 1bc10e0d7..f370f905a 100644
--- a/reference/fstream/basic_ofstream.md
+++ b/reference/fstream/basic_ofstream.md
@@ -35,8 +35,8 @@ namespace std {
 
 ### ネイティブハンドルの取得
 
-| 名前 | 説明｜対応バージョン |
-|-----|-----|-------------|
+| 名前 | 説明 ｜ 対応バージョン |
+|-----|------|--------------|
 | [`native_handle()`](basic_ofstream/native_handle.md) | ネイティブハンドルを取得する［処理系定義］ | C++26 |
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>native_handle -- コード修飾ミスを修正</title>
      <link href="https://cpprefjp.github.io/reference/fstream/basic_filebuf/native_handle.html"/>
      <id>8113c79d1e3023d966e2e1d74dd61937219de954:reference/fstream/basic_filebuf/native_handle.md</id>
      <updated>2025-05-28T18:19:24+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/fstream/basic_filebuf/native_handle.md b/reference/fstream/basic_filebuf/native_handle.md
index d17a290df..50c96b372 100644
--- a/reference/fstream/basic_filebuf/native_handle.md
+++ b/reference/fstream/basic_filebuf/native_handle.md
@@ -57,7 +57,7 @@ int main() {
 * native_handle[color ff0000]
 * std::fstream[link /reference/fstream/basic_fstream.md]
 * fs.rdbuf()[link /reference/fstream/basic_fstream/rdbuf.md]
-* buf-&amp;gt;isopen()[link is_open.md]
+* buf-&amp;gt;is_open()[link is_open.md]
 * std::chrono::sys_seconds[link /reference/chrono/sys_time.md]
 * std::chrono::zoned_time[link /reference/chrono/zoned_time.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>basic_filebuf -- fstream : C++26対応としてnative_handleを追加 (close #1196)</title>
      <link href="https://cpprefjp.github.io/reference/fstream/basic_filebuf.html"/>
      <id>f462880917802c8358138aab564c921e8970daf7:reference/fstream/basic_filebuf.md</id>
      <updated>2025-05-28T18:17:52+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/fstream/basic_filebuf.md b/reference/fstream/basic_filebuf.md
index 6db55d159..110b46a66 100644
--- a/reference/fstream/basic_filebuf.md
+++ b/reference/fstream/basic_filebuf.md
@@ -30,16 +30,6 @@ Cの`FILE*`に対する入出力関数を使って実装される。
 | `wfilebuf` | `wchar_t`型。ワイド文字列として使用する。                                      | |
 
 
-### 型
-
-| 名前          | 説明                       | 対応バージョン |
-|---------------|----------------------------|----------------|
-| `char_type`   | テンプレート仮引数`CharT`  |                |
-| `int_type`    | `Traits::int_type`         |                |
-| `pos_type`    | `Traits::pos_type`         |                |
-| `off_type`    | `Traits::off_type`         |                |
-| `traits_type` | テンプレート仮引数`Traits` |                |
-
 ### 構築・破棄
 
 | 名前                                              | 説明           | 対応バージョン |
@@ -59,6 +49,13 @@ Cの`FILE*`に対する入出力関数を使って実装される。
 | [`open`](basic_filebuf/open.md)       | ファイルを開く                 |                |
 | [`close`](basic_filebuf/close.md)     | ファイルを閉じる               |                |
 
+### 環境固有の情報
+
+| 名前 ｜ 説明｜対応バージョン |
+|-----|-----|-------------|
+| [`native_handle()`](basic_filebuf/native_handle.md) | ネイティブハンドルを取得する［処理系定義］ | C++26 |
+
+
 ### オーバーライドされている関数
 
 すべて`protected`で定義されている。
@@ -76,5 +73,17 @@ Cの`FILE*`に対する入出力関数を使って実装される。
 | `pbackfail`                                 | 1文字を入力列に戻す (protected virtual) | |
 | `overflow`                                  | (protected virtual) |
 
+## メンバ型
+
+| 名前          | 説明                       | 対応バージョン |
+|---------------|----------------------------|----------------|
+| `char_type`   | テンプレート仮引数`CharT`  |                |
+| `int_type`    | `Traits::int_type`         |                |
+| `pos_type`    | `Traits::pos_type`         |                |
+| `off_type`    | `Traits::off_type`         |                |
+| `traits_type` | テンプレート仮引数`Traits` |                |
+| `native_handle_type` | ネイティブハンドルの型 [処理系定義] | C++26 |
+
+
 ## 参照
 - [`basic_streambuf`](../streambuf/basic_streambuf.md)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>native_handle -- fstream : C++26対応としてnative_handleを追加 (close #1196)</title>
      <link href="https://cpprefjp.github.io/reference/fstream/basic_filebuf/native_handle.html"/>
      <id>f462880917802c8358138aab564c921e8970daf7:reference/fstream/basic_filebuf/native_handle.md</id>
      <updated>2025-05-28T18:17:52+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/fstream/basic_filebuf/native_handle.md b/reference/fstream/basic_filebuf/native_handle.md
new file mode 100644
index 000000000..d17a290df
--- /dev/null
+++ b/reference/fstream/basic_filebuf/native_handle.md
@@ -0,0 +1,79 @@
+# native_handle
+* fstream[meta header]
+* std[meta namespace]
+* basic_filebuf[meta class]
+* function[meta id-type]
+* cpp26[meta cpp]
+
+```cpp
+native_handle_type native_handle() const noexcept;
+```
+
+## 概要
+処理系定義のネイティブハンドルを取得する。
+
+
+## 事前条件
+- [`is_open()`](is_open.md)が`true`を返すこと
+
+
+## 戻り値
+`*this`が指すファイルに対するネイティブハンドルを返す。
+
+
+## 備考
+- ネイティブハンドルは、ファイルが閉じられると無効になる
+
+
+## 例
+```cpp example
+// POSIX環境
+#include &amp;lt;fstream&amp;gt;
+#include &amp;lt;print&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+#include &amp;lt;sys/types.h&amp;gt;
+#include &amp;lt;sys/stat.h&amp;gt;
+
+int main() {
+  std::fstream fs(&amp;#34;example.txt&amp;#34;, std::ios_base::in);
+  std::filebuf* buf = fs.rdbuf();
+
+  if (!buf-&amp;gt;is_open()) {
+    std::println(&amp;#34;ファイルを開けなかった&amp;#34;);
+    return 1;
+  }
+
+  // ネイティブハンドルから、POSIXのAPIでファイルの最終更新日時を取得する
+  int fd = buf-&amp;gt;native_handle();
+  struct ::stat s{};
+  ::fstat(fd, &amp;amp;s);
+
+  std::chrono::sys_seconds last_modified {std::chrono::seconds(s.st_mtim.tv_sec)};
+  std::chrono::zoned_time zoned{&amp;#34;Asia/Tokyo&amp;#34;, last_modified};
+  std::println(&amp;#34;Last modified: {}&amp;#34;, zoned);
+}
+```
+* native_handle[color ff0000]
+* std::fstream[link /reference/fstream/basic_fstream.md]
+* fs.rdbuf()[link /reference/fstream/basic_fstream/rdbuf.md]
+* buf-&amp;gt;isopen()[link is_open.md]
+* std::chrono::sys_seconds[link /reference/chrono/sys_time.md]
+* std::chrono::zoned_time[link /reference/chrono/zoned_time.md]
+
+### 出力例
+```
+Last modified: 2025-05-28 17:56:55 JST
+```
+
+## バージョン
+### 言語
+- C++26
+
+### 処理系
+- [Clang](/implementation.md#clang): 18 [mark verified]
+- [GCC](/implementation.md#gcc): 14 [mark verified]
+- [Visual C++](/implementation.md#visual_cpp): ??
+
+## 参照
+- [P1759R6 Native handles and file streams](http://open-std.org/jtc1/sc22/wg21/docs/papers/2023/p1759r6.html)
\ No newline at end of file
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>basic_fstream -- fstream : C++26対応としてnative_handleを追加 (close #1196)</title>
      <link href="https://cpprefjp.github.io/reference/fstream/basic_fstream.html"/>
      <id>f462880917802c8358138aab564c921e8970daf7:reference/fstream/basic_fstream.md</id>
      <updated>2025-05-28T18:17:52+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/fstream/basic_fstream.md b/reference/fstream/basic_fstream.md
index e98b27570..38d2bd7be 100644
--- a/reference/fstream/basic_fstream.md
+++ b/reference/fstream/basic_fstream.md
@@ -32,6 +32,13 @@ namespace std {
 | [`close`](basic_fstream/close.md)                | ファイルを閉じる                     | |
 
 
+### ネイティブハンドルの取得
+
+| 名前 | 説明｜対応バージョン |
+|-----|-----|-------------|
+| [`native_handle()`](basic_fstream/native_handle.md) | ネイティブハンドルを取得する［処理系定義］ | C++26 |
+
+
 ## 非メンバ関数
 
 | 名前   | 説明                          | 対応バージョン |
@@ -48,6 +55,8 @@ namespace std {
 | `pos_type`       | `Traits::pos_type`            | |
 | `off_type`       | `Traits::off_type`            | |
 | `traits_type`    | テンプレート仮引数`Traits`    | |
+| `native_handle_type` | 処理系定義のネイティブハンドルの型`typename basic_filebuf&amp;lt;CharT, Traits&amp;gt;::native_handle_type` | C++26 |
+
 
 ## 例
 ```cpp example
@@ -83,4 +92,4 @@ int main() {
   }
   return 0;
 }
-```
\ No newline at end of file
+```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>native_handle -- fstream : C++26対応としてnative_handleを追加 (close #1196)</title>
      <link href="https://cpprefjp.github.io/reference/fstream/basic_fstream/native_handle.html"/>
      <id>f462880917802c8358138aab564c921e8970daf7:reference/fstream/basic_fstream/native_handle.md</id>
      <updated>2025-05-28T18:17:52+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/fstream/basic_fstream/native_handle.md b/reference/fstream/basic_fstream/native_handle.md
new file mode 100644
index 000000000..7e22f519a
--- /dev/null
+++ b/reference/fstream/basic_fstream/native_handle.md
@@ -0,0 +1,82 @@
+# native_handle
+* fstream[meta header]
+* std[meta namespace]
+* basic_fstream[meta class]
+* function[meta id-type]
+* cpp26[meta cpp]
+
+```cpp
+native_handle_type native_handle() const noexcept;
+```
+
+## 概要
+処理系定義のネイティブハンドルを取得する。
+
+
+## 事前条件
+- [`is_open()`](is_open.md)が`true`を返すこと
+
+
+## 戻り値
+以下と等価：
+
+```cpp
+return rdbuf()-&amp;gt;native_handle();
+```
+* rdbuf()[link rdbuf.md]
+* native_handle()[link /reference/fstream/basic_filebuf/native_handle.md]
+
+
+## 備考
+- ネイティブハンドルは、ファイルが閉じられると無効になる
+
+
+## 例
+```cpp example
+// POSIX環境
+#include &amp;lt;fstream&amp;gt;
+#include &amp;lt;print&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+#include &amp;lt;sys/types.h&amp;gt;
+#include &amp;lt;sys/stat.h&amp;gt;
+
+int main() {
+  std::fstream fs(&amp;#34;example.txt&amp;#34;, std::ios_base::in);
+
+  if (!fs.is_open()) {
+    std::println(&amp;#34;ファイルを開けなかった&amp;#34;);
+    return 1;
+  }
+
+  // ネイティブハンドルから、POSIXのAPIでファイルの最終更新日時を取得する
+  int fd = fs.native_handle();
+  struct ::stat s{};
+  ::fstat(fd, &amp;amp;s);
+
+  std::chrono::sys_seconds last_modified {std::chrono::seconds(s.st_mtim.tv_sec)};
+  std::chrono::zoned_time zoned{&amp;#34;Asia/Tokyo&amp;#34;, last_modified};
+  std::println(&amp;#34;Last modified: {}&amp;#34;, zoned);
+}
+```
+* native_handle[color ff0000]
+* fs.is_open()[link is_open.md]
+* std::chrono::sys_seconds[link /reference/chrono/sys_time.md]
+* std::chrono::zoned_time[link /reference/chrono/zoned_time.md]
+
+### 出力例
+```
+Last modified: 2025-05-28 17:56:55 JST
+```
+
+## バージョン
+### 言語
+- C++26
+
+### 処理系
+- [Clang](/implementation.md#clang): 18 [mark verified]
+- [GCC](/implementation.md#gcc): 14 [mark verified]
+- [Visual C++](/implementation.md#visual_cpp): ??
+
+## 参照
+- [P1759R6 Native handles and file streams](http://open-std.org/jtc1/sc22/wg21/docs/papers/2023/p1759r6.html)
\ No newline at end of file
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>basic_ifstream -- fstream : C++26対応としてnative_handleを追加 (close #1196)</title>
      <link href="https://cpprefjp.github.io/reference/fstream/basic_ifstream.html"/>
      <id>f462880917802c8358138aab564c921e8970daf7:reference/fstream/basic_ifstream.md</id>
      <updated>2025-05-28T18:17:52+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/fstream/basic_ifstream.md b/reference/fstream/basic_ifstream.md
index e012d09da..6c1b64081 100644
--- a/reference/fstream/basic_ifstream.md
+++ b/reference/fstream/basic_ifstream.md
@@ -33,6 +33,13 @@ namespace std {
 | [`close`](basic_ifstream/close.md)                | ファイルを閉じる                     | |
 
 
+### ネイティブハンドルの取得
+
+| 名前 | 説明｜対応バージョン |
+|-----|-----|-------------|
+| [`native_handle()`](basic_ifstream/native_handle.md) | ネイティブハンドルを取得する［処理系定義］ | C++26 |
+
+
 ## 非メンバ関数
 
 | 名前   | 説明                          | 対応バージョン |
@@ -49,6 +56,8 @@ namespace std {
 | `pos_type`       | `Traits::pos_type`            | |
 | `off_type`       | `Traits::off_type`            | |
 | `traits_type`    | テンプレート仮引数`Traits`    | |
+| `native_handle_type` | 処理系定義のネイティブハンドルの型`typename basic_filebuf&amp;lt;CharT, Traits&amp;gt;::native_handle_type` | C++26 |
+
 
 ## 例
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>native_handle -- fstream : C++26対応としてnative_handleを追加 (close #1196)</title>
      <link href="https://cpprefjp.github.io/reference/fstream/basic_ifstream/native_handle.html"/>
      <id>f462880917802c8358138aab564c921e8970daf7:reference/fstream/basic_ifstream/native_handle.md</id>
      <updated>2025-05-28T18:17:52+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/fstream/basic_ifstream/native_handle.md b/reference/fstream/basic_ifstream/native_handle.md
new file mode 100644
index 000000000..c110f4c96
--- /dev/null
+++ b/reference/fstream/basic_ifstream/native_handle.md
@@ -0,0 +1,82 @@
+# native_handle
+* fstream[meta header]
+* std[meta namespace]
+* basic_ifstream[meta class]
+* function[meta id-type]
+* cpp26[meta cpp]
+
+```cpp
+native_handle_type native_handle() const noexcept;
+```
+
+## 概要
+処理系定義のネイティブハンドルを取得する。
+
+
+## 事前条件
+- [`is_open()`](is_open.md)が`true`を返すこと
+
+
+## 戻り値
+以下と等価：
+
+```cpp
+return rdbuf()-&amp;gt;native_handle();
+```
+* rdbuf()[link rdbuf.md]
+* native_handle()[link /reference/fstream/basic_filebuf/native_handle.md]
+
+
+## 備考
+- ネイティブハンドルは、ファイルが閉じられると無効になる
+
+
+## 例
+```cpp example
+// POSIX環境
+#include &amp;lt;fstream&amp;gt;
+#include &amp;lt;print&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+#include &amp;lt;sys/types.h&amp;gt;
+#include &amp;lt;sys/stat.h&amp;gt;
+
+int main() {
+  std::ifstream ifs(&amp;#34;example.txt&amp;#34;);
+
+  if (!ifs.is_open()) {
+    std::println(&amp;#34;ファイルを開けなかった&amp;#34;);
+    return 1;
+  }
+
+  // ネイティブハンドルから、POSIXのAPIでファイルの最終更新日時を取得する
+  int fd = ifs.native_handle();
+  struct ::stat s{};
+  ::fstat(fd, &amp;amp;s);
+
+  std::chrono::sys_seconds last_modified {std::chrono::seconds(s.st_mtim.tv_sec)};
+  std::chrono::zoned_time zoned{&amp;#34;Asia/Tokyo&amp;#34;, last_modified};
+  std::println(&amp;#34;Last modified: {}&amp;#34;, zoned);
+}
+```
+* native_handle[color ff0000]
+* ifs.is_open()[link is_open.md]
+* std::chrono::sys_seconds[link /reference/chrono/sys_time.md]
+* std::chrono::zoned_time[link /reference/chrono/zoned_time.md]
+
+### 出力例
+```
+Last modified: 2025-05-28 17:56:55 JST
+```
+
+## バージョン
+### 言語
+- C++26
+
+### 処理系
+- [Clang](/implementation.md#clang): 18 [mark verified]
+- [GCC](/implementation.md#gcc): 14 [mark verified]
+- [Visual C++](/implementation.md#visual_cpp): ??
+
+## 参照
+- [P1759R6 Native handles and file streams](http://open-std.org/jtc1/sc22/wg21/docs/papers/2023/p1759r6.html)
\ No newline at end of file
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>basic_ofstream -- fstream : C++26対応としてnative_handleを追加 (close #1196)</title>
      <link href="https://cpprefjp.github.io/reference/fstream/basic_ofstream.html"/>
      <id>f462880917802c8358138aab564c921e8970daf7:reference/fstream/basic_ofstream.md</id>
      <updated>2025-05-28T18:17:52+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/fstream/basic_ofstream.md b/reference/fstream/basic_ofstream.md
index ddccc8f3c..1bc10e0d7 100644
--- a/reference/fstream/basic_ofstream.md
+++ b/reference/fstream/basic_ofstream.md
@@ -33,6 +33,13 @@ namespace std {
 | [`close`](basic_ofstream/close.md)                | ファイルを閉じる                     | |
 
 
+### ネイティブハンドルの取得
+
+| 名前 | 説明｜対応バージョン |
+|-----|-----|-------------|
+| [`native_handle()`](basic_ofstream/native_handle.md) | ネイティブハンドルを取得する［処理系定義］ | C++26 |
+
+
 ## 非メンバ関数
 
 | 名前   | 説明                          | 対応バージョン |
@@ -49,6 +56,8 @@ namespace std {
 | `pos_type`       | `Traits::pos_type`            | |
 | `off_type`       | `Traits::off_type`            | |
 | `traits_type`    | テンプレート仮引数`Traits`    | |
+| `native_handle_type` | 処理系定義のネイティブハンドルの型`typename basic_filebuf&amp;lt;CharT, Traits&amp;gt;::native_handle_type` | C++26 |
+
 
 ## 例
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>native_handle -- fstream : C++26対応としてnative_handleを追加 (close #1196)</title>
      <link href="https://cpprefjp.github.io/reference/fstream/basic_ofstream/native_handle.html"/>
      <id>f462880917802c8358138aab564c921e8970daf7:reference/fstream/basic_ofstream/native_handle.md</id>
      <updated>2025-05-28T18:17:52+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/fstream/basic_ofstream/native_handle.md b/reference/fstream/basic_ofstream/native_handle.md
new file mode 100644
index 000000000..d1868a4ba
--- /dev/null
+++ b/reference/fstream/basic_ofstream/native_handle.md
@@ -0,0 +1,82 @@
+# native_handle
+* fstream[meta header]
+* std[meta namespace]
+* basic_ofstream[meta class]
+* function[meta id-type]
+* cpp26[meta cpp]
+
+```cpp
+native_handle_type native_handle() const noexcept;
+```
+
+## 概要
+処理系定義のネイティブハンドルを取得する。
+
+
+## 事前条件
+- [`is_open()`](is_open.md)が`true`を返すこと
+
+
+## 戻り値
+以下と等価：
+
+```cpp
+return rdbuf()-&amp;gt;native_handle();
+```
+* rdbuf()[link rdbuf.md]
+* native_handle()[link /reference/fstream/basic_filebuf/native_handle.md]
+
+
+## 備考
+- ネイティブハンドルは、ファイルが閉じられると無効になる
+
+
+## 例
+```cpp example
+// POSIX環境
+#include &amp;lt;fstream&amp;gt;
+#include &amp;lt;print&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+#include &amp;lt;sys/types.h&amp;gt;
+#include &amp;lt;sys/stat.h&amp;gt;
+
+int main() {
+  std::ofstream ofs(&amp;#34;example.txt&amp;#34;);
+
+  if (!ofs.is_open()) {
+    std::println(&amp;#34;ファイルを開けなかった&amp;#34;);
+    return 1;
+  }
+
+  // ネイティブハンドルから、POSIXのAPIでファイルの最終更新日時を取得する
+  int fd = ofs.native_handle();
+  struct ::stat s{};
+  ::fstat(fd, &amp;amp;s);
+
+  std::chrono::sys_seconds last_modified {std::chrono::seconds(s.st_mtim.tv_sec)};
+  std::chrono::zoned_time zoned{&amp;#34;Asia/Tokyo&amp;#34;, last_modified};
+  std::println(&amp;#34;Last modified: {}&amp;#34;, zoned);
+}
+```
+* native_handle[color ff0000]
+* ofs.is_open()[link is_open.md]
+* std::chrono::sys_seconds[link /reference/chrono/sys_time.md]
+* std::chrono::zoned_time[link /reference/chrono/zoned_time.md]
+
+### 出力例
+```
+Last modified: 2025-05-28 17:56:55 JST
+```
+
+## バージョン
+### 言語
+- C++26
+
+### 処理系
+- [Clang](/implementation.md#clang): 18 [mark verified]
+- [GCC](/implementation.md#gcc): 14 [mark verified]
+- [Visual C++](/implementation.md#visual_cpp): ??
+
+## 参照
+- [P1759R6 Native handles and file streams](http://open-std.org/jtc1/sc22/wg21/docs/papers/2023/p1759r6.html)
\ No newline at end of file
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>close -- fstream : サンプルコードのインデントを4 → 2スペースに修正</title>
      <link href="https://cpprefjp.github.io/reference/fstream/basic_filebuf/close.html"/>
      <id>cdaf0f76e3f641b39b06efb9a75352f82b8c97a5:reference/fstream/basic_filebuf/close.md</id>
      <updated>2025-05-28T17:44:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/fstream/basic_filebuf/close.md b/reference/fstream/basic_filebuf/close.md
index fded21519..f97f54475 100644
--- a/reference/fstream/basic_filebuf/close.md
+++ b/reference/fstream/basic_filebuf/close.md
@@ -44,7 +44,7 @@ int main()
   std::filebuf* buf = fs.rdbuf();
 
   if (buf-&amp;gt;open(&amp;#34;foo&amp;#34;, std::ios_base::out)) {
-      buf-&amp;gt;close();
+    buf-&amp;gt;close();
   }
 }
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_open -- fstream : サンプルコードのインデントを4 → 2スペースに修正</title>
      <link href="https://cpprefjp.github.io/reference/fstream/basic_filebuf/is_open.html"/>
      <id>cdaf0f76e3f641b39b06efb9a75352f82b8c97a5:reference/fstream/basic_filebuf/is_open.md</id>
      <updated>2025-05-28T17:44:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/fstream/basic_filebuf/is_open.md b/reference/fstream/basic_filebuf/is_open.md
index ed3cad0bb..8aa2b4613 100644
--- a/reference/fstream/basic_filebuf/is_open.md
+++ b/reference/fstream/basic_filebuf/is_open.md
@@ -27,7 +27,7 @@ int main()
   std::filebuf* buf = fs.rdbuf();
 
   if (buf-&amp;gt;is_open()) {
-      std::cout &amp;lt;&amp;lt; &amp;#34;opened&amp;#34; &amp;lt;&amp;lt; std::endl;
+    std::cout &amp;lt;&amp;lt; &amp;#34;opened&amp;#34; &amp;lt;&amp;lt; std::endl;
   }
 }
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>open -- fstream : サンプルコードのインデントを4 → 2スペースに修正</title>
      <link href="https://cpprefjp.github.io/reference/fstream/basic_filebuf/open.html"/>
      <id>cdaf0f76e3f641b39b06efb9a75352f82b8c97a5:reference/fstream/basic_filebuf/open.md</id>
      <updated>2025-05-28T17:44:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/fstream/basic_filebuf/open.md b/reference/fstream/basic_filebuf/open.md
index b7d1bf237..9149039d9 100644
--- a/reference/fstream/basic_filebuf/open.md
+++ b/reference/fstream/basic_filebuf/open.md
@@ -68,7 +68,7 @@ int main()
   std::filebuf* buf = fs.rdbuf();
 
   if (buf-&amp;gt;open(&amp;#34;foo&amp;#34;, std::ios_base::out)) {
-      std::cout &amp;lt;&amp;lt; &amp;#34;opened&amp;#34; &amp;lt;&amp;lt; std::endl;
+    std::cout &amp;lt;&amp;lt; &amp;#34;opened&amp;#34; &amp;lt;&amp;lt; std::endl;
   }
 }
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_open -- fstream : サンプルコードのインデントを4 → 2スペースに修正</title>
      <link href="https://cpprefjp.github.io/reference/fstream/basic_fstream/is_open.html"/>
      <id>cdaf0f76e3f641b39b06efb9a75352f82b8c97a5:reference/fstream/basic_fstream/is_open.md</id>
      <updated>2025-05-28T17:44:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/fstream/basic_fstream/is_open.md b/reference/fstream/basic_fstream/is_open.md
index 4bd8dc891..6c4692ad4 100644
--- a/reference/fstream/basic_fstream/is_open.md
+++ b/reference/fstream/basic_fstream/is_open.md
@@ -26,7 +26,7 @@ int main()
 {
   std::fstream fs(&amp;#34;foo&amp;#34;, std::ios_base::out);
   if (fs.is_open()) {
-      std::cout &amp;lt;&amp;lt; &amp;#34;opened&amp;#34; &amp;lt;&amp;lt; std::endl;
+    std::cout &amp;lt;&amp;lt; &amp;#34;opened&amp;#34; &amp;lt;&amp;lt; std::endl;
   }
 }
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_open -- fstream : サンプルコードのインデントを4 → 2スペースに修正</title>
      <link href="https://cpprefjp.github.io/reference/fstream/basic_ifstream/is_open.html"/>
      <id>cdaf0f76e3f641b39b06efb9a75352f82b8c97a5:reference/fstream/basic_ifstream/is_open.md</id>
      <updated>2025-05-28T17:44:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/fstream/basic_ifstream/is_open.md b/reference/fstream/basic_ifstream/is_open.md
index 275105dc7..4c0ce85d0 100644
--- a/reference/fstream/basic_ifstream/is_open.md
+++ b/reference/fstream/basic_ifstream/is_open.md
@@ -26,7 +26,7 @@ int main()
 {
   std::ifstream fs(&amp;#34;foo&amp;#34;, std::ios_base::in);
   if (fs.is_open()) {
-      std::cout &amp;lt;&amp;lt; &amp;#34;opened&amp;#34; &amp;lt;&amp;lt; std::endl;
+    std::cout &amp;lt;&amp;lt; &amp;#34;opened&amp;#34; &amp;lt;&amp;lt; std::endl;
   }
 }
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_open -- fstream : サンプルコードのインデントを4 → 2スペースに修正</title>
      <link href="https://cpprefjp.github.io/reference/fstream/basic_ofstream/is_open.html"/>
      <id>cdaf0f76e3f641b39b06efb9a75352f82b8c97a5:reference/fstream/basic_ofstream/is_open.md</id>
      <updated>2025-05-28T17:44:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/fstream/basic_ofstream/is_open.md b/reference/fstream/basic_ofstream/is_open.md
index 70646ce84..d5901c468 100644
--- a/reference/fstream/basic_ofstream/is_open.md
+++ b/reference/fstream/basic_ofstream/is_open.md
@@ -26,7 +26,7 @@ int main()
 {
   std::ofstream fs(&amp;#34;foo&amp;#34;, std::ios_base::out);
   if (fs.is_open()) {
-      std::cout &amp;lt;&amp;lt; &amp;#34;opened&amp;#34; &amp;lt;&amp;lt; std::endl;
+    std::cout &amp;lt;&amp;lt; &amp;#34;opened&amp;#34; &amp;lt;&amp;lt; std::endl;
   }
 }
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>basic_ifstream -- リンクミスを修正</title>
      <link href="https://cpprefjp.github.io/reference/fstream/basic_ifstream.html"/>
      <id>fa3dcb5f9735b4013050ad5b0855e665144f7ef0:reference/fstream/basic_ifstream.md</id>
      <updated>2025-05-28T17:30:52+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/fstream/basic_ifstream.md b/reference/fstream/basic_ifstream.md
index c15e79c2c..e012d09da 100644
--- a/reference/fstream/basic_ifstream.md
+++ b/reference/fstream/basic_ifstream.md
@@ -75,7 +75,7 @@ int main() {
 }
 ```
 * std::ifstream[color ff0000]
-* ifs.is_open[link ifstream/is_open.md]
-* ifs.close[link ifstream/close.md]
+* ifs.is_open[link basic_ifstream/is_open.md]
+* ifs.close[link basic_ifstream/close.md]
 * std::getline[link /reference/string/basic_string/getline.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>basic_ofstream -- リンクミスを修正</title>
      <link href="https://cpprefjp.github.io/reference/fstream/basic_ofstream.html"/>
      <id>fa3dcb5f9735b4013050ad5b0855e665144f7ef0:reference/fstream/basic_ofstream.md</id>
      <updated>2025-05-28T17:30:52+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/fstream/basic_ofstream.md b/reference/fstream/basic_ofstream.md
index 34e226e4f..ddccc8f3c 100644
--- a/reference/fstream/basic_ofstream.md
+++ b/reference/fstream/basic_ofstream.md
@@ -72,6 +72,6 @@ int main() {
 }
 ```
 * std::ofstream[color ff0000]
-* ofs.is_open[link ofstream/is_open.md]
-* ofs.close[link ofstream/close.md]
+* ofs.is_open[link basic_ofstream/is_open.md]
+* ofs.close[link basic_ofstream/close.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
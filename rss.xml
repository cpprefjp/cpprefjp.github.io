<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2022-03-26T14:40:08.542270</updated>
  <id>dad207a8-c15f-4245-afa3-173802f03671</id>

  
    <entry>
      <title>view -- viewの要件を更新</title>
      <link href="https://cpprefjp.github.io/reference/ranges/view.html"/>
      <id>0ee9165b88e7256652d2ad08cff0d0959f4d82d0:reference/ranges/view.md</id>
      <updated>2022-03-26T03:38:23+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/view.md b/reference/ranges/view.md
index 104f3959b..a0c183f58 100644
--- a/reference/ranges/view.md
+++ b/reference/ranges/view.md
@@ -17,12 +17,18 @@ namespace std::ranges {
 ## 概要
 `view`は、ビューを表すコンセプトである。`view`の要件は意味論要件がメインなので、[`enable_view`](enable_view.md)を特殊化して有効にしない限り`view`とはならない。
 
+`view`の例：
+
+- イテレータペアをラップするRange
+- 要素を`shared_­ptr`で持っていて、Rangeのコピーをすると要素の所有権を共有するようなRange
+- 要素を必要に応じて生成するRange
+
 ## モデル
 型`T`が`view`のモデルとなるのは、以下の条件をすべて満たす場合である。
 
-1. `T`はO(1)で構築できる
-2. `T`はO(1)でムーブ代入できる
-3. `T`はO(1)で破棄できる
+1. `T`のムーブコンストラクタがO(1)
+2. `T`のムーブ代入は、`T`のデストラクタとムーブコンストラクタを連続で実行する場合より複雑にならない
+3. M 個の要素を持つ`T`型のオブジェクトから N 個の`T`型オブジェクトをムーブやコピーで作ったとき、それら N 個の`T`型オブジェクトは O(N + M) で破棄できる
 4. [`copy_constructible`](/reference/concepts/copy_constructible.md)`&amp;lt;T&amp;gt;`が`false`、または`T`のコピーコンストラクタがO(1)
 5. [`copyable`](/reference/concepts/copyable.md)`&amp;lt;T&amp;gt;`が`false`、または`T`のコピー代入演算子がO(1)
 
@@ -51,6 +57,7 @@ int main()
 }
 ```
 * std::ranges::view[color ff0000]
+* std::span[link /reference/span/span.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ranges -- rangesのC++23対応(ヘッダーページのみ)</title>
      <link href="https://cpprefjp.github.io/reference/ranges.html"/>
      <id>161ee1ae5879d6bfd783d3e0e514aef89fccf31e:reference/ranges.md</id>
      <updated>2022-03-25T03:22:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges.md b/reference/ranges.md
index 5cdb2c27d..33a460871 100644
--- a/reference/ranges.md
+++ b/reference/ranges.md
@@ -304,12 +304,35 @@ range | adaptor(args...)
 
 ### adjacent view
 
-| 名前                                                             | 説明                                                                            | 対応バージョン |
-|------------------------------------------------------------------|---------------------------------------------------------------------------------|----------------|
-| [`adjacent_view`](ranges/adjacent_view.md.nolink)                       | シーケンスから値を2つずつ取り出した`tuple`のビュー (class template)             | C++23          |
-| [`views::adjacent`](ranges/adjacent_view.md.nolink)                     | `adjacent_view`を生成する (customization point object)                          | C++23          |
-| [`adjacent_transform_view`](ranges/adjacent_transform_view.md.nolink)   | シーケンスから値を2つずつ取り出し、関数を適用した結果のビュー (class template)  | C++23          |
-| [`views::adjacent_transform`](ranges/adjacent_transform_view.md.nolink) | `adjacent_transform_view`を生成する (customization point object)                | C++23          |
+| 名前                                                             | 説明                                                                               | 対応バージョン |
+|------------------------------------------------------------------|------------------------------------------------------------------------------------|----------------|
+| [`adjacent_view`](ranges/adjacent_view.md.nolink)                       | 各要素とそれに隣接する要素を指定個数ずつ取り出した`tuple`のビュー (class template) | C++23          |
+| [`views::adjacent`](ranges/adjacent_view.md.nolink)                     | `adjacent_view`を生成する (customization point object)                             | C++23          |
+| [`adjacent_transform_view`](ranges/adjacent_transform_view.md.nolink)   | `adjacent_view`と同様に取り出し、関数を適用した結果のビュー (class template)       | C++23          |
+| [`views::adjacent_transform`](ranges/adjacent_transform_view.md.nolink) | `adjacent_transform_view`を生成する (customization point object)                   | C++23          |
+
+### chunk view
+
+| 名前                                        | 説明                                                               | 対応バージョン |
+|---------------------------------------------|--------------------------------------------------------------------|----------------|
+| [`chunk_view`](ranges/chunk_view.md.nolink)         | シーケンスを指定個数で区切った`view`のシーケンス (class template)  | C++23          |
+| [`views::chunk`](ranges/chunk_view.md.nolink)       | `chunk_view`を生成する (customization point object)                | C++23          |
+| [`chunk_by_view`](ranges/chunk_by_view.md.nolink)   | 2項述語が偽となる部分で区切った`view`のシーケンス (class template) | C++23          |
+| [`views::chunk_by`](ranges/chunk_by_view.md.nolink) | `chunk_by_view`を生成する (customization point object)             | C++23          |
+
+### slide view
+
+| 名前                                   | 説明                                                                            | 対応バージョン |
+|----------------------------------------|---------------------------------------------------------------------------------|----------------|
+| [`slide_view`](ranges/slide_view.md.nolink)   | 各要素とそれに隣接する要素を指定個数ずつ見る`view`のシーケンス (class template) | C++23          |
+| [`views::slide`](ranges/slide_view.md.nolink) | `slide_view`を生成する (customization point object)                             | C++23          |
+
+
+## Range変換
+
+| 名前                 | 説明                                                           | 対応バージョン |
+|----------------------|----------------------------------------------------------------|----------------|
+| [`to`](ranges/to.md.nolink) | パイプライン記法でRangeからコンテナを構築する (class template) | C++23          |
 
 ## バージョン
 ### 言語
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>map -- Merge pull request #960 from cpprefjp/add_file</title>
      <link href="https://cpprefjp.github.io/reference/map/map.html"/>
      <id>0d4169bc7226e0e6e9db386df8d595a5a90147c3:reference/map/map.md</id>
      <updated>2022-03-24T21:00:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/map/map.md b/reference/map/map.md
index 3da7115e3..cbc698dba 100644
--- a/reference/map/map.md
+++ b/reference/map/map.md
@@ -163,7 +163,7 @@ struct insert-return-type {
 | [`operator==`](map/op_equal.md)         | 左辺と右辺が等しいかの判定を行う           | |
 | [`operator!=`](map/op_not_equal.md)     | 左辺と右辺が等しくないかの判定を行う       | |
 | [`operator&amp;lt;`](map/op_less.md)           | 左辺が右辺より小さいかの判定を行う         | |
-| [`operator&amp;lt;=`](map/op_greater_equal.md) | 左辺が右辺より小さいか等しいかの判定を行う | |
+| [`operator&amp;lt;=`](map/op_less_equal.md)    | 左辺が右辺より小さいか等しいかの判定を行う | |
 | [`operator&amp;gt;`](map/op_greater.md)        | 左辺が右辺より大きいかの判定を行う         | |
 | [`operator&amp;gt;=`](map/op_greater_equal.md) | 左辺が右辺より大きいか等しいかの判定を行う | |
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;= -- Merge pull request #960 from cpprefjp/add_file</title>
      <link href="https://cpprefjp.github.io/reference/map/map/op_less_equal.html"/>
      <id>0d4169bc7226e0e6e9db386df8d595a5a90147c3:reference/map/map/op_less_equal.md</id>
      <updated>2022-03-24T21:00:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/map/map/op_less_equal.md b/reference/map/map/op_less_equal.md
new file mode 100644
index 000000000..f51b3c9e8
--- /dev/null
+++ b/reference/map/map/op_less_equal.md
@@ -0,0 +1,59 @@
+# operator&amp;lt;=
+* map[meta header]
+* std[meta namespace]
+* function template[meta id-type]
+
+```cpp
+namespace std {
+  template &amp;lt;class Key, class T, class Compare, class Allocator&amp;gt;
+  bool operator&amp;lt;=(const map&amp;lt;Key,T, Compare,Allocator&amp;gt;&amp;amp; x, const map&amp;lt;Key,T, Compare,Allocator&amp;gt;&amp;amp; y);
+}
+```
+
+## 概要
+`x` が `y` より小さいか等しいかの判定を行う。
+
+
+## 引数
+- `x`, `y`&amp;lt;br/&amp;gt;
+比較するコンテナ。
+
+
+## 戻り値
+`x` が `y` より小さいか等しい場合に `true`, そうでない場合に `false`。
+
+
+## 計算量
+[`size`](/reference/map/map/size.md) に対して線形時間。
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;map&amp;gt;
+
+int main()
+{
+  std::map&amp;lt;char,int&amp;gt; m1, m2;
+  m1.insert(std::make_pair(&amp;#39;a&amp;#39;,10));
+  m1.insert(std::make_pair(&amp;#39;b&amp;#39;,20));
+  m1.insert(std::make_pair(&amp;#39;c&amp;#39;,30));
+  m2 = m1;
+
+  std::cout &amp;lt;&amp;lt; (m1 &amp;lt;= m2) &amp;lt;&amp;lt; std::endl;
+
+  m2.insert(std::make_pair(&amp;#39;d&amp;#39;,40));
+
+  std::cout &amp;lt;&amp;lt; (m1 &amp;lt;= m2) &amp;lt;&amp;lt; std::endl;
+
+  return 0;
+}
+```
+* insert[link insert.md]
+
+### 出力
+```
+1
+1
+```
+
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>multimap -- Merge pull request #960 from cpprefjp/add_file</title>
      <link href="https://cpprefjp.github.io/reference/map/multimap.html"/>
      <id>0d4169bc7226e0e6e9db386df8d595a5a90147c3:reference/map/multimap.md</id>
      <updated>2022-03-24T21:00:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/map/multimap.md b/reference/map/multimap.md
index fdde7c31a..1e6115444 100644
--- a/reference/map/multimap.md
+++ b/reference/map/multimap.md
@@ -149,7 +149,7 @@ namespace std {
 | [`operator==`](multimap/op_equal.md)         | 左辺と右辺が等しいかの判定を行う           | |
 | [`operator!=`](multimap/op_not_equal.md)     | 左辺と右辺が等しくないかの判定を行う       | |
 | [`operator&amp;lt;`](multimap/op_less.md)           | 左辺が右辺より小さいかの判定を行う         | |
-| [`operator&amp;lt;=`](multimap/op_greater_equal.md) | 左辺が右辺より小さいか等しいかの判定を行う | |
+| [`operator&amp;lt;=`](multimap/op_less_equal.md)    | 左辺が右辺より小さいか等しいかの判定を行う | |
 | [`operator&amp;gt;`](multimap/op_greater.md)        | 左辺が右辺より大きいかの判定を行う         | |
 | [`operator&amp;gt;=`](multimap/op_greater_equal.md) | 左辺が右辺より大きいか等しいかの判定を行う | |
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator== -- Merge pull request #960 from cpprefjp/add_file</title>
      <link href="https://cpprefjp.github.io/reference/map/multimap/op_equal.html"/>
      <id>0d4169bc7226e0e6e9db386df8d595a5a90147c3:reference/map/multimap/op_equal.md</id>
      <updated>2022-03-24T21:00:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/map/multimap/op_equal.md b/reference/map/multimap/op_equal.md
index b832941be..c55a6f55e 100644
--- a/reference/map/multimap/op_equal.md
+++ b/reference/map/multimap/op_equal.md
@@ -4,8 +4,10 @@
 * function template[meta id-type]
 
 ```cpp
-template &amp;lt;class Key, class T, class Compare, class Allocator&amp;gt;
-bool operator==(const multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;&amp;amp; x, const multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;&amp;amp; y);
+namespace std {
+  template &amp;lt;class Key, class T, class Compare, class Allocator&amp;gt;
+  bool operator==(const multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;&amp;amp; x, const multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;&amp;amp; y);
+}
 ```
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt; -- Merge pull request #960 from cpprefjp/add_file</title>
      <link href="https://cpprefjp.github.io/reference/map/multimap/op_greater.html"/>
      <id>0d4169bc7226e0e6e9db386df8d595a5a90147c3:reference/map/multimap/op_greater.md</id>
      <updated>2022-03-24T21:00:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/map/multimap/op_greater.md b/reference/map/multimap/op_greater.md
index 9a5858bbf..cc9acf025 100644
--- a/reference/map/multimap/op_greater.md
+++ b/reference/map/multimap/op_greater.md
@@ -4,8 +4,10 @@
 * function template[meta id-type]
 
 ```cpp
-template &amp;lt;class Key, class T, class Compare, class Allocator&amp;gt;
-bool operator&amp;gt; (const multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;&amp;amp; x, const multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;&amp;amp; y);
+namespace std {
+  template &amp;lt;class Key, class T, class Compare, class Allocator&amp;gt;
+  bool operator&amp;gt; (const multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;&amp;amp; x, const multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;&amp;amp; y);
+}
 ```
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;= -- Merge pull request #960 from cpprefjp/add_file</title>
      <link href="https://cpprefjp.github.io/reference/map/multimap/op_greater_equal.html"/>
      <id>0d4169bc7226e0e6e9db386df8d595a5a90147c3:reference/map/multimap/op_greater_equal.md</id>
      <updated>2022-03-24T21:00:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/map/multimap/op_greater_equal.md b/reference/map/multimap/op_greater_equal.md
index 3ad0d557d..d5727416d 100644
--- a/reference/map/multimap/op_greater_equal.md
+++ b/reference/map/multimap/op_greater_equal.md
@@ -4,8 +4,10 @@
 * function template[meta id-type]
 
 ```cpp
-template &amp;lt;class Key, class T, class Compare, class Allocator&amp;gt;
-bool operator&amp;gt;=(const multimap&amp;lt;Key,T, Compare,Allocator&amp;gt;&amp;amp; x, const multimap&amp;lt;Key,T, Compare,Allocator&amp;gt;&amp;amp; y);
+namespace std {
+  template &amp;lt;class Key, class T, class Compare, class Allocator&amp;gt;
+  bool operator&amp;gt;=(const multimap&amp;lt;Key,T, Compare,Allocator&amp;gt;&amp;amp; x, const multimap&amp;lt;Key,T, Compare,Allocator&amp;gt;&amp;amp; y);
+}
 ```
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt; -- Merge pull request #960 from cpprefjp/add_file</title>
      <link href="https://cpprefjp.github.io/reference/map/multimap/op_less.html"/>
      <id>0d4169bc7226e0e6e9db386df8d595a5a90147c3:reference/map/multimap/op_less.md</id>
      <updated>2022-03-24T21:00:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/map/multimap/op_less.md b/reference/map/multimap/op_less.md
index 765121af8..05a95afdc 100644
--- a/reference/map/multimap/op_less.md
+++ b/reference/map/multimap/op_less.md
@@ -4,8 +4,10 @@
 * function template[meta id-type]
 
 ```cpp
-template &amp;lt;class Key, class T, class Compare, class Allocator&amp;gt;
-bool operator&amp;lt; (const multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;&amp;amp; x, const multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;&amp;amp; y);
+namespace std {
+  template &amp;lt;class Key, class T, class Compare, class Allocator&amp;gt;
+  bool operator&amp;lt; (const multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;&amp;amp; x, const multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;&amp;amp; y);
+}
 ```
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;= -- Merge pull request #960 from cpprefjp/add_file</title>
      <link href="https://cpprefjp.github.io/reference/map/multimap/op_less_equal.html"/>
      <id>0d4169bc7226e0e6e9db386df8d595a5a90147c3:reference/map/multimap/op_less_equal.md</id>
      <updated>2022-03-24T21:00:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/map/multimap/op_less_equal.md b/reference/map/multimap/op_less_equal.md
new file mode 100644
index 000000000..65224eef1
--- /dev/null
+++ b/reference/map/multimap/op_less_equal.md
@@ -0,0 +1,59 @@
+# operator&amp;lt;=
+* map[meta header]
+* std[meta namespace]
+* function template[meta id-type]
+
+```cpp
+namespace std {
+  template &amp;lt;class Key, class T, class Compare, class Allocator&amp;gt;
+  bool operator&amp;lt;=(const multimap&amp;lt;Key,T, Compare,Allocator&amp;gt;&amp;amp; x, const multimap&amp;lt;Key,T, Compare,Allocator&amp;gt;&amp;amp; y);
+}
+```
+
+## 概要
+`x` が `y` より小さいか等しいかの判定を行う。
+
+
+## 引数
+- `x`, `y`&amp;lt;br/&amp;gt;
+比較するコンテナ。
+
+
+## 戻り値
+`x` が `y` より小さいか等しい場合に `true`, そうでない場合に `false`。
+
+
+## 計算量
+[`size`](/reference/map/multimap/size.md) に対して線形時間。
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;map&amp;gt;
+
+int main()
+{
+  std::multimap&amp;lt;char, int&amp;gt; m1, m2;
+  m1.insert(std::make_pair(&amp;#39;a&amp;#39;, 10));
+  m1.insert(std::make_pair(&amp;#39;b&amp;#39;, 20));
+  m1.insert(std::make_pair(&amp;#39;c&amp;#39;, 30));
+  m2 = m1;
+
+  std::cout &amp;lt;&amp;lt; (m1 &amp;lt;= m2) &amp;lt;&amp;lt; std::endl;
+
+  m2.insert(std::make_pair(&amp;#39;d&amp;#39;, 40));
+
+  std::cout &amp;lt;&amp;lt; (m1 &amp;lt;= m2) &amp;lt;&amp;lt; std::endl;
+
+  return 0;
+}
+```
+* insert[link insert.md]
+
+### 出力
+```
+1
+1
+```
+
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator!= -- Merge pull request #960 from cpprefjp/add_file</title>
      <link href="https://cpprefjp.github.io/reference/map/multimap/op_not_equal.html"/>
      <id>0d4169bc7226e0e6e9db386df8d595a5a90147c3:reference/map/multimap/op_not_equal.md</id>
      <updated>2022-03-24T21:00:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/map/multimap/op_not_equal.md b/reference/map/multimap/op_not_equal.md
index f2b2742a4..852bdf55c 100644
--- a/reference/map/multimap/op_not_equal.md
+++ b/reference/map/multimap/op_not_equal.md
@@ -4,8 +4,10 @@
 * function template[meta id-type]
 
 ```cpp
-template &amp;lt;class Key, class T, class Compare, class Allocator&amp;gt;
-bool operator!=(const multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;&amp;amp; x, const multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;&amp;amp; y);
+namespace std {
+  template &amp;lt;class Key, class T, class Compare, class Allocator&amp;gt;
+  bool operator!=(const multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;&amp;amp; x, const multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;&amp;amp; y);
+}
 ```
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>set_symmetric_difference -- 例を修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_set_symmetric_difference.html"/>
      <id>7ec722c870cac95481b81961e435722657e3ec9c:reference/algorithm/ranges_set_symmetric_difference.md</id>
      <updated>2022-03-24T20:06:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_set_symmetric_difference.md b/reference/algorithm/ranges_set_symmetric_difference.md
index 6ebecbbf3..047ac0175 100644
--- a/reference/algorithm/ranges_set_symmetric_difference.md
+++ b/reference/algorithm/ranges_set_symmetric_difference.md
@@ -85,14 +85,14 @@ int main()
   std::multiset&amp;lt;int&amp;gt; result;
 
   // 重ならない要素からなる集合を作る
-  std::set_symmetric_difference(a, b, std::inserter(result, result.end()));
+  std::ranges::set_symmetric_difference(a, b, std::inserter(result, result.end()));
 
   for (int x : result) {
     std::cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; std::endl;
   }
 }
 ```
-* std::set_symmetric_difference[color ff0000]
+* std::ranges::set_symmetric_difference[color ff0000]
 * std::multiset[link /reference/set/multiset.md]
 * begin()[link /reference/set/set/begin.md]
 * end()[link /reference/set/set/end.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>set_symmetric_difference -- リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_set_symmetric_difference.html"/>
      <id>455c36ca0c89becbcfb1982d62fd6f40b91cf564:reference/algorithm/ranges_set_symmetric_difference.md</id>
      <updated>2022-03-24T20:04:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_set_symmetric_difference.md b/reference/algorithm/ranges_set_symmetric_difference.md
index e8782f0c2..6ebecbbf3 100644
--- a/reference/algorithm/ranges_set_symmetric_difference.md
+++ b/reference/algorithm/ranges_set_symmetric_difference.md
@@ -6,15 +6,14 @@
 
 ```cpp
 namespace std::ranges {
-  template&amp;lt;class I1, class I2, class O&amp;gt;
-  using set_symmetric_difference_result = in_in_out_result&amp;lt;I1, I2, O&amp;gt;;
-
+  // (1)
   template&amp;lt;input_iterator I1, sentinel_for&amp;lt;I1&amp;gt; S1, input_iterator I2, sentinel_for&amp;lt;I2&amp;gt; S2, weakly_incrementable O,
            class Comp = ranges::less, class Proj1 = identity, class Proj2 = identity&amp;gt;
     requires mergeable&amp;lt;I1, I2, O, Comp, Proj1, Proj2&amp;gt;
   constexpr set_symmetric_difference_result&amp;lt;I1, I2, O&amp;gt;
     set_symmetric_difference(I1 first1, S1 last1, I2 first2, S2 last2, O result, Comp comp = {}, Proj1 proj1 = {}, Proj2 proj2 = {});
 
+  // (2)
   template&amp;lt;input_range R1, input_range R2, weakly_incrementable O,
            class Comp = ranges::less, class Proj1 = identity, class Proj2 = identity&amp;gt;
     requires mergeable&amp;lt;iterator_t&amp;lt;R1&amp;gt;, iterator_t&amp;lt;R2&amp;gt;, O, Comp, Proj1, Proj2&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
</feed>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2023-01-29T14:49:03.249554</updated>
  <id>6bcd96e2-3561-4723-8fc0-d326d803d0ab</id>

  
    <entry>
      <title>expected -- expected/expected: operator=(#1066)</title>
      <link href="https://cpprefjp.github.io/reference/expected/expected.html"/>
      <id>724b29c83cfdd8bddf4cdc1bb3c657b6c9e17d4c:reference/expected/expected.md</id>
      <updated>2023-01-29T23:29:20+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/expected/expected.md b/reference/expected/expected.md
index be2612602..60b59f6af 100644
--- a/reference/expected/expected.md
+++ b/reference/expected/expected.md
@@ -38,7 +38,7 @@ namespace std {
 
 | 名前            | 説明           | 対応バージョン |
 |-----------------|----------------|-------|
-| [`operator=`](expected/op_assign.md.nolink) | 代入演算子     | C++23 |
+| [`operator=`](expected/op_assign.md) | 代入演算子 | C++23 |
 | [`emplace`](expected/emplace.md.nolink) | 正常値型のコンストラクタ引数から直接構築する | C++23 |
 | [`swap`](expected/swap.md.nolink) | 他の`expected`オブジェクトとデータを入れ替える | C++23 |
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator= -- expected/expected: operator=(#1066)</title>
      <link href="https://cpprefjp.github.io/reference/expected/expected/op_assign.html"/>
      <id>724b29c83cfdd8bddf4cdc1bb3c657b6c9e17d4c:reference/expected/expected/op_assign.md</id>
      <updated>2023-01-29T23:29:20+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/expected/expected/op_assign.md b/reference/expected/expected/op_assign.md
new file mode 100644
index 000000000..103e901f9
--- /dev/null
+++ b/reference/expected/expected/op_assign.md
@@ -0,0 +1,245 @@
+# operator=
+* expected[meta header]
+* function[meta id-type]
+* std[meta namespace]
+* expected[meta class]
+* cpp23[meta cpp]
+
+```cpp
+constexpr expected&amp;amp; operator=(const expected&amp;amp;);      // (1)
+
+constexpr expected&amp;amp; operator=(expected&amp;amp;&amp;amp;) noexcept(see below); // (2)
+
+template&amp;lt;class U = T&amp;gt;
+constexpr expected&amp;amp; operator=(U&amp;amp;&amp;amp;);                  // (3)
+
+template&amp;lt;class G&amp;gt;
+constexpr expected&amp;amp; operator=(const unexpected&amp;lt;G&amp;gt;&amp;amp;); // (4)
+
+template&amp;lt;class G&amp;gt;
+constexpr expected&amp;amp; operator=(unexpected&amp;lt;G&amp;gt;&amp;amp;&amp;amp;);      // (5)
+```
+* see below[italic]
+* unexpected[link ../unexpected.md]
+
+## 概要
+- (1) : コピー代入。
+- (2) : ムーブ代入。
+- (3) : 要素型`T`に変換可能な値を、正常値としてコピー代入またはムーブ代入。
+- (4) : 変換可能な[`unexpected`](../unexpected.md)オブジェクトから、エラー値としてコピー代入。
+- (5) : 変換可能な[`unexpected`](../unexpected.md)オブジェクトから、エラー値としてムーブ代入。
+
+
+動作説明用の`expected`クラスメンバ変数として、下記を導入する。
+
+- `val` : `T`型の正常値。
+- `unex` : `E`型のエラー値。
+- `has_val` : `bool`型のフラグ変数。正常値を保持する場合は`true`に、エラー値を保持する場合は`false`となる。
+
+また、説明用のテンプレート関数`reinit-expected`を次の通り定義する。
+
+```cpp
+template&amp;lt;class T, class U, class... Args&amp;gt;
+constexpr void reinit-expected(T&amp;amp; newval, U&amp;amp; oldval, Args&amp;amp;&amp;amp;... args) {
+  if constexpr (is_nothrow_constructible_v&amp;lt;T, Args...&amp;gt;) {
+    destroy_at(addressof(oldval));
+    construct_at(addressof(newval), std::forward&amp;lt;Args&amp;gt;(args)...);
+  } else if constexpr (is_nothrow_move_constructible_v&amp;lt;T&amp;gt;) {
+    T tmp(std::forward&amp;lt;Args&amp;gt;(args)...);
+    destroy_at(addressof(oldval));
+    construct_at(addressof(newval), std::move(tmp));
+  } else {
+    U tmp(std::move(oldval));
+    destroy_at(addressof(oldval));
+    try {
+      construct_at(addressof(newval), std::forward&amp;lt;Args&amp;gt;(args)...);
+    } catch (...) {
+      construct_at(addressof(oldval), std::move(tmp));
+      throw;
+    }
+  }
+}
+```
+* addressof[link /reference/memory/addressof.md]
+* construct_at[link /reference/memory/construct_at.md]
+* destroy_at[link /reference/memory/destroy_at.md]
+* is_nothrow_constructible_v[link /reference/type_traits/is_nothrow_constructible.md]
+* is_nothrow_move_constructible_v[link /reference/type_traits/is_nothrow_move_constructible.md]
+
+
+## テンプレートパラメータ制約
+- (2) : 下記を全て満たすこと
+    - [`is_move_constructible_v`](/reference/type_traits/is_move_constructible.md)`&amp;lt;T&amp;gt; == true`
+    - [`is_move_assignable_v`](/reference/type_traits/is_move_assignable.md)`&amp;lt;T&amp;gt; == true`
+    - [`is_move_constructible_v`](/reference/type_traits/is_move_constructible.md)`&amp;lt;E&amp;gt; == true`
+    - [`is_move_assignable_v`](/reference/type_traits/is_move_assignable.md)`&amp;lt;E&amp;gt; == true`
+    - `(`[`is_nothrow_move_constructible_v`](/reference/type_traits/is_nothrow_move_constructible.md)`&amp;lt;T&amp;gt; ||` [`is_nothrow_move_constructible_v`](/reference/type_traits/is_nothrow_move_constructible.md)`&amp;lt;E&amp;gt;) == true`
+- (3) : 下記を全て満たすこと
+    - [`is_same_v`](/reference/type_traits/is_same.md)`&amp;lt;expected,` [`remove_cvref_t`](/reference/type_traits/remove_cvref.md)`&amp;lt;U&amp;gt;&amp;gt; == false`
+    - [`remove_cvref_t`](/reference/type_traits/remove_cvref.md)`&amp;lt;U&amp;gt;`が[`unexpected`](../unexpected.md)の特殊化ではない
+    - [`is_constructible_v`](/reference/type_traits/is_constructible.md)`&amp;lt;T, U&amp;gt; == true`
+    - [`is_assignable_v`](/reference/type_traits/is_assignable.md)`&amp;lt;T&amp;amp;, U&amp;gt; == true`
+    - `(`[`is_nothrow_constructible_v`](/reference/type_traits/is_nothrow_constructible.md)`&amp;lt;T, U&amp;gt; ||` [`is_nothrow_move_constructible_v`](/reference/type_traits/is_nothrow_move_constructible.md)`&amp;lt;T&amp;gt; ||` [`is_nothrow_move_constructible_v`](/reference/type_traits/is_nothrow_move_constructible.md)`&amp;lt;E&amp;gt;) == true`
+- (4) : 下記を全て満たすこと
+    - [`is_constructible_v`](/reference/type_traits/is_constructible.md)`&amp;lt;E, const G&amp;amp;&amp;gt; == true`
+    - [`is_assignable_v`](/reference/type_traits/is_assignable.md)`&amp;lt;E&amp;amp;, const G&amp;amp;&amp;gt; == true`
+    - `(`[`is_nothrow_constructible_v`](/reference/type_traits/is_nothrow_constructible.md)`&amp;lt;E, const G&amp;amp;&amp;gt; ||` [`is_nothrow_move_constructible_v`](/reference/type_traits/is_nothrow_move_constructible.md)`&amp;lt;T&amp;gt; ||
+`[`is_nothrow_move_constructible_v`](/reference/type_traits/is_nothrow_move_constructible.md)`&amp;lt;E&amp;gt;) == true`
+- (5) : 下記を全て満たすこと
+    - [`is_constructible_v`](/reference/type_traits/is_constructible.md)`&amp;lt;E, G&amp;gt; == true`
+    - [`is_assignable_v`](/reference/type_traits/is_assignable.md)`&amp;lt;E&amp;amp;, G&amp;gt; == true`
+    - `(`[`is_nothrow_constructible_v`](/reference/type_traits/is_nothrow_constructible.md)`&amp;lt;E, G&amp;gt; ||` [`is_nothrow_move_constructible_v`](/reference/type_traits/is_nothrow_move_constructible.md)`&amp;lt;T&amp;gt; ||` [`is_nothrow_move_constructible_v`](/reference/type_traits/is_nothrow_move_constructible.md)`&amp;lt;E&amp;gt;) == true`
+
+
+## 効果
+- (1) : 次の処理を行ったのち、例外が送出されなければ、`has_val = rhs.`[`has_value()`](has_value.md.nolink)`; return *this;`
+    - `this`と`rhs`が共に正常値を保持していたら、`val = *rhs`
+    - `this`が正常値を保持し、`rhs`がエラー値を保持していたら、`reinit-expected(unex, val, rhs.`[`error()`](error.md.nolink)`)`
+    - `this`がエラーを保持し、`rhs`が正常値を保持していたら、`reinit-expected(val, unex, *rhs)`
+    - `this`と`rhs`が共にエラー値を保持していたら、`unex = rhs.`[`error()`](error.md.nolink)
+- (2) : 次の処理を行ったのち、例外が送出されなければ、`has_val = rhs.`[`has_value()`](has_value.md.nolink)`; return *this;`
+    - `this`と`rhs`が共に正常値を保持していたら、`val = std::move(*rhs)`
+    - `this`が正常値を保持し、`rhs`がエラー値を保持していたら、`reinit-expected(unex, val, std::move(rhs.`[`error()`](error.md.nolink)`))`
+    - `this`がエラーを保持し、`rhs`が正常値を保持していたら、`reinit-expected(val, unex, std::move(*rhs))`
+    - `this`と`rhs`が共にエラー値を保持していたら、`unex = std::move(rhs.`[`error()`](error.md.nolink)`)`
+- (3) : 次の処理と等価
+    - `this`が正常値を保持していたら、`val = std::forward&amp;lt;U&amp;gt;(v)`
+    - `this`がエラー値を保持していたら、`reinit-expected(val, unex, std::forward&amp;lt;U&amp;gt;(v)); has_val = true;`
+- (4) : 次の処理と等価
+    - `this`が正常値を保持していたら、`reinit-expected(unex, val, std::forward&amp;lt;const G&amp;amp;&amp;gt;(e.`[`error()`](error.md.nolink)`));
+has_val = false;`
+    - `this`がエラー値を保持していたら、`unex = std::forward&amp;lt;const G&amp;amp;&amp;gt;(e.`[`error()`](error.md.nolink)`);`
+- (5) : 次の処理と等価
+    - `this`が正常値を保持していたら、`reinit-expected(unex, val, std::forward&amp;lt;G&amp;gt;(e.`[`error()`](error.md.nolink)`));
+has_val = false;`
+    - `this`がエラー値を保持していたら、`unex = std::forward&amp;lt;G&amp;gt;(e.`[`error()`](error.md.nolink)`);`
+
+
+## 戻り値
+`*this`
+
+
+## 例外
+- (2) : ムーブ代入演算子のnoexcept例外指定は、次の式に従う
+    - [`is_nothrow_move_assignable_v`](/reference/type_traits/is_nothrow_move_assignable.md)`&amp;lt;T&amp;gt; &amp;amp;&amp;amp;` [`is_nothrow_move_constructible_v`](/reference/type_traits/is_nothrow_move_constructible.md)`&amp;lt;T&amp;gt; &amp;amp;&amp;amp;` [`is_nothrow_move_assignable_v`](/reference/type_traits/is_nothrow_move_assignable.md)`&amp;lt;E&amp;gt; &amp;amp;&amp;amp;` [`is_nothrow_move_constructible_v`](/reference/type_traits/is_nothrow_move_constructible.md)`&amp;lt;E&amp;gt;`
+
+
+## delete定義される条件
+- (1) : 下記いずれか1つでも満たされないとき、コピー代入演算子はdelete定義される。
+    - [`is_copy_assignable_v`](/reference/type_traits/is_copy_assignable.md)`&amp;lt;T&amp;gt; == true`
+    - [`is_copy_constructible_v`](/reference/type_traits/is_copy_constructible.md)`&amp;lt;T&amp;gt; == true`
+    - [`is_copy_assignable_v`](/reference/type_traits/is_copy_assignable.md)`&amp;lt;E&amp;gt; == true`
+    - [`is_copy_constructible_v`](/reference/type_traits/is_copy_constructible.md)`&amp;lt;E&amp;gt; == true`
+    - `(`[`is_nothrow_move_constructible_v`](/reference/type_traits/is_nothrow_move_constructible.md)`&amp;lt;T&amp;gt; ||` [`is_nothrow_move_constructible_v`](/reference/type_traits/is_nothrow_move_constructible.md)`&amp;lt;E&amp;gt;) == true`
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;expected&amp;gt;
+#include &amp;lt;memory&amp;gt;
+#include &amp;lt;string&amp;gt;
+#include &amp;lt;tuple&amp;gt;
+#include &amp;lt;utility&amp;gt;
+
+// std::pair型から2要素std::tuple型へはコピー代入可能
+using IntPair  = std::pair&amp;lt;int, int&amp;gt;;
+using IntTuple = std::tuple&amp;lt;int, int&amp;gt;;
+
+// std::unique_ptr型からstd::shared_ptr型へはムーブ代入可能
+using UniquePtr = std::unique_ptr&amp;lt;int&amp;gt;;
+using SharedPtr = std::shared_ptr&amp;lt;int&amp;gt;;
+
+int main()
+{
+  // (1) コピー代入
+  {
+    std::expected&amp;lt;int, std::string&amp;gt; srcV = 42;
+    std::expected&amp;lt;int, std::string&amp;gt; dstV;
+    dstV = srcV;
+    assert(srcV.has_value() &amp;amp;&amp;amp; dstV.has_value());
+    assert(srcV.value() == 42 &amp;amp;&amp;amp; dstV.value() == 42);
+
+    std::expected&amp;lt;int, std::string&amp;gt; srcE = std::unexpected{&amp;#34;Oops&amp;#34;};
+    std::expected&amp;lt;int, std::string&amp;gt; dstE;
+    dstE = srcE;
+    assert(!srcE.has_value() &amp;amp;&amp;amp; !dstE.has_value());
+    assert(srcE.error() == &amp;#34;Oops&amp;#34; &amp;amp;&amp;amp; dstE.error() == &amp;#34;Oops&amp;#34;);
+  }
+
+  // (2) ムーブ代入
+  {
+    std::expected&amp;lt;std::string, int&amp;gt; srcV = &amp;#34;ok&amp;#34;;
+    std::expected&amp;lt;std::string, int&amp;gt; dstV;
+    dstV = std::move(srcV);
+    assert(srcV.has_value() &amp;amp;&amp;amp; dstV.has_value());
+    assert(dstV.value() == &amp;#34;ok&amp;#34;);
+    // srcV.value()はstd::stringムーブ後の未規定の値
+
+    std::expected&amp;lt;int, std::string&amp;gt; srcE = std::unexpected{&amp;#34;ng&amp;#34;};
+    std::expected&amp;lt;int, std::string&amp;gt; dstE;
+    dstE = std::move(srcE);
+    assert(!srcE.has_value() &amp;amp;&amp;amp; !dstE.has_value());
+    assert(dstE.error() == &amp;#34;ng&amp;#34;);
+    // srcE.error()はstd::stringムーブ後の未規定の値
+  }
+
+  // (3) 正常値の変換コピー代入
+  {
+    IntPair src = IntPair{1, 2};
+    std::expected&amp;lt;IntTuple, int&amp;gt; dst;
+    dst = src;
+    assert(dst.has_value());
+    assert((dst.value() == IntTuple{1, 2}));
+  }
+  // (3) 正常値の変換ムーブ代入
+  {
+    UniquePtr src = std::make_unique&amp;lt;int&amp;gt;(42);
+    std::expected&amp;lt;SharedPtr, int&amp;gt; dst;
+    dst = std::move(src);
+    assert(dst.has_value());
+    assert(*dst.value() == 42);
+  }
+
+  // (4) エラー値の変換コピー代入
+  {
+    std::unexpected&amp;lt;IntPair&amp;gt; src{IntPair{1, 2}};
+    std::expected&amp;lt;int, IntTuple&amp;gt; dst;
+    dst = src;
+    assert(not dst.has_value());
+    assert((dst.error() == IntTuple{1, 2}));
+  }
+
+  // (5) エラー値の変換ムーブ代入
+  {
+    std::unexpected&amp;lt;UniquePtr&amp;gt; src{std::make_unique&amp;lt;int&amp;gt;(42)};
+    std::expected&amp;lt;int, SharedPtr&amp;gt; dst;
+    dst = std::move(src);
+    assert(not dst.has_value());
+    assert(*dst.error() == 42);
+  }
+}
+```
+* has_value[link has_value.md.nolink]
+* value[link value.md.nolink]
+* error[link error.md.nolink]
+* std::unexpected[link ../unexpected.md]
+
+### 出力
+```
+```
+
+
+## バージョン
+### 言語
+- C++23
+
+### 処理系
+- [Clang](/implementation.md#clang): 16.0
+- [GCC](/implementation.md#gcc): 12.1
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
+
+
+## 参照
+- [P0323R12 std::expected](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p0323r12.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>barrier -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/barrier/barrier.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/barrier/barrier.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/barrier/barrier.md b/reference/barrier/barrier.md
index fe1ba46f2..30647f3fc 100644
--- a/reference/barrier/barrier.md
+++ b/reference/barrier/barrier.md
@@ -10,6 +10,7 @@ namespace std {
   class barrier;
 }
 ```
+* see below[italic]
 
 ## 概要
 `barrier`クラスは、複数スレッドにより並行実行される反復的なタスク制御に便利な、スレッド調整機構（同期プリミティブ）である。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>from_chars -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/charconv/from_chars.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/charconv/from_chars.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/charconv/from_chars.md b/reference/charconv/from_chars.md
index c19cbb24d..3c0106a9b 100644
--- a/reference/charconv/from_chars.md
+++ b/reference/charconv/from_chars.md
@@ -21,6 +21,8 @@ namespace std {
                                chars_format fmt = chars_format::general); // (4)
 }
 ```
+* see below[italic]
+
 
 ## 概要
 与えられたイテレータ範囲`[first, last)`内の文字列から、オーバーロードと基数・フォーマット指定によって決まるパターンにマッチングする最初の数字文字列を見つけて、数値へ変換する。  
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>to_chars -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/charconv/to_chars.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/charconv/to_chars.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/charconv/to_chars.md b/reference/charconv/to_chars.md
index 0805a8b6e..bfb3df034 100644
--- a/reference/charconv/to_chars.md
+++ b/reference/charconv/to_chars.md
@@ -35,6 +35,7 @@ namespace std {
                            chars_format fmt, int precision);             // (10)
 }
 ```
+* see below[italic]
 
 ## 概要
 与えられた数値（`value`）を文字列へ変換し、`[first, last)`内へ出力する。  
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>file_clock -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/chrono/file_clock.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/chrono/file_clock.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/file_clock.md b/reference/chrono/file_clock.md
index f008c83ca..96330e7c1 100644
--- a/reference/chrono/file_clock.md
+++ b/reference/chrono/file_clock.md
@@ -9,6 +9,7 @@ namespace std::chrono {
   using file_clock = see below;
 }
 ```
+* see below[italic]
 
 ## 概要
 `file_clock`は、ファイル時間を作るために使用されるクロックである。この時刻系は[`&amp;lt;filesystem&amp;gt;`](/reference/filesystem.md)ライブラリにおいてファイル作成日時やファイル更新日時を表現する[`file_time_type`](/reference/filesystem/file_time_type.md)のために定義される。
@@ -31,6 +32,7 @@ template&amp;lt;class Duration&amp;gt;
 static file_time&amp;lt;see below&amp;gt;
   from_sys(const sys_time&amp;lt;Duration&amp;gt;&amp;amp;);
 ```
+* see below[italic]
 * utc_clock[link utc_clock.md]
 * sys_time[link sys_time.md]
 * file_time[link file_time.md]
@@ -47,6 +49,7 @@ template&amp;lt;class Duration&amp;gt;
 static file_time&amp;lt;see below&amp;gt;
   from_utc(const utc_time&amp;lt;Duration&amp;gt;&amp;amp;);
 ```
+* see below[italic]
 * tai_clock[link tai_clock.md]
 * gps_clock[link gps_clock.md]
 * utc_time[link utc_time.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>fractional_width -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/chrono/hh_mm_ss/fractional_width.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/chrono/hh_mm_ss/fractional_width.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/hh_mm_ss/fractional_width.md b/reference/chrono/hh_mm_ss/fractional_width.md
index 148ca0dc4..666c9e996 100644
--- a/reference/chrono/hh_mm_ss/fractional_width.md
+++ b/reference/chrono/hh_mm_ss/fractional_width.md
@@ -14,6 +14,7 @@ namespace std::chrono {
   };
 }
 ```
+* see below[italic]
 
 ## 概要
 `precision`型によって表現される小数の小数桁数。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>three_way_comparable -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/compare/three_way_comparable.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/compare/three_way_comparable.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/compare/three_way_comparable.md b/reference/compare/three_way_comparable.md
index 72320ca38..2ca9e777a 100644
--- a/reference/compare/three_way_comparable.md
+++ b/reference/compare/three_way_comparable.md
@@ -6,7 +6,6 @@
 
 ```cpp
 namespace std {
-
   template&amp;lt;class T, class Cat = partial_ordering&amp;gt;
   concept three_way_comparable = /*see below*/;             // (1)
 
@@ -14,6 +13,7 @@ namespace std {
   concept three_way_comparable_with = /*see below*/;        // (2)
 }
 ```
+* see below[italic]
 
 ## 概要
 `three_way_comparable`及び`three_way_comparable_with`は、指定された型`T`もしくは`T, U`の間で`&amp;lt;=&amp;gt;`による三方比較を使用可能であり、その戻り値型が指定した[比較カテゴリ型](/reference/compare.md)`Cat`に変換可能であることを表すコンセプトである。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>boolean-testable -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/concepts/boolean-testable.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/concepts/boolean-testable.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/concepts/boolean-testable.md b/reference/concepts/boolean-testable.md
index d285fa1fa..8b8a13df7 100644
--- a/reference/concepts/boolean-testable.md
+++ b/reference/concepts/boolean-testable.md
@@ -10,6 +10,7 @@ namespace std {
   concept boolean-testable = /*see below*/; // 説明専用コンセプト
 }
 ```
+* see below[italic]
 
 ## 概要
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>default_initializable -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/concepts/default_initializable.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/concepts/default_initializable.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/concepts/default_initializable.md b/reference/concepts/default_initializable.md
index c6dec499a..f71e8f9a6 100644
--- a/reference/concepts/default_initializable.md
+++ b/reference/concepts/default_initializable.md
@@ -10,6 +10,7 @@ namespace std {
   concept default_initializable = /*see below*/;
 }
 ```
+* see below[italic]
 
 ## 概要
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>equality_comparable -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/concepts/equality_comparable.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/concepts/equality_comparable.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/concepts/equality_comparable.md b/reference/concepts/equality_comparable.md
index fa14fd6e3..86ea1439f 100644
--- a/reference/concepts/equality_comparable.md
+++ b/reference/concepts/equality_comparable.md
@@ -13,6 +13,7 @@ namespace std {
   concept equality_comparable_with = /*see below*/; // (2)
 }
 ```
+* see below[italic]
 
 ## 概要
 `equality_comparable`及び`equality_comparable_with`は、指定された型`T`もしくは`T, U`の間で`==`演算子による同値比較が可能である事を表すコンセプトである。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>same_as -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/concepts/same_as.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/concepts/same_as.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/concepts/same_as.md b/reference/concepts/same_as.md
index ed7053b3d..55847fa4f 100644
--- a/reference/concepts/same_as.md
+++ b/reference/concepts/same_as.md
@@ -10,6 +10,7 @@ namespace std {
   concept same_as = /*see below*/;
 }
 ```
+* see below[italic]
 
 ## 概要
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>format_kind -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/format/format_kind.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/format/format_kind.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/format/format_kind.md b/reference/format/format_kind.md
index 84295fbb9..95cc44973 100644
--- a/reference/format/format_kind.md
+++ b/reference/format/format_kind.md
@@ -14,6 +14,8 @@ namespace std {
   constexpr range_format format_kind&amp;lt;R&amp;gt; = see below; // (2) C++23
 }
 ```
+* unspecified[italic]
+* see below[italic]
 * range_format[link range_format.md]
 * ranges::input_range[link /reference/ranges/input_range.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>placeholders -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/functional/placeholders.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/functional/placeholders.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/functional/placeholders.md b/reference/functional/placeholders.md
index a5086d370..9f21450a9 100644
--- a/reference/functional/placeholders.md
+++ b/reference/functional/placeholders.md
@@ -13,6 +13,7 @@ namespace placeholders {
   /*see below*/ unspecified _N;
 }}
 ```
+* see below[italic]
 * unspecified[italic]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/functional/reference_wrapper/op_constructor.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/functional/reference_wrapper/op_constructor.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/functional/reference_wrapper/op_constructor.md b/reference/functional/reference_wrapper/op_constructor.md
index d11693677..7446aac1f 100644
--- a/reference/functional/reference_wrapper/op_constructor.md
+++ b/reference/functional/reference_wrapper/op_constructor.md
@@ -16,6 +16,7 @@ reference_wrapper(const reference_wrapper&amp;amp; x) noexcept;           // (2) C++11
 
 constexpr reference_wrapper(const reference_wrapper&amp;amp; x) noexcept; // (2) C++20
 ```
+* see below[italic]
 
 ## 概要
 与えられた参照で、参照オブジェクトを構築する。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>common_iterator -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/iterator/common_iterator.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/iterator/common_iterator.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/common_iterator.md b/reference/iterator/common_iterator.md
index f6d48e0d4..22eefeb3f 100644
--- a/reference/iterator/common_iterator.md
+++ b/reference/iterator/common_iterator.md
@@ -33,6 +33,7 @@ namespace std {
   };
 }
 ```
+* see below[italic]
 * input_or_output_iterator[link /reference/iterator/input_or_output_iterator.md]
 * sentinel_for[link /reference/iterator/sentinel_for.md]
 * copyable[link /reference/concepts/copyable.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator-&gt; -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/iterator/common_iterator/op_arrow.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/iterator/common_iterator/op_arrow.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/common_iterator/op_arrow.md b/reference/iterator/common_iterator/op_arrow.md
index 67ff48f3b..df4f11843 100644
--- a/reference/iterator/common_iterator/op_arrow.md
+++ b/reference/iterator/common_iterator/op_arrow.md
@@ -8,6 +8,7 @@
 ```cpp
 decltype(auto) operator-&amp;gt;() const requires /*see below*/;
 ```
+* see below[italic]
 
 ## 概要
 イテレータを間接参照する。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>indirectly_readable -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/iterator/indirectly_readable.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/iterator/indirectly_readable.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/indirectly_readable.md b/reference/iterator/indirectly_readable.md
index 6c6b6b9c6..af05d5349 100644
--- a/reference/iterator/indirectly_readable.md
+++ b/reference/iterator/indirectly_readable.md
@@ -10,6 +10,7 @@ namespace std {
   concept indirectly_readable = /*see below*/;
 }
 ```
+* see below[italic]
 
 ## 概要
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is-integer-like -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/iterator/is_integer_like.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/iterator/is_integer_like.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/is_integer_like.md b/reference/iterator/is_integer_like.md
index 69505c1dc..d4b4118b6 100644
--- a/reference/iterator/is_integer_like.md
+++ b/reference/iterator/is_integer_like.md
@@ -13,6 +13,7 @@ namespace std {
   inline constexpr bool is-signed-integer-like = /*see below*/;
 }
 ```
+* see below[italic]
 
 ## 概要
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>iter_difference_t -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/iterator/iter_difference_t.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/iterator/iter_difference_t.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/iter_difference_t.md b/reference/iterator/iter_difference_t.md
index b0610cbc5..e998057a2 100644
--- a/reference/iterator/iter_difference_t.md
+++ b/reference/iterator/iter_difference_t.md
@@ -10,6 +10,7 @@ namespace std {
   using iter_difference_t = /*see below*/;
 }
 ```
+* see below[italic]
 
 ## 概要
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>iter_value_t -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/iterator/iter_value_t.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/iterator/iter_value_t.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/iter_value_t.md b/reference/iterator/iter_value_t.md
index 49d2b47cc..7f3520a2d 100644
--- a/reference/iterator/iter_value_t.md
+++ b/reference/iterator/iter_value_t.md
@@ -10,6 +10,7 @@ namespace std {
   using iter_value_t = /*see below*/;
 }
 ```
+* see below[italic]
 
 ## 概要
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>iterator_traits -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/iterator/iterator_traits.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/iterator/iterator_traits.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/iterator_traits.md b/reference/iterator/iterator_traits.md
index 38cbf9c40..7fdad8e58 100644
--- a/reference/iterator/iterator_traits.md
+++ b/reference/iterator/iterator_traits.md
@@ -102,6 +102,7 @@ namespace std {
   using reference         = /*see below*/;
   using iterator_category = /*see below*/;
   ```
+  * see below[italic]
   * indirectly_readable_traits[link /reference/iterator/indirectly_readable_traits.md]
   * incrementable_traits[link /reference/iterator/incrementable_traits.md]
   * iter_reference_t[link /reference/iterator/iter_reference_t.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>iter_move -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/iterator/reverse_iterator/iter_move.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/iterator/reverse_iterator/iter_move.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/reverse_iterator/iter_move.md b/reference/iterator/reverse_iterator/iter_move.md
index fe97fe55c..edf61ec14 100644
--- a/reference/iterator/reverse_iterator/iter_move.md
+++ b/reference/iterator/reverse_iterator/iter_move.md
@@ -14,6 +14,7 @@ namespace std {
   };
 }
 ```
+* see below[italic]
 * reverse_iterator[link /reference/iterator/reverse_iterator.md]
 * iter_rvalue_reference_t[link /reference/iterator/iter_rvalue_reference_t.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>iter_swap -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/iterator/reverse_iterator/iter_swap.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/iterator/reverse_iterator/iter_swap.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/reverse_iterator/iter_swap.md b/reference/iterator/reverse_iterator/iter_swap.md
index 2370c2679..04653c48d 100644
--- a/reference/iterator/reverse_iterator/iter_swap.md
+++ b/reference/iterator/reverse_iterator/iter_swap.md
@@ -16,6 +16,7 @@ namespace std {
   };
 }
 ```
+* see below[italic]
 * reverse_iterator[link /reference/iterator/reverse_iterator.md]
 * indirectly_swappable[link /reference/iterator/indirectly_swappable.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>e -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/numbers/e.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/numbers/e.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/numbers/e.md b/reference/numbers/e.md
index e622ce856..b5398523d 100644
--- a/reference/numbers/e.md
+++ b/reference/numbers/e.md
@@ -16,6 +16,7 @@ namespace std::numbers {
 }
 ```
 * unspecified[italic]
+* see below[italic]
 * floating_point[link /reference/concepts/floating_point.md]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>egamma -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/numbers/egamma.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/numbers/egamma.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/numbers/egamma.md b/reference/numbers/egamma.md
index 637ee50ee..eee50656c 100644
--- a/reference/numbers/egamma.md
+++ b/reference/numbers/egamma.md
@@ -16,6 +16,7 @@ namespace std::numbers {
 }
 ```
 * unspecified[italic]
+* see below[italic]
 * floating_point[link /reference/concepts/floating_point.md]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>inv_pi -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/numbers/inv_pi.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/numbers/inv_pi.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/numbers/inv_pi.md b/reference/numbers/inv_pi.md
index deca18da9..e6a75174e 100644
--- a/reference/numbers/inv_pi.md
+++ b/reference/numbers/inv_pi.md
@@ -16,6 +16,7 @@ namespace std::numbers {
 }
 ```
 * unspecified[italic]
+* see below[italic]
 * floating_point[link /reference/concepts/floating_point.md]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>inv_sqrt3 -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/numbers/inv_sqrt3.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/numbers/inv_sqrt3.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/numbers/inv_sqrt3.md b/reference/numbers/inv_sqrt3.md
index 4edbc9404..506fc2c9e 100644
--- a/reference/numbers/inv_sqrt3.md
+++ b/reference/numbers/inv_sqrt3.md
@@ -16,6 +16,7 @@ namespace std::numbers {
 }
 ```
 * unspecified[italic]
+* see below[italic]
 * floating_point[link /reference/concepts/floating_point.md]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>inv_sqrtpi -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/numbers/inv_sqrtpi.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/numbers/inv_sqrtpi.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/numbers/inv_sqrtpi.md b/reference/numbers/inv_sqrtpi.md
index 608522cec..0d3e6f4fb 100644
--- a/reference/numbers/inv_sqrtpi.md
+++ b/reference/numbers/inv_sqrtpi.md
@@ -16,6 +16,7 @@ namespace std::numbers {
 }
 ```
 * unspecified[italic]
+* see below[italic]
 * floating_point[link /reference/concepts/floating_point.md]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ln10 -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/numbers/ln10.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/numbers/ln10.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/numbers/ln10.md b/reference/numbers/ln10.md
index eedebb9ec..36400c4ac 100644
--- a/reference/numbers/ln10.md
+++ b/reference/numbers/ln10.md
@@ -16,6 +16,7 @@ namespace std::numbers {
 }
 ```
 * unspecified[italic]
+* see below[italic]
 * floating_point[link /reference/concepts/floating_point.md]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ln2 -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/numbers/ln2.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/numbers/ln2.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/numbers/ln2.md b/reference/numbers/ln2.md
index 2f7d3aedd..d7d8a77e2 100644
--- a/reference/numbers/ln2.md
+++ b/reference/numbers/ln2.md
@@ -16,6 +16,7 @@ namespace std::numbers {
 }
 ```
 * unspecified[italic]
+* see below[italic]
 * floating_point[link /reference/concepts/floating_point.md]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>log10e -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/numbers/log10e.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/numbers/log10e.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/numbers/log10e.md b/reference/numbers/log10e.md
index 52b94f1d4..0269f89dd 100644
--- a/reference/numbers/log10e.md
+++ b/reference/numbers/log10e.md
@@ -16,6 +16,7 @@ namespace std::numbers {
 }
 ```
 * unspecified[italic]
+* see below[italic]
 * floating_point[link /reference/concepts/floating_point.md]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>log2e -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/numbers/log2e.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/numbers/log2e.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/numbers/log2e.md b/reference/numbers/log2e.md
index 2de00153c..6b225a932 100644
--- a/reference/numbers/log2e.md
+++ b/reference/numbers/log2e.md
@@ -16,6 +16,7 @@ namespace std::numbers {
 }
 ```
 * unspecified[italic]
+* see below[italic]
 * floating_point[link /reference/concepts/floating_point.md]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>phi -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/numbers/phi.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/numbers/phi.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/numbers/phi.md b/reference/numbers/phi.md
index b9c34a54d..daa102b4f 100644
--- a/reference/numbers/phi.md
+++ b/reference/numbers/phi.md
@@ -16,6 +16,7 @@ namespace std::numbers {
 }
 ```
 * unspecified[italic]
+* see below[italic]
 * floating_point[link /reference/concepts/floating_point.md]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>pi -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/numbers/pi.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/numbers/pi.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/numbers/pi.md b/reference/numbers/pi.md
index b7f713622..240c6e118 100644
--- a/reference/numbers/pi.md
+++ b/reference/numbers/pi.md
@@ -16,6 +16,7 @@ namespace std::numbers {
 }
 ```
 * unspecified[italic]
+* see below[italic]
 * floating_point[link /reference/concepts/floating_point.md]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sqrt2 -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/numbers/sqrt2.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/numbers/sqrt2.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/numbers/sqrt2.md b/reference/numbers/sqrt2.md
index cdd55ca99..778b2b0de 100644
--- a/reference/numbers/sqrt2.md
+++ b/reference/numbers/sqrt2.md
@@ -16,6 +16,7 @@ namespace std::numbers {
 }
 ```
 * unspecified[italic]
+* see below[italic]
 * floating_point[link /reference/concepts/floating_point.md]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sqrt3 -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/numbers/sqrt3.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/numbers/sqrt3.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/numbers/sqrt3.md b/reference/numbers/sqrt3.md
index 71de3ecfb..2e99f6c11 100644
--- a/reference/numbers/sqrt3.md
+++ b/reference/numbers/sqrt3.md
@@ -16,6 +16,7 @@ namespace std::numbers {
 }
 ```
 * unspecified[italic]
+* see below[italic]
 * floating_point[link /reference/concepts/floating_point.md]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>make_optional -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/optional/make_optional.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/optional/make_optional.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/optional/make_optional.md b/reference/optional/make_optional.md
index 08818bfbc..ed9cf25b7 100644
--- a/reference/optional/make_optional.md
+++ b/reference/optional/make_optional.md
@@ -18,6 +18,7 @@ namespace std {
                             Args&amp;amp;&amp;amp;... args);             // (3)
 }
 ```
+* see below[italic]
 
 ## 概要
 有効な値を保持する`optional`オブジェクトを構築する。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator= -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/optional/optional/op_assign.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/optional/optional/op_assign.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/optional/optional/op_assign.md b/reference/optional/optional/op_assign.md
index 9ef8badaf..35b915676 100644
--- a/reference/optional/optional/op_assign.md
+++ b/reference/optional/optional/op_assign.md
@@ -21,6 +21,7 @@ optional&amp;amp; operator=(const optional&amp;lt;U&amp;gt;&amp;amp; rhs);             // (5)
 template &amp;lt;class U&amp;gt;
 optional&amp;amp; operator=(optional&amp;lt;U&amp;gt;&amp;amp;&amp;amp; rhs);                  // (6)
 ```
+* see below[italic]
 * nullopt_t[link /reference/optional/nullopt_t.md]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>swap -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/optional/optional/swap.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/optional/optional/swap.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/optional/optional/swap.md b/reference/optional/optional/swap.md
index 9efc8c972..ccf0d05a0 100644
--- a/reference/optional/optional/swap.md
+++ b/reference/optional/optional/swap.md
@@ -8,6 +8,7 @@
 ```cpp
 void swap(optional&amp;amp; rhs) noexcept(see below);
 ```
+* see below[italic]
 
 ## 概要
 他の`optional`オブジェクトとデータを入れ替える。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>enable_view -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/ranges/enable_view.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/ranges/enable_view.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/enable_view.md b/reference/ranges/enable_view.md
index db48f1175..4f9948c94 100644
--- a/reference/ranges/enable_view.md
+++ b/reference/ranges/enable_view.md
@@ -29,6 +29,7 @@ namespace std::ranges {
   inline constexpr bool is-derived-from-view-interface = see below; // 説明専用
 }
 ```
+* see below[italic]
 
 `is-derived-from-view-interface&amp;lt;T&amp;gt;`は、`T`がある型`U`についてただ一つだけ`view_interface&amp;lt;U&amp;gt;`を`public`な基底クラスに持ち、他の型`V`についての`view_interface&amp;lt;V&amp;gt;`を基底クラスに持たない場合に`true`となる。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>subspan -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/span/span/subspan.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/span/span/subspan.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/span/span/subspan.md b/reference/span/span/subspan.md
index 784ecc1be..063cc688b 100644
--- a/reference/span/span/subspan.md
+++ b/reference/span/span/subspan.md
@@ -13,6 +13,7 @@ constexpr span&amp;lt;element_type, see below&amp;gt;
 constexpr span&amp;lt;element_type, dynamic_extent&amp;gt;
   subspan(size_type offset, size_type count = dynamic_extent) const; // (2)
 ```
+* see below[italic]
 * dynamic_extent[link /reference/span/dynamic_extent.md]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;=&gt; -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/string/basic_string/op_compare_3way.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/string/basic_string/op_compare_3way.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string/basic_string/op_compare_3way.md b/reference/string/basic_string/op_compare_3way.md
index 59450a1dd..127947a6d 100644
--- a/reference/string/basic_string/op_compare_3way.md
+++ b/reference/string/basic_string/op_compare_3way.md
@@ -17,6 +17,7 @@ namespace std {
               const charT* rhs);                                           // (2) C++20
 }
 ```
+* see below[italic]
 
 ## 概要
 `basic_string`オブジェクトの三方比較を行う。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>推論補助 -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/string/basic_string/op_deduction_guide.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/string/basic_string/op_deduction_guide.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string/basic_string/op_deduction_guide.md b/reference/string/basic_string/op_deduction_guide.md
index 496f9d5d0..65e7d0bee 100644
--- a/reference/string/basic_string/op_deduction_guide.md
+++ b/reference/string/basic_string/op_deduction_guide.md
@@ -29,6 +29,7 @@ namespace std {
     -&amp;gt; basic_string&amp;lt;CharT, Traits, Allocator&amp;gt;;  // (3) C++20
 }
 ```
+* see below[italic]
 * allocator[link /reference/memory/allocator.md]
 * iterator_traits[link /reference/iterator/iterator_traits.md]
 * char_traits[link /reference/string/char_traits.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;=&gt; -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/string_view/basic_string_view/op_compare_3way.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/string_view/basic_string_view/op_compare_3way.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string_view/basic_string_view/op_compare_3way.md b/reference/string_view/basic_string_view/op_compare_3way.md
index 481609366..d885c78d8 100644
--- a/reference/string_view/basic_string_view/op_compare_3way.md
+++ b/reference/string_view/basic_string_view/op_compare_3way.md
@@ -12,6 +12,7 @@ namespace std {
               basic_string_view&amp;lt;charT, traits&amp;gt; y) noexcept; // (1) C++20
 }
 ```
+* see below[italic]
 
 ## 概要
 `basic_string_view`オブジェクトの三方比較を行う。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>apply -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/tuple/apply.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/tuple/apply.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/tuple/apply.md b/reference/tuple/apply.md
index ff0343f51..3b00168b8 100644
--- a/reference/tuple/apply.md
+++ b/reference/tuple/apply.md
@@ -15,6 +15,7 @@ namespace std {
     apply(F&amp;amp;&amp;amp; f, Tuple&amp;amp;&amp;amp; t) noexcept(see below); // (1) C++23
 }
 ```
+* see below[italic]
 
 ## 概要
 タプルを展開し、関数の引数に適用してその関数を実行する。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator= -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/tuple/tuple/op_assign.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/tuple/tuple/op_assign.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/tuple/tuple/op_assign.md b/reference/tuple/tuple/op_assign.md
index 67d7e98bf..6a594bb1e 100644
--- a/reference/tuple/tuple/op_assign.md
+++ b/reference/tuple/tuple/op_assign.md
@@ -32,6 +32,7 @@ tuple&amp;amp; operator=(pair&amp;lt;U1, U2&amp;gt;&amp;amp;&amp;amp;);                        // (6) C++11
 template &amp;lt;class U1, class U2&amp;gt;
 constexpr tuple&amp;amp; operator=(pair&amp;lt;U1, U2&amp;gt;&amp;amp;&amp;amp;);              // (6) C++20
 ```
+* see below[italic]
 * pair[link /reference/utility/pair.md]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>swap -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/tuple/tuple/swap.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/tuple/tuple/swap.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/tuple/tuple/swap.md b/reference/tuple/tuple/swap.md
index 603a8dfa8..4467d18b2 100644
--- a/reference/tuple/tuple/swap.md
+++ b/reference/tuple/tuple/swap.md
@@ -9,6 +9,7 @@
 void swap(tuple&amp;amp; rhs) noexcept(see below);           // (1) C++11
 constexpr void swap(tuple&amp;amp; rhs) noexcept(see below); // (1) C++20
 ```
+* see below[italic]
 
 ## 概要
 他の`tuple`オブジェクトと中身を入れ替える。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>推論補助 -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/unordered_map/unordered_map/op_deduction_guide.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/unordered_map/unordered_map/op_deduction_guide.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_map/unordered_map/op_deduction_guide.md b/reference/unordered_map/unordered_map/op_deduction_guide.md
index 68beb2cbc..5378eadba 100644
--- a/reference/unordered_map/unordered_map/op_deduction_guide.md
+++ b/reference/unordered_map/unordered_map/op_deduction_guide.md
@@ -77,6 +77,7 @@ namespace std {
                      equal_to&amp;lt;Key&amp;gt;, Allocator&amp;gt;;      // (8)
 }
 ```
+* see below[italic]
 * remove_const_t[link /reference/type_traits/remove_const.md]
 * add_const_t[link /reference/type_traits/add_const.md]
 * pair[link /reference/utility/pair.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>推論補助 -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/unordered_map/unordered_multimap/op_deduction_guide.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/unordered_map/unordered_multimap/op_deduction_guide.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_map/unordered_multimap/op_deduction_guide.md b/reference/unordered_map/unordered_multimap/op_deduction_guide.md
index 654e9c6e8..3091f49eb 100644
--- a/reference/unordered_map/unordered_multimap/op_deduction_guide.md
+++ b/reference/unordered_map/unordered_multimap/op_deduction_guide.md
@@ -77,6 +77,7 @@ namespace std {
                           equal_to&amp;lt;Key&amp;gt;, Allocator&amp;gt;;      // (8)
 }
 ```
+* see below[italic]
 * remove_const_t[link /reference/type_traits/remove_const.md]
 * add_const_t[link /reference/type_traits/add_const.md]
 * pair[link /reference/utility/pair.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>推論補助 -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/unordered_set/unordered_multiset/op_deduction_guide.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/unordered_set/unordered_multiset/op_deduction_guide.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_set/unordered_multiset/op_deduction_guide.md b/reference/unordered_set/unordered_multiset/op_deduction_guide.md
index f4a4d9d29..d572ad857 100644
--- a/reference/unordered_set/unordered_multiset/op_deduction_guide.md
+++ b/reference/unordered_set/unordered_multiset/op_deduction_guide.md
@@ -48,6 +48,7 @@ namespace std {
                           equal_to&amp;lt;T&amp;gt;, Allocator&amp;gt;;   // (6)
 }
 ```
+* see below[italic]
 * hash[link /reference/functional/hash.md]
 * equal_to[link /reference/functional/equal_to.md]
 * iterator_traits[link /reference/iterator/iterator_traits.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>推論補助 -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/unordered_set/unordered_set/op_deduction_guide.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/unordered_set/unordered_set/op_deduction_guide.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_set/unordered_set/op_deduction_guide.md b/reference/unordered_set/unordered_set/op_deduction_guide.md
index e2eb9c9a7..d94582324 100644
--- a/reference/unordered_set/unordered_set/op_deduction_guide.md
+++ b/reference/unordered_set/unordered_set/op_deduction_guide.md
@@ -44,6 +44,7 @@ namespace std {
     -&amp;gt; unordered_set&amp;lt;T, Hash, equal_to&amp;lt;T&amp;gt;, Allocator&amp;gt;;    // (6)
 }
 ```
+* see below[italic]
 * hash[link /reference/functional/hash.md]
 * equal_to[link /reference/functional/equal_to.md]
 * iterator_traits[link /reference/iterator/iterator_traits.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>exchange -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/utility/exchange.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/utility/exchange.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/utility/exchange.md b/reference/utility/exchange.md
index 9c103e5ed..5f14d9212 100644
--- a/reference/utility/exchange.md
+++ b/reference/utility/exchange.md
@@ -17,6 +17,7 @@ namespace std {
     noexcept(see below);                     // (1) C++23
 }
 ```
+* see below[italic]
 
 ## 概要
 値を書き換え、書き換え前の値を返す。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>swap -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/utility/pair/swap.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/utility/pair/swap.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/utility/pair/swap.md b/reference/utility/pair/swap.md
index a55d13975..403b9a8ae 100644
--- a/reference/utility/pair/swap.md
+++ b/reference/utility/pair/swap.md
@@ -9,6 +9,7 @@
 void swap(pair&amp;amp; p) noexcept(see below);           // (1) C++11
 constexpr void swap(pair&amp;amp; p) noexcept(see below); // (1) C++20
 ```
+* see below[italic]
 
 ## 概要
 他の`pair`オブジェクトと値を入れ替える
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator= -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/variant/variant/op_assign.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/variant/variant/op_assign.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/variant/variant/op_assign.md b/reference/variant/variant/op_assign.md
index 24293b012..21d1c4a92 100644
--- a/reference/variant/variant/op_assign.md
+++ b/reference/variant/variant/op_assign.md
@@ -14,6 +14,7 @@ variant&amp;amp; operator=(T&amp;amp;&amp;amp; rhs) noexcept(see below);               // (3) C++17
 template &amp;lt;class T&amp;gt;
 constexpr variant&amp;amp; operator=(T&amp;amp;&amp;amp; rhs) noexcept(see below);     // (3) C++23
 ```
+* see below[italic]
 
 ## 概要
 `variant`オブジェクトもしくは候補型の値を代入する。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/variant/variant/op_constructor.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/variant/variant/op_constructor.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/variant/variant/op_constructor.md b/reference/variant/variant/op_constructor.md
index 38d1724d0..fdfaca3ed 100644
--- a/reference/variant/variant/op_constructor.md
+++ b/reference/variant/variant/op_constructor.md
@@ -31,6 +31,7 @@ constexpr explicit variant(in_place_index_t&amp;lt;I&amp;gt;,
                            initializer_list&amp;lt;U&amp;gt; il,
                            Args&amp;amp;&amp;amp;... args);              // (8)
 ```
+* see below[italic]
 * size_t[link /reference/cstddef/size_t.md]
 * initializer_list[link /reference/initializer_list/initializer_list.md]
 * in_place_type_t[link /reference/utility/in_place_type_t.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>swap -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/variant/variant/swap.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/variant/variant/swap.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/variant/variant/swap.md b/reference/variant/variant/swap.md
index a905630c2..8785fd27b 100644
--- a/reference/variant/variant/swap.md
+++ b/reference/variant/variant/swap.md
@@ -9,6 +9,7 @@
 void swap(variant&amp;amp; rhs) noexcept(see below);            // C++17
 constexpr void swap(variant&amp;amp; rhs) noexcept(see below);  // C++23
 ```
+* see below[italic]
 
 ## 概要
 他の`variant`オブジェクトとデータを入れ替える。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>swap (非メンバ関数) -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/variant/variant/swap_free.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/variant/variant/swap_free.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/variant/variant/swap_free.md b/reference/variant/variant/swap_free.md
index a1961ca33..b74fa172d 100644
--- a/reference/variant/variant/swap_free.md
+++ b/reference/variant/variant/swap_free.md
@@ -12,6 +12,7 @@ namespace std {
   constexpr void swap(variant&amp;lt;Types...&amp;gt;&amp;amp; x, variant&amp;lt;Types...&amp;gt;&amp;amp; y) noexcept(see below);  // C++23
 }
 ```
+* see below[italic]
 
 ## 概要
 同じ候補型をもつ2つの`variant`オブジェクトを入れ替える。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>visit -- &#34;see below&#34;をitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/variant/visit.html"/>
      <id>915fa727b6a2153ffa8550c38785a9a4d38b7cfb:reference/variant/visit.md</id>
      <updated>2023-01-28T23:55:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/variant/visit.md b/reference/variant/visit.md
index ec41cb7f9..9e033a950 100644
--- a/reference/variant/visit.md
+++ b/reference/variant/visit.md
@@ -13,6 +13,7 @@ namespace std {
   constexpr R visit(Visitor&amp;amp;&amp;amp; vis, Variants&amp;amp;&amp;amp;... vars);         // (2) C++20
 }
 ```
+* see below[italic]
 
 ## 概要
 `variant`オブジェクトが現在保持している型に対応する関数を呼び出す。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- 説明用のEXPLICITをitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/optional/optional/op_constructor.html"/>
      <id>8094e1678b049e67ca0cc2d670aeac109dae4507:reference/optional/optional/op_constructor.md</id>
      <updated>2023-01-28T23:52:28+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/optional/optional/op_constructor.md b/reference/optional/optional/op_constructor.md
index d584fdc65..13af1f564 100644
--- a/reference/optional/optional/op_constructor.md
+++ b/reference/optional/optional/op_constructor.md
@@ -35,6 +35,8 @@ EXPLICIT optional(optional&amp;lt;U&amp;gt;&amp;amp;&amp;amp; rhs);                    // (9) C++17
 template &amp;lt;class U&amp;gt;
 explicit(see below) optional(optional&amp;lt;U&amp;gt;&amp;amp;&amp;amp; rhs);         // (9) C++20
 ```
+* see below[italic]
+* EXPLICIT[italic]
 * nullopt_t[link /reference/optional/nullopt_t.md]
 * in_place_t[link /reference/utility/in_place_t.md]
 * initializer_list[link /reference/initializer_list/initializer_list.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- 説明用のEXPLICITをitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/tuple/tuple/op_constructor.html"/>
      <id>8094e1678b049e67ca0cc2d670aeac109dae4507:reference/tuple/tuple/op_constructor.md</id>
      <updated>2023-01-28T23:52:28+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/tuple/tuple/op_constructor.md b/reference/tuple/tuple/op_constructor.md
index 9b61141ec..6198cf8a9 100644
--- a/reference/tuple/tuple/op_constructor.md
+++ b/reference/tuple/tuple/op_constructor.md
@@ -170,6 +170,8 @@ explicit(see below) constexpr
         const Alloc&amp;amp; a,
         pair&amp;lt;U1, U2&amp;gt;&amp;amp;&amp;amp;);                                  // (18) C++20
 ```
+* see below[italic]
+* EXPLICIT[italic]
 * pair[link /reference/utility/pair.md]
 * allocator_arg_t[link /reference/memory/allocator_arg_t.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- 説明用のEXPLICITをitalic表記</title>
      <link href="https://cpprefjp.github.io/reference/utility/pair/op_constructor.html"/>
      <id>8094e1678b049e67ca0cc2d670aeac109dae4507:reference/utility/pair/op_constructor.md</id>
      <updated>2023-01-28T23:52:28+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/utility/pair/op_constructor.md b/reference/utility/pair/op_constructor.md
index 72d83c383..66369277a 100644
--- a/reference/utility/pair/op_constructor.md
+++ b/reference/utility/pair/op_constructor.md
@@ -57,6 +57,7 @@ constexpr pair(piecewise_construct_t,
                tuple&amp;lt;Args1...&amp;gt; first_args,
                tuple&amp;lt;Args2...&amp;gt; second_args);                  // (8) C++20
 ```
+* EXPLICIT[italic]
 * piecewise_construct_t[link /reference/utility/piecewise_construct_t.md]
 * tuple[link /reference/tuple/tuple.md]
 * see below[italic]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>or_else -- optional.or_else: リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/optional/optional/or_else.html"/>
      <id>3e0c51d0d2f8c8607a57857902cd902236d01912:reference/optional/optional/or_else.md</id>
      <updated>2023-01-28T23:11:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/optional/optional/or_else.md b/reference/optional/optional/or_else.md
index 78af379f9..c046cd45c 100644
--- a/reference/optional/optional/or_else.md
+++ b/reference/optional/optional/or_else.md
@@ -127,9 +127,9 @@ int main()
 ```
 * or_else[color ff0000]
 * std::nullopt[link ../nullopt_t.md]
-* std::string_view[link ../string_view/basic_string_view.md]
-* std::from_chars[link ../charconv/from_chars.md]
-* std::errc[link ../system_error/errc.md]
+* std::string_view[link ../../string_view/basic_string_view.md]
+* std::from_chars[link ../../charconv/from_chars.md]
+* std::errc[link ../../system_error/errc.md]
 
 
 #### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>acd1034</name>
        <email>48613285+acd1034@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>or_else -- optional.or_else: メソッドチェインとしての使い方を追加</title>
      <link href="https://cpprefjp.github.io/reference/optional/optional/or_else.html"/>
      <id>fb277307e6e97f3406fcdfcc957b6c77cb11fb45:reference/optional/optional/or_else.md</id>
      <updated>2023-01-28T23:09:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/optional/optional/or_else.md b/reference/optional/optional/or_else.md
index b9d10ea86..78af379f9 100644
--- a/reference/optional/optional/or_else.md
+++ b/reference/optional/optional/or_else.md
@@ -63,6 +63,7 @@ class optional {
 
 
 ## 例
+### 基本的な使い方
 ```cpp example
 #include &amp;lt;cassert&amp;gt;
 #include &amp;lt;optional&amp;gt;
@@ -86,10 +87,54 @@ int main()
 * value()[link value.md]
 
 
-### 出力
+#### 出力
 ```
 ```
 
+### メソッドチェインとしての使い方
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;charconv&amp;gt;
+#include &amp;lt;optional&amp;gt;
+#include &amp;lt;string_view&amp;gt;
+
+std::optional&amp;lt;int&amp;gt; parse(std::string_view sv, int base, std::string_view prefix = &amp;#34;&amp;#34;)
+{
+  if (!prefix.empty() &amp;amp;&amp;amp; !sv.starts_with(prefix))
+    return std::nullopt;
+  int n{};
+  auto [ptr, ec] = std::from_chars(sv.data() + prefix.size(), sv.data() + sv.size(), n, base);
+  if (ec == std::errc{} &amp;amp;&amp;amp; ptr == sv.data() + sv.size())
+    return n;
+  else
+    return std::nullopt;
+}
+
+std::optional&amp;lt;int&amp;gt; parse_digit(std::string_view sv)
+{
+  return parse(sv, 2, &amp;#34;0b&amp;#34;)
+    .or_else([sv] { return parse(sv, 10); })
+    .or_else([sv] { return parse(sv, 16, &amp;#34;0x&amp;#34;); });
+}
+
+int main()
+{
+  assert(parse_digit(&amp;#34;0b11&amp;#34;) == std::optional(3));
+  assert(parse_digit(&amp;#34;11&amp;#34;) == std::optional(11));
+  assert(parse_digit(&amp;#34;0x11&amp;#34;) == std::optional(17));
+  assert(parse_digit(&amp;#34;x&amp;#34;) == std::nullopt);
+}
+```
+* or_else[color ff0000]
+* std::nullopt[link ../nullopt_t.md]
+* std::string_view[link ../string_view/basic_string_view.md]
+* std::from_chars[link ../charconv/from_chars.md]
+* std::errc[link ../system_error/errc.md]
+
+
+#### 出力
+```
+```
 
 ## バージョン
 ### 言語
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>acd1034</name>
        <email>48613285+acd1034@users.noreply.github.com</email>
      </author>
    </entry>
  
</feed>
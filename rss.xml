<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2020-11-11T01:51:02.471803</updated>
  <id>b803d8c0-b46c-4b51-bdc6-4fae0b6c17e1</id>

  
    <entry>
      <title>reverse_iterator -- 言葉と表示の調整</title>
      <link href="https://cpprefjp.github.io/reference/iterator/reverse_iterator.html"/>
      <id>204e5c6fc27760a86f07bdd1f18178aa33636288:reference/iterator/reverse_iterator.md</id>
      <updated>2020-11-11T10:46:11+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/reverse_iterator.md b/reference/iterator/reverse_iterator.md
index 9eda3697d..2a6c24ce1 100644
--- a/reference/iterator/reverse_iterator.md
+++ b/reference/iterator/reverse_iterator.md
@@ -85,7 +85,7 @@ namespace std {
 | `pointer` | `Iterator` | |
 | `value_type` | [`iter_value_t`](/reference/iterator/iter_value_t.md)`&amp;lt;Iterator&amp;gt;` | C++20 |
 | `iterator_category` | [`iterator_traits`](/reference/iterator/iterator_traits.md)`&amp;lt;Iterator&amp;gt;::iterator_category` &amp;lt;br/&amp;gt; ただし、[`contiguous_iterator_tag`](/reference/iterator/iterator_tag.md)となるときは`random_access_iterator_tag` | C++20 |
-| `iterator_concept` | [`bidirectional_iterator_tag`](/reference/iterator/iterator_tag.md) &amp;lt;br/&amp;gt; ただし、`Iterator`が[`random_access_iterator`](/reference/iterator/random_access_iterator.md)のモデルとなる場合は[`random_access_iterator_tag`](/reference/iterator/iterator_tag.md)  | C++20 |
+| `iterator_concept` | [`bidirectional_iterator_tag`](/reference/iterator/iterator_tag.md) &amp;lt;br/&amp;gt; ただし、`Iterator`が[`random_access_iterator`](/reference/iterator/random_access_iterator.md)のモデルとなるときは[`random_access_iterator_tag`](/reference/iterator/iterator_tag.md)  | C++20 |
 | `reference` | [`iter_reference_t`](/reference/iterator/iter_reference_t.md)`&amp;lt;Iterator&amp;gt;`  | C++20 |
 
 ## 非メンバ関数
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator-&gt; -- 言葉と表示の調整</title>
      <link href="https://cpprefjp.github.io/reference/iterator/reverse_iterator/op_arrow.html"/>
      <id>204e5c6fc27760a86f07bdd1f18178aa33636288:reference/iterator/reverse_iterator/op_arrow.md</id>
      <updated>2020-11-11T10:46:11+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/reverse_iterator/op_arrow.md b/reference/iterator/reverse_iterator/op_arrow.md
index f6580be5c..56327e2a7 100644
--- a/reference/iterator/reverse_iterator/op_arrow.md
+++ b/reference/iterator/reverse_iterator/op_arrow.md
@@ -21,8 +21,17 @@ constexpr pointer operator-&amp;gt;() const  // C++20
 - C++03 : `&amp;amp;(operator*())`
 - C++14 : [`addressof`](/reference/memory/addressof.md)`(operator*())`
 - C++20 : 次のいずれか
-    - `Iterator`がポインタ型である場合 : `return `[` prev`](/reference/iterator/prev.md)`(current);`
-    - それ以外の場合 : `return `[` prev`](/reference/iterator/prev.md)`(current).operator-&amp;gt;();`
+    - `Iterator`がポインタ型である場合
+      ```cpp
+      return prev(current);
+      ```
+      * prev[link /reference/iterator/prev.md]
+
+    - それ以外の場合
+      ```cpp
+      return prev(current).operator-&amp;gt;();;
+      ```
+      * prev[link /reference/iterator/prev.md]
 
 ## 例
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>move_iterator -- reverse_iterator : C++20対応 #712</title>
      <link href="https://cpprefjp.github.io/reference/iterator/move_iterator.html"/>
      <id>712aa954da8a3f62e3b3e390881f7b41723a12fb:reference/iterator/move_iterator.md</id>
      <updated>2020-11-11T10:36:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/move_iterator.md b/reference/iterator/move_iterator.md
index 53b595753..dc17f305e 100644
--- a/reference/iterator/move_iterator.md
+++ b/reference/iterator/move_iterator.md
@@ -74,6 +74,7 @@ namespace std {
 | [`operator&amp;lt;=`](move_iterator/op_less_equal.md)    | 左辺が右辺以下かの判定を行う | C++11 |
 | [`operator&amp;gt;`](move_iterator/op_greater.md)        | 左辺が右辺より大きいかの判定を行う | C++11 |
 | [`operator&amp;gt;=`](move_iterator/op_greater_equal.md) | 左辺が右辺以上かの判定を行う | C++11 |
+| [`operator&amp;lt;=&amp;gt;`](move_iterator/op_compare_3way.md.nolink)           | 三方比較を行う | C++20 |
 | [`operator-`](move_iterator/op_minus.md)          | 2つの`move_iterator`の差を求める | C++11 |
 | [`operator+`](move_iterator/op_plus.md)           | イテレータを進める | C++11 |
 | [`make_move_iterator`](make_move_iterator.md)     | `move_iterator`のヘルパ関数 | C++11 |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>reverse_iterator -- reverse_iterator : C++20対応 #712</title>
      <link href="https://cpprefjp.github.io/reference/iterator/reverse_iterator.html"/>
      <id>712aa954da8a3f62e3b3e390881f7b41723a12fb:reference/iterator/reverse_iterator.md</id>
      <updated>2020-11-11T10:36:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/reverse_iterator.md b/reference/iterator/reverse_iterator.md
index 77d6a3492..9eda3697d 100644
--- a/reference/iterator/reverse_iterator.md
+++ b/reference/iterator/reverse_iterator.md
@@ -12,10 +12,18 @@ namespace std {
                       typename iterator_traits&amp;lt;Iterator&amp;gt;::difference_type,
                       typename iterator_traits&amp;lt;Iterator&amp;gt;::pointer,
                       typename iterator_traits&amp;lt;Iterator&amp;gt;::reference&amp;gt;;
+
+  // 距離を求められないイテレータペアについて、sized_sentinel_forを無効化する（C++20）
+  template&amp;lt;class Iterator1, class Iterator2&amp;gt;
+    requires (!sized_sentinel_for&amp;lt;Iterator1, Iterator2&amp;gt;)
+  inline constexpr bool disable_sized_sentinel_for&amp;lt;reverse_iterator&amp;lt;Iterator1&amp;gt;,
+                                                   reverse_iterator&amp;lt;Iterator2&amp;gt;&amp;gt; = true;
 }
 ```
 * iterator[link /reference/iterator/iterator.md]
 * iterator_traits[link /reference/iterator/iterator_traits.md]
+* sized_sentinel_for[link /reference/iterator/sized_sentinel_for.md]
+* disable_sized_sentinel_for[link /reference/iterator/disable_sized_sentinel_for.md]
 
 ## 概要
 `reverse_iterator`は、イテレータを、逆方向に進むイテレータとしてラップするイテレータアダプタである。
@@ -24,7 +32,9 @@ namespace std {
 
 
 ## 要件
-テンプレートパラメータ`Iterator`は、双方向イテレータの要件を満たすこと。ランダムアクセスイテレータであることを必要とする横断操作を使用する場合は、ランダムアクセスイテレータの要件を満たすこと。
+
+- C++17まで : テンプレートパラメータ`Iterator`は、双方向イテレータの要件を満たすこと。ランダムアクセスイテレータであることを必要とする横断操作を使用する場合は、ランダムアクセスイテレータの要件を満たすこと。
+- C++20 : テンプレートパラメータ`Iterator`は、[`bidirectional_iterator`](/reference/iterator/bidirectional_iterator.md)のモデルとなること。ランダムアクセスイテレータであることを必要とする横断操作を使用する場合は、[`random_access_iterator`](/reference/iterator/random_access_iterator.md)のモデルとなること。
 
 
 ## メンバ関数
@@ -55,6 +65,8 @@ namespace std {
 
 ## メンバ型
 
+### C++17まで
+
 | 名前 | 説明 | 対応バージョン |
 |-----------------------------------------|----------------------------------------|-------|
 | `iterator_type` | `Iterator` | |
@@ -64,6 +76,17 @@ namespace std {
 | `iterator_category` | [`iterator_traits`](/reference/iterator/iterator_traits.md)`&amp;lt;Iterator&amp;gt;::iterator_category` | |
 | `reference` | [`iterator_traits`](/reference/iterator/iterator_traits.md)`&amp;lt;Iterator&amp;gt;::reference` | |
 
+### C++20
+
+| 名前 | 説明 | 対応バージョン |
+|------------------------------------------------------|-------------|-------|
+| `iterator_type` | `Iterator` | |
+| `difference_type` | [`iter_difference_t`](/reference/iterator/iter_difference_t.md)`&amp;lt;Iterator&amp;gt;` | C++20 |
+| `pointer` | `Iterator` | |
+| `value_type` | [`iter_value_t`](/reference/iterator/iter_value_t.md)`&amp;lt;Iterator&amp;gt;` | C++20 |
+| `iterator_category` | [`iterator_traits`](/reference/iterator/iterator_traits.md)`&amp;lt;Iterator&amp;gt;::iterator_category` &amp;lt;br/&amp;gt; ただし、[`contiguous_iterator_tag`](/reference/iterator/iterator_tag.md)となるときは`random_access_iterator_tag` | C++20 |
+| `iterator_concept` | [`bidirectional_iterator_tag`](/reference/iterator/iterator_tag.md) &amp;lt;br/&amp;gt; ただし、`Iterator`が[`random_access_iterator`](/reference/iterator/random_access_iterator.md)のモデルとなる場合は[`random_access_iterator_tag`](/reference/iterator/iterator_tag.md)  | C++20 |
+| `reference` | [`iter_reference_t`](/reference/iterator/iter_reference_t.md)`&amp;lt;Iterator&amp;gt;`  | C++20 |
 
 ## 非メンバ関数
 
@@ -75,8 +98,11 @@ namespace std {
 | [`operator&amp;lt;=`](reverse_iterator/op_less_equal.md) | 左辺が右辺以下かの判定を行う | |
 | [`operator&amp;gt;`](reverse_iterator/op_greater.md) | 左辺が右辺より大きいかの判定を行う | |
 | [`operator&amp;gt;=`](reverse_iterator/op_greater_equal.md) | 左辺が右辺以上かの判定を行う | |
+| [`operator&amp;lt;=&amp;gt;`](reverse_iterator/op_compare_3way.md.nolink)           | 三方比較を行う | C++20 |
 | [`operator-`](reverse_iterator/op_minus.md) | 2つの`reverse_iterator`の差を求める | |
 | [`operator+`](reverse_iterator/op_plus.md) | イテレータを進める | |
+| [`iter_move`](reverse_iterator/iter_move.md.nolink)     | イテレータの要素の移動 | C++20 |
+| [`iter_swap`](reverse_iterator/iter_swap.md.nolink)     | イテレータの要素の交換 | C++20 |
 
 ### ヘルパ関数
 
@@ -118,4 +144,4 @@ int main()
 
 ### 参照
 
-
+- [P0896R4 The One Ranges Proposal (was Merging the Ranges TS)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0896r4.pdf)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator-&gt; -- reverse_iterator : C++20対応 #712</title>
      <link href="https://cpprefjp.github.io/reference/iterator/reverse_iterator/op_arrow.html"/>
      <id>712aa954da8a3f62e3b3e390881f7b41723a12fb:reference/iterator/reverse_iterator/op_arrow.md</id>
      <updated>2020-11-11T10:36:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/reverse_iterator/op_arrow.md b/reference/iterator/reverse_iterator/op_arrow.md
index 3c50bba62..f6580be5c 100644
--- a/reference/iterator/reverse_iterator/op_arrow.md
+++ b/reference/iterator/reverse_iterator/op_arrow.md
@@ -7,7 +7,11 @@
 ```cpp
 pointer operator-&amp;gt;() const;           // C++03
 constexpr pointer operator-&amp;gt;() const; // C++17
+constexpr pointer operator-&amp;gt;() const  // C++20
+  requires (is_pointer_v&amp;lt;Iterator&amp;gt; ||
+            requires (const Iterator i) { i.operator-&amp;gt;(); });
 ```
+* is_pointer_v[link /reference/type_traits/is_pointer.md]
 
 ## 概要
 イテレータを通してオブジェクトにアクセスする
@@ -16,6 +20,9 @@ constexpr pointer operator-&amp;gt;() const; // C++17
 ## 戻り値
 - C++03 : `&amp;amp;(operator*())`
 - C++14 : [`addressof`](/reference/memory/addressof.md)`(operator*())`
+- C++20 : 次のいずれか
+    - `Iterator`がポインタ型である場合 : `return `[` prev`](/reference/iterator/prev.md)`(current);`
+    - それ以外の場合 : `return `[` prev`](/reference/iterator/prev.md)`(current).operator-&amp;gt;();`
 
 ## 例
 ```cpp example
@@ -52,3 +59,4 @@ int main()
 ## 参照
 - [LWG Issue 2188. Reverse iterator does not fully support targets that overload `operator&amp;amp;`](http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#2188)
 - [P0031R0 A Proposal to Add Constexpr Modifiers to `reverse_iterator`, `move_iterator`, `array` and Range Access](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0031r0.html)
+- [P0896R4 The One Ranges Proposal (was Merging the Ranges TS)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0896r4.pdf)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator== -- reverse_iterator : C++20対応 #712</title>
      <link href="https://cpprefjp.github.io/reference/iterator/reverse_iterator/op_equal.html"/>
      <id>712aa954da8a3f62e3b3e390881f7b41723a12fb:reference/iterator/reverse_iterator/op_equal.md</id>
      <updated>2020-11-11T10:36:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/reverse_iterator/op_equal.md b/reference/iterator/reverse_iterator/op_equal.md
index a65789fc9..031c5d97e 100644
--- a/reference/iterator/reverse_iterator/op_equal.md
+++ b/reference/iterator/reverse_iterator/op_equal.md
@@ -18,6 +18,10 @@ namespace std {
 ## 概要
 2つの`reverse_iterator`オブジェクトが同じ要素を指しているかを判定する。
 
+## テンプレートパラメータ制約
+
+`x.current == y.current`が有効であり、戻り値が`bool`に変換可能であること。
+
 
 ## 戻り値
 `x.current == y.current`
@@ -54,3 +58,4 @@ equal
 
 ## 参照
 - [P0031R0 A Proposal to Add Constexpr Modifiers to `reverse_iterator`, `move_iterator`, `array` and Range Access](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0031r0.html)
+- [P0896R4 The One Ranges Proposal (was Merging the Ranges TS)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0896r4.pdf)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt; -- reverse_iterator : C++20対応 #712</title>
      <link href="https://cpprefjp.github.io/reference/iterator/reverse_iterator/op_greater.html"/>
      <id>712aa954da8a3f62e3b3e390881f7b41723a12fb:reference/iterator/reverse_iterator/op_greater.md</id>
      <updated>2020-11-11T10:36:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/reverse_iterator/op_greater.md b/reference/iterator/reverse_iterator/op_greater.md
index 58c897f62..a749d5bca 100644
--- a/reference/iterator/reverse_iterator/op_greater.md
+++ b/reference/iterator/reverse_iterator/op_greater.md
@@ -18,6 +18,10 @@ namespace std {
 ## 概要
 2つのr`everse_iterator`オブジェクトにおいて、左辺が右辺より大きいかを判定する。
 
+## テンプレートパラメータ制約
+
+`x.current &amp;lt; y.current`が有効であり、戻り値が`bool`に変換可能であること。
+
 
 ## 戻り値
 `x.current &amp;lt; y.current`
@@ -54,3 +58,4 @@ greater
 
 ## 参照
 - [P0031R0 A Proposal to Add Constexpr Modifiers to `reverse_iterator`, `move_iterator`, `array` and Range Access](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0031r0.html)
+- [P0896R4 The One Ranges Proposal (was Merging the Ranges TS)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0896r4.pdf)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;= -- reverse_iterator : C++20対応 #712</title>
      <link href="https://cpprefjp.github.io/reference/iterator/reverse_iterator/op_greater_equal.html"/>
      <id>712aa954da8a3f62e3b3e390881f7b41723a12fb:reference/iterator/reverse_iterator/op_greater_equal.md</id>
      <updated>2020-11-11T10:36:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/reverse_iterator/op_greater_equal.md b/reference/iterator/reverse_iterator/op_greater_equal.md
index 0161c18c1..bc72cb3dd 100644
--- a/reference/iterator/reverse_iterator/op_greater_equal.md
+++ b/reference/iterator/reverse_iterator/op_greater_equal.md
@@ -18,6 +18,10 @@ namespace std {
 ## 概要
 2つの`reverse_iterator`オブジェクトにおいて、左辺が右辺以上かを判定する。
 
+## テンプレートパラメータ制約
+
+`x.current &amp;lt;= y.current`が有効であり、戻り値が`bool`に変換可能であること。
+
 
 ## 戻り値
 `x.current &amp;lt;= y.current`
@@ -53,3 +57,4 @@ greater
 
 ## 参照
 - [P0031R0 A Proposal to Add Constexpr Modifiers to `reverse_iterator`, `move_iterator`, `array` and Range Access](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0031r0.html)
+- [P0896R4 The One Ranges Proposal (was Merging the Ranges TS)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0896r4.pdf)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt; -- reverse_iterator : C++20対応 #712</title>
      <link href="https://cpprefjp.github.io/reference/iterator/reverse_iterator/op_less.html"/>
      <id>712aa954da8a3f62e3b3e390881f7b41723a12fb:reference/iterator/reverse_iterator/op_less.md</id>
      <updated>2020-11-11T10:36:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/reverse_iterator/op_less.md b/reference/iterator/reverse_iterator/op_less.md
index 78e7a0be8..856c39151 100644
--- a/reference/iterator/reverse_iterator/op_less.md
+++ b/reference/iterator/reverse_iterator/op_less.md
@@ -18,6 +18,9 @@ namespace std {
 ## 概要
 2つの`reverse_iterator`オブジェクトにおいて、左辺が右辺より小さいかを判定する。
 
+## テンプレートパラメータ制約
+
+`x.current &amp;gt; y.current`が有効であり、戻り値が`bool`に変換可能であること。
 
 
 ## 戻り値
@@ -55,3 +58,4 @@ less
 
 ## 参照
 - [P0031R0 A Proposal to Add Constexpr Modifiers to `reverse_iterator`, `move_iterator`, `array` and Range Access](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0031r0.html)
+- [P0896R4 The One Ranges Proposal (was Merging the Ranges TS)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0896r4.pdf)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;= -- reverse_iterator : C++20対応 #712</title>
      <link href="https://cpprefjp.github.io/reference/iterator/reverse_iterator/op_less_equal.html"/>
      <id>712aa954da8a3f62e3b3e390881f7b41723a12fb:reference/iterator/reverse_iterator/op_less_equal.md</id>
      <updated>2020-11-11T10:36:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/reverse_iterator/op_less_equal.md b/reference/iterator/reverse_iterator/op_less_equal.md
index 4504a8790..346f1f1f2 100644
--- a/reference/iterator/reverse_iterator/op_less_equal.md
+++ b/reference/iterator/reverse_iterator/op_less_equal.md
@@ -18,6 +18,10 @@ namespace std {
 ## 概要
 2つの`reverse_iterator`オブジェクトにおいて、左辺が右辺以下かを判定する。
 
+## テンプレートパラメータ制約
+
+`x.current &amp;gt;= y.current`が有効であり、戻り値が`bool`に変換可能であること。
+
 
 ## 戻り値
 `x.current &amp;gt;= y.current`
@@ -53,3 +57,4 @@ less
 
 ## 参照
 - [P0031R0 A Proposal to Add Constexpr Modifiers to `reverse_iterator`, `move_iterator`, `array` and Range Access](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0031r0.html)
+- [P0896R4 The One Ranges Proposal (was Merging the Ranges TS)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0896r4.pdf)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator!= -- reverse_iterator : C++20対応 #712</title>
      <link href="https://cpprefjp.github.io/reference/iterator/reverse_iterator/op_not_equal.html"/>
      <id>712aa954da8a3f62e3b3e390881f7b41723a12fb:reference/iterator/reverse_iterator/op_not_equal.md</id>
      <updated>2020-11-11T10:36:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/reverse_iterator/op_not_equal.md b/reference/iterator/reverse_iterator/op_not_equal.md
index 7aca62cfb..4285e7f8d 100644
--- a/reference/iterator/reverse_iterator/op_not_equal.md
+++ b/reference/iterator/reverse_iterator/op_not_equal.md
@@ -18,6 +18,9 @@ namespace std {
 ## 概要
 2つの`reverse_iterator`オブジェクトが同じ要素を指していないかを判定する。
 
+## テンプレートパラメータ制約
+
+`x.current != y.current`が有効であり、戻り値が`bool`に変換可能であること。
 
 ## 戻り値
 `x.current != y.current`
@@ -53,3 +56,4 @@ not equal
 
 ## 参照
 - [P0031R0 A Proposal to Add Constexpr Modifiers to `reverse_iterator`, `move_iterator`, `array` and Range Access](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0031r0.html)
+- [P0896R4 The One Ranges Proposal (was Merging the Ranges TS)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0896r4.pdf)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>更新された定義済みマクロ -- C++20 定義済みマクロ : __cplusplusの値が決まったpaperを参照に追加</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/predefined_macros.html"/>
      <id>2493173fc8dbd449af0d43571d18c647464e15a0:lang/cpp20/predefined_macros.md</id>
      <updated>2020-11-10T17:07:40+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;更新された定義済みマクロ&lt;/span&gt;&lt;span class=&#34;cpp cpp20&#34; title=&#34;C++20で追加&#34;&gt;(C++20)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;定義済みマクロの値が、以下のように更新された：&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;マクロ名&lt;/th&gt;
&lt;th&gt;値&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__cplusplus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;202002L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;C++のバージョン値を表す&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/n4859.html&#34; target=&#34;_blank&#34;&gt;N4859 Editors&#39; Report -- Programming Languages -- C++&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator++ -- Merge branch &#39;master&#39; of https://github.com/cpprefjp/site</title>
      <link href="https://cpprefjp.github.io/reference/iterator/move_iterator/op_increment.html"/>
      <id>cddc689f167b69f7ec876d5d01d36fe3f8860829:reference/iterator/move_iterator/op_increment.md</id>
      <updated>2020-11-10T13:54:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/move_iterator/op_increment.md b/reference/iterator/move_iterator/op_increment.md
index 0e0f19caa..6932c26e8 100644
--- a/reference/iterator/move_iterator/op_increment.md
+++ b/reference/iterator/move_iterator/op_increment.md
@@ -35,6 +35,7 @@ return *this;
         return tmp;
         ```
         * base[link base.md]
+
     - それ以外の場合 : `++base()`と等価
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator== -- 表示調整</title>
      <link href="https://cpprefjp.github.io/reference/iterator/move_iterator/op_equal.html"/>
      <id>4893ad2bfebd429fe5ed5930a35636ffa909eacc:reference/iterator/move_iterator/op_equal.md</id>
      <updated>2020-11-10T13:54:09+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/move_iterator/op_equal.md b/reference/iterator/move_iterator/op_equal.md
index bc20ffd86..0b3a80656 100644
--- a/reference/iterator/move_iterator/op_equal.md
+++ b/reference/iterator/move_iterator/op_equal.md
@@ -39,12 +39,13 @@ namespace std {
 `return x.base() == y.base();`
 
 `x.base()`と`y.base()`はオーバーロードによって次のどちらか
+
 - [`move_iterator::base()`](base.md)
 - [`move_sentinel::base()`](/reference/iterator/move_sentinel/base.md.nolink)
 
 ## 備考
 
-C++20以降、この演算子により以下のオーバーロードが使用可能になる。
+C++20以降、この演算子により以下の演算子が使用可能になる。
 
 - [`operator!=(const move_iterator&amp;lt;Iterator1&amp;gt;&amp;amp; x, const move_iterator&amp;lt;Iterator2&amp;gt;&amp;amp; y)`](/reference/iterator/move_iterator/op_not_equal.md) 
 - `operator!=(const move_iterator&amp;amp; x, const move_sentinel&amp;lt;S&amp;gt;&amp;amp; y)`
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator- (非メンバ関数) -- 表示調整</title>
      <link href="https://cpprefjp.github.io/reference/iterator/move_iterator/op_minus.html"/>
      <id>4893ad2bfebd429fe5ed5930a35636ffa909eacc:reference/iterator/move_iterator/op_minus.md</id>
      <updated>2020-11-10T13:54:09+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/move_iterator/op_minus.md b/reference/iterator/move_iterator/op_minus.md
index 21c4cfa00..60b9377ce 100644
--- a/reference/iterator/move_iterator/op_minus.md
+++ b/reference/iterator/move_iterator/op_minus.md
@@ -39,6 +39,7 @@ namespace std {
 `return x.base() - y.base();`
 
 `x.base()`と`y.base()`はオーバーロードによって次のどちらか
+
 - [`move_iterator::base()`](base.md)
 - [`move_sentinel::base()`](/reference/iterator/move_sentinel/base.md.nolink)
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
</feed>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2025-06-08T12:47:55.986334</updated>
  <id>891f39f2-04aa-4f88-af71-fc19708f190a</id>

  
    <entry>
      <title>inplace_stop_callback -- stop_token: fix inner links</title>
      <link href="https://cpprefjp.github.io/reference/stop_token/inplace_stop_callback.html"/>
      <id>97ddfcb3c48bbce35daaac6244cb31af4982c2ca:reference/stop_token/inplace_stop_callback.md</id>
      <updated>2025-06-08T21:43:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stop_token/inplace_stop_callback.md b/reference/stop_token/inplace_stop_callback.md
index b66c5b516..32794afac 100644
--- a/reference/stop_token/inplace_stop_callback.md
+++ b/reference/stop_token/inplace_stop_callback.md
@@ -16,7 +16,7 @@ namespace std {
 
 
 ## 適格要件
-テンプレート引数`CallbackFn`が[`invocable`](/reference/concepts/invokable.md.nolink)および[`destructible`](/reference/concepts/destructible.md)を満たすこと。
+テンプレート引数`CallbackFn`が[`invocable`](/reference/concepts/invocable.md)および[`destructible`](/reference/concepts/destructible.md)を満たすこと。
 
 
 ## メンバ関数
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>stop_callback -- stop_token: fix inner links</title>
      <link href="https://cpprefjp.github.io/reference/stop_token/stop_callback.html"/>
      <id>97ddfcb3c48bbce35daaac6244cb31af4982c2ca:reference/stop_token/stop_callback.md</id>
      <updated>2025-06-08T21:43:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stop_token/stop_callback.md b/reference/stop_token/stop_callback.md
index bea16a99e..c6a4090da 100644
--- a/reference/stop_token/stop_callback.md
+++ b/reference/stop_token/stop_callback.md
@@ -16,7 +16,7 @@ namespace std {
 
 
 ## 適格要件
-テンプレート引数`CallbackFn`が[`invocable`](/reference/concepts/invokable.md.nolink)および[`destructible`](/reference/concepts/destructible.md)を満たすこと。
+テンプレート引数`CallbackFn`が[`invocable`](/reference/concepts/invocable.md)および[`destructible`](/reference/concepts/destructible.md)を満たすこと。
 
 
 ## メンバ関数
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>実行ポリシー -- execution/execution_policy: add inner link</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/execution_policy.html"/>
      <id>128604dd6229da84c06238db27e64b5a94c00a0d:reference/execution/execution/execution_policy.md</id>
      <updated>2025-06-08T20:02:22+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/execution_policy.md b/reference/execution/execution/execution_policy.md
index 3a546b20d..a9d078547 100644
--- a/reference/execution/execution/execution_policy.md
+++ b/reference/execution/execution/execution_policy.md
@@ -162,7 +162,7 @@ int main()
 * std::execution::par[color ff0000]
 * std::execution::par_unseq[color ff0000]
 * count.load[link /reference/atomic/atomic/load.md]
-* is_always_lock_free[link /reference/atomic/atomic/is_always_lock_free.md.nolink]
+* is_always_lock_free[link /reference/atomic/atomic.md]
 
 #### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ws -- ws : サンプルコードのインデントを4→2に修正</title>
      <link href="https://cpprefjp.github.io/reference/istream/ws.html"/>
      <id>67160f5f8b23448c7a71e7a0001c79de190ec5a5:reference/istream/ws.md</id>
      <updated>2025-06-06T10:38:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/istream/ws.md b/reference/istream/ws.md
index 58dea186d..7e59b2c56 100644
--- a/reference/istream/ws.md
+++ b/reference/istream/ws.md
@@ -30,21 +30,21 @@ namespace std {
 #include &amp;lt;string&amp;gt;
 
 int main() {
-    // マニピュレータとして使用
-    {
-        std::istringstream ss(&amp;#34;   42&amp;#34;);
-        std::string line;
-        std::getline(ss &amp;gt;&amp;gt; std::ws, line);
-        std::cout &amp;lt;&amp;lt; line &amp;lt;&amp;lt; std::endl; // &amp;#34;42&amp;#34;
-    }
-
-    // 関数として使用（通常はしない）
-    {
-        std::istringstream ss(&amp;#34;   42&amp;#34;);
-        std::cout &amp;lt;&amp;lt; ss.tellg() &amp;lt;&amp;lt; std::endl; // &amp;#34;0&amp;#34;
-        std::ws(ss);
-        std::cout &amp;lt;&amp;lt; ss.tellg() &amp;lt;&amp;lt; std::endl; // &amp;#34;3&amp;#34;
-    }
+  // マニピュレータとして使用
+  {
+    std::istringstream ss(&amp;#34;   42&amp;#34;);
+    std::string line;
+    std::getline(ss &amp;gt;&amp;gt; std::ws, line);
+    std::cout &amp;lt;&amp;lt; line &amp;lt;&amp;lt; std::endl; // &amp;#34;42&amp;#34;
+  }
+
+  // 関数として使用（通常はしない）
+  {
+    std::istringstream ss(&amp;#34;   42&amp;#34;);
+    std::cout &amp;lt;&amp;lt; ss.tellg() &amp;lt;&amp;lt; std::endl; // &amp;#34;0&amp;#34;
+    std::ws(ss);
+    std::cout &amp;lt;&amp;lt; ss.tellg() &amp;lt;&amp;lt; std::endl; // &amp;#34;3&amp;#34;
+  }
 }
 ```
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ws -- add sample to std::ws</title>
      <link href="https://cpprefjp.github.io/reference/istream/ws.html"/>
      <id>1a53cfe9f233ee2fd70f96ff186f7c04ab38a160:reference/istream/ws.md</id>
      <updated>2025-06-05T20:23:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/istream/ws.md b/reference/istream/ws.md
index c523930ba..58dea186d 100644
--- a/reference/istream/ws.md
+++ b/reference/istream/ws.md
@@ -24,13 +24,36 @@ namespace std {
 `is`
 
 ## 例
-TBD
+```cpp
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;sstream&amp;gt;
+#include &amp;lt;string&amp;gt;
+
+int main() {
+    // マニピュレータとして使用
+    {
+        std::istringstream ss(&amp;#34;   42&amp;#34;);
+        std::string line;
+        std::getline(ss &amp;gt;&amp;gt; std::ws, line);
+        std::cout &amp;lt;&amp;lt; line &amp;lt;&amp;lt; std::endl; // &amp;#34;42&amp;#34;
+    }
+
+    // 関数として使用（通常はしない）
+    {
+        std::istringstream ss(&amp;#34;   42&amp;#34;);
+        std::cout &amp;lt;&amp;lt; ss.tellg() &amp;lt;&amp;lt; std::endl; // &amp;#34;0&amp;#34;
+        std::ws(ss);
+        std::cout &amp;lt;&amp;lt; ss.tellg() &amp;lt;&amp;lt; std::endl; // &amp;#34;3&amp;#34;
+    }
+}
+```
 
 ### 出力
-TBD
-
-## 実装例
-TBD
+```
+42
+0
+3
+```
 
 ## バージョン
 ### 言語
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&gt;&gt; (非メンバ関数) -- fix typo in basic_istream</title>
      <link href="https://cpprefjp.github.io/reference/istream/basic_istream/op_istream_free.html"/>
      <id>d9fff1aa54f0134b841eaf56b2a74baca8478c9e:reference/istream/basic_istream/op_istream_free.md</id>
      <updated>2025-06-05T20:11:19+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/istream/basic_istream/op_istream_free.md b/reference/istream/basic_istream/op_istream_free.md
index 1dc60946e..152d4f5f0 100644
--- a/reference/istream/basic_istream/op_istream_free.md
+++ b/reference/istream/basic_istream/op_istream_free.md
@@ -88,7 +88,7 @@ namespace std {
 
 ## 戻り値
 
-`*this`
+`is`
 
 
 ## 例（文字列）
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
</feed>
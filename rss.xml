<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2020-04-01T14:34:15.965235</updated>
  <id>417059a1-b3d7-4f15-8e92-2414b7206b16</id>

  
    <entry>
      <title>equality_comparable -- equality_comparable : 不要なテンプレートパラメータを修正</title>
      <link href="https://cpprefjp.github.io/reference/concepts/equality_comparable.html"/>
      <id>ff2dfd022b0bf2b7d4c1d38fd11e10f86d25fd87:reference/concepts/equality_comparable.md</id>
      <updated>2020-04-01T14:04:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/concepts/equality_comparable.md b/reference/concepts/equality_comparable.md
index 0f0ad601e..f50ac85b2 100644
--- a/reference/concepts/equality_comparable.md
+++ b/reference/concepts/equality_comparable.md
@@ -6,7 +6,7 @@
 
 ```cpp
 namespace std {
-  template&amp;lt;class T, class U&amp;gt;
+  template&amp;lt;class T&amp;gt;
   concept equality_comparable = /*see below*/;      // (1)
 
   template&amp;lt;class T, class U&amp;gt;
@@ -40,7 +40,7 @@ concept weakly-equality-comparable-with =
 - (1) : 以下のように定義される
 
 ```cpp
-template&amp;lt;class T, class U&amp;gt;
+template&amp;lt;class T&amp;gt;
 concept equality_comparable = weakly-equality-comparable-with&amp;lt;T, T&amp;gt;;
 ```
 
@@ -250,4 +250,4 @@ S2 is not equality comparable with int
 
 - [P0898R3 Standard Library Concepts](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0898r3.pdf)
 - [P1754R1 Rename concepts to standard_case for C++20, while we still can](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1754r1.pdf)
-- [同値関係 - wikipedia](https://ja.wikipedia.org/wiki/同値関係)
\ No newline at end of file
+- [同値関係 - wikipedia](https://ja.wikipedia.org/wiki/同値関係)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>boolean-testable -- boolean-testable : 微修正</title>
      <link href="https://cpprefjp.github.io/reference/concepts/boolean-testable.html"/>
      <id>b79bfb06b98d4f9ea78d180bb54322ccf1b93f57:reference/concepts/boolean-testable.md</id>
      <updated>2020-04-01T10:17:24+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/concepts/boolean-testable.md b/reference/concepts/boolean-testable.md
index 6d53fe72a..2433c334d 100644
--- a/reference/concepts/boolean-testable.md
+++ b/reference/concepts/boolean-testable.md
@@ -30,6 +30,7 @@ namespace std {
 template&amp;lt;class T&amp;gt;
 concept boolean-testable-impl = convertible_to&amp;lt;T, bool&amp;gt;;
 ```
+* convertible_to[link /reference/concepts/convertible_to.md]
 
 これを用いて、`boolean-testable`は以下の様に定義される。
 
@@ -44,7 +45,7 @@ concept boolean-testable =
 ## モデル
 
 - `decltype((e))`が`T`となる式`e`について、次の条件を満たす場合に限って型`T`は`boolean-testable-impl`のモデルである。
-    - 次のどちらか
+    - 次のどちらかを満たす
         - `remove_cvref_t&amp;lt;T&amp;gt;`はクラス型ではない
         - `operator||, operator&amp;amp;&amp;amp;`を`remove_cvref_t&amp;lt;T&amp;gt;`のクラススコープで名前解決したかの様に探索した結果、候補関数は見つからない
     - `operator||, operator&amp;amp;&amp;amp;`のADLによる探索では不適格な宣言は見つからない
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>concepts -- &lt;concepts&gt; : リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/concepts.html"/>
      <id>38c72c2a8049d836815873e7aeba731664d5af54:reference/concepts.md</id>
      <updated>2020-03-31T16:55:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/concepts.md b/reference/concepts.md
index 9c4272e5f..9f1477569 100644
--- a/reference/concepts.md
+++ b/reference/concepts.md
@@ -88,7 +88,6 @@ concept C =
 | [`integral`](concepts/integral.md) | 整数型 | C++20 |
 | [`signed_integral`](concepts/signed_integral.md) | 符号付き整数型 | C++20 |
 | [`unsigned_integral`](concepts/unsigned_integral.md) | 符号なし整数型 | C++20 |
-| [`boolean`](concepts/boolean.md) | 真理値型 | C++20 |
 | [`floating_point`](concepts/floating_point.md) | 浮動小数点数型 | C++20 |
 
 
@@ -148,7 +147,7 @@ concept C =
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`boolean-testable`](concepts/boolean.md) | 真理値型 | C++20 |
+| [`boolean-testable`](concepts/boolean-testable.md) | 真理値型 | C++20 |
 
 
 ## そのうちどこかに移動するページ
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>boolean-testable -- boolean-testable : 微修正</title>
      <link href="https://cpprefjp.github.io/reference/concepts/boolean-testable.html"/>
      <id>79b666d313114aebb5f642130c7a7ee576b44089:reference/concepts/boolean-testable.md</id>
      <updated>2020-03-31T16:53:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/concepts/boolean-testable.md b/reference/concepts/boolean-testable.md
index 825977f18..6d53fe72a 100644
--- a/reference/concepts/boolean-testable.md
+++ b/reference/concepts/boolean-testable.md
@@ -1,4 +1,4 @@
-# boolean
+# boolean-testable
 * concepts[meta header]
 * std[meta namespace]
 * concept[meta id-type]
@@ -59,7 +59,7 @@ concept boolean-testable =
 
 `boolean-testable`コンセプトのモデルとなる型には、`bool`, [`std::true_type`](/reference/type_traits/true_type.md), `int*`等ポインタ型、[`std::bitset&amp;lt;N&amp;gt;::reference`](https://cpprefjp.github.io/reference/bitset/bitset/reference.html)等がある。
 
-### booleanコンセプト
+## booleanコンセプト
 
 `boolean-testable`コンセプトは当初、真理値型を表す説明専用ではない`boolean`コンセプトとして以下の様に定義されていた。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>three_way_comparable -- コンセプト関連Issue対応</title>
      <link href="https://cpprefjp.github.io/reference/compare/three_way_comparable.html"/>
      <id>22686c41015bb571a19224bed8670f686beb6944:reference/compare/three_way_comparable.md</id>
      <updated>2020-03-31T16:46:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/compare/three_way_comparable.md b/reference/compare/three_way_comparable.md
index aa8a35a73..a4e0a7455 100644
--- a/reference/compare/three_way_comparable.md
+++ b/reference/compare/three_way_comparable.md
@@ -270,3 +270,5 @@ int main() {
 
 - [P0768R1 Library support for the spaceship (comparison) operator](http://wg21.link/p0768)
 - [P1614R2 The Mothership has Landed (Adding &amp;lt;=&amp;gt; to the Library)](http://wg21.link/p1614)
+- [LWG Issue 3360. `three_way_comparable_with` is inconsistent with similar concepts](https://wg21.cmeerw.net/lwg/issue3360)
+- [P1964R2 Wording for `boolean-testable`](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p1964r2.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>convertible_to -- コンセプト関連Issue対応</title>
      <link href="https://cpprefjp.github.io/reference/concepts/convertible_to.html"/>
      <id>22686c41015bb571a19224bed8670f686beb6944:reference/concepts/convertible_to.md</id>
      <updated>2020-03-31T16:46:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/concepts/convertible_to.md b/reference/concepts/convertible_to.md
index 5175bf7e7..b3c040a08 100644
--- a/reference/concepts/convertible_to.md
+++ b/reference/concepts/convertible_to.md
@@ -9,11 +9,12 @@ namespace std {
   template&amp;lt;class From, class To&amp;gt;
   concept convertible_to =
     is_convertible_v&amp;lt;From, To&amp;gt; &amp;amp;&amp;amp;
-    requires(From (&amp;amp;f)()) {
+    requires(add_rvalue_reference_t&amp;lt;From&amp;gt; (&amp;amp;f)()) {
       static_cast&amp;lt;To&amp;gt;(f());
     };
 }
 ```
+* add_rvalue_reference_t[link /reference/type_traits/add_rvalue_reference.md]
 * is_convertible_v[link /reference/type_traits/is_convertible.md]
 
 ## 概要
@@ -24,24 +25,24 @@ namespace std {
 
 ## モデル
 
-まず、説明のための関数`test(), f()`を以下のように定義、宣言する。
+`FromR = add_rvalue_reference_t&amp;lt;From&amp;gt;`として、説明のための関数`test(), f()`を以下のように定義、宣言する。
 
 ```cpp
-To test(From (&amp;amp;func)()) {
+To test(FromR (&amp;amp;func)()) {
   return func();
 }
 
-From f();
+FromR f();
 ```
 
-この`test()`関数、型`From, To`及び、[等しさを保持](/reference/concepts.md)し`From`型を返す引数なしの関数`f`について、以下の条件を満たす場合に限って型`From, To`は`convertible_to`のモデルである。
+この`test()`関数、型`FromR, To`及び、[等しさを保持](/reference/concepts.md)し`FromR`型を返す引数なしの関数`f`について、以下の条件を満たす場合に限って型`From, To`は`convertible_to`のモデルである。
 
 - 次のどちらかを満たす
     - `To`は[オブジェクト型](/reference/type_traits/is_object.md)でもオブジェクトへの参照型でもない
     - `static_cast&amp;lt;To&amp;gt;(f())`と`test(f)`は等しい
 - 次のいずれかを満たす
-    - `From`はオブジェクトへの参照型ではない
-    - `From`が非`const`右辺値参照型の場合、`f()`の呼び出しによって参照されるオブジェクトの状態は、上記の式の実行の後でも有効だが未規定となる
+    - `FromR`はオブジェクトへの参照型ではない
+    - `FromR`が非`const`右辺値参照型の場合、`f()`の呼び出しによって参照されるオブジェクトの状態は、上記の式の実行の後でも有効だが未規定となる
         - 標準ライブラリの型のオブジェクトは特に指定がない場合、ムーブされた後の状態は有効だが未規定となる
     - `f()`の呼び出しによって参照されるオブジェクトは上記の式の実行によって変更されない
 
@@ -139,3 +140,4 @@ true
 
 - [P0898R3 Standard Library Concepts](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0898r3.pdf)
 - [P1754R1 Rename concepts to standard_case for C++20, while we still can](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1754r1.pdf)
+- [LWG Issue 3194. `ConvertibleTo` prose does not match code](https://wg21.cmeerw.net/lwg/issue3194)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>copy_constructible -- コンセプト関連Issue対応</title>
      <link href="https://cpprefjp.github.io/reference/concepts/copy_constructible.html"/>
      <id>22686c41015bb571a19224bed8670f686beb6944:reference/concepts/copy_constructible.md</id>
      <updated>2020-03-31T16:46:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/concepts/copy_constructible.md b/reference/concepts/copy_constructible.md
index 02738cb50..a30d3c2f4 100644
--- a/reference/concepts/copy_constructible.md
+++ b/reference/concepts/copy_constructible.md
@@ -95,3 +95,4 @@ C is copy constructible
 
 - [P0898R3 Standard Library Concepts](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0898r3.pdf)
 - [P1754R1 Rename concepts to standard_case for C++20, while we still can](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1754r1.pdf)
+- [LWG Issue 3141. `CopyConstructible` doesn&amp;#39;t preserve source values](https://wg21.cmeerw.net/lwg/issue3141)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>swappable -- コンセプト関連Issue対応</title>
      <link href="https://cpprefjp.github.io/reference/concepts/swappable.html"/>
      <id>22686c41015bb571a19224bed8670f686beb6944:reference/concepts/swappable.md</id>
      <updated>2020-03-31T16:46:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/concepts/swappable.md b/reference/concepts/swappable.md
index 9125ea80f..236c0c4be 100644
--- a/reference/concepts/swappable.md
+++ b/reference/concepts/swappable.md
@@ -11,7 +11,7 @@ namespace std {
 
   template&amp;lt;class T, class U&amp;gt;
   concept swappable_with =
-    common_reference_with&amp;lt;const remove_reference_t&amp;lt;T&amp;gt;&amp;amp;, const remove_reference_t&amp;lt;U&amp;gt;&amp;amp;&amp;gt; &amp;amp;&amp;amp;
+    common_reference_with&amp;lt;T, U&amp;gt; &amp;amp;&amp;amp;
     requires(T&amp;amp;&amp;amp; t, U&amp;amp;&amp;amp; u) {
       ranges::swap(std::forward&amp;lt;T&amp;gt;(t), std::forward&amp;lt;T&amp;gt;(t));
       ranges::swap(std::forward&amp;lt;U&amp;gt;(u), std::forward&amp;lt;U&amp;gt;(u));
@@ -216,4 +216,5 @@ NS::S2 is not swappable with NS::S1
 ## 参照
 - [P0898R3 Standard Library Concepts](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0898r3.pdf)
 - [P1754R1 Rename concepts to standard_case for C++20, while we still can](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1754r1.pdf)
+- [LWG Issue 3175. The `CommonReference` requirement of concept `SwappableWith` is not satisfied in the example](https://wg21.cmeerw.net/lwg/issue3175)
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>totally_ordered -- コンセプト関連Issue対応</title>
      <link href="https://cpprefjp.github.io/reference/concepts/totally_ordered.html"/>
      <id>22686c41015bb571a19224bed8670f686beb6944:reference/concepts/totally_ordered.md</id>
      <updated>2020-03-31T16:46:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/concepts/totally_ordered.md b/reference/concepts/totally_ordered.md
index e687a406e..da55f40c7 100644
--- a/reference/concepts/totally_ordered.md
+++ b/reference/concepts/totally_ordered.md
@@ -226,3 +226,5 @@ S2 is not totally ordered with int
 - [P0898R3 Standard Library Concepts](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0898r3.pdf)
 - [P1754R1 Rename concepts to standard_case for C++20, while we still can](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1754r1.pdf)
 - [LWG Issue 3329. `totally_ordered_with` both directly and indirectly requires `common_reference_with`](https://wg21.cmeerw.net/lwg/issue3329)
+- [LWG Issue 3331. Define `totally_ordered/_with` in terms of `partially-ordered-with`](https://wg21.cmeerw.net/lwg/issue3331)
+  
\ No newline at end of file
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
</feed>
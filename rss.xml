<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2024-02-26T14:38:20.813249</updated>
  <id>7cbef829-c483-478e-8a41-68dab2dd029b</id>

  
    <entry>
      <title>ends_with -- 一部リンクをN4950へのリンクに修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_ends_with.html"/>
      <id>95a829945546cc7d9e7871d69f54fc4e6f2d9add:reference/algorithm/ranges_ends_with.md</id>
      <updated>2024-02-26T02:15:59+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_ends_with.md b/reference/algorithm/ranges_ends_with.md
index e5cd294ea..87d51752d 100644
--- a/reference/algorithm/ranges_ends_with.md
+++ b/reference/algorithm/ranges_ends_with.md
@@ -156,4 +156,4 @@ inline constexpr ends_with_impl ends_with;
 
 
 ## 参照
-- [N4892 25 Algorithms library](https://timsong-cpp.github.io/cppwp/algorithms)
+- [N4950 27 Algorithms library](https://timsong-cpp.github.io/cppwp/n4950/algorithms)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>starts_with -- 一部リンクをN4950へのリンクに修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_starts_with.html"/>
      <id>95a829945546cc7d9e7871d69f54fc4e6f2d9add:reference/algorithm/ranges_starts_with.md</id>
      <updated>2024-02-26T02:15:59+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_starts_with.md b/reference/algorithm/ranges_starts_with.md
index 562269501..42d002821 100644
--- a/reference/algorithm/ranges_starts_with.md
+++ b/reference/algorithm/ranges_starts_with.md
@@ -127,4 +127,4 @@ inline constexpr starts_with_impl starts_with;
 
 
 ## 参照
-- [N4892 25 Algorithms library](https://timsong-cpp.github.io/cppwp/algorithms)
+- [N4950 27 Algorithms library](https://timsong-cpp.github.io/cppwp/n4950/algorithms)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ranges -- 一部リンクをN4950へのリンクに修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges.html"/>
      <id>95a829945546cc7d9e7871d69f54fc4e6f2d9add:reference/ranges.md</id>
      <updated>2024-02-26T02:15:59+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges.md b/reference/ranges.md
index 5f09f144f..0df15fe7a 100644
--- a/reference/ranges.md
+++ b/reference/ranges.md
@@ -430,5 +430,6 @@ range | adaptor(args...)
 
 ## 参照
 - [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
+- [N4950 26 Ranges library](https://timsong-cpp.github.io/cppwp/n4950/ranges)
 - [C++20 ranges](https://techbookfest.org/product/5134506308665344)
 - [P2278R4 `cbegin` should always return a constant iterator](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p2278r4.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>as_rvalue_view -- 一部リンクをN4950へのリンクに修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/as_rvalue_view.html"/>
      <id>95a829945546cc7d9e7871d69f54fc4e6f2d9add:reference/ranges/as_rvalue_view.md</id>
      <updated>2024-02-26T02:15:59+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/as_rvalue_view.md b/reference/ranges/as_rvalue_view.md
index b849c1b65..68f163a31 100644
--- a/reference/ranges/as_rvalue_view.md
+++ b/reference/ranges/as_rvalue_view.md
@@ -180,4 +180,4 @@ constexpr explicit as_rvalue_view(V base);
 - [Visual C++](/implementation.md#visual_cpp): ?
 
 ## 参照
-- [N4950 24 Ranges library](https://timsong-cpp.github.io/cppwp/ranges)
+- [N4950 26 Ranges library](https://timsong-cpp.github.io/cppwp/n4950/ranges)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>join_with_view -- 一部リンクをN4950へのリンクに修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/join_with_view.html"/>
      <id>95a829945546cc7d9e7871d69f54fc4e6f2d9add:reference/ranges/join_with_view.md</id>
      <updated>2024-02-26T02:15:59+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/join_with_view.md b/reference/ranges/join_with_view.md
index bb7de3076..7e0fcfb80 100644
--- a/reference/ranges/join_with_view.md
+++ b/reference/ranges/join_with_view.md
@@ -161,4 +161,4 @@ hello-C++23-world
 - [`join_view`](join_view.md)
 
 ## 参照
-- [N4950 24 Ranges library](https://timsong-cpp.github.io/cppwp/ranges)
+- [N4950 26 Ranges library](https://timsong-cpp.github.io/cppwp/n4950/ranges)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>repeat_view -- 一部リンクをN4950へのリンクに修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/repeat_view.html"/>
      <id>95a829945546cc7d9e7871d69f54fc4e6f2d9add:reference/ranges/repeat_view.md</id>
      <updated>2024-02-26T02:15:59+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/repeat_view.md b/reference/ranges/repeat_view.md
index 0f2af5d76..07c75def5 100644
--- a/reference/ranges/repeat_view.md
+++ b/reference/ranges/repeat_view.md
@@ -105,4 +105,4 @@ int main() {
 - [Visual C++](/implementation.md#visual_cpp): ?
 
 ## 参照
-- [N4917 26 Ranges library](https://timsong-cpp.github.io/cppwp/ranges)
+- [N4950 26 Ranges library](https://timsong-cpp.github.io/cppwp/n4950/ranges)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>iterator -- 一部リンクをN4950へのリンクに修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/repeat_view/iterator.html"/>
      <id>95a829945546cc7d9e7871d69f54fc4e6f2d9add:reference/ranges/repeat_view/iterator.md</id>
      <updated>2024-02-26T02:15:59+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/repeat_view/iterator.md b/reference/ranges/repeat_view/iterator.md
index 621a15c90..950dadf8f 100644
--- a/reference/ranges/repeat_view/iterator.md
+++ b/reference/ranges/repeat_view/iterator.md
@@ -130,4 +130,4 @@ namespace std::ranges {
 - [Visual C++](/implementation.md#visual_cpp): ?
 
 ## 参照
-- [N4917 26 Ranges library](https://timsong-cpp.github.io/cppwp/ranges)
+- [N4950 26 Ranges library](https://timsong-cpp.github.io/cppwp/n4950/ranges)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>to -- 一部リンクをN4950へのリンクに修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/to.html"/>
      <id>95a829945546cc7d9e7871d69f54fc4e6f2d9add:reference/ranges/to.md</id>
      <updated>2024-02-26T02:15:59+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/to.md b/reference/ranges/to.md
index 5edbbf82d..11cc00f23 100644
--- a/reference/ranges/to.md
+++ b/reference/ranges/to.md
@@ -214,4 +214,4 @@ int main() {
 
 ## 参照
 
-- [26.5.7.2 ranges::to](https://timsong-cpp.github.io/cppwp/range.utility.conv.to)
+- [26.5.7.2 ranges::to](https://timsong-cpp.github.io/cppwp/n4950/range.utility.conv.to)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>transform_view -- transform_view: 例を追加</title>
      <link href="https://cpprefjp.github.io/reference/ranges/transform_view.html"/>
      <id>badecd6938de5ed0c497e7ce6e9c50768e4d4040:reference/ranges/transform_view.md</id>
      <updated>2024-02-26T02:06:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/transform_view.md b/reference/ranges/transform_view.md
index 928b74277..fd2d1accb 100644
--- a/reference/ranges/transform_view.md
+++ b/reference/ranges/transform_view.md
@@ -104,6 +104,40 @@ int main() {
 149
 ```
 
+## 例 特定のメンバを選択する
+
+```cpp example
+#include &amp;lt;ranges&amp;gt;
+#include &amp;lt;string&amp;gt;
+#include &amp;lt;iostream&amp;gt;
+
+struct Record {
+  int id = 0;
+  std::string name;
+};
+
+int main() {
+  using namespace std;
+  Record records[] = {
+    {1, &amp;#34;Alice&amp;#34;},
+    {2, &amp;#34;Bob&amp;#34;},
+    {3, &amp;#34;Charlie&amp;#34;}
+  };
+
+  for (int id : records | views::transform(&amp;amp;Record::id)) {
+    cout &amp;lt;&amp;lt; id &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
+  }
+}
+```
+* views::transform[color ff0000]
+
+### 出力
+```
+1
+2
+3
+```
+
 ## バージョン
 ### 言語
 - C++20
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexpr if 文 -- chore: s/破棄文/廃棄文/ (#1257)</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/if_constexpr.html"/>
      <id>5ae498212b279218f89ee9a21bd0e901ce9a716c:lang/cpp17/if_constexpr.md</id>
      <updated>2024-02-26T00:04:11+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/if_constexpr.md b/lang/cpp17/if_constexpr.md
index a44aff7fb..9b7f4953e 100644
--- a/lang/cpp17/if_constexpr.md
+++ b/lang/cpp17/if_constexpr.md
@@ -166,7 +166,7 @@ int main()
 
 ### (C++23以降 or CWG 2518が適用された環境) `static_assert`文に関する例外
 
-上に述べたように、`constexpr if`文の中の文は破棄文においても、非依存名の検証を行う。このため特に`static_assert`文を使う時に直感的ではない挙動を示していた。
+上に述べたように、`constexpr if`文の中の文は廃棄文においても、非依存名の検証を行う。このため特に`static_assert`文を使う時に直感的ではない挙動を示していた。
 
 C++23以降、もしくはCWG 2518が適用された環境においては、template文(もしくは適切な特殊化や`constexpr if`文の中の文)が実際にインスタンス化されるまで、`static_assert`文の宣言は遅延される。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>コンパイル時アサート -- fix: CWG 2518/P2593R1 を反映 (#1257)</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/static_assert.html"/>
      <id>79fc60a46544883f2f132639a33ff68adb99e3d4:lang/cpp11/static_assert.md</id>
      <updated>2024-02-25T20:16:22+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/static_assert.md b/lang/cpp11/static_assert.md
index ea9cab600..5d4a674b9 100644
--- a/lang/cpp11/static_assert.md
+++ b/lang/cpp11/static_assert.md
@@ -28,7 +28,8 @@ static_assert(定数式, 文字列リテラル);
 - この宣言は、名前空間スコープ、ブロックスコープ、メンバ宣言といった場所で記述できる
 - 定数式が真であると評価された場合は何も効果がない。定数式が偽であると評価された場合は、指定された文字列リテラルを含む診断メッセージがコンパイラによって問題報告される。ただし、基本ソース文字集合に含まれない文字集合は、診断メッセージに表示することはコンパイラに要求されない
 - `static_assert`宣言では、新たな型やオブジェクトは宣言しない。また、実行時にサイズや時間コストは発生しない
-
+- (C++23以降 or CWG 2518が適用された環境): template文(もしくは適切な特殊化や[C++17 constexpr if 文](/lang/cpp17/if_constexpr.md)の中の文)が実際にインスタンス化されるまで、`static_assert`文の宣言は遅延される。
+  - [C++17 constexpr if 文](/lang/cpp17/if_constexpr.md)の解説を参照
 
 ## 例
 ```cpp example
@@ -79,6 +80,7 @@ Boost Static Assertion Libraryが開発されたときに、コンパイル時
 
 ## 関連項目
 - [C++17 `static_assert`のメッセージ省略を許可](/lang/cpp17/extending_static_assert.md)
+- [C++17 constexpr if 文](/lang/cpp17/if_constexpr.md)
 - [C++23 定数式の文脈での`bool`への縮小変換を許可](/lang/cpp23/narrowing_contextual_conversions_to_bool.md)
 
 
@@ -87,4 +89,5 @@ Boost Static Assertion Libraryが開発されたときに、コンパイル時
 - [N1604 Proposal to Add Static Assertions to the Core Language (Revision 1)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2004/n1604.html)
 - [N1617 Proposal to Add Static Assertions to the Core Language (Revision 2)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2004/n1617.html)
 - [N1720 Proposal to Add Static Assertions to the Core Language (Revision 3)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2004/n1720.html)
-
+- [P2593R1: Allowing static_assert(false)](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p2593r1.html)
+- [Issue 2518: Conformance requirements and #error/#warning - WG21 CWG Issues](https://wg21.cmeerw.net/cwg/issue2518)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>constexpr if 文 -- fix: CWG 2518/P2593R1 を反映 (#1257)</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/if_constexpr.html"/>
      <id>79fc60a46544883f2f132639a33ff68adb99e3d4:lang/cpp17/if_constexpr.md</id>
      <updated>2024-02-25T20:16:22+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/if_constexpr.md b/lang/cpp17/if_constexpr.md
index ae6cd312b..a44aff7fb 100644
--- a/lang/cpp17/if_constexpr.md
+++ b/lang/cpp17/if_constexpr.md
@@ -164,6 +164,30 @@ int main()
 }
 ```
 
+### (C++23以降 or CWG 2518が適用された環境) `static_assert`文に関する例外
+
+上に述べたように、`constexpr if`文の中の文は破棄文においても、非依存名の検証を行う。このため特に`static_assert`文を使う時に直感的ではない挙動を示していた。
+
+C++23以降、もしくはCWG 2518が適用された環境においては、template文(もしくは適切な特殊化や`constexpr if`文の中の文)が実際にインスタンス化されるまで、`static_assert`文の宣言は遅延される。
+
+```cpp example
+#include &amp;lt;cstdint&amp;gt;
+template &amp;lt;class T&amp;gt;
+void f(T t) {
+  if constexpr (sizeof(T) == sizeof(std::int32_t)) {
+    use(t);
+  } else {
+    static_assert(false, &amp;#34;must be 32bit&amp;#34;);
+  }
+}
+
+void g(std::int8_t c) {
+  std::int32_t n = 0;
+  f(n); // OK: nはstd::int32_t型なので`use(t);`のほうがインスタンス化されるために、static_assert文は宣言されない。
+  f(c); // error: cはstd::int8_t型なので、static_assert文は宣言され、&amp;#34;must be 32bit&amp;#34;とコンパイラが診断メッセージを出力する
+}
+```
+
 ### 類似機能との比較
 
 `constexpr if`文の導入によってC++の`if`系の条件分岐は3種類になった。
@@ -429,6 +453,7 @@ template &amp;lt;int arg, typename ... Args&amp;gt; int do_something(Args... args) {
 - [P0292R1: constexpr if: A slightly different syntax](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0292r1.html)
 - [P0292R2: constexpr if: A slightly different syntax](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0292r2.html)
 - [N4603 Editor&amp;#39;s Report -- Committee Draft, Standard for Programming Language C++](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/n4603.html)
+- [P2593R1: Allowing static_assert(false)](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p2593r1.html)
 
 ### 2段階名前探索における注意点について
 
@@ -439,7 +464,9 @@ template &amp;lt;int arg, typename ... Args&amp;gt; int do_something(Args... args) {
 
 ### その他
 
+- [C++11 コンパイル時アサート](/lang/cpp11/static_assert.md)
 - [Static If I Had a Hammer - Andrei Alexandrescu](http://web.archive.org/web/20201202042515/https://channel9.msdn.com/Events/GoingNative/GoingNative-2012/Static-If-I-Had-a-Hammer)
 - [C++1z if constexpr文 - Faith and Brave - C++で遊ぼう](https://faithandbrave.hateblo.jp/entry/2016/12/22/171238)
 - [[cfe-dev] Clang getting involved](https://lists.llvm.org/pipermail/cfe-dev/2014-March/035801.html)
 - [`__if_exists` Statement | Microsoft Docs](https://docs.microsoft.com/ja-jp/cpp/cpp/if-exists-statement)
+- [Issue 2518: Conformance requirements and #error/#warning - WG21 CWG Issues](https://wg21.cmeerw.net/cwg/issue2518)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>C++国際標準規格 -- fix: C++23のDISはN4950で決まりと見て良さそうだった</title>
      <link href="https://cpprefjp.github.io/international-standard.html"/>
      <id>426105d468e086c0b7eb3e3cda5e51e60888c3bf:international-standard.md</id>
      <updated>2024-02-25T12:04:10+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;C++国際標準規格&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;h2&gt;&lt;a href=&#34;https://cpprefjp.github.io/international-standard.html#summary&#34; id=&#34;summary&#34;&gt;概要&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;C++ の標準規格の実例として ISO/IEC による&lt;strong&gt;国際標準規格&lt;/strong&gt; (international standard) がある。
最新の国際標準規格は「ISO/IEC 14882:2020 Programming Languages -- C++」(通称 C++20) である。
C++ の標準規格は、他にも各国の規格化団体によって国際標準規格に等価なものが定められている。
日本では日本工業標準調査会 (JISC) により「JIS X 3014:2003 プログラム言語C++」が定められているが古い (C++03 相当)。
ここでは特に国際標準規格について取り扱う。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;https://cpprefjp.github.io/international-standard.html#list-of-iso-cpp&#34; id=&#34;list-of-iso-cpp&#34;&gt;国際標準規格の一覧&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;通称&lt;sup&gt;&lt;a href=&#34;https://cpprefjp.github.io/international-standard.html#note-t1-1&#34; id=&#34;note_ref-t1-1&#34;&gt;†1&lt;/a&gt;&lt;/sup&gt;&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;名称&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;参照する規格案&lt;sup&gt;&lt;a href=&#34;https://cpprefjp.github.io/international-standard.html#note-t1-2&#34; id=&#34;note_ref-t1-2&#34;&gt;†2&lt;/a&gt;&lt;/sup&gt;&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;規格案・原案&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;&lt;code&gt;__cplusplus&lt;/code&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp26.html&#34;&gt;C++26&lt;/a&gt; (C++2c)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ISO/IEC 14882:2026 (予定)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N4971(&lt;a href=&#34;https://open-std.org/jtc1/sc22/wg21/docs/papers/2023/n4971.pdf&#34; target=&#34;_blank&#34;&gt;PDF&lt;/a&gt;/&lt;a href=&#34;https://timsong-cpp.github.io/cppwp/&#34; target=&#34;_blank&#34;&gt;HTML&lt;/a&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N4971 N4964 N4958&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;--&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp23.html&#34;&gt;C++23&lt;/a&gt; (C++2b)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ISO/IEC 14882:2023 (予定)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N4950(&lt;a href=&#34;https://open-std.org/jtc1/sc22/wg21/docs/papers/2023/n4950.pdf&#34; target=&#34;_blank&#34;&gt;PDF&lt;/a&gt;/&lt;a href=&#34;https://timsong-cpp.github.io/cppwp/n4950/&#34; target=&#34;_blank&#34;&gt;HTML&lt;/a&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N4950 N4944 N4928 N4917 N4910 N4901 N4892 N4885 N4878&lt;br /&gt;N4868 N4861&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;--&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20.html&#34;&gt;C++20&lt;/a&gt; (C++2a)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ISO/IEC 14882:2020&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N4861&lt;sup&gt;&lt;a href=&#34;https://cpprefjp.github.io/international-standard.html#note-t1-3&#34; id=&#34;note_ref-t1-3&#34;&gt;†3&lt;/a&gt;&lt;/sup&gt;(&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/n4861.pdf&#34; target=&#34;_blank&#34;&gt;PDF&lt;/a&gt;/&lt;a href=&#34;https://timsong-cpp.github.io/cppwp/n4861/&#34; target=&#34;_blank&#34;&gt;HTML&lt;/a&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N4860 N4849 N4842 N4835 N4830&lt;br /&gt;N4820 N4810 N4800 N4791 &lt;del&gt;N4788&lt;/del&gt;&lt;sup&gt;&lt;a href=&#34;https://cpprefjp.github.io/international-standard.html#note-t1-4&#34; id=&#34;note_ref-t1-4&#34;&gt;†4&lt;/a&gt;&lt;/sup&gt;&lt;br /&gt;N4778 N4762 N4750 N4741 N4727&lt;br /&gt;N4713 N4700 N4687&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;202002L&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17.html&#34;&gt;C++17&lt;/a&gt; (C++1z)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ISO/IEC 14882:2017&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N4659(&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/n4659.pdf&#34; target=&#34;_blank&#34;&gt;PDF&lt;/a&gt;/&lt;a href=&#34;https://timsong-cpp.github.io/cppwp/n4659/&#34; target=&#34;_blank&#34;&gt;HTML&lt;/a&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N4660 N4659 N4640 N4618 N4606&lt;br /&gt;N4594 N4582 N4567 N4527 N4431&lt;br /&gt;N4296&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;201703L&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp14.html&#34;&gt;C++14&lt;/a&gt; (C++1y)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ISO/IEC 14882:2014&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N4140(&lt;a href=&#34;https://github.com/cplusplus/draft/blob/master/papers/n4140.pdf?raw=true&#34; target=&#34;_blank&#34;&gt;PDF&lt;/a&gt;/&lt;a href=&#34;https://timsong-cpp.github.io/cppwp/n4140/&#34; target=&#34;_blank&#34;&gt;HTML&lt;/a&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N4141 N4140 N3937 N3936 N3797&lt;br /&gt;N3691 N3690 N3485 N3376 N3337&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;201402L&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11.html&#34;&gt;C++11&lt;/a&gt; (C++0x)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ISO/IEC 14882:2011&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N3337&lt;sup&gt;&lt;a href=&#34;https://cpprefjp.github.io/international-standard.html#note-t1-5&#34; id=&#34;note_ref-t1-5&#34;&gt;†5&lt;/a&gt;&lt;/sup&gt;(&lt;a href=&#34;https://wg21.link/std11&#34; target=&#34;_blank&#34;&gt;PDF&lt;/a&gt;/&lt;a href=&#34;https://timsong-cpp.github.io/cppwp/n3337/&#34; target=&#34;_blank&#34;&gt;HTML&lt;/a&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N3291 N3290 N3242 N3225 N3126&lt;br /&gt;N3090 N3035 N3000 N2960 N2914&lt;br /&gt;N2857 N2798 N2723 N2691 N2606&lt;br /&gt;N2588 N2521 N2461 N2369 N2315&lt;br /&gt;N2284 N2134 N2009 N1905 N1804&lt;br /&gt;N1733 N1655&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;201103L&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;C++03&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ISO/IEC 14882:2003&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N1577&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N1577 ?&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;199711L&lt;/code&gt;&lt;br /&gt;(C++98 と同じ)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;C++98&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ISO/IEC 14882:1998&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;?&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;?&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;199711L&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/international-standard.html#note_ref-t1-1&#34; id=&#34;note-t1-1&#34;&gt;&lt;strong&gt;^&lt;/strong&gt;&lt;/a&gt; 括弧内は策定時・標準化前に一時的に用いられた通称&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/international-standard.html#note_ref-t1-2&#34; id=&#34;note-t1-2&#34;&gt;&lt;strong&gt;^&lt;/strong&gt;&lt;/a&gt; 最終国際規格案はPDFやHTMLなどの形で一般公開されていないため、それにほぼ同一の内容の規格案を参照する。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/international-standard.html#note_ref-t1-3&#34; id=&#34;note-t1-3&#34;&gt;&lt;strong&gt;^&lt;/strong&gt;&lt;/a&gt; N4861 は、C++20 DISであるN4860に対するデザインレベルの差とC++17との相互参照がない以外の差はないため、事実上 N4861 が C++20 を参照する時に用いられる。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/international-standard.html#note_ref-t1-4&#34; id=&#34;note-t1-4&#34;&gt;&lt;strong&gt;^&lt;/strong&gt;&lt;/a&gt; N4788 は政治的事情により撤回された (参照 N4792)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/international-standard.html#note_ref-t1-5&#34; id=&#34;note-t1-5&#34;&gt;&lt;strong&gt;^&lt;/strong&gt;&lt;/a&gt; N3337 は、C++11規格に対する編集レベルの修正のみが適用された仕様案であるため、事実上 N3337 が C++11 を参照する時に用いられる。C++11規格からN3337への変更点は、&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3338.html&#34; target=&#34;_blank&#34;&gt;N3338&lt;/a&gt;を参照。&lt;br /&gt;
(それより前の公開されているC++11向け仕様案であるN3242からC++11規格に対しては、機能的な変更がいくつかあるため、C++11規格として参照するには適さない)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最新のDraftのHTML版は以下で公開されている。&lt;br /&gt;
&lt;a href=&#34;https://timsong-cpp.github.io/cppwp/&#34; target=&#34;_blank&#34;&gt;Draft C++ Standard: Contents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;標準規格の文章はtexで書かれており、そのソースコードは以下で2011年8月16日以降のものについて(つまりN3291より後、N3337より前)公開されている。&lt;br /&gt;
&lt;a href=&#34;https://github.com/cplusplus/draft&#34; target=&#34;_blank&#34;&gt;cplusplus/draft: C++ standards drafts&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;https://cpprefjp.github.io/international-standard.html#iso-cpp-committee&#34; id=&#34;iso-cpp-committee&#34;&gt;用語: 国際標準規格を定める組織&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;C++標準化委員会&lt;/strong&gt; (C++ Standards Committee): C++ の国際標準規格を策定する団体。
  組織としての位置づけはISO/IEC JTC1/SC22/WG21になる。
  &lt;strong&gt;国際標準化機構&lt;/strong&gt; (ISO; international organization for standardization) および&lt;strong&gt;国際電気標準会議&lt;/strong&gt; (IEC; International Electronics Commission) はそれぞれ様々な規格の標準化団体である。
  &lt;strong&gt;第一合同技術委員会&lt;/strong&gt; (JTC1; Joint Technical Committee 1) は ISO/IEC の下で情報技術の標準化を行う団体である。
  下部組織の SC22 はプログラム言語の標準化を行う&lt;strong&gt;副委員会&lt;/strong&gt; (SC; subcommittee) である。
  C++標準化委員会は WG21 という&lt;strong&gt;作業グループ&lt;/strong&gt; (WG; working group) である。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CWG&lt;/strong&gt; (Core working group): C++標準化委員会の内、コア言語機能の策定を行う作業グループ&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;LWG&lt;/strong&gt; (Library working group): C++標準化委員会の内、標準ライブラリ機能の策定を行う作業グループ&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NB&lt;/strong&gt; (national body) または&lt;strong&gt;MB/NC&lt;/strong&gt; (member body/national committee): C++標準化委員会の正会員つまり各国から派遣される団体のこと。本来は member body は ISO での名称で、national committee は IEC での名称。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://cpprefjp.github.io/international-standard.html#iso-cpp-documents&#34; id=&#34;iso-cpp-documents&#34;&gt;用語: 国際標準規格の文書&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;提案文書&lt;/strong&gt; (proposal paper): 標準規格の変更についての提案文書&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;問題&lt;/strong&gt; (issue): C++標準規格の問題や課題のこと&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;欠陥&lt;/strong&gt; (defect): C++標準規格に含まれるいわば &#34;バグ&#34; のこと&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DR&lt;/strong&gt; (defect report, defect resolution): 委員会で承認された欠陥の報告または欠陥の修正のこと&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NAD&lt;/strong&gt; (not a defect): 委員会により標準規格の欠陥ではないとされた問題のこと&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DRWP&lt;/strong&gt;: 最新の規格原案に取り込み済みの DR のこと&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WD&lt;/strong&gt; (working draft): 作業原案&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CD&lt;/strong&gt; (committee draft): 委員会原案&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FCD&lt;/strong&gt; (final committee draft): 最終委員会原案&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DIS&lt;/strong&gt; (draft international standard): 国際規格案&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FDIS&lt;/strong&gt; (final draft international standard): 最終国際規格案&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IS&lt;/strong&gt; (international standard): 国際規格&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TR&lt;/strong&gt; (technical report): 技術報告書。用例: TR1&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TS&lt;/strong&gt; (technical specifications): 技術仕様書。用例: Concepts TS&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;標準規格&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.iso.org/standard/79358.html&#34; target=&#34;_blank&#34;&gt;ISO/IEC 14882:2020 - Programming languages — C++&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.iso.org/standard/68564.html&#34; target=&#34;_blank&#34;&gt;ISO/IEC 14882:2017 - Programming languages -- C++&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.iso.org/standard/64029.html&#34; target=&#34;_blank&#34;&gt;ISO/IEC 14882:2014 - Information technology -- Programming languages -- C++&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.iso.org/standard/50372.html&#34; target=&#34;_blank&#34;&gt;ISO/IEC 14882:2011 - Information technology -- Programming languages -- C++&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.iso.org/standard/38110.html&#34; target=&#34;_blank&#34;&gt;ISO/IEC 14882:2003 - Programming languages -- C++&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.iso.org/standard/25845.html&#34; target=&#34;_blank&#34;&gt;ISO/IEC 14882:1998 - Programming languages -- C++&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://webdesk.jsa.or.jp/books/W11M0090/index/?bunsyo_id=JIS%20X%203014:2003&#34; target=&#34;_blank&#34;&gt;JIS X 3014:2003 プログラム言語Ｃ＋＋／Information Technology -- Programming languages -- C++ 日本規格協会 JSA Webdesk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://en.cppreference.com/w/cpp/experimental&#34; target=&#34;_blank&#34;&gt;Experimental C++ Features - cppreference.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/29115656/which-draft-is-closest-to-the-c14-standard&#34; target=&#34;_blank&#34;&gt;c++ - Which draft is closest to the C++14 standard? - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/81656/where-do-i-find-the-current-c-or-c-standard-documents&#34; target=&#34;_blank&#34;&gt;Where do I find the current C or C++ standard documents? - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/11053960/how-are-the-cplusplus-directive-defined-in-various-compilers&#34; target=&#34;_blank&#34;&gt;c++ - How are the __cplusplus directive defined in various compilers? - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/&#34; target=&#34;_blank&#34;&gt;ISO/IEC JTC1/SC22/WG21 - The C++ Standards Committee - ISOCPP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/%E5%9B%BD%E9%9A%9B%E6%A8%99%E6%BA%96%E5%8C%96%E6%A9%9F%E6%A7%8B&#34; target=&#34;_blank&#34;&gt;国際標準化機構 - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/%E5%9B%BD%E9%9A%9B%E9%9B%BB%E6%B0%97%E6%A8%99%E6%BA%96%E4%BC%9A%E8%AD%B0&#34; target=&#34;_blank&#34;&gt;国際電気標準会議 - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/ISO/IEC_JTC_1&#34; target=&#34;_blank&#34;&gt;ISO/IEC JTC 1 - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/ISO/IEC_JTC_1/SC_22&#34; target=&#34;_blank&#34;&gt;ISO/IEC JTC 1/SC 22 - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
</feed>
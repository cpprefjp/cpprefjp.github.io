<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2022-05-24T14:44:41.458792</updated>
  <id>9a695dee-912d-4d8b-996a-f59b0519357c</id>

  
    <entry>
      <title>constexpr if 文 -- if_constexpr: 微修正</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/if_constexpr.html"/>
      <id>9bc4c4db7774260b855d984419446237e95beec5:lang/cpp17/if_constexpr.md</id>
      <updated>2020-04-03T12:36:31+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/if_constexpr.md b/lang/cpp17/if_constexpr.md
index 753640f51..4d75b89f8 100644
--- a/lang/cpp17/if_constexpr.md
+++ b/lang/cpp17/if_constexpr.md
@@ -259,7 +259,7 @@ N3322 では、`static_assert` と同じように、
 
 - (A) 関数やメンバ関数の静的な条件分岐については、従来はテンプレート特殊化やSFINAEが用いられた。
   静的な条件分岐を用いればより自然に実装することが可能である。
-- (B) メンバ変数の静的な条件分岐については、従来は再帰的なクラスの派生とEBO(空基底最適化)の技法を用いた。
+- (B) メンバ変数の静的な条件分岐については、従来は再帰的なクラスの派生とEBO(空の基底の最適化)の技法を用いた。
   メンバ変数の条件分岐毎にクラスを派生させる必要があり、また派生による様々な制限を避けるために複雑になる。
 - (C) ブロックスコープにおける静的な条件分岐に関しては、従来は分岐毎に処理を新しいテンプレートを定義して委譲する必要があった。
   処理の間で変数を明示的に共有するために処理が複雑になる。処理が複数箇所に分断されるため読みにくく、また記述も煩雑である。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>weak_ptr -- Merge pull request #973 from cpprefjp/fix_typos</title>
      <link href="https://cpprefjp.github.io/reference/memory/weak_ptr.html"/>
      <id>e3fd535ba7e914673e9bd1d6d1017122f51e5d1e:reference/memory/weak_ptr.md</id>
      <updated>2022-05-22T16:28:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/memory/weak_ptr.md b/reference/memory/weak_ptr.md
index bfbf76b03..fdc5ce63b 100644
--- a/reference/memory/weak_ptr.md
+++ b/reference/memory/weak_ptr.md
@@ -62,7 +62,7 @@ namespace std {
 
 | 名前 | 説明 | 対応バージョン |
 |---------------------------------------------|------------------------------------|-------|
-| [`(deduction_guide)`](shared_ptr/op_deduction_guide.md) | クラステンプレートの推論補助 | C++17 |
+| [`(deduction_guide)`](weak_ptr/op_deduction_guide.md) | クラステンプレートの推論補助 | C++17 |
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>before -- Merge pull request #973 from cpprefjp/fix_typos</title>
      <link href="https://cpprefjp.github.io/reference/typeinfo/type_info/before.html"/>
      <id>e3fd535ba7e914673e9bd1d6d1017122f51e5d1e:reference/typeinfo/type_info/before.md</id>
      <updated>2022-05-22T16:28:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/typeinfo/type_info/before.md b/reference/typeinfo/type_info/before.md
index 3c6d51dcf..ea88ce649 100644
--- a/reference/typeinfo/type_info/before.md
+++ b/reference/typeinfo/type_info/before.md
@@ -5,7 +5,8 @@
 * function[meta id-type]
 
 ```cpp
-bool before(const type_info&amp;amp; rhs) const noexcept;
+bool before(const type_info&amp;amp; rhs) const;          // C++03
+bool before(const type_info&amp;amp; rhs) const noexcept; // C++11
 ```
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>name -- Merge pull request #973 from cpprefjp/fix_typos</title>
      <link href="https://cpprefjp.github.io/reference/typeinfo/type_info/name.html"/>
      <id>e3fd535ba7e914673e9bd1d6d1017122f51e5d1e:reference/typeinfo/type_info/name.md</id>
      <updated>2022-05-22T16:28:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/typeinfo/type_info/name.md b/reference/typeinfo/type_info/name.md
index f620b8ddd..70936afbc 100644
--- a/reference/typeinfo/type_info/name.md
+++ b/reference/typeinfo/type_info/name.md
@@ -5,7 +5,8 @@
 * function[meta id-type]
 
 ```cpp
-const char* name() const noexcept;
+const char* name() const;          // C++03
+const char* name() const noexcept; // C++11
 ```
 
 ## 概要
@@ -40,7 +41,7 @@ int main()
 ```
 * name()[color ff0000]
 
-### 出力
+### 出力例
 ```
 i
 c
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator== -- Merge pull request #973 from cpprefjp/fix_typos</title>
      <link href="https://cpprefjp.github.io/reference/typeinfo/type_info/op_equal.html"/>
      <id>e3fd535ba7e914673e9bd1d6d1017122f51e5d1e:reference/typeinfo/type_info/op_equal.md</id>
      <updated>2022-05-22T16:28:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/typeinfo/type_info/op_equal.md b/reference/typeinfo/type_info/op_equal.md
index 38265f67b..578f08f1a 100644
--- a/reference/typeinfo/type_info/op_equal.md
+++ b/reference/typeinfo/type_info/op_equal.md
@@ -5,8 +5,9 @@
 * function[meta id-type]
 
 ```cpp
-bool operator==(const type_info&amp;amp; rhs) const noexcept;            // C++20まで
-constexpr bool operator==(const type_info&amp;amp; rhs) const noexcept;  // C++23から
+bool operator==(const type_info&amp;amp; rhs) const;                     // C++03
+bool operator==(const type_info&amp;amp; rhs) const noexcept;            // C++11
+constexpr bool operator==(const type_info&amp;amp; rhs) const noexcept;  // C++23
 ```
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator!= -- Merge pull request #973 from cpprefjp/fix_typos</title>
      <link href="https://cpprefjp.github.io/reference/typeinfo/type_info/op_not_equal.html"/>
      <id>e3fd535ba7e914673e9bd1d6d1017122f51e5d1e:reference/typeinfo/type_info/op_not_equal.md</id>
      <updated>2022-05-22T16:28:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/typeinfo/type_info/op_not_equal.md b/reference/typeinfo/type_info/op_not_equal.md
index cbbc4b4d3..f7358380c 100644
--- a/reference/typeinfo/type_info/op_not_equal.md
+++ b/reference/typeinfo/type_info/op_not_equal.md
@@ -5,11 +5,13 @@
 * function[meta id-type]
 
 ```cpp
-bool operator!=(const type_info&amp;amp; rhs) const noexcept;
+bool operator!=(const type_info&amp;amp; rhs) const;          // C++03
+bool operator!=(const type_info&amp;amp; rhs) const noexcept; // C++11
 ```
 
 ## 概要
 2つの型が異なるかを判定する
+（C++20からは、`operator＝=`から導出される）
 
 
 ## 戻り値
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>before -- fix typo and improve description in type_info</title>
      <link href="https://cpprefjp.github.io/reference/typeinfo/type_info/before.html"/>
      <id>77bcdf20a0964ff4a4eea56363a0f079a21c2124:reference/typeinfo/type_info/before.md</id>
      <updated>2022-05-21T13:04:00+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/typeinfo/type_info/before.md b/reference/typeinfo/type_info/before.md
index 3c6d51dcf..ea88ce649 100644
--- a/reference/typeinfo/type_info/before.md
+++ b/reference/typeinfo/type_info/before.md
@@ -5,7 +5,8 @@
 * function[meta id-type]
 
 ```cpp
-bool before(const type_info&amp;amp; rhs) const noexcept;
+bool before(const type_info&amp;amp; rhs) const;          // C++03
+bool before(const type_info&amp;amp; rhs) const noexcept; // C++11
 ```
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>name -- fix typo and improve description in type_info</title>
      <link href="https://cpprefjp.github.io/reference/typeinfo/type_info/name.html"/>
      <id>77bcdf20a0964ff4a4eea56363a0f079a21c2124:reference/typeinfo/type_info/name.md</id>
      <updated>2022-05-21T13:04:00+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/typeinfo/type_info/name.md b/reference/typeinfo/type_info/name.md
index f620b8ddd..70936afbc 100644
--- a/reference/typeinfo/type_info/name.md
+++ b/reference/typeinfo/type_info/name.md
@@ -5,7 +5,8 @@
 * function[meta id-type]
 
 ```cpp
-const char* name() const noexcept;
+const char* name() const;          // C++03
+const char* name() const noexcept; // C++11
 ```
 
 ## 概要
@@ -40,7 +41,7 @@ int main()
 ```
 * name()[color ff0000]
 
-### 出力
+### 出力例
 ```
 i
 c
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator== -- fix typo and improve description in type_info</title>
      <link href="https://cpprefjp.github.io/reference/typeinfo/type_info/op_equal.html"/>
      <id>77bcdf20a0964ff4a4eea56363a0f079a21c2124:reference/typeinfo/type_info/op_equal.md</id>
      <updated>2022-05-21T13:04:00+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/typeinfo/type_info/op_equal.md b/reference/typeinfo/type_info/op_equal.md
index 38265f67b..578f08f1a 100644
--- a/reference/typeinfo/type_info/op_equal.md
+++ b/reference/typeinfo/type_info/op_equal.md
@@ -5,8 +5,9 @@
 * function[meta id-type]
 
 ```cpp
-bool operator==(const type_info&amp;amp; rhs) const noexcept;            // C++20まで
-constexpr bool operator==(const type_info&amp;amp; rhs) const noexcept;  // C++23から
+bool operator==(const type_info&amp;amp; rhs) const;                     // C++03
+bool operator==(const type_info&amp;amp; rhs) const noexcept;            // C++11
+constexpr bool operator==(const type_info&amp;amp; rhs) const noexcept;  // C++23
 ```
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator!= -- fix typo and improve description in type_info</title>
      <link href="https://cpprefjp.github.io/reference/typeinfo/type_info/op_not_equal.html"/>
      <id>77bcdf20a0964ff4a4eea56363a0f079a21c2124:reference/typeinfo/type_info/op_not_equal.md</id>
      <updated>2022-05-21T13:04:00+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/typeinfo/type_info/op_not_equal.md b/reference/typeinfo/type_info/op_not_equal.md
index cbbc4b4d3..f7358380c 100644
--- a/reference/typeinfo/type_info/op_not_equal.md
+++ b/reference/typeinfo/type_info/op_not_equal.md
@@ -5,11 +5,13 @@
 * function[meta id-type]
 
 ```cpp
-bool operator!=(const type_info&amp;amp; rhs) const noexcept;
+bool operator!=(const type_info&amp;amp; rhs) const;          // C++03
+bool operator!=(const type_info&amp;amp; rhs) const noexcept; // C++11
 ```
 
 ## 概要
 2つの型が異なるかを判定する
+（C++20からは、`operator＝=`から導出される）
 
 
 ## 戻り値
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>weak_ptr -- fix wrong link in weak_ptr</title>
      <link href="https://cpprefjp.github.io/reference/memory/weak_ptr.html"/>
      <id>e839c4ddf6bf38a05578cd2a76c20249a1a1d0d1:reference/memory/weak_ptr.md</id>
      <updated>2022-05-21T12:46:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/memory/weak_ptr.md b/reference/memory/weak_ptr.md
index bfbf76b03..fdc5ce63b 100644
--- a/reference/memory/weak_ptr.md
+++ b/reference/memory/weak_ptr.md
@@ -62,7 +62,7 @@ namespace std {
 
 | 名前 | 説明 | 対応バージョン |
 |---------------------------------------------|------------------------------------|-------|
-| [`(deduction_guide)`](shared_ptr/op_deduction_guide.md) | クラステンプレートの推論補助 | C++17 |
+| [`(deduction_guide)`](weak_ptr/op_deduction_guide.md) | クラステンプレートの推論補助 | C++17 |
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>basic_osyncstream -- 見出しの修正</title>
      <link href="https://cpprefjp.github.io/reference/syncstream/basic_osyncstream.html"/>
      <id>bdb736aa8ea36043cb330c6cbc71db2045120951:reference/syncstream/basic_osyncstream.md</id>
      <updated>2022-05-20T15:48:29+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/syncstream/basic_osyncstream.md b/reference/syncstream/basic_osyncstream.md
index 3eab9bea7..b3f79b0cc 100644
--- a/reference/syncstream/basic_osyncstream.md
+++ b/reference/syncstream/basic_osyncstream.md
@@ -147,9 +147,9 @@ int main()
 ```
 * osyncstream[color ff0000]
 
-###
+### 出力例
 
-``` 出力例
+```
 Hello, World!
 aGoodbye, Planet!
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
</feed>
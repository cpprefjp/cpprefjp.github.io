<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2023-01-19T08:16:04.748471</updated>
  <id>c8fa2c3b-66f6-4b78-b232-b93bf8c74cd3</id>

  
    <entry>
      <title>format_kind -- format_kind : 見出しミスを修正</title>
      <link href="https://cpprefjp.github.io/reference/format/format_kind.html"/>
      <id>61cbf011ad1acf7aecc4eab5853ea65edb6a4e80:reference/format/format_kind.md</id>
      <updated>2023-01-19T17:11:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/format/format_kind.md b/reference/format/format_kind.md
index be59a73ce..84295fbb9 100644
--- a/reference/format/format_kind.md
+++ b/reference/format/format_kind.md
@@ -24,7 +24,7 @@ Rangeの書式種別を取得する変数テンプレート。
 - (2) 入力Rangeの型`R`に応じて、書式種別を取得する
 
 
-## 適格要件
+## テンプレートパラメータ制約
 - (2) : 入力Rangeの型`R`は、const/volatileおよび参照で修飾されていないこと
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>format_kind -- コード修飾漏れを修正</title>
      <link href="https://cpprefjp.github.io/reference/format/format_kind.html"/>
      <id>7f6f300c6b989362ef158ca6852f3feb7577e901:reference/format/format_kind.md</id>
      <updated>2023-01-19T16:37:51+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/format/format_kind.md b/reference/format/format_kind.md
index 0cabf103d..be59a73ce 100644
--- a/reference/format/format_kind.md
+++ b/reference/format/format_kind.md
@@ -21,7 +21,7 @@ namespace std {
 Rangeの書式種別を取得する変数テンプレート。
 
 - (1) プライマリテンプレート。これがインスタンス化されたらプログラムは不適格となる
-- (2) 入力Rangeの型Rに応じて、書式種別を取得する
+- (2) 入力Rangeの型`R`に応じて、書式種別を取得する
 
 
 ## 適格要件
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>unique_copy -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_unique_copy.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/algorithm/ranges_unique_copy.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_unique_copy.md b/reference/algorithm/ranges_unique_copy.md
index ffea34d91..1d5b6e38a 100644
--- a/reference/algorithm/ranges_unique_copy.md
+++ b/reference/algorithm/ranges_unique_copy.md
@@ -46,7 +46,6 @@ namespace std::ranges {
 * indirect_equivalence_relation[link /reference/iterator/indirect_equivalence_relation.md]
 * indirectly_copyable[link /reference/iterator/indirectly_copyable.md]
 * forward_iterator[link /reference/iterator/forward_iterator.md]
-* same_as[link /reference/concepts/same_as.md]
 * iter_value_t[link /reference/iterator/iter_value_t.md]
 * indirectly_copyable_storable[link /reference/iterator/indirectly_copyable_storable.md]
 * projected[link /reference/iterator/projected.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>推論補助 -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/chrono/zoned_time/op_deduction_guide.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/chrono/zoned_time/op_deduction_guide.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/zoned_time/op_deduction_guide.md b/reference/chrono/zoned_time/op_deduction_guide.md
index 55473dcc9..ab6784e80 100644
--- a/reference/chrono/zoned_time/op_deduction_guide.md
+++ b/reference/chrono/zoned_time/op_deduction_guide.md
@@ -53,7 +53,6 @@ namespace std::chrono {
 * conditional_t[link /reference/type_traits/conditional.md]
 * is_convertible[link /reference/type_traits/is_convertible.md]
 * time_zone[link /reference/chrono/time_zone.md]
-* remove_cvref_t[link /reference/type_traits/remove_cvref.md]
 
 ## 概要
 `std::chrono::zoned_time`クラステンプレートの型推論補助。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>assignable_from -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/concepts/assignable_from.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/concepts/assignable_from.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/concepts/assignable_from.md b/reference/concepts/assignable_from.md
index 7c27d2213..950aa7233 100644
--- a/reference/concepts/assignable_from.md
+++ b/reference/concepts/assignable_from.md
@@ -18,7 +18,6 @@ namespace std {
 * is_lvalue_reference_v[link /reference/type_traits/is_lvalue_reference.md]
 * remove_reference_t[link /reference/type_traits/remove_reference.md]
 * common_reference_with[link common_reference_with.md]
-* same_as[link same_as.md]
 
 ## 概要
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>boolean-testable -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/concepts/boolean-testable.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/concepts/boolean-testable.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/concepts/boolean-testable.md b/reference/concepts/boolean-testable.md
index db8d120f9..d285fa1fa 100644
--- a/reference/concepts/boolean-testable.md
+++ b/reference/concepts/boolean-testable.md
@@ -84,9 +84,7 @@ namespace std {
 }
 ```
 * movable[link /reference/concepts/movable.md]
-* same_as[link /reference/concepts/same_as.md]
 * convertible_to[link /reference/concepts/convertible_to.md]
-* remove_cvref_t[link /reference/type_traits/remove_cvref.md]
 * remove_reference_t[link /reference/type_traits/remove_reference.md]
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>common_reference_with -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/concepts/common_reference_with.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/concepts/common_reference_with.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/concepts/common_reference_with.md b/reference/concepts/common_reference_with.md
index 54445f7f4..ed23d35e3 100644
--- a/reference/concepts/common_reference_with.md
+++ b/reference/concepts/common_reference_with.md
@@ -13,7 +13,6 @@ namespace std {
     convertible_to&amp;lt;U, common_reference_t&amp;lt;T, U&amp;gt;&amp;gt;;
 }
 ```
-* same_as[link /reference/concepts/same_as.md]
 * convertible_to[link /reference/concepts/convertible_to.md]
 * common_reference_t[link /reference/type_traits/common_reference.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>common_with -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/concepts/common_with.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/concepts/common_with.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/concepts/common_with.md b/reference/concepts/common_with.md
index 7c24628cf..bed016ee0 100644
--- a/reference/concepts/common_with.md
+++ b/reference/concepts/common_with.md
@@ -23,7 +23,6 @@ namespace std {
         add_lvalue_reference_t&amp;lt;const U&amp;gt;&amp;gt;&amp;gt;;
 }
 ```
-* same_as[link /reference/concepts/same_as.md]
 * common_type_t[link /reference/type_traits/common_type.md]
 * add_lvalue_reference_t[link /reference/type_traits/add_lvalue_reference.md]
 * common_reference_with[link /reference/concepts/common_reference_with.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>format -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/format.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/format.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;format&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;cpp cpp20&#34; title=&#34;C++20で追加&#34;&gt;(C++20)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt;ヘッダでは、書式文字列を使って引数をフォーマットする、いわゆる&lt;code&gt;printf&lt;/code&gt;スタイルのフォーマット関数を提供する。
このフォーマット関数は型安全であり、ユーザー定義型への拡張も可能である。&lt;/p&gt;
&lt;p&gt;書式文字列については&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/format.html&#34;&gt;format&lt;/a&gt;&lt;/code&gt;を参照。&lt;/p&gt;
&lt;h2&gt;フォーマット関数&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/format.html&#34;&gt;format&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;書式文字列を使って引数をフォーマットした文字列を返す (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/format_to.html&#34;&gt;format_to&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;書式文字列を使って引数をフォーマットし、出力イテレータに出力する (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/format_to_n.html&#34;&gt;format_to_n&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;書式文字列を使って引数をフォーマットし、指定した文字数を超えないように出力イテレータに出力する (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/format_to_n_result.html&#34;&gt;format_to_n_result&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;format_to_n&lt;/code&gt;の結果を表す (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/formatted_size.html&#34;&gt;formatted_size&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;書式文字列を使って引数をフォーマットした文字列を保存するのに必要な文字数を返す (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/vformat.html&#34;&gt;vformat&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/format.html&#34;&gt;format&lt;/a&gt;&lt;/code&gt;の非テンプレート版 (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/vformat_to.html&#34;&gt;vformat_to&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/format_to.html&#34;&gt;format_to&lt;/a&gt;&lt;/code&gt;の非テンプレート版 (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;フォーマッター&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/formattable.html&#34;&gt;formattable&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列フォーマット可能 (concept)&lt;/td&gt;
&lt;td&gt;C++23&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/formatter.html&#34;&gt;formatter&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;引数の型に対応する書式文字列の解析、値のフォーマットを担う (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/basic_format_parse_context.html&#34;&gt;basic_format_parse_context&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;書式文字列の解析のコンテキスト (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/basic_format_parse_context.html&#34;&gt;format_parse_context&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;basic_format_parse_context&lt;/code&gt;のマルチバイト文字列版 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/basic_format_parse_context.html&#34;&gt;wformat_parse_context&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;basic_format_parse_context&lt;/code&gt;のワイド文字列版 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/basic_format_context.html&#34;&gt;basic_format_context&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;引数のフォーマットのコンテキスト (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/basic_format_context.html&#34;&gt;format_context&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;basic_format_context&lt;/code&gt;のマルチバイト文字列版 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/basic_format_context.html&#34;&gt;wformat_context&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;basic_format_context&lt;/code&gt;のワイド文字列版 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/range_format.html&#34;&gt;range_format&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Rangeの書式種別 (enum)&lt;/td&gt;
&lt;td&gt;C++23&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/format_kind.html&#34;&gt;format_kind&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定したRangeの書式種別を取得する (variable)&lt;/td&gt;
&lt;td&gt;C++23&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/range_formatter.md.nolink&#34;&gt;range_formatter&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Rangeに対する書式文字列の解析、値のフォーマットを行う (class template)&lt;/td&gt;
&lt;td&gt;C++23&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/range-default-formatter.md.nolink&#34;&gt;range-default-formatter&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Rangeに対する共通の書式文字列の解析、値のフォーマットを行う説明専用クラス (class template)&lt;/td&gt;
&lt;td&gt;C++23&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;引数&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/basic_format_arg.html&#34;&gt;basic_format_arg&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;引数1つへのアクセスを提供する (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/visit_format_arg.html&#34;&gt;visit_format_arg&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;basic_format_arg&lt;/code&gt;オブジェクトが現在保持している型に対応する関数を呼び出す (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/make_format_args.html&#34;&gt;make_format_args&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;可変長引数から&lt;code&gt;basic_format_arg&lt;/code&gt;の列を構築する (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/make_format_args.html&#34;&gt;make_wformat_args&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;make_wformat_args&lt;/code&gt;のワイド文字列版 (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/basic_format_args.html&#34;&gt;basic_format_args&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;引数列へのアクセスを提供する (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/basic_format_args.html&#34;&gt;format_args&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;basic_format_args&lt;/code&gt;のマルチバイト文字列版 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/basic_format_args.html&#34;&gt;wformat_args&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;basic_format_args&lt;/code&gt;のワイド文字列版 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;例外&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/format_error.html&#34;&gt;format_error&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;フォーマットの失敗を表す例外クラス (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++20&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: ??&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://timsong-cpp.github.io/cppwp/format&#34; target=&#34;_blank&#34;&gt;Working Draft, Standard for Programming Language C++ [format]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p0645r10.html&#34; target=&#34;_blank&#34;&gt;P0645R10 Text Formatting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>format_kind -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/format/format_kind.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/format/format_kind.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/format/format_kind.md b/reference/format/format_kind.md
new file mode 100644
index 000000000..0cabf103d
--- /dev/null
+++ b/reference/format/format_kind.md
@@ -0,0 +1,64 @@
+# format_kind
+* format[meta header]
+* std[meta namespace]
+* variable[meta id-type]
+* cpp23[meta cpp]
+
+```cpp
+namespace std {
+  template &amp;lt;class R&amp;gt;
+  constexpr unspecified format_kind = unspecified;   // (1) C++23
+
+  template &amp;lt;ranges::input_range R&amp;gt;
+    requires same_as&amp;lt;R, remove_cvref_t&amp;lt;R&amp;gt;&amp;gt;
+  constexpr range_format format_kind&amp;lt;R&amp;gt; = see below; // (2) C++23
+}
+```
+* range_format[link range_format.md]
+* ranges::input_range[link /reference/ranges/input_range.md]
+
+## 概要
+Rangeの書式種別を取得する変数テンプレート。
+
+- (1) プライマリテンプレート。これがインスタンス化されたらプログラムは不適格となる
+- (2) 入力Rangeの型Rに応じて、書式種別を取得する
+
+
+## 適格要件
+- (2) : 入力Rangeの型`R`は、const/volatileおよび参照で修飾されていないこと
+
+
+## 効果
+以下、(2)について記載する。
+
+- [`same_as`](/reference/concepts/same_as.md)`&amp;lt;`[`remove_cvref_t`](/reference/type_traits/remove_cvref.md)`&amp;lt;`[`ranges::range_reference_t`](/reference/ranges/range_reference_t.md)`&amp;lt;R&amp;gt;&amp;gt;, R&amp;gt;`が`true`である場合、値[`range_format::disabled`](range_format.md)をもつ
+    - 例として、[`std::filesystem::path`](/reference/filesystem/path.md)のような再帰的な型がこれに相当する
+- `R::key_type`が有効な式である場合 ([`std::map`](/reference/map/map.md)や[`std::set`](/reference/set/set.md)が相当する)、
+    - `R::mapped_type`が有効な式であり、[`remove_cvref_t`](/reference/type_traits/remove_cvref.md)`&amp;lt;`[`ranges::range_reference_t`](/reference/ranges/range_reference_t.md)`&amp;lt;R&amp;gt;&amp;gt;`を`U`として、`U`が[`std::pair`](/reference/utility/pair.md)の特殊化もしくは`U`が[`std::tuple`](/reference/tuple/tuple.md)の特殊化で要素数が2の場合、値[`range_format::map`](range_format.md)をもつ
+    - そうでない場合、値[`range_format::set`](range_format.md)をもつ
+- そうでない場合、値[`range_format::sequence`](range_format.md)をもつ
+
+
+## 備考
+- ユーザーは、この型の特殊化を定義できる
+    - ただし、その特殊化は定数式であり、型として`const` [`range_format`](range_format.md)をもつこと
+
+
+## バージョン
+### 言語
+- C++23
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
+
+
+## 関連項目
+- [`format_kind`](range_format.md)
+- [`formatter`](formatter.md)
+
+
+## 参照
+- [P2286R8 Formatting Ranges](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p2286r8.html)
+- [P2585R1 Improve default container formatting](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p2585r1.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>formattable -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/format/formattable.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/format/formattable.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/format/formattable.md b/reference/format/formattable.md
index b10613e01..7932564e3 100644
--- a/reference/format/formattable.md
+++ b/reference/format/formattable.md
@@ -25,10 +25,8 @@ namespace std {
 ```
 * formatter[link formatter.md]
 * semiregular[link /reference/concepts/semiregular.md]
-* remove_cvref_t[link /reference/type_traits/remove_cvref.md]
 * basic_format_context[link basic_format_context.md]
 * basic_format_parse_context[link basic_format_parse_context.md]
-* same_as[link /reference/concepts/same_as.md]
 
 ## 概要
 `formattable`は、文字列フォーマット可能であることを表すコンセプトである。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>range_format -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/format/range_format.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/format/range_format.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/format/range_format.md b/reference/format/range_format.md
new file mode 100644
index 000000000..eca360a27
--- /dev/null
+++ b/reference/format/range_format.md
@@ -0,0 +1,55 @@
+# range_format
+* format[meta header]
+* std[meta namespace]
+* enum[meta id-type]
+* cpp23[meta cpp]
+
+```cpp
+namespace std {
+  enum class range_format {
+    disabled,
+    map,
+    set,
+    sequence,
+    string,
+    debug_string
+  };
+}
+```
+
+## 概要
+Rangeの書式種別を表す列挙型。
+
+
+| 列挙値         | 説明 |
+|----------------|------|
+| `disabled`     | 書式化ができないRangeであることを表す値 |
+| `map`          | [`std::map`](/reference/map/map.md)や[`std::flat_map`](/reference/flat_map/flat_map.md.nolink)向けの書式。`{k1: v1, k2: v2}` |
+| `set`          | [`std::set`](/reference/set/set.md)や[`std::flat_set`](/reference/flat_set/flat_set.md.nolink)向けの書式。`{v1, v2}` |
+| `sequence`     | [`std::vector`](/reference/vector/vector.md)や[`std::array`](/reference/array/array.md)向けの書式。`[v1, v2]`|
+| `string`       | 文字列向けの書式。`abc` |
+| `debug_string` | デバッグ文字列向けの書式。`\nabc` |
+
+
+## 備考
+- `disable`は値0であるため、`bool`型に変換して有効かどうかを判定するための使用できる
+
+
+## バージョン
+### 言語
+- C++23
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
+
+
+## 関連項目
+- [`format_kind`](format_kind.md)
+- [`formatter`](formatter.md)
+
+
+## 参照
+- [P2286R8 Formatting Ranges](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p2286r8.html)
+- [P2585R1 Improve default container formatting](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p2585r1.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator new -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/generator/generator/promise_type/op_new.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/generator/generator/promise_type/op_new.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/generator/generator/promise_type/op_new.md b/reference/generator/generator/promise_type/op_new.md
index 2127e113a..e8fe66e71 100644
--- a/reference/generator/generator/promise_type/op_new.md
+++ b/reference/generator/generator/promise_type/op_new.md
@@ -17,7 +17,6 @@ template&amp;lt;class This, class Alloc, class... Args&amp;gt;
   requires same_as&amp;lt;Allocator, void&amp;gt; || convertible_to&amp;lt;const Alloc&amp;amp;, Allocator&amp;gt;
 void* operator new(size_t size, const This&amp;amp;, allocator_arg_t, const Alloc&amp;amp; alloc, const Args&amp;amp;...);
 ```
-* same_as[link /reference/concepts/same_as.md]
 * default_initializable[link /reference/concepts/default_initializable.md]
 * convertible_to[link /reference/concepts/convertible_to.md]
 * allocator_arg_t[link /reference/memory/allocator_arg_t.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>yield_value -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/generator/generator/promise_type/yield_value.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/generator/generator/promise_type/yield_value.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/generator/generator/promise_type/yield_value.md b/reference/generator/generator/promise_type/yield_value.md
index 021e09c1d..e2fdae00b 100644
--- a/reference/generator/generator/promise_type/yield_value.md
+++ b/reference/generator/generator/promise_type/yield_value.md
@@ -28,9 +28,7 @@ auto yield_value(ranges::elements_of&amp;lt;Rng, Alloc&amp;gt; r) noexcept; // (4)
 * ranges::range_reference_t[link /reference/ranges/range_reference_t.md]
 * remove_reference_t[link /reference/type_traits/remove_reference.md]
 * is_rvalue_reference_v[link /reference/type_traits/is_rvalue_reference.md]
-* remove_cvref_t[link /reference/type_traits/remove_cvref.md]
 * constructible_from[link /reference/concepts/constructible_from.md]
-* same_as[link /reference/concepts/same_as.md]
 * convertible_to[link /reference/concepts/convertible_to.md]
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>bidirectional_iterator -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/iterator/bidirectional_iterator.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/iterator/bidirectional_iterator.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/bidirectional_iterator.md b/reference/iterator/bidirectional_iterator.md
index d8259b114..c85f4c49b 100644
--- a/reference/iterator/bidirectional_iterator.md
+++ b/reference/iterator/bidirectional_iterator.md
@@ -20,7 +20,6 @@ namespace std {
 * derived_from[link /reference/concepts/derived_from.md]
 * ITER_CONCEPT[link /reference/iterator/input_iterator.md#iter_concept]
 * bidirectional_iterator_tag[link iterator_tag.md]
-* same_as[link /reference/concepts/same_as.md]
 
 ## 概要
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>common_iterator -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/iterator/common_iterator.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/iterator/common_iterator.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/common_iterator.md b/reference/iterator/common_iterator.md
index bfe04e2ad..f6d48e0d4 100644
--- a/reference/iterator/common_iterator.md
+++ b/reference/iterator/common_iterator.md
@@ -35,7 +35,6 @@ namespace std {
 ```
 * input_or_output_iterator[link /reference/iterator/input_or_output_iterator.md]
 * sentinel_for[link /reference/iterator/sentinel_for.md]
-* same_as[link /reference/concepts/same_as.md]
 * copyable[link /reference/concepts/copyable.md]
 * variant[link /reference/variant/variant.md]
 * incrementable_traits[link /reference/iterator/incrementable_traits.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>contiguous_iterator -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/iterator/contiguous_iterator.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/iterator/contiguous_iterator.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/contiguous_iterator.md b/reference/iterator/contiguous_iterator.md
index aee5b0c82..0271281b1 100644
--- a/reference/iterator/contiguous_iterator.md
+++ b/reference/iterator/contiguous_iterator.md
@@ -23,9 +23,7 @@ namespace std {
 * contiguous_iterator_tag[link /reference/iterator/iterator_tag.md]
 * is_lvalue_reference_v[link /reference/type_traits/is_lvalue_reference.md]
 * iter_reference_t[link /reference/iterator/iter_reference_t.md]
-* same_as[link /reference/concepts/same_as.md]
 * iter_value_t[link /reference/iterator/iter_value_t.md]
-* remove_cvref_t[link /reference/type_traits/remove_cvref.md]
 * to_address[link /reference/memory/to_address.md]
 * add_pointer_t[link /reference/type_traits/add_pointer.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>incrementable -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/iterator/incrementable.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/iterator/incrementable.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/incrementable.md b/reference/iterator/incrementable.md
index 7014666de..0ca128aff 100644
--- a/reference/iterator/incrementable.md
+++ b/reference/iterator/incrementable.md
@@ -17,7 +17,6 @@ namespace std {
 ```
 * regular[link /reference/concepts/regular.md]
 * weakly_incrementable[link /reference/iterator/weakly_incrementable.md]
-* same_as[link /reference/concepts/same_as.md]
 
 ## 概要
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>incrementable_traits -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/iterator/incrementable_traits.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/iterator/incrementable_traits.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/incrementable_traits.md b/reference/iterator/incrementable_traits.md
index fe12f1005..5315ed5ce 100644
--- a/reference/iterator/incrementable_traits.md
+++ b/reference/iterator/incrementable_traits.md
@@ -111,7 +111,6 @@ int main() {
 }
 ```
 * std::incrementable_traits[color ff0000]
-* same_as[link /reference/concepts/same_as.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>indirect_result_t -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/iterator/indirect_result_t.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/iterator/indirect_result_t.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/indirect_result_t.md b/reference/iterator/indirect_result_t.md
index 5f6238a9e..40ff43927 100644
--- a/reference/iterator/indirect_result_t.md
+++ b/reference/iterator/indirect_result_t.md
@@ -41,7 +41,6 @@ int main() {
 }
 ```
 * std::indirect_result_t[color ff0000]
-* same_as[link /reference/concepts/same_as.md]
 
 ### 出力
 ```
@@ -58,4 +57,4 @@ int main() {
 
 ## 参照
 
-- [P0896R4 The One Ranges Proposal (was Merging the Ranges TS)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0896r4.pdf)
\ No newline at end of file
+- [P0896R4 The One Ranges Proposal (was Merging the Ranges TS)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0896r4.pdf)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>indirectly_readable_traits -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/iterator/indirectly_readable_traits.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/iterator/indirectly_readable_traits.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/indirectly_readable_traits.md b/reference/iterator/indirectly_readable_traits.md
index d4b10579c..c8fbdf2f6 100644
--- a/reference/iterator/indirectly_readable_traits.md
+++ b/reference/iterator/indirectly_readable_traits.md
@@ -129,7 +129,6 @@ int main() {
 }
 ```
 * std::indirectly_readable_traits[color ff0000]
-* same_as[link /reference/concepts/same_as.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>indirectly_writable -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/iterator/indirectly_writable.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/iterator/indirectly_writable.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/indirectly_writable.md b/reference/iterator/indirectly_writable.md
index 5db006858..2a78cad5f 100644
--- a/reference/iterator/indirectly_writable.md
+++ b/reference/iterator/indirectly_writable.md
@@ -41,7 +41,6 @@ namespace std {
 indirectly_readable&amp;lt;Out&amp;gt; &amp;amp;&amp;amp; same_as&amp;lt;iter_value_t&amp;lt;Out&amp;gt;, decay_t&amp;lt;T&amp;gt;&amp;gt;
 ```
 * indirectly_readable[link indirectly_readable.md]
-* same_as[link /reference/concepts/same_as.md]
 * iter_value_t[link /reference/iterator/iter_value_t.md]
 * decay_t[link /reference/type_traits/decay.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>iter_difference_t -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/iterator/iter_difference_t.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/iterator/iter_difference_t.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/iter_difference_t.md b/reference/iterator/iter_difference_t.md
index 520f1e012..b0610cbc5 100644
--- a/reference/iterator/iter_difference_t.md
+++ b/reference/iterator/iter_difference_t.md
@@ -10,7 +10,6 @@ namespace std {
   using iter_difference_t = /*see below*/;
 }
 ```
-* remove_cvref_t[link /reference/type_traits/remove_cvref.md]
 
 ## 概要
 
@@ -63,4 +62,4 @@ int main() {
 
 ## 参照
 
-- [P0896R4 The One Ranges Proposal (was Merging the Ranges TS)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0896r4.pdf)
\ No newline at end of file
+- [P0896R4 The One Ranges Proposal (was Merging the Ranges TS)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0896r4.pdf)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>projected -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/iterator/projected.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/iterator/projected.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/projected.md b/reference/iterator/projected.md
index 2f9345b37..3e53a7331 100644
--- a/reference/iterator/projected.md
+++ b/reference/iterator/projected.md
@@ -24,7 +24,6 @@ namespace std {
 ```
 * indirectly_readable[link /reference/iterator/indirectly_readable.md]
 * indirectly_regular_unary_invocable[link /reference/iterator/indirectly_unary_invocable.md]
-* remove_cvref_t[link /reference/type_traits/remove_cvref.md]
 * indirect_result_t[link /reference/iterator/indirect_result_t.md]
 * incrementable_traits[link /reference/iterator/incrementable_traits.md]
 * iter_difference_t[link /reference/iterator/iter_difference_t.md]
@@ -66,7 +65,6 @@ int main() {
 ```
 * std::projected[color ff0000]
 * identity[link /reference/functional/identity.md]
-* same_as[link /reference/concepts/same_as.md]
 * indirectly_readable[link /reference/iterator/indirectly_readable.md]
 * iter_difference_t[link /reference/iterator/iter_difference_t.md]
 * iter_value_t[link /reference/iterator/iter_value_t.md]
@@ -95,4 +93,4 @@ int main() {
 
 ## 参照
 
-- [P0896R4 The One Ranges Proposal (was Merging the Ranges TS)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0896r4.pdf)
\ No newline at end of file
+- [P0896R4 The One Ranges Proposal (was Merging the Ranges TS)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0896r4.pdf)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>random_access_iterator -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/iterator/random_access_iterator.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/iterator/random_access_iterator.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/random_access_iterator.md b/reference/iterator/random_access_iterator.md
index 960b1aea5..fe2a3e5f1 100644
--- a/reference/iterator/random_access_iterator.md
+++ b/reference/iterator/random_access_iterator.md
@@ -30,7 +30,6 @@ namespace std {
 * sized_sentinel_for[link /reference/iterator/sized_sentinel_for.md]
 * iter_difference_t[link /reference/iterator/iter_difference_t.md]
 * iter_reference_t[link /reference/iterator/iter_reference_t.md]
-* same_as[link /reference/concepts/same_as.md]
 
 ## 概要
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sized_sentinel_for -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/iterator/sized_sentinel_for.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/iterator/sized_sentinel_for.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/sized_sentinel_for.md b/reference/iterator/sized_sentinel_for.md
index ba62da114..5f4a285b9 100644
--- a/reference/iterator/sized_sentinel_for.md
+++ b/reference/iterator/sized_sentinel_for.md
@@ -19,7 +19,6 @@ namespace std {
 * sentinel_for[link /reference/iterator/sentinel_for.md]
 * disable_sized_sentinel_for[link disable_sized_sentinel_for.md]
 * remove_cv_t[link /reference/type_traits/remove_cv.md]
-* same_as[link /reference/concepts/same_as.md]
 * iter_difference_t[link /reference/iterator/iter_difference_t.md]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>weakly_incrementable -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/iterator/weakly_incrementable.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/iterator/weakly_incrementable.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/weakly_incrementable.md b/reference/iterator/weakly_incrementable.md
index 26e83ed1c..3fd39e818 100644
--- a/reference/iterator/weakly_incrementable.md
+++ b/reference/iterator/weakly_incrementable.md
@@ -20,7 +20,6 @@ namespace std {
 * movable[link /reference/concepts/movable.md]
 * iter_difference_t[link /reference/iterator/iter_difference_t.md]
 * is-signed-integer-like[link /reference/iterator/is_integer_like.md]
-* same_as[link /reference/concepts/same_as.md]
 
 ## 概要
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>no-throw-input-iterator -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/memory/no-throw-input-iterator.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/memory/no-throw-input-iterator.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/memory/no-throw-input-iterator.md b/reference/memory/no-throw-input-iterator.md
index b831032aa..f79ff1fa2 100644
--- a/reference/memory/no-throw-input-iterator.md
+++ b/reference/memory/no-throw-input-iterator.md
@@ -17,8 +17,6 @@ namespace std {
 * is_lvalue_reference_v[link /reference/type_traits/is_lvalue_reference.md]
 * iter_reference_t[link /reference/iterator/iter_reference_t.md]
 * iter_value_t[link /reference/iterator/iter_value_t.md]
-* same_as[link /reference/concepts/same_as.md]
-* remove_cvref_t[link /reference/type_traits/remove_cvref.md]
 
 ## 概要
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>uniform_random_bit_generator -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/random/uniform_random_bit_generator.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/random/uniform_random_bit_generator.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/uniform_random_bit_generator.md b/reference/random/uniform_random_bit_generator.md
index d1403fac8..03c02d27b 100644
--- a/reference/random/uniform_random_bit_generator.md
+++ b/reference/random/uniform_random_bit_generator.md
@@ -18,7 +18,6 @@ namespace std {
 ```
 * invocable[link /reference/concepts/invocable.md]
 * unsigned_integral[link /reference/concepts/unsigned_integral.md]
-* same_as[link /reference/concepts/same_as.md]
 * invoke_result_t[link /reference/type_traits/invoke_result.md]
 * bool_constant[link /reference/type_traits/bool_constant.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>borrowed_iterator_t -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/ranges/borrowed_iterator_t.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/ranges/borrowed_iterator_t.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/borrowed_iterator_t.md b/reference/ranges/borrowed_iterator_t.md
index 82eb80f1a..f53d9fca0 100644
--- a/reference/ranges/borrowed_iterator_t.md
+++ b/reference/ranges/borrowed_iterator_t.md
@@ -64,7 +64,6 @@ int main() {
 * ranges::dangling[link dangling.md]
 * ranges::subrange[link subrange.md]
 * borrowed_range[link borrowed_range.md]
-* same_as[link /reference/concepts/same_as.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>borrowed_range -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/ranges/borrowed_range.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/ranges/borrowed_range.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/borrowed_range.md b/reference/ranges/borrowed_range.md
index 2a729a772..524a2dfbb 100644
--- a/reference/ranges/borrowed_range.md
+++ b/reference/ranges/borrowed_range.md
@@ -13,7 +13,6 @@ namespace std::ranges {
 * range[link range.md]
 * is_lvalue_reference_v[link /reference/type_traits/is_lvalue_reference.md]
 * enable_borrowed_range[link enable_borrowed_range.md]
-* remove_cvref_t[link /reference/type_traits/remove_cvref.md]
 
 ## 概要
 `borrowed_range`は、Rangeを所有しない`range`を表すコンセプトである。Rangeオブジェクトの左辺値参照は`borrowed_range`である。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>borrowed_subrange_t -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/ranges/borrowed_subrange_t.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/ranges/borrowed_subrange_t.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/borrowed_subrange_t.md b/reference/ranges/borrowed_subrange_t.md
index 7c47718f1..165e437dd 100644
--- a/reference/ranges/borrowed_subrange_t.md
+++ b/reference/ranges/borrowed_subrange_t.md
@@ -61,7 +61,6 @@ int main() {
 * ranges::dangling[link dangling.md]
 * ranges::subrange[link subrange.md]
 * borrowed_range[link borrowed_range.md]
-* same_as[link /reference/concepts/same_as.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>common_range -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/ranges/common_range.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/ranges/common_range.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/common_range.md b/reference/ranges/common_range.md
index 7725434f3..689491fc1 100644
--- a/reference/ranges/common_range.md
+++ b/reference/ranges/common_range.md
@@ -11,7 +11,6 @@ namespace std::ranges {
 }
 ```
 * range[link range.md]
-* same_as[link /reference/concepts/same_as.md]
 * iterator_t[link iterator_t.md]
 * sentinel_t[link sentinel_t.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>common_view -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/ranges/common_view.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/ranges/common_view.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/common_view.md b/reference/ranges/common_view.md
index 355f071a1..c80a81076 100644
--- a/reference/ranges/common_view.md
+++ b/reference/ranges/common_view.md
@@ -96,7 +96,6 @@ int main() {
 ```
 * views::common[color ff0000]
 * views::iota[link iota_view.md]
-* same_as[link /reference/concepts/same_as.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>contiguous_range -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/ranges/contiguous_range.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/ranges/contiguous_range.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/contiguous_range.md b/reference/ranges/contiguous_range.md
index 09451f7d8..381e7dd85 100644
--- a/reference/ranges/contiguous_range.md
+++ b/reference/ranges/contiguous_range.md
@@ -17,7 +17,6 @@ namespace std::ranges {
 * contiguous_iterator[link /reference/iterator/contiguous_iterator.md]
 * iterator_t[link iterator_t.md]
 * ranges::data[link data.md]
-* same_as[link /reference/concepts/same_as.md]
 * add_pointer_t[link /reference/type_traits/add_pointer.md]
 * range_reference_t[link range_reference_t.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>dangling -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/ranges/dangling.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/ranges/dangling.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/dangling.md b/reference/ranges/dangling.md
index 3494df0d7..785115d3e 100644
--- a/reference/ranges/dangling.md
+++ b/reference/ranges/dangling.md
@@ -60,7 +60,6 @@ int main()
 * ranges::find[link /reference/algorithm/ranges_find.md]
 * ranges::subrange[link subrange.md]
 * borrowed_range[link borrowed_range.md]
-* same_as[link /reference/concepts/same_as.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>end -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/ranges/iota_view/end.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/ranges/iota_view/end.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/iota_view/end.md b/reference/ranges/iota_view/end.md
index a2b1e2bb5..e6fb5b4b3 100644
--- a/reference/ranges/iota_view/end.md
+++ b/reference/ranges/iota_view/end.md
@@ -9,7 +9,6 @@
 constexpr auto end() const;                                    // (1)
 constexpr iterator end() const requires same_as&amp;lt;W, Bound&amp;gt;;     // (2)
 ```
-* same_as[link /reference/concepts/same_as.md]
 * iterator[link iterator.md]
 
 ## 概要
@@ -27,7 +26,6 @@ else
 // (2)
 return iterator{bound_};
 ```
-* same_as[link /reference/concepts/same_as.md]
 * unreachable_sentinel_t[link /reference/iterator/unreachable_sentinel_t.md]
 * unreachable_sentinel[link /reference/iterator/unreachable_sentinel_t.md]
 * sentinel[link sentinel.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>size -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/ranges/iota_view/size.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/ranges/iota_view/size.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/iota_view/size.md b/reference/ranges/iota_view/size.md
index 20cf7f485..abab7bdc2 100644
--- a/reference/ranges/iota_view/size.md
+++ b/reference/ranges/iota_view/size.md
@@ -9,7 +9,6 @@
 constexpr auto size() const
   requires (same_as&amp;lt;W, Bound&amp;gt; &amp;amp;&amp;amp; advanceable&amp;lt;W&amp;gt;) || (integral&amp;lt;W&amp;gt; &amp;amp;&amp;amp; integral&amp;lt;Bound&amp;gt;) || sized_sentinel_for&amp;lt;Bound, W&amp;gt;;
 ```
-* same_as[link /reference/concepts/same_as.md]
 * integral[link /reference/concepts/same_as.md]
 * advanceable[italic][link iterator.md]
 * sized_sentinel_for[link /reference/iterator/sized_sentinel_for.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>owning_view -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/ranges/owning_view.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/ranges/owning_view.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/owning_view.md b/reference/ranges/owning_view.md
index 1986248ac..404178683 100644
--- a/reference/ranges/owning_view.md
+++ b/reference/ranges/owning_view.md
@@ -145,7 +145,6 @@ namespace std::ranges {
 * declval[link /reference/utility/declval.md]
 * std::forward[link /reference/utility/forward.md]
 * addressof[link /reference/memory/addressof.md]
-* same_as[link /reference/concepts/same_as.md]
 * iterator_t[link iterator_t.md]
 * sentinel_t[link sentinel_t.md]
 * ranges::begin[link begin.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ref_view -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/ranges/ref_view.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/ranges/ref_view.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/ref_view.md b/reference/ranges/ref_view.md
index 96f37ff23..b18013976 100644
--- a/reference/ranges/ref_view.md
+++ b/reference/ranges/ref_view.md
@@ -127,11 +127,9 @@ namespace std::ranges {
 * range[link range.md]
 * is_object_v[link /reference/type_traits/is_object.md]
 * convertible_to[link /reference/concepts/convertible_to.md]
-* remove_cvref_t[link /reference/type_traits/remove_cvref.md]
 * declval[link /reference/utility/declval.md]
 * std::forward[link /reference/utility/forward.md]
 * addressof[link /reference/memory/addressof.md]
-* same_as[link /reference/concepts/same_as.md]
 * iterator_t[link iterator_t.md]
 * sentinel_t[link sentinel_t.md]
 * ranges::begin[link begin.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>reverse_view -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/ranges/reverse_view.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/ranges/reverse_view.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/reverse_view.md b/reference/ranges/reverse_view.md
index 3b4c80ece..734be3926 100644
--- a/reference/ranges/reverse_view.md
+++ b/reference/ranges/reverse_view.md
@@ -97,7 +97,6 @@ int main() {
 }
 ```
 * views::reverse[color ff0000]
-* same_as[link /reference/concepts/same_as.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>view_interface -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/ranges/view_interface.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/ranges/view_interface.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/view_interface.md b/reference/ranges/view_interface.md
index 1e1765f58..9c75fdd6e 100644
--- a/reference/ranges/view_interface.md
+++ b/reference/ranges/view_interface.md
@@ -12,7 +12,6 @@ namespace std::ranges {
 }
 ```
 * is_class_v[link /reference/type_traits/is_class.md]
-* same_as[link /reference/concepts/same_as.md]
 * remove_cv_t[link /reference/type_traits/remove_cv.md]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>viewable_range -- &lt;format&gt; : range_formatとformat_kindを追加 #1085</title>
      <link href="https://cpprefjp.github.io/reference/ranges/viewable_range.html"/>
      <id>dc3a27eda45160ff1b3cd68f5ad67915805fd0c5:reference/ranges/viewable_range.md</id>
      <updated>2023-01-19T15:52:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/viewable_range.md b/reference/ranges/viewable_range.md
index a4a1927c7..2ec364d46 100644
--- a/reference/ranges/viewable_range.md
+++ b/reference/ranges/viewable_range.md
@@ -16,7 +16,6 @@ namespace std::ranges {
 ```
 * range[link range.md]
 * view[link view.md]
-* remove_cvref_t[link /reference/type_traits/remove_cvref.md]
 * constructible_from[link /reference/concepts/constructible_from.md]
 * is_lvalue_reference_v[link /reference/type_traits/is_lvalue_reference.md]
 * movable[link /reference/concepts/movable.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>from_chars -- charconv: P2291R3 to_chars/from_chars constexpr指定(#1086)</title>
      <link href="https://cpprefjp.github.io/reference/charconv/from_chars.html"/>
      <id>333f7233dc3a0e3aaa10ecce0fa8b2cbd1f46392:reference/charconv/from_chars.md</id>
      <updated>2023-01-19T14:36:19+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/charconv/from_chars.md b/reference/charconv/from_chars.md
index 98dbda731..c19cbb24d 100644
--- a/reference/charconv/from_chars.md
+++ b/reference/charconv/from_chars.md
@@ -8,7 +8,9 @@
 namespace std {
   //整数型用
   from_chars_result from_chars(const char* first, const char* last,
-                               /*see below*/&amp;amp; value, int base = 10);      // (1)
+                               /*see below*/&amp;amp; value, int base = 10);      // (1) C++17
+  constexpr from_chars_result from_chars(const char* first, const char* last,
+                               /*see below*/&amp;amp; value, int base = 10);      // (1) C++23
 
   //浮動小数点型用
   from_chars_result from_chars(const char* first, const char* last, float&amp;amp; value,
@@ -257,3 +259,5 @@ nan
 - [P0067R5: Elementary string conversions, revision 5](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0067r5.html)
 - [P0682R1: Repairing elementary string conversions](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0682r1.html)
 - [How to Use The Newest C++ String Conversion Routines - std::from_chars - Bartek&amp;#39;s coding blog ](https://www.bfilipek.com/2018/12/fromchars.html)
+- [P2291R3: Add Constexpr Modifiers to Functions to_chars and from_chars for Integral Types in `&amp;lt;charconv&amp;gt;` Header](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2291r3.pdf)
+    - C++23での(1)constexpr指定
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>to_chars -- charconv: P2291R3 to_chars/from_chars constexpr指定(#1086)</title>
      <link href="https://cpprefjp.github.io/reference/charconv/to_chars.html"/>
      <id>333f7233dc3a0e3aaa10ecce0fa8b2cbd1f46392:reference/charconv/to_chars.md</id>
      <updated>2023-01-19T14:36:19+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/charconv/to_chars.md b/reference/charconv/to_chars.md
index cb05cd2f4..0805a8b6e 100644
--- a/reference/charconv/to_chars.md
+++ b/reference/charconv/to_chars.md
@@ -7,7 +7,9 @@
 ```cpp
 namespace std {
   //整数型用
-  to_chars_result to_chars(char* first, char* last, /*see below*/ value,  int base = 10); // (1)
+  to_chars_result to_chars(char* first, char* last, /*see below*/ value,  int base = 10);           // (1) C++17
+  constexpr to_chars_result to_chars(char* first, char* last, /*see below*/ value,  int base = 10); // (1) C++23
+
   //boolの変換は禁止
   to_chars_result to_chars(char* first, char* last, bool value,  int base = 10) = delete; // C++20
 
@@ -222,3 +224,5 @@ z
 - [P0682R1: Repairing elementary string conversions](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0682r1.html)
 - [LWG Issue 3266. `to_chars(bool)` should be deleted](https://wg21.cmeerw.net/lwg/issue3266)
 - [Visual Studio 2017 version 15.9.0 - Visual Studio 2017 version 15.9 Release Notes](https://docs.microsoft.com/en-us/visualstudio/releasenotes/vs2017-relnotes#-c)
+- [P2291R3: Add Constexpr Modifiers to Functions to_chars and from_chars for Integral Types in `&amp;lt;charconv&amp;gt;` Header](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2291r3.pdf)
+    - C++23での(1)constexpr指定
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>rethrow_exception -- exception/rethrow_exception: P1675P2対応(#1060)</title>
      <link href="https://cpprefjp.github.io/reference/exception/rethrow_exception.html"/>
      <id>ccc68e9e6e5c615c4801914c5e7110b53ba4d80e:reference/exception/rethrow_exception.md</id>
      <updated>2023-01-19T14:21:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/exception/rethrow_exception.md b/reference/exception/rethrow_exception.md
index b40a019c7..c84d46525 100644
--- a/reference/exception/rethrow_exception.md
+++ b/reference/exception/rethrow_exception.md
@@ -7,15 +7,25 @@
 ```cpp
 [[noreturn]] void rethrow_exception(exception_ptr p);
 ```
+* exception_ptr[link exception_ptr.md]
 
 ## 概要
 `exception_ptr`が指す例外オブジェクトを再スローする。
 
 
-## 要件
+## 事前条件
 `p`がヌルを指す`exception_ptr`ではないこと。
 
 
+## 効果
+説明用の変数`u`を、`p`が指す例外オブジェクトもしくはそのコピーとする。
+コピーが行われるか否か、コピー時にメモリ確保が行われるか否かは未規定とされる。
+
+- `u`用のメモリ確保に失敗した場合、[`bad_alloc`](/reference/new/bad_alloc.md)例外がスローされる。
+- そうでなければ、`p`が指す例外オブジェクトから`u`へのコピー時に例外スローされた場合、その例外がスローされる。
+- そうでなければ、`throw u;`
+
+
 ## 戻り値
 この関数は決して返らない。
 
@@ -73,5 +83,5 @@ terminate called after throwing an instance of &amp;#39;std::runtime_error&amp;#39;
 
 ## 参照
 - [N2179 Language Support for Transporting Exceptions between Threads](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2179.html)
-
-
+- [P1675R2 `rethrow_exception` must be allowed to copy](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p1675r2.pdf)
+    - 既存C++コンパイラの挙動にあわせて効果(Effects)文面を修正。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
</feed>
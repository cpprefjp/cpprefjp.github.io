<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2020-04-06T04:11:05.735575</updated>
  <id>c4590fbd-04af-482e-84b7-4d1b654e1f18</id>

  
    <entry>
      <title>replace -- string::replace : 一部消えていたのを修正</title>
      <link href="https://cpprefjp.github.io/reference/string/basic_string/replace.html"/>
      <id>79fb8ad495393fb80c39c2c36c756db0174998ae:reference/string/basic_string/replace.md</id>
      <updated>2020-04-06T13:01:02+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string/basic_string/replace.md b/reference/string/basic_string/replace.md
index 87ed834e1..ec25752e6 100644
--- a/reference/string/basic_string/replace.md
+++ b/reference/string/basic_string/replace.md
@@ -111,6 +111,7 @@ basic_string&amp;amp; replace(const_iterator i1,
   return replace(pos1, n1, sv.data(), sv.size());
   ```
   * basic_string_view[link /reference/string_view/basic_string_view.md]
+
 - (13) : 以下と等価。
   ```cpp
   basic_string_view&amp;lt;charT, traits&amp;gt; sv = t;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>atomic_ref -- atomic_ref : リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/atomic/atomic_ref.html"/>
      <id>fa2b8b76114ec44060e4dd2c05da3cf1b5ab104a:reference/atomic/atomic_ref.md</id>
      <updated>2020-04-06T12:59:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/atomic/atomic_ref.md b/reference/atomic/atomic_ref.md
index 94cd9d866..c9359034f 100644
--- a/reference/atomic/atomic_ref.md
+++ b/reference/atomic/atomic_ref.md
@@ -160,7 +160,7 @@ int main()
 ```
 * std::atomic_ref[color ff0000]
 * x.exchange[link atomic_ref/exchange.md]
-* x.store[link atomic_ref/store.md]
+* store[link atomic_ref/store.md]
 * consumer_thread.join()[link /reference/thread/thread/join.md]
 
 ### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>atomic_flag_wait_explicit -- atomic_flag_wait_explicit : リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/atomic/atomic_flag_wait_explicit.html"/>
      <id>d4ae59c6fa30287c2cdc2fb69937f3472255601a:reference/atomic/atomic_flag_wait_explicit.md</id>
      <updated>2020-04-06T12:57:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/atomic/atomic_flag_wait_explicit.md b/reference/atomic/atomic_flag_wait_explicit.md
index e23483b2f..c97c3c193 100644
--- a/reference/atomic/atomic_flag_wait_explicit.md
+++ b/reference/atomic/atomic_flag_wait_explicit.md
@@ -91,7 +91,7 @@ int main()
 * std::atomic_flag_wait_explicit[color ff0000]
 * std::atomic_flag_test_and_set_explicit[link atomic_flag_test_and_set.md]
 * std::atomic_flag_clear_explicit[link atomic_flag_clear.md]
-* std::atomic_flag_notify_one_explicit[link /reference/atomic/atomic_flag/notify_one.md]
+* std::atomic_flag_notify_one[link /reference/atomic/atomic_flag_notify_one.md]
 * ATOMIC_FLAG_INIT[link /reference/atomic/atomic_flag_init.md]
 * std::memory_order[link /reference/atomic/memory_order.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>semiregular -- semiregular : リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/concepts/semiregular.html"/>
      <id>3be58702591f5fcf2d22c92b764fc439a02ca29c:reference/concepts/semiregular.md</id>
      <updated>2020-04-06T12:53:58+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/concepts/semiregular.md b/reference/concepts/semiregular.md
index e1c8bfefc..1608437f6 100644
--- a/reference/concepts/semiregular.md
+++ b/reference/concepts/semiregular.md
@@ -11,7 +11,7 @@ namespace std {
 }
 ```
 * copyable[link /reference/concepts/copyable.md]
-* default_constructible[link /reference/concepts/default_initializable.md]
+* default_initializable[link /reference/concepts/default_initializable.md]
 
 ## 概要
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>atomic_flag_wait_explicit -- リンク修正 #747</title>
      <link href="https://cpprefjp.github.io/reference/atomic/atomic_flag_wait_explicit.html"/>
      <id>58861bb3359f70f448549dd128a636f70aef3863:reference/atomic/atomic_flag_wait_explicit.md</id>
      <updated>2020-04-06T12:44:20+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/atomic/atomic_flag_wait_explicit.md b/reference/atomic/atomic_flag_wait_explicit.md
index 6b4d8988f..e23483b2f 100644
--- a/reference/atomic/atomic_flag_wait_explicit.md
+++ b/reference/atomic/atomic_flag_wait_explicit.md
@@ -91,7 +91,7 @@ int main()
 * std::atomic_flag_wait_explicit[color ff0000]
 * std::atomic_flag_test_and_set_explicit[link atomic_flag_test_and_set.md]
 * std::atomic_flag_clear_explicit[link atomic_flag_clear.md]
-* std::atomic_flag_notify_one_explicit[link notify_one.md]
+* std::atomic_flag_notify_one_explicit[link /reference/atomic/atomic_flag/notify_one.md]
 * ATOMIC_FLAG_INIT[link /reference/atomic/atomic_flag_init.md]
 * std::memory_order[link /reference/atomic/memory_order.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>atomic_ref -- リンク修正 #747</title>
      <link href="https://cpprefjp.github.io/reference/atomic/atomic_ref.html"/>
      <id>58861bb3359f70f448549dd128a636f70aef3863:reference/atomic/atomic_ref.md</id>
      <updated>2020-04-06T12:44:20+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/atomic/atomic_ref.md b/reference/atomic/atomic_ref.md
index d3d193382..94cd9d866 100644
--- a/reference/atomic/atomic_ref.md
+++ b/reference/atomic/atomic_ref.md
@@ -160,7 +160,7 @@ int main()
 ```
 * std::atomic_ref[color ff0000]
 * x.exchange[link atomic_ref/exchange.md]
-* x.store[link atomic_ref[store.md]
+* x.store[link atomic_ref/store.md]
 * consumer_thread.join()[link /reference/thread/thread/join.md]
 
 ### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>semiregular -- リンク修正 #747</title>
      <link href="https://cpprefjp.github.io/reference/concepts/semiregular.html"/>
      <id>58861bb3359f70f448549dd128a636f70aef3863:reference/concepts/semiregular.md</id>
      <updated>2020-04-06T12:44:20+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/concepts/semiregular.md b/reference/concepts/semiregular.md
index b9ae3b12b..e1c8bfefc 100644
--- a/reference/concepts/semiregular.md
+++ b/reference/concepts/semiregular.md
@@ -7,11 +7,11 @@
 ```cpp
 namespace std {
   template&amp;lt;class T&amp;gt;
-  concept semiregular = copyable&amp;lt;T&amp;gt; &amp;amp;&amp;amp; default_constructible&amp;lt;T&amp;gt;;
+  concept semiregular = copyable&amp;lt;T&amp;gt; &amp;amp;&amp;amp; default_initializable&amp;lt;T&amp;gt;;
 }
 ```
 * copyable[link /reference/concepts/copyable.md]
-* default_constructible[link /reference/concepts/default_constructible.md]
+* default_constructible[link /reference/concepts/default_initializable.md]
 
 ## 概要
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>boyer_moore_horspool_searcher -- リンク修正 #747</title>
      <link href="https://cpprefjp.github.io/reference/functional/boyer_moore_horspool_searcher.html"/>
      <id>58861bb3359f70f448549dd128a636f70aef3863:reference/functional/boyer_moore_horspool_searcher.md</id>
      <updated>2020-04-06T12:44:20+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/functional/boyer_moore_horspool_searcher.md b/reference/functional/boyer_moore_horspool_searcher.md
index 7d053d0d3..1556ef201 100644
--- a/reference/functional/boyer_moore_horspool_searcher.md
+++ b/reference/functional/boyer_moore_horspool_searcher.md
@@ -27,7 +27,7 @@ namespace std {
 
 
 ## 要件
-- `RandomAccessIterator1`が指す値型は、[デフォルト構築可能](/reference/concepts/default_constructible.md)、[コピー構築可能](/reference/concepts/copy_constructible.md)、[コピー代入可能](/reference/type_traits/is_copy_assignable.md)の要件を満たすこと
+- `RandomAccessIterator1`が指す値型は、[デフォルト構築可能](/reference/concepts/default_initializable.md)、[コピー構築可能](/reference/concepts/copy_constructible.md)、[コピー代入可能](/reference/type_traits/is_copy_assignable.md)の要件を満たすこと
 
 
 ## 備考
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>boyer_moore_searcher -- リンク修正 #747</title>
      <link href="https://cpprefjp.github.io/reference/functional/boyer_moore_searcher.html"/>
      <id>58861bb3359f70f448549dd128a636f70aef3863:reference/functional/boyer_moore_searcher.md</id>
      <updated>2020-04-06T12:44:20+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/functional/boyer_moore_searcher.md b/reference/functional/boyer_moore_searcher.md
index ceeedd5c2..3fcd8a4af 100644
--- a/reference/functional/boyer_moore_searcher.md
+++ b/reference/functional/boyer_moore_searcher.md
@@ -27,7 +27,7 @@ namespace std {
 
 
 ## 要件
-- `RandomAccessIterator1`が指す値型は、[デフォルト構築可能](/reference/concepts/default_constructible.md)、[コピー構築可能](/reference/concepts/copy_constructible.md)、[コピー代入可能](/reference/type_traits/is_copy_assignable.md)の要件を満たすこと
+- `RandomAccessIterator1`が指す値型は、[デフォルト構築可能](/reference/concepts/default_initializable.md)、[コピー構築可能](/reference/concepts/copy_constructible.md)、[コピー代入可能](/reference/type_traits/is_copy_assignable.md)の要件を満たすこと
 
 
 ## 備考
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>append -- リンク修正 #747</title>
      <link href="https://cpprefjp.github.io/reference/string/basic_string/append.html"/>
      <id>58861bb3359f70f448549dd128a636f70aef3863:reference/string/basic_string/append.md</id>
      <updated>2020-04-06T12:44:20+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string/basic_string/append.md b/reference/string/basic_string/append.md
index 84dc55898..749f03b51 100644
--- a/reference/string/basic_string/append.md
+++ b/reference/string/basic_string/append.md
@@ -94,7 +94,7 @@ basic_string&amp;amp; append(const T&amp;amp; t,
   return append(sv.substr(pos, n));
   ```
   * basic_string_view[link /reference/string_view/basic_string_view.md]
-  * substr[link /reference/string_view/basic_string_view/append.md]
+  * substr[link /reference/string_view/basic_string_view/substr.md]
 
 
 ## 戻り値
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>assign -- リンク修正 #747</title>
      <link href="https://cpprefjp.github.io/reference/string/basic_string/assign.html"/>
      <id>58861bb3359f70f448549dd128a636f70aef3863:reference/string/basic_string/assign.md</id>
      <updated>2020-04-06T12:44:20+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string/basic_string/assign.md b/reference/string/basic_string/assign.md
index 7f3cdf1ac..6db2861d7 100644
--- a/reference/string/basic_string/assign.md
+++ b/reference/string/basic_string/assign.md
@@ -87,7 +87,7 @@ basic_string&amp;amp; assign(const T&amp;amp; t,
   return assign(sv.substr(pos, n));
   ```
   * basic_string_view[link /reference/string_view/basic_string_view.md]
-  * substr[link /reference/string_view/basic_string_view/append.md]
+  * substr[link /reference/string_view/basic_string_view/substr.md]
 
 
 ## 戻り値
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>compare -- リンク修正 #747</title>
      <link href="https://cpprefjp.github.io/reference/string/basic_string/compare.html"/>
      <id>58861bb3359f70f448549dd128a636f70aef3863:reference/string/basic_string/compare.md</id>
      <updated>2020-04-06T12:44:20+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string/basic_string/compare.md b/reference/string/basic_string/compare.md
index 237c1c2be..9e38cd5a4 100644
--- a/reference/string/basic_string/compare.md
+++ b/reference/string/basic_string/compare.md
@@ -73,7 +73,7 @@ int compare(size_type pos1,
   return s.substr(pos1, n1).compare(sv.substr(pos2, n2));
   ```
   * basic_string_view[link /reference/string_view/basic_string_view.md]
-  * substr[link /reference/string_view/basic_string_view/append.md]
+  * substr[link /reference/string_view/basic_string_view/substr.md]
   * compare[link /reference/string_view/basic_string_view/compare.md]
 
 ## 例外
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>insert -- リンク修正 #747</title>
      <link href="https://cpprefjp.github.io/reference/string/basic_string/insert.html"/>
      <id>58861bb3359f70f448549dd128a636f70aef3863:reference/string/basic_string/insert.md</id>
      <updated>2020-04-06T12:44:20+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string/basic_string/insert.md b/reference/string/basic_string/insert.md
index 1e5ed4928..a6cd2da63 100644
--- a/reference/string/basic_string/insert.md
+++ b/reference/string/basic_string/insert.md
@@ -87,7 +87,7 @@ basic_string&amp;amp; insert(size_type pos1,
   return insert(pos1, sv.substr(pos2, n));
   ```
   * basic_string_view[link /reference/string_view/basic_string_view.md]
-  * substr[link /reference/string_view/basic_string_view/append.md]
+  * substr[link /reference/string_view/basic_string_view/substr.md]
 
 
 ## 戻り値
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>replace -- リンク修正 #747</title>
      <link href="https://cpprefjp.github.io/reference/string/basic_string/replace.html"/>
      <id>58861bb3359f70f448549dd128a636f70aef3863:reference/string/basic_string/replace.md</id>
      <updated>2020-04-06T12:44:20+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string/basic_string/replace.md b/reference/string/basic_string/replace.md
index c7c8aaf67..87ed834e1 100644
--- a/reference/string/basic_string/replace.md
+++ b/reference/string/basic_string/replace.md
@@ -117,7 +117,7 @@ basic_string&amp;amp; replace(const_iterator i1,
   return replace(pos1, n1, sv.substr(pos2, n2));
   ```
   * basic_string_view[link /reference/string_view/basic_string_view.md]
-  * substr[link /reference/string_view/basic_string_view/append.md]
+  * substr[link /reference/string_view/basic_string_view/substr.md]
 
 - (14) : 以下と等価。
   ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>make_from_tuple -- リンク修正 #747</title>
      <link href="https://cpprefjp.github.io/reference/tuple/make_from_tuple.html"/>
      <id>58861bb3359f70f448549dd128a636f70aef3863:reference/tuple/make_from_tuple.md</id>
      <updated>2020-04-06T12:44:20+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/tuple/make_from_tuple.md b/reference/tuple/make_from_tuple.md
index 4d425654d..c8bb8ed53 100644
--- a/reference/tuple/make_from_tuple.md
+++ b/reference/tuple/make_from_tuple.md
@@ -25,7 +25,7 @@ tuple-likeな型とは主に[`std::tuple`](../tuple.md)の事であるが、[`st
 より詳細には、[`std::get`](/reference/array/array/get.md)（インデックス指定）と[`std::tuple_size`](/reference/array/array/tuple_size.md)が適用可能な型である。
 
 ## 戻り値
-`Tuple`に含まれる型の値をその順番通りに型`T`のコンストラクタに[`std::forward`](`/reference/utility/forward.md`)して構築された`T`のオブジェクト。
+`Tuple`に含まれる型の値をその順番通りに型`T`のコンストラクタに[`std::forward`](/reference/utility/forward.md)して構築された`T`のオブジェクト。
 
 ## 例外
 `Tuple`に含まれる型の値を受け取る`T`のコンストラクタが例外を送出する可能性がある場合は、この関数も例外を送出しうる。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
</feed>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2024-06-14T07:45:14.653200</updated>
  <id>5afdd2f9-e040-4b31-a9af-42b7e10662ce</id>

  
    <entry>
      <title>add -- linalg add : 表示崩れを修正</title>
      <link href="https://cpprefjp.github.io/reference/linalg/add.html"/>
      <id>d71da861640733ff4be8d5ed1a1cb56c08861781:reference/linalg/add.md</id>
      <updated>2024-06-14T16:41:55+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/add.md b/reference/linalg/add.md
index fd21543da..cffbd4bd0 100644
--- a/reference/linalg/add.md
+++ b/reference/linalg/add.md
@@ -37,8 +37,8 @@ $$
 
 
 ## テンプレートパラメータ制約
-`x`と`y`、`z`の次元が全て等しくなければならない。
-- `x.rank() == y.rank() &amp;amp;&amp;amp; y.rank() == z.rank()`
+- `x`と`y`、`z`の次元が全て等しくなければならない。
+    - `x.rank() == y.rank() &amp;amp;&amp;amp; y.rank() == z.rank()`
 
 
 ## 適格要件
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンパイラの実装状況 -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/implementation-status.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:implementation-status.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;コンパイラの実装状況&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;このページでは、C++のバージョンごとの言語機能を、どのコンパイラがどのバージョンからサポートしているかをまとめる。&lt;/p&gt;
&lt;p&gt;ライブラリ機能については、本サイトのリファレンスで各機能を参照してもらいたい。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#cpp11&#34;&gt;C++11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cpp14&#34;&gt;C++14&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cpp17&#34;&gt;C++17&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cpp20&#34;&gt;C++20&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cpp23&#34;&gt;C++23&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cpp26&#34;&gt;C++26&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#cpp11&#34; id=&#34;cpp11&#34;&gt;C++11言語機能の実装状況&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;言語機能&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#clang&#34;&gt;Clang&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#icc&#34;&gt;ICC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#visual_cpp&#34;&gt;MSVC&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;N2341: &lt;code&gt;&lt;a href=&#34;lang/cpp11/alignas.html&#34;&gt;alignas&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;アライメント指定&lt;/td&gt;
&lt;td&gt;4.8&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;15.0&lt;/td&gt;
&lt;td&gt;2015&lt;br /&gt;2003あるいはそれ以前からある&lt;code&gt;__declspec(align(x))&lt;/code&gt;構文で代替可能。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2341: &lt;code&gt;&lt;a href=&#34;lang/cpp11/alignof.html&#34;&gt;alignof&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;アライメント取得&lt;/td&gt;
&lt;td&gt;4.5&lt;/td&gt;
&lt;td&gt;3.3&lt;/td&gt;
&lt;td&gt;15.0&lt;/td&gt;
&lt;td&gt;2015&lt;br /&gt;2003あるいはそれ以前よりある&lt;code&gt;__alignof&lt;/code&gt;で代替可能。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N1984: &lt;code&gt;&lt;a href=&#34;lang/cpp11/auto.html&#34;&gt;auto&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;型推論&lt;/td&gt;
&lt;td&gt;4.4&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;2010&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2343: &lt;code&gt;&lt;a href=&#34;lang/cpp11/decltype.html&#34;&gt;decltype&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;式の型を取得&lt;/td&gt;
&lt;td&gt;4.3&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;13.0&lt;/td&gt;
&lt;td&gt;2010 (partial)&lt;br /&gt; 2012&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N1653: C99互換のプリプロセッサ&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;lang/cpp11/variadic_macros.html&#34;&gt;可変引数マクロ&lt;/a&gt;、&lt;a href=&#34;lang/cpp11/pragma_operator.html&#34;&gt;Pragma演算子&lt;/a&gt;、&lt;code&gt;&lt;a href=&#34;lang/cpp11/func.html&#34;&gt;__func__&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;4.3&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.1&lt;/td&gt;
&lt;td&gt;2005 (partial): 可変引数のみ &lt;code&gt;_Pragma&lt;/code&gt;の代わりに&lt;code&gt;__pragma&lt;/code&gt;が存在する。&lt;br /&gt; 2019 Update 6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2235: &lt;code&gt;&lt;a href=&#34;lang/cpp11/constexpr.html&#34;&gt;constexpr&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;定数式&lt;/td&gt;
&lt;td&gt;4.6&lt;/td&gt;
&lt;td&gt;3.1&lt;/td&gt;
&lt;td&gt;13.0 (partial)&lt;br /&gt; 14.0&lt;/td&gt;
&lt;td&gt;2015 (partial)&lt;br /&gt; 2015 Update 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2346: &lt;a href=&#34;lang/cpp11/defaulted_and_deleted_functions.html&#34;&gt;関数の&lt;code&gt;default/delete&lt;/code&gt;宣言&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;自動定義される特殊関数の制御&lt;/td&gt;
&lt;td&gt;4.4&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;2013: ムーブコンストラクタ・ムーブ代入演算子の&lt;code&gt;default&lt;/code&gt;は不可&lt;br /&gt; 2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N1986: &lt;a href=&#34;lang/cpp11/delegating_constructors.html&#34;&gt;委譲コンストラクタ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コンストラクタから他のコンストラクタに処理を委譲する&lt;/td&gt;
&lt;td&gt;4.7&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2437: &lt;a href=&#34;lang/cpp11/explicit_conversion_operator.html&#34;&gt;明示的な型変換演算子のオーバーロード&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;明示的な型変換が行われる場合にのみ呼び出される演算子をオーバーロードできるようにする&lt;/td&gt;
&lt;td&gt;4.5&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N1791: &lt;a href=&#34;lang/cpp11/extend_friend_targets.html&#34;&gt;&lt;code&gt;friend&lt;/code&gt;宣言できる対象を拡張&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;テンプレートパラメータや型の別名を&lt;code&gt;friend&lt;/code&gt;宣言&lt;/td&gt;
&lt;td&gt;4.7&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.1 (partial) &lt;br /&gt; 12.0&lt;/td&gt;
&lt;td&gt;2010&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N1987: &lt;code&gt;&lt;a href=&#34;lang/cpp11/extern_template.html&#34;&gt;extern template&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;テンプレートのインスタンス化抑止&lt;/td&gt;
&lt;td&gt;3.3&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.1&lt;/td&gt;
&lt;td&gt;6.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2540: &lt;a href=&#34;lang/cpp11/inheriting_constructors.html&#34;&gt;継承コンストラクタ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;基底クラスのコンストラクタを継承する&lt;/td&gt;
&lt;td&gt;4.8&lt;/td&gt;
&lt;td&gt;3.3&lt;/td&gt;
&lt;td&gt;15.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2927: &lt;a href=&#34;lang/cpp11/lambda_expressions.html&#34;&gt;ラムダ式&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;関数オブジェクトをその場に書く&lt;/td&gt;
&lt;td&gt;4.5&lt;/td&gt;
&lt;td&gt;3.1&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;2010 (partial)&lt;br /&gt; 2012&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2657: &lt;a href=&#34;lang/cpp11/local_and_unnamed_type_as_template_arguments.html&#34;&gt;ローカル型と無名型を、テンプレート引数として使用することを許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ローカルおよび無名として定義したクラスや列挙型を、テンプレート引数として渡せるようにする&lt;/td&gt;
&lt;td&gt;4.5&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;2010&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N1811: &lt;a href=&#34;lang/cpp11/long_long_type.html&#34;&gt;&lt;code&gt;long long&lt;/code&gt;型&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;64ビット以上の大きさを持つ整数型&lt;/td&gt;
&lt;td&gt;4.3&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.1&lt;/td&gt;
&lt;td&gt;2003&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2535: &lt;a href=&#34;lang/cpp11/inline_namespaces.html&#34;&gt;インライン名前空間&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ネストした名前空間に、透過的にアクセスする&lt;/td&gt;
&lt;td&gt;4.4&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2249: &lt;a href=&#34;lang/cpp11/char16_32.html&#34;&gt;&lt;code&gt;char16_t&lt;/code&gt;と&lt;code&gt;char32_t&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;UTF-16とUTF-32の文字型&lt;/td&gt;
&lt;td&gt;4.4&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;12.1 (Windows: partial) &lt;br /&gt; 12.1 (GNU/Linux, macOS)&lt;br /&gt; 14.0&lt;/td&gt;
&lt;td&gt;2015&lt;br /&gt; 2010より組み込み型ではなく型の別名として存在する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2442: &lt;a href=&#34;lang/cpp11/utf8_string_literals.html&#34;&gt;UTF-8文字列リテラル&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;char&lt;/code&gt;の文字列をUTF-8エンコーディングするプレフィックス&lt;/td&gt;
&lt;td&gt;4.5&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;12.1 (Windows: partial) &lt;br /&gt; 12.1 (GNU/Linux, macOS)&lt;br /&gt; 14.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2442: &lt;a href=&#34;lang/cpp11/raw_string_literals.html&#34;&gt;生文字列リテラル&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;文字列リテラルにRプレフィックスを付けることで、エスケープシーケンスを無視する&lt;/td&gt;
&lt;td&gt;4.5&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2765: &lt;a href=&#34;lang/cpp11/user_defined_literals.html&#34;&gt;ユーザー定義リテラル&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;リテラルのサフィックスをユーザー定義する&lt;/td&gt;
&lt;td&gt;4.7&lt;/td&gt;
&lt;td&gt;3.1&lt;/td&gt;
&lt;td&gt;15.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2541: &lt;a href=&#34;lang/cpp11/trailing_return_types.html&#34;&gt;戻り値の型を後置する関数宣言構文&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;以下のような形式での関数宣言&lt;br /&gt; &lt;code&gt;auto f(arg_types...) -&amp;gt; return_type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;4.4&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;2010&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2431: &lt;code&gt;&lt;a href=&#34;lang/cpp11/nullptr.html&#34;&gt;nullptr&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ヌルポインタを表すポインタリテラル&lt;/td&gt;
&lt;td&gt;4.6&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;11.1&lt;/td&gt;
&lt;td&gt;2010&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N1757: &lt;a href=&#34;lang/cpp11/right_angle_brackets.html&#34;&gt;テンプレートの右山カッコ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vector&amp;lt;basic_string&amp;lt;char&amp;gt;&amp;gt;&lt;/code&gt;のように、&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;をスペースを空けずに記述可能にする&lt;/td&gt;
&lt;td&gt;4.3&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.1&lt;/td&gt;
&lt;td&gt;2005&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2118: &lt;a href=&#34;lang/cpp11/rvalue_ref_and_move_semantics.html&#34;&gt;右辺値参照・ムーブセマンティクス&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;右辺値によるオーバーロード、およびそれによるリソースの所有権移動&lt;/td&gt;
&lt;td&gt;4.3 (partial)&lt;br /&gt; 4.6&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;2010 (partial) ムーブコンストラクタと代入演算子の暗黙定義に対応していない。&lt;br /&gt; 2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N1720: &lt;a href=&#34;lang/cpp11/static_assert.html&#34;&gt;コンパイル時アサート&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コンパイル時に条件式が真であることを表明する&lt;/td&gt;
&lt;td&gt;4.3&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.1&lt;/td&gt;
&lt;td&gt;2010&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2347: &lt;a href=&#34;lang/cpp11/scoped_enum.html#extended-unscoped-enum&#34;&gt;&lt;code&gt;enum&lt;/code&gt;の先行宣言&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;4.6&lt;/td&gt;
&lt;td&gt;3.1&lt;/td&gt;
&lt;td&gt;11.1 (partial)&lt;br /&gt; 14.0&lt;/td&gt;
&lt;td&gt;2012&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2347: &lt;a href=&#34;lang/cpp11/scoped_enum.html&#34;&gt;スコープを持つ列挙型&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;強い型付けとスコープを持つ列挙型&lt;/td&gt;
&lt;td&gt;4.4&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.1 (partial)&lt;br /&gt; 14.0&lt;/td&gt;
&lt;td&gt;2012&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2258: &lt;a href=&#34;lang/cpp11/alias_templates.html&#34;&gt;エイリアステンプレート&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;テンプレートによって型の別名を定義する&lt;/td&gt;
&lt;td&gt;4.7&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;12.1&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2544: &lt;a href=&#34;lang/cpp11/unrestricted_unions.html&#34;&gt;共用体の制限解除&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;共用体のメンバ変数として、クラスオブジェクトを持つ&lt;/td&gt;
&lt;td&gt;4.6&lt;/td&gt;
&lt;td&gt;3.1&lt;/td&gt;
&lt;td&gt;14.0(Linux系OSおよびMacのみ。Windowsは非対応)&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2242: &lt;a href=&#34;lang/cpp11/variadic_templates.html&#34;&gt;可変引数テンプレート&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;任意の数のテンプレートパラメータを受け取れるようにする&lt;/td&gt;
&lt;td&gt;4.3 (partial)&lt;br /&gt; 4.4&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;12.1&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2930: &lt;a href=&#34;lang/cpp11/range_based_for.html&#34;&gt;範囲for文&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;配列やコンテナといった範囲を表すオブジェクトを、簡潔に走査する&lt;/td&gt;
&lt;td&gt;4.6&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;13.0&lt;/td&gt;
&lt;td&gt;2012&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2928: &lt;a href=&#34;lang/cpp11/override_final.html&#34;&gt;&lt;code&gt;override&lt;/code&gt;と&lt;code&gt;final&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;メンバ関数のオーバーライド指定、および派生クラスでのオーバーロードを禁止する指定&lt;/td&gt;
&lt;td&gt;4.7&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;2005 (partial): &lt;code&gt;override&lt;/code&gt;のみ。&lt;code&gt;final&lt;/code&gt;の代わりにsealedが存在する。ただし両者ともデストラクタには指定できない。&lt;br /&gt; 2012&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2761: &lt;a href=&#34;lang/cpp11/attributes.html&#34;&gt;属性構文&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[[attr]]&lt;/code&gt;構文による、クラス、関数、変数の属性指定&lt;/td&gt;
&lt;td&gt;4.8&lt;/td&gt;
&lt;td&gt;3.3&lt;/td&gt;
&lt;td&gt;12.1&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2439: &lt;a href=&#34;lang/cpp11/ref_qualifier_for_this.html&#34;&gt;メンバ関数の左辺値／右辺値修飾&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;オブジェクトが左辺値／右辺値の場合のみ呼び出し可能であることの指定&lt;/td&gt;
&lt;td&gt;4.8.1&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2756: &lt;a href=&#34;lang/cpp11/non_static_data_member_initializers.html&#34;&gt;非静的メンバ変数の初期化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;メンバ変数を、宣言と同時に初期値指定する&lt;/td&gt;
&lt;td&gt;4.7&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2672: &lt;a href=&#34;lang/cpp11/initializer_lists.html&#34;&gt;初期化子リスト&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;波括弧による初期化をユーザー定義する。&lt;code&gt;vector&amp;lt;int&amp;gt; v = {1, 2, 3};&lt;/code&gt;など。&lt;/td&gt;
&lt;td&gt;4.4&lt;/td&gt;
&lt;td&gt;3.1&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2672: &lt;a href=&#34;lang/cpp11/uniform_initialization.html&#34;&gt;一様初期化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コンストラクタ呼び出しを波カッコで行う。 &lt;code&gt;T x { a, b, c };&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;4.4&lt;/td&gt;
&lt;td&gt;3.1&lt;/td&gt;
&lt;td&gt;13.0(partial)&lt;br /&gt; 14.0&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N3050: &lt;code&gt;&lt;a href=&#34;lang/cpp11/noexcept.html&#34;&gt;noexcept&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;関数の例外指定、例外を投げる可能性のある式かbool値を返す演算子&lt;/td&gt;
&lt;td&gt;4.6&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;13.0(partial)&lt;br /&gt;14.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2634: &lt;a href=&#34;lang/cpp11/sfinae_expressions.html&#34;&gt;任意の式によるSFINAE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;特定の式が有効かどうかで、その関数をオーバーロード解決に含めるかどうかを決定する&lt;/td&gt;
&lt;td&gt;4.4&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;2015 Update 1 (partial)&lt;br /&gt; 2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2659: &lt;a href=&#34;lang/cpp11/thread_local_storage.html&#34;&gt;スレッドローカルストレージ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;スレッドごとに異なる静的記憶域に保持される変数&lt;/td&gt;
&lt;td&gt;4.8&lt;/td&gt;
&lt;td&gt;3.3&lt;/td&gt;
&lt;td&gt;11.1 (partial)&lt;/td&gt;
&lt;td&gt;2010&lt;br /&gt; &lt;code&gt;__declspec(thread)&lt;/code&gt;属性での部分サポート&lt;br /&gt; 2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2660: &lt;a href=&#34;lang/cpp11/static_initialization_thread_safely.html&#34;&gt;ブロックスコープを持つ&lt;code&gt;static&lt;/code&gt;変数初期化のスレッドセーフ化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;関数ローカルで定義した&lt;code&gt;static&lt;/code&gt;変数の初期化を、スレッドセーフにする&lt;/td&gt;
&lt;td&gt;4.3&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.0 (Lnux/macOS)&lt;br /&gt; 14.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;各処理系のC++11実装状況ページ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;全体的な対応状況： &lt;a href=&#34;http://web.archive.org/web/20160327011707/https://wiki.apache.org/stdcxx/C++0xCompilerSupport&#34; target=&#34;_blank&#34;&gt;C++0xCompilerSupport&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GCC： &lt;a href=&#34;https://gcc.gnu.org/projects/cxx-status.html#cxx11&#34; target=&#34;_blank&#34;&gt;C++11 Support in GCC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;libstdc++ : &lt;a href=&#34;https://gcc.gnu.org/onlinedocs/libstdc++/manual/status.html#status.iso.2011&#34; target=&#34;_blank&#34;&gt;C++ 2011&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Clang： &lt;a href=&#34;http://clang.llvm.org/cxx_status.html&#34; target=&#34;_blank&#34;&gt;C++98 and C++11 Support in Clang&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://clang.llvm.org/cxx_dr_status.html&#34; target=&#34;_blank&#34;&gt;C++ Defect Report Support in Clang&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ICC : &lt;a href=&#34;https://software.intel.com/en-us/articles/c0x-features-supported-by-intel-c-compiler&#34; target=&#34;_blank&#34;&gt;C++11 Features Supported by Intel® C++ Compiler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Visual C++ (MSVC):&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/ja-jp/cpp/visual-cpp-language-conformance&#34; target=&#34;_blank&#34;&gt;Visual C++ 言語への準拠&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/vcblog/2018/05/07/announcing-msvc-conforms-to-the-c-standard/&#34; target=&#34;_blank&#34;&gt;Announcing: MSVC Conforms to the C++ Standard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#cpp14&#34; id=&#34;cpp14&#34;&gt;C++14言語機能の実装状況&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;言語機能&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#clang&#34;&gt;Clang&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#icc&#34;&gt;ICC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#visual_cpp&#34;&gt;MSVC&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;N3472: &lt;a href=&#34;lang/cpp14/binary_literals.html&#34;&gt;2進数リテラル&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2進数を表す&lt;code&gt;0b&lt;/code&gt; or &lt;code&gt;0B&lt;/code&gt;プレフィックスを付けた数値リテラルの記述を可能とする&lt;/td&gt;
&lt;td&gt;4.3(GNU)&lt;br /&gt; 4.9&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N3638: &lt;a href=&#34;lang/cpp14/return_type_deduction_for_normal_functions.html&#34;&gt;通常関数の戻り値型推論&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;関数の戻り値型を&lt;code&gt;auto&lt;/code&gt;にすることで、&lt;code&gt;return&lt;/code&gt;文から戻り値の型を推論させる&lt;/td&gt;
&lt;td&gt;4.8(partial)&lt;br /&gt;4.9&lt;/td&gt;
&lt;td&gt;3.3(partial)&lt;br /&gt; 3.4&lt;/td&gt;
&lt;td&gt;15.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N3648: &lt;a href=&#34;lang/cpp14/initialize_capture.html&#34;&gt;ラムダ式の初期化キャプチャ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;キャプチャに代入構文を導入し、一つの変数に複数のキャプチャ方法を指定可能にする&lt;/td&gt;
&lt;td&gt;4.9&lt;/td&gt;
&lt;td&gt;3.4&lt;/td&gt;
&lt;td&gt;15.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N3649: &lt;a href=&#34;lang/cpp14/generic_lambdas.html&#34;&gt;ジェネリックラムダ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ラムダ式のパラメータを&lt;code&gt;auto&lt;/code&gt;にすることで、ジェネリックな関数呼び出し演算子を持つ関数オブジェクトを生成する&lt;/td&gt;
&lt;td&gt;4.9&lt;/td&gt;
&lt;td&gt;3.4&lt;/td&gt;
&lt;td&gt;16.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N3651: &lt;a href=&#34;lang/cpp14/variable_templates.html&#34;&gt;変数テンプレート&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;変数定義時のテンプレート指定を可能にする。&lt;/td&gt;
&lt;td&gt;5.1&lt;/td&gt;
&lt;td&gt;3.4&lt;/td&gt;
&lt;td&gt;16.0&lt;/td&gt;
&lt;td&gt;2015 Update 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N3652: &lt;a href=&#34;lang/cpp14/relaxing_constraints_on_constexpr.html&#34;&gt;&lt;code&gt;constexpr&lt;/code&gt;の制限緩和&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;if&lt;/code&gt;文、&lt;code&gt;switch&lt;/code&gt;文による条件分岐の許可。&lt;br /&gt;&lt;code&gt;for&lt;/code&gt;文、&lt;code&gt;while&lt;/code&gt;文、&lt;code&gt;do-while&lt;/code&gt;文によるループの許可。&lt;br /&gt;&lt;code&gt;void&lt;/code&gt;戻り値型の許可&lt;br /&gt;初期化を伴う変数宣言の許可。&lt;br /&gt;変数書き換えの許可。&lt;/td&gt;
&lt;td&gt;5.1&lt;/td&gt;
&lt;td&gt;3.3(partial) &lt;br /&gt; 3.4&lt;/td&gt;
&lt;td&gt;16.0&lt;/td&gt;
&lt;td&gt;2017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N3653: &lt;a href=&#34;lang/cpp14/brace_elision_in_array_temporary_initialization.html&#34;&gt;宣言時のメンバ初期化を持つ型の集成体初期化を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;一様初期化と初期化子リストを組み合わせた際、二重に波カッコが必要となっていた仕様を緩和し、波カッコを省略できるようにする&lt;/td&gt;
&lt;td&gt;5.1&lt;/td&gt;
&lt;td&gt;3.3&lt;/td&gt;
&lt;td&gt;16.0&lt;/td&gt;
&lt;td&gt;2017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N3760: &lt;a href=&#34;lang/cpp14/deprecated_attr.html&#34;&gt;&lt;code&gt;[[deprecated]]&lt;/code&gt;属性&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;非推奨の機能であることを示す属性。&lt;/td&gt;
&lt;td&gt;4.9&lt;/td&gt;
&lt;td&gt;3.4&lt;/td&gt;
&lt;td&gt;15.0&lt;br /&gt; (Linux/Mac OS)&lt;/td&gt;
&lt;td&gt;2015&lt;br /&gt;それ以前は&lt;code&gt;__declspec(deprecated)&lt;/code&gt;で代替可能&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N3781: &lt;a href=&#34;lang/cpp14/digit_separators.html&#34;&gt;数値リテラルの桁区切り文字&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;シングルクォーテーションで数値リテラルを桁区切りする。&lt;/td&gt;
&lt;td&gt;4.9&lt;/td&gt;
&lt;td&gt;3.4&lt;/td&gt;
&lt;td&gt;16.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N3778: &lt;a href=&#34;lang/cpp14/sized_deallocation.html&#34;&gt;サイズ付きデアロケーション&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;サイズをとる&lt;code&gt;delete&lt;/code&gt;演算子のオーバーロードを許可する。&lt;/td&gt;
&lt;td&gt;5.1&lt;/td&gt;
&lt;td&gt;3.4&lt;/td&gt;
&lt;td&gt;16.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;各処理系のC++14実装状況ページ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GCC: &lt;a href=&#34;https://gcc.gnu.org/projects/cxx-status.html#cxx14&#34; target=&#34;_blank&#34;&gt;C++14 Support in GCC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;libstdc++: &lt;a href=&#34;https://gcc.gnu.org/onlinedocs/libstdc++/manual/status.html#status.iso.2014&#34; target=&#34;_blank&#34;&gt;C++ 2014&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Clang: &lt;a href=&#34;http://clang.llvm.org/cxx_status.html&#34; target=&#34;_blank&#34;&gt;C++98, C++11, and C++14 Support in Clang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;libc++: &lt;a href=&#34;https://libcxx.llvm.org/Status/Cxx14.html&#34; target=&#34;_blank&#34;&gt;libc++ C++14 Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Visual C++ (MSVC):&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/ja-jp/cpp/visual-cpp-language-conformance&#34; target=&#34;_blank&#34;&gt;Visual C++ 言語への準拠&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/vcblog/2018/05/07/announcing-msvc-conforms-to-the-c-standard/&#34; target=&#34;_blank&#34;&gt;Announcing: MSVC Conforms to the C++ Standard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ICC: &lt;a href=&#34;https://software.intel.com/en-us/articles/c14-features-supported-by-intel-c-compiler&#34; target=&#34;_blank&#34;&gt;C++14 Features Supported by Intel C++ Compiler&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://software.intel.com/en-us/forums/topic/549502&#34; target=&#34;_blank&#34;&gt;Intel (R) Parallel Studio XE 2016 Beta program has begun&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#cpp17&#34; id=&#34;cpp17&#34;&gt;C++17言語機能の実装状況&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;言語機能&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#clang&#34;&gt;Clang&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#icc&#34;&gt;ICC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#visual_cpp&#34;&gt;MSVC&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;N3928: &lt;a href=&#34;lang/cpp17/extending_static_assert.html&#34;&gt;メッセージなしの&lt;code&gt;static_assert&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;デフォルトの表明メッセージを使用する&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;3.5&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N4086: &lt;a href=&#34;lang/cpp17/removing_trigraphs.html&#34;&gt;トライグラフを削除&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;5.1&lt;/td&gt;
&lt;td&gt;3.5&lt;/td&gt;
&lt;td&gt;19.1&lt;/td&gt;
&lt;td&gt;2010&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N4051: &lt;a href=&#34;lang/cpp17/allow_typename_in_a_template_template_parameter.html&#34;&gt;テンプレートテンプレートパラメータに&lt;code&gt;typename&lt;/code&gt;を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;class&lt;/code&gt;キーワードしか使用できなかった部分に、&lt;code&gt;typename&lt;/code&gt;を許可&lt;/td&gt;
&lt;td&gt;5.0&lt;/td&gt;
&lt;td&gt;3.5&lt;/td&gt;
&lt;td&gt;17.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N3922: &lt;a href=&#34;lang/cpp17/new_rules_for_auto_deduction_from_braced-init-list.html&#34;&gt;単一要素初期化子リストを&lt;code&gt;auto&lt;/code&gt;で受け取った場合の型を変更&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;initializer_list&amp;lt;T&amp;gt;&lt;/code&gt;だったのを&lt;code&gt;T&lt;/code&gt;に変更&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;3.8&lt;/td&gt;
&lt;td&gt;17.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N4295: &lt;a href=&#34;lang/cpp17/folding_expressions.html&#34;&gt;畳み込み式&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;パラメータパックに対する2項演算の集積処理&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;3.6&lt;/td&gt;
&lt;td&gt;19.0&lt;/td&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N4267: &lt;a href=&#34;lang/cpp17/utf8_character_literals.html&#34;&gt;UTF-8文字リテラル&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;文字列リテラルだけでなく、文字リテラルにもUTF-8指定できるようにする&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;3.6&lt;/td&gt;
&lt;td&gt;17.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N4230: &lt;a href=&#34;lang/cpp17/nested_namespace.html&#34;&gt;入れ子名前空間の定義&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;namespace A::B {}&lt;/code&gt;のように、入れ子の名前空間を簡単に定義できるようにする&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;3.6&lt;/td&gt;
&lt;td&gt;17.0&lt;/td&gt;
&lt;td&gt;2015 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N4266: &lt;a href=&#34;lang/cpp17/attributes_for_namespaces_and_enumerators.html&#34;&gt;名前空間と列挙子に属性の付加を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;名前空間の定義と、列挙型の各要素の定義に、属性を付けられるようにする&lt;/td&gt;
&lt;td&gt;名前空間は4.0&lt;br /&gt;列挙子は6&lt;/td&gt;
&lt;td&gt;3.6&lt;/td&gt;
&lt;td&gt;17.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N4268: &lt;a href=&#34;lang/cpp17/allow_constant_evaluation_for_all_non-type_template_arguments.html&#34;&gt;全ての非型テンプレート引数の定数式評価を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ポインタの定数式評価として、配列からポインタへの変換や、関数から関数ポインタへの変換などを許可&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;3.6&lt;/td&gt;
&lt;td&gt;19.1&lt;/td&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0001R1: &lt;a href=&#34;lang/cpp17/remove_deprecated_use_of_the_register_keyword.html&#34;&gt;非推奨だった&lt;code&gt;register&lt;/code&gt;キーワードを削除&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.8&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0002R1: &lt;a href=&#34;lang/cpp17/remove_deprecated_increment_of_bool.html&#34;&gt;非推奨だった&lt;code&gt;bool&lt;/code&gt;型オブジェクトに対するインクリメントの仕様を削除&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.8&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0012R1: &lt;a href=&#34;lang/cpp17/exception_spec_be_part_of_the_type_system.html&#34;&gt;例外仕様を型システムの一部にする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0061R1: &lt;a href=&#34;lang/cpp17/has_include.html&#34;&gt;プリプロセッサでの条件式&lt;code&gt;__has_include&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;対象のインクルードファイルが存在するかをプリプロセス時に判定する&lt;/td&gt;
&lt;td&gt;5.0&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0136R1: &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0136r1.html&#34; target=&#34;_blank&#34;&gt;継承コンストラクタの新仕様&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;デフォルト引数を引き継ぐようにした&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0188R1: &lt;a href=&#34;lang/cpp17/fallthrough.html&#34;&gt;&lt;code&gt;[[fallthrough]]&lt;/code&gt;属性&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;case&lt;/code&gt;節で&lt;code&gt;break&lt;/code&gt;や&lt;code&gt;return&lt;/code&gt;を書かなかった場合に、それが意図したフォールスルーであることをコンパイラに伝える属性&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0189R1: &lt;a href=&#34;lang/cpp17/nodiscard.html&#34;&gt;&lt;code&gt;[[nodiscard]]&lt;/code&gt;属性&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;関数の戻り値を無視してはならないことをユーザーに伝える属性&lt;/td&gt;
&lt;td&gt;4.8からは&lt;code&gt;[[gnu::warn_unused_result]]&lt;/code&gt;を使用すること&lt;br /&gt; 7からサポート&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0212R1: &lt;a href=&#34;lang/cpp17/maybe_unused.html&#34;&gt;&lt;code&gt;[[maybe_unused]]&lt;/code&gt;属性&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;使用しない可能性がある変数であることをコンパイラに伝える属性&lt;/td&gt;
&lt;td&gt;4.8からは&lt;code&gt;[[gnu::unused]]&lt;/code&gt;を使用すること&lt;br /&gt; 7からサポート&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0017R1: &lt;a href=&#34;lang/cpp17/extension_to_aggregate_initialization.html&#34;&gt;基底クラスのメンバ変数を集成体初期化するための波カッコを省略できるようにする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;基底クラスのメンバを集成体初期化するために、&lt;code&gt;derived d {{42}};&lt;/code&gt;の代わりに&lt;code&gt;derived d {42};&lt;/code&gt;と書けるようにする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;19.1&lt;/td&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0170R1: &lt;a href=&#34;lang/cpp17/constexpr_lambda.html&#34;&gt;ラムダ式を&lt;code&gt;constexpr&lt;/code&gt;として使用できるようにする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ラムダ式の関数オブジェクトが定数式の文脈で使用された場合に、それがコンパイル時に評価されるようにする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;19.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0184R0: &lt;a href=&#34;lang/cpp17/generalizing_the_range-based_for_loop.html&#34;&gt;範囲for文のための&lt;code&gt;begin()&lt;/code&gt;と&lt;code&gt;end()&lt;/code&gt;関数が、異なる型を返すことを許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;begin()&lt;/code&gt;と&lt;code&gt;end()&lt;/code&gt;が異なるイテレータ型を返せるようにすることで、終端イテレータを定義しやすくする&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0018R3: &lt;a href=&#34;lang/cpp17/lambda_capture_of_this_by_value.html&#34;&gt;ラムダ式での&lt;code&gt;*this&lt;/code&gt;のコピーキャプチャ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;キャプチャリストに&lt;code&gt;*this&lt;/code&gt;を指定することで、&lt;code&gt;*this&lt;/code&gt;をコピーキャプチャする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;19.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0138R2: &lt;a href=&#34;lang/cpp17/construction_enum_class_values.html&#34;&gt;&lt;code&gt;enum class&lt;/code&gt;変数の初期値として整数を指定する際の規則を調整&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;キャストを使用することなく整数を初期値として使用し、&lt;code&gt;E e{0};&lt;/code&gt;のような初期化を許可&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;19.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0245R1: &lt;a href=&#34;lang/cpp17/hexadecimal_floating_literals.html&#34;&gt;浮動小数点数の16進数リテラル&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hexfloat&lt;/code&gt;マニピュレータや&lt;code&gt;printf()&lt;/code&gt;の16進数出力に合わせて、浮動小数点数のリテラルも16進数表記できるようにする&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0028R4: &lt;a href=&#34;lang/cpp17/using_attribute_namespaces.html&#34;&gt;属性の名前空間指定に繰り返しをなくす&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[[using CC: opt(1), debug]]&lt;/code&gt;のように属性の名前空間宣言をまとめて行う&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0035R4: &lt;a href=&#34;lang/cpp17/dynamic_memory_allocation_for_over-aligned_data.html&#34;&gt;アライメント指定されたデータの動的メモリ確保&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;operator new&lt;/code&gt;と&lt;code&gt;operator delete&lt;/code&gt;でアライメント値を取得できるようにする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0091R3: &lt;a href=&#34;lang/cpp17/type_deduction_for_class_templates.html&#34;&gt;クラステンプレートのテンプレート引数推論&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コンストラクタの引数からクラスのテンプレート引数を推論できるようにする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;19.1&lt;/td&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0127R2: &lt;a href=&#34;lang/cpp17/declaring_non-type_template_arguments_with_auto.html&#34;&gt;非型テンプレート引数の&lt;code&gt;auto&lt;/code&gt;宣言&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;template &amp;lt;typename T, T x&amp;gt;&lt;/code&gt;という冗長なコードを&lt;code&gt;template &amp;lt;auto x&amp;gt;&lt;/code&gt;のようにして受けられるようにし、&lt;br /&gt; &lt;code&gt;X&amp;lt;3&amp;gt;; X&amp;lt;true&amp;gt;; X&amp;lt;&#39;a&#39;&amp;gt;&lt;/code&gt;のように定数を簡潔に渡せるようにする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;19.1&lt;/td&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0135R1: &lt;a href=&#34;lang/cpp17/guaranteed_copy_elision.html&#34;&gt;値のコピー省略を保証&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;一時オブジェクトをコピーする際に、単純な値を持つクラスであればコピーが省略されることを保証する&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;19.1&lt;/td&gt;
&lt;td&gt;2017 Update 6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0145R3: &lt;a href=&#34;lang/cpp17/expression_evaluation_order.html&#34;&gt;厳密な式の評価順&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;式の項が評価される順序を厳密に規定する。&lt;br /&gt; &lt;code&gt;b = a;&lt;/code&gt;の式が右から順番(a, bの順)に評価される&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;19.1&lt;/td&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0283R2: &lt;a href=&#34;lang/cpp17/non_standard_attributes.html&#34;&gt;不明な属性を無視する&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;実装が知らない名前空間の属性は無視する&lt;/td&gt;
&lt;td&gt;4.8&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0292R2: &lt;a href=&#34;lang/cpp17/if_constexpr.html&#34;&gt;constexpr if文&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;if constexpr(cond)&lt;/code&gt;とすることで、そのif文はコンパイル時に処理される&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;19.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0386R2: &lt;a href=&#34;lang/cpp17/inline_variables.html&#34;&gt;インライン変数&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;インライン指定を関数だけでなく変数にも指定できるようにする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;19.0&lt;/td&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0217R3: &lt;a href=&#34;lang/cpp17/structured_bindings.html&#34;&gt;構造化束縛&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;タプルやユーザー定義型を分解して受け取れるようにする&lt;br /&gt; &lt;code&gt;tuple&amp;lt;int, string&amp;gt; f();&lt;/code&gt; &lt;br /&gt; &lt;code&gt;const auto [a, b] = f(); // aはintの値、bはstringの値&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0305R1: &lt;a href=&#34;lang/cpp17/selection_statements_with_initializer.html&#34;&gt;if文とswitch文の条件式と初期化を分離&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;if (init; condition)&lt;/code&gt;のように初期化と条件式を分けて記述できるようにする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0137R1: &lt;a href=&#34;lang/cpp17/replacement_of_class_objects_containing_reference_members.html&#34;&gt;参照メンバをもつクラスの置き換え&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;参照型メンバや&lt;code&gt;const&lt;/code&gt;メンバ変数を含むクラスについてこれまで結果は未定義とされていた配置&lt;code&gt;new&lt;/code&gt;によるオブジェクトの置き換えを条件付きで可能とする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;6.0&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0003R5: &lt;a href=&#34;lang/cpp17/remove_deprecated_exception_specifications.html&#34;&gt;非推奨だった例外仕様を削除&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;noexcept&lt;/code&gt;が入ったことによって非推奨になった&lt;code&gt;throw&lt;/code&gt;キーワードによる例外仕様を削除&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0195R2: &lt;a href=&#34;lang/cpp17/pack_expansions_in_using.html&#34;&gt;using宣言でのパック展開&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;パラメータパックの型を基底クラスとして指定した場合に、&lt;code&gt;using&lt;/code&gt;宣言に基底クラスのパラメータパックを指定できるようにする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0512R0: &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0512r0.pdf&#34; target=&#34;_blank&#34;&gt;クラステンプレート引数の推論仕様を調整&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;5.0&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0490R0: &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0490r0.html&#34; target=&#34;_blank&#34;&gt;Committee Draftに対するNational Body Commentへの対応&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0522R0: &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0522r0.html&#34; target=&#34;_blank&#34;&gt;テンプレートテンプレート引数のマッチングにおいて、互換性のあるテンプレートを除外&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4 (partial)&lt;/td&gt;
&lt;td&gt;19.1&lt;/td&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;各処理系のC++17実装状況ページ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GCC: &lt;a href=&#34;https://gcc.gnu.org/projects/cxx-status.html#cxx17&#34; target=&#34;_blank&#34;&gt;C++17 Support in GCC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Clang: &lt;a href=&#34;http://clang.llvm.org/cxx_status.html&#34; target=&#34;_blank&#34;&gt;C++ Support in Clang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;libc++ : &lt;a href=&#34;https://libcxx.llvm.org/Status/Cxx17.html&#34; target=&#34;_blank&#34;&gt;libc++ C++17 Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Visual C++ (MSVC):&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/ja-jp/cpp/visual-cpp-language-conformance&#34; target=&#34;_blank&#34;&gt;Visual C++ 言語への準拠&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/vcblog/2018/05/07/announcing-msvc-conforms-to-the-c-standard/&#34; target=&#34;_blank&#34;&gt;Announcing: MSVC Conforms to the C++ Standard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ICC: &lt;a href=&#34;https://software.intel.com/en-us/articles/c17-features-supported-by-intel-c-compiler&#34; target=&#34;_blank&#34;&gt;C++17 Features Supported by Intel C++ Compiler&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#cpp20&#34; id=&#34;cpp20&#34;&gt;C++20言語機能の実装状況&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;言語機能&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#clang&#34;&gt;Clang&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#icc&#34;&gt;ICC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#visual_cpp&#34;&gt;MSVC&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;P0683R1: &lt;a href=&#34;lang/cpp20/default_member_initializers_for_bit_fields.html&#34;&gt;ビットフィールドのメンバ変数初期化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ビットフィールドメンバ変数のデフォルト値を設定する構文を追加する&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;6.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0409R2: &lt;a href=&#34;lang/cpp20/allow_lambda_capture_equal_this.html&#34;&gt;ラムダ式のキャプチャとして&lt;code&gt;[=, this]&lt;/code&gt;を許可する&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;デフォルトコピーキャプチャと&lt;code&gt;this&lt;/code&gt;ポインタのコピーキャプチャを両方指定できるようにする&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;6.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0806R2: &lt;a href=&#34;lang/cpp20/deprecate_implicit_capture_of_this_via_defcopy.html&#34;&gt;&lt;code&gt;[=]&lt;/code&gt;による&lt;code&gt;this&lt;/code&gt;の暗黙のキャプチャを非推奨化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コピーのデフォルトキャプチャでは、&lt;code&gt;this&lt;/code&gt;ポインタをキャプチャされなくする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0428R2: &lt;a href=&#34;lang/cpp20/familiar_template_syntax_for_generic_lambdas.html&#34;&gt;ジェネリックラムダのテンプレート構文&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ジェネリックラムダでテンプレートパラメータを定義できるようにする&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0704R1: &lt;a href=&#34;lang/cpp20/fixing_const_qualified_pointers_to_members.html&#34;&gt;&lt;code&gt;const&lt;/code&gt;修飾されたメンバポインタの制限を修正&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;.*&lt;/code&gt;演算子での左辺値の&lt;code&gt;const&lt;/code&gt;メンバ関数呼び出しを許可する&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;6.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0306R4: &lt;a href=&#34;lang/cpp20/va_opt.html&#34;&gt;可変引数が空でない場合のトークン置換&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;プリプロセッサの置換で可変引数が空の場合に余計なカンマが付いてしまう問題に対処&lt;/td&gt;
&lt;td&gt;8 (partial, &lt;code&gt;#__VA_OPT__&lt;/code&gt;による文字列化が未サポート)&lt;/td&gt;
&lt;td&gt;6.0&lt;br /&gt; 9.0 (&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1042r1.html&#34; target=&#34;_blank&#34;&gt;p1042&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0329R4: &lt;a href=&#34;lang/cpp20/designated_initialization.html&#34;&gt;指示付き初期化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;波カッコによる集成体初期化でメンバ名を指定して初期化できるようにする&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;6.0 (partial)&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0734R0: &lt;a href=&#34;lang/cpp20/concepts.html&#34;&gt;コンセプト&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;テンプレートパラメータに対する制約を行う&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;10.0 (partial)&lt;/td&gt;
&lt;td&gt;2021.6&lt;/td&gt;
&lt;td&gt;2019 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0614R1: &lt;a href=&#34;lang/cpp20/range-based_for_statements_with_initializer.html&#34;&gt;初期化式をともなう範囲for文&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;範囲for文スコープで使用する変数の初期化のための構文を追加&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;2021.7&lt;/td&gt;
&lt;td&gt;2019 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0588R1: &lt;a href=&#34;lang/cpp20/simplifying_implicit_lambda_capture.html&#34;&gt;暗黙のラムダキャプチャを簡略化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ラムダ式のキャプチャに関する仕様整理&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0846R0: &lt;a href=&#34;lang/cpp20/adl_and_function_templates_that_are_not_visible.html&#34;&gt;関数テンプレートに明示的に型指定した場合にADLで見つからない問題を修正&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;名前空間内の関数テンプレートをテンプレート引数指定かつ非修飾・ADLで正しく呼び出せるよう修正&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0641R2: &lt;a href=&#34;lang/cpp20/resolving_const_mismatch_with_defaulted_copy_constructor.html&#34;&gt;デフォルトのコピーコンストラクタと非&lt;code&gt;const&lt;/code&gt;なコンストラクタが衝突する問題を修正&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;非&lt;code&gt;const&lt;/code&gt;なオブジェクトをとるコンストラクタを定義すると、そのクラスをラップしたクラスのコピーコンストラクタが&lt;a class=&#34;cpprefjp-defined-word&#34;&gt;不適格&lt;/a&gt;になってしまう問題を修正&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0859R0: &lt;a href=&#34;lang/cpp20/less_eager_instantiation_of_constexpr_functions.html&#34;&gt;評価されない文脈での定数式評価によって特殊メンバ関数がインスタンス化されることを規定&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;sizeof&lt;/code&gt;や&lt;code&gt;decltype&lt;/code&gt;などの評価されない文脈において定数式評価を行った場合に、ムーブコンストラクタのような特殊メンバ関数が定義されることを規定&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Partial in 2019 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0515R3: &lt;a href=&#34;lang/cpp20/consistent_comparison.html&#34;&gt;一貫比較&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;三方比較演算子によって比較演算子の自動生成を行うようにする&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;8.0 (partial)&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0692R1: &lt;a href=&#34;lang/cpp20/access_checking_on_specializations.html&#34;&gt;特殊化のアクセスチェック&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;partial&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0624R2: &lt;a href=&#34;lang/cpp20/default_constructible_and_assignable_stateless_lambdas.html&#34;&gt;状態を持たないラムダ式を、デフォルト構築可能、代入可能とする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;キャプチャしていないラムダ式をデフォルト構築・代入可能にする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0767R1: &lt;a href=&#34;lang/cpp20/deprecate_pod.html&#34;&gt;PODを非推奨化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;PODという用語を非推奨化する&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0315R4: &lt;a href=&#34;lang/cpp20/wording_for_lambdas_in_unevaluated_contexts.html&#34;&gt;評価されない文脈でのラムダ式&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;評価されない文脈でもラムダ式を書くことができるようにする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;Partial&lt;/td&gt;
&lt;td&gt;2024.0&lt;/td&gt;
&lt;td&gt;2019 Update 8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0840R2: &lt;a href=&#34;lang/cpp20/language_support_for_empty_objects.html&#34;&gt;空オブジェクトを言語サポート&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[[no_unique_address]]&lt;/code&gt;属性を導入し、空の型のオブジェクトをほかのオブジェクトと共有する最適化を許可する&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 9 &lt;sup&gt;&lt;a href=&#34;#note-t1-1&#34; id=&#34;note_ref-t1-1&#34;&gt;†1&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0962R1: &lt;a href=&#34;lang/cpp20/relaxing_the_range_for_loop_customization_point_finding_rules.html&#34;&gt;範囲for文がカスタマイゼーションポイントを見つけるルールを緩和&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;begin()&lt;/code&gt;/&lt;code&gt;end()&lt;/code&gt;メンバ関数のどちらかが見つからなかった場合に非メンバ関数の&lt;code&gt;begin()&lt;/code&gt;/&lt;code&gt;end()&lt;/code&gt;を探しにいく&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0969R0: &lt;a href=&#34;lang/cpp20/allow_structured_bindings_to_accessible_members.html&#34;&gt;friend指定された関数内から構造化束縛を使用して非公開メンバ変数にアクセスすることを許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;構造化束縛の仕様として公開メンバ変数のみを取り出せるようになっていたが、friend指定された関数からは非公開メンバ変数にもアクセスできるようにする&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0961R1: &lt;a href=&#34;lang/cpp20/relaxing_the_structured_bindings_customization_point_finding_rules.html&#34;&gt;構造化束縛がカスタマイゼーションポイントを見つけるルールを緩和&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;非テンプレートの&lt;code&gt;get()&lt;/code&gt;メンバ関数が見つかった場合は、非メンバ関数の&lt;code&gt;get()&lt;/code&gt;を探しにいく&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0634R3: &lt;a href=&#34;lang/cpp20/down_with_typename.html&#34;&gt;型の文脈で&lt;code&gt;typename&lt;/code&gt;の省略を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;型しか現れない文脈では、依存名を解決するための&lt;code&gt;typename&lt;/code&gt;キーワードを省略できるようにする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;2023.1&lt;/td&gt;
&lt;td&gt;2019 Update 9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0780R2: &lt;a href=&#34;lang/cpp20/allow_pack_expansion_in_lambda_init_capture.html&#34;&gt;ラムダ式の初期化キャプチャでのパック展開を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[...args = std::move(args)]&lt;/code&gt;のようなキャプチャを許可&lt;/td&gt;
&lt;td&gt;9&lt;br /&gt;10&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;2021.7&lt;/td&gt;
&lt;td&gt;2019 Update 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0479R5: &lt;a href=&#34;lang/cpp20/likely_and_unlikely_attributes.html&#34;&gt;確率が高い分岐と低い分岐を伝える属性 &lt;code&gt;[[likely]]&lt;/code&gt;, &lt;code&gt;[[unlikely]]&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;条件分岐の最適化ヒントを与える属性&lt;/td&gt;
&lt;td&gt;9 (partial, &lt;code&gt;switch&lt;/code&gt; 文のみ可能)&lt;br /&gt; 10&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;2021.7&lt;/td&gt;
&lt;td&gt;2019 Update 6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0929R2: &lt;a href=&#34;lang/cpp20/checking_for_abstract_class_types.html&#34;&gt;抽象型のチェック&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;関数の宣言段階では、パラメータおよび戻り値型が抽象型かどうかをチェックしないようにする&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0732R2: &lt;a href=&#34;lang/cpp20/class_types_in_non-type_template_parameters.html&#34;&gt;非型テンプレートパラメータとしてクラス型を許可する&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;定数式として使用できる型を広く非型テンプレートパラメータとして使用できるようにする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;partial&lt;/td&gt;
&lt;td&gt;2022.2 Partial&lt;/td&gt;
&lt;td&gt;2019 Update 6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0722R3: &lt;a href=&#34;lang/cpp20/efficient_sized_delete_for_variable_sized_classes.html&#34;&gt;可変長データを扱うクラスの効率的な&lt;code&gt;delete&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;クラスの&lt;code&gt;delete&lt;/code&gt;演算子が呼び出される前にデストラクタが呼ばれないようにするオプションを追加&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;6.0&lt;/td&gt;
&lt;td&gt;2023.0&lt;/td&gt;
&lt;td&gt;2019 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1064R0: &lt;a href=&#34;lang/cpp20/allow_virtual_function_calls_in_constant_expressions.html&#34;&gt;定数式からの仮想関数の呼び出しを許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;仮想関数に&lt;code&gt;constexpr&lt;/code&gt;を付けられない制限を解除&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1327R1: &lt;a href=&#34;lang/cpp20/allowing_dynamic_cast_polymorphic_typeid_in_constant_expressions.html&#34;&gt;定数式での&lt;code&gt;dynamic_cast&lt;/code&gt;、多態的な&lt;code&gt;typeid&lt;/code&gt;を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;定数式での動的多態を許可&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1002R1: &lt;a href=&#34;lang/cpp20/try-catch_blocks_in_constexpr_functions.html&#34;&gt;constexpr関数内でのtry-catchブロックを許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;constexpr関数内でtry-catchブロックを書けるようにする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;2023.1&lt;/td&gt;
&lt;td&gt;2019 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1073R3: &lt;a href=&#34;lang/cpp20/immediate_functions.html&#34;&gt;即時関数&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;consteval&lt;/code&gt;キーワードを追加し、常に定数式評価されるよう指定できるようにする&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1330R0: &lt;a href=&#34;lang/cpp20/changing_the_active_member_of_a_union_inside_constexpr.html&#34;&gt;定数式内での共用体のアクティブメンバの変更を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;共用体メンバの書き換えを定数式内で行えるようにする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1008R1: &lt;a href=&#34;lang/cpp20/prohibit_aggregates_with_user-declared_constructors.html&#34;&gt;ユーザー宣言したコンストラクタを持つクラスの集成体初期化を禁止&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コンストラクタが&lt;code&gt;delete&lt;/code&gt;／&lt;code&gt;default&lt;/code&gt;宣言されているクラスを、集成体初期化によってコンストラクタ呼び出しを回避して構築できてしまっていた技法を禁止&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0892R2: &lt;a href=&#34;lang/cpp20/explicit_bool.html&#34;&gt;関数を条件付きで&lt;code&gt;explicit&lt;/code&gt;にする構文を追加&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;explicit(true)&lt;/code&gt;のように&lt;code&gt;explicit&lt;/code&gt;に真理値パラメータを指定できるようにする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1236R1: &lt;a href=&#34;lang/cpp20/signed_integers_are_twos_complement.html&#34;&gt;符号付き整数型が2の補数表現であることを規定&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;符号付き整数型のビット表現を2の補数に規定する&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;2023.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0482R6: &lt;a href=&#34;lang/cpp20/char8_t.html&#34;&gt;UTF-8エンコーディングされた文字の型として&lt;code&gt;char8_t&lt;/code&gt;を追加&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;UTF-8エンコードされた文字かどうかでオーバーロード・特殊化をできるようにする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;7 (&lt;code&gt;-fchar8_t&lt;/code&gt;オプションが必要)&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1094R2: &lt;a href=&#34;lang/cpp20/nested_inline_mamespaces.html&#34;&gt;入れ子名前空間定義でのインライン名前空間&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;namespace ns1::inline ns2::ns3 {}&lt;/code&gt;のように、入れ子名前空間を定義する式にインライン名前空間の指定を含められるようにする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1091R3: &lt;a href=&#34;lang/cpp20/extending_structured_bindings_to_be_more_like_variable_declarations.html&#34;&gt;構造化束縛を拡張して通常の変数宣言のように使用できるようにする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;記憶域指定子として&lt;code&gt;static&lt;/code&gt;と&lt;code&gt;thread_local&lt;/code&gt;の指定を許可&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;8.0 (partial)&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1381R1: &lt;a href=&#34;lang/cpp20/reference_capture_of_structured_bindings.html&#34;&gt;構造化束縛した変数の参照キャプチャを許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;構造化束縛をした変数は特殊な扱いのためラムダ式で参照キャプチャできない規定となっていたがこれを許可する&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;8.0 (partial)&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0960R3: &lt;a href=&#34;lang/cpp20/allow_initializing_aggregates_from_a_parenthesized_list_of_values.html&#34;&gt;丸カッコの値リストからの集成体初期化を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;T x{1, 2, 3};&lt;/code&gt;と同様に&lt;code&gt;T x(1, 2, 3);&lt;/code&gt;でも集成体初期化できるようにする&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1009R2: &lt;a href=&#34;lang/cpp20/array_size_deduction_in_new-expressions.html&#34;&gt;&lt;code&gt;new&lt;/code&gt;式での配列要素数の推論&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;double* p = new double[]{1,2,3};&lt;/code&gt;を許可&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1041R4: &lt;a href=&#34;lang/cpp20/make_char16t_char32t_string_literals_be_utf16_32.html&#34;&gt;&lt;code&gt;char16_t&lt;/code&gt;と&lt;code&gt;char32_t&lt;/code&gt;の文字・文字列リテラルを、文字コードUTF-16/32に規定&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;__STDC_UTF_16__&lt;/code&gt;、&lt;code&gt;__STDC_UTF_32__&lt;/code&gt;の定義に関係なく、&lt;code&gt;char16_t&lt;/code&gt;、&lt;code&gt;char32_t&lt;/code&gt;のリテラルをUTF-16/32文字コードに規定する&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;2023.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1103R3: &lt;a href=&#34;lang/cpp20/modules.html&#34;&gt;モジュール&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ヘッダファイル・ソースファイル、インクルードに変わる仕組みとしてモジュールを導入する&lt;/td&gt;
&lt;td&gt;11 (&lt;code&gt;-fmodules-ts&lt;/code&gt;が必要)&lt;/td&gt;
&lt;td&gt;15&lt;br /&gt;8.0 partial (&lt;code&gt;-fmodules&lt;/code&gt;, &lt;code&gt;-fmodules-ts&lt;/code&gt;が必要)&lt;/td&gt;
&lt;td&gt;2023.1 (Partial)&lt;/td&gt;
&lt;td&gt;2019 Update 8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0912R5: &lt;a href=&#34;lang/cpp20/coroutines.html&#34;&gt;コルーチン&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;関数実行を中断・再開する仕組みとしてコルーチンを導入する&lt;/td&gt;
&lt;td&gt;10 (&lt;code&gt;-fcoroutines&lt;/code&gt;が必要)&lt;/td&gt;
&lt;td&gt;8.0 (partial)&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1161R3: &lt;a href=&#34;lang/cpp20/deprecate_uses_of_the_comma_operator_in_subscripting_expressions.html&#34;&gt;添字演算子内でのカンマ演算子の使用を非推奨化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ar[i, j]&lt;/code&gt;を非推奨化。&lt;code&gt;ar[(i, j)]&lt;/code&gt;はOK&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;2021.6&lt;/td&gt;
&lt;td&gt;2019 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1331R2: &lt;a href=&#34;lang/cpp20/permitting_trivial_default_initialization_in_constexpr_contexts.html&#34;&gt;constexpr関数内でのトリビアルなデフォルト初期化を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;constexpr関数内でのデフォルト初期化を許可し、未初期化値を読むことのみ禁止する&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;10.0&lt;/td&gt;
&lt;td&gt;2022.3&lt;/td&gt;
&lt;td&gt;2019 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0848R3: &lt;a href=&#34;lang/cpp20/conditionally_trivial_special_member_functions.md.nolink&#34;&gt;条件付きで特殊メンバ関数をトリビアルに定義するように&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;制約によってトリビアルな特殊メンバ関数と非トリビアルな特殊メンバ関数をオーバーロードできるようにする&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;16 Partial (consepts 未実装部あり)&lt;/td&gt;
&lt;td&gt;2022.3&lt;/td&gt;
&lt;td&gt;2019 Update 8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1301R4: &lt;a href=&#34;lang/cpp20/nodiscard_should_have_a_reason.html&#34;&gt;&lt;code&gt;[[nodiscard]]&lt;/code&gt;属性に理由となる文字列を付加できるようにする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;関数の戻り値を無視してはならない理由を関数宣言に持たせ、警告メッセージに役立てる&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;2021.6&lt;/td&gt;
&lt;td&gt;2019 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1099R5: &lt;a href=&#34;lang/cpp20/using_enum.html&#34;&gt;スコープ付き列挙型のusing宣言&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;using enum EnumType;&lt;/code&gt;もしくは&lt;code&gt;using EnumType::enumerator&lt;/code&gt;とすることで、列挙値のスコープ指定を省略できるようにする&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;2023.0&lt;/td&gt;
&lt;td&gt;2019 Update 4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1816R0: &lt;a href=&#34;lang/cpp20/class_template_argument_deduction_for_aggregates.html&#34;&gt;集成体クラステンプレートのテンプレート引数推論&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;クラステンプレートのテンプレート引数推論はコンストラクタ引数から推論されるが、集成体初期化からも推論できるようにする&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2024.0&lt;/td&gt;
&lt;td&gt;2019 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1668R1: &lt;a href=&#34;lang/cpp20/enabling_constexpr_intrinsics_by_permitting_unevaluated_inline-assembly_in_constexpr_functions.html&#34;&gt;constexpr関数内で未評価のインラインアセンブリを許可することによる組み込み関数のconstexpr有効化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コンパイル時に評価されない場合にconstexpr関数にasm定義を含めることを許可&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;10.0&lt;/td&gt;
&lt;td&gt;2022.3&lt;/td&gt;
&lt;td&gt;2019 Update 9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0388R4: &lt;a href=&#34;lang/cpp20/permit_conversions_to_arrays_of_unknown_bound.html&#34;&gt;要素数不明の配列への変換を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;要素数が判明している配列から、要素数が不明の配列への変換を許可&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;2021.6&lt;/td&gt;
&lt;td&gt;2019 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1143R2: &lt;a href=&#34;lang/cpp20/constinit.html&#34;&gt;コンパイル時初期化を強制する&lt;code&gt;constinit&lt;/code&gt;キーワードを追加&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;初期化のみコンパイル時におわらせたい場合に使用する&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;10.0&lt;/td&gt;
&lt;td&gt;2022.3&lt;/td&gt;
&lt;td&gt;2019 Update 10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1152R4: &lt;a href=&#34;lang/cpp20/deprecating_volatile.html&#34;&gt;ほとんどの&lt;code&gt;volatile&lt;/code&gt;を非推奨化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;volatile&lt;/code&gt;の有用な機能のみを残し、効果が疑わしい、または壊れている機能を非推奨化する&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;10.0&lt;/td&gt;
&lt;td&gt;2021.6&lt;/td&gt;
&lt;td&gt;2019 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1814R0: &lt;a href=&#34;lang/cpp20/class_template_argument_deduction_for_alias_templates.html&#34;&gt;エイリアステンプレート経由でのクラステンプレートのテンプレート引数推論&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;エイリアステンプレートからクラステンプレートのテンプレート引数を推論できるようにする&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0784R7: &lt;a href=&#34;lang/cpp20/more_constexpr_containers.html&#34;&gt;可変サイズをもつコンテナの&lt;code&gt;constexpr&lt;/code&gt;化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;constexpr&lt;/code&gt;記憶域をもつメモリアロケータの存在を考慮することで、可変サイズをもつコンテナをコンパイル時に使用できるようにする&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;10.0&lt;/td&gt;
&lt;td&gt;2021.6&lt;/td&gt;
&lt;td&gt;2019 Update 9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1957R2: &lt;a href=&#34;lang/cpp20/converting_from_pointer_to_bool_should_be_considered_narrowing.html&#34;&gt;ポインタから&lt;code&gt;bool&lt;/code&gt;への変換を縮小変換とする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ポインタから&lt;code&gt;bool&lt;/code&gt;値への変換を縮小変換と規定することで、意図しない変換を防止する&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;11.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#note_ref-t1-1&#34; id=&#34;note-t1-1&#34;&gt;&lt;strong&gt;^&lt;/strong&gt;&lt;/a&gt; 不明な属性として無視されなくなっただけで期待する効果は得られない。完全に実装されるまでは、代わりに&lt;code&gt;&lt;a href=&#34;https://devblogs.microsoft.com/cppblog/msvc-cpp20-and-the-std-cpp20-switch/#msvc-extensions-and-abi&#34; target=&#34;_blank&#34;&gt;[[msvc::no_unique_address]]&lt;/a&gt;&lt;/code&gt;を使用できる。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;各処理系のC++20実装状況ページ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GCC: &lt;a href=&#34;https://gcc.gnu.org/projects/cxx-status.html#cxx20&#34; target=&#34;_blank&#34;&gt;C++20 Support in GCC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Clang: &lt;a href=&#34;http://clang.llvm.org/cxx_status.html&#34; target=&#34;_blank&#34;&gt;C++ Support in Clang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;libstdc++: &lt;a href=&#34;https://gcc.gnu.org/onlinedocs/libstdc++/manual/status.html#status.iso.2020&#34; target=&#34;_blank&#34;&gt;C++ 2020 Implementation Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;libc++: &lt;a href=&#34;https://libcxx.llvm.org/Status/Cxx20.html&#34; target=&#34;_blank&#34;&gt;libc++ C++20 Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Visual C++ (MSVC):&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/ja-jp/cpp/visual-cpp-language-conformance&#34; target=&#34;_blank&#34;&gt;Visual C++ 言語への準拠&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/STL/wiki/Changelog&#34; target=&#34;_blank&#34;&gt;次リリース情報(VS2019,2022) - Change log&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ICC: &lt;a href=&#34;https://www.intel.com/content/www/us/en/developer/articles/technical/c20-features-supported-by-intel-cpp-compiler.html&#34; target=&#34;_blank&#34;&gt;C++20 Features Supported by Intel® C++ Compiler&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#cpp23&#34; id=&#34;cpp23&#34;&gt;C++23言語機能の実装状況&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;言語機能&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#clang&#34;&gt;Clang&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#icc&#34;&gt;ICX&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#visual_cpp&#34;&gt;MSVC&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;P0330R8: &lt;a href=&#34;lang/cpp23/literal_suffix_for_signed_size_t.html&#34;&gt;(符号付き)&lt;code&gt;size_t&lt;/code&gt;リテラルのためのサフィックス&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;42z&lt;/code&gt;/&lt;code&gt;42Z&lt;/code&gt;とすることで&lt;code&gt;size_t&lt;/code&gt;に対応する符号付き整数型のリテラルとする&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;2022.2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2290R3: &lt;a href=&#34;lang/cpp23/delimited_escape_sequences.html&#34;&gt;エスケープシーケンスの区切り&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;エスケープシーケンスの範囲を明確にする構文を追加する&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;2023.2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2266R3: &lt;a href=&#34;lang/cpp23/simpler_implicit_move.html&#34;&gt;暗黙的なムーブを簡略化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;参照を返す関数の&lt;code&gt;return&lt;/code&gt;文で暗黙的にムーブされない問題を修正&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;2022.2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1787R6: &lt;a href=&#34;lang/cpp23/declarations_and_where_to_find_them.md.nolink&#34;&gt;スコープと名前ルックアップの仕様整理&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;複雑で不完全になっているスコープと名前ルックアップの仕様を整理し、一部の問題を解決する&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2615R1: &lt;a href=&#34;lang/cpp23/meaningful_exports.html&#34;&gt;無意味なexport宣言を禁止する&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;いくつかの不必要な宣言に対するモジュールexportを禁止する&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2360R0: &lt;a href=&#34;lang/cpp23/extend_init_statement_to_allow_alias_declaration.html&#34;&gt;初期化文での型の別名宣言を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;for (using T = int; T e : v) {}&lt;/code&gt;を許可&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;2022.2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2718R0: &lt;a href=&#34;lang/cpp23/lifetime_extension_in_range_based_for_loop.html&#34;&gt;範囲for文が範囲初期化子内で生じた一時オブジェクトを延命することを規定&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;範囲初期化子内で生じた一時オブジェクトは範囲for文の終わりまで延命される&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2324R2: &lt;a href=&#34;lang/cpp23/labels_at_the_end_of_compound_statements.html&#34;&gt;複合文の末尾へのラベルを許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;C互換のため、複合文の末尾でのgoto文のラベルを許可する&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;2023.2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0847R7: &lt;a href=&#34;lang/cpp23/deducing_this.md.nolink&#34;&gt;自身のオブジェクトを明示的にパラメータとして指定する&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;メンバ関数が&lt;code&gt;*this&lt;/code&gt;の型・オブジェクトをパラメータとしてとり、&lt;code&gt;*this&lt;/code&gt;オブジェクトがconst/非const、左辺値/右辺値であるかをメンバ関数内で識別できるようにする&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;2022 Update 2 (partial)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1847R4: &lt;a href=&#34;lang/cpp23/make_declaration_order_layout_mandated.html&#34;&gt;アクセス制御の異なるメンバ変数のレイアウトを宣言順に規定&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;アクセス制御の異なるメンバ変数のレイアウトは並び替えを許可されていたが宣言順に規定する&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;2022&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2128R6: &lt;a href=&#34;lang/cpp23/multidimensional_subscript_operator.html&#34;&gt;添字演算子の多次元サポート&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;operator[](int x, int y, int z)&lt;/code&gt;のように添字演算子のオーバーロードで複数のパラメータをとることを許可&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;2022.2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1169R4: &lt;a href=&#34;lang/cpp23/static_operator.html&#34;&gt;&lt;code&gt;this&lt;/code&gt;ポインタをもつ必要のない演算子を&lt;code&gt;static&lt;/code&gt;として宣言できるようにする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;状態をもたないいくつかの演算子を&lt;code&gt;static&lt;/code&gt;として宣言できるようにする&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;2023.2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2201R1: &lt;a href=&#34;lang/cpp23/mixed_string_literal_concatenation.html&#34;&gt;異なる文字エンコーディングをもつ文字列リテラルの連結を不適格とする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;auto a = u8&#34;&#34; L&#34;&#34;;&lt;/code&gt;のような異なる文字エンコーディング同士での文字列リテラルを連結を禁止する&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;2022.2&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2029R4: &lt;a href=&#34;lang/cpp23/numeric_and_universal_character_escapes_in_character_and_string_literals.md.nolink&#34;&gt;文字・文字列リテラル中の数値・ユニバーサルキャラクタのエスケープに関する問題解決&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2362R3: &lt;a href=&#34;lang/cpp23/remove_non_encodable_wide_character_literals_and_multicharacter_wide_character_literals.html&#34;&gt;1ワイド文字に収まらないワイド文字リテラルを禁止する&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;エンコード結果として&lt;code&gt;wchar_t&lt;/code&gt;の大きさに収まらないワイド文字リテラルを禁止する&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;2023.2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2071R2: &lt;a href=&#34;lang/cpp23/named_universal_character_escapes.html&#34;&gt;名前付きユニバーサルキャラクタ名&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;16進数のユニバーサルキャラクタだけでなく、その文字の名前を入力できるようにする&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;2023.2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2096R2: &lt;a href=&#34;lang/cpp23/generalized_wording_for_partial_specializations.html&#34;&gt;変数テンプレートの部分特殊化を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;変数テンプレートの部分特殊化を許可するために部分特殊化の仕様を汎用化&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2582R1: &lt;a href=&#34;lang/cpp23/class_template_argument_deduction_from_inherited.html&#34;&gt;継承コンストラクタからのクラステンプレート引数の推論&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;継承コンストラクタからもクラステンプレート引数を推論できるようにする&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1938R3: &lt;code&gt;&lt;a href=&#34;lang/cpp23/if_consteval.html&#34;&gt;if consteval&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;コンパイル時の文脈かどうかで分岐させる&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1401R5: &lt;a href=&#34;lang/cpp23/narrowing_contextual_conversions_to_bool.html&#34;&gt;定数式の文脈での&lt;code&gt;bool&lt;/code&gt;への縮小変換を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;if constexpr(flags &amp;amp; Flags::Exec)&lt;/code&gt;や&lt;code&gt;static_assert(N);&lt;/code&gt;を許可&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;2022.2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2242R3: &lt;a href=&#34;lang/cpp23/non_literal_variables_in_constexpr_functions.html&#34;&gt;定数式内での非リテラル変数、静的変数・スレッドローカル変数およびgotoとラベルの存在を許可する&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コンパイル時に評価されない限り、定数式内に静的変数・スレッドローカル変数およびgoto文とラベルを含むことを許可する&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;2022.2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2246R1: &lt;a href=&#34;lang/cpp23/character_encoding_of_diagnostic_text.html&#34;&gt;静的な診断メッセージの文字エンコーディング&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;static_assert&lt;/code&gt;や&lt;code&gt;[[deprecated]]&lt;/code&gt;などの診断メッセージの文字集合に関する要件をなくす&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;2022&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2448R2: &lt;a href=&#34;lang/cpp23/relaxing_some_constexpr_restrictions.html&#34;&gt;&lt;code&gt;constexpr&lt;/code&gt;関数が定数実行できない場合でも適格とする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;17 (partial)&lt;/td&gt;
&lt;td&gt;2024.0 (partial)&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2647R1: &lt;a href=&#34;lang/cpp23/permitting_static_constexpr_variables_in_constexpr_functions.html&#34;&gt;&lt;code&gt;constexpr&lt;/code&gt;関数内での&lt;code&gt;static constexpr&lt;/code&gt;変数を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;constexpr&lt;/code&gt;関数のローカルで定数を定義できるようにする&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;2023.2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2564R3: &lt;a href=&#34;lang/cpp23/consteval_needs_to_propagate_up.html&#34;&gt;&lt;code&gt;constexpr&lt;/code&gt;関数内で&lt;code&gt;consteval&lt;/code&gt;関数を呼び出せない問題を緩和&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;consteval&lt;/code&gt;呼び出しを含む&lt;code&gt;constexpr&lt;/code&gt;関数を条件付きで&lt;code&gt;consteval&lt;/code&gt;関数とみなすようにする&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;2024.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1102R2: &lt;a href=&#34;lang/cpp23/down_with_lambda_parens.html&#34;&gt;ラムダ式で&lt;code&gt;()&lt;/code&gt;を省略できる条件を緩和&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;修飾や戻り値型をともなってもパラメータリストが空であれば&lt;code&gt;()&lt;/code&gt;を省略できる&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;2022.2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2173R1: &lt;a href=&#34;lang/cpp23/attributes_on_lambda_expressions.html&#34;&gt;ラムダ式に対する属性&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ラムダ式のいくつかの箇所に属性を記述できるようにする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;2022.2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1774R8: &lt;a href=&#34;lang/cpp23/portable_assumptions.html&#34;&gt;コード内容の仮定をコンパイラに伝えるassume属性&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;最適化のために、コードの仮定をコンパイラに伝える属性を標準化する&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2316R2: &lt;a href=&#34;lang/cpp23/consistent_character_literal_encoding.html&#34;&gt;文字リテラルエンコーディングを一貫させる&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;プリプロセッサの条件式での文字リテラルの扱いをC++式と同様にする&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;2022.2&lt;/td&gt;
&lt;td&gt;2022&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2334R1: &lt;a href=&#34;lang/cpp23/add_support_for_preprocessing_directives_elifdef_and_elifndef.html&#34;&gt;&lt;code&gt;elif&lt;/code&gt;/&lt;code&gt;elifdef&lt;/code&gt;/&lt;code&gt;elifndef&lt;/code&gt;のサポートを追加&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#if&lt;/code&gt;/&lt;code&gt;#ifdef&lt;/code&gt;/&lt;code&gt;#ifndef&lt;/code&gt;に対応する複数条件命令のサポートを追加する&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;2022.2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2437R1: &lt;a href=&#34;lang/cpp23/warning.html&#34;&gt;&lt;code&gt;#warning&lt;/code&gt;のサポートを追加&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;多くのC++コンパイラが実装していたプリプロセス時の警告&lt;code&gt;#warning message&lt;/code&gt;を正式サポート&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;2023.2&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2295R6: &lt;a href=&#34;lang/cpp23/support_for_utf8_as_a_portable_source_file_encoding.html&#34;&gt;汎用的なソースコードのエンコーディングとしてUTF-8をサポート&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;すべてのコンパイラはUTF-8文字コードのソースコードをサポートしなければならない&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;2023.2&lt;/td&gt;
&lt;td&gt;2019 Update 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2223R2: &lt;a href=&#34;lang/cpp23/trimming_whitespaces_before_line_splicing.html&#34;&gt;行末スペースを無視するよう規定&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;行末が「&lt;code&gt;\ &lt;/code&gt;」でおわっていた場合にMSVCは行の継続をしない実装になっていたため動作を共通化するため仕様を規定&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;2022.2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;各処理系のC++23実装状況ページ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GCC: &lt;a href=&#34;https://gcc.gnu.org/projects/cxx-status.html#cxx23&#34; target=&#34;_blank&#34;&gt;C++23 Support in GCC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Clang: &lt;a href=&#34;https://clang.llvm.org/cxx_status.html#cxx23&#34; target=&#34;_blank&#34;&gt;C++2b implementation status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Visual C++ (MSVC):&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/ja-jp/cpp/visual-cpp-language-conformance&#34; target=&#34;_blank&#34;&gt;Visual C++ 言語への準拠&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/STL/wiki/Changelog&#34; target=&#34;_blank&#34;&gt;次リリース情報(VS2019,2022) - Change log&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ICX: &lt;a href=&#34;https://www.intel.com/content/www/us/en/developer/articles/technical/c23-features-supported-by-intel-c-compiler.html&#34; target=&#34;_blank&#34;&gt;C++23 Features Supported by Intel® C++ Compiler&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#cpp26&#34; id=&#34;cpp26&#34;&gt;C++26言語機能の実装状況&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;言語機能&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#clang&#34;&gt;Clang&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#icc&#34;&gt;ICX&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#visual_cpp&#34;&gt;MSVC&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;P2752R3: &lt;a href=&#34;lang/cpp26/static_storage_for_braced_initializers.md.nolink&#34;&gt;&lt;code&gt;std::initializer_list&lt;/code&gt;の配列を静的ストレージに配置する&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;std::vector v = {1, 2, 3};&lt;/code&gt;のような初期化で初期化子リストを静的ストレージに配置することで無駄なコピーをなくす&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2169R4: &lt;a href=&#34;lang/cpp26/nice_placeholder_with_no_name.md.nolink&#34;&gt;宣言のみで使用しない変数の名前として&lt;code&gt;_&lt;/code&gt;をサポート&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;変数名&lt;code&gt;_&lt;/code&gt;は暗黙で&lt;code&gt;[[maybe_unused]]&lt;/code&gt;が指定される&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1854R4: &lt;a href=&#34;lang/cpp26/making_non-encodable_string_literals_ill-formed.md.nolink&#34;&gt;文字列リテラルの文字エンコーディング失敗を不適格とする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;文字列リテラルのエンコーディング時に文字表現が失われる場合にコンパイルエラーにする&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2361R6: &lt;a href=&#34;lang/cpp26/unevaluated_strings.md.nolink&#34;&gt;コンパイル時にのみ使用される文字列の扱いを明確化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;static_assert&lt;/code&gt;や&lt;code&gt;[[deprecated]]&lt;/code&gt;などで使用されるコンパイル時の文字列について、文字コードの指定を禁止し、実行時エンコーディングが行われないことを規定&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2552R3: &lt;a href=&#34;lang/cpp26/on_the_ignorability_of_standard_attributes.md.nolink&#34;&gt;属性の無視性を見直し&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;構文として適格な属性のみを無視できるようにし、そうでない属性の使用を&lt;a class=&#34;cpprefjp-defined-word&#34;&gt;不適格&lt;/a&gt;とする&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2738R1: &lt;a href=&#34;lang/cpp26/constexpr_cast_from_voidptr.md.nolink&#34;&gt;定数式での&lt;code&gt;void*&lt;/code&gt;からポインタ型へのキャストを許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;型消去のために&lt;code&gt;void*&lt;/code&gt;からポインタ型へのキャストを許可する&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2741R3: &lt;a href=&#34;lang/cpp26/user-generated_static_assert_messages.html&#34;&gt;&lt;code&gt;static_assert&lt;/code&gt;の診断メッセージにユーザーが生成した文字列の指定を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;constexpr&lt;/code&gt;な&lt;code&gt;S.size()&lt;/code&gt;と&lt;code&gt;S.data()&lt;/code&gt;メンバ関数をもつオブジェクトをコンパイル時文字列として指定できるようにする&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2558R2: &lt;a href=&#34;lang/cpp26/add_atsign_dollar_graveaccent_to_the_basic_character_set.md.nolink&#34;&gt;基本文字集合に@、$、`を追加&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;C言語との互換性のためにこれらの文字を基本文字集合に追加&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2662R3: &lt;a href=&#34;lang/cpp26/pack_indexing.md.nolink&#34;&gt;パラメータパックへのインデックスアクセスを許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;可変引数テンプレートのパラメータパックに添字アクセスできるようにする&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2864R2: &lt;a href=&#34;lang/cpp26/remove_deprecated_arithmetic_conversion_on_enumerations.md.nolink&#34;&gt;非推奨となっていた列挙値から算術型への暗黙変換を削除&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;C++20から非推奨となっていた列挙値への算術演算で算術型に暗黙変換される仕様を削除&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;各処理系のC++26実装状況ページ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GCC: &lt;a href=&#34;https://gcc.gnu.org/projects/cxx-status.html#cxx26&#34; target=&#34;_blank&#34;&gt;C++26 Support in GCC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Clang:&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://clang.llvm.org/cxx_status.html#cxx26&#34; target=&#34;_blank&#34;&gt;C++2c implementation status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://libcxx.llvm.org/Status/Format.html&#34; target=&#34;_blank&#34;&gt;libc++ Format Status&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Visual C++ (MSVC):&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/STL/wiki/Changelog&#34; target=&#34;_blank&#34;&gt;Change log&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>エイリアステンプレート [N2258] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/alias_templates.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/alias_templates.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/alias_templates.md b/lang/cpp11/alias_templates.md
index 171441855..53ee5059d 100644
--- a/lang/cpp11/alias_templates.md
+++ b/lang/cpp11/alias_templates.md
@@ -1,4 +1,4 @@
-# エイリアステンプレート
+# エイリアステンプレート [N2258]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>alignas [N2341] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/alignas.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/alignas.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/alignas.md b/lang/cpp11/alignas.md
index a913e2bd0..3427b7f9d 100644
--- a/lang/cpp11/alignas.md
+++ b/lang/cpp11/alignas.md
@@ -1,4 +1,4 @@
-# alignas
+# alignas [N2341]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>alignof [N2341] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/alignof.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/alignof.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/alignof.md b/lang/cpp11/alignof.md
index 312b658cf..61d4251e7 100644
--- a/lang/cpp11/alignof.md
+++ b/lang/cpp11/alignof.md
@@ -1,4 +1,4 @@
-# alignof
+# alignof [N2341]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>属性構文 [N2761] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/attributes.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/attributes.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/attributes.md b/lang/cpp11/attributes.md
index 443e638ba..613da4800 100644
--- a/lang/cpp11/attributes.md
+++ b/lang/cpp11/attributes.md
@@ -1,4 +1,4 @@
-# 属性構文
+# 属性構文 [N2761]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>auto [N1984] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/auto.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/auto.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/auto.md b/lang/cpp11/auto.md
index a9ab08108..d5566c175 100644
--- a/lang/cpp11/auto.md
+++ b/lang/cpp11/auto.md
@@ -1,4 +1,4 @@
-# auto
+# auto [N1984]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>char16_tとchar32_t [N2249] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/char16_32.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/char16_32.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/char16_32.md b/lang/cpp11/char16_32.md
index a37cc16fc..a12af8688 100644
--- a/lang/cpp11/char16_32.md
+++ b/lang/cpp11/char16_32.md
@@ -1,4 +1,4 @@
-# char16_tとchar32_t
+# char16_tとchar32_t [N2249]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexpr [N2235] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/constexpr.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/constexpr.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/constexpr.md b/lang/cpp11/constexpr.md
index 1b28c57e0..44b3a5d47 100644
--- a/lang/cpp11/constexpr.md
+++ b/lang/cpp11/constexpr.md
@@ -1,4 +1,4 @@
-# constexpr
+# constexpr [N2235]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>decltype [N2343] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/decltype.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/decltype.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/decltype.md b/lang/cpp11/decltype.md
index 602486c07..88693da6c 100644
--- a/lang/cpp11/decltype.md
+++ b/lang/cpp11/decltype.md
@@ -1,4 +1,4 @@
-# decltype
+# decltype [N2343]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>関数のdefault／delete宣言 [N2346] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/defaulted_and_deleted_functions.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/defaulted_and_deleted_functions.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/defaulted_and_deleted_functions.md b/lang/cpp11/defaulted_and_deleted_functions.md
index 23f08f71d..5d229bd62 100644
--- a/lang/cpp11/defaulted_and_deleted_functions.md
+++ b/lang/cpp11/defaulted_and_deleted_functions.md
@@ -1,4 +1,4 @@
-# 関数のdefault／delete宣言
+# 関数のdefault／delete宣言 [N2346]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>委譲コンストラクタ [N1986] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/delegating_constructors.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/delegating_constructors.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/delegating_constructors.md b/lang/cpp11/delegating_constructors.md
index 89285941f..f65566c9c 100644
--- a/lang/cpp11/delegating_constructors.md
+++ b/lang/cpp11/delegating_constructors.md
@@ -1,4 +1,4 @@
-# 委譲コンストラクタ
+# 委譲コンストラクタ [N1986]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>明示的な型変換演算子のオーバーロード [N2437] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/explicit_conversion_operator.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/explicit_conversion_operator.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/explicit_conversion_operator.md b/lang/cpp11/explicit_conversion_operator.md
index 1fb322b4e..52802ad20 100644
--- a/lang/cpp11/explicit_conversion_operator.md
+++ b/lang/cpp11/explicit_conversion_operator.md
@@ -1,4 +1,4 @@
-# 明示的な型変換演算子のオーバーロード
+# 明示的な型変換演算子のオーバーロード [N2437]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>friend宣言できる対象を拡張 [N1791] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/extend_friend_targets.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/extend_friend_targets.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/extend_friend_targets.md b/lang/cpp11/extend_friend_targets.md
index 0b6670555..75a749232 100644
--- a/lang/cpp11/extend_friend_targets.md
+++ b/lang/cpp11/extend_friend_targets.md
@@ -1,4 +1,4 @@
-# friend宣言できる対象を拡張
+# friend宣言できる対象を拡張 [N1791]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>extern template [N1987] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/extern_template.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/extern_template.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/extern_template.md b/lang/cpp11/extern_template.md
index 092746c12..2a31d1e8c 100644
--- a/lang/cpp11/extern_template.md
+++ b/lang/cpp11/extern_template.md
@@ -1,4 +1,4 @@
-# extern template
+# extern template [N1987]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>事前定義識別子__func__ [N1653] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/func.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/func.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/func.md b/lang/cpp11/func.md
index bad2b78c3..e894f7bef 100644
--- a/lang/cpp11/func.md
+++ b/lang/cpp11/func.md
@@ -1,4 +1,4 @@
-# 事前定義識別子\_\_func\_\_
+# 事前定義識別子\_\_func\_\_ [N1653]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>継承コンストラクタ [N2540] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/inheriting_constructors.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/inheriting_constructors.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/inheriting_constructors.md b/lang/cpp11/inheriting_constructors.md
index 6e7c8bc12..a84dcc771 100644
--- a/lang/cpp11/inheriting_constructors.md
+++ b/lang/cpp11/inheriting_constructors.md
@@ -1,4 +1,4 @@
-# 継承コンストラクタ
+# 継承コンストラクタ [N2540]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>初期化子リスト [N2672] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/initializer_lists.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/initializer_lists.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/initializer_lists.md b/lang/cpp11/initializer_lists.md
index edafb4005..79ca2b4a1 100644
--- a/lang/cpp11/initializer_lists.md
+++ b/lang/cpp11/initializer_lists.md
@@ -1,4 +1,4 @@
-# 初期化子リスト
+# 初期化子リスト [N2672]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>インライン名前空間 [N2535] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/inline_namespaces.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/inline_namespaces.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/inline_namespaces.md b/lang/cpp11/inline_namespaces.md
index e732d5755..929243944 100644
--- a/lang/cpp11/inline_namespaces.md
+++ b/lang/cpp11/inline_namespaces.md
@@ -1,4 +1,4 @@
-# インライン名前空間
+# インライン名前空間 [N2535]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ラムダ式 [N2927] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/lambda_expressions.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/lambda_expressions.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/lambda_expressions.md b/lang/cpp11/lambda_expressions.md
index a49355d45..38783f542 100644
--- a/lang/cpp11/lambda_expressions.md
+++ b/lang/cpp11/lambda_expressions.md
@@ -1,4 +1,4 @@
-# ラムダ式
+# ラムダ式 [N2927]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ローカル型と無名型を、テンプレート引数として使用することを許可 [N2657] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/local_and_unnamed_type_as_template_arguments.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/local_and_unnamed_type_as_template_arguments.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/local_and_unnamed_type_as_template_arguments.md b/lang/cpp11/local_and_unnamed_type_as_template_arguments.md
index 11e90c0bf..8eeb04d6e 100644
--- a/lang/cpp11/local_and_unnamed_type_as_template_arguments.md
+++ b/lang/cpp11/local_and_unnamed_type_as_template_arguments.md
@@ -1,4 +1,4 @@
-# ローカル型と無名型を、テンプレート引数として使用することを許可
+# ローカル型と無名型を、テンプレート引数として使用することを許可 [N2657]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>long long型 [N1811] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/long_long_type.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/long_long_type.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/long_long_type.md b/lang/cpp11/long_long_type.md
index ac70a4694..cf62830df 100644
--- a/lang/cpp11/long_long_type.md
+++ b/lang/cpp11/long_long_type.md
@@ -1,4 +1,4 @@
-# long long型
+# long long型 [N1811]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>noexcept [N3050] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/noexcept.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/noexcept.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/noexcept.md b/lang/cpp11/noexcept.md
index 2ac2aff52..afef96b59 100644
--- a/lang/cpp11/noexcept.md
+++ b/lang/cpp11/noexcept.md
@@ -1,4 +1,4 @@
-# noexcept
+# noexcept [N3050]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>非静的メンバ変数の初期化 [N2756] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/non_static_data_member_initializers.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/non_static_data_member_initializers.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/non_static_data_member_initializers.md b/lang/cpp11/non_static_data_member_initializers.md
index 4f9ec8721..6764a34ba 100644
--- a/lang/cpp11/non_static_data_member_initializers.md
+++ b/lang/cpp11/non_static_data_member_initializers.md
@@ -1,4 +1,4 @@
-# 非静的メンバ変数の初期化
+# 非静的メンバ変数の初期化 [N2756]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>nullptr [N2431] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/nullptr.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/nullptr.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/nullptr.md b/lang/cpp11/nullptr.md
index 9bc46a45e..6fa57226c 100644
--- a/lang/cpp11/nullptr.md
+++ b/lang/cpp11/nullptr.md
@@ -1,4 +1,4 @@
-# nullptr
+# nullptr [N2431]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>overrideとfinal [N2928] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/override_final.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/override_final.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/override_final.md b/lang/cpp11/override_final.md
index c3d6c8fcd..195924044 100644
--- a/lang/cpp11/override_final.md
+++ b/lang/cpp11/override_final.md
@@ -1,4 +1,4 @@
-# overrideとfinal
+# overrideとfinal [N2928]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Pragma演算子 [N1653] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/pragma_operator.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/pragma_operator.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/pragma_operator.md b/lang/cpp11/pragma_operator.md
index ef1727c73..ed565e360 100644
--- a/lang/cpp11/pragma_operator.md
+++ b/lang/cpp11/pragma_operator.md
@@ -1,4 +1,4 @@
-# Pragma演算子
+# Pragma演算子 [N1653]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>範囲for文 [N2930] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/range_based_for.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/range_based_for.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/range_based_for.md b/lang/cpp11/range_based_for.md
index 741fa2538..8c80c934b 100644
--- a/lang/cpp11/range_based_for.md
+++ b/lang/cpp11/range_based_for.md
@@ -1,4 +1,4 @@
-# 範囲for文
+# 範囲for文 [N2930]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>生文字列リテラル [N2442] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/raw_string_literals.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/raw_string_literals.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/raw_string_literals.md b/lang/cpp11/raw_string_literals.md
index 1a12d5302..a5b59af2f 100644
--- a/lang/cpp11/raw_string_literals.md
+++ b/lang/cpp11/raw_string_literals.md
@@ -1,4 +1,4 @@
-# 生文字列リテラル
+# 生文字列リテラル [N2442]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>メンバ関数の左辺値／右辺値修飾 [N2439] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/ref_qualifier_for_this.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/ref_qualifier_for_this.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/ref_qualifier_for_this.md b/lang/cpp11/ref_qualifier_for_this.md
index 9cb1015f5..1d206e5e8 100644
--- a/lang/cpp11/ref_qualifier_for_this.md
+++ b/lang/cpp11/ref_qualifier_for_this.md
@@ -1,4 +1,4 @@
-# メンバ関数の左辺値／右辺値修飾
+# メンバ関数の左辺値／右辺値修飾 [N2439]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>テンプレートの右山カッコ [N1757] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/right_angle_brackets.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/right_angle_brackets.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/right_angle_brackets.md b/lang/cpp11/right_angle_brackets.md
index bf510f32a..51ce4ae73 100644
--- a/lang/cpp11/right_angle_brackets.md
+++ b/lang/cpp11/right_angle_brackets.md
@@ -1,4 +1,4 @@
-# テンプレートの右山カッコ
+# テンプレートの右山カッコ [N1757]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>右辺値参照・ムーブセマンティクス [N2118] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/rvalue_ref_and_move_semantics.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/rvalue_ref_and_move_semantics.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/rvalue_ref_and_move_semantics.md b/lang/cpp11/rvalue_ref_and_move_semantics.md
index 090492e43..4a59d7ee4 100644
--- a/lang/cpp11/rvalue_ref_and_move_semantics.md
+++ b/lang/cpp11/rvalue_ref_and_move_semantics.md
@@ -1,4 +1,4 @@
-# 右辺値参照・ムーブセマンティクス
+# 右辺値参照・ムーブセマンティクス [N2118]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>スコープを持つ列挙型 [N2347] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/scoped_enum.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/scoped_enum.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/scoped_enum.md b/lang/cpp11/scoped_enum.md
index d7ec1d4b9..8c214254f 100644
--- a/lang/cpp11/scoped_enum.md
+++ b/lang/cpp11/scoped_enum.md
@@ -1,4 +1,4 @@
-# スコープを持つ列挙型
+# スコープを持つ列挙型 [N2347]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>任意の式によるSFINAE [N2634] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/sfinae_expressions.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/sfinae_expressions.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/sfinae_expressions.md b/lang/cpp11/sfinae_expressions.md
index 8526b9169..c87e8a5f9 100644
--- a/lang/cpp11/sfinae_expressions.md
+++ b/lang/cpp11/sfinae_expressions.md
@@ -1,4 +1,4 @@
-# 任意の式によるSFINAE
+# 任意の式によるSFINAE [N2634]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンパイル時アサート [N1720] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/static_assert.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/static_assert.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/static_assert.md b/lang/cpp11/static_assert.md
index 64020c3b0..a7de6eaec 100644
--- a/lang/cpp11/static_assert.md
+++ b/lang/cpp11/static_assert.md
@@ -1,4 +1,4 @@
-# コンパイル時アサート
+# コンパイル時アサート [N1720]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ブロックスコープを持つstatic変数初期化のスレッドセーフ化 [N2660] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/static_initialization_thread_safely.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/static_initialization_thread_safely.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/static_initialization_thread_safely.md b/lang/cpp11/static_initialization_thread_safely.md
index 6f104e050..c1a11b39a 100644
--- a/lang/cpp11/static_initialization_thread_safely.md
+++ b/lang/cpp11/static_initialization_thread_safely.md
@@ -1,4 +1,4 @@
-# ブロックスコープを持つstatic変数初期化のスレッドセーフ化
+# ブロックスコープを持つstatic変数初期化のスレッドセーフ化 [N2660]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>スレッドローカルストレージ [N2659] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/thread_local_storage.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/thread_local_storage.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/thread_local_storage.md b/lang/cpp11/thread_local_storage.md
index f4324385e..66df73293 100644
--- a/lang/cpp11/thread_local_storage.md
+++ b/lang/cpp11/thread_local_storage.md
@@ -1,4 +1,4 @@
-# スレッドローカルストレージ
+# スレッドローカルストレージ [N2659]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>戻り値の型を後置する関数宣言構文 [N2541] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/trailing_return_types.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/trailing_return_types.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/trailing_return_types.md b/lang/cpp11/trailing_return_types.md
index 6362c800a..efee5fa5a 100644
--- a/lang/cpp11/trailing_return_types.md
+++ b/lang/cpp11/trailing_return_types.md
@@ -1,4 +1,4 @@
-# 戻り値の型を後置する関数宣言構文
+# 戻り値の型を後置する関数宣言構文 [N2541]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>一様初期化 [N2672] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/uniform_initialization.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/uniform_initialization.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/uniform_initialization.md b/lang/cpp11/uniform_initialization.md
index 4a3e17a93..5475183cf 100644
--- a/lang/cpp11/uniform_initialization.md
+++ b/lang/cpp11/uniform_initialization.md
@@ -1,4 +1,4 @@
-# 一様初期化
+# 一様初期化 [N2672]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>共用体の制限解除 [N2544] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/unrestricted_unions.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/unrestricted_unions.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/unrestricted_unions.md b/lang/cpp11/unrestricted_unions.md
index f8ce219d9..afc3fa54a 100644
--- a/lang/cpp11/unrestricted_unions.md
+++ b/lang/cpp11/unrestricted_unions.md
@@ -1,4 +1,4 @@
-# 共用体の制限解除
+# 共用体の制限解除 [N2544]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ユーザー定義リテラル [N2765] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/user_defined_literals.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/user_defined_literals.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/user_defined_literals.md b/lang/cpp11/user_defined_literals.md
index 167fd6c2c..7d1c89ca1 100644
--- a/lang/cpp11/user_defined_literals.md
+++ b/lang/cpp11/user_defined_literals.md
@@ -1,4 +1,4 @@
-# ユーザー定義リテラル
+# ユーザー定義リテラル [N2765]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>UTF-8文字列リテラル [N2442] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/utf8_string_literals.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/utf8_string_literals.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/utf8_string_literals.md b/lang/cpp11/utf8_string_literals.md
index b9dc4e996..a1f8bd9d3 100644
--- a/lang/cpp11/utf8_string_literals.md
+++ b/lang/cpp11/utf8_string_literals.md
@@ -1,4 +1,4 @@
-# UTF-8文字列リテラル
+# UTF-8文字列リテラル [N2442]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>可変引数マクロ [N1653] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/variadic_macros.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/variadic_macros.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/variadic_macros.md b/lang/cpp11/variadic_macros.md
index 7e191f9f3..afa3077f5 100644
--- a/lang/cpp11/variadic_macros.md
+++ b/lang/cpp11/variadic_macros.md
@@ -1,4 +1,4 @@
-# 可変引数マクロ
+# 可変引数マクロ [N1653]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>可変引数テンプレート [N2242] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/variadic_templates.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp11/variadic_templates.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/variadic_templates.md b/lang/cpp11/variadic_templates.md
index 36185d699..fdbabf6b1 100644
--- a/lang/cpp11/variadic_templates.md
+++ b/lang/cpp11/variadic_templates.md
@@ -1,4 +1,4 @@
-# 可変引数テンプレート
+# 可変引数テンプレート [N2242]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>2進数リテラル [N3472] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/binary_literals.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp14/binary_literals.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/binary_literals.md b/lang/cpp14/binary_literals.md
index f9d457044..b0860f37f 100644
--- a/lang/cpp14/binary_literals.md
+++ b/lang/cpp14/binary_literals.md
@@ -1,4 +1,4 @@
-# 2進数リテラル
+# 2進数リテラル [N3472]
 * cpp14[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ネストする集成体初期化における波カッコ省略を許可 [N3653] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/brace_elision_in_array_temporary_initialization.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp14/brace_elision_in_array_temporary_initialization.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/brace_elision_in_array_temporary_initialization.md b/lang/cpp14/brace_elision_in_array_temporary_initialization.md
index 9b42e3fa0..41e8c3655 100644
--- a/lang/cpp14/brace_elision_in_array_temporary_initialization.md
+++ b/lang/cpp14/brace_elision_in_array_temporary_initialization.md
@@ -1,4 +1,4 @@
-# ネストする集成体初期化における波カッコ省略を許可
+# ネストする集成体初期化における波カッコ省略を許可 [N3653]
 * cpp14[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>[[deprecated]]属性 [N3760] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/deprecated_attr.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp14/deprecated_attr.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/deprecated_attr.md b/lang/cpp14/deprecated_attr.md
index fbe530fa8..3491ccfb9 100644
--- a/lang/cpp14/deprecated_attr.md
+++ b/lang/cpp14/deprecated_attr.md
@@ -1,4 +1,4 @@
-# [[deprecated]]属性
+# [[deprecated]]属性 [N3760]
 * cpp14[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>数値リテラルの桁区切り文字 [N3781] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/digit_separators.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp14/digit_separators.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/digit_separators.md b/lang/cpp14/digit_separators.md
index b7c8ca24c..ac95c7c56 100644
--- a/lang/cpp14/digit_separators.md
+++ b/lang/cpp14/digit_separators.md
@@ -1,4 +1,4 @@
-# 数値リテラルの桁区切り文字
+# 数値リテラルの桁区切り文字 [N3781]
 * cpp14[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ジェネリックラムダ [N3649] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/generic_lambdas.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp14/generic_lambdas.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/generic_lambdas.md b/lang/cpp14/generic_lambdas.md
index e27e08376..d92b15b61 100644
--- a/lang/cpp14/generic_lambdas.md
+++ b/lang/cpp14/generic_lambdas.md
@@ -1,4 +1,4 @@
-# ジェネリックラムダ
+# ジェネリックラムダ [N3649]
 * cpp14[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ラムダ式の初期化キャプチャ [N3648] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/initialize_capture.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp14/initialize_capture.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/initialize_capture.md b/lang/cpp14/initialize_capture.md
index e62d64b95..4b984b47c 100644
--- a/lang/cpp14/initialize_capture.md
+++ b/lang/cpp14/initialize_capture.md
@@ -1,4 +1,4 @@
-# ラムダ式の初期化キャプチャ
+# ラムダ式の初期化キャプチャ [N3648]
 * cpp14[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexprの制限緩和 [N3652] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/relaxing_constraints_on_constexpr.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp14/relaxing_constraints_on_constexpr.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/relaxing_constraints_on_constexpr.md b/lang/cpp14/relaxing_constraints_on_constexpr.md
index 943cc064d..c6d840d01 100644
--- a/lang/cpp14/relaxing_constraints_on_constexpr.md
+++ b/lang/cpp14/relaxing_constraints_on_constexpr.md
@@ -1,4 +1,4 @@
-# constexprの制限緩和
+# constexprの制限緩和 [N3652]
 * cpp14[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>通常関数の戻り値型推論 [N3638] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/return_type_deduction_for_normal_functions.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp14/return_type_deduction_for_normal_functions.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/return_type_deduction_for_normal_functions.md b/lang/cpp14/return_type_deduction_for_normal_functions.md
index 66f5caa61..f2434536c 100644
--- a/lang/cpp14/return_type_deduction_for_normal_functions.md
+++ b/lang/cpp14/return_type_deduction_for_normal_functions.md
@@ -1,4 +1,4 @@
-# 通常関数の戻り値型推論
+# 通常関数の戻り値型推論 [N3638]
 * cpp14[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>サイズ付きデアロケーション [N3778] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/sized_deallocation.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp14/sized_deallocation.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/sized_deallocation.md b/lang/cpp14/sized_deallocation.md
index d2da7e97c..1d130364d 100644
--- a/lang/cpp14/sized_deallocation.md
+++ b/lang/cpp14/sized_deallocation.md
@@ -1,4 +1,4 @@
-# サイズ付きデアロケーション
+# サイズ付きデアロケーション [N3778]
 * cpp14[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>変数テンプレート [N3651] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/variable_templates.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp14/variable_templates.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/variable_templates.md b/lang/cpp14/variable_templates.md
index c05a84e11..97cbadc51 100644
--- a/lang/cpp14/variable_templates.md
+++ b/lang/cpp14/variable_templates.md
@@ -1,4 +1,4 @@
-# 変数テンプレート
+# 変数テンプレート [N3651]
 * cpp14[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>C++17 -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17.md b/lang/cpp17.md
index 90d96f4cc..06805f4c5 100644
--- a/lang/cpp17.md
+++ b/lang/cpp17.md
@@ -38,7 +38,7 @@ C++17以降、言語の策定にship train modelというリリース体制が
 | [参照メンバをもつクラスの置き換え](cpp17/replacement_of_class_objects_containing_reference_members.md) | 参照型メンバや`const`メンバ変数を含むクラスについてこれまで結果は未定義とされていた配置`new`によるオブジェクトの置き換えを条件付きで可能とする |
 | [`enum class`変数の初期値として整数を指定する際の規則を調整](cpp17/construction_enum_class_values.md) | キャストを使用することなく整数を初期値として使用し、`E e{0};`のような初期化を許可 |
 | [アライメント指定されたデータの動的メモリ確保](cpp17/dynamic_memory_allocation_for_over-aligned_data.md) | `operator new`と`operator delete`でアライメント値を取得できるようにする |
-| [集成体初期化の拡張](cpp17/extension_to_aggregate_initialization.md) | 集成体初期化で基底クラスも入れ子に集成体初期化可能になる |
+| [基底クラスのメンバ変数を集成体初期化するための波カッコを省略できるようにする](cpp17/extension_to_aggregate_initialization.md) | 基底クラスのメンバを集成体初期化するために、 `derived d {{42}};` の代わりに `derived d {42};` と書けるようにする |
 
 
 ### 制御構文
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>全ての非型テンプレート引数の定数式評価を許可 [N4268] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/allow_constant_evaluation_for_all_non-type_template_arguments.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/allow_constant_evaluation_for_all_non-type_template_arguments.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/allow_constant_evaluation_for_all_non-type_template_arguments.md b/lang/cpp17/allow_constant_evaluation_for_all_non-type_template_arguments.md
index aec3ca9b3..19f66f972 100644
--- a/lang/cpp17/allow_constant_evaluation_for_all_non-type_template_arguments.md
+++ b/lang/cpp17/allow_constant_evaluation_for_all_non-type_template_arguments.md
@@ -1,4 +1,4 @@
-# 全ての非型テンプレート引数の定数式評価を許可
+# 全ての非型テンプレート引数の定数式評価を許可 [N4268]
 
 * cpp17[meta cpp]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>テンプレートテンプレートパラメータにtypenameキーワードの使用を許可 [N4051] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/allow_typename_in_a_template_template_parameter.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/allow_typename_in_a_template_template_parameter.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/allow_typename_in_a_template_template_parameter.md b/lang/cpp17/allow_typename_in_a_template_template_parameter.md
index c04f78fa5..e4dee187a 100644
--- a/lang/cpp17/allow_typename_in_a_template_template_parameter.md
+++ b/lang/cpp17/allow_typename_in_a_template_template_parameter.md
@@ -1,4 +1,4 @@
-# テンプレートテンプレートパラメータにtypenameキーワードの使用を許可
+# テンプレートテンプレートパラメータにtypenameキーワードの使用を許可 [N4051]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>名前空間と列挙子への属性付加を許可 [N4266] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/attributes_for_namespaces_and_enumerators.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/attributes_for_namespaces_and_enumerators.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/attributes_for_namespaces_and_enumerators.md b/lang/cpp17/attributes_for_namespaces_and_enumerators.md
index ff3ed0cab..78aee629b 100644
--- a/lang/cpp17/attributes_for_namespaces_and_enumerators.md
+++ b/lang/cpp17/attributes_for_namespaces_and_enumerators.md
@@ -1,4 +1,4 @@
-# 名前空間と列挙子への属性付加を許可
+# 名前空間と列挙子への属性付加を許可 [N4266]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexpr ラムダ [P0170R1] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/constexpr_lambda.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/constexpr_lambda.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/constexpr_lambda.md b/lang/cpp17/constexpr_lambda.md
index 1f5ec0f3a..f0ca91494 100644
--- a/lang/cpp17/constexpr_lambda.md
+++ b/lang/cpp17/constexpr_lambda.md
@@ -1,4 +1,4 @@
-# constexpr ラムダ
+# constexpr ラムダ [P0170R1]
 
 * cpp17[meta cpp]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>enum class変数の初期値として整数を指定する際の規則を調整 [P0138R2] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/construction_enum_class_values.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/construction_enum_class_values.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/construction_enum_class_values.md b/lang/cpp17/construction_enum_class_values.md
index ba552450d..b4e8f2589 100644
--- a/lang/cpp17/construction_enum_class_values.md
+++ b/lang/cpp17/construction_enum_class_values.md
@@ -1,4 +1,4 @@
-# enum class変数の初期値として整数を指定する際の規則を調整
+# enum class変数の初期値として整数を指定する際の規則を調整 [P0138R2]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>非型テンプレートパラメータのauto宣言 [P0127R2] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/declaring_non-type_template_arguments_with_auto.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/declaring_non-type_template_arguments_with_auto.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/declaring_non-type_template_arguments_with_auto.md b/lang/cpp17/declaring_non-type_template_arguments_with_auto.md
index 9a6d32a28..e532dd3f0 100644
--- a/lang/cpp17/declaring_non-type_template_arguments_with_auto.md
+++ b/lang/cpp17/declaring_non-type_template_arguments_with_auto.md
@@ -1,4 +1,4 @@
-# 非型テンプレートパラメータのauto宣言
+# 非型テンプレートパラメータのauto宣言 [P0127R2]
 
 * cpp17[meta cpp]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>アライメント指定されたデータの動的メモリ確保 [P0035R4] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/dynamic_memory_allocation_for_over-aligned_data.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/dynamic_memory_allocation_for_over-aligned_data.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/dynamic_memory_allocation_for_over-aligned_data.md b/lang/cpp17/dynamic_memory_allocation_for_over-aligned_data.md
index 9be63837d..8a14b5487 100644
--- a/lang/cpp17/dynamic_memory_allocation_for_over-aligned_data.md
+++ b/lang/cpp17/dynamic_memory_allocation_for_over-aligned_data.md
@@ -1,4 +1,4 @@
-# アライメント指定されたデータの動的メモリ確保
+# アライメント指定されたデータの動的メモリ確保 [P0035R4]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>例外仕様を型システムの一部にする [P0012R1] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/exception_spec_be_part_of_the_type_system.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/exception_spec_be_part_of_the_type_system.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/exception_spec_be_part_of_the_type_system.md b/lang/cpp17/exception_spec_be_part_of_the_type_system.md
index 9c9199ba1..7be6cb8d9 100644
--- a/lang/cpp17/exception_spec_be_part_of_the_type_system.md
+++ b/lang/cpp17/exception_spec_be_part_of_the_type_system.md
@@ -1,4 +1,4 @@
-# 例外仕様を型システムの一部にする
+# 例外仕様を型システムの一部にする [P0012R1]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>厳密な式の評価順 [P0145R3] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/expression_evaluation_order.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/expression_evaluation_order.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/expression_evaluation_order.md b/lang/cpp17/expression_evaluation_order.md
index 0bdd87213..4fe26553c 100644
--- a/lang/cpp17/expression_evaluation_order.md
+++ b/lang/cpp17/expression_evaluation_order.md
@@ -1,4 +1,4 @@
-# 厳密な式の評価順
+# 厳密な式の評価順 [P0145R3]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>static_assert のメッセージ省略を許可 [N3928] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/extending_static_assert.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/extending_static_assert.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/extending_static_assert.md b/lang/cpp17/extending_static_assert.md
index bb7f9744e..8ae20ef82 100644
--- a/lang/cpp17/extending_static_assert.md
+++ b/lang/cpp17/extending_static_assert.md
@@ -1,4 +1,4 @@
-# static_assert のメッセージ省略を許可
+# static_assert のメッセージ省略を許可 [N3928]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>基底クラスのメンバ変数を集成体初期化するための波カッコを省略できるようにする [P0017R1] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/extension_to_aggregate_initialization.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/extension_to_aggregate_initialization.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/extension_to_aggregate_initialization.md b/lang/cpp17/extension_to_aggregate_initialization.md
index d3648db38..f595a0b3f 100644
--- a/lang/cpp17/extension_to_aggregate_initialization.md
+++ b/lang/cpp17/extension_to_aggregate_initialization.md
@@ -1,4 +1,4 @@
-# 集成体初期化の拡張
+# 基底クラスのメンバ変数を集成体初期化するための波カッコを省略できるようにする [P0017R1]
 
 * cpp17[meta cpp]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>[[fallthrough]]属性 [P0188R1] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/fallthrough.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/fallthrough.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/fallthrough.md b/lang/cpp17/fallthrough.md
index 5e3ecc0f4..eb8f4be43 100644
--- a/lang/cpp17/fallthrough.md
+++ b/lang/cpp17/fallthrough.md
@@ -1,4 +1,4 @@
-# [[fallthrough]]属性
+# [[fallthrough]]属性 [P0188R1]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>畳み込み式 [N4295] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/folding_expressions.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/folding_expressions.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/folding_expressions.md b/lang/cpp17/folding_expressions.md
index 1a0b7f62b..03ed8df24 100644
--- a/lang/cpp17/folding_expressions.md
+++ b/lang/cpp17/folding_expressions.md
@@ -1,4 +1,4 @@
-# 畳み込み式
+# 畳み込み式 [N4295]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>範囲 for ループの制限緩和 [P0184R0] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/generalizing_the_range-based_for_loop.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/generalizing_the_range-based_for_loop.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/generalizing_the_range-based_for_loop.md b/lang/cpp17/generalizing_the_range-based_for_loop.md
index f08c7183b..df1a37934 100644
--- a/lang/cpp17/generalizing_the_range-based_for_loop.md
+++ b/lang/cpp17/generalizing_the_range-based_for_loop.md
@@ -1,4 +1,4 @@
-# 範囲 for ループの制限緩和
+# 範囲 for ループの制限緩和 [P0184R0]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>値のコピー省略を保証 [P0135R1] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/guaranteed_copy_elision.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/guaranteed_copy_elision.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/guaranteed_copy_elision.md b/lang/cpp17/guaranteed_copy_elision.md
index 620afa4ed..5a96ad1c7 100644
--- a/lang/cpp17/guaranteed_copy_elision.md
+++ b/lang/cpp17/guaranteed_copy_elision.md
@@ -1,4 +1,4 @@
-# 値のコピー省略を保証
+# 値のコピー省略を保証 [P0135R1]
 
 * cpp17[meta cpp]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>__has_include [P0061R1] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/has_include.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/has_include.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/has_include.md b/lang/cpp17/has_include.md
index f1c370de7..8c4821ae7 100644
--- a/lang/cpp17/has_include.md
+++ b/lang/cpp17/has_include.md
@@ -1,4 +1,4 @@
-# __has_include
+# __has_include [P0061R1]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>十六進浮動小数点数リテラル [P0245R1] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/hexadecimal_floating_literals.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/hexadecimal_floating_literals.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/hexadecimal_floating_literals.md b/lang/cpp17/hexadecimal_floating_literals.md
index 4ff845fe7..6515d1282 100644
--- a/lang/cpp17/hexadecimal_floating_literals.md
+++ b/lang/cpp17/hexadecimal_floating_literals.md
@@ -1,4 +1,4 @@
-# 十六進浮動小数点数リテラル
+# 十六進浮動小数点数リテラル [P0245R1]
 * cpp17[meta cpp]
 * [mathjax enable]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexpr if 文 [P0292R2] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/if_constexpr.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/if_constexpr.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/if_constexpr.md b/lang/cpp17/if_constexpr.md
index 2b218c451..4d528aedf 100644
--- a/lang/cpp17/if_constexpr.md
+++ b/lang/cpp17/if_constexpr.md
@@ -1,4 +1,4 @@
-# constexpr if 文
+# constexpr if 文 [P0292R2]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>インライン変数 [P0386R2] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/inline_variables.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/inline_variables.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/inline_variables.md b/lang/cpp17/inline_variables.md
index ac0002367..f10059f8f 100644
--- a/lang/cpp17/inline_variables.md
+++ b/lang/cpp17/inline_variables.md
@@ -1,4 +1,4 @@
-# インライン変数
+# インライン変数 [P0386R2]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ラムダ式での*thisのコピーキャプチャ [P0018R3] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/lambda_capture_of_this_by_value.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/lambda_capture_of_this_by_value.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/lambda_capture_of_this_by_value.md b/lang/cpp17/lambda_capture_of_this_by_value.md
index 2f6b1b87c..391681d8e 100644
--- a/lang/cpp17/lambda_capture_of_this_by_value.md
+++ b/lang/cpp17/lambda_capture_of_this_by_value.md
@@ -1,4 +1,4 @@
-# ラムダ式での*thisのコピーキャプチャ
+# ラムダ式での*thisのコピーキャプチャ [P0018R3]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>[[maybe_unused]]属性 [P0212R1] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/maybe_unused.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/maybe_unused.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/maybe_unused.md b/lang/cpp17/maybe_unused.md
index b2ad194ce..f04dbd6f8 100644
--- a/lang/cpp17/maybe_unused.md
+++ b/lang/cpp17/maybe_unused.md
@@ -1,4 +1,4 @@
-# [[maybe_unused]]属性
+# [[maybe_unused]]属性 [P0212R1]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>入れ子名前空間の定義 [N4230] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/nested_namespace.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/nested_namespace.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/nested_namespace.md b/lang/cpp17/nested_namespace.md
index 20b67b980..0fb30e022 100644
--- a/lang/cpp17/nested_namespace.md
+++ b/lang/cpp17/nested_namespace.md
@@ -1,4 +1,4 @@
-# 入れ子名前空間の定義
+# 入れ子名前空間の定義 [N4230]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>波括弧初期化の型推論の新規則 [N3922] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/new_rules_for_auto_deduction_from_braced-init-list.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/new_rules_for_auto_deduction_from_braced-init-list.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/new_rules_for_auto_deduction_from_braced-init-list.md b/lang/cpp17/new_rules_for_auto_deduction_from_braced-init-list.md
index ec02c73af..d457cf6ef 100644
--- a/lang/cpp17/new_rules_for_auto_deduction_from_braced-init-list.md
+++ b/lang/cpp17/new_rules_for_auto_deduction_from_braced-init-list.md
@@ -1,4 +1,4 @@
-# 波括弧初期化の型推論の新規則
+# 波括弧初期化の型推論の新規則 [N3922]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>[[nodiscard]]属性 [P0189R1] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/nodiscard.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/nodiscard.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/nodiscard.md b/lang/cpp17/nodiscard.md
index ebdc0c1ea..2328e65a4 100644
--- a/lang/cpp17/nodiscard.md
+++ b/lang/cpp17/nodiscard.md
@@ -1,4 +1,4 @@
-# [[nodiscard]]属性
+# [[nodiscard]]属性 [P0189R1]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>不明な属性を無視する [P0283R2] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/non_standard_attributes.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/non_standard_attributes.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/non_standard_attributes.md b/lang/cpp17/non_standard_attributes.md
index bcf4f8d76..d93d20f32 100644
--- a/lang/cpp17/non_standard_attributes.md
+++ b/lang/cpp17/non_standard_attributes.md
@@ -1,4 +1,4 @@
-# 不明な属性を無視する
+# 不明な属性を無視する [P0283R2]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>using宣言のパック展開 [P0195R2] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/pack_expansions_in_using.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/pack_expansions_in_using.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/pack_expansions_in_using.md b/lang/cpp17/pack_expansions_in_using.md
index e305c40bf..fcf3d4039 100644
--- a/lang/cpp17/pack_expansions_in_using.md
+++ b/lang/cpp17/pack_expansions_in_using.md
@@ -1,4 +1,4 @@
-# using宣言のパック展開
+# using宣言のパック展開 [P0195R2]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>非推奨だった古い例外仕様を削除 [P0003R5] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/remove_deprecated_exception_specifications.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/remove_deprecated_exception_specifications.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/remove_deprecated_exception_specifications.md b/lang/cpp17/remove_deprecated_exception_specifications.md
index 1bcadfd2e..253a54d7c 100644
--- a/lang/cpp17/remove_deprecated_exception_specifications.md
+++ b/lang/cpp17/remove_deprecated_exception_specifications.md
@@ -1,4 +1,4 @@
-# 非推奨だった古い例外仕様を削除
+# 非推奨だった古い例外仕様を削除 [P0003R5]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>非推奨だった bool 型に対するインクリメント演算子を削除 [P0002R1] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/remove_deprecated_increment_of_bool.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/remove_deprecated_increment_of_bool.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/remove_deprecated_increment_of_bool.md b/lang/cpp17/remove_deprecated_increment_of_bool.md
index fc4f690ab..261ef394b 100644
--- a/lang/cpp17/remove_deprecated_increment_of_bool.md
+++ b/lang/cpp17/remove_deprecated_increment_of_bool.md
@@ -1,4 +1,4 @@
-# 非推奨だった bool 型に対するインクリメント演算子を削除
+# 非推奨だった bool 型に対するインクリメント演算子を削除 [P0002R1]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>非推奨だったregisterキーワードを削除 [P0001R1] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/remove_deprecated_use_of_the_register_keyword.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/remove_deprecated_use_of_the_register_keyword.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/remove_deprecated_use_of_the_register_keyword.md b/lang/cpp17/remove_deprecated_use_of_the_register_keyword.md
index 238790f2e..a10725393 100644
--- a/lang/cpp17/remove_deprecated_use_of_the_register_keyword.md
+++ b/lang/cpp17/remove_deprecated_use_of_the_register_keyword.md
@@ -1,4 +1,4 @@
-# 非推奨だったregisterキーワードを削除
+# 非推奨だったregisterキーワードを削除 [P0001R1]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>トライグラフの削除 [N4086] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/removing_trigraphs.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/removing_trigraphs.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/removing_trigraphs.md b/lang/cpp17/removing_trigraphs.md
index 269fd37b7..76051b646 100644
--- a/lang/cpp17/removing_trigraphs.md
+++ b/lang/cpp17/removing_trigraphs.md
@@ -1,4 +1,4 @@
-# トライグラフの削除
+# トライグラフの削除 [N4086]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>参照メンバをもつクラスの置き換え [P0137R1] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/replacement_of_class_objects_containing_reference_members.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/replacement_of_class_objects_containing_reference_members.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/replacement_of_class_objects_containing_reference_members.md b/lang/cpp17/replacement_of_class_objects_containing_reference_members.md
index ecf1f23c2..4ea19fb20 100644
--- a/lang/cpp17/replacement_of_class_objects_containing_reference_members.md
+++ b/lang/cpp17/replacement_of_class_objects_containing_reference_members.md
@@ -1,4 +1,4 @@
-# 参照メンバをもつクラスの置き換え
+# 参照メンバをもつクラスの置き換え [P0137R1]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>if文とswitch文の条件式と初期化を分離 [P0305R1] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/selection_statements_with_initializer.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/selection_statements_with_initializer.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/selection_statements_with_initializer.md b/lang/cpp17/selection_statements_with_initializer.md
index 0039fe4b8..da175269d 100644
--- a/lang/cpp17/selection_statements_with_initializer.md
+++ b/lang/cpp17/selection_statements_with_initializer.md
@@ -1,4 +1,4 @@
-# if文とswitch文の条件式と初期化を分離
+# if文とswitch文の条件式と初期化を分離 [P0305R1]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>構造化束縛 [P0217R3] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/structured_bindings.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/structured_bindings.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/structured_bindings.md b/lang/cpp17/structured_bindings.md
index 6dc9d9971..9d9184fe2 100644
--- a/lang/cpp17/structured_bindings.md
+++ b/lang/cpp17/structured_bindings.md
@@ -1,4 +1,4 @@
-# 構造化束縛
+# 構造化束縛 [P0217R3]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>クラステンプレートのテンプレート引数推論 [P0091R3] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/type_deduction_for_class_templates.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/type_deduction_for_class_templates.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/type_deduction_for_class_templates.md b/lang/cpp17/type_deduction_for_class_templates.md
index a7036694d..ce3f0a7e8 100644
--- a/lang/cpp17/type_deduction_for_class_templates.md
+++ b/lang/cpp17/type_deduction_for_class_templates.md
@@ -1,4 +1,4 @@
-# クラステンプレートのテンプレート引数推論
+# クラステンプレートのテンプレート引数推論 [P0091R3]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>属性の名前空間指定に繰り返しをなくす [P0028R4] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/using_attribute_namespaces.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/using_attribute_namespaces.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/using_attribute_namespaces.md b/lang/cpp17/using_attribute_namespaces.md
index 4c755f872..bfc96aaa4 100644
--- a/lang/cpp17/using_attribute_namespaces.md
+++ b/lang/cpp17/using_attribute_namespaces.md
@@ -1,4 +1,4 @@
-# 属性の名前空間指定に繰り返しをなくす
+# 属性の名前空間指定に繰り返しをなくす [P0028R4]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>UTF-8文字リテラル [N4267] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/utf8_character_literals.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp17/utf8_character_literals.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/utf8_character_literals.md b/lang/cpp17/utf8_character_literals.md
index 7c93dac3e..479966b3e 100644
--- a/lang/cpp17/utf8_character_literals.md
+++ b/lang/cpp17/utf8_character_literals.md
@@ -1,4 +1,4 @@
-# UTF-8文字リテラル
+# UTF-8文字リテラル [N4267]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>特殊化のアクセスチェック [P0692R1] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/access_checking_on_specializations.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/access_checking_on_specializations.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/access_checking_on_specializations.md b/lang/cpp20/access_checking_on_specializations.md
index fb23dfe79..def88c428 100644
--- a/lang/cpp20/access_checking_on_specializations.md
+++ b/lang/cpp20/access_checking_on_specializations.md
@@ -1,4 +1,4 @@
-# 特殊化のアクセスチェック
+# 特殊化のアクセスチェック [P0692R1]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>関数テンプレートに明示的に型指定した場合にADLで見つからない問題を修正 [P0846R0] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/adl_and_function_templates_that_are_not_visible.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/adl_and_function_templates_that_are_not_visible.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/adl_and_function_templates_that_are_not_visible.md b/lang/cpp20/adl_and_function_templates_that_are_not_visible.md
index 0854827db..ceb421b9b 100644
--- a/lang/cpp20/adl_and_function_templates_that_are_not_visible.md
+++ b/lang/cpp20/adl_and_function_templates_that_are_not_visible.md
@@ -1,4 +1,4 @@
-# 関数テンプレートに明示的に型指定した場合にADLで見つからない問題を修正
+# 関数テンプレートに明示的に型指定した場合にADLで見つからない問題を修正 [P0846R0]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>丸カッコの値リストからの集成体初期化を許可 [P0960R3] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/allow_initializing_aggregates_from_a_parenthesized_list_of_values.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/allow_initializing_aggregates_from_a_parenthesized_list_of_values.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/allow_initializing_aggregates_from_a_parenthesized_list_of_values.md b/lang/cpp20/allow_initializing_aggregates_from_a_parenthesized_list_of_values.md
index e643696d0..91b855942 100644
--- a/lang/cpp20/allow_initializing_aggregates_from_a_parenthesized_list_of_values.md
+++ b/lang/cpp20/allow_initializing_aggregates_from_a_parenthesized_list_of_values.md
@@ -1,4 +1,4 @@
-# 丸カッコの値リストからの集成体初期化を許可
+# 丸カッコの値リストからの集成体初期化を許可 [P0960R3]
 
 * cpp20[meta cpp]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ラムダ式のキャプチャとして[=, this]を許可する [P0409R2] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/allow_lambda_capture_equal_this.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/allow_lambda_capture_equal_this.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/allow_lambda_capture_equal_this.md b/lang/cpp20/allow_lambda_capture_equal_this.md
index 58a60e79d..715e4dbad 100644
--- a/lang/cpp20/allow_lambda_capture_equal_this.md
+++ b/lang/cpp20/allow_lambda_capture_equal_this.md
@@ -1,4 +1,4 @@
-# ラムダ式のキャプチャとして[=, this]を許可する
+# ラムダ式のキャプチャとして[=, this]を許可する [P0409R2]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ラムダ式の初期化キャプチャでのパック展開を許可 [P0780R2] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/allow_pack_expansion_in_lambda_init_capture.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/allow_pack_expansion_in_lambda_init_capture.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/allow_pack_expansion_in_lambda_init_capture.md b/lang/cpp20/allow_pack_expansion_in_lambda_init_capture.md
index 4fb0076d6..eaf47d8df 100644
--- a/lang/cpp20/allow_pack_expansion_in_lambda_init_capture.md
+++ b/lang/cpp20/allow_pack_expansion_in_lambda_init_capture.md
@@ -1,4 +1,4 @@
-# ラムダ式の初期化キャプチャでのパック展開を許可
+# ラムダ式の初期化キャプチャでのパック展開を許可 [P0780R2]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>friend指定された関数内から構造化束縛を使用して非公開メンバ変数にアクセスすることを許可 [P0969R0] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/allow_structured_bindings_to_accessible_members.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/allow_structured_bindings_to_accessible_members.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/allow_structured_bindings_to_accessible_members.md b/lang/cpp20/allow_structured_bindings_to_accessible_members.md
index 8568f6a9e..a66e450c0 100644
--- a/lang/cpp20/allow_structured_bindings_to_accessible_members.md
+++ b/lang/cpp20/allow_structured_bindings_to_accessible_members.md
@@ -1,4 +1,4 @@
-# friend指定された関数内から構造化束縛を使用して非公開メンバ変数にアクセスすることを許可
+# friend指定された関数内から構造化束縛を使用して非公開メンバ変数にアクセスすることを許可 [P0969R0]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>定数式からの仮想関数の呼び出しを許可 [P1064R0] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/allow_virtual_function_calls_in_constant_expressions.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/allow_virtual_function_calls_in_constant_expressions.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/allow_virtual_function_calls_in_constant_expressions.md b/lang/cpp20/allow_virtual_function_calls_in_constant_expressions.md
index 8bbe3cee9..8f9620e9b 100644
--- a/lang/cpp20/allow_virtual_function_calls_in_constant_expressions.md
+++ b/lang/cpp20/allow_virtual_function_calls_in_constant_expressions.md
@@ -1,4 +1,4 @@
-# 定数式からの仮想関数の呼び出しを許可
+# 定数式からの仮想関数の呼び出しを許可 [P1064R0]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>定数式での`dynamic_cast`、多態的な`typeid`を許可 [P1327R1] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/allowing_dynamic_cast_polymorphic_typeid_in_constant_expressions.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/allowing_dynamic_cast_polymorphic_typeid_in_constant_expressions.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/allowing_dynamic_cast_polymorphic_typeid_in_constant_expressions.md b/lang/cpp20/allowing_dynamic_cast_polymorphic_typeid_in_constant_expressions.md
index 26f0b526f..71a567688 100644
--- a/lang/cpp20/allowing_dynamic_cast_polymorphic_typeid_in_constant_expressions.md
+++ b/lang/cpp20/allowing_dynamic_cast_polymorphic_typeid_in_constant_expressions.md
@@ -1,4 +1,4 @@
-# 定数式での`dynamic_cast`、多態的な`typeid`を許可
+# 定数式での`dynamic_cast`、多態的な`typeid`を許可 [P1327R1]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>new式での配列要素数の推論 [P1009R2] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/array_size_deduction_in_new-expressions.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/array_size_deduction_in_new-expressions.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/array_size_deduction_in_new-expressions.md b/lang/cpp20/array_size_deduction_in_new-expressions.md
index 9916a0ea4..caa300bfa 100644
--- a/lang/cpp20/array_size_deduction_in_new-expressions.md
+++ b/lang/cpp20/array_size_deduction_in_new-expressions.md
@@ -1,4 +1,4 @@
-# new式での配列要素数の推論
+# new式での配列要素数の推論 [P1009R2]
 
 * cpp20[meta cpp]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>定数式内での共用体のアクティブメンバの変更を許可 [P1330R0] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/changing_the_active_member_of_a_union_inside_constexpr.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/changing_the_active_member_of_a_union_inside_constexpr.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/changing_the_active_member_of_a_union_inside_constexpr.md b/lang/cpp20/changing_the_active_member_of_a_union_inside_constexpr.md
index 96cfa1b72..333be083c 100644
--- a/lang/cpp20/changing_the_active_member_of_a_union_inside_constexpr.md
+++ b/lang/cpp20/changing_the_active_member_of_a_union_inside_constexpr.md
@@ -1,4 +1,4 @@
-# 定数式内での共用体のアクティブメンバの変更を許可
+# 定数式内での共用体のアクティブメンバの変更を許可 [P1330R0]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>UTF-8エンコーディングされた文字の型として`char8_t`を追加 [P0482R6] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/char8_t.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/char8_t.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/char8_t.md b/lang/cpp20/char8_t.md
index 2d412d3fd..68fb50beb 100644
--- a/lang/cpp20/char8_t.md
+++ b/lang/cpp20/char8_t.md
@@ -1,4 +1,4 @@
-# UTF-8エンコーディングされた文字の型として`char8_t`を追加
+# UTF-8エンコーディングされた文字の型として`char8_t`を追加 [P0482R6]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>抽象型のチェック [P0929R2] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/checking_for_abstract_class_types.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/checking_for_abstract_class_types.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/checking_for_abstract_class_types.md b/lang/cpp20/checking_for_abstract_class_types.md
index cf8b4f572..e4000dd54 100644
--- a/lang/cpp20/checking_for_abstract_class_types.md
+++ b/lang/cpp20/checking_for_abstract_class_types.md
@@ -1,4 +1,4 @@
-# 抽象型のチェック
+# 抽象型のチェック [P0929R2]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>集成体クラステンプレートのテンプレート引数推論 [P1816R0] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/class_template_argument_deduction_for_aggregates.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/class_template_argument_deduction_for_aggregates.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/class_template_argument_deduction_for_aggregates.md b/lang/cpp20/class_template_argument_deduction_for_aggregates.md
index 87ebb8287..21fd47e94 100644
--- a/lang/cpp20/class_template_argument_deduction_for_aggregates.md
+++ b/lang/cpp20/class_template_argument_deduction_for_aggregates.md
@@ -1,4 +1,4 @@
-# 集成体クラステンプレートのテンプレート引数推論
+# 集成体クラステンプレートのテンプレート引数推論 [P1816R0]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>エイリアステンプレート経由でのクラステンプレートのテンプレート引数推論 [P1814R0] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/class_template_argument_deduction_for_alias_templates.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/class_template_argument_deduction_for_alias_templates.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/class_template_argument_deduction_for_alias_templates.md b/lang/cpp20/class_template_argument_deduction_for_alias_templates.md
index 4fdc9b843..9eccf5faf 100644
--- a/lang/cpp20/class_template_argument_deduction_for_alias_templates.md
+++ b/lang/cpp20/class_template_argument_deduction_for_alias_templates.md
@@ -1,4 +1,4 @@
-# エイリアステンプレート経由でのクラステンプレートのテンプレート引数推論
+# エイリアステンプレート経由でのクラステンプレートのテンプレート引数推論 [P1814R0]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>非型テンプレートパラメータとしてクラス型を許可する [P0732R2] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/class_types_in_non-type_template_parameters.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/class_types_in_non-type_template_parameters.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/class_types_in_non-type_template_parameters.md b/lang/cpp20/class_types_in_non-type_template_parameters.md
index c44d566f7..eea126fa7 100644
--- a/lang/cpp20/class_types_in_non-type_template_parameters.md
+++ b/lang/cpp20/class_types_in_non-type_template_parameters.md
@@ -1,4 +1,4 @@
-# 非型テンプレートパラメータとしてクラス型を許可する
+# 非型テンプレートパラメータとしてクラス型を許可する [P0732R2]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンセプト [P0734R0] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/concepts.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/concepts.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/concepts.md b/lang/cpp20/concepts.md
index 77d6a159f..340bd7dc9 100644
--- a/lang/cpp20/concepts.md
+++ b/lang/cpp20/concepts.md
@@ -1,4 +1,4 @@
-# コンセプト
+# コンセプト [P0734R0]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>一貫比較 [P0515R3] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/consistent_comparison.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/consistent_comparison.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/consistent_comparison.md b/lang/cpp20/consistent_comparison.md
index dc9123b0b..53209f1cd 100644
--- a/lang/cpp20/consistent_comparison.md
+++ b/lang/cpp20/consistent_comparison.md
@@ -1,4 +1,4 @@
-# 一貫比較
+# 一貫比較 [P0515R3]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンパイル時初期化を強制する`constinit`キーワードを追加 [P1143R2] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/constinit.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/constinit.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/constinit.md b/lang/cpp20/constinit.md
index 343186f49..82f66caeb 100644
--- a/lang/cpp20/constinit.md
+++ b/lang/cpp20/constinit.md
@@ -1,4 +1,4 @@
-# コンパイル時初期化を強制する`constinit`キーワードを追加
+# コンパイル時初期化を強制する`constinit`キーワードを追加 [P1143R2]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ポインタから`bool`への変換を縮小変換とする [P1957R2] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/converting_from_pointer_to_bool_should_be_considered_narrowing.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/converting_from_pointer_to_bool_should_be_considered_narrowing.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/converting_from_pointer_to_bool_should_be_considered_narrowing.md b/lang/cpp20/converting_from_pointer_to_bool_should_be_considered_narrowing.md
index 2df22bf8c..0cf4402aa 100644
--- a/lang/cpp20/converting_from_pointer_to_bool_should_be_considered_narrowing.md
+++ b/lang/cpp20/converting_from_pointer_to_bool_should_be_considered_narrowing.md
@@ -1,4 +1,4 @@
-# ポインタから`bool`への変換を縮小変換とする
+# ポインタから`bool`への変換を縮小変換とする [P1957R2]
 * cpp20[meta cpp]
 
 ## 概要
@@ -64,4 +64,4 @@ std::variant&amp;lt;bool, int&amp;gt; v = b[1]; // boolを保持して構築
 
 - [P1957R2 Converting from `T*` to `bool` should be considered narrowing (re: US 212)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p1957r2.html)
 - [LWG Issue 3228. Surprising `variant` construction](https://cplusplus.github.io/LWG/issue3228)
-- [P0608R3 A sane `variant` converting constructor](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0608r3.html)
\ No newline at end of file
+- [P0608R3 A sane `variant` converting constructor](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0608r3.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コルーチン [P0912R5] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/coroutines.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/coroutines.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/coroutines.md b/lang/cpp20/coroutines.md
index 133f5dce0..cc7d161e0 100644
--- a/lang/cpp20/coroutines.md
+++ b/lang/cpp20/coroutines.md
@@ -1,4 +1,4 @@
-# コルーチン
+# コルーチン [P0912R5]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>状態を持たないラムダ式を、デフォルト構築可能、代入可能とする [P0624R2] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/default_constructible_and_assignable_stateless_lambdas.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/default_constructible_and_assignable_stateless_lambdas.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/default_constructible_and_assignable_stateless_lambdas.md b/lang/cpp20/default_constructible_and_assignable_stateless_lambdas.md
index 54c60d3ce..1420fbd9f 100644
--- a/lang/cpp20/default_constructible_and_assignable_stateless_lambdas.md
+++ b/lang/cpp20/default_constructible_and_assignable_stateless_lambdas.md
@@ -1,4 +1,4 @@
-# 状態を持たないラムダ式を、デフォルト構築可能、代入可能とする
+# 状態を持たないラムダ式を、デフォルト構築可能、代入可能とする [P0624R2]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ビットフィールドのメンバ変数初期化 [P0683R1] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/default_member_initializers_for_bit_fields.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/default_member_initializers_for_bit_fields.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/default_member_initializers_for_bit_fields.md b/lang/cpp20/default_member_initializers_for_bit_fields.md
index 71f625e64..b4edb5594 100644
--- a/lang/cpp20/default_member_initializers_for_bit_fields.md
+++ b/lang/cpp20/default_member_initializers_for_bit_fields.md
@@ -1,4 +1,4 @@
-# ビットフィールドのメンバ変数初期化
+# ビットフィールドのメンバ変数初期化 [P0683R1]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>[=]によるthisの暗黙のキャプチャを非推奨化 [P0806R2] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/deprecate_implicit_capture_of_this_via_defcopy.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/deprecate_implicit_capture_of_this_via_defcopy.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/deprecate_implicit_capture_of_this_via_defcopy.md b/lang/cpp20/deprecate_implicit_capture_of_this_via_defcopy.md
index c557cb099..412554fab 100644
--- a/lang/cpp20/deprecate_implicit_capture_of_this_via_defcopy.md
+++ b/lang/cpp20/deprecate_implicit_capture_of_this_via_defcopy.md
@@ -1,4 +1,4 @@
-# [=]によるthisの暗黙のキャプチャを非推奨化
+# [=]によるthisの暗黙のキャプチャを非推奨化 [P0806R2]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>PODを非推奨化 [P0767R1] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/deprecate_pod.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/deprecate_pod.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;PODを非推奨化 [P0767R1]&lt;/span&gt;&lt;span class=&#34;cpp cpp20&#34; title=&#34;C++20で追加&#34;&gt;(C++20)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;../../reference/type_traits/is_pod.html&#34;&gt;POD (Plain Old Data) という型の分類&lt;/a&gt;は、C++11において&lt;a href=&#34;../../reference/type_traits/is_trivial.html&#34;&gt;トリビアル型&lt;/a&gt;と&lt;a href=&#34;../../reference/type_traits/is_standard_layout.html&#34;&gt;スタンダードレイアウト型&lt;/a&gt;に用語が分割された。&lt;/p&gt;
&lt;p&gt;C++20では規格の文面に残っていた「POD」の使用をやめ、スタンダードレイアウト型などのほかの型分類に置き換えた。&lt;/p&gt;
&lt;h2&gt;関連項目&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits/is_pod.html&#34;&gt;is_pod&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits/aligned_storage.html&#34;&gt;aligned_storage&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits/aligned_union.html&#34;&gt;aligned_union&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;../../reference/cstddef/max_align_t.html&#34;&gt;max_align_t&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0767r1.html&#34; target=&#34;_blank&#34;&gt;P0767R1 Deprecate POD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2342.htm&#34; target=&#34;_blank&#34;&gt;N2342 POD&#39;s Revisited; Resolving Core Issue 568 (Revision 5)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://faithandbrave.hateblo.jp/entry/20081127/1227777378&#34; target=&#34;_blank&#34;&gt;C++0x POD再考 - Faith and Brave - C++で遊ぼう&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;C++11においてPODという用語が分割された文書&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>添字演算子内でのカンマ演算子の使用を非推奨化 [P1161R3] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/deprecate_uses_of_the_comma_operator_in_subscripting_expressions.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/deprecate_uses_of_the_comma_operator_in_subscripting_expressions.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/deprecate_uses_of_the_comma_operator_in_subscripting_expressions.md b/lang/cpp20/deprecate_uses_of_the_comma_operator_in_subscripting_expressions.md
index 46440463d..b85ae365f 100644
--- a/lang/cpp20/deprecate_uses_of_the_comma_operator_in_subscripting_expressions.md
+++ b/lang/cpp20/deprecate_uses_of_the_comma_operator_in_subscripting_expressions.md
@@ -1,4 +1,4 @@
-# 添字演算子内でのカンマ演算子の使用を非推奨化
+# 添字演算子内でのカンマ演算子の使用を非推奨化 [P1161R3]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ほとんどの`volatile`を非推奨化 [P1152R4] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/deprecating_volatile.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/deprecating_volatile.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/deprecating_volatile.md b/lang/cpp20/deprecating_volatile.md
index 92c5e983f..484101b07 100644
--- a/lang/cpp20/deprecating_volatile.md
+++ b/lang/cpp20/deprecating_volatile.md
@@ -1,4 +1,4 @@
-# ほとんどの`volatile`を非推奨化
+# ほとんどの`volatile`を非推奨化 [P1152R4]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>指示付き初期化 [P0329R4] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/designated_initialization.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/designated_initialization.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/designated_initialization.md b/lang/cpp20/designated_initialization.md
index 46ba380d3..21eb9b338 100644
--- a/lang/cpp20/designated_initialization.md
+++ b/lang/cpp20/designated_initialization.md
@@ -1,4 +1,4 @@
-# 指示付き初期化
+# 指示付き初期化 [P0329R4]
 
 * cpp20[meta cpp]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>型の文脈でtypenameの省略を許可 [P0634R3] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/down_with_typename.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/down_with_typename.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/down_with_typename.md b/lang/cpp20/down_with_typename.md
index 4f956646e..7d86fa898 100644
--- a/lang/cpp20/down_with_typename.md
+++ b/lang/cpp20/down_with_typename.md
@@ -1,4 +1,4 @@
-# 型の文脈でtypenameの省略を許可
+# 型の文脈でtypenameの省略を許可 [P0634R3]
 
 * cpp20[meta cpp]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>可変長データを扱うクラスの効率的なdelete [P0722R3] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/efficient_sized_delete_for_variable_sized_classes.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/efficient_sized_delete_for_variable_sized_classes.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/efficient_sized_delete_for_variable_sized_classes.md b/lang/cpp20/efficient_sized_delete_for_variable_sized_classes.md
index 2d16ae931..246e37c9a 100644
--- a/lang/cpp20/efficient_sized_delete_for_variable_sized_classes.md
+++ b/lang/cpp20/efficient_sized_delete_for_variable_sized_classes.md
@@ -1,4 +1,4 @@
-# 可変長データを扱うクラスの効率的な`delete`
+# 可変長データを扱うクラスの効率的なdelete [P0722R3]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexpr関数内で未評価のインラインアセンブリを許可することによる組み込み関数のconstexpr有効化 [P1668R1] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/enabling_constexpr_intrinsics_by_permitting_unevaluated_inline-assembly_in_constexpr_functions.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/enabling_constexpr_intrinsics_by_permitting_unevaluated_inline-assembly_in_constexpr_functions.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/enabling_constexpr_intrinsics_by_permitting_unevaluated_inline-assembly_in_constexpr_functions.md b/lang/cpp20/enabling_constexpr_intrinsics_by_permitting_unevaluated_inline-assembly_in_constexpr_functions.md
index 69f592443..2a996c751 100644
--- a/lang/cpp20/enabling_constexpr_intrinsics_by_permitting_unevaluated_inline-assembly_in_constexpr_functions.md
+++ b/lang/cpp20/enabling_constexpr_intrinsics_by_permitting_unevaluated_inline-assembly_in_constexpr_functions.md
@@ -1,4 +1,4 @@
-# constexpr関数内で未評価のインラインアセンブリを許可することによる組み込み関数のconstexpr有効化
+# constexpr関数内で未評価のインラインアセンブリを許可することによる組み込み関数のconstexpr有効化 [P1668R1]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>関数を条件付きでexplicitにする構文を追加 [P0892R2] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/explicit_bool.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/explicit_bool.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/explicit_bool.md b/lang/cpp20/explicit_bool.md
index 1981098fd..344d574f9 100644
--- a/lang/cpp20/explicit_bool.md
+++ b/lang/cpp20/explicit_bool.md
@@ -1,4 +1,4 @@
-# 関数を条件付きでexplicitにする構文を追加
+# 関数を条件付きでexplicitにする構文を追加 [P0892R2]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>構造化束縛を拡張して通常の変数宣言のように使用できるようにする [P1091R3] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/extending_structured_bindings_to_be_more_like_variable_declarations.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/extending_structured_bindings_to_be_more_like_variable_declarations.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/extending_structured_bindings_to_be_more_like_variable_declarations.md b/lang/cpp20/extending_structured_bindings_to_be_more_like_variable_declarations.md
index 75c5dbe23..ae1d35a1e 100644
--- a/lang/cpp20/extending_structured_bindings_to_be_more_like_variable_declarations.md
+++ b/lang/cpp20/extending_structured_bindings_to_be_more_like_variable_declarations.md
@@ -1,4 +1,4 @@
-# 構造化束縛を拡張して通常の変数宣言のように使用できるようにする
+# 構造化束縛を拡張して通常の変数宣言のように使用できるようにする [P1091R3]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ジェネリックラムダのテンプレート構文 [P0428R2] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/familiar_template_syntax_for_generic_lambdas.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/familiar_template_syntax_for_generic_lambdas.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/familiar_template_syntax_for_generic_lambdas.md b/lang/cpp20/familiar_template_syntax_for_generic_lambdas.md
index 8cf5bea35..1e91bb228 100644
--- a/lang/cpp20/familiar_template_syntax_for_generic_lambdas.md
+++ b/lang/cpp20/familiar_template_syntax_for_generic_lambdas.md
@@ -1,4 +1,4 @@
-# ジェネリックラムダのテンプレート構文
+# ジェネリックラムダのテンプレート構文 [P0428R2]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>const修飾されたメンバポインタの制限を修正 [P0704R1] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/fixing_const_qualified_pointers_to_members.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/fixing_const_qualified_pointers_to_members.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/fixing_const_qualified_pointers_to_members.md b/lang/cpp20/fixing_const_qualified_pointers_to_members.md
index b0aa89c66..e5781123a 100644
--- a/lang/cpp20/fixing_const_qualified_pointers_to_members.md
+++ b/lang/cpp20/fixing_const_qualified_pointers_to_members.md
@@ -1,4 +1,4 @@
-# const修飾されたメンバポインタの制限を修正
+# const修飾されたメンバポインタの制限を修正 [P0704R1]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>即時関数 [P1073R3] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/immediate_functions.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/immediate_functions.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/immediate_functions.md b/lang/cpp20/immediate_functions.md
index c0b8a9c57..94dc24858 100644
--- a/lang/cpp20/immediate_functions.md
+++ b/lang/cpp20/immediate_functions.md
@@ -1,4 +1,4 @@
-# 即時関数
+# 即時関数 [P1073R3]
 
 * cpp20[meta cpp]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>空オブジェクトに対する最適化を支援する属性[[no_unique_address]] [P0840R2] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/language_support_for_empty_objects.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/language_support_for_empty_objects.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/language_support_for_empty_objects.md b/lang/cpp20/language_support_for_empty_objects.md
index 6901d033c..14d3c4804 100644
--- a/lang/cpp20/language_support_for_empty_objects.md
+++ b/lang/cpp20/language_support_for_empty_objects.md
@@ -1,4 +1,4 @@
-# 空オブジェクトに対する最適化を支援する属性[[no_unique_address]]
+# 空オブジェクトに対する最適化を支援する属性[[no_unique_address]] [P0840R2]
 
 * cpp20[meta cpp]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>評価されない文脈での定数式評価によって特殊メンバ関数がインスタンス化されることを規定 [P0859R0] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/less_eager_instantiation_of_constexpr_functions.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/less_eager_instantiation_of_constexpr_functions.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/less_eager_instantiation_of_constexpr_functions.md b/lang/cpp20/less_eager_instantiation_of_constexpr_functions.md
index f9059335c..f1fc80c78 100644
--- a/lang/cpp20/less_eager_instantiation_of_constexpr_functions.md
+++ b/lang/cpp20/less_eager_instantiation_of_constexpr_functions.md
@@ -1,4 +1,4 @@
-# 評価されない文脈での定数式評価によって特殊メンバ関数がインスタンス化されることを規定
+# 評価されない文脈での定数式評価によって特殊メンバ関数がインスタンス化されることを規定 [P0859R0]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>確率が高い分岐と低い分岐を伝える属性 [[likely]], [[unlikely]] [P0479R5] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/likely_and_unlikely_attributes.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/likely_and_unlikely_attributes.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/likely_and_unlikely_attributes.md b/lang/cpp20/likely_and_unlikely_attributes.md
index 378e98ad6..78625c538 100644
--- a/lang/cpp20/likely_and_unlikely_attributes.md
+++ b/lang/cpp20/likely_and_unlikely_attributes.md
@@ -1,4 +1,4 @@
-# 確率が高い分岐と低い分岐を伝える属性 [[likely]], [[unlikely]]
+# 確率が高い分岐と低い分岐を伝える属性 [[likely]], [[unlikely]] [P0479R5]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>char16_tとchar32_tの文字・文字列リテラルを、文字コードUTF-16/32に規定 [P1041R4] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/make_char16t_char32t_string_literals_be_utf16_32.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/make_char16t_char32t_string_literals_be_utf16_32.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;char16_tとchar32_tの文字・文字列リテラルを、文字コードUTF-16/32に規定 [P1041R4]&lt;/span&gt;&lt;span class=&#34;cpp cpp20&#34; title=&#34;C++20で追加&#34;&gt;(C++20)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;C++11で追加された文字型&lt;a href=&#34;../cpp11/char16_32.html&#34;&gt;&lt;code&gt;char16_t&lt;/code&gt;と&lt;code&gt;char32_t&lt;/code&gt;&lt;/a&gt;の文字・文字列リテラルの文字コード、C++20からはUTF-16とUTF-32であることが規定される。&lt;/p&gt;
&lt;p&gt;これまでは、以下のような仕様であった：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;uchar&amp;gt;&lt;/code&gt;ヘッダでマクロ&lt;code&gt;__STDC_UTF_16__&lt;/code&gt;が定義される場合、&lt;code&gt;char16_t&lt;/code&gt;型の値はUTF-16の妥当なコードポイントを持つ。そうでない場合、&lt;code&gt;char16_t&lt;/code&gt;型の値は実装定義の文字コードとなる。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;uchar&amp;gt;&lt;/code&gt;ヘッダでマクロ&lt;code&gt;__STDC_UTF_32__&lt;/code&gt;が定義される場合、&lt;code&gt;char32_t&lt;/code&gt;型の値はUTF-32の妥当なコードポイントを持つ。そうでない場合、&lt;code&gt;char32_t&lt;/code&gt;型の値は実装定義の文字コードとなる。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;C++20では、無条件にUTF-16とUTF-32であることが規定される。&lt;/p&gt;
&lt;p&gt;なお、&lt;code&gt;u8&lt;/code&gt;プレフィックスをつけた文字・文字列リテラルは、UTF-8であることがこれまでに規定されていた。&lt;/p&gt;
&lt;h2&gt;この機能が必要になった背景・経緯&lt;/h2&gt;
&lt;p&gt;これまで、&lt;code&gt;&amp;lt;uchar&amp;gt;&lt;/code&gt;ヘッダのマクロ&lt;code&gt;__STDC_UTF_16__&lt;/code&gt;と&lt;code&gt;__STDC_UTF_32__&lt;/code&gt;が定義されている場合にのみ、&lt;code&gt;char16_t&lt;/code&gt;と&lt;code&gt;char32_t&lt;/code&gt;はUTF-16/UTF-32エンコーディングであると規定されていた。&lt;/p&gt;
&lt;p&gt;しかし、これらが定義されなかった場合にコンパイラがほかのエンコーディングを選択することが疑わしかった。また、&lt;code&gt;char16_t&lt;/code&gt;の仕様として「サロゲートペア」が含まれているが、その概念をもつ他のよく知られた文字コードはない。単一の文字を32ビットで表現する他のよく知られた文字コードもない。&lt;/p&gt;
&lt;p&gt;実際にはすべての実装でこれらの文字・文字列リテラルはUTF-16とUTF-32にエンコーディングされるため、要件を示すだけではなく、より明確にするために、&lt;code&gt;char16_t&lt;/code&gt;と&lt;code&gt;char32_t&lt;/code&gt;の文字・文字列リテラルがUTF-16とUTF-32文字コードであることを規定する。&lt;/p&gt;
&lt;h2&gt;関連項目&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../cpp11/char16_32.html&#34;&gt;C++11 &lt;code&gt;char16_t&lt;/code&gt;と&lt;code&gt;char32_t&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../cpp11/utf8_string_literals.html&#34;&gt;C++11 UTF-8文字列リテラル&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../cpp17/utf8_character_literals.html&#34;&gt;C++17 UTF-8文字リテラル&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1041r4.html&#34; target=&#34;_blank&#34;&gt;P1041R4 Make &lt;code&gt;char16_t&lt;/code&gt;/&lt;code&gt;char32_t&lt;/code&gt; string literals be UTF-16/32&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>モジュール [P1103R3] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/modules.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/modules.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/modules.md b/lang/cpp20/modules.md
index dd9cf2a31..7bcd78598 100644
--- a/lang/cpp20/modules.md
+++ b/lang/cpp20/modules.md
@@ -1,4 +1,4 @@
-# モジュール
+# モジュール [P1103R3]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>可変サイズをもつコンテナのconstexpr化 [P0784R7] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/more_constexpr_containers.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/more_constexpr_containers.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/more_constexpr_containers.md b/lang/cpp20/more_constexpr_containers.md
index 78d291f09..98cd1f086 100644
--- a/lang/cpp20/more_constexpr_containers.md
+++ b/lang/cpp20/more_constexpr_containers.md
@@ -1,4 +1,4 @@
-# 可変サイズをもつコンテナのconstexpr化
+# 可変サイズをもつコンテナのconstexpr化 [P0784R7]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>入れ子名前空間定義でのインライン名前空間 [P1094R2] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/nested_inline_mamespaces.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/nested_inline_mamespaces.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/nested_inline_mamespaces.md b/lang/cpp20/nested_inline_mamespaces.md
index 759e6553a..7b91ac6dd 100644
--- a/lang/cpp20/nested_inline_mamespaces.md
+++ b/lang/cpp20/nested_inline_mamespaces.md
@@ -1,4 +1,4 @@
-# 入れ子名前空間定義でのインライン名前空間
+# 入れ子名前空間定義でのインライン名前空間 [P1094R2]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>[[nodiscard]]属性に理由となる文字列を付加できるようにする [P1301R4] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/nodiscard_should_have_a_reason.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/nodiscard_should_have_a_reason.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/nodiscard_should_have_a_reason.md b/lang/cpp20/nodiscard_should_have_a_reason.md
index f878d2e22..8f8d86e37 100644
--- a/lang/cpp20/nodiscard_should_have_a_reason.md
+++ b/lang/cpp20/nodiscard_should_have_a_reason.md
@@ -1,4 +1,4 @@
-# [[nodiscard]]属性に理由となる文字列を付加できるようにする
+# [[nodiscard]]属性に理由となる文字列を付加できるようにする [P1301R4]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>要素数不明の配列への変換を許可 [P0388R4] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/permit_conversions_to_arrays_of_unknown_bound.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/permit_conversions_to_arrays_of_unknown_bound.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/permit_conversions_to_arrays_of_unknown_bound.md b/lang/cpp20/permit_conversions_to_arrays_of_unknown_bound.md
index b540cc2b1..cf3a5780c 100644
--- a/lang/cpp20/permit_conversions_to_arrays_of_unknown_bound.md
+++ b/lang/cpp20/permit_conversions_to_arrays_of_unknown_bound.md
@@ -1,4 +1,4 @@
-# 要素数不明の配列への変換を許可
+# 要素数不明の配列への変換を許可 [P0388R4]
 
 * cpp20[meta cpp]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexpr関数内でのトリビアルなデフォルト初期化を許可 [P1331R2] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/permitting_trivial_default_initialization_in_constexpr_contexts.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/permitting_trivial_default_initialization_in_constexpr_contexts.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/permitting_trivial_default_initialization_in_constexpr_contexts.md b/lang/cpp20/permitting_trivial_default_initialization_in_constexpr_contexts.md
index d25f9c7fe..268c00f4c 100644
--- a/lang/cpp20/permitting_trivial_default_initialization_in_constexpr_contexts.md
+++ b/lang/cpp20/permitting_trivial_default_initialization_in_constexpr_contexts.md
@@ -1,4 +1,4 @@
-# constexpr関数内でのトリビアルなデフォルト初期化を許可
+# constexpr関数内でのトリビアルなデフォルト初期化を許可 [P1331R2]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ユーザー宣言したコンストラクタを持つクラスの集成体初期化を禁止 [P1008R1] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/prohibit_aggregates_with_user-declared_constructors.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/prohibit_aggregates_with_user-declared_constructors.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/prohibit_aggregates_with_user-declared_constructors.md b/lang/cpp20/prohibit_aggregates_with_user-declared_constructors.md
index d1a57ce80..5c638117e 100644
--- a/lang/cpp20/prohibit_aggregates_with_user-declared_constructors.md
+++ b/lang/cpp20/prohibit_aggregates_with_user-declared_constructors.md
@@ -1,4 +1,4 @@
-# ユーザー宣言したコンストラクタを持つクラスの集成体初期化を禁止
+# ユーザー宣言したコンストラクタを持つクラスの集成体初期化を禁止 [P1008R1]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>初期化式をともなう範囲for文 [P0614R1] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/range-based_for_statements_with_initializer.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/range-based_for_statements_with_initializer.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/range-based_for_statements_with_initializer.md b/lang/cpp20/range-based_for_statements_with_initializer.md
index 33db92eb7..af28928cc 100644
--- a/lang/cpp20/range-based_for_statements_with_initializer.md
+++ b/lang/cpp20/range-based_for_statements_with_initializer.md
@@ -1,4 +1,4 @@
-# 初期化式をともなう範囲for文
+# 初期化式をともなう範囲for文 [P0614R1]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>構造化束縛した変数の参照キャプチャを許可 [P1381R1] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/reference_capture_of_structured_bindings.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/reference_capture_of_structured_bindings.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/reference_capture_of_structured_bindings.md b/lang/cpp20/reference_capture_of_structured_bindings.md
index 25230502c..6c436a215 100644
--- a/lang/cpp20/reference_capture_of_structured_bindings.md
+++ b/lang/cpp20/reference_capture_of_structured_bindings.md
@@ -1,4 +1,4 @@
-# 構造化束縛した変数の参照キャプチャを許可
+# 構造化束縛した変数の参照キャプチャを許可 [P1381R1]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>範囲for文がカスタマイゼーションポイントを見つけるルールを緩和 [P0962R1] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/relaxing_the_range_for_loop_customization_point_finding_rules.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/relaxing_the_range_for_loop_customization_point_finding_rules.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/relaxing_the_range_for_loop_customization_point_finding_rules.md b/lang/cpp20/relaxing_the_range_for_loop_customization_point_finding_rules.md
index a70582faf..f1dc654f8 100644
--- a/lang/cpp20/relaxing_the_range_for_loop_customization_point_finding_rules.md
+++ b/lang/cpp20/relaxing_the_range_for_loop_customization_point_finding_rules.md
@@ -1,4 +1,4 @@
-# 範囲for文がカスタマイゼーションポイントを見つけるルールを緩和
+# 範囲for文がカスタマイゼーションポイントを見つけるルールを緩和 [P0962R1]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>構造化束縛がカスタマイゼーションポイントを見つけるルールを緩和 [P0961R1] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/relaxing_the_structured_bindings_customization_point_finding_rules.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/relaxing_the_structured_bindings_customization_point_finding_rules.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/relaxing_the_structured_bindings_customization_point_finding_rules.md b/lang/cpp20/relaxing_the_structured_bindings_customization_point_finding_rules.md
index e5a9bef4a..85607bc22 100644
--- a/lang/cpp20/relaxing_the_structured_bindings_customization_point_finding_rules.md
+++ b/lang/cpp20/relaxing_the_structured_bindings_customization_point_finding_rules.md
@@ -1,4 +1,4 @@
-# 構造化束縛がカスタマイゼーションポイントを見つけるルールを緩和
+# 構造化束縛がカスタマイゼーションポイントを見つけるルールを緩和 [P0961R1]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>デフォルトのコピーコンストラクタと非constなコンストラクタが衝突する問題を修正 [P0641R2] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/resolving_const_mismatch_with_defaulted_copy_constructor.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/resolving_const_mismatch_with_defaulted_copy_constructor.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/resolving_const_mismatch_with_defaulted_copy_constructor.md b/lang/cpp20/resolving_const_mismatch_with_defaulted_copy_constructor.md
index 3e7fc3e37..06ff7ff03 100644
--- a/lang/cpp20/resolving_const_mismatch_with_defaulted_copy_constructor.md
+++ b/lang/cpp20/resolving_const_mismatch_with_defaulted_copy_constructor.md
@@ -1,4 +1,4 @@
-# デフォルトのコピーコンストラクタと非constなコンストラクタが衝突する問題を修正
+# デフォルトのコピーコンストラクタと非constなコンストラクタが衝突する問題を修正 [P0641R2]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>符号付き整数型が2の補数表現であることを規定 [P1236R1] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/signed_integers_are_twos_complement.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/signed_integers_are_twos_complement.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/signed_integers_are_twos_complement.md b/lang/cpp20/signed_integers_are_twos_complement.md
index 125151a46..68606c12e 100644
--- a/lang/cpp20/signed_integers_are_twos_complement.md
+++ b/lang/cpp20/signed_integers_are_twos_complement.md
@@ -1,4 +1,4 @@
-# 符号付き整数型が2の補数表現であることを規定
+# 符号付き整数型が2の補数表現であることを規定 [P1236R1]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>暗黙のラムダキャプチャを簡略化 [P0588R1] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/simplifying_implicit_lambda_capture.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/simplifying_implicit_lambda_capture.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/simplifying_implicit_lambda_capture.md b/lang/cpp20/simplifying_implicit_lambda_capture.md
index 0b54668fd..9e7e3eae0 100644
--- a/lang/cpp20/simplifying_implicit_lambda_capture.md
+++ b/lang/cpp20/simplifying_implicit_lambda_capture.md
@@ -1,4 +1,4 @@
-# 暗黙のラムダキャプチャを簡略化
+# 暗黙のラムダキャプチャを簡略化 [P0588R1]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexpr関数内でのtry-catchブロックを許可 [P1002R1] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/try-catch_blocks_in_constexpr_functions.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/try-catch_blocks_in_constexpr_functions.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/try-catch_blocks_in_constexpr_functions.md b/lang/cpp20/try-catch_blocks_in_constexpr_functions.md
index 4079a64a8..c33558df5 100644
--- a/lang/cpp20/try-catch_blocks_in_constexpr_functions.md
+++ b/lang/cpp20/try-catch_blocks_in_constexpr_functions.md
@@ -1,4 +1,4 @@
-# constexpr関数内でのtry-catchブロックを許可
+# constexpr関数内でのtry-catchブロックを許可 [P1002R1]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>スコープ付き列挙型のusing宣言 [P1099R5] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/using_enum.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/using_enum.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/using_enum.md b/lang/cpp20/using_enum.md
index c4e424085..cde6bcb74 100644
--- a/lang/cpp20/using_enum.md
+++ b/lang/cpp20/using_enum.md
@@ -1,4 +1,4 @@
-# スコープ付き列挙型のusing宣言
+# スコープ付き列挙型のusing宣言 [P1099R5]
 
 * cpp20[meta cpp]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>可変引数が空でない場合のトークン置換 [P0306R4] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/va_opt.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/va_opt.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/va_opt.md b/lang/cpp20/va_opt.md
index dcf82ce2d..d0e2d13f5 100644
--- a/lang/cpp20/va_opt.md
+++ b/lang/cpp20/va_opt.md
@@ -1,4 +1,4 @@
-# 可変引数が空でない場合のトークン置換
+# 可変引数が空でない場合のトークン置換 [P0306R4]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>評価されない文脈でのラムダ式 [P0315R4] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/wording_for_lambdas_in_unevaluated_contexts.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp20/wording_for_lambdas_in_unevaluated_contexts.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/wording_for_lambdas_in_unevaluated_contexts.md b/lang/cpp20/wording_for_lambdas_in_unevaluated_contexts.md
index 91a11fb10..fec2f2ee6 100644
--- a/lang/cpp20/wording_for_lambdas_in_unevaluated_contexts.md
+++ b/lang/cpp20/wording_for_lambdas_in_unevaluated_contexts.md
@@ -1,4 +1,4 @@
-# 評価されない文脈でのラムダ式
+# 評価されない文脈でのラムダ式 [P0315R4]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>elif/elifdef/elifndefのサポートを追加 [P2334R1] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/add_support_for_preprocessing_directives_elifdef_and_elifndef.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp23/add_support_for_preprocessing_directives_elifdef_and_elifndef.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/add_support_for_preprocessing_directives_elifdef_and_elifndef.md b/lang/cpp23/add_support_for_preprocessing_directives_elifdef_and_elifndef.md
index b7881a9b6..24606375a 100644
--- a/lang/cpp23/add_support_for_preprocessing_directives_elifdef_and_elifndef.md
+++ b/lang/cpp23/add_support_for_preprocessing_directives_elifdef_and_elifndef.md
@@ -1,4 +1,4 @@
-# elif/elifdef/elifndefのサポートを追加
+# elif/elifdef/elifndefのサポートを追加 [P2334R1]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ラムダ式に対する属性 [P2173R1] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/attributes_on_lambda_expressions.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp23/attributes_on_lambda_expressions.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/attributes_on_lambda_expressions.md b/lang/cpp23/attributes_on_lambda_expressions.md
index 8c78b4065..30cd03e4b 100644
--- a/lang/cpp23/attributes_on_lambda_expressions.md
+++ b/lang/cpp23/attributes_on_lambda_expressions.md
@@ -1,4 +1,4 @@
-# ラムダ式に対する属性
+# ラムダ式に対する属性 [P2173R1]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>静的な診断メッセージの文字エンコーディング [P2246R1] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/character_encoding_of_diagnostic_text.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp23/character_encoding_of_diagnostic_text.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;静的な診断メッセージの文字エンコーディング [P2246R1]&lt;/span&gt;&lt;span class=&#34;cpp cpp23&#34; title=&#34;C++23で追加&#34;&gt;(C++23)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;C++23では、コンパイル時に診断メッセージを出力させる以下の機能について、ソースコードのエンコーディングが実行環境のエンコーディングで表現できない場合にどうするかの規定を見直す：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;static_assert&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[[deprecated]]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[[nodiscard]]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#error&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;C++20までは、「基本ソース文字集合に含まれない文字は出力する必要はない」という規定になっていたが、基本ソース文字集合と実行環境のエンコーディングは関係ないものであるため、この規定を削除することとした。&lt;/p&gt;
&lt;p&gt;この規定はC20でも導入され、C++もそれに追従することとした。&lt;/p&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2246r1.pdf&#34; target=&#34;_blank&#34;&gt;P2246R1 Character encoding of diagnostic text&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.open-std.org/jtc1/sc22/wg14/www/docs/n2563.pdf&#34; target=&#34;_blank&#34;&gt;WG14 N2563 Character encoding of diagnostic text&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>継承コンストラクタからのクラステンプレート引数の推論 [P2582R1] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/class_template_argument_deduction_from_inherited.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp23/class_template_argument_deduction_from_inherited.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/class_template_argument_deduction_from_inherited.md b/lang/cpp23/class_template_argument_deduction_from_inherited.md
index db1632503..ba94fb0f2 100644
--- a/lang/cpp23/class_template_argument_deduction_from_inherited.md
+++ b/lang/cpp23/class_template_argument_deduction_from_inherited.md
@@ -1,4 +1,4 @@
-# 継承コンストラクタからのクラステンプレート引数の推論
+# 継承コンストラクタからのクラステンプレート引数の推論 [P2582R1]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>文字リテラルエンコーディングを一貫させる [P2316R2] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/consistent_character_literal_encoding.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp23/consistent_character_literal_encoding.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/consistent_character_literal_encoding.md b/lang/cpp23/consistent_character_literal_encoding.md
index d21dc2514..17106dec6 100644
--- a/lang/cpp23/consistent_character_literal_encoding.md
+++ b/lang/cpp23/consistent_character_literal_encoding.md
@@ -1,4 +1,4 @@
-# 文字リテラルエンコーディングを一貫させる
+# 文字リテラルエンコーディングを一貫させる [P2316R2]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexpr関数内でconsteval関数を呼び出せない問題を軽減 [P2564R3] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/consteval_needs_to_propagate_up.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp23/consteval_needs_to_propagate_up.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/consteval_needs_to_propagate_up.md b/lang/cpp23/consteval_needs_to_propagate_up.md
index 5800006e9..8f7b945f1 100644
--- a/lang/cpp23/consteval_needs_to_propagate_up.md
+++ b/lang/cpp23/consteval_needs_to_propagate_up.md
@@ -1,4 +1,4 @@
-# constexpr関数内でconsteval関数を呼び出せない問題を軽減
+# constexpr関数内でconsteval関数を呼び出せない問題を軽減 [P2564R3]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>エスケープシーケンスの区切り [P2290R3] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/delimited_escape_sequences.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp23/delimited_escape_sequences.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/delimited_escape_sequences.md b/lang/cpp23/delimited_escape_sequences.md
index 975f02e06..b09612705 100644
--- a/lang/cpp23/delimited_escape_sequences.md
+++ b/lang/cpp23/delimited_escape_sequences.md
@@ -1,4 +1,4 @@
-# エスケープシーケンスの区切り
+# エスケープシーケンスの区切り [P2290R3]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ラムダ式で()を省略できる条件を緩和 [P1102R2] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/down_with_lambda_parens.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp23/down_with_lambda_parens.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/down_with_lambda_parens.md b/lang/cpp23/down_with_lambda_parens.md
index 38c1da716..a993635f3 100644
--- a/lang/cpp23/down_with_lambda_parens.md
+++ b/lang/cpp23/down_with_lambda_parens.md
@@ -1,4 +1,4 @@
-# ラムダ式で()を省略できる条件を緩和
+# ラムダ式で()を省略できる条件を緩和 [P1102R2]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>初期化文での型の別名宣言を許可 [P2360R0] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/extend_init_statement_to_allow_alias_declaration.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp23/extend_init_statement_to_allow_alias_declaration.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/extend_init_statement_to_allow_alias_declaration.md b/lang/cpp23/extend_init_statement_to_allow_alias_declaration.md
index 69cb5695f..bb3aeda35 100644
--- a/lang/cpp23/extend_init_statement_to_allow_alias_declaration.md
+++ b/lang/cpp23/extend_init_statement_to_allow_alias_declaration.md
@@ -1,4 +1,4 @@
-# 初期化文での型の別名宣言を許可
+# 初期化文での型の別名宣言を許可 [P2360R0]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>変数テンプレートの部分特殊化を許可 [P2096R2] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/generalized_wording_for_partial_specializations.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp23/generalized_wording_for_partial_specializations.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/generalized_wording_for_partial_specializations.md b/lang/cpp23/generalized_wording_for_partial_specializations.md
index 4c58ca285..a872492de 100644
--- a/lang/cpp23/generalized_wording_for_partial_specializations.md
+++ b/lang/cpp23/generalized_wording_for_partial_specializations.md
@@ -1,4 +1,4 @@
-# 変数テンプレートの部分特殊化を許可
+# 変数テンプレートの部分特殊化を許可 [P2096R2]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>if consteval [P1938R3] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/if_consteval.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp23/if_consteval.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/if_consteval.md b/lang/cpp23/if_consteval.md
index 0c7247d29..856fae791 100644
--- a/lang/cpp23/if_consteval.md
+++ b/lang/cpp23/if_consteval.md
@@ -1,4 +1,4 @@
-# if consteval
+# if consteval [P1938R3]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>複合文の末尾へのラベルを許可 [P2324R2] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/labels_at_the_end_of_compound_statements.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp23/labels_at_the_end_of_compound_statements.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/labels_at_the_end_of_compound_statements.md b/lang/cpp23/labels_at_the_end_of_compound_statements.md
index c8377072a..dacce86cb 100644
--- a/lang/cpp23/labels_at_the_end_of_compound_statements.md
+++ b/lang/cpp23/labels_at_the_end_of_compound_statements.md
@@ -1,4 +1,4 @@
-# 複合文の末尾へのラベルを許可
+# 複合文の末尾へのラベルを許可 [P2324R2]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>範囲for文が範囲初期化子内で生じた一時オブジェクトを延命することを規定 [P2718R0] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/lifetime_extension_in_range_based_for_loop.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp23/lifetime_extension_in_range_based_for_loop.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/lifetime_extension_in_range_based_for_loop.md b/lang/cpp23/lifetime_extension_in_range_based_for_loop.md
index 4265b36f1..21d2f13e7 100644
--- a/lang/cpp23/lifetime_extension_in_range_based_for_loop.md
+++ b/lang/cpp23/lifetime_extension_in_range_based_for_loop.md
@@ -1,4 +1,4 @@
-# 範囲for文が範囲初期化子内で生じた一時オブジェクトを延命することを規定
+# 範囲for文が範囲初期化子内で生じた一時オブジェクトを延命することを規定 [P2718R0]
 
 * cpp23[meta cpp]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>(符号付き)size_tリテラルのためのサフィックス [P0330R8] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/literal_suffix_for_signed_size_t.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp23/literal_suffix_for_signed_size_t.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/literal_suffix_for_signed_size_t.md b/lang/cpp23/literal_suffix_for_signed_size_t.md
index aa551dbca..5a31e63cc 100644
--- a/lang/cpp23/literal_suffix_for_signed_size_t.md
+++ b/lang/cpp23/literal_suffix_for_signed_size_t.md
@@ -1,4 +1,4 @@
-# (符号付き)size_tリテラルのためのサフィックス
+# (符号付き)size_tリテラルのためのサフィックス [P0330R8]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>アクセス制御の異なるメンバ変数のレイアウトを宣言順に規定 [P1847R4] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/make_declaration_order_layout_mandated.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp23/make_declaration_order_layout_mandated.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/make_declaration_order_layout_mandated.md b/lang/cpp23/make_declaration_order_layout_mandated.md
index 373732612..3bdb83bfa 100644
--- a/lang/cpp23/make_declaration_order_layout_mandated.md
+++ b/lang/cpp23/make_declaration_order_layout_mandated.md
@@ -1,4 +1,4 @@
-# アクセス制御の異なるメンバ変数のレイアウトを宣言順に規定
+# アクセス制御の異なるメンバ変数のレイアウトを宣言順に規定 [P1847R4]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>無意味なexport宣言を禁止する [P2615R1] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/meaningful_exports.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp23/meaningful_exports.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/meaningful_exports.md b/lang/cpp23/meaningful_exports.md
index 638b7c073..c1bfe2765 100644
--- a/lang/cpp23/meaningful_exports.md
+++ b/lang/cpp23/meaningful_exports.md
@@ -1,4 +1,4 @@
-# 無意味なexport宣言を禁止する
+# 無意味なexport宣言を禁止する [P2615R1]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>異なる文字エンコーディングをもつ文字列リテラルの連結を不適格とする [P2201R1] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/mixed_string_literal_concatenation.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp23/mixed_string_literal_concatenation.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/mixed_string_literal_concatenation.md b/lang/cpp23/mixed_string_literal_concatenation.md
index 538bbc8fb..b93c80edb 100644
--- a/lang/cpp23/mixed_string_literal_concatenation.md
+++ b/lang/cpp23/mixed_string_literal_concatenation.md
@@ -1,4 +1,4 @@
-# 異なる文字エンコーディングをもつ文字列リテラルの連結を不適格とする
+# 異なる文字エンコーディングをもつ文字列リテラルの連結を不適格とする [P2201R1]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>添字演算子の多次元サポート [P2128R6] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/multidimensional_subscript_operator.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp23/multidimensional_subscript_operator.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/multidimensional_subscript_operator.md b/lang/cpp23/multidimensional_subscript_operator.md
index 89306c3bc..3e7df114d 100644
--- a/lang/cpp23/multidimensional_subscript_operator.md
+++ b/lang/cpp23/multidimensional_subscript_operator.md
@@ -1,4 +1,4 @@
-# 添字演算子の多次元サポート
+# 添字演算子の多次元サポート [P2128R6]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>名前付きユニバーサルキャラクタ名 [P2071R2] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/named_universal_character_escapes.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp23/named_universal_character_escapes.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/named_universal_character_escapes.md b/lang/cpp23/named_universal_character_escapes.md
index 8a38ffbe3..489dfb672 100644
--- a/lang/cpp23/named_universal_character_escapes.md
+++ b/lang/cpp23/named_universal_character_escapes.md
@@ -1,4 +1,4 @@
-# 名前付きユニバーサルキャラクタ名
+# 名前付きユニバーサルキャラクタ名 [P2071R2]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>定数式の文脈でのboolへの縮小変換を許可 [P1401R5] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/narrowing_contextual_conversions_to_bool.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp23/narrowing_contextual_conversions_to_bool.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/narrowing_contextual_conversions_to_bool.md b/lang/cpp23/narrowing_contextual_conversions_to_bool.md
index 2730e9a17..ece89bd08 100644
--- a/lang/cpp23/narrowing_contextual_conversions_to_bool.md
+++ b/lang/cpp23/narrowing_contextual_conversions_to_bool.md
@@ -1,4 +1,4 @@
-# 定数式の文脈でのboolへの縮小変換を許可
+# 定数式の文脈でのboolへの縮小変換を許可 [P1401R5]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>定数式内での非リテラル変数、静的変数・スレッドローカル変数およびgotoとラベルの存在を許可する [P2242R3] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/non_literal_variables_in_constexpr_functions.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp23/non_literal_variables_in_constexpr_functions.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;定数式内での非リテラル変数、静的変数・スレッドローカル変数およびgotoとラベルの存在を許可する [P2242R3]&lt;/span&gt;&lt;span class=&#34;cpp cpp23&#34; title=&#34;C++23で追加&#34;&gt;(C++23)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;constexpr&lt;/code&gt;関数が非リテラル変数、静的変数・スレッドローカル変数およびgoto文とラベルを含むことを許可する。&lt;/p&gt;
&lt;p&gt;ただし、これをコンパイル時に評価した場合、従来通りエラーとなる。
これらを含むコードパスは実行時にのみ通過するようにしなければならない。&lt;/p&gt;
&lt;h2&gt;この機能が必要になった背景・経緯&lt;/h2&gt;
&lt;p&gt;これまでは、&lt;code&gt;constexpr&lt;/code&gt;関数内には非リテラル変数、静的変数・スレッドローカル変数およびgoto文とラベルが含まれてはならなかった。
これは、&lt;code&gt;constexpr&lt;/code&gt;関数が定数式実行できない要素を含んではならないという意味で、理にかなった制限であった。&lt;/p&gt;
&lt;p&gt;しかし、C++20で&lt;code&gt;&lt;a href=&#34;../../reference/type_traits/is_constant_evaluated.html&#34;&gt;std::is_constant_evaluated&lt;/a&gt;&lt;/code&gt;によって定数式実行されるコードパスと実行時に通るコードパスを分けることが可能になり、状況が変化した。
定数式実行できないコードとはいえ、実行時にのみ通りコンパイル時には通らないコードパスに含まれていた場合にもプログラムが&lt;a class=&#34;cpprefjp-defined-word&#34;&gt;不適格&lt;/a&gt;となる、というのは直観に反する。&lt;/p&gt;
&lt;p&gt;よって、コンパイル時に評価されない限りにおいて、&lt;code&gt;constexpr&lt;/code&gt;関数内に非リテラル変数、静的変数・スレッドローカル変数およびgoto文とラベルを含むことが許可されることとなった。&lt;/p&gt;
&lt;p&gt;ただし、&lt;code&gt;constexpr&lt;/code&gt;内に存在することが許可されたものの定数式として評価できるわけではないので、これらの機能は依然としてコンパイル時に使用することはできない。&lt;/p&gt;
&lt;h2&gt;関連項目&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../cpp20/try-catch_blocks_in_constexpr_functions.html&#34;&gt;C++20 - constexpr関数内でのtry-catchブロックを許可&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../cpp20/enabling_constexpr_intrinsics_by_permitting_unevaluated_inline-assembly_in_constexpr_functions.html&#34;&gt;C++20 - constexpr関数内で未評価のインラインアセンブリを許可することによる組み込み関数のconstexpr有効化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;permitting_static_constexpr_variables_in_constexpr_functions.html&#34;&gt;C++23 - &lt;code&gt;constexpr&lt;/code&gt;関数内での&lt;code&gt;static constexpr&lt;/code&gt;変数を許可&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2242r3.html&#34; target=&#34;_blank&#34;&gt;P2242R3 - Non-literal variables (and labels and gotos) in constexpr functions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexpr関数内でのstatic constexpr変数を許可 [P2647R1] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/permitting_static_constexpr_variables_in_constexpr_functions.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp23/permitting_static_constexpr_variables_in_constexpr_functions.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/permitting_static_constexpr_variables_in_constexpr_functions.md b/lang/cpp23/permitting_static_constexpr_variables_in_constexpr_functions.md
index 431608eb6..d394617d3 100644
--- a/lang/cpp23/permitting_static_constexpr_variables_in_constexpr_functions.md
+++ b/lang/cpp23/permitting_static_constexpr_variables_in_constexpr_functions.md
@@ -1,4 +1,4 @@
-# constexpr関数内でのstatic constexpr変数を許可
+# constexpr関数内でのstatic constexpr変数を許可 [P2647R1]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コード内容の仮定をコンパイラに伝える`assume`属性 [P1774R8] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/portable_assumptions.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp23/portable_assumptions.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/portable_assumptions.md b/lang/cpp23/portable_assumptions.md
index 8c8ebf1c0..7e7506e4a 100644
--- a/lang/cpp23/portable_assumptions.md
+++ b/lang/cpp23/portable_assumptions.md
@@ -1,4 +1,4 @@
-# コード内容の仮定をコンパイラに伝える`assume`属性
+# コード内容の仮定をコンパイラに伝える`assume`属性 [P1774R8]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexpr関数が定数実行できない場合でも適格とする [P2448R2] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/relaxing_some_constexpr_restrictions.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp23/relaxing_some_constexpr_restrictions.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/relaxing_some_constexpr_restrictions.md b/lang/cpp23/relaxing_some_constexpr_restrictions.md
index 205a7e237..f187fd29f 100644
--- a/lang/cpp23/relaxing_some_constexpr_restrictions.md
+++ b/lang/cpp23/relaxing_some_constexpr_restrictions.md
@@ -1,4 +1,4 @@
-# constexpr関数が定数実行できない場合でも適格とする
+# constexpr関数が定数実行できない場合でも適格とする [P2448R2]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>1ワイド文字に収まらないワイド文字リテラルを禁止する [P2362R3] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/remove_non_encodable_wide_character_literals_and_multicharacter_wide_character_literals.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp23/remove_non_encodable_wide_character_literals_and_multicharacter_wide_character_literals.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/remove_non_encodable_wide_character_literals_and_multicharacter_wide_character_literals.md b/lang/cpp23/remove_non_encodable_wide_character_literals_and_multicharacter_wide_character_literals.md
index ea946f5c9..83a1153f7 100644
--- a/lang/cpp23/remove_non_encodable_wide_character_literals_and_multicharacter_wide_character_literals.md
+++ b/lang/cpp23/remove_non_encodable_wide_character_literals_and_multicharacter_wide_character_literals.md
@@ -1,4 +1,4 @@
-# 1ワイド文字に収まらないワイド文字リテラルを禁止する
+# 1ワイド文字に収まらないワイド文字リテラルを禁止する [P2362R3]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>暗黙的なムーブを簡略化 [P2266R3] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/simpler_implicit_move.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp23/simpler_implicit_move.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/simpler_implicit_move.md b/lang/cpp23/simpler_implicit_move.md
index d6d4ceaa3..86746ed6f 100644
--- a/lang/cpp23/simpler_implicit_move.md
+++ b/lang/cpp23/simpler_implicit_move.md
@@ -1,4 +1,4 @@
-# 暗黙的なムーブを簡略化
+# 暗黙的なムーブを簡略化 [P2266R3]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>thisポインタをもつ必要のない演算子をstaticとして宣言できるようにする [P1169R4] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/static_operator.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp23/static_operator.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/static_operator.md b/lang/cpp23/static_operator.md
index 82da0f5a2..10a20d927 100644
--- a/lang/cpp23/static_operator.md
+++ b/lang/cpp23/static_operator.md
@@ -1,4 +1,4 @@
-# thisポインタをもつ必要のない演算子をstaticとして宣言できるようにする
+# thisポインタをもつ必要のない演算子をstaticとして宣言できるようにする [P1169R4]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>汎用的なソースコードのエンコーディングとしてUTF-8をサポート [P2295R6] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/support_for_utf8_as_a_portable_source_file_encoding.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp23/support_for_utf8_as_a_portable_source_file_encoding.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;汎用的なソースコードのエンコーディングとしてUTF-8をサポート [P2295R6]&lt;/span&gt;&lt;span class=&#34;cpp cpp23&#34; title=&#34;C++23で追加&#34;&gt;(C++23)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;C++20まで、ソースコードの文字集合は実装定義だったが、その仕様では移植性に問題があった。C++23からは、すべてのコンパイラはUTF-8文字コードのソースコードをサポートしなければならないことが規定される。&lt;/p&gt;
&lt;p&gt;コンパイラは、ほかの文字コードと区別するため、入力ファイルがUTF-8であることを決定する実装定義の手段をもたなければならない。つまり、BOM (バイトオーダーマーク) を認識するだけでは十分ではない。&lt;/p&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p2295r6.pdf&#34; target=&#34;_blank&#34;&gt;P2295R6 Support for UTF-8 as a portable source file encoding&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>行末スペースを無視するよう規定 [P2223R2] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/trimming_whitespaces_before_line_splicing.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp23/trimming_whitespaces_before_line_splicing.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/trimming_whitespaces_before_line_splicing.md b/lang/cpp23/trimming_whitespaces_before_line_splicing.md
index d17c4a549..fe51f851a 100644
--- a/lang/cpp23/trimming_whitespaces_before_line_splicing.md
+++ b/lang/cpp23/trimming_whitespaces_before_line_splicing.md
@@ -1,4 +1,4 @@
-# 行末スペースを無視するよう規定
+# 行末スペースを無視するよう規定 [P2223R2]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>#warningのサポートを追加 [P2437R1] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/warning.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp23/warning.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/warning.md b/lang/cpp23/warning.md
index 2695381db..4706b00c5 100644
--- a/lang/cpp23/warning.md
+++ b/lang/cpp23/warning.md
@@ -1,4 +1,4 @@
-# #warningのサポートを追加
+# #warningのサポートを追加 [P2437R1]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>static_assertの診断メッセージにユーザーが生成した文字列の指定を許可 [P2741R3] -- Merge pull request #1290 from cpprefjp/paper_name</title>
      <link href="https://cpprefjp.github.io/lang/cpp26/user-generated_static_assert_messages.html"/>
      <id>34b16b2a6912bddf5ab6ea4406a6b04f3b6ad4a8:lang/cpp26/user-generated_static_assert_messages.md</id>
      <updated>2024-06-14T14:18:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp26/user-generated_static_assert_messages.md b/lang/cpp26/user-generated_static_assert_messages.md
index e05ce729d..06e1dadb8 100644
--- a/lang/cpp26/user-generated_static_assert_messages.md
+++ b/lang/cpp26/user-generated_static_assert_messages.md
@@ -1,4 +1,4 @@
-# static_assertの診断メッセージにユーザーが生成した文字列の指定を許可
+# static_assertの診断メッセージにユーザーが生成した文字列の指定を許可 [P2741R3]
 * cpp26[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンパイラの実装状況 -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/implementation-status.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:implementation-status.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;コンパイラの実装状況&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;このページでは、C++のバージョンごとの言語機能を、どのコンパイラがどのバージョンからサポートしているかをまとめる。&lt;/p&gt;
&lt;p&gt;ライブラリ機能については、本サイトのリファレンスで各機能を参照してもらいたい。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#cpp11&#34;&gt;C++11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cpp14&#34;&gt;C++14&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cpp17&#34;&gt;C++17&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cpp20&#34;&gt;C++20&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cpp23&#34;&gt;C++23&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cpp26&#34;&gt;C++26&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#cpp11&#34; id=&#34;cpp11&#34;&gt;C++11言語機能の実装状況&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;言語機能&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#clang&#34;&gt;Clang&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#icc&#34;&gt;ICC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#visual_cpp&#34;&gt;MSVC&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;N2341: &lt;code&gt;&lt;a href=&#34;lang/cpp11/alignas.html&#34;&gt;alignas&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;アライメント指定&lt;/td&gt;
&lt;td&gt;4.8&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;15.0&lt;/td&gt;
&lt;td&gt;2015&lt;br /&gt;2003あるいはそれ以前からある&lt;code&gt;__declspec(align(x))&lt;/code&gt;構文で代替可能。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2341: &lt;code&gt;&lt;a href=&#34;lang/cpp11/alignof.html&#34;&gt;alignof&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;アライメント取得&lt;/td&gt;
&lt;td&gt;4.5&lt;/td&gt;
&lt;td&gt;3.3&lt;/td&gt;
&lt;td&gt;15.0&lt;/td&gt;
&lt;td&gt;2015&lt;br /&gt;2003あるいはそれ以前よりある&lt;code&gt;__alignof&lt;/code&gt;で代替可能。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N1984: &lt;code&gt;&lt;a href=&#34;lang/cpp11/auto.html&#34;&gt;auto&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;型推論&lt;/td&gt;
&lt;td&gt;4.4&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;2010&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2343: &lt;code&gt;&lt;a href=&#34;lang/cpp11/decltype.html&#34;&gt;decltype&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;式の型を取得&lt;/td&gt;
&lt;td&gt;4.3&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;13.0&lt;/td&gt;
&lt;td&gt;2010 (partial)&lt;br /&gt; 2012&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N1653: C99互換のプリプロセッサ&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;lang/cpp11/variadic_macros.html&#34;&gt;可変引数マクロ&lt;/a&gt;、&lt;a href=&#34;lang/cpp11/pragma_operator.html&#34;&gt;Pragma演算子&lt;/a&gt;、&lt;code&gt;&lt;a href=&#34;lang/cpp11/func.html&#34;&gt;__func__&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;4.3&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.1&lt;/td&gt;
&lt;td&gt;2005 (partial): 可変引数のみ &lt;code&gt;_Pragma&lt;/code&gt;の代わりに&lt;code&gt;__pragma&lt;/code&gt;が存在する。&lt;br /&gt; 2019 Update 6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2235: &lt;code&gt;&lt;a href=&#34;lang/cpp11/constexpr.html&#34;&gt;constexpr&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;定数式&lt;/td&gt;
&lt;td&gt;4.6&lt;/td&gt;
&lt;td&gt;3.1&lt;/td&gt;
&lt;td&gt;13.0 (partial)&lt;br /&gt; 14.0&lt;/td&gt;
&lt;td&gt;2015 (partial)&lt;br /&gt; 2015 Update 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2346: &lt;a href=&#34;lang/cpp11/defaulted_and_deleted_functions.html&#34;&gt;関数の&lt;code&gt;default/delete&lt;/code&gt;宣言&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;自動定義される特殊関数の制御&lt;/td&gt;
&lt;td&gt;4.4&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;2013: ムーブコンストラクタ・ムーブ代入演算子の&lt;code&gt;default&lt;/code&gt;は不可&lt;br /&gt; 2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N1986: &lt;a href=&#34;lang/cpp11/delegating_constructors.html&#34;&gt;委譲コンストラクタ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コンストラクタから他のコンストラクタに処理を委譲する&lt;/td&gt;
&lt;td&gt;4.7&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2437: &lt;a href=&#34;lang/cpp11/explicit_conversion_operator.html&#34;&gt;明示的な型変換演算子のオーバーロード&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;明示的な型変換が行われる場合にのみ呼び出される演算子をオーバーロードできるようにする&lt;/td&gt;
&lt;td&gt;4.5&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N1791: &lt;a href=&#34;lang/cpp11/extend_friend_targets.html&#34;&gt;&lt;code&gt;friend&lt;/code&gt;宣言できる対象を拡張&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;テンプレートパラメータや型の別名を&lt;code&gt;friend&lt;/code&gt;宣言&lt;/td&gt;
&lt;td&gt;4.7&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.1 (partial) &lt;br /&gt; 12.0&lt;/td&gt;
&lt;td&gt;2010&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N1987: &lt;code&gt;&lt;a href=&#34;lang/cpp11/extern_template.html&#34;&gt;extern template&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;テンプレートのインスタンス化抑止&lt;/td&gt;
&lt;td&gt;3.3&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.1&lt;/td&gt;
&lt;td&gt;6.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2540: &lt;a href=&#34;lang/cpp11/inheriting_constructors.html&#34;&gt;継承コンストラクタ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;基底クラスのコンストラクタを継承する&lt;/td&gt;
&lt;td&gt;4.8&lt;/td&gt;
&lt;td&gt;3.3&lt;/td&gt;
&lt;td&gt;15.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2927: &lt;a href=&#34;lang/cpp11/lambda_expressions.html&#34;&gt;ラムダ式&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;関数オブジェクトをその場に書く&lt;/td&gt;
&lt;td&gt;4.5&lt;/td&gt;
&lt;td&gt;3.1&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;2010 (partial)&lt;br /&gt; 2012&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2657: &lt;a href=&#34;lang/cpp11/local_and_unnamed_type_as_template_arguments.html&#34;&gt;ローカル型と無名型を、テンプレート引数として使用することを許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ローカルおよび無名として定義したクラスや列挙型を、テンプレート引数として渡せるようにする&lt;/td&gt;
&lt;td&gt;4.5&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;2010&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N1811: &lt;a href=&#34;lang/cpp11/long_long_type.html&#34;&gt;&lt;code&gt;long long&lt;/code&gt;型&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;64ビット以上の大きさを持つ整数型&lt;/td&gt;
&lt;td&gt;4.3&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.1&lt;/td&gt;
&lt;td&gt;2003&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2535: &lt;a href=&#34;lang/cpp11/inline_namespaces.html&#34;&gt;インライン名前空間&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ネストした名前空間に、透過的にアクセスする&lt;/td&gt;
&lt;td&gt;4.4&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2249: &lt;a href=&#34;lang/cpp11/char16_32.html&#34;&gt;&lt;code&gt;char16_t&lt;/code&gt;と&lt;code&gt;char32_t&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;UTF-16とUTF-32の文字型&lt;/td&gt;
&lt;td&gt;4.4&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;12.1 (Windows: partial) &lt;br /&gt; 12.1 (GNU/Linux, macOS)&lt;br /&gt; 14.0&lt;/td&gt;
&lt;td&gt;2015&lt;br /&gt; 2010より組み込み型ではなく型の別名として存在する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2442: &lt;a href=&#34;lang/cpp11/utf8_string_literals.html&#34;&gt;UTF-8文字列リテラル&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;char&lt;/code&gt;の文字列をUTF-8エンコーディングするプレフィックス&lt;/td&gt;
&lt;td&gt;4.5&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;12.1 (Windows: partial) &lt;br /&gt; 12.1 (GNU/Linux, macOS)&lt;br /&gt; 14.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2442: &lt;a href=&#34;lang/cpp11/raw_string_literals.html&#34;&gt;生文字列リテラル&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;文字列リテラルにRプレフィックスを付けることで、エスケープシーケンスを無視する&lt;/td&gt;
&lt;td&gt;4.5&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2765: &lt;a href=&#34;lang/cpp11/user_defined_literals.html&#34;&gt;ユーザー定義リテラル&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;リテラルのサフィックスをユーザー定義する&lt;/td&gt;
&lt;td&gt;4.7&lt;/td&gt;
&lt;td&gt;3.1&lt;/td&gt;
&lt;td&gt;15.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2541: &lt;a href=&#34;lang/cpp11/trailing_return_types.html&#34;&gt;戻り値の型を後置する関数宣言構文&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;以下のような形式での関数宣言&lt;br /&gt; &lt;code&gt;auto f(arg_types...) -&amp;gt; return_type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;4.4&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;2010&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2431: &lt;code&gt;&lt;a href=&#34;lang/cpp11/nullptr.html&#34;&gt;nullptr&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ヌルポインタを表すポインタリテラル&lt;/td&gt;
&lt;td&gt;4.6&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;11.1&lt;/td&gt;
&lt;td&gt;2010&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N1757: &lt;a href=&#34;lang/cpp11/right_angle_brackets.html&#34;&gt;テンプレートの右山カッコ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vector&amp;lt;basic_string&amp;lt;char&amp;gt;&amp;gt;&lt;/code&gt;のように、&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;をスペースを空けずに記述可能にする&lt;/td&gt;
&lt;td&gt;4.3&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.1&lt;/td&gt;
&lt;td&gt;2005&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2118: &lt;a href=&#34;lang/cpp11/rvalue_ref_and_move_semantics.html&#34;&gt;右辺値参照・ムーブセマンティクス&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;右辺値によるオーバーロード、およびそれによるリソースの所有権移動&lt;/td&gt;
&lt;td&gt;4.3 (partial)&lt;br /&gt; 4.6&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;2010 (partial) ムーブコンストラクタと代入演算子の暗黙定義に対応していない。&lt;br /&gt; 2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N1720: &lt;a href=&#34;lang/cpp11/static_assert.html&#34;&gt;コンパイル時アサート&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コンパイル時に条件式が真であることを表明する&lt;/td&gt;
&lt;td&gt;4.3&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.1&lt;/td&gt;
&lt;td&gt;2010&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2347: &lt;a href=&#34;lang/cpp11/scoped_enum.html#extended-unscoped-enum&#34;&gt;&lt;code&gt;enum&lt;/code&gt;の先行宣言&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;4.6&lt;/td&gt;
&lt;td&gt;3.1&lt;/td&gt;
&lt;td&gt;11.1 (partial)&lt;br /&gt; 14.0&lt;/td&gt;
&lt;td&gt;2012&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2347: &lt;a href=&#34;lang/cpp11/scoped_enum.html&#34;&gt;スコープを持つ列挙型&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;強い型付けとスコープを持つ列挙型&lt;/td&gt;
&lt;td&gt;4.4&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.1 (partial)&lt;br /&gt; 14.0&lt;/td&gt;
&lt;td&gt;2012&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2258: &lt;a href=&#34;lang/cpp11/alias_templates.html&#34;&gt;エイリアステンプレート&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;テンプレートによって型の別名を定義する&lt;/td&gt;
&lt;td&gt;4.7&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;12.1&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2544: &lt;a href=&#34;lang/cpp11/unrestricted_unions.html&#34;&gt;共用体の制限解除&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;共用体のメンバ変数として、クラスオブジェクトを持つ&lt;/td&gt;
&lt;td&gt;4.6&lt;/td&gt;
&lt;td&gt;3.1&lt;/td&gt;
&lt;td&gt;14.0(Linux系OSおよびMacのみ。Windowsは非対応)&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2242: &lt;a href=&#34;lang/cpp11/variadic_templates.html&#34;&gt;可変引数テンプレート&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;任意の数のテンプレートパラメータを受け取れるようにする&lt;/td&gt;
&lt;td&gt;4.3 (partial)&lt;br /&gt; 4.4&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;12.1&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2930: &lt;a href=&#34;lang/cpp11/range_based_for.html&#34;&gt;範囲for文&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;配列やコンテナといった範囲を表すオブジェクトを、簡潔に走査する&lt;/td&gt;
&lt;td&gt;4.6&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;13.0&lt;/td&gt;
&lt;td&gt;2012&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2928: &lt;a href=&#34;lang/cpp11/override_final.html&#34;&gt;&lt;code&gt;override&lt;/code&gt;と&lt;code&gt;final&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;メンバ関数のオーバーライド指定、および派生クラスでのオーバーロードを禁止する指定&lt;/td&gt;
&lt;td&gt;4.7&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;2005 (partial): &lt;code&gt;override&lt;/code&gt;のみ。&lt;code&gt;final&lt;/code&gt;の代わりにsealedが存在する。ただし両者ともデストラクタには指定できない。&lt;br /&gt; 2012&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2761: &lt;a href=&#34;lang/cpp11/attributes.html&#34;&gt;属性構文&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[[attr]]&lt;/code&gt;構文による、クラス、関数、変数の属性指定&lt;/td&gt;
&lt;td&gt;4.8&lt;/td&gt;
&lt;td&gt;3.3&lt;/td&gt;
&lt;td&gt;12.1&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2439: &lt;a href=&#34;lang/cpp11/ref_qualifier_for_this.html&#34;&gt;メンバ関数の左辺値／右辺値修飾&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;オブジェクトが左辺値／右辺値の場合のみ呼び出し可能であることの指定&lt;/td&gt;
&lt;td&gt;4.8.1&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2756: &lt;a href=&#34;lang/cpp11/non_static_data_member_initializers.html&#34;&gt;非静的メンバ変数の初期化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;メンバ変数を、宣言と同時に初期値指定する&lt;/td&gt;
&lt;td&gt;4.7&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2672: &lt;a href=&#34;lang/cpp11/initializer_lists.html&#34;&gt;初期化子リスト&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;波括弧による初期化をユーザー定義する。&lt;code&gt;vector&amp;lt;int&amp;gt; v = {1, 2, 3};&lt;/code&gt;など。&lt;/td&gt;
&lt;td&gt;4.4&lt;/td&gt;
&lt;td&gt;3.1&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2672: &lt;a href=&#34;lang/cpp11/uniform_initialization.html&#34;&gt;一様初期化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コンストラクタ呼び出しを波カッコで行う。 &lt;code&gt;T x { a, b, c };&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;4.4&lt;/td&gt;
&lt;td&gt;3.1&lt;/td&gt;
&lt;td&gt;13.0(partial)&lt;br /&gt; 14.0&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N3050: &lt;code&gt;&lt;a href=&#34;lang/cpp11/noexcept.html&#34;&gt;noexcept&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;関数の例外指定、例外を投げる可能性のある式かbool値を返す演算子&lt;/td&gt;
&lt;td&gt;4.6&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;13.0(partial)&lt;br /&gt;14.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2634: &lt;a href=&#34;lang/cpp11/sfinae_expressions.html&#34;&gt;任意の式によるSFINAE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;特定の式が有効かどうかで、その関数をオーバーロード解決に含めるかどうかを決定する&lt;/td&gt;
&lt;td&gt;4.4&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;2015 Update 1 (partial)&lt;br /&gt; 2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2659: &lt;a href=&#34;lang/cpp11/thread_local_storage.html&#34;&gt;スレッドローカルストレージ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;スレッドごとに異なる静的記憶域に保持される変数&lt;/td&gt;
&lt;td&gt;4.8&lt;/td&gt;
&lt;td&gt;3.3&lt;/td&gt;
&lt;td&gt;11.1 (partial)&lt;/td&gt;
&lt;td&gt;2010&lt;br /&gt; &lt;code&gt;__declspec(thread)&lt;/code&gt;属性での部分サポート&lt;br /&gt; 2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N2660: &lt;a href=&#34;lang/cpp11/static_initialization_thread_safely.html&#34;&gt;ブロックスコープを持つ&lt;code&gt;static&lt;/code&gt;変数初期化のスレッドセーフ化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;関数ローカルで定義した&lt;code&gt;static&lt;/code&gt;変数の初期化を、スレッドセーフにする&lt;/td&gt;
&lt;td&gt;4.3&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.0 (Lnux/macOS)&lt;br /&gt; 14.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;各処理系のC++11実装状況ページ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;全体的な対応状況： &lt;a href=&#34;http://web.archive.org/web/20160327011707/https://wiki.apache.org/stdcxx/C++0xCompilerSupport&#34; target=&#34;_blank&#34;&gt;C++0xCompilerSupport&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GCC： &lt;a href=&#34;https://gcc.gnu.org/projects/cxx-status.html#cxx11&#34; target=&#34;_blank&#34;&gt;C++11 Support in GCC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;libstdc++ : &lt;a href=&#34;https://gcc.gnu.org/onlinedocs/libstdc++/manual/status.html#status.iso.2011&#34; target=&#34;_blank&#34;&gt;C++ 2011&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Clang： &lt;a href=&#34;http://clang.llvm.org/cxx_status.html&#34; target=&#34;_blank&#34;&gt;C++98 and C++11 Support in Clang&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://clang.llvm.org/cxx_dr_status.html&#34; target=&#34;_blank&#34;&gt;C++ Defect Report Support in Clang&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ICC : &lt;a href=&#34;https://software.intel.com/en-us/articles/c0x-features-supported-by-intel-c-compiler&#34; target=&#34;_blank&#34;&gt;C++11 Features Supported by Intel® C++ Compiler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Visual C++ (MSVC):&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/ja-jp/cpp/visual-cpp-language-conformance&#34; target=&#34;_blank&#34;&gt;Visual C++ 言語への準拠&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/vcblog/2018/05/07/announcing-msvc-conforms-to-the-c-standard/&#34; target=&#34;_blank&#34;&gt;Announcing: MSVC Conforms to the C++ Standard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#cpp14&#34; id=&#34;cpp14&#34;&gt;C++14言語機能の実装状況&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;言語機能&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#clang&#34;&gt;Clang&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#icc&#34;&gt;ICC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#visual_cpp&#34;&gt;MSVC&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;N3472: &lt;a href=&#34;lang/cpp14/binary_literals.html&#34;&gt;2進数リテラル&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2進数を表す&lt;code&gt;0b&lt;/code&gt; or &lt;code&gt;0B&lt;/code&gt;プレフィックスを付けた数値リテラルの記述を可能とする&lt;/td&gt;
&lt;td&gt;4.3(GNU)&lt;br /&gt; 4.9&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N3638: &lt;a href=&#34;lang/cpp14/return_type_deduction_for_normal_functions.html&#34;&gt;通常関数の戻り値型推論&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;関数の戻り値型を&lt;code&gt;auto&lt;/code&gt;にすることで、&lt;code&gt;return&lt;/code&gt;文から戻り値の型を推論させる&lt;/td&gt;
&lt;td&gt;4.8(partial)&lt;br /&gt;4.9&lt;/td&gt;
&lt;td&gt;3.3(partial)&lt;br /&gt; 3.4&lt;/td&gt;
&lt;td&gt;15.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N3648: &lt;a href=&#34;lang/cpp14/initialize_capture.html&#34;&gt;ラムダ式の初期化キャプチャ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;キャプチャに代入構文を導入し、一つの変数に複数のキャプチャ方法を指定可能にする&lt;/td&gt;
&lt;td&gt;4.9&lt;/td&gt;
&lt;td&gt;3.4&lt;/td&gt;
&lt;td&gt;15.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N3649: &lt;a href=&#34;lang/cpp14/generic_lambdas.html&#34;&gt;ジェネリックラムダ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ラムダ式のパラメータを&lt;code&gt;auto&lt;/code&gt;にすることで、ジェネリックな関数呼び出し演算子を持つ関数オブジェクトを生成する&lt;/td&gt;
&lt;td&gt;4.9&lt;/td&gt;
&lt;td&gt;3.4&lt;/td&gt;
&lt;td&gt;16.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N3651: &lt;a href=&#34;lang/cpp14/variable_templates.html&#34;&gt;変数テンプレート&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;変数定義時のテンプレート指定を可能にする。&lt;/td&gt;
&lt;td&gt;5.1&lt;/td&gt;
&lt;td&gt;3.4&lt;/td&gt;
&lt;td&gt;16.0&lt;/td&gt;
&lt;td&gt;2015 Update 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N3652: &lt;a href=&#34;lang/cpp14/relaxing_constraints_on_constexpr.html&#34;&gt;&lt;code&gt;constexpr&lt;/code&gt;の制限緩和&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;if&lt;/code&gt;文、&lt;code&gt;switch&lt;/code&gt;文による条件分岐の許可。&lt;br /&gt;&lt;code&gt;for&lt;/code&gt;文、&lt;code&gt;while&lt;/code&gt;文、&lt;code&gt;do-while&lt;/code&gt;文によるループの許可。&lt;br /&gt;&lt;code&gt;void&lt;/code&gt;戻り値型の許可&lt;br /&gt;初期化を伴う変数宣言の許可。&lt;br /&gt;変数書き換えの許可。&lt;/td&gt;
&lt;td&gt;5.1&lt;/td&gt;
&lt;td&gt;3.3(partial) &lt;br /&gt; 3.4&lt;/td&gt;
&lt;td&gt;16.0&lt;/td&gt;
&lt;td&gt;2017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N3653: &lt;a href=&#34;lang/cpp14/brace_elision_in_array_temporary_initialization.html&#34;&gt;宣言時のメンバ初期化を持つ型の集成体初期化を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;一様初期化と初期化子リストを組み合わせた際、二重に波カッコが必要となっていた仕様を緩和し、波カッコを省略できるようにする&lt;/td&gt;
&lt;td&gt;5.1&lt;/td&gt;
&lt;td&gt;3.3&lt;/td&gt;
&lt;td&gt;16.0&lt;/td&gt;
&lt;td&gt;2017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N3760: &lt;a href=&#34;lang/cpp14/deprecated_attr.html&#34;&gt;&lt;code&gt;[[deprecated]]&lt;/code&gt;属性&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;非推奨の機能であることを示す属性。&lt;/td&gt;
&lt;td&gt;4.9&lt;/td&gt;
&lt;td&gt;3.4&lt;/td&gt;
&lt;td&gt;15.0&lt;br /&gt; (Linux/Mac OS)&lt;/td&gt;
&lt;td&gt;2015&lt;br /&gt;それ以前は&lt;code&gt;__declspec(deprecated)&lt;/code&gt;で代替可能&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N3781: &lt;a href=&#34;lang/cpp14/digit_separators.html&#34;&gt;数値リテラルの桁区切り文字&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;シングルクォーテーションで数値リテラルを桁区切りする。&lt;/td&gt;
&lt;td&gt;4.9&lt;/td&gt;
&lt;td&gt;3.4&lt;/td&gt;
&lt;td&gt;16.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N3778: &lt;a href=&#34;lang/cpp14/sized_deallocation.html&#34;&gt;サイズ付きデアロケーション&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;サイズをとる&lt;code&gt;delete&lt;/code&gt;演算子のオーバーロードを許可する。&lt;/td&gt;
&lt;td&gt;5.1&lt;/td&gt;
&lt;td&gt;3.4&lt;/td&gt;
&lt;td&gt;16.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;各処理系のC++14実装状況ページ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GCC: &lt;a href=&#34;https://gcc.gnu.org/projects/cxx-status.html#cxx14&#34; target=&#34;_blank&#34;&gt;C++14 Support in GCC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;libstdc++: &lt;a href=&#34;https://gcc.gnu.org/onlinedocs/libstdc++/manual/status.html#status.iso.2014&#34; target=&#34;_blank&#34;&gt;C++ 2014&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Clang: &lt;a href=&#34;http://clang.llvm.org/cxx_status.html&#34; target=&#34;_blank&#34;&gt;C++98, C++11, and C++14 Support in Clang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;libc++: &lt;a href=&#34;https://libcxx.llvm.org/Status/Cxx14.html&#34; target=&#34;_blank&#34;&gt;libc++ C++14 Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Visual C++ (MSVC):&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/ja-jp/cpp/visual-cpp-language-conformance&#34; target=&#34;_blank&#34;&gt;Visual C++ 言語への準拠&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/vcblog/2018/05/07/announcing-msvc-conforms-to-the-c-standard/&#34; target=&#34;_blank&#34;&gt;Announcing: MSVC Conforms to the C++ Standard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ICC: &lt;a href=&#34;https://software.intel.com/en-us/articles/c14-features-supported-by-intel-c-compiler&#34; target=&#34;_blank&#34;&gt;C++14 Features Supported by Intel C++ Compiler&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://software.intel.com/en-us/forums/topic/549502&#34; target=&#34;_blank&#34;&gt;Intel (R) Parallel Studio XE 2016 Beta program has begun&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#cpp17&#34; id=&#34;cpp17&#34;&gt;C++17言語機能の実装状況&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;言語機能&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#clang&#34;&gt;Clang&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#icc&#34;&gt;ICC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#visual_cpp&#34;&gt;MSVC&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;N3928: &lt;a href=&#34;lang/cpp17/extending_static_assert.html&#34;&gt;メッセージなしの&lt;code&gt;static_assert&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;デフォルトの表明メッセージを使用する&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;3.5&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N4086: &lt;a href=&#34;lang/cpp17/removing_trigraphs.html&#34;&gt;トライグラフを削除&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;5.1&lt;/td&gt;
&lt;td&gt;3.5&lt;/td&gt;
&lt;td&gt;19.1&lt;/td&gt;
&lt;td&gt;2010&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N4051: &lt;a href=&#34;lang/cpp17/allow_typename_in_a_template_template_parameter.html&#34;&gt;テンプレートテンプレートパラメータに&lt;code&gt;typename&lt;/code&gt;を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;class&lt;/code&gt;キーワードしか使用できなかった部分に、&lt;code&gt;typename&lt;/code&gt;を許可&lt;/td&gt;
&lt;td&gt;5.0&lt;/td&gt;
&lt;td&gt;3.5&lt;/td&gt;
&lt;td&gt;17.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N3922: &lt;a href=&#34;lang/cpp17/new_rules_for_auto_deduction_from_braced-init-list.html&#34;&gt;単一要素初期化子リストを&lt;code&gt;auto&lt;/code&gt;で受け取った場合の型を変更&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;initializer_list&amp;lt;T&amp;gt;&lt;/code&gt;だったのを&lt;code&gt;T&lt;/code&gt;に変更&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;3.8&lt;/td&gt;
&lt;td&gt;17.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N4295: &lt;a href=&#34;lang/cpp17/folding_expressions.html&#34;&gt;畳み込み式&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;パラメータパックに対する2項演算の集積処理&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;3.6&lt;/td&gt;
&lt;td&gt;19.0&lt;/td&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N4267: &lt;a href=&#34;lang/cpp17/utf8_character_literals.html&#34;&gt;UTF-8文字リテラル&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;文字列リテラルだけでなく、文字リテラルにもUTF-8指定できるようにする&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;3.6&lt;/td&gt;
&lt;td&gt;17.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N4230: &lt;a href=&#34;lang/cpp17/nested_namespace.html&#34;&gt;入れ子名前空間の定義&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;namespace A::B {}&lt;/code&gt;のように、入れ子の名前空間を簡単に定義できるようにする&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;3.6&lt;/td&gt;
&lt;td&gt;17.0&lt;/td&gt;
&lt;td&gt;2015 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N4266: &lt;a href=&#34;lang/cpp17/attributes_for_namespaces_and_enumerators.html&#34;&gt;名前空間と列挙子に属性の付加を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;名前空間の定義と、列挙型の各要素の定義に、属性を付けられるようにする&lt;/td&gt;
&lt;td&gt;名前空間は4.0&lt;br /&gt;列挙子は6&lt;/td&gt;
&lt;td&gt;3.6&lt;/td&gt;
&lt;td&gt;17.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N4268: &lt;a href=&#34;lang/cpp17/allow_constant_evaluation_for_all_non-type_template_arguments.html&#34;&gt;全ての非型テンプレート引数の定数式評価を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ポインタの定数式評価として、配列からポインタへの変換や、関数から関数ポインタへの変換などを許可&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;3.6&lt;/td&gt;
&lt;td&gt;19.1&lt;/td&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0001R1: &lt;a href=&#34;lang/cpp17/remove_deprecated_use_of_the_register_keyword.html&#34;&gt;非推奨だった&lt;code&gt;register&lt;/code&gt;キーワードを削除&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.8&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0002R1: &lt;a href=&#34;lang/cpp17/remove_deprecated_increment_of_bool.html&#34;&gt;非推奨だった&lt;code&gt;bool&lt;/code&gt;型オブジェクトに対するインクリメントの仕様を削除&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.8&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0012R1: &lt;a href=&#34;lang/cpp17/exception_spec_be_part_of_the_type_system.html&#34;&gt;例外仕様を型システムの一部にする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0061R1: &lt;a href=&#34;lang/cpp17/has_include.html&#34;&gt;プリプロセッサでの条件式&lt;code&gt;__has_include&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;対象のインクルードファイルが存在するかをプリプロセス時に判定する&lt;/td&gt;
&lt;td&gt;5.0&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0136R1: &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0136r1.html&#34; target=&#34;_blank&#34;&gt;継承コンストラクタの新仕様&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;デフォルト引数を引き継ぐようにした&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0188R1: &lt;a href=&#34;lang/cpp17/fallthrough.html&#34;&gt;&lt;code&gt;[[fallthrough]]&lt;/code&gt;属性&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;case&lt;/code&gt;節で&lt;code&gt;break&lt;/code&gt;や&lt;code&gt;return&lt;/code&gt;を書かなかった場合に、それが意図したフォールスルーであることをコンパイラに伝える属性&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0189R1: &lt;a href=&#34;lang/cpp17/nodiscard.html&#34;&gt;&lt;code&gt;[[nodiscard]]&lt;/code&gt;属性&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;関数の戻り値を無視してはならないことをユーザーに伝える属性&lt;/td&gt;
&lt;td&gt;4.8からは&lt;code&gt;[[gnu::warn_unused_result]]&lt;/code&gt;を使用すること&lt;br /&gt; 7からサポート&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0212R1: &lt;a href=&#34;lang/cpp17/maybe_unused.html&#34;&gt;&lt;code&gt;[[maybe_unused]]&lt;/code&gt;属性&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;使用しない可能性がある変数であることをコンパイラに伝える属性&lt;/td&gt;
&lt;td&gt;4.8からは&lt;code&gt;[[gnu::unused]]&lt;/code&gt;を使用すること&lt;br /&gt; 7からサポート&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0017R1: &lt;a href=&#34;lang/cpp17/extension_to_aggregate_initialization.html&#34;&gt;基底クラスのメンバ変数を集成体初期化するための波カッコを省略できるようにする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;基底クラスのメンバを集成体初期化するために、&lt;code&gt;derived d {{42}};&lt;/code&gt;の代わりに&lt;code&gt;derived d {42};&lt;/code&gt;と書けるようにする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;19.1&lt;/td&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0170R1: &lt;a href=&#34;lang/cpp17/constexpr_lambda.html&#34;&gt;ラムダ式を&lt;code&gt;constexpr&lt;/code&gt;として使用できるようにする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ラムダ式の関数オブジェクトが定数式の文脈で使用された場合に、それがコンパイル時に評価されるようにする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;19.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0184R0: &lt;a href=&#34;lang/cpp17/generalizing_the_range-based_for_loop.html&#34;&gt;範囲for文のための&lt;code&gt;begin()&lt;/code&gt;と&lt;code&gt;end()&lt;/code&gt;関数が、異なる型を返すことを許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;begin()&lt;/code&gt;と&lt;code&gt;end()&lt;/code&gt;が異なるイテレータ型を返せるようにすることで、終端イテレータを定義しやすくする&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0018R3: &lt;a href=&#34;lang/cpp17/lambda_capture_of_this_by_value.html&#34;&gt;ラムダ式での&lt;code&gt;*this&lt;/code&gt;のコピーキャプチャ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;キャプチャリストに&lt;code&gt;*this&lt;/code&gt;を指定することで、&lt;code&gt;*this&lt;/code&gt;をコピーキャプチャする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;19.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0138R2: &lt;a href=&#34;lang/cpp17/construction_enum_class_values.html&#34;&gt;&lt;code&gt;enum class&lt;/code&gt;変数の初期値として整数を指定する際の規則を調整&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;キャストを使用することなく整数を初期値として使用し、&lt;code&gt;E e{0};&lt;/code&gt;のような初期化を許可&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;19.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0245R1: &lt;a href=&#34;lang/cpp17/hexadecimal_floating_literals.html&#34;&gt;浮動小数点数の16進数リテラル&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hexfloat&lt;/code&gt;マニピュレータや&lt;code&gt;printf()&lt;/code&gt;の16進数出力に合わせて、浮動小数点数のリテラルも16進数表記できるようにする&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0028R4: &lt;a href=&#34;lang/cpp17/using_attribute_namespaces.html&#34;&gt;属性の名前空間指定に繰り返しをなくす&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[[using CC: opt(1), debug]]&lt;/code&gt;のように属性の名前空間宣言をまとめて行う&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0035R4: &lt;a href=&#34;lang/cpp17/dynamic_memory_allocation_for_over-aligned_data.html&#34;&gt;アライメント指定されたデータの動的メモリ確保&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;operator new&lt;/code&gt;と&lt;code&gt;operator delete&lt;/code&gt;でアライメント値を取得できるようにする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0091R3: &lt;a href=&#34;lang/cpp17/type_deduction_for_class_templates.html&#34;&gt;クラステンプレートのテンプレート引数推論&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コンストラクタの引数からクラスのテンプレート引数を推論できるようにする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;19.1&lt;/td&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0127R2: &lt;a href=&#34;lang/cpp17/declaring_non-type_template_arguments_with_auto.html&#34;&gt;非型テンプレート引数の&lt;code&gt;auto&lt;/code&gt;宣言&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;template &amp;lt;typename T, T x&amp;gt;&lt;/code&gt;という冗長なコードを&lt;code&gt;template &amp;lt;auto x&amp;gt;&lt;/code&gt;のようにして受けられるようにし、&lt;br /&gt; &lt;code&gt;X&amp;lt;3&amp;gt;; X&amp;lt;true&amp;gt;; X&amp;lt;&#39;a&#39;&amp;gt;&lt;/code&gt;のように定数を簡潔に渡せるようにする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;19.1&lt;/td&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0135R1: &lt;a href=&#34;lang/cpp17/guaranteed_copy_elision.html&#34;&gt;値のコピー省略を保証&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;一時オブジェクトをコピーする際に、単純な値を持つクラスであればコピーが省略されることを保証する&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;19.1&lt;/td&gt;
&lt;td&gt;2017 Update 6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0145R3: &lt;a href=&#34;lang/cpp17/expression_evaluation_order.html&#34;&gt;厳密な式の評価順&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;式の項が評価される順序を厳密に規定する。&lt;br /&gt; &lt;code&gt;b = a;&lt;/code&gt;の式が右から順番(a, bの順)に評価される&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;19.1&lt;/td&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0283R2: &lt;a href=&#34;lang/cpp17/non_standard_attributes.html&#34;&gt;不明な属性を無視する&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;実装が知らない名前空間の属性は無視する&lt;/td&gt;
&lt;td&gt;4.8&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0292R2: &lt;a href=&#34;lang/cpp17/if_constexpr.html&#34;&gt;constexpr if文&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;if constexpr(cond)&lt;/code&gt;とすることで、そのif文はコンパイル時に処理される&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;19.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0386R2: &lt;a href=&#34;lang/cpp17/inline_variables.html&#34;&gt;インライン変数&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;インライン指定を関数だけでなく変数にも指定できるようにする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;19.0&lt;/td&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0217R3: &lt;a href=&#34;lang/cpp17/structured_bindings.html&#34;&gt;構造化束縛&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;タプルやユーザー定義型を分解して受け取れるようにする&lt;br /&gt; &lt;code&gt;tuple&amp;lt;int, string&amp;gt; f();&lt;/code&gt; &lt;br /&gt; &lt;code&gt;const auto [a, b] = f(); // aはintの値、bはstringの値&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0305R1: &lt;a href=&#34;lang/cpp17/selection_statements_with_initializer.html&#34;&gt;if文とswitch文の条件式と初期化を分離&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;if (init; condition)&lt;/code&gt;のように初期化と条件式を分けて記述できるようにする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0137R1: &lt;a href=&#34;lang/cpp17/replacement_of_class_objects_containing_reference_members.html&#34;&gt;参照メンバをもつクラスの置き換え&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;参照型メンバや&lt;code&gt;const&lt;/code&gt;メンバ変数を含むクラスについてこれまで結果は未定義とされていた配置&lt;code&gt;new&lt;/code&gt;によるオブジェクトの置き換えを条件付きで可能とする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;6.0&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0003R5: &lt;a href=&#34;lang/cpp17/remove_deprecated_exception_specifications.html&#34;&gt;非推奨だった例外仕様を削除&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;noexcept&lt;/code&gt;が入ったことによって非推奨になった&lt;code&gt;throw&lt;/code&gt;キーワードによる例外仕様を削除&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0195R2: &lt;a href=&#34;lang/cpp17/pack_expansions_in_using.html&#34;&gt;using宣言でのパック展開&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;パラメータパックの型を基底クラスとして指定した場合に、&lt;code&gt;using&lt;/code&gt;宣言に基底クラスのパラメータパックを指定できるようにする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0512R0: &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0512r0.pdf&#34; target=&#34;_blank&#34;&gt;クラステンプレート引数の推論仕様を調整&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;5.0&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0490R0: &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0490r0.html&#34; target=&#34;_blank&#34;&gt;Committee Draftに対するNational Body Commentへの対応&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0522R0: &lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0522r0.html&#34; target=&#34;_blank&#34;&gt;テンプレートテンプレート引数のマッチングにおいて、互換性のあるテンプレートを除外&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4 (partial)&lt;/td&gt;
&lt;td&gt;19.1&lt;/td&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;各処理系のC++17実装状況ページ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GCC: &lt;a href=&#34;https://gcc.gnu.org/projects/cxx-status.html#cxx17&#34; target=&#34;_blank&#34;&gt;C++17 Support in GCC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Clang: &lt;a href=&#34;http://clang.llvm.org/cxx_status.html&#34; target=&#34;_blank&#34;&gt;C++ Support in Clang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;libc++ : &lt;a href=&#34;https://libcxx.llvm.org/Status/Cxx17.html&#34; target=&#34;_blank&#34;&gt;libc++ C++17 Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Visual C++ (MSVC):&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/ja-jp/cpp/visual-cpp-language-conformance&#34; target=&#34;_blank&#34;&gt;Visual C++ 言語への準拠&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/vcblog/2018/05/07/announcing-msvc-conforms-to-the-c-standard/&#34; target=&#34;_blank&#34;&gt;Announcing: MSVC Conforms to the C++ Standard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ICC: &lt;a href=&#34;https://software.intel.com/en-us/articles/c17-features-supported-by-intel-c-compiler&#34; target=&#34;_blank&#34;&gt;C++17 Features Supported by Intel C++ Compiler&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#cpp20&#34; id=&#34;cpp20&#34;&gt;C++20言語機能の実装状況&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;言語機能&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#clang&#34;&gt;Clang&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#icc&#34;&gt;ICC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#visual_cpp&#34;&gt;MSVC&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;P0683R1: &lt;a href=&#34;lang/cpp20/default_member_initializers_for_bit_fields.html&#34;&gt;ビットフィールドのメンバ変数初期化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ビットフィールドメンバ変数のデフォルト値を設定する構文を追加する&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;6.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0409R2: &lt;a href=&#34;lang/cpp20/allow_lambda_capture_equal_this.html&#34;&gt;ラムダ式のキャプチャとして&lt;code&gt;[=, this]&lt;/code&gt;を許可する&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;デフォルトコピーキャプチャと&lt;code&gt;this&lt;/code&gt;ポインタのコピーキャプチャを両方指定できるようにする&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;6.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0806R2: &lt;a href=&#34;lang/cpp20/deprecate_implicit_capture_of_this_via_defcopy.html&#34;&gt;&lt;code&gt;[=]&lt;/code&gt;による&lt;code&gt;this&lt;/code&gt;の暗黙のキャプチャを非推奨化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コピーのデフォルトキャプチャでは、&lt;code&gt;this&lt;/code&gt;ポインタをキャプチャされなくする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0428R2: &lt;a href=&#34;lang/cpp20/familiar_template_syntax_for_generic_lambdas.html&#34;&gt;ジェネリックラムダのテンプレート構文&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ジェネリックラムダでテンプレートパラメータを定義できるようにする&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0704R1: &lt;a href=&#34;lang/cpp20/fixing_const_qualified_pointers_to_members.html&#34;&gt;&lt;code&gt;const&lt;/code&gt;修飾されたメンバポインタの制限を修正&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;.*&lt;/code&gt;演算子での左辺値の&lt;code&gt;const&lt;/code&gt;メンバ関数呼び出しを許可する&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;6.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0306R4: &lt;a href=&#34;lang/cpp20/va_opt.html&#34;&gt;可変引数が空でない場合のトークン置換&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;プリプロセッサの置換で可変引数が空の場合に余計なカンマが付いてしまう問題に対処&lt;/td&gt;
&lt;td&gt;8 (partial, &lt;code&gt;#__VA_OPT__&lt;/code&gt;による文字列化が未サポート)&lt;/td&gt;
&lt;td&gt;6.0&lt;br /&gt; 9.0 (&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1042r1.html&#34; target=&#34;_blank&#34;&gt;p1042&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0329R4: &lt;a href=&#34;lang/cpp20/designated_initialization.html&#34;&gt;指示付き初期化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;波カッコによる集成体初期化でメンバ名を指定して初期化できるようにする&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;6.0 (partial)&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0734R0: &lt;a href=&#34;lang/cpp20/concepts.html&#34;&gt;コンセプト&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;テンプレートパラメータに対する制約を行う&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;10.0 (partial)&lt;/td&gt;
&lt;td&gt;2021.6&lt;/td&gt;
&lt;td&gt;2019 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0614R1: &lt;a href=&#34;lang/cpp20/range-based_for_statements_with_initializer.html&#34;&gt;初期化式をともなう範囲for文&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;範囲for文スコープで使用する変数の初期化のための構文を追加&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;2021.7&lt;/td&gt;
&lt;td&gt;2019 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0588R1: &lt;a href=&#34;lang/cpp20/simplifying_implicit_lambda_capture.html&#34;&gt;暗黙のラムダキャプチャを簡略化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ラムダ式のキャプチャに関する仕様整理&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0846R0: &lt;a href=&#34;lang/cpp20/adl_and_function_templates_that_are_not_visible.html&#34;&gt;関数テンプレートに明示的に型指定した場合にADLで見つからない問題を修正&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;名前空間内の関数テンプレートをテンプレート引数指定かつ非修飾・ADLで正しく呼び出せるよう修正&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0641R2: &lt;a href=&#34;lang/cpp20/resolving_const_mismatch_with_defaulted_copy_constructor.html&#34;&gt;デフォルトのコピーコンストラクタと非&lt;code&gt;const&lt;/code&gt;なコンストラクタが衝突する問題を修正&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;非&lt;code&gt;const&lt;/code&gt;なオブジェクトをとるコンストラクタを定義すると、そのクラスをラップしたクラスのコピーコンストラクタが&lt;a class=&#34;cpprefjp-defined-word&#34;&gt;不適格&lt;/a&gt;になってしまう問題を修正&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0859R0: &lt;a href=&#34;lang/cpp20/less_eager_instantiation_of_constexpr_functions.html&#34;&gt;評価されない文脈での定数式評価によって特殊メンバ関数がインスタンス化されることを規定&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;sizeof&lt;/code&gt;や&lt;code&gt;decltype&lt;/code&gt;などの評価されない文脈において定数式評価を行った場合に、ムーブコンストラクタのような特殊メンバ関数が定義されることを規定&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Partial in 2019 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0515R3: &lt;a href=&#34;lang/cpp20/consistent_comparison.html&#34;&gt;一貫比較&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;三方比較演算子によって比較演算子の自動生成を行うようにする&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;8.0 (partial)&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0692R1: &lt;a href=&#34;lang/cpp20/access_checking_on_specializations.html&#34;&gt;特殊化のアクセスチェック&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;partial&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0624R2: &lt;a href=&#34;lang/cpp20/default_constructible_and_assignable_stateless_lambdas.html&#34;&gt;状態を持たないラムダ式を、デフォルト構築可能、代入可能とする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;キャプチャしていないラムダ式をデフォルト構築・代入可能にする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0767R1: &lt;a href=&#34;lang/cpp20/deprecate_pod.html&#34;&gt;PODを非推奨化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;PODという用語を非推奨化する&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0315R4: &lt;a href=&#34;lang/cpp20/wording_for_lambdas_in_unevaluated_contexts.html&#34;&gt;評価されない文脈でのラムダ式&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;評価されない文脈でもラムダ式を書くことができるようにする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;Partial&lt;/td&gt;
&lt;td&gt;2024.0&lt;/td&gt;
&lt;td&gt;2019 Update 8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0840R2: &lt;a href=&#34;lang/cpp20/language_support_for_empty_objects.html&#34;&gt;空オブジェクトを言語サポート&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[[no_unique_address]]&lt;/code&gt;属性を導入し、空の型のオブジェクトをほかのオブジェクトと共有する最適化を許可する&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 9 &lt;sup&gt;&lt;a href=&#34;#note-t1-1&#34; id=&#34;note_ref-t1-1&#34;&gt;†1&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0962R1: &lt;a href=&#34;lang/cpp20/relaxing_the_range_for_loop_customization_point_finding_rules.html&#34;&gt;範囲for文がカスタマイゼーションポイントを見つけるルールを緩和&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;begin()&lt;/code&gt;/&lt;code&gt;end()&lt;/code&gt;メンバ関数のどちらかが見つからなかった場合に非メンバ関数の&lt;code&gt;begin()&lt;/code&gt;/&lt;code&gt;end()&lt;/code&gt;を探しにいく&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0969R0: &lt;a href=&#34;lang/cpp20/allow_structured_bindings_to_accessible_members.html&#34;&gt;friend指定された関数内から構造化束縛を使用して非公開メンバ変数にアクセスすることを許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;構造化束縛の仕様として公開メンバ変数のみを取り出せるようになっていたが、friend指定された関数からは非公開メンバ変数にもアクセスできるようにする&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0961R1: &lt;a href=&#34;lang/cpp20/relaxing_the_structured_bindings_customization_point_finding_rules.html&#34;&gt;構造化束縛がカスタマイゼーションポイントを見つけるルールを緩和&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;非テンプレートの&lt;code&gt;get()&lt;/code&gt;メンバ関数が見つかった場合は、非メンバ関数の&lt;code&gt;get()&lt;/code&gt;を探しにいく&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0634R3: &lt;a href=&#34;lang/cpp20/down_with_typename.html&#34;&gt;型の文脈で&lt;code&gt;typename&lt;/code&gt;の省略を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;型しか現れない文脈では、依存名を解決するための&lt;code&gt;typename&lt;/code&gt;キーワードを省略できるようにする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;2023.1&lt;/td&gt;
&lt;td&gt;2019 Update 9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0780R2: &lt;a href=&#34;lang/cpp20/allow_pack_expansion_in_lambda_init_capture.html&#34;&gt;ラムダ式の初期化キャプチャでのパック展開を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[...args = std::move(args)]&lt;/code&gt;のようなキャプチャを許可&lt;/td&gt;
&lt;td&gt;9&lt;br /&gt;10&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;2021.7&lt;/td&gt;
&lt;td&gt;2019 Update 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0479R5: &lt;a href=&#34;lang/cpp20/likely_and_unlikely_attributes.html&#34;&gt;確率が高い分岐と低い分岐を伝える属性 &lt;code&gt;[[likely]]&lt;/code&gt;, &lt;code&gt;[[unlikely]]&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;条件分岐の最適化ヒントを与える属性&lt;/td&gt;
&lt;td&gt;9 (partial, &lt;code&gt;switch&lt;/code&gt; 文のみ可能)&lt;br /&gt; 10&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;2021.7&lt;/td&gt;
&lt;td&gt;2019 Update 6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0929R2: &lt;a href=&#34;lang/cpp20/checking_for_abstract_class_types.html&#34;&gt;抽象型のチェック&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;関数の宣言段階では、パラメータおよび戻り値型が抽象型かどうかをチェックしないようにする&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0732R2: &lt;a href=&#34;lang/cpp20/class_types_in_non-type_template_parameters.html&#34;&gt;非型テンプレートパラメータとしてクラス型を許可する&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;定数式として使用できる型を広く非型テンプレートパラメータとして使用できるようにする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;partial&lt;/td&gt;
&lt;td&gt;2022.2 Partial&lt;/td&gt;
&lt;td&gt;2019 Update 6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0722R3: &lt;a href=&#34;lang/cpp20/efficient_sized_delete_for_variable_sized_classes.html&#34;&gt;可変長データを扱うクラスの効率的な&lt;code&gt;delete&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;クラスの&lt;code&gt;delete&lt;/code&gt;演算子が呼び出される前にデストラクタが呼ばれないようにするオプションを追加&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;6.0&lt;/td&gt;
&lt;td&gt;2023.0&lt;/td&gt;
&lt;td&gt;2019 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1064R0: &lt;a href=&#34;lang/cpp20/allow_virtual_function_calls_in_constant_expressions.html&#34;&gt;定数式からの仮想関数の呼び出しを許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;仮想関数に&lt;code&gt;constexpr&lt;/code&gt;を付けられない制限を解除&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1327R1: &lt;a href=&#34;lang/cpp20/allowing_dynamic_cast_polymorphic_typeid_in_constant_expressions.html&#34;&gt;定数式での&lt;code&gt;dynamic_cast&lt;/code&gt;、多態的な&lt;code&gt;typeid&lt;/code&gt;を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;定数式での動的多態を許可&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1002R1: &lt;a href=&#34;lang/cpp20/try-catch_blocks_in_constexpr_functions.html&#34;&gt;constexpr関数内でのtry-catchブロックを許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;constexpr関数内でtry-catchブロックを書けるようにする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;2023.1&lt;/td&gt;
&lt;td&gt;2019 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1073R3: &lt;a href=&#34;lang/cpp20/immediate_functions.html&#34;&gt;即時関数&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;consteval&lt;/code&gt;キーワードを追加し、常に定数式評価されるよう指定できるようにする&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1330R0: &lt;a href=&#34;lang/cpp20/changing_the_active_member_of_a_union_inside_constexpr.html&#34;&gt;定数式内での共用体のアクティブメンバの変更を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;共用体メンバの書き換えを定数式内で行えるようにする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1008R1: &lt;a href=&#34;lang/cpp20/prohibit_aggregates_with_user-declared_constructors.html&#34;&gt;ユーザー宣言したコンストラクタを持つクラスの集成体初期化を禁止&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コンストラクタが&lt;code&gt;delete&lt;/code&gt;／&lt;code&gt;default&lt;/code&gt;宣言されているクラスを、集成体初期化によってコンストラクタ呼び出しを回避して構築できてしまっていた技法を禁止&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0892R2: &lt;a href=&#34;lang/cpp20/explicit_bool.html&#34;&gt;関数を条件付きで&lt;code&gt;explicit&lt;/code&gt;にする構文を追加&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;explicit(true)&lt;/code&gt;のように&lt;code&gt;explicit&lt;/code&gt;に真理値パラメータを指定できるようにする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1236R1: &lt;a href=&#34;lang/cpp20/signed_integers_are_twos_complement.html&#34;&gt;符号付き整数型が2の補数表現であることを規定&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;符号付き整数型のビット表現を2の補数に規定する&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;2023.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0482R6: &lt;a href=&#34;lang/cpp20/char8_t.html&#34;&gt;UTF-8エンコーディングされた文字の型として&lt;code&gt;char8_t&lt;/code&gt;を追加&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;UTF-8エンコードされた文字かどうかでオーバーロード・特殊化をできるようにする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;7 (&lt;code&gt;-fchar8_t&lt;/code&gt;オプションが必要)&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1094R2: &lt;a href=&#34;lang/cpp20/nested_inline_mamespaces.html&#34;&gt;入れ子名前空間定義でのインライン名前空間&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;namespace ns1::inline ns2::ns3 {}&lt;/code&gt;のように、入れ子名前空間を定義する式にインライン名前空間の指定を含められるようにする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1091R3: &lt;a href=&#34;lang/cpp20/extending_structured_bindings_to_be_more_like_variable_declarations.html&#34;&gt;構造化束縛を拡張して通常の変数宣言のように使用できるようにする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;記憶域指定子として&lt;code&gt;static&lt;/code&gt;と&lt;code&gt;thread_local&lt;/code&gt;の指定を許可&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;8.0 (partial)&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1381R1: &lt;a href=&#34;lang/cpp20/reference_capture_of_structured_bindings.html&#34;&gt;構造化束縛した変数の参照キャプチャを許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;構造化束縛をした変数は特殊な扱いのためラムダ式で参照キャプチャできない規定となっていたがこれを許可する&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;8.0 (partial)&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0960R3: &lt;a href=&#34;lang/cpp20/allow_initializing_aggregates_from_a_parenthesized_list_of_values.html&#34;&gt;丸カッコの値リストからの集成体初期化を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;T x{1, 2, 3};&lt;/code&gt;と同様に&lt;code&gt;T x(1, 2, 3);&lt;/code&gt;でも集成体初期化できるようにする&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1009R2: &lt;a href=&#34;lang/cpp20/array_size_deduction_in_new-expressions.html&#34;&gt;&lt;code&gt;new&lt;/code&gt;式での配列要素数の推論&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;double* p = new double[]{1,2,3};&lt;/code&gt;を許可&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1041R4: &lt;a href=&#34;lang/cpp20/make_char16t_char32t_string_literals_be_utf16_32.html&#34;&gt;&lt;code&gt;char16_t&lt;/code&gt;と&lt;code&gt;char32_t&lt;/code&gt;の文字・文字列リテラルを、文字コードUTF-16/32に規定&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;__STDC_UTF_16__&lt;/code&gt;、&lt;code&gt;__STDC_UTF_32__&lt;/code&gt;の定義に関係なく、&lt;code&gt;char16_t&lt;/code&gt;、&lt;code&gt;char32_t&lt;/code&gt;のリテラルをUTF-16/32文字コードに規定する&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;2023.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1103R3: &lt;a href=&#34;lang/cpp20/modules.html&#34;&gt;モジュール&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ヘッダファイル・ソースファイル、インクルードに変わる仕組みとしてモジュールを導入する&lt;/td&gt;
&lt;td&gt;11 (&lt;code&gt;-fmodules-ts&lt;/code&gt;が必要)&lt;/td&gt;
&lt;td&gt;15&lt;br /&gt;8.0 partial (&lt;code&gt;-fmodules&lt;/code&gt;, &lt;code&gt;-fmodules-ts&lt;/code&gt;が必要)&lt;/td&gt;
&lt;td&gt;2023.1 (Partial)&lt;/td&gt;
&lt;td&gt;2019 Update 8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0912R5: &lt;a href=&#34;lang/cpp20/coroutines.html&#34;&gt;コルーチン&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;関数実行を中断・再開する仕組みとしてコルーチンを導入する&lt;/td&gt;
&lt;td&gt;10 (&lt;code&gt;-fcoroutines&lt;/code&gt;が必要)&lt;/td&gt;
&lt;td&gt;8.0 (partial)&lt;/td&gt;
&lt;td&gt;2021.4&lt;/td&gt;
&lt;td&gt;2019 Update 8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1161R3: &lt;a href=&#34;lang/cpp20/deprecate_uses_of_the_comma_operator_in_subscripting_expressions.html&#34;&gt;添字演算子内でのカンマ演算子の使用を非推奨化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ar[i, j]&lt;/code&gt;を非推奨化。&lt;code&gt;ar[(i, j)]&lt;/code&gt;はOK&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;2021.6&lt;/td&gt;
&lt;td&gt;2019 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1331R2: &lt;a href=&#34;lang/cpp20/permitting_trivial_default_initialization_in_constexpr_contexts.html&#34;&gt;constexpr関数内でのトリビアルなデフォルト初期化を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;constexpr関数内でのデフォルト初期化を許可し、未初期化値を読むことのみ禁止する&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;10.0&lt;/td&gt;
&lt;td&gt;2022.3&lt;/td&gt;
&lt;td&gt;2019 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0848R3: &lt;a href=&#34;lang/cpp20/conditionally_trivial_special_member_functions.md.nolink&#34;&gt;条件付きで特殊メンバ関数をトリビアルに定義するように&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;制約によってトリビアルな特殊メンバ関数と非トリビアルな特殊メンバ関数をオーバーロードできるようにする&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;16 Partial (consepts 未実装部あり)&lt;/td&gt;
&lt;td&gt;2022.3&lt;/td&gt;
&lt;td&gt;2019 Update 8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1301R4: &lt;a href=&#34;lang/cpp20/nodiscard_should_have_a_reason.html&#34;&gt;&lt;code&gt;[[nodiscard]]&lt;/code&gt;属性に理由となる文字列を付加できるようにする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;関数の戻り値を無視してはならない理由を関数宣言に持たせ、警告メッセージに役立てる&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;2021.6&lt;/td&gt;
&lt;td&gt;2019 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1099R5: &lt;a href=&#34;lang/cpp20/using_enum.html&#34;&gt;スコープ付き列挙型のusing宣言&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;using enum EnumType;&lt;/code&gt;もしくは&lt;code&gt;using EnumType::enumerator&lt;/code&gt;とすることで、列挙値のスコープ指定を省略できるようにする&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;2023.0&lt;/td&gt;
&lt;td&gt;2019 Update 4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1816R0: &lt;a href=&#34;lang/cpp20/class_template_argument_deduction_for_aggregates.html&#34;&gt;集成体クラステンプレートのテンプレート引数推論&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;クラステンプレートのテンプレート引数推論はコンストラクタ引数から推論されるが、集成体初期化からも推論できるようにする&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2024.0&lt;/td&gt;
&lt;td&gt;2019 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1668R1: &lt;a href=&#34;lang/cpp20/enabling_constexpr_intrinsics_by_permitting_unevaluated_inline-assembly_in_constexpr_functions.html&#34;&gt;constexpr関数内で未評価のインラインアセンブリを許可することによる組み込み関数のconstexpr有効化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コンパイル時に評価されない場合にconstexpr関数にasm定義を含めることを許可&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;10.0&lt;/td&gt;
&lt;td&gt;2022.3&lt;/td&gt;
&lt;td&gt;2019 Update 9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0388R4: &lt;a href=&#34;lang/cpp20/permit_conversions_to_arrays_of_unknown_bound.html&#34;&gt;要素数不明の配列への変換を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;要素数が判明している配列から、要素数が不明の配列への変換を許可&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;2021.6&lt;/td&gt;
&lt;td&gt;2019 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1143R2: &lt;a href=&#34;lang/cpp20/constinit.html&#34;&gt;コンパイル時初期化を強制する&lt;code&gt;constinit&lt;/code&gt;キーワードを追加&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;初期化のみコンパイル時におわらせたい場合に使用する&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;10.0&lt;/td&gt;
&lt;td&gt;2022.3&lt;/td&gt;
&lt;td&gt;2019 Update 10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1152R4: &lt;a href=&#34;lang/cpp20/deprecating_volatile.html&#34;&gt;ほとんどの&lt;code&gt;volatile&lt;/code&gt;を非推奨化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;volatile&lt;/code&gt;の有用な機能のみを残し、効果が疑わしい、または壊れている機能を非推奨化する&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;10.0&lt;/td&gt;
&lt;td&gt;2021.6&lt;/td&gt;
&lt;td&gt;2019 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1814R0: &lt;a href=&#34;lang/cpp20/class_template_argument_deduction_for_alias_templates.html&#34;&gt;エイリアステンプレート経由でのクラステンプレートのテンプレート引数推論&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;エイリアステンプレートからクラステンプレートのテンプレート引数を推論できるようにする&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0784R7: &lt;a href=&#34;lang/cpp20/more_constexpr_containers.html&#34;&gt;可変サイズをもつコンテナの&lt;code&gt;constexpr&lt;/code&gt;化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;constexpr&lt;/code&gt;記憶域をもつメモリアロケータの存在を考慮することで、可変サイズをもつコンテナをコンパイル時に使用できるようにする&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;10.0&lt;/td&gt;
&lt;td&gt;2021.6&lt;/td&gt;
&lt;td&gt;2019 Update 9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1957R2: &lt;a href=&#34;lang/cpp20/converting_from_pointer_to_bool_should_be_considered_narrowing.html&#34;&gt;ポインタから&lt;code&gt;bool&lt;/code&gt;への変換を縮小変換とする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ポインタから&lt;code&gt;bool&lt;/code&gt;値への変換を縮小変換と規定することで、意図しない変換を防止する&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;11.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#note_ref-t1-1&#34; id=&#34;note-t1-1&#34;&gt;&lt;strong&gt;^&lt;/strong&gt;&lt;/a&gt; 不明な属性として無視されなくなっただけで期待する効果は得られない。完全に実装されるまでは、代わりに&lt;code&gt;&lt;a href=&#34;https://devblogs.microsoft.com/cppblog/msvc-cpp20-and-the-std-cpp20-switch/#msvc-extensions-and-abi&#34; target=&#34;_blank&#34;&gt;[[msvc::no_unique_address]]&lt;/a&gt;&lt;/code&gt;を使用できる。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;各処理系のC++20実装状況ページ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GCC: &lt;a href=&#34;https://gcc.gnu.org/projects/cxx-status.html#cxx20&#34; target=&#34;_blank&#34;&gt;C++20 Support in GCC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Clang: &lt;a href=&#34;http://clang.llvm.org/cxx_status.html&#34; target=&#34;_blank&#34;&gt;C++ Support in Clang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;libstdc++: &lt;a href=&#34;https://gcc.gnu.org/onlinedocs/libstdc++/manual/status.html#status.iso.2020&#34; target=&#34;_blank&#34;&gt;C++ 2020 Implementation Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;libc++: &lt;a href=&#34;https://libcxx.llvm.org/Status/Cxx20.html&#34; target=&#34;_blank&#34;&gt;libc++ C++20 Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Visual C++ (MSVC):&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/ja-jp/cpp/visual-cpp-language-conformance&#34; target=&#34;_blank&#34;&gt;Visual C++ 言語への準拠&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/STL/wiki/Changelog&#34; target=&#34;_blank&#34;&gt;次リリース情報(VS2019,2022) - Change log&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ICC: &lt;a href=&#34;https://www.intel.com/content/www/us/en/developer/articles/technical/c20-features-supported-by-intel-cpp-compiler.html&#34; target=&#34;_blank&#34;&gt;C++20 Features Supported by Intel® C++ Compiler&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#cpp23&#34; id=&#34;cpp23&#34;&gt;C++23言語機能の実装状況&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;言語機能&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#clang&#34;&gt;Clang&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#icc&#34;&gt;ICX&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#visual_cpp&#34;&gt;MSVC&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;P0330R8: &lt;a href=&#34;lang/cpp23/literal_suffix_for_signed_size_t.html&#34;&gt;(符号付き)&lt;code&gt;size_t&lt;/code&gt;リテラルのためのサフィックス&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;42z&lt;/code&gt;/&lt;code&gt;42Z&lt;/code&gt;とすることで&lt;code&gt;size_t&lt;/code&gt;に対応する符号付き整数型のリテラルとする&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;2022.2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2290R3: &lt;a href=&#34;lang/cpp23/delimited_escape_sequences.html&#34;&gt;エスケープシーケンスの区切り&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;エスケープシーケンスの範囲を明確にする構文を追加する&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;2023.2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2266R3: &lt;a href=&#34;lang/cpp23/simpler_implicit_move.html&#34;&gt;暗黙的なムーブを簡略化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;参照を返す関数の&lt;code&gt;return&lt;/code&gt;文で暗黙的にムーブされない問題を修正&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;2022.2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1787R6: &lt;a href=&#34;lang/cpp23/declarations_and_where_to_find_them.md.nolink&#34;&gt;スコープと名前ルックアップの仕様整理&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;複雑で不完全になっているスコープと名前ルックアップの仕様を整理し、一部の問題を解決する&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2615R1: &lt;a href=&#34;lang/cpp23/meaningful_exports.html&#34;&gt;無意味なexport宣言を禁止する&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;いくつかの不必要な宣言に対するモジュールexportを禁止する&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2360R0: &lt;a href=&#34;lang/cpp23/extend_init_statement_to_allow_alias_declaration.html&#34;&gt;初期化文での型の別名宣言を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;for (using T = int; T e : v) {}&lt;/code&gt;を許可&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;2022.2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2718R0: &lt;a href=&#34;lang/cpp23/lifetime_extension_in_range_based_for_loop.html&#34;&gt;範囲for文が範囲初期化子内で生じた一時オブジェクトを延命することを規定&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;範囲初期化子内で生じた一時オブジェクトは範囲for文の終わりまで延命される&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2324R2: &lt;a href=&#34;lang/cpp23/labels_at_the_end_of_compound_statements.html&#34;&gt;複合文の末尾へのラベルを許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;C互換のため、複合文の末尾でのgoto文のラベルを許可する&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;2023.2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P0847R7: &lt;a href=&#34;lang/cpp23/deducing_this.md.nolink&#34;&gt;自身のオブジェクトを明示的にパラメータとして指定する&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;メンバ関数が&lt;code&gt;*this&lt;/code&gt;の型・オブジェクトをパラメータとしてとり、&lt;code&gt;*this&lt;/code&gt;オブジェクトがconst/非const、左辺値/右辺値であるかをメンバ関数内で識別できるようにする&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;2022 Update 2 (partial)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1847R4: &lt;a href=&#34;lang/cpp23/make_declaration_order_layout_mandated.html&#34;&gt;アクセス制御の異なるメンバ変数のレイアウトを宣言順に規定&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;アクセス制御の異なるメンバ変数のレイアウトは並び替えを許可されていたが宣言順に規定する&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;2022&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2128R6: &lt;a href=&#34;lang/cpp23/multidimensional_subscript_operator.html&#34;&gt;添字演算子の多次元サポート&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;operator[](int x, int y, int z)&lt;/code&gt;のように添字演算子のオーバーロードで複数のパラメータをとることを許可&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;2022.2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1169R4: &lt;a href=&#34;lang/cpp23/static_operator.html&#34;&gt;&lt;code&gt;this&lt;/code&gt;ポインタをもつ必要のない演算子を&lt;code&gt;static&lt;/code&gt;として宣言できるようにする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;状態をもたないいくつかの演算子を&lt;code&gt;static&lt;/code&gt;として宣言できるようにする&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;2023.2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2201R1: &lt;a href=&#34;lang/cpp23/mixed_string_literal_concatenation.html&#34;&gt;異なる文字エンコーディングをもつ文字列リテラルの連結を不適格とする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;auto a = u8&#34;&#34; L&#34;&#34;;&lt;/code&gt;のような異なる文字エンコーディング同士での文字列リテラルを連結を禁止する&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;2022.2&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2029R4: &lt;a href=&#34;lang/cpp23/numeric_and_universal_character_escapes_in_character_and_string_literals.md.nolink&#34;&gt;文字・文字列リテラル中の数値・ユニバーサルキャラクタのエスケープに関する問題解決&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2362R3: &lt;a href=&#34;lang/cpp23/remove_non_encodable_wide_character_literals_and_multicharacter_wide_character_literals.html&#34;&gt;1ワイド文字に収まらないワイド文字リテラルを禁止する&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;エンコード結果として&lt;code&gt;wchar_t&lt;/code&gt;の大きさに収まらないワイド文字リテラルを禁止する&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;2023.2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2071R2: &lt;a href=&#34;lang/cpp23/named_universal_character_escapes.html&#34;&gt;名前付きユニバーサルキャラクタ名&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;16進数のユニバーサルキャラクタだけでなく、その文字の名前を入力できるようにする&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;2023.2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2096R2: &lt;a href=&#34;lang/cpp23/generalized_wording_for_partial_specializations.html&#34;&gt;変数テンプレートの部分特殊化を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;変数テンプレートの部分特殊化を許可するために部分特殊化の仕様を汎用化&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2582R1: &lt;a href=&#34;lang/cpp23/class_template_argument_deduction_from_inherited.html&#34;&gt;継承コンストラクタからのクラステンプレート引数の推論&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;継承コンストラクタからもクラステンプレート引数を推論できるようにする&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1938R3: &lt;code&gt;&lt;a href=&#34;lang/cpp23/if_consteval.html&#34;&gt;if consteval&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;コンパイル時の文脈かどうかで分岐させる&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1401R5: &lt;a href=&#34;lang/cpp23/narrowing_contextual_conversions_to_bool.html&#34;&gt;定数式の文脈での&lt;code&gt;bool&lt;/code&gt;への縮小変換を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;if constexpr(flags &amp;amp; Flags::Exec)&lt;/code&gt;や&lt;code&gt;static_assert(N);&lt;/code&gt;を許可&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;2022.2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2242R3: &lt;a href=&#34;lang/cpp23/non_literal_variables_in_constexpr_functions.html&#34;&gt;定数式内での非リテラル変数、静的変数・スレッドローカル変数およびgotoとラベルの存在を許可する&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コンパイル時に評価されない限り、定数式内に静的変数・スレッドローカル変数およびgoto文とラベルを含むことを許可する&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;2022.2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2246R1: &lt;a href=&#34;lang/cpp23/character_encoding_of_diagnostic_text.html&#34;&gt;静的な診断メッセージの文字エンコーディング&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;static_assert&lt;/code&gt;や&lt;code&gt;[[deprecated]]&lt;/code&gt;などの診断メッセージの文字集合に関する要件をなくす&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;2022&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2448R2: &lt;a href=&#34;lang/cpp23/relaxing_some_constexpr_restrictions.html&#34;&gt;&lt;code&gt;constexpr&lt;/code&gt;関数が定数実行できない場合でも適格とする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;17 (partial)&lt;/td&gt;
&lt;td&gt;2024.0 (partial)&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2647R1: &lt;a href=&#34;lang/cpp23/permitting_static_constexpr_variables_in_constexpr_functions.html&#34;&gt;&lt;code&gt;constexpr&lt;/code&gt;関数内での&lt;code&gt;static constexpr&lt;/code&gt;変数を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;constexpr&lt;/code&gt;関数のローカルで定数を定義できるようにする&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;2023.2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2564R3: &lt;a href=&#34;lang/cpp23/consteval_needs_to_propagate_up.html&#34;&gt;&lt;code&gt;constexpr&lt;/code&gt;関数内で&lt;code&gt;consteval&lt;/code&gt;関数を呼び出せない問題を緩和&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;consteval&lt;/code&gt;呼び出しを含む&lt;code&gt;constexpr&lt;/code&gt;関数を条件付きで&lt;code&gt;consteval&lt;/code&gt;関数とみなすようにする&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;2024.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1102R2: &lt;a href=&#34;lang/cpp23/down_with_lambda_parens.html&#34;&gt;ラムダ式で&lt;code&gt;()&lt;/code&gt;を省略できる条件を緩和&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;修飾や戻り値型をともなってもパラメータリストが空であれば&lt;code&gt;()&lt;/code&gt;を省略できる&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;2022.2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2173R1: &lt;a href=&#34;lang/cpp23/attributes_on_lambda_expressions.html&#34;&gt;ラムダ式に対する属性&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ラムダ式のいくつかの箇所に属性を記述できるようにする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;2022.2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1774R8: &lt;a href=&#34;lang/cpp23/portable_assumptions.html&#34;&gt;コード内容の仮定をコンパイラに伝えるassume属性&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;最適化のために、コードの仮定をコンパイラに伝える属性を標準化する&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2316R2: &lt;a href=&#34;lang/cpp23/consistent_character_literal_encoding.html&#34;&gt;文字リテラルエンコーディングを一貫させる&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;プリプロセッサの条件式での文字リテラルの扱いをC++式と同様にする&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;2022.2&lt;/td&gt;
&lt;td&gt;2022&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2334R1: &lt;a href=&#34;lang/cpp23/add_support_for_preprocessing_directives_elifdef_and_elifndef.html&#34;&gt;&lt;code&gt;elif&lt;/code&gt;/&lt;code&gt;elifdef&lt;/code&gt;/&lt;code&gt;elifndef&lt;/code&gt;のサポートを追加&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#if&lt;/code&gt;/&lt;code&gt;#ifdef&lt;/code&gt;/&lt;code&gt;#ifndef&lt;/code&gt;に対応する複数条件命令のサポートを追加する&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;2022.2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2437R1: &lt;a href=&#34;lang/cpp23/warning.html&#34;&gt;&lt;code&gt;#warning&lt;/code&gt;のサポートを追加&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;多くのC++コンパイラが実装していたプリプロセス時の警告&lt;code&gt;#warning message&lt;/code&gt;を正式サポート&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;2023.2&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2295R6: &lt;a href=&#34;lang/cpp23/support_for_utf8_as_a_portable_source_file_encoding.html&#34;&gt;汎用的なソースコードのエンコーディングとしてUTF-8をサポート&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;すべてのコンパイラはUTF-8文字コードのソースコードをサポートしなければならない&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;2023.2&lt;/td&gt;
&lt;td&gt;2019 Update 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2223R2: &lt;a href=&#34;lang/cpp23/trimming_whitespaces_before_line_splicing.html&#34;&gt;行末スペースを無視するよう規定&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;行末が「&lt;code&gt;\ &lt;/code&gt;」でおわっていた場合にMSVCは行の継続をしない実装になっていたため動作を共通化するため仕様を規定&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;2022.2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;各処理系のC++23実装状況ページ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GCC: &lt;a href=&#34;https://gcc.gnu.org/projects/cxx-status.html#cxx23&#34; target=&#34;_blank&#34;&gt;C++23 Support in GCC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Clang: &lt;a href=&#34;https://clang.llvm.org/cxx_status.html#cxx23&#34; target=&#34;_blank&#34;&gt;C++2b implementation status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Visual C++ (MSVC):&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/ja-jp/cpp/visual-cpp-language-conformance&#34; target=&#34;_blank&#34;&gt;Visual C++ 言語への準拠&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/STL/wiki/Changelog&#34; target=&#34;_blank&#34;&gt;次リリース情報(VS2019,2022) - Change log&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ICX: &lt;a href=&#34;https://www.intel.com/content/www/us/en/developer/articles/technical/c23-features-supported-by-intel-c-compiler.html&#34; target=&#34;_blank&#34;&gt;C++23 Features Supported by Intel® C++ Compiler&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;#cpp26&#34; id=&#34;cpp26&#34;&gt;C++26言語機能の実装状況&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;言語機能&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#clang&#34;&gt;Clang&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#icc&#34;&gt;ICX&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;implementation.html#visual_cpp&#34;&gt;MSVC&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;P2752R3: &lt;a href=&#34;lang/cpp26/static_storage_for_braced_initializers.md.nolink&#34;&gt;&lt;code&gt;std::initializer_list&lt;/code&gt;の配列を静的ストレージに配置する&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;std::vector v = {1, 2, 3};&lt;/code&gt;のような初期化で初期化子リストを静的ストレージに配置することで無駄なコピーをなくす&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2169R4: &lt;a href=&#34;lang/cpp26/nice_placeholder_with_no_name.md.nolink&#34;&gt;宣言のみで使用しない変数の名前として&lt;code&gt;_&lt;/code&gt;をサポート&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;変数名&lt;code&gt;_&lt;/code&gt;は暗黙で&lt;code&gt;[[maybe_unused]]&lt;/code&gt;が指定される&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1854R4: &lt;a href=&#34;lang/cpp26/making_non-encodable_string_literals_ill-formed.md.nolink&#34;&gt;文字列リテラルの文字エンコーディング失敗を不適格とする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;文字列リテラルのエンコーディング時に文字表現が失われる場合にコンパイルエラーにする&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2361R6: &lt;a href=&#34;lang/cpp26/unevaluated_strings.md.nolink&#34;&gt;コンパイル時にのみ使用される文字列の扱いを明確化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;static_assert&lt;/code&gt;や&lt;code&gt;[[deprecated]]&lt;/code&gt;などで使用されるコンパイル時の文字列について、文字コードの指定を禁止し、実行時エンコーディングが行われないことを規定&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2552R3: &lt;a href=&#34;lang/cpp26/on_the_ignorability_of_standard_attributes.md.nolink&#34;&gt;属性の無視性を見直し&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;構文として適格な属性のみを無視できるようにし、そうでない属性の使用を&lt;a class=&#34;cpprefjp-defined-word&#34;&gt;不適格&lt;/a&gt;とする&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2738R1: &lt;a href=&#34;lang/cpp26/constexpr_cast_from_voidptr.md.nolink&#34;&gt;定数式での&lt;code&gt;void*&lt;/code&gt;からポインタ型へのキャストを許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;型消去のために&lt;code&gt;void*&lt;/code&gt;からポインタ型へのキャストを許可する&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2741R3: &lt;a href=&#34;lang/cpp26/user-generated_static_assert_messages.html&#34;&gt;&lt;code&gt;static_assert&lt;/code&gt;の診断メッセージにユーザーが生成した文字列の指定を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;constexpr&lt;/code&gt;な&lt;code&gt;S.size()&lt;/code&gt;と&lt;code&gt;S.data()&lt;/code&gt;メンバ関数をもつオブジェクトをコンパイル時文字列として指定できるようにする&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2558R2: &lt;a href=&#34;lang/cpp26/add_atsign_dollar_graveaccent_to_the_basic_character_set.md.nolink&#34;&gt;基本文字集合に@、$、`を追加&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;C言語との互換性のためにこれらの文字を基本文字集合に追加&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2662R3: &lt;a href=&#34;lang/cpp26/pack_indexing.md.nolink&#34;&gt;パラメータパックへのインデックスアクセスを許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;可変引数テンプレートのパラメータパックに添字アクセスできるようにする&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2864R2: &lt;a href=&#34;lang/cpp26/remove_deprecated_arithmetic_conversion_on_enumerations.md.nolink&#34;&gt;非推奨となっていた列挙値から算術型への暗黙変換を削除&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;C++20から非推奨となっていた列挙値への算術演算で算術型に暗黙変換される仕様を削除&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;各処理系のC++26実装状況ページ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GCC: &lt;a href=&#34;https://gcc.gnu.org/projects/cxx-status.html#cxx26&#34; target=&#34;_blank&#34;&gt;C++26 Support in GCC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Clang:&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://clang.llvm.org/cxx_status.html#cxx26&#34; target=&#34;_blank&#34;&gt;C++2c implementation status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://libcxx.llvm.org/Status/Format.html&#34; target=&#34;_blank&#34;&gt;libc++ Format Status&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Visual C++ (MSVC):&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/STL/wiki/Changelog&#34; target=&#34;_blank&#34;&gt;Change log&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>エイリアステンプレート [N2258] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/alias_templates.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/alias_templates.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/alias_templates.md b/lang/cpp11/alias_templates.md
index 171441855..53ee5059d 100644
--- a/lang/cpp11/alias_templates.md
+++ b/lang/cpp11/alias_templates.md
@@ -1,4 +1,4 @@
-# エイリアステンプレート
+# エイリアステンプレート [N2258]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>alignas [N2341] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/alignas.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/alignas.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/alignas.md b/lang/cpp11/alignas.md
index a913e2bd0..3427b7f9d 100644
--- a/lang/cpp11/alignas.md
+++ b/lang/cpp11/alignas.md
@@ -1,4 +1,4 @@
-# alignas
+# alignas [N2341]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>alignof [N2341] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/alignof.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/alignof.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/alignof.md b/lang/cpp11/alignof.md
index 312b658cf..61d4251e7 100644
--- a/lang/cpp11/alignof.md
+++ b/lang/cpp11/alignof.md
@@ -1,4 +1,4 @@
-# alignof
+# alignof [N2341]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>属性構文 [N2761] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/attributes.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/attributes.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/attributes.md b/lang/cpp11/attributes.md
index 443e638ba..613da4800 100644
--- a/lang/cpp11/attributes.md
+++ b/lang/cpp11/attributes.md
@@ -1,4 +1,4 @@
-# 属性構文
+# 属性構文 [N2761]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>auto [N1984] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/auto.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/auto.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/auto.md b/lang/cpp11/auto.md
index a9ab08108..d5566c175 100644
--- a/lang/cpp11/auto.md
+++ b/lang/cpp11/auto.md
@@ -1,4 +1,4 @@
-# auto
+# auto [N1984]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>char16_tとchar32_t [N2249] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/char16_32.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/char16_32.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/char16_32.md b/lang/cpp11/char16_32.md
index a37cc16fc..a12af8688 100644
--- a/lang/cpp11/char16_32.md
+++ b/lang/cpp11/char16_32.md
@@ -1,4 +1,4 @@
-# char16_tとchar32_t
+# char16_tとchar32_t [N2249]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexpr [N2235] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/constexpr.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/constexpr.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/constexpr.md b/lang/cpp11/constexpr.md
index 1b28c57e0..44b3a5d47 100644
--- a/lang/cpp11/constexpr.md
+++ b/lang/cpp11/constexpr.md
@@ -1,4 +1,4 @@
-# constexpr
+# constexpr [N2235]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>decltype [N2343] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/decltype.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/decltype.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/decltype.md b/lang/cpp11/decltype.md
index 602486c07..88693da6c 100644
--- a/lang/cpp11/decltype.md
+++ b/lang/cpp11/decltype.md
@@ -1,4 +1,4 @@
-# decltype
+# decltype [N2343]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>関数のdefault／delete宣言 [N2346] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/defaulted_and_deleted_functions.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/defaulted_and_deleted_functions.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/defaulted_and_deleted_functions.md b/lang/cpp11/defaulted_and_deleted_functions.md
index 23f08f71d..5d229bd62 100644
--- a/lang/cpp11/defaulted_and_deleted_functions.md
+++ b/lang/cpp11/defaulted_and_deleted_functions.md
@@ -1,4 +1,4 @@
-# 関数のdefault／delete宣言
+# 関数のdefault／delete宣言 [N2346]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>委譲コンストラクタ [N1986] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/delegating_constructors.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/delegating_constructors.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/delegating_constructors.md b/lang/cpp11/delegating_constructors.md
index 89285941f..f65566c9c 100644
--- a/lang/cpp11/delegating_constructors.md
+++ b/lang/cpp11/delegating_constructors.md
@@ -1,4 +1,4 @@
-# 委譲コンストラクタ
+# 委譲コンストラクタ [N1986]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>明示的な型変換演算子のオーバーロード [N2437] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/explicit_conversion_operator.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/explicit_conversion_operator.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/explicit_conversion_operator.md b/lang/cpp11/explicit_conversion_operator.md
index 1fb322b4e..52802ad20 100644
--- a/lang/cpp11/explicit_conversion_operator.md
+++ b/lang/cpp11/explicit_conversion_operator.md
@@ -1,4 +1,4 @@
-# 明示的な型変換演算子のオーバーロード
+# 明示的な型変換演算子のオーバーロード [N2437]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>friend宣言できる対象を拡張 [N1791] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/extend_friend_targets.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/extend_friend_targets.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/extend_friend_targets.md b/lang/cpp11/extend_friend_targets.md
index 0b6670555..75a749232 100644
--- a/lang/cpp11/extend_friend_targets.md
+++ b/lang/cpp11/extend_friend_targets.md
@@ -1,4 +1,4 @@
-# friend宣言できる対象を拡張
+# friend宣言できる対象を拡張 [N1791]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>extern template [N1987] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/extern_template.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/extern_template.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/extern_template.md b/lang/cpp11/extern_template.md
index 092746c12..2a31d1e8c 100644
--- a/lang/cpp11/extern_template.md
+++ b/lang/cpp11/extern_template.md
@@ -1,4 +1,4 @@
-# extern template
+# extern template [N1987]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>事前定義識別子__func__ [N1653] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/func.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/func.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/func.md b/lang/cpp11/func.md
index bad2b78c3..e894f7bef 100644
--- a/lang/cpp11/func.md
+++ b/lang/cpp11/func.md
@@ -1,4 +1,4 @@
-# 事前定義識別子\_\_func\_\_
+# 事前定義識別子\_\_func\_\_ [N1653]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>継承コンストラクタ [N2540] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/inheriting_constructors.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/inheriting_constructors.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/inheriting_constructors.md b/lang/cpp11/inheriting_constructors.md
index 6e7c8bc12..a84dcc771 100644
--- a/lang/cpp11/inheriting_constructors.md
+++ b/lang/cpp11/inheriting_constructors.md
@@ -1,4 +1,4 @@
-# 継承コンストラクタ
+# 継承コンストラクタ [N2540]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>初期化子リスト [N2672] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/initializer_lists.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/initializer_lists.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/initializer_lists.md b/lang/cpp11/initializer_lists.md
index edafb4005..79ca2b4a1 100644
--- a/lang/cpp11/initializer_lists.md
+++ b/lang/cpp11/initializer_lists.md
@@ -1,4 +1,4 @@
-# 初期化子リスト
+# 初期化子リスト [N2672]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>インライン名前空間 [N2535] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/inline_namespaces.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/inline_namespaces.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/inline_namespaces.md b/lang/cpp11/inline_namespaces.md
index e732d5755..929243944 100644
--- a/lang/cpp11/inline_namespaces.md
+++ b/lang/cpp11/inline_namespaces.md
@@ -1,4 +1,4 @@
-# インライン名前空間
+# インライン名前空間 [N2535]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ラムダ式 [N2927] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/lambda_expressions.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/lambda_expressions.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/lambda_expressions.md b/lang/cpp11/lambda_expressions.md
index a49355d45..38783f542 100644
--- a/lang/cpp11/lambda_expressions.md
+++ b/lang/cpp11/lambda_expressions.md
@@ -1,4 +1,4 @@
-# ラムダ式
+# ラムダ式 [N2927]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ローカル型と無名型を、テンプレート引数として使用することを許可 [N2657] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/local_and_unnamed_type_as_template_arguments.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/local_and_unnamed_type_as_template_arguments.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/local_and_unnamed_type_as_template_arguments.md b/lang/cpp11/local_and_unnamed_type_as_template_arguments.md
index 11e90c0bf..8eeb04d6e 100644
--- a/lang/cpp11/local_and_unnamed_type_as_template_arguments.md
+++ b/lang/cpp11/local_and_unnamed_type_as_template_arguments.md
@@ -1,4 +1,4 @@
-# ローカル型と無名型を、テンプレート引数として使用することを許可
+# ローカル型と無名型を、テンプレート引数として使用することを許可 [N2657]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>long long型 [N1811] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/long_long_type.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/long_long_type.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/long_long_type.md b/lang/cpp11/long_long_type.md
index ac70a4694..cf62830df 100644
--- a/lang/cpp11/long_long_type.md
+++ b/lang/cpp11/long_long_type.md
@@ -1,4 +1,4 @@
-# long long型
+# long long型 [N1811]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>noexcept [N3050] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/noexcept.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/noexcept.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/noexcept.md b/lang/cpp11/noexcept.md
index 2ac2aff52..afef96b59 100644
--- a/lang/cpp11/noexcept.md
+++ b/lang/cpp11/noexcept.md
@@ -1,4 +1,4 @@
-# noexcept
+# noexcept [N3050]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>非静的メンバ変数の初期化 [N2756] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/non_static_data_member_initializers.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/non_static_data_member_initializers.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/non_static_data_member_initializers.md b/lang/cpp11/non_static_data_member_initializers.md
index 4f9ec8721..6764a34ba 100644
--- a/lang/cpp11/non_static_data_member_initializers.md
+++ b/lang/cpp11/non_static_data_member_initializers.md
@@ -1,4 +1,4 @@
-# 非静的メンバ変数の初期化
+# 非静的メンバ変数の初期化 [N2756]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>nullptr [N2431] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/nullptr.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/nullptr.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/nullptr.md b/lang/cpp11/nullptr.md
index 9bc46a45e..6fa57226c 100644
--- a/lang/cpp11/nullptr.md
+++ b/lang/cpp11/nullptr.md
@@ -1,4 +1,4 @@
-# nullptr
+# nullptr [N2431]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>overrideとfinal [N2928] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/override_final.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/override_final.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/override_final.md b/lang/cpp11/override_final.md
index c3d6c8fcd..195924044 100644
--- a/lang/cpp11/override_final.md
+++ b/lang/cpp11/override_final.md
@@ -1,4 +1,4 @@
-# overrideとfinal
+# overrideとfinal [N2928]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>Pragma演算子 [N1653] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/pragma_operator.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/pragma_operator.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/pragma_operator.md b/lang/cpp11/pragma_operator.md
index ef1727c73..ed565e360 100644
--- a/lang/cpp11/pragma_operator.md
+++ b/lang/cpp11/pragma_operator.md
@@ -1,4 +1,4 @@
-# Pragma演算子
+# Pragma演算子 [N1653]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>範囲for文 [N2930] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/range_based_for.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/range_based_for.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/range_based_for.md b/lang/cpp11/range_based_for.md
index 741fa2538..8c80c934b 100644
--- a/lang/cpp11/range_based_for.md
+++ b/lang/cpp11/range_based_for.md
@@ -1,4 +1,4 @@
-# 範囲for文
+# 範囲for文 [N2930]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>生文字列リテラル [N2442] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/raw_string_literals.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/raw_string_literals.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/raw_string_literals.md b/lang/cpp11/raw_string_literals.md
index 1a12d5302..a5b59af2f 100644
--- a/lang/cpp11/raw_string_literals.md
+++ b/lang/cpp11/raw_string_literals.md
@@ -1,4 +1,4 @@
-# 生文字列リテラル
+# 生文字列リテラル [N2442]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>メンバ関数の左辺値／右辺値修飾 [N2439] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/ref_qualifier_for_this.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/ref_qualifier_for_this.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/ref_qualifier_for_this.md b/lang/cpp11/ref_qualifier_for_this.md
index 9cb1015f5..1d206e5e8 100644
--- a/lang/cpp11/ref_qualifier_for_this.md
+++ b/lang/cpp11/ref_qualifier_for_this.md
@@ -1,4 +1,4 @@
-# メンバ関数の左辺値／右辺値修飾
+# メンバ関数の左辺値／右辺値修飾 [N2439]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>テンプレートの右山カッコ [N1757] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/right_angle_brackets.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/right_angle_brackets.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/right_angle_brackets.md b/lang/cpp11/right_angle_brackets.md
index bf510f32a..51ce4ae73 100644
--- a/lang/cpp11/right_angle_brackets.md
+++ b/lang/cpp11/right_angle_brackets.md
@@ -1,4 +1,4 @@
-# テンプレートの右山カッコ
+# テンプレートの右山カッコ [N1757]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>右辺値参照・ムーブセマンティクス [N2118] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/rvalue_ref_and_move_semantics.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/rvalue_ref_and_move_semantics.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/rvalue_ref_and_move_semantics.md b/lang/cpp11/rvalue_ref_and_move_semantics.md
index 090492e43..4a59d7ee4 100644
--- a/lang/cpp11/rvalue_ref_and_move_semantics.md
+++ b/lang/cpp11/rvalue_ref_and_move_semantics.md
@@ -1,4 +1,4 @@
-# 右辺値参照・ムーブセマンティクス
+# 右辺値参照・ムーブセマンティクス [N2118]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>スコープを持つ列挙型 [N2347] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/scoped_enum.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/scoped_enum.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/scoped_enum.md b/lang/cpp11/scoped_enum.md
index d7ec1d4b9..8c214254f 100644
--- a/lang/cpp11/scoped_enum.md
+++ b/lang/cpp11/scoped_enum.md
@@ -1,4 +1,4 @@
-# スコープを持つ列挙型
+# スコープを持つ列挙型 [N2347]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>任意の式によるSFINAE [N2634] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/sfinae_expressions.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/sfinae_expressions.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/sfinae_expressions.md b/lang/cpp11/sfinae_expressions.md
index 8526b9169..c87e8a5f9 100644
--- a/lang/cpp11/sfinae_expressions.md
+++ b/lang/cpp11/sfinae_expressions.md
@@ -1,4 +1,4 @@
-# 任意の式によるSFINAE
+# 任意の式によるSFINAE [N2634]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンパイル時アサート [N1720] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/static_assert.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/static_assert.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/static_assert.md b/lang/cpp11/static_assert.md
index 64020c3b0..a7de6eaec 100644
--- a/lang/cpp11/static_assert.md
+++ b/lang/cpp11/static_assert.md
@@ -1,4 +1,4 @@
-# コンパイル時アサート
+# コンパイル時アサート [N1720]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ブロックスコープを持つstatic変数初期化のスレッドセーフ化 [N2660] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/static_initialization_thread_safely.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/static_initialization_thread_safely.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/static_initialization_thread_safely.md b/lang/cpp11/static_initialization_thread_safely.md
index 6f104e050..c1a11b39a 100644
--- a/lang/cpp11/static_initialization_thread_safely.md
+++ b/lang/cpp11/static_initialization_thread_safely.md
@@ -1,4 +1,4 @@
-# ブロックスコープを持つstatic変数初期化のスレッドセーフ化
+# ブロックスコープを持つstatic変数初期化のスレッドセーフ化 [N2660]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>スレッドローカルストレージ [N2659] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/thread_local_storage.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/thread_local_storage.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/thread_local_storage.md b/lang/cpp11/thread_local_storage.md
index f4324385e..66df73293 100644
--- a/lang/cpp11/thread_local_storage.md
+++ b/lang/cpp11/thread_local_storage.md
@@ -1,4 +1,4 @@
-# スレッドローカルストレージ
+# スレッドローカルストレージ [N2659]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>戻り値の型を後置する関数宣言構文 [N2541] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/trailing_return_types.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/trailing_return_types.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/trailing_return_types.md b/lang/cpp11/trailing_return_types.md
index 6362c800a..efee5fa5a 100644
--- a/lang/cpp11/trailing_return_types.md
+++ b/lang/cpp11/trailing_return_types.md
@@ -1,4 +1,4 @@
-# 戻り値の型を後置する関数宣言構文
+# 戻り値の型を後置する関数宣言構文 [N2541]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>一様初期化 [N2672] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/uniform_initialization.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/uniform_initialization.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/uniform_initialization.md b/lang/cpp11/uniform_initialization.md
index 4a3e17a93..5475183cf 100644
--- a/lang/cpp11/uniform_initialization.md
+++ b/lang/cpp11/uniform_initialization.md
@@ -1,4 +1,4 @@
-# 一様初期化
+# 一様初期化 [N2672]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>共用体の制限解除 [N2544] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/unrestricted_unions.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/unrestricted_unions.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/unrestricted_unions.md b/lang/cpp11/unrestricted_unions.md
index f8ce219d9..afc3fa54a 100644
--- a/lang/cpp11/unrestricted_unions.md
+++ b/lang/cpp11/unrestricted_unions.md
@@ -1,4 +1,4 @@
-# 共用体の制限解除
+# 共用体の制限解除 [N2544]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ユーザー定義リテラル [N2765] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/user_defined_literals.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/user_defined_literals.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/user_defined_literals.md b/lang/cpp11/user_defined_literals.md
index 167fd6c2c..7d1c89ca1 100644
--- a/lang/cpp11/user_defined_literals.md
+++ b/lang/cpp11/user_defined_literals.md
@@ -1,4 +1,4 @@
-# ユーザー定義リテラル
+# ユーザー定義リテラル [N2765]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>UTF-8文字列リテラル [N2442] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/utf8_string_literals.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/utf8_string_literals.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/utf8_string_literals.md b/lang/cpp11/utf8_string_literals.md
index b9dc4e996..a1f8bd9d3 100644
--- a/lang/cpp11/utf8_string_literals.md
+++ b/lang/cpp11/utf8_string_literals.md
@@ -1,4 +1,4 @@
-# UTF-8文字列リテラル
+# UTF-8文字列リテラル [N2442]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>可変引数マクロ [N1653] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/variadic_macros.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/variadic_macros.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/variadic_macros.md b/lang/cpp11/variadic_macros.md
index 7e191f9f3..afa3077f5 100644
--- a/lang/cpp11/variadic_macros.md
+++ b/lang/cpp11/variadic_macros.md
@@ -1,4 +1,4 @@
-# 可変引数マクロ
+# 可変引数マクロ [N1653]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>可変引数テンプレート [N2242] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/variadic_templates.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp11/variadic_templates.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/variadic_templates.md b/lang/cpp11/variadic_templates.md
index 36185d699..fdbabf6b1 100644
--- a/lang/cpp11/variadic_templates.md
+++ b/lang/cpp11/variadic_templates.md
@@ -1,4 +1,4 @@
-# 可変引数テンプレート
+# 可変引数テンプレート [N2242]
 * cpp11[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>2進数リテラル [N3472] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/binary_literals.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp14/binary_literals.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/binary_literals.md b/lang/cpp14/binary_literals.md
index f9d457044..b0860f37f 100644
--- a/lang/cpp14/binary_literals.md
+++ b/lang/cpp14/binary_literals.md
@@ -1,4 +1,4 @@
-# 2進数リテラル
+# 2進数リテラル [N3472]
 * cpp14[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ネストする集成体初期化における波カッコ省略を許可 [N3653] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/brace_elision_in_array_temporary_initialization.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp14/brace_elision_in_array_temporary_initialization.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/brace_elision_in_array_temporary_initialization.md b/lang/cpp14/brace_elision_in_array_temporary_initialization.md
index 9b42e3fa0..41e8c3655 100644
--- a/lang/cpp14/brace_elision_in_array_temporary_initialization.md
+++ b/lang/cpp14/brace_elision_in_array_temporary_initialization.md
@@ -1,4 +1,4 @@
-# ネストする集成体初期化における波カッコ省略を許可
+# ネストする集成体初期化における波カッコ省略を許可 [N3653]
 * cpp14[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>[[deprecated]]属性 [N3760] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/deprecated_attr.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp14/deprecated_attr.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/deprecated_attr.md b/lang/cpp14/deprecated_attr.md
index fbe530fa8..3491ccfb9 100644
--- a/lang/cpp14/deprecated_attr.md
+++ b/lang/cpp14/deprecated_attr.md
@@ -1,4 +1,4 @@
-# [[deprecated]]属性
+# [[deprecated]]属性 [N3760]
 * cpp14[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>数値リテラルの桁区切り文字 [N3781] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/digit_separators.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp14/digit_separators.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/digit_separators.md b/lang/cpp14/digit_separators.md
index b7c8ca24c..ac95c7c56 100644
--- a/lang/cpp14/digit_separators.md
+++ b/lang/cpp14/digit_separators.md
@@ -1,4 +1,4 @@
-# 数値リテラルの桁区切り文字
+# 数値リテラルの桁区切り文字 [N3781]
 * cpp14[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ジェネリックラムダ [N3649] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/generic_lambdas.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp14/generic_lambdas.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/generic_lambdas.md b/lang/cpp14/generic_lambdas.md
index e27e08376..d92b15b61 100644
--- a/lang/cpp14/generic_lambdas.md
+++ b/lang/cpp14/generic_lambdas.md
@@ -1,4 +1,4 @@
-# ジェネリックラムダ
+# ジェネリックラムダ [N3649]
 * cpp14[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ラムダ式の初期化キャプチャ [N3648] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/initialize_capture.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp14/initialize_capture.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/initialize_capture.md b/lang/cpp14/initialize_capture.md
index e62d64b95..4b984b47c 100644
--- a/lang/cpp14/initialize_capture.md
+++ b/lang/cpp14/initialize_capture.md
@@ -1,4 +1,4 @@
-# ラムダ式の初期化キャプチャ
+# ラムダ式の初期化キャプチャ [N3648]
 * cpp14[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexprの制限緩和 [N3652] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/relaxing_constraints_on_constexpr.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp14/relaxing_constraints_on_constexpr.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/relaxing_constraints_on_constexpr.md b/lang/cpp14/relaxing_constraints_on_constexpr.md
index 943cc064d..c6d840d01 100644
--- a/lang/cpp14/relaxing_constraints_on_constexpr.md
+++ b/lang/cpp14/relaxing_constraints_on_constexpr.md
@@ -1,4 +1,4 @@
-# constexprの制限緩和
+# constexprの制限緩和 [N3652]
 * cpp14[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>通常関数の戻り値型推論 [N3638] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/return_type_deduction_for_normal_functions.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp14/return_type_deduction_for_normal_functions.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/return_type_deduction_for_normal_functions.md b/lang/cpp14/return_type_deduction_for_normal_functions.md
index 66f5caa61..f2434536c 100644
--- a/lang/cpp14/return_type_deduction_for_normal_functions.md
+++ b/lang/cpp14/return_type_deduction_for_normal_functions.md
@@ -1,4 +1,4 @@
-# 通常関数の戻り値型推論
+# 通常関数の戻り値型推論 [N3638]
 * cpp14[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>サイズ付きデアロケーション [N3778] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/sized_deallocation.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp14/sized_deallocation.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/sized_deallocation.md b/lang/cpp14/sized_deallocation.md
index d2da7e97c..1d130364d 100644
--- a/lang/cpp14/sized_deallocation.md
+++ b/lang/cpp14/sized_deallocation.md
@@ -1,4 +1,4 @@
-# サイズ付きデアロケーション
+# サイズ付きデアロケーション [N3778]
 * cpp14[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>変数テンプレート [N3651] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp14/variable_templates.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp14/variable_templates.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp14/variable_templates.md b/lang/cpp14/variable_templates.md
index c05a84e11..97cbadc51 100644
--- a/lang/cpp14/variable_templates.md
+++ b/lang/cpp14/variable_templates.md
@@ -1,4 +1,4 @@
-# 変数テンプレート
+# 変数テンプレート [N3651]
 * cpp14[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>C++17 -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17.md b/lang/cpp17.md
index 90d96f4cc..06805f4c5 100644
--- a/lang/cpp17.md
+++ b/lang/cpp17.md
@@ -38,7 +38,7 @@ C++17以降、言語の策定にship train modelというリリース体制が
 | [参照メンバをもつクラスの置き換え](cpp17/replacement_of_class_objects_containing_reference_members.md) | 参照型メンバや`const`メンバ変数を含むクラスについてこれまで結果は未定義とされていた配置`new`によるオブジェクトの置き換えを条件付きで可能とする |
 | [`enum class`変数の初期値として整数を指定する際の規則を調整](cpp17/construction_enum_class_values.md) | キャストを使用することなく整数を初期値として使用し、`E e{0};`のような初期化を許可 |
 | [アライメント指定されたデータの動的メモリ確保](cpp17/dynamic_memory_allocation_for_over-aligned_data.md) | `operator new`と`operator delete`でアライメント値を取得できるようにする |
-| [集成体初期化の拡張](cpp17/extension_to_aggregate_initialization.md) | 集成体初期化で基底クラスも入れ子に集成体初期化可能になる |
+| [基底クラスのメンバ変数を集成体初期化するための波カッコを省略できるようにする](cpp17/extension_to_aggregate_initialization.md) | 基底クラスのメンバを集成体初期化するために、 `derived d {{42}};` の代わりに `derived d {42};` と書けるようにする |
 
 
 ### 制御構文
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>全ての非型テンプレート引数の定数式評価を許可 [N4268] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/allow_constant_evaluation_for_all_non-type_template_arguments.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/allow_constant_evaluation_for_all_non-type_template_arguments.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/allow_constant_evaluation_for_all_non-type_template_arguments.md b/lang/cpp17/allow_constant_evaluation_for_all_non-type_template_arguments.md
index aec3ca9b3..19f66f972 100644
--- a/lang/cpp17/allow_constant_evaluation_for_all_non-type_template_arguments.md
+++ b/lang/cpp17/allow_constant_evaluation_for_all_non-type_template_arguments.md
@@ -1,4 +1,4 @@
-# 全ての非型テンプレート引数の定数式評価を許可
+# 全ての非型テンプレート引数の定数式評価を許可 [N4268]
 
 * cpp17[meta cpp]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>テンプレートテンプレートパラメータにtypenameキーワードの使用を許可 [N4051] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/allow_typename_in_a_template_template_parameter.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/allow_typename_in_a_template_template_parameter.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/allow_typename_in_a_template_template_parameter.md b/lang/cpp17/allow_typename_in_a_template_template_parameter.md
index c04f78fa5..e4dee187a 100644
--- a/lang/cpp17/allow_typename_in_a_template_template_parameter.md
+++ b/lang/cpp17/allow_typename_in_a_template_template_parameter.md
@@ -1,4 +1,4 @@
-# テンプレートテンプレートパラメータにtypenameキーワードの使用を許可
+# テンプレートテンプレートパラメータにtypenameキーワードの使用を許可 [N4051]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>名前空間と列挙子への属性付加を許可 [N4266] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/attributes_for_namespaces_and_enumerators.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/attributes_for_namespaces_and_enumerators.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/attributes_for_namespaces_and_enumerators.md b/lang/cpp17/attributes_for_namespaces_and_enumerators.md
index ff3ed0cab..78aee629b 100644
--- a/lang/cpp17/attributes_for_namespaces_and_enumerators.md
+++ b/lang/cpp17/attributes_for_namespaces_and_enumerators.md
@@ -1,4 +1,4 @@
-# 名前空間と列挙子への属性付加を許可
+# 名前空間と列挙子への属性付加を許可 [N4266]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexpr ラムダ [P0170R1] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/constexpr_lambda.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/constexpr_lambda.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/constexpr_lambda.md b/lang/cpp17/constexpr_lambda.md
index 1f5ec0f3a..f0ca91494 100644
--- a/lang/cpp17/constexpr_lambda.md
+++ b/lang/cpp17/constexpr_lambda.md
@@ -1,4 +1,4 @@
-# constexpr ラムダ
+# constexpr ラムダ [P0170R1]
 
 * cpp17[meta cpp]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>enum class変数の初期値として整数を指定する際の規則を調整 [P0138R2] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/construction_enum_class_values.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/construction_enum_class_values.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/construction_enum_class_values.md b/lang/cpp17/construction_enum_class_values.md
index ba552450d..b4e8f2589 100644
--- a/lang/cpp17/construction_enum_class_values.md
+++ b/lang/cpp17/construction_enum_class_values.md
@@ -1,4 +1,4 @@
-# enum class変数の初期値として整数を指定する際の規則を調整
+# enum class変数の初期値として整数を指定する際の規則を調整 [P0138R2]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>非型テンプレートパラメータのauto宣言 [P0127R2] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/declaring_non-type_template_arguments_with_auto.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/declaring_non-type_template_arguments_with_auto.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/declaring_non-type_template_arguments_with_auto.md b/lang/cpp17/declaring_non-type_template_arguments_with_auto.md
index 9a6d32a28..e532dd3f0 100644
--- a/lang/cpp17/declaring_non-type_template_arguments_with_auto.md
+++ b/lang/cpp17/declaring_non-type_template_arguments_with_auto.md
@@ -1,4 +1,4 @@
-# 非型テンプレートパラメータのauto宣言
+# 非型テンプレートパラメータのauto宣言 [P0127R2]
 
 * cpp17[meta cpp]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>アライメント指定されたデータの動的メモリ確保 [P0035R4] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/dynamic_memory_allocation_for_over-aligned_data.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/dynamic_memory_allocation_for_over-aligned_data.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/dynamic_memory_allocation_for_over-aligned_data.md b/lang/cpp17/dynamic_memory_allocation_for_over-aligned_data.md
index 9be63837d..8a14b5487 100644
--- a/lang/cpp17/dynamic_memory_allocation_for_over-aligned_data.md
+++ b/lang/cpp17/dynamic_memory_allocation_for_over-aligned_data.md
@@ -1,4 +1,4 @@
-# アライメント指定されたデータの動的メモリ確保
+# アライメント指定されたデータの動的メモリ確保 [P0035R4]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>例外仕様を型システムの一部にする [P0012R1] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/exception_spec_be_part_of_the_type_system.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/exception_spec_be_part_of_the_type_system.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/exception_spec_be_part_of_the_type_system.md b/lang/cpp17/exception_spec_be_part_of_the_type_system.md
index 9c9199ba1..7be6cb8d9 100644
--- a/lang/cpp17/exception_spec_be_part_of_the_type_system.md
+++ b/lang/cpp17/exception_spec_be_part_of_the_type_system.md
@@ -1,4 +1,4 @@
-# 例外仕様を型システムの一部にする
+# 例外仕様を型システムの一部にする [P0012R1]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>厳密な式の評価順 [P0145R3] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/expression_evaluation_order.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/expression_evaluation_order.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/expression_evaluation_order.md b/lang/cpp17/expression_evaluation_order.md
index 0bdd87213..4fe26553c 100644
--- a/lang/cpp17/expression_evaluation_order.md
+++ b/lang/cpp17/expression_evaluation_order.md
@@ -1,4 +1,4 @@
-# 厳密な式の評価順
+# 厳密な式の評価順 [P0145R3]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>static_assert のメッセージ省略を許可 [N3928] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/extending_static_assert.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/extending_static_assert.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/extending_static_assert.md b/lang/cpp17/extending_static_assert.md
index bb7f9744e..8ae20ef82 100644
--- a/lang/cpp17/extending_static_assert.md
+++ b/lang/cpp17/extending_static_assert.md
@@ -1,4 +1,4 @@
-# static_assert のメッセージ省略を許可
+# static_assert のメッセージ省略を許可 [N3928]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>基底クラスのメンバ変数を集成体初期化するための波カッコを省略できるようにする [P0017R1] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/extension_to_aggregate_initialization.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/extension_to_aggregate_initialization.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/extension_to_aggregate_initialization.md b/lang/cpp17/extension_to_aggregate_initialization.md
index d3648db38..f595a0b3f 100644
--- a/lang/cpp17/extension_to_aggregate_initialization.md
+++ b/lang/cpp17/extension_to_aggregate_initialization.md
@@ -1,4 +1,4 @@
-# 集成体初期化の拡張
+# 基底クラスのメンバ変数を集成体初期化するための波カッコを省略できるようにする [P0017R1]
 
 * cpp17[meta cpp]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>[[fallthrough]]属性 [P0188R1] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/fallthrough.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/fallthrough.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/fallthrough.md b/lang/cpp17/fallthrough.md
index 5e3ecc0f4..eb8f4be43 100644
--- a/lang/cpp17/fallthrough.md
+++ b/lang/cpp17/fallthrough.md
@@ -1,4 +1,4 @@
-# [[fallthrough]]属性
+# [[fallthrough]]属性 [P0188R1]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>畳み込み式 [N4295] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/folding_expressions.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/folding_expressions.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/folding_expressions.md b/lang/cpp17/folding_expressions.md
index 1a0b7f62b..03ed8df24 100644
--- a/lang/cpp17/folding_expressions.md
+++ b/lang/cpp17/folding_expressions.md
@@ -1,4 +1,4 @@
-# 畳み込み式
+# 畳み込み式 [N4295]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>範囲 for ループの制限緩和 [P0184R0] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/generalizing_the_range-based_for_loop.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/generalizing_the_range-based_for_loop.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/generalizing_the_range-based_for_loop.md b/lang/cpp17/generalizing_the_range-based_for_loop.md
index f08c7183b..df1a37934 100644
--- a/lang/cpp17/generalizing_the_range-based_for_loop.md
+++ b/lang/cpp17/generalizing_the_range-based_for_loop.md
@@ -1,4 +1,4 @@
-# 範囲 for ループの制限緩和
+# 範囲 for ループの制限緩和 [P0184R0]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>値のコピー省略を保証 [P0135R1] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/guaranteed_copy_elision.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/guaranteed_copy_elision.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/guaranteed_copy_elision.md b/lang/cpp17/guaranteed_copy_elision.md
index 620afa4ed..5a96ad1c7 100644
--- a/lang/cpp17/guaranteed_copy_elision.md
+++ b/lang/cpp17/guaranteed_copy_elision.md
@@ -1,4 +1,4 @@
-# 値のコピー省略を保証
+# 値のコピー省略を保証 [P0135R1]
 
 * cpp17[meta cpp]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>__has_include [P0061R1] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/has_include.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/has_include.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/has_include.md b/lang/cpp17/has_include.md
index f1c370de7..8c4821ae7 100644
--- a/lang/cpp17/has_include.md
+++ b/lang/cpp17/has_include.md
@@ -1,4 +1,4 @@
-# __has_include
+# __has_include [P0061R1]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>十六進浮動小数点数リテラル [P0245R1] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/hexadecimal_floating_literals.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/hexadecimal_floating_literals.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/hexadecimal_floating_literals.md b/lang/cpp17/hexadecimal_floating_literals.md
index 4ff845fe7..6515d1282 100644
--- a/lang/cpp17/hexadecimal_floating_literals.md
+++ b/lang/cpp17/hexadecimal_floating_literals.md
@@ -1,4 +1,4 @@
-# 十六進浮動小数点数リテラル
+# 十六進浮動小数点数リテラル [P0245R1]
 * cpp17[meta cpp]
 * [mathjax enable]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexpr if 文 [P0292R2] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/if_constexpr.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/if_constexpr.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/if_constexpr.md b/lang/cpp17/if_constexpr.md
index 2b218c451..4d528aedf 100644
--- a/lang/cpp17/if_constexpr.md
+++ b/lang/cpp17/if_constexpr.md
@@ -1,4 +1,4 @@
-# constexpr if 文
+# constexpr if 文 [P0292R2]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>インライン変数 [P0386R2] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/inline_variables.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/inline_variables.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/inline_variables.md b/lang/cpp17/inline_variables.md
index ac0002367..f10059f8f 100644
--- a/lang/cpp17/inline_variables.md
+++ b/lang/cpp17/inline_variables.md
@@ -1,4 +1,4 @@
-# インライン変数
+# インライン変数 [P0386R2]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ラムダ式での*thisのコピーキャプチャ [P0018R3] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/lambda_capture_of_this_by_value.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/lambda_capture_of_this_by_value.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/lambda_capture_of_this_by_value.md b/lang/cpp17/lambda_capture_of_this_by_value.md
index 2f6b1b87c..391681d8e 100644
--- a/lang/cpp17/lambda_capture_of_this_by_value.md
+++ b/lang/cpp17/lambda_capture_of_this_by_value.md
@@ -1,4 +1,4 @@
-# ラムダ式での*thisのコピーキャプチャ
+# ラムダ式での*thisのコピーキャプチャ [P0018R3]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>[[maybe_unused]]属性 [P0212R1] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/maybe_unused.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/maybe_unused.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/maybe_unused.md b/lang/cpp17/maybe_unused.md
index b2ad194ce..f04dbd6f8 100644
--- a/lang/cpp17/maybe_unused.md
+++ b/lang/cpp17/maybe_unused.md
@@ -1,4 +1,4 @@
-# [[maybe_unused]]属性
+# [[maybe_unused]]属性 [P0212R1]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>入れ子名前空間の定義 [N4230] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/nested_namespace.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/nested_namespace.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/nested_namespace.md b/lang/cpp17/nested_namespace.md
index 20b67b980..0fb30e022 100644
--- a/lang/cpp17/nested_namespace.md
+++ b/lang/cpp17/nested_namespace.md
@@ -1,4 +1,4 @@
-# 入れ子名前空間の定義
+# 入れ子名前空間の定義 [N4230]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>波括弧初期化の型推論の新規則 [N3922] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/new_rules_for_auto_deduction_from_braced-init-list.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/new_rules_for_auto_deduction_from_braced-init-list.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/new_rules_for_auto_deduction_from_braced-init-list.md b/lang/cpp17/new_rules_for_auto_deduction_from_braced-init-list.md
index ec02c73af..d457cf6ef 100644
--- a/lang/cpp17/new_rules_for_auto_deduction_from_braced-init-list.md
+++ b/lang/cpp17/new_rules_for_auto_deduction_from_braced-init-list.md
@@ -1,4 +1,4 @@
-# 波括弧初期化の型推論の新規則
+# 波括弧初期化の型推論の新規則 [N3922]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>[[nodiscard]]属性 [P0189R1] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/nodiscard.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/nodiscard.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/nodiscard.md b/lang/cpp17/nodiscard.md
index ebdc0c1ea..2328e65a4 100644
--- a/lang/cpp17/nodiscard.md
+++ b/lang/cpp17/nodiscard.md
@@ -1,4 +1,4 @@
-# [[nodiscard]]属性
+# [[nodiscard]]属性 [P0189R1]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>不明な属性を無視する [P0283R2] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/non_standard_attributes.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/non_standard_attributes.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/non_standard_attributes.md b/lang/cpp17/non_standard_attributes.md
index bcf4f8d76..d93d20f32 100644
--- a/lang/cpp17/non_standard_attributes.md
+++ b/lang/cpp17/non_standard_attributes.md
@@ -1,4 +1,4 @@
-# 不明な属性を無視する
+# 不明な属性を無視する [P0283R2]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>using宣言のパック展開 [P0195R2] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/pack_expansions_in_using.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/pack_expansions_in_using.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/pack_expansions_in_using.md b/lang/cpp17/pack_expansions_in_using.md
index e305c40bf..fcf3d4039 100644
--- a/lang/cpp17/pack_expansions_in_using.md
+++ b/lang/cpp17/pack_expansions_in_using.md
@@ -1,4 +1,4 @@
-# using宣言のパック展開
+# using宣言のパック展開 [P0195R2]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>非推奨だった古い例外仕様を削除 [P0003R5] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/remove_deprecated_exception_specifications.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/remove_deprecated_exception_specifications.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/remove_deprecated_exception_specifications.md b/lang/cpp17/remove_deprecated_exception_specifications.md
index 1bcadfd2e..253a54d7c 100644
--- a/lang/cpp17/remove_deprecated_exception_specifications.md
+++ b/lang/cpp17/remove_deprecated_exception_specifications.md
@@ -1,4 +1,4 @@
-# 非推奨だった古い例外仕様を削除
+# 非推奨だった古い例外仕様を削除 [P0003R5]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>非推奨だった bool 型に対するインクリメント演算子を削除 [P0002R1] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/remove_deprecated_increment_of_bool.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/remove_deprecated_increment_of_bool.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/remove_deprecated_increment_of_bool.md b/lang/cpp17/remove_deprecated_increment_of_bool.md
index fc4f690ab..261ef394b 100644
--- a/lang/cpp17/remove_deprecated_increment_of_bool.md
+++ b/lang/cpp17/remove_deprecated_increment_of_bool.md
@@ -1,4 +1,4 @@
-# 非推奨だった bool 型に対するインクリメント演算子を削除
+# 非推奨だった bool 型に対するインクリメント演算子を削除 [P0002R1]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>非推奨だったregisterキーワードを削除 [P0001R1] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/remove_deprecated_use_of_the_register_keyword.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/remove_deprecated_use_of_the_register_keyword.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/remove_deprecated_use_of_the_register_keyword.md b/lang/cpp17/remove_deprecated_use_of_the_register_keyword.md
index 238790f2e..a10725393 100644
--- a/lang/cpp17/remove_deprecated_use_of_the_register_keyword.md
+++ b/lang/cpp17/remove_deprecated_use_of_the_register_keyword.md
@@ -1,4 +1,4 @@
-# 非推奨だったregisterキーワードを削除
+# 非推奨だったregisterキーワードを削除 [P0001R1]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>トライグラフの削除 [N4086] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/removing_trigraphs.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/removing_trigraphs.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/removing_trigraphs.md b/lang/cpp17/removing_trigraphs.md
index 269fd37b7..76051b646 100644
--- a/lang/cpp17/removing_trigraphs.md
+++ b/lang/cpp17/removing_trigraphs.md
@@ -1,4 +1,4 @@
-# トライグラフの削除
+# トライグラフの削除 [N4086]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>参照メンバをもつクラスの置き換え [P0137R1] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/replacement_of_class_objects_containing_reference_members.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/replacement_of_class_objects_containing_reference_members.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/replacement_of_class_objects_containing_reference_members.md b/lang/cpp17/replacement_of_class_objects_containing_reference_members.md
index ecf1f23c2..4ea19fb20 100644
--- a/lang/cpp17/replacement_of_class_objects_containing_reference_members.md
+++ b/lang/cpp17/replacement_of_class_objects_containing_reference_members.md
@@ -1,4 +1,4 @@
-# 参照メンバをもつクラスの置き換え
+# 参照メンバをもつクラスの置き換え [P0137R1]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>if文とswitch文の条件式と初期化を分離 [P0305R1] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/selection_statements_with_initializer.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/selection_statements_with_initializer.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/selection_statements_with_initializer.md b/lang/cpp17/selection_statements_with_initializer.md
index 0039fe4b8..da175269d 100644
--- a/lang/cpp17/selection_statements_with_initializer.md
+++ b/lang/cpp17/selection_statements_with_initializer.md
@@ -1,4 +1,4 @@
-# if文とswitch文の条件式と初期化を分離
+# if文とswitch文の条件式と初期化を分離 [P0305R1]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>構造化束縛 [P0217R3] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/structured_bindings.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/structured_bindings.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/structured_bindings.md b/lang/cpp17/structured_bindings.md
index 6dc9d9971..9d9184fe2 100644
--- a/lang/cpp17/structured_bindings.md
+++ b/lang/cpp17/structured_bindings.md
@@ -1,4 +1,4 @@
-# 構造化束縛
+# 構造化束縛 [P0217R3]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>クラステンプレートのテンプレート引数推論 [P0091R3] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/type_deduction_for_class_templates.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/type_deduction_for_class_templates.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/type_deduction_for_class_templates.md b/lang/cpp17/type_deduction_for_class_templates.md
index a7036694d..ce3f0a7e8 100644
--- a/lang/cpp17/type_deduction_for_class_templates.md
+++ b/lang/cpp17/type_deduction_for_class_templates.md
@@ -1,4 +1,4 @@
-# クラステンプレートのテンプレート引数推論
+# クラステンプレートのテンプレート引数推論 [P0091R3]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>属性の名前空間指定に繰り返しをなくす [P0028R4] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/using_attribute_namespaces.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/using_attribute_namespaces.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/using_attribute_namespaces.md b/lang/cpp17/using_attribute_namespaces.md
index 4c755f872..bfc96aaa4 100644
--- a/lang/cpp17/using_attribute_namespaces.md
+++ b/lang/cpp17/using_attribute_namespaces.md
@@ -1,4 +1,4 @@
-# 属性の名前空間指定に繰り返しをなくす
+# 属性の名前空間指定に繰り返しをなくす [P0028R4]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>UTF-8文字リテラル [N4267] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/utf8_character_literals.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp17/utf8_character_literals.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/utf8_character_literals.md b/lang/cpp17/utf8_character_literals.md
index 7c93dac3e..479966b3e 100644
--- a/lang/cpp17/utf8_character_literals.md
+++ b/lang/cpp17/utf8_character_literals.md
@@ -1,4 +1,4 @@
-# UTF-8文字リテラル
+# UTF-8文字リテラル [N4267]
 * cpp17[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>特殊化のアクセスチェック [P0692R1] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/access_checking_on_specializations.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/access_checking_on_specializations.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/access_checking_on_specializations.md b/lang/cpp20/access_checking_on_specializations.md
index fb23dfe79..def88c428 100644
--- a/lang/cpp20/access_checking_on_specializations.md
+++ b/lang/cpp20/access_checking_on_specializations.md
@@ -1,4 +1,4 @@
-# 特殊化のアクセスチェック
+# 特殊化のアクセスチェック [P0692R1]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>関数テンプレートに明示的に型指定した場合にADLで見つからない問題を修正 [P0846R0] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/adl_and_function_templates_that_are_not_visible.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/adl_and_function_templates_that_are_not_visible.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/adl_and_function_templates_that_are_not_visible.md b/lang/cpp20/adl_and_function_templates_that_are_not_visible.md
index 0854827db..ceb421b9b 100644
--- a/lang/cpp20/adl_and_function_templates_that_are_not_visible.md
+++ b/lang/cpp20/adl_and_function_templates_that_are_not_visible.md
@@ -1,4 +1,4 @@
-# 関数テンプレートに明示的に型指定した場合にADLで見つからない問題を修正
+# 関数テンプレートに明示的に型指定した場合にADLで見つからない問題を修正 [P0846R0]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>丸カッコの値リストからの集成体初期化を許可 [P0960R3] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/allow_initializing_aggregates_from_a_parenthesized_list_of_values.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/allow_initializing_aggregates_from_a_parenthesized_list_of_values.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/allow_initializing_aggregates_from_a_parenthesized_list_of_values.md b/lang/cpp20/allow_initializing_aggregates_from_a_parenthesized_list_of_values.md
index e643696d0..91b855942 100644
--- a/lang/cpp20/allow_initializing_aggregates_from_a_parenthesized_list_of_values.md
+++ b/lang/cpp20/allow_initializing_aggregates_from_a_parenthesized_list_of_values.md
@@ -1,4 +1,4 @@
-# 丸カッコの値リストからの集成体初期化を許可
+# 丸カッコの値リストからの集成体初期化を許可 [P0960R3]
 
 * cpp20[meta cpp]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ラムダ式のキャプチャとして[=, this]を許可する [P0409R2] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/allow_lambda_capture_equal_this.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/allow_lambda_capture_equal_this.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/allow_lambda_capture_equal_this.md b/lang/cpp20/allow_lambda_capture_equal_this.md
index 58a60e79d..715e4dbad 100644
--- a/lang/cpp20/allow_lambda_capture_equal_this.md
+++ b/lang/cpp20/allow_lambda_capture_equal_this.md
@@ -1,4 +1,4 @@
-# ラムダ式のキャプチャとして[=, this]を許可する
+# ラムダ式のキャプチャとして[=, this]を許可する [P0409R2]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ラムダ式の初期化キャプチャでのパック展開を許可 [P0780R2] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/allow_pack_expansion_in_lambda_init_capture.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/allow_pack_expansion_in_lambda_init_capture.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/allow_pack_expansion_in_lambda_init_capture.md b/lang/cpp20/allow_pack_expansion_in_lambda_init_capture.md
index 4fb0076d6..eaf47d8df 100644
--- a/lang/cpp20/allow_pack_expansion_in_lambda_init_capture.md
+++ b/lang/cpp20/allow_pack_expansion_in_lambda_init_capture.md
@@ -1,4 +1,4 @@
-# ラムダ式の初期化キャプチャでのパック展開を許可
+# ラムダ式の初期化キャプチャでのパック展開を許可 [P0780R2]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>friend指定された関数内から構造化束縛を使用して非公開メンバ変数にアクセスすることを許可 [P0969R0] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/allow_structured_bindings_to_accessible_members.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/allow_structured_bindings_to_accessible_members.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/allow_structured_bindings_to_accessible_members.md b/lang/cpp20/allow_structured_bindings_to_accessible_members.md
index 8568f6a9e..a66e450c0 100644
--- a/lang/cpp20/allow_structured_bindings_to_accessible_members.md
+++ b/lang/cpp20/allow_structured_bindings_to_accessible_members.md
@@ -1,4 +1,4 @@
-# friend指定された関数内から構造化束縛を使用して非公開メンバ変数にアクセスすることを許可
+# friend指定された関数内から構造化束縛を使用して非公開メンバ変数にアクセスすることを許可 [P0969R0]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>定数式からの仮想関数の呼び出しを許可 [P1064R0] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/allow_virtual_function_calls_in_constant_expressions.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/allow_virtual_function_calls_in_constant_expressions.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/allow_virtual_function_calls_in_constant_expressions.md b/lang/cpp20/allow_virtual_function_calls_in_constant_expressions.md
index 8bbe3cee9..8f9620e9b 100644
--- a/lang/cpp20/allow_virtual_function_calls_in_constant_expressions.md
+++ b/lang/cpp20/allow_virtual_function_calls_in_constant_expressions.md
@@ -1,4 +1,4 @@
-# 定数式からの仮想関数の呼び出しを許可
+# 定数式からの仮想関数の呼び出しを許可 [P1064R0]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>定数式での`dynamic_cast`、多態的な`typeid`を許可 [P1327R1] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/allowing_dynamic_cast_polymorphic_typeid_in_constant_expressions.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/allowing_dynamic_cast_polymorphic_typeid_in_constant_expressions.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/allowing_dynamic_cast_polymorphic_typeid_in_constant_expressions.md b/lang/cpp20/allowing_dynamic_cast_polymorphic_typeid_in_constant_expressions.md
index 26f0b526f..71a567688 100644
--- a/lang/cpp20/allowing_dynamic_cast_polymorphic_typeid_in_constant_expressions.md
+++ b/lang/cpp20/allowing_dynamic_cast_polymorphic_typeid_in_constant_expressions.md
@@ -1,4 +1,4 @@
-# 定数式での`dynamic_cast`、多態的な`typeid`を許可
+# 定数式での`dynamic_cast`、多態的な`typeid`を許可 [P1327R1]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>new式での配列要素数の推論 [P1009R2] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/array_size_deduction_in_new-expressions.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/array_size_deduction_in_new-expressions.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/array_size_deduction_in_new-expressions.md b/lang/cpp20/array_size_deduction_in_new-expressions.md
index 9916a0ea4..caa300bfa 100644
--- a/lang/cpp20/array_size_deduction_in_new-expressions.md
+++ b/lang/cpp20/array_size_deduction_in_new-expressions.md
@@ -1,4 +1,4 @@
-# new式での配列要素数の推論
+# new式での配列要素数の推論 [P1009R2]
 
 * cpp20[meta cpp]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>定数式内での共用体のアクティブメンバの変更を許可 [P1330R0] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/changing_the_active_member_of_a_union_inside_constexpr.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/changing_the_active_member_of_a_union_inside_constexpr.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/changing_the_active_member_of_a_union_inside_constexpr.md b/lang/cpp20/changing_the_active_member_of_a_union_inside_constexpr.md
index 96cfa1b72..333be083c 100644
--- a/lang/cpp20/changing_the_active_member_of_a_union_inside_constexpr.md
+++ b/lang/cpp20/changing_the_active_member_of_a_union_inside_constexpr.md
@@ -1,4 +1,4 @@
-# 定数式内での共用体のアクティブメンバの変更を許可
+# 定数式内での共用体のアクティブメンバの変更を許可 [P1330R0]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>UTF-8エンコーディングされた文字の型として`char8_t`を追加 [P0482R6] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/char8_t.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/char8_t.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/char8_t.md b/lang/cpp20/char8_t.md
index 2d412d3fd..68fb50beb 100644
--- a/lang/cpp20/char8_t.md
+++ b/lang/cpp20/char8_t.md
@@ -1,4 +1,4 @@
-# UTF-8エンコーディングされた文字の型として`char8_t`を追加
+# UTF-8エンコーディングされた文字の型として`char8_t`を追加 [P0482R6]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>抽象型のチェック [P0929R2] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/checking_for_abstract_class_types.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/checking_for_abstract_class_types.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/checking_for_abstract_class_types.md b/lang/cpp20/checking_for_abstract_class_types.md
index cf8b4f572..e4000dd54 100644
--- a/lang/cpp20/checking_for_abstract_class_types.md
+++ b/lang/cpp20/checking_for_abstract_class_types.md
@@ -1,4 +1,4 @@
-# 抽象型のチェック
+# 抽象型のチェック [P0929R2]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>集成体クラステンプレートのテンプレート引数推論 [P1816R0] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/class_template_argument_deduction_for_aggregates.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/class_template_argument_deduction_for_aggregates.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/class_template_argument_deduction_for_aggregates.md b/lang/cpp20/class_template_argument_deduction_for_aggregates.md
index 87ebb8287..21fd47e94 100644
--- a/lang/cpp20/class_template_argument_deduction_for_aggregates.md
+++ b/lang/cpp20/class_template_argument_deduction_for_aggregates.md
@@ -1,4 +1,4 @@
-# 集成体クラステンプレートのテンプレート引数推論
+# 集成体クラステンプレートのテンプレート引数推論 [P1816R0]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>エイリアステンプレート経由でのクラステンプレートのテンプレート引数推論 [P1814R0] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/class_template_argument_deduction_for_alias_templates.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/class_template_argument_deduction_for_alias_templates.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/class_template_argument_deduction_for_alias_templates.md b/lang/cpp20/class_template_argument_deduction_for_alias_templates.md
index 4fdc9b843..9eccf5faf 100644
--- a/lang/cpp20/class_template_argument_deduction_for_alias_templates.md
+++ b/lang/cpp20/class_template_argument_deduction_for_alias_templates.md
@@ -1,4 +1,4 @@
-# エイリアステンプレート経由でのクラステンプレートのテンプレート引数推論
+# エイリアステンプレート経由でのクラステンプレートのテンプレート引数推論 [P1814R0]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>非型テンプレートパラメータとしてクラス型を許可する [P0732R2] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/class_types_in_non-type_template_parameters.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/class_types_in_non-type_template_parameters.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/class_types_in_non-type_template_parameters.md b/lang/cpp20/class_types_in_non-type_template_parameters.md
index c44d566f7..eea126fa7 100644
--- a/lang/cpp20/class_types_in_non-type_template_parameters.md
+++ b/lang/cpp20/class_types_in_non-type_template_parameters.md
@@ -1,4 +1,4 @@
-# 非型テンプレートパラメータとしてクラス型を許可する
+# 非型テンプレートパラメータとしてクラス型を許可する [P0732R2]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンセプト [P0734R0] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/concepts.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/concepts.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/concepts.md b/lang/cpp20/concepts.md
index 77d6a159f..340bd7dc9 100644
--- a/lang/cpp20/concepts.md
+++ b/lang/cpp20/concepts.md
@@ -1,4 +1,4 @@
-# コンセプト
+# コンセプト [P0734R0]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>一貫比較 [P0515R3] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/consistent_comparison.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/consistent_comparison.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/consistent_comparison.md b/lang/cpp20/consistent_comparison.md
index dc9123b0b..53209f1cd 100644
--- a/lang/cpp20/consistent_comparison.md
+++ b/lang/cpp20/consistent_comparison.md
@@ -1,4 +1,4 @@
-# 一貫比較
+# 一貫比較 [P0515R3]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンパイル時初期化を強制する`constinit`キーワードを追加 [P1143R2] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/constinit.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/constinit.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/constinit.md b/lang/cpp20/constinit.md
index 343186f49..82f66caeb 100644
--- a/lang/cpp20/constinit.md
+++ b/lang/cpp20/constinit.md
@@ -1,4 +1,4 @@
-# コンパイル時初期化を強制する`constinit`キーワードを追加
+# コンパイル時初期化を強制する`constinit`キーワードを追加 [P1143R2]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ポインタから`bool`への変換を縮小変換とする [P1957R2] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/converting_from_pointer_to_bool_should_be_considered_narrowing.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/converting_from_pointer_to_bool_should_be_considered_narrowing.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/converting_from_pointer_to_bool_should_be_considered_narrowing.md b/lang/cpp20/converting_from_pointer_to_bool_should_be_considered_narrowing.md
index 2df22bf8c..0cf4402aa 100644
--- a/lang/cpp20/converting_from_pointer_to_bool_should_be_considered_narrowing.md
+++ b/lang/cpp20/converting_from_pointer_to_bool_should_be_considered_narrowing.md
@@ -1,4 +1,4 @@
-# ポインタから`bool`への変換を縮小変換とする
+# ポインタから`bool`への変換を縮小変換とする [P1957R2]
 * cpp20[meta cpp]
 
 ## 概要
@@ -64,4 +64,4 @@ std::variant&amp;lt;bool, int&amp;gt; v = b[1]; // boolを保持して構築
 
 - [P1957R2 Converting from `T*` to `bool` should be considered narrowing (re: US 212)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p1957r2.html)
 - [LWG Issue 3228. Surprising `variant` construction](https://cplusplus.github.io/LWG/issue3228)
-- [P0608R3 A sane `variant` converting constructor](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0608r3.html)
\ No newline at end of file
+- [P0608R3 A sane `variant` converting constructor](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0608r3.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コルーチン [P0912R5] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/coroutines.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/coroutines.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/coroutines.md b/lang/cpp20/coroutines.md
index 133f5dce0..cc7d161e0 100644
--- a/lang/cpp20/coroutines.md
+++ b/lang/cpp20/coroutines.md
@@ -1,4 +1,4 @@
-# コルーチン
+# コルーチン [P0912R5]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>状態を持たないラムダ式を、デフォルト構築可能、代入可能とする [P0624R2] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/default_constructible_and_assignable_stateless_lambdas.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/default_constructible_and_assignable_stateless_lambdas.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/default_constructible_and_assignable_stateless_lambdas.md b/lang/cpp20/default_constructible_and_assignable_stateless_lambdas.md
index 54c60d3ce..1420fbd9f 100644
--- a/lang/cpp20/default_constructible_and_assignable_stateless_lambdas.md
+++ b/lang/cpp20/default_constructible_and_assignable_stateless_lambdas.md
@@ -1,4 +1,4 @@
-# 状態を持たないラムダ式を、デフォルト構築可能、代入可能とする
+# 状態を持たないラムダ式を、デフォルト構築可能、代入可能とする [P0624R2]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ビットフィールドのメンバ変数初期化 [P0683R1] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/default_member_initializers_for_bit_fields.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/default_member_initializers_for_bit_fields.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/default_member_initializers_for_bit_fields.md b/lang/cpp20/default_member_initializers_for_bit_fields.md
index 71f625e64..b4edb5594 100644
--- a/lang/cpp20/default_member_initializers_for_bit_fields.md
+++ b/lang/cpp20/default_member_initializers_for_bit_fields.md
@@ -1,4 +1,4 @@
-# ビットフィールドのメンバ変数初期化
+# ビットフィールドのメンバ変数初期化 [P0683R1]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>[=]によるthisの暗黙のキャプチャを非推奨化 [P0806R2] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/deprecate_implicit_capture_of_this_via_defcopy.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/deprecate_implicit_capture_of_this_via_defcopy.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/deprecate_implicit_capture_of_this_via_defcopy.md b/lang/cpp20/deprecate_implicit_capture_of_this_via_defcopy.md
index c557cb099..412554fab 100644
--- a/lang/cpp20/deprecate_implicit_capture_of_this_via_defcopy.md
+++ b/lang/cpp20/deprecate_implicit_capture_of_this_via_defcopy.md
@@ -1,4 +1,4 @@
-# [=]によるthisの暗黙のキャプチャを非推奨化
+# [=]によるthisの暗黙のキャプチャを非推奨化 [P0806R2]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>PODを非推奨化 [P0767R1] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/deprecate_pod.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/deprecate_pod.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;PODを非推奨化 [P0767R1]&lt;/span&gt;&lt;span class=&#34;cpp cpp20&#34; title=&#34;C++20で追加&#34;&gt;(C++20)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;../../reference/type_traits/is_pod.html&#34;&gt;POD (Plain Old Data) という型の分類&lt;/a&gt;は、C++11において&lt;a href=&#34;../../reference/type_traits/is_trivial.html&#34;&gt;トリビアル型&lt;/a&gt;と&lt;a href=&#34;../../reference/type_traits/is_standard_layout.html&#34;&gt;スタンダードレイアウト型&lt;/a&gt;に用語が分割された。&lt;/p&gt;
&lt;p&gt;C++20では規格の文面に残っていた「POD」の使用をやめ、スタンダードレイアウト型などのほかの型分類に置き換えた。&lt;/p&gt;
&lt;h2&gt;関連項目&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits/is_pod.html&#34;&gt;is_pod&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits/aligned_storage.html&#34;&gt;aligned_storage&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;../../reference/type_traits/aligned_union.html&#34;&gt;aligned_union&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;../../reference/cstddef/max_align_t.html&#34;&gt;max_align_t&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0767r1.html&#34; target=&#34;_blank&#34;&gt;P0767R1 Deprecate POD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2342.htm&#34; target=&#34;_blank&#34;&gt;N2342 POD&#39;s Revisited; Resolving Core Issue 568 (Revision 5)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://faithandbrave.hateblo.jp/entry/20081127/1227777378&#34; target=&#34;_blank&#34;&gt;C++0x POD再考 - Faith and Brave - C++で遊ぼう&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;C++11においてPODという用語が分割された文書&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>添字演算子内でのカンマ演算子の使用を非推奨化 [P1161R3] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/deprecate_uses_of_the_comma_operator_in_subscripting_expressions.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/deprecate_uses_of_the_comma_operator_in_subscripting_expressions.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/deprecate_uses_of_the_comma_operator_in_subscripting_expressions.md b/lang/cpp20/deprecate_uses_of_the_comma_operator_in_subscripting_expressions.md
index 46440463d..b85ae365f 100644
--- a/lang/cpp20/deprecate_uses_of_the_comma_operator_in_subscripting_expressions.md
+++ b/lang/cpp20/deprecate_uses_of_the_comma_operator_in_subscripting_expressions.md
@@ -1,4 +1,4 @@
-# 添字演算子内でのカンマ演算子の使用を非推奨化
+# 添字演算子内でのカンマ演算子の使用を非推奨化 [P1161R3]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ほとんどの`volatile`を非推奨化 [P1152R4] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/deprecating_volatile.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/deprecating_volatile.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/deprecating_volatile.md b/lang/cpp20/deprecating_volatile.md
index 92c5e983f..484101b07 100644
--- a/lang/cpp20/deprecating_volatile.md
+++ b/lang/cpp20/deprecating_volatile.md
@@ -1,4 +1,4 @@
-# ほとんどの`volatile`を非推奨化
+# ほとんどの`volatile`を非推奨化 [P1152R4]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>指示付き初期化 [P0329R4] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/designated_initialization.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/designated_initialization.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/designated_initialization.md b/lang/cpp20/designated_initialization.md
index 46ba380d3..21eb9b338 100644
--- a/lang/cpp20/designated_initialization.md
+++ b/lang/cpp20/designated_initialization.md
@@ -1,4 +1,4 @@
-# 指示付き初期化
+# 指示付き初期化 [P0329R4]
 
 * cpp20[meta cpp]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>型の文脈でtypenameの省略を許可 [P0634R3] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/down_with_typename.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/down_with_typename.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/down_with_typename.md b/lang/cpp20/down_with_typename.md
index 4f956646e..7d86fa898 100644
--- a/lang/cpp20/down_with_typename.md
+++ b/lang/cpp20/down_with_typename.md
@@ -1,4 +1,4 @@
-# 型の文脈でtypenameの省略を許可
+# 型の文脈でtypenameの省略を許可 [P0634R3]
 
 * cpp20[meta cpp]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>可変長データを扱うクラスの効率的なdelete [P0722R3] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/efficient_sized_delete_for_variable_sized_classes.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/efficient_sized_delete_for_variable_sized_classes.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/efficient_sized_delete_for_variable_sized_classes.md b/lang/cpp20/efficient_sized_delete_for_variable_sized_classes.md
index 2d16ae931..246e37c9a 100644
--- a/lang/cpp20/efficient_sized_delete_for_variable_sized_classes.md
+++ b/lang/cpp20/efficient_sized_delete_for_variable_sized_classes.md
@@ -1,4 +1,4 @@
-# 可変長データを扱うクラスの効率的な`delete`
+# 可変長データを扱うクラスの効率的なdelete [P0722R3]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexpr関数内で未評価のインラインアセンブリを許可することによる組み込み関数のconstexpr有効化 [P1668R1] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/enabling_constexpr_intrinsics_by_permitting_unevaluated_inline-assembly_in_constexpr_functions.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/enabling_constexpr_intrinsics_by_permitting_unevaluated_inline-assembly_in_constexpr_functions.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/enabling_constexpr_intrinsics_by_permitting_unevaluated_inline-assembly_in_constexpr_functions.md b/lang/cpp20/enabling_constexpr_intrinsics_by_permitting_unevaluated_inline-assembly_in_constexpr_functions.md
index 69f592443..2a996c751 100644
--- a/lang/cpp20/enabling_constexpr_intrinsics_by_permitting_unevaluated_inline-assembly_in_constexpr_functions.md
+++ b/lang/cpp20/enabling_constexpr_intrinsics_by_permitting_unevaluated_inline-assembly_in_constexpr_functions.md
@@ -1,4 +1,4 @@
-# constexpr関数内で未評価のインラインアセンブリを許可することによる組み込み関数のconstexpr有効化
+# constexpr関数内で未評価のインラインアセンブリを許可することによる組み込み関数のconstexpr有効化 [P1668R1]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>関数を条件付きでexplicitにする構文を追加 [P0892R2] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/explicit_bool.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/explicit_bool.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/explicit_bool.md b/lang/cpp20/explicit_bool.md
index 1981098fd..344d574f9 100644
--- a/lang/cpp20/explicit_bool.md
+++ b/lang/cpp20/explicit_bool.md
@@ -1,4 +1,4 @@
-# 関数を条件付きでexplicitにする構文を追加
+# 関数を条件付きでexplicitにする構文を追加 [P0892R2]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>構造化束縛を拡張して通常の変数宣言のように使用できるようにする [P1091R3] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/extending_structured_bindings_to_be_more_like_variable_declarations.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/extending_structured_bindings_to_be_more_like_variable_declarations.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/extending_structured_bindings_to_be_more_like_variable_declarations.md b/lang/cpp20/extending_structured_bindings_to_be_more_like_variable_declarations.md
index 75c5dbe23..ae1d35a1e 100644
--- a/lang/cpp20/extending_structured_bindings_to_be_more_like_variable_declarations.md
+++ b/lang/cpp20/extending_structured_bindings_to_be_more_like_variable_declarations.md
@@ -1,4 +1,4 @@
-# 構造化束縛を拡張して通常の変数宣言のように使用できるようにする
+# 構造化束縛を拡張して通常の変数宣言のように使用できるようにする [P1091R3]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ジェネリックラムダのテンプレート構文 [P0428R2] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/familiar_template_syntax_for_generic_lambdas.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/familiar_template_syntax_for_generic_lambdas.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/familiar_template_syntax_for_generic_lambdas.md b/lang/cpp20/familiar_template_syntax_for_generic_lambdas.md
index 8cf5bea35..1e91bb228 100644
--- a/lang/cpp20/familiar_template_syntax_for_generic_lambdas.md
+++ b/lang/cpp20/familiar_template_syntax_for_generic_lambdas.md
@@ -1,4 +1,4 @@
-# ジェネリックラムダのテンプレート構文
+# ジェネリックラムダのテンプレート構文 [P0428R2]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>const修飾されたメンバポインタの制限を修正 [P0704R1] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/fixing_const_qualified_pointers_to_members.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/fixing_const_qualified_pointers_to_members.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/fixing_const_qualified_pointers_to_members.md b/lang/cpp20/fixing_const_qualified_pointers_to_members.md
index b0aa89c66..e5781123a 100644
--- a/lang/cpp20/fixing_const_qualified_pointers_to_members.md
+++ b/lang/cpp20/fixing_const_qualified_pointers_to_members.md
@@ -1,4 +1,4 @@
-# const修飾されたメンバポインタの制限を修正
+# const修飾されたメンバポインタの制限を修正 [P0704R1]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>即時関数 [P1073R3] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/immediate_functions.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/immediate_functions.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/immediate_functions.md b/lang/cpp20/immediate_functions.md
index c0b8a9c57..94dc24858 100644
--- a/lang/cpp20/immediate_functions.md
+++ b/lang/cpp20/immediate_functions.md
@@ -1,4 +1,4 @@
-# 即時関数
+# 即時関数 [P1073R3]
 
 * cpp20[meta cpp]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>空オブジェクトに対する最適化を支援する属性[[no_unique_address]] [P0840R2] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/language_support_for_empty_objects.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/language_support_for_empty_objects.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/language_support_for_empty_objects.md b/lang/cpp20/language_support_for_empty_objects.md
index 6901d033c..14d3c4804 100644
--- a/lang/cpp20/language_support_for_empty_objects.md
+++ b/lang/cpp20/language_support_for_empty_objects.md
@@ -1,4 +1,4 @@
-# 空オブジェクトに対する最適化を支援する属性[[no_unique_address]]
+# 空オブジェクトに対する最適化を支援する属性[[no_unique_address]] [P0840R2]
 
 * cpp20[meta cpp]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>評価されない文脈での定数式評価によって特殊メンバ関数がインスタンス化されることを規定 [P0859R0] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/less_eager_instantiation_of_constexpr_functions.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/less_eager_instantiation_of_constexpr_functions.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/less_eager_instantiation_of_constexpr_functions.md b/lang/cpp20/less_eager_instantiation_of_constexpr_functions.md
index f9059335c..f1fc80c78 100644
--- a/lang/cpp20/less_eager_instantiation_of_constexpr_functions.md
+++ b/lang/cpp20/less_eager_instantiation_of_constexpr_functions.md
@@ -1,4 +1,4 @@
-# 評価されない文脈での定数式評価によって特殊メンバ関数がインスタンス化されることを規定
+# 評価されない文脈での定数式評価によって特殊メンバ関数がインスタンス化されることを規定 [P0859R0]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>確率が高い分岐と低い分岐を伝える属性 [[likely]], [[unlikely]] [P0479R5] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/likely_and_unlikely_attributes.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/likely_and_unlikely_attributes.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/likely_and_unlikely_attributes.md b/lang/cpp20/likely_and_unlikely_attributes.md
index 378e98ad6..78625c538 100644
--- a/lang/cpp20/likely_and_unlikely_attributes.md
+++ b/lang/cpp20/likely_and_unlikely_attributes.md
@@ -1,4 +1,4 @@
-# 確率が高い分岐と低い分岐を伝える属性 [[likely]], [[unlikely]]
+# 確率が高い分岐と低い分岐を伝える属性 [[likely]], [[unlikely]] [P0479R5]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>char16_tとchar32_tの文字・文字列リテラルを、文字コードUTF-16/32に規定 [P1041R4] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/make_char16t_char32t_string_literals_be_utf16_32.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/make_char16t_char32t_string_literals_be_utf16_32.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;char16_tとchar32_tの文字・文字列リテラルを、文字コードUTF-16/32に規定 [P1041R4]&lt;/span&gt;&lt;span class=&#34;cpp cpp20&#34; title=&#34;C++20で追加&#34;&gt;(C++20)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;C++11で追加された文字型&lt;a href=&#34;../cpp11/char16_32.html&#34;&gt;&lt;code&gt;char16_t&lt;/code&gt;と&lt;code&gt;char32_t&lt;/code&gt;&lt;/a&gt;の文字・文字列リテラルの文字コード、C++20からはUTF-16とUTF-32であることが規定される。&lt;/p&gt;
&lt;p&gt;これまでは、以下のような仕様であった：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;uchar&amp;gt;&lt;/code&gt;ヘッダでマクロ&lt;code&gt;__STDC_UTF_16__&lt;/code&gt;が定義される場合、&lt;code&gt;char16_t&lt;/code&gt;型の値はUTF-16の妥当なコードポイントを持つ。そうでない場合、&lt;code&gt;char16_t&lt;/code&gt;型の値は実装定義の文字コードとなる。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;uchar&amp;gt;&lt;/code&gt;ヘッダでマクロ&lt;code&gt;__STDC_UTF_32__&lt;/code&gt;が定義される場合、&lt;code&gt;char32_t&lt;/code&gt;型の値はUTF-32の妥当なコードポイントを持つ。そうでない場合、&lt;code&gt;char32_t&lt;/code&gt;型の値は実装定義の文字コードとなる。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;C++20では、無条件にUTF-16とUTF-32であることが規定される。&lt;/p&gt;
&lt;p&gt;なお、&lt;code&gt;u8&lt;/code&gt;プレフィックスをつけた文字・文字列リテラルは、UTF-8であることがこれまでに規定されていた。&lt;/p&gt;
&lt;h2&gt;この機能が必要になった背景・経緯&lt;/h2&gt;
&lt;p&gt;これまで、&lt;code&gt;&amp;lt;uchar&amp;gt;&lt;/code&gt;ヘッダのマクロ&lt;code&gt;__STDC_UTF_16__&lt;/code&gt;と&lt;code&gt;__STDC_UTF_32__&lt;/code&gt;が定義されている場合にのみ、&lt;code&gt;char16_t&lt;/code&gt;と&lt;code&gt;char32_t&lt;/code&gt;はUTF-16/UTF-32エンコーディングであると規定されていた。&lt;/p&gt;
&lt;p&gt;しかし、これらが定義されなかった場合にコンパイラがほかのエンコーディングを選択することが疑わしかった。また、&lt;code&gt;char16_t&lt;/code&gt;の仕様として「サロゲートペア」が含まれているが、その概念をもつ他のよく知られた文字コードはない。単一の文字を32ビットで表現する他のよく知られた文字コードもない。&lt;/p&gt;
&lt;p&gt;実際にはすべての実装でこれらの文字・文字列リテラルはUTF-16とUTF-32にエンコーディングされるため、要件を示すだけではなく、より明確にするために、&lt;code&gt;char16_t&lt;/code&gt;と&lt;code&gt;char32_t&lt;/code&gt;の文字・文字列リテラルがUTF-16とUTF-32文字コードであることを規定する。&lt;/p&gt;
&lt;h2&gt;関連項目&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../cpp11/char16_32.html&#34;&gt;C++11 &lt;code&gt;char16_t&lt;/code&gt;と&lt;code&gt;char32_t&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../cpp11/utf8_string_literals.html&#34;&gt;C++11 UTF-8文字列リテラル&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../cpp17/utf8_character_literals.html&#34;&gt;C++17 UTF-8文字リテラル&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1041r4.html&#34; target=&#34;_blank&#34;&gt;P1041R4 Make &lt;code&gt;char16_t&lt;/code&gt;/&lt;code&gt;char32_t&lt;/code&gt; string literals be UTF-16/32&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>モジュール [P1103R3] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/modules.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/modules.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/modules.md b/lang/cpp20/modules.md
index dd9cf2a31..7bcd78598 100644
--- a/lang/cpp20/modules.md
+++ b/lang/cpp20/modules.md
@@ -1,4 +1,4 @@
-# モジュール
+# モジュール [P1103R3]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>可変サイズをもつコンテナのconstexpr化 [P0784R7] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/more_constexpr_containers.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/more_constexpr_containers.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/more_constexpr_containers.md b/lang/cpp20/more_constexpr_containers.md
index 78d291f09..98cd1f086 100644
--- a/lang/cpp20/more_constexpr_containers.md
+++ b/lang/cpp20/more_constexpr_containers.md
@@ -1,4 +1,4 @@
-# 可変サイズをもつコンテナのconstexpr化
+# 可変サイズをもつコンテナのconstexpr化 [P0784R7]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>入れ子名前空間定義でのインライン名前空間 [P1094R2] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/nested_inline_mamespaces.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/nested_inline_mamespaces.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/nested_inline_mamespaces.md b/lang/cpp20/nested_inline_mamespaces.md
index 759e6553a..7b91ac6dd 100644
--- a/lang/cpp20/nested_inline_mamespaces.md
+++ b/lang/cpp20/nested_inline_mamespaces.md
@@ -1,4 +1,4 @@
-# 入れ子名前空間定義でのインライン名前空間
+# 入れ子名前空間定義でのインライン名前空間 [P1094R2]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>[[nodiscard]]属性に理由となる文字列を付加できるようにする [P1301R4] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/nodiscard_should_have_a_reason.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/nodiscard_should_have_a_reason.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/nodiscard_should_have_a_reason.md b/lang/cpp20/nodiscard_should_have_a_reason.md
index f878d2e22..8f8d86e37 100644
--- a/lang/cpp20/nodiscard_should_have_a_reason.md
+++ b/lang/cpp20/nodiscard_should_have_a_reason.md
@@ -1,4 +1,4 @@
-# [[nodiscard]]属性に理由となる文字列を付加できるようにする
+# [[nodiscard]]属性に理由となる文字列を付加できるようにする [P1301R4]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>要素数不明の配列への変換を許可 [P0388R4] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/permit_conversions_to_arrays_of_unknown_bound.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/permit_conversions_to_arrays_of_unknown_bound.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/permit_conversions_to_arrays_of_unknown_bound.md b/lang/cpp20/permit_conversions_to_arrays_of_unknown_bound.md
index b540cc2b1..cf3a5780c 100644
--- a/lang/cpp20/permit_conversions_to_arrays_of_unknown_bound.md
+++ b/lang/cpp20/permit_conversions_to_arrays_of_unknown_bound.md
@@ -1,4 +1,4 @@
-# 要素数不明の配列への変換を許可
+# 要素数不明の配列への変換を許可 [P0388R4]
 
 * cpp20[meta cpp]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexpr関数内でのトリビアルなデフォルト初期化を許可 [P1331R2] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/permitting_trivial_default_initialization_in_constexpr_contexts.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/permitting_trivial_default_initialization_in_constexpr_contexts.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/permitting_trivial_default_initialization_in_constexpr_contexts.md b/lang/cpp20/permitting_trivial_default_initialization_in_constexpr_contexts.md
index d25f9c7fe..268c00f4c 100644
--- a/lang/cpp20/permitting_trivial_default_initialization_in_constexpr_contexts.md
+++ b/lang/cpp20/permitting_trivial_default_initialization_in_constexpr_contexts.md
@@ -1,4 +1,4 @@
-# constexpr関数内でのトリビアルなデフォルト初期化を許可
+# constexpr関数内でのトリビアルなデフォルト初期化を許可 [P1331R2]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ユーザー宣言したコンストラクタを持つクラスの集成体初期化を禁止 [P1008R1] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/prohibit_aggregates_with_user-declared_constructors.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/prohibit_aggregates_with_user-declared_constructors.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/prohibit_aggregates_with_user-declared_constructors.md b/lang/cpp20/prohibit_aggregates_with_user-declared_constructors.md
index d1a57ce80..5c638117e 100644
--- a/lang/cpp20/prohibit_aggregates_with_user-declared_constructors.md
+++ b/lang/cpp20/prohibit_aggregates_with_user-declared_constructors.md
@@ -1,4 +1,4 @@
-# ユーザー宣言したコンストラクタを持つクラスの集成体初期化を禁止
+# ユーザー宣言したコンストラクタを持つクラスの集成体初期化を禁止 [P1008R1]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>初期化式をともなう範囲for文 [P0614R1] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/range-based_for_statements_with_initializer.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/range-based_for_statements_with_initializer.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/range-based_for_statements_with_initializer.md b/lang/cpp20/range-based_for_statements_with_initializer.md
index 33db92eb7..af28928cc 100644
--- a/lang/cpp20/range-based_for_statements_with_initializer.md
+++ b/lang/cpp20/range-based_for_statements_with_initializer.md
@@ -1,4 +1,4 @@
-# 初期化式をともなう範囲for文
+# 初期化式をともなう範囲for文 [P0614R1]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>構造化束縛した変数の参照キャプチャを許可 [P1381R1] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/reference_capture_of_structured_bindings.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/reference_capture_of_structured_bindings.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/reference_capture_of_structured_bindings.md b/lang/cpp20/reference_capture_of_structured_bindings.md
index 25230502c..6c436a215 100644
--- a/lang/cpp20/reference_capture_of_structured_bindings.md
+++ b/lang/cpp20/reference_capture_of_structured_bindings.md
@@ -1,4 +1,4 @@
-# 構造化束縛した変数の参照キャプチャを許可
+# 構造化束縛した変数の参照キャプチャを許可 [P1381R1]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>範囲for文がカスタマイゼーションポイントを見つけるルールを緩和 [P0962R1] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/relaxing_the_range_for_loop_customization_point_finding_rules.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/relaxing_the_range_for_loop_customization_point_finding_rules.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/relaxing_the_range_for_loop_customization_point_finding_rules.md b/lang/cpp20/relaxing_the_range_for_loop_customization_point_finding_rules.md
index a70582faf..f1dc654f8 100644
--- a/lang/cpp20/relaxing_the_range_for_loop_customization_point_finding_rules.md
+++ b/lang/cpp20/relaxing_the_range_for_loop_customization_point_finding_rules.md
@@ -1,4 +1,4 @@
-# 範囲for文がカスタマイゼーションポイントを見つけるルールを緩和
+# 範囲for文がカスタマイゼーションポイントを見つけるルールを緩和 [P0962R1]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>構造化束縛がカスタマイゼーションポイントを見つけるルールを緩和 [P0961R1] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/relaxing_the_structured_bindings_customization_point_finding_rules.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/relaxing_the_structured_bindings_customization_point_finding_rules.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/relaxing_the_structured_bindings_customization_point_finding_rules.md b/lang/cpp20/relaxing_the_structured_bindings_customization_point_finding_rules.md
index e5a9bef4a..85607bc22 100644
--- a/lang/cpp20/relaxing_the_structured_bindings_customization_point_finding_rules.md
+++ b/lang/cpp20/relaxing_the_structured_bindings_customization_point_finding_rules.md
@@ -1,4 +1,4 @@
-# 構造化束縛がカスタマイゼーションポイントを見つけるルールを緩和
+# 構造化束縛がカスタマイゼーションポイントを見つけるルールを緩和 [P0961R1]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>デフォルトのコピーコンストラクタと非constなコンストラクタが衝突する問題を修正 [P0641R2] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/resolving_const_mismatch_with_defaulted_copy_constructor.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/resolving_const_mismatch_with_defaulted_copy_constructor.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/resolving_const_mismatch_with_defaulted_copy_constructor.md b/lang/cpp20/resolving_const_mismatch_with_defaulted_copy_constructor.md
index 3e7fc3e37..06ff7ff03 100644
--- a/lang/cpp20/resolving_const_mismatch_with_defaulted_copy_constructor.md
+++ b/lang/cpp20/resolving_const_mismatch_with_defaulted_copy_constructor.md
@@ -1,4 +1,4 @@
-# デフォルトのコピーコンストラクタと非constなコンストラクタが衝突する問題を修正
+# デフォルトのコピーコンストラクタと非constなコンストラクタが衝突する問題を修正 [P0641R2]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>符号付き整数型が2の補数表現であることを規定 [P1236R1] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/signed_integers_are_twos_complement.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/signed_integers_are_twos_complement.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/signed_integers_are_twos_complement.md b/lang/cpp20/signed_integers_are_twos_complement.md
index 125151a46..68606c12e 100644
--- a/lang/cpp20/signed_integers_are_twos_complement.md
+++ b/lang/cpp20/signed_integers_are_twos_complement.md
@@ -1,4 +1,4 @@
-# 符号付き整数型が2の補数表現であることを規定
+# 符号付き整数型が2の補数表現であることを規定 [P1236R1]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>暗黙のラムダキャプチャを簡略化 [P0588R1] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/simplifying_implicit_lambda_capture.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/simplifying_implicit_lambda_capture.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/simplifying_implicit_lambda_capture.md b/lang/cpp20/simplifying_implicit_lambda_capture.md
index 0b54668fd..9e7e3eae0 100644
--- a/lang/cpp20/simplifying_implicit_lambda_capture.md
+++ b/lang/cpp20/simplifying_implicit_lambda_capture.md
@@ -1,4 +1,4 @@
-# 暗黙のラムダキャプチャを簡略化
+# 暗黙のラムダキャプチャを簡略化 [P0588R1]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexpr関数内でのtry-catchブロックを許可 [P1002R1] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/try-catch_blocks_in_constexpr_functions.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/try-catch_blocks_in_constexpr_functions.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/try-catch_blocks_in_constexpr_functions.md b/lang/cpp20/try-catch_blocks_in_constexpr_functions.md
index 4079a64a8..c33558df5 100644
--- a/lang/cpp20/try-catch_blocks_in_constexpr_functions.md
+++ b/lang/cpp20/try-catch_blocks_in_constexpr_functions.md
@@ -1,4 +1,4 @@
-# constexpr関数内でのtry-catchブロックを許可
+# constexpr関数内でのtry-catchブロックを許可 [P1002R1]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>スコープ付き列挙型のusing宣言 [P1099R5] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/using_enum.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/using_enum.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/using_enum.md b/lang/cpp20/using_enum.md
index c4e424085..cde6bcb74 100644
--- a/lang/cpp20/using_enum.md
+++ b/lang/cpp20/using_enum.md
@@ -1,4 +1,4 @@
-# スコープ付き列挙型のusing宣言
+# スコープ付き列挙型のusing宣言 [P1099R5]
 
 * cpp20[meta cpp]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>可変引数が空でない場合のトークン置換 [P0306R4] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/va_opt.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/va_opt.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/va_opt.md b/lang/cpp20/va_opt.md
index dcf82ce2d..d0e2d13f5 100644
--- a/lang/cpp20/va_opt.md
+++ b/lang/cpp20/va_opt.md
@@ -1,4 +1,4 @@
-# 可変引数が空でない場合のトークン置換
+# 可変引数が空でない場合のトークン置換 [P0306R4]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>評価されない文脈でのラムダ式 [P0315R4] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/wording_for_lambdas_in_unevaluated_contexts.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp20/wording_for_lambdas_in_unevaluated_contexts.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/wording_for_lambdas_in_unevaluated_contexts.md b/lang/cpp20/wording_for_lambdas_in_unevaluated_contexts.md
index 91a11fb10..fec2f2ee6 100644
--- a/lang/cpp20/wording_for_lambdas_in_unevaluated_contexts.md
+++ b/lang/cpp20/wording_for_lambdas_in_unevaluated_contexts.md
@@ -1,4 +1,4 @@
-# 評価されない文脈でのラムダ式
+# 評価されない文脈でのラムダ式 [P0315R4]
 * cpp20[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>elif/elifdef/elifndefのサポートを追加 [P2334R1] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/add_support_for_preprocessing_directives_elifdef_and_elifndef.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp23/add_support_for_preprocessing_directives_elifdef_and_elifndef.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/add_support_for_preprocessing_directives_elifdef_and_elifndef.md b/lang/cpp23/add_support_for_preprocessing_directives_elifdef_and_elifndef.md
index b7881a9b6..24606375a 100644
--- a/lang/cpp23/add_support_for_preprocessing_directives_elifdef_and_elifndef.md
+++ b/lang/cpp23/add_support_for_preprocessing_directives_elifdef_and_elifndef.md
@@ -1,4 +1,4 @@
-# elif/elifdef/elifndefのサポートを追加
+# elif/elifdef/elifndefのサポートを追加 [P2334R1]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ラムダ式に対する属性 [P2173R1] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/attributes_on_lambda_expressions.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp23/attributes_on_lambda_expressions.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/attributes_on_lambda_expressions.md b/lang/cpp23/attributes_on_lambda_expressions.md
index 8c78b4065..30cd03e4b 100644
--- a/lang/cpp23/attributes_on_lambda_expressions.md
+++ b/lang/cpp23/attributes_on_lambda_expressions.md
@@ -1,4 +1,4 @@
-# ラムダ式に対する属性
+# ラムダ式に対する属性 [P2173R1]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>静的な診断メッセージの文字エンコーディング [P2246R1] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/character_encoding_of_diagnostic_text.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp23/character_encoding_of_diagnostic_text.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;静的な診断メッセージの文字エンコーディング [P2246R1]&lt;/span&gt;&lt;span class=&#34;cpp cpp23&#34; title=&#34;C++23で追加&#34;&gt;(C++23)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;C++23では、コンパイル時に診断メッセージを出力させる以下の機能について、ソースコードのエンコーディングが実行環境のエンコーディングで表現できない場合にどうするかの規定を見直す：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;static_assert&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[[deprecated]]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[[nodiscard]]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#error&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;C++20までは、「基本ソース文字集合に含まれない文字は出力する必要はない」という規定になっていたが、基本ソース文字集合と実行環境のエンコーディングは関係ないものであるため、この規定を削除することとした。&lt;/p&gt;
&lt;p&gt;この規定はC20でも導入され、C++もそれに追従することとした。&lt;/p&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2246r1.pdf&#34; target=&#34;_blank&#34;&gt;P2246R1 Character encoding of diagnostic text&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.open-std.org/jtc1/sc22/wg14/www/docs/n2563.pdf&#34; target=&#34;_blank&#34;&gt;WG14 N2563 Character encoding of diagnostic text&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>継承コンストラクタからのクラステンプレート引数の推論 [P2582R1] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/class_template_argument_deduction_from_inherited.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp23/class_template_argument_deduction_from_inherited.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/class_template_argument_deduction_from_inherited.md b/lang/cpp23/class_template_argument_deduction_from_inherited.md
index db1632503..ba94fb0f2 100644
--- a/lang/cpp23/class_template_argument_deduction_from_inherited.md
+++ b/lang/cpp23/class_template_argument_deduction_from_inherited.md
@@ -1,4 +1,4 @@
-# 継承コンストラクタからのクラステンプレート引数の推論
+# 継承コンストラクタからのクラステンプレート引数の推論 [P2582R1]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>文字リテラルエンコーディングを一貫させる [P2316R2] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/consistent_character_literal_encoding.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp23/consistent_character_literal_encoding.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/consistent_character_literal_encoding.md b/lang/cpp23/consistent_character_literal_encoding.md
index d21dc2514..17106dec6 100644
--- a/lang/cpp23/consistent_character_literal_encoding.md
+++ b/lang/cpp23/consistent_character_literal_encoding.md
@@ -1,4 +1,4 @@
-# 文字リテラルエンコーディングを一貫させる
+# 文字リテラルエンコーディングを一貫させる [P2316R2]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexpr関数内でconsteval関数を呼び出せない問題を軽減 [P2564R3] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/consteval_needs_to_propagate_up.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp23/consteval_needs_to_propagate_up.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/consteval_needs_to_propagate_up.md b/lang/cpp23/consteval_needs_to_propagate_up.md
index 5800006e9..8f7b945f1 100644
--- a/lang/cpp23/consteval_needs_to_propagate_up.md
+++ b/lang/cpp23/consteval_needs_to_propagate_up.md
@@ -1,4 +1,4 @@
-# constexpr関数内でconsteval関数を呼び出せない問題を軽減
+# constexpr関数内でconsteval関数を呼び出せない問題を軽減 [P2564R3]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>エスケープシーケンスの区切り [P2290R3] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/delimited_escape_sequences.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp23/delimited_escape_sequences.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/delimited_escape_sequences.md b/lang/cpp23/delimited_escape_sequences.md
index 975f02e06..b09612705 100644
--- a/lang/cpp23/delimited_escape_sequences.md
+++ b/lang/cpp23/delimited_escape_sequences.md
@@ -1,4 +1,4 @@
-# エスケープシーケンスの区切り
+# エスケープシーケンスの区切り [P2290R3]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ラムダ式で()を省略できる条件を緩和 [P1102R2] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/down_with_lambda_parens.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp23/down_with_lambda_parens.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/down_with_lambda_parens.md b/lang/cpp23/down_with_lambda_parens.md
index 38c1da716..a993635f3 100644
--- a/lang/cpp23/down_with_lambda_parens.md
+++ b/lang/cpp23/down_with_lambda_parens.md
@@ -1,4 +1,4 @@
-# ラムダ式で()を省略できる条件を緩和
+# ラムダ式で()を省略できる条件を緩和 [P1102R2]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>初期化文での型の別名宣言を許可 [P2360R0] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/extend_init_statement_to_allow_alias_declaration.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp23/extend_init_statement_to_allow_alias_declaration.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/extend_init_statement_to_allow_alias_declaration.md b/lang/cpp23/extend_init_statement_to_allow_alias_declaration.md
index 69cb5695f..bb3aeda35 100644
--- a/lang/cpp23/extend_init_statement_to_allow_alias_declaration.md
+++ b/lang/cpp23/extend_init_statement_to_allow_alias_declaration.md
@@ -1,4 +1,4 @@
-# 初期化文での型の別名宣言を許可
+# 初期化文での型の別名宣言を許可 [P2360R0]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>変数テンプレートの部分特殊化を許可 [P2096R2] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/generalized_wording_for_partial_specializations.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp23/generalized_wording_for_partial_specializations.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/generalized_wording_for_partial_specializations.md b/lang/cpp23/generalized_wording_for_partial_specializations.md
index 4c58ca285..a872492de 100644
--- a/lang/cpp23/generalized_wording_for_partial_specializations.md
+++ b/lang/cpp23/generalized_wording_for_partial_specializations.md
@@ -1,4 +1,4 @@
-# 変数テンプレートの部分特殊化を許可
+# 変数テンプレートの部分特殊化を許可 [P2096R2]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>if consteval [P1938R3] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/if_consteval.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp23/if_consteval.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/if_consteval.md b/lang/cpp23/if_consteval.md
index 0c7247d29..856fae791 100644
--- a/lang/cpp23/if_consteval.md
+++ b/lang/cpp23/if_consteval.md
@@ -1,4 +1,4 @@
-# if consteval
+# if consteval [P1938R3]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>複合文の末尾へのラベルを許可 [P2324R2] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/labels_at_the_end_of_compound_statements.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp23/labels_at_the_end_of_compound_statements.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/labels_at_the_end_of_compound_statements.md b/lang/cpp23/labels_at_the_end_of_compound_statements.md
index c8377072a..dacce86cb 100644
--- a/lang/cpp23/labels_at_the_end_of_compound_statements.md
+++ b/lang/cpp23/labels_at_the_end_of_compound_statements.md
@@ -1,4 +1,4 @@
-# 複合文の末尾へのラベルを許可
+# 複合文の末尾へのラベルを許可 [P2324R2]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>範囲for文が範囲初期化子内で生じた一時オブジェクトを延命することを規定 [P2718R0] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/lifetime_extension_in_range_based_for_loop.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp23/lifetime_extension_in_range_based_for_loop.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/lifetime_extension_in_range_based_for_loop.md b/lang/cpp23/lifetime_extension_in_range_based_for_loop.md
index 4265b36f1..21d2f13e7 100644
--- a/lang/cpp23/lifetime_extension_in_range_based_for_loop.md
+++ b/lang/cpp23/lifetime_extension_in_range_based_for_loop.md
@@ -1,4 +1,4 @@
-# 範囲for文が範囲初期化子内で生じた一時オブジェクトを延命することを規定
+# 範囲for文が範囲初期化子内で生じた一時オブジェクトを延命することを規定 [P2718R0]
 
 * cpp23[meta cpp]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>(符号付き)size_tリテラルのためのサフィックス [P0330R8] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/literal_suffix_for_signed_size_t.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp23/literal_suffix_for_signed_size_t.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/literal_suffix_for_signed_size_t.md b/lang/cpp23/literal_suffix_for_signed_size_t.md
index aa551dbca..5a31e63cc 100644
--- a/lang/cpp23/literal_suffix_for_signed_size_t.md
+++ b/lang/cpp23/literal_suffix_for_signed_size_t.md
@@ -1,4 +1,4 @@
-# (符号付き)size_tリテラルのためのサフィックス
+# (符号付き)size_tリテラルのためのサフィックス [P0330R8]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>アクセス制御の異なるメンバ変数のレイアウトを宣言順に規定 [P1847R4] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/make_declaration_order_layout_mandated.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp23/make_declaration_order_layout_mandated.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/make_declaration_order_layout_mandated.md b/lang/cpp23/make_declaration_order_layout_mandated.md
index 373732612..3bdb83bfa 100644
--- a/lang/cpp23/make_declaration_order_layout_mandated.md
+++ b/lang/cpp23/make_declaration_order_layout_mandated.md
@@ -1,4 +1,4 @@
-# アクセス制御の異なるメンバ変数のレイアウトを宣言順に規定
+# アクセス制御の異なるメンバ変数のレイアウトを宣言順に規定 [P1847R4]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>無意味なexport宣言を禁止する [P2615R1] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/meaningful_exports.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp23/meaningful_exports.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/meaningful_exports.md b/lang/cpp23/meaningful_exports.md
index 638b7c073..c1bfe2765 100644
--- a/lang/cpp23/meaningful_exports.md
+++ b/lang/cpp23/meaningful_exports.md
@@ -1,4 +1,4 @@
-# 無意味なexport宣言を禁止する
+# 無意味なexport宣言を禁止する [P2615R1]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>異なる文字エンコーディングをもつ文字列リテラルの連結を不適格とする [P2201R1] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/mixed_string_literal_concatenation.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp23/mixed_string_literal_concatenation.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/mixed_string_literal_concatenation.md b/lang/cpp23/mixed_string_literal_concatenation.md
index 538bbc8fb..b93c80edb 100644
--- a/lang/cpp23/mixed_string_literal_concatenation.md
+++ b/lang/cpp23/mixed_string_literal_concatenation.md
@@ -1,4 +1,4 @@
-# 異なる文字エンコーディングをもつ文字列リテラルの連結を不適格とする
+# 異なる文字エンコーディングをもつ文字列リテラルの連結を不適格とする [P2201R1]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>添字演算子の多次元サポート [P2128R6] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/multidimensional_subscript_operator.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp23/multidimensional_subscript_operator.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/multidimensional_subscript_operator.md b/lang/cpp23/multidimensional_subscript_operator.md
index 89306c3bc..3e7df114d 100644
--- a/lang/cpp23/multidimensional_subscript_operator.md
+++ b/lang/cpp23/multidimensional_subscript_operator.md
@@ -1,4 +1,4 @@
-# 添字演算子の多次元サポート
+# 添字演算子の多次元サポート [P2128R6]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>名前付きユニバーサルキャラクタ名 [P2071R2] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/named_universal_character_escapes.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp23/named_universal_character_escapes.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/named_universal_character_escapes.md b/lang/cpp23/named_universal_character_escapes.md
index 8a38ffbe3..489dfb672 100644
--- a/lang/cpp23/named_universal_character_escapes.md
+++ b/lang/cpp23/named_universal_character_escapes.md
@@ -1,4 +1,4 @@
-# 名前付きユニバーサルキャラクタ名
+# 名前付きユニバーサルキャラクタ名 [P2071R2]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>定数式の文脈でのboolへの縮小変換を許可 [P1401R5] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/narrowing_contextual_conversions_to_bool.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp23/narrowing_contextual_conversions_to_bool.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/narrowing_contextual_conversions_to_bool.md b/lang/cpp23/narrowing_contextual_conversions_to_bool.md
index 2730e9a17..ece89bd08 100644
--- a/lang/cpp23/narrowing_contextual_conversions_to_bool.md
+++ b/lang/cpp23/narrowing_contextual_conversions_to_bool.md
@@ -1,4 +1,4 @@
-# 定数式の文脈でのboolへの縮小変換を許可
+# 定数式の文脈でのboolへの縮小変換を許可 [P1401R5]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>定数式内での非リテラル変数、静的変数・スレッドローカル変数およびgotoとラベルの存在を許可する [P2242R3] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/non_literal_variables_in_constexpr_functions.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp23/non_literal_variables_in_constexpr_functions.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;定数式内での非リテラル変数、静的変数・スレッドローカル変数およびgotoとラベルの存在を許可する [P2242R3]&lt;/span&gt;&lt;span class=&#34;cpp cpp23&#34; title=&#34;C++23で追加&#34;&gt;(C++23)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;constexpr&lt;/code&gt;関数が非リテラル変数、静的変数・スレッドローカル変数およびgoto文とラベルを含むことを許可する。&lt;/p&gt;
&lt;p&gt;ただし、これをコンパイル時に評価した場合、従来通りエラーとなる。
これらを含むコードパスは実行時にのみ通過するようにしなければならない。&lt;/p&gt;
&lt;h2&gt;この機能が必要になった背景・経緯&lt;/h2&gt;
&lt;p&gt;これまでは、&lt;code&gt;constexpr&lt;/code&gt;関数内には非リテラル変数、静的変数・スレッドローカル変数およびgoto文とラベルが含まれてはならなかった。
これは、&lt;code&gt;constexpr&lt;/code&gt;関数が定数式実行できない要素を含んではならないという意味で、理にかなった制限であった。&lt;/p&gt;
&lt;p&gt;しかし、C++20で&lt;code&gt;&lt;a href=&#34;../../reference/type_traits/is_constant_evaluated.html&#34;&gt;std::is_constant_evaluated&lt;/a&gt;&lt;/code&gt;によって定数式実行されるコードパスと実行時に通るコードパスを分けることが可能になり、状況が変化した。
定数式実行できないコードとはいえ、実行時にのみ通りコンパイル時には通らないコードパスに含まれていた場合にもプログラムが&lt;a class=&#34;cpprefjp-defined-word&#34;&gt;不適格&lt;/a&gt;となる、というのは直観に反する。&lt;/p&gt;
&lt;p&gt;よって、コンパイル時に評価されない限りにおいて、&lt;code&gt;constexpr&lt;/code&gt;関数内に非リテラル変数、静的変数・スレッドローカル変数およびgoto文とラベルを含むことが許可されることとなった。&lt;/p&gt;
&lt;p&gt;ただし、&lt;code&gt;constexpr&lt;/code&gt;内に存在することが許可されたものの定数式として評価できるわけではないので、これらの機能は依然としてコンパイル時に使用することはできない。&lt;/p&gt;
&lt;h2&gt;関連項目&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../cpp20/try-catch_blocks_in_constexpr_functions.html&#34;&gt;C++20 - constexpr関数内でのtry-catchブロックを許可&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../cpp20/enabling_constexpr_intrinsics_by_permitting_unevaluated_inline-assembly_in_constexpr_functions.html&#34;&gt;C++20 - constexpr関数内で未評価のインラインアセンブリを許可することによる組み込み関数のconstexpr有効化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;permitting_static_constexpr_variables_in_constexpr_functions.html&#34;&gt;C++23 - &lt;code&gt;constexpr&lt;/code&gt;関数内での&lt;code&gt;static constexpr&lt;/code&gt;変数を許可&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2242r3.html&#34; target=&#34;_blank&#34;&gt;P2242R3 - Non-literal variables (and labels and gotos) in constexpr functions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexpr関数内でのstatic constexpr変数を許可 [P2647R1] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/permitting_static_constexpr_variables_in_constexpr_functions.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp23/permitting_static_constexpr_variables_in_constexpr_functions.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/permitting_static_constexpr_variables_in_constexpr_functions.md b/lang/cpp23/permitting_static_constexpr_variables_in_constexpr_functions.md
index 431608eb6..d394617d3 100644
--- a/lang/cpp23/permitting_static_constexpr_variables_in_constexpr_functions.md
+++ b/lang/cpp23/permitting_static_constexpr_variables_in_constexpr_functions.md
@@ -1,4 +1,4 @@
-# constexpr関数内でのstatic constexpr変数を許可
+# constexpr関数内でのstatic constexpr変数を許可 [P2647R1]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コード内容の仮定をコンパイラに伝える`assume`属性 [P1774R8] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/portable_assumptions.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp23/portable_assumptions.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/portable_assumptions.md b/lang/cpp23/portable_assumptions.md
index 8c8ebf1c0..7e7506e4a 100644
--- a/lang/cpp23/portable_assumptions.md
+++ b/lang/cpp23/portable_assumptions.md
@@ -1,4 +1,4 @@
-# コード内容の仮定をコンパイラに伝える`assume`属性
+# コード内容の仮定をコンパイラに伝える`assume`属性 [P1774R8]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>constexpr関数が定数実行できない場合でも適格とする [P2448R2] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/relaxing_some_constexpr_restrictions.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp23/relaxing_some_constexpr_restrictions.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/relaxing_some_constexpr_restrictions.md b/lang/cpp23/relaxing_some_constexpr_restrictions.md
index 205a7e237..f187fd29f 100644
--- a/lang/cpp23/relaxing_some_constexpr_restrictions.md
+++ b/lang/cpp23/relaxing_some_constexpr_restrictions.md
@@ -1,4 +1,4 @@
-# constexpr関数が定数実行できない場合でも適格とする
+# constexpr関数が定数実行できない場合でも適格とする [P2448R2]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>1ワイド文字に収まらないワイド文字リテラルを禁止する [P2362R3] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/remove_non_encodable_wide_character_literals_and_multicharacter_wide_character_literals.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp23/remove_non_encodable_wide_character_literals_and_multicharacter_wide_character_literals.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/remove_non_encodable_wide_character_literals_and_multicharacter_wide_character_literals.md b/lang/cpp23/remove_non_encodable_wide_character_literals_and_multicharacter_wide_character_literals.md
index ea946f5c9..83a1153f7 100644
--- a/lang/cpp23/remove_non_encodable_wide_character_literals_and_multicharacter_wide_character_literals.md
+++ b/lang/cpp23/remove_non_encodable_wide_character_literals_and_multicharacter_wide_character_literals.md
@@ -1,4 +1,4 @@
-# 1ワイド文字に収まらないワイド文字リテラルを禁止する
+# 1ワイド文字に収まらないワイド文字リテラルを禁止する [P2362R3]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>暗黙的なムーブを簡略化 [P2266R3] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/simpler_implicit_move.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp23/simpler_implicit_move.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/simpler_implicit_move.md b/lang/cpp23/simpler_implicit_move.md
index d6d4ceaa3..86746ed6f 100644
--- a/lang/cpp23/simpler_implicit_move.md
+++ b/lang/cpp23/simpler_implicit_move.md
@@ -1,4 +1,4 @@
-# 暗黙的なムーブを簡略化
+# 暗黙的なムーブを簡略化 [P2266R3]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>thisポインタをもつ必要のない演算子をstaticとして宣言できるようにする [P1169R4] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/static_operator.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp23/static_operator.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/static_operator.md b/lang/cpp23/static_operator.md
index 82da0f5a2..10a20d927 100644
--- a/lang/cpp23/static_operator.md
+++ b/lang/cpp23/static_operator.md
@@ -1,4 +1,4 @@
-# thisポインタをもつ必要のない演算子をstaticとして宣言できるようにする
+# thisポインタをもつ必要のない演算子をstaticとして宣言できるようにする [P1169R4]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>汎用的なソースコードのエンコーディングとしてUTF-8をサポート [P2295R6] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/support_for_utf8_as_a_portable_source_file_encoding.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp23/support_for_utf8_as_a_portable_source_file_encoding.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;汎用的なソースコードのエンコーディングとしてUTF-8をサポート [P2295R6]&lt;/span&gt;&lt;span class=&#34;cpp cpp23&#34; title=&#34;C++23で追加&#34;&gt;(C++23)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;C++20まで、ソースコードの文字集合は実装定義だったが、その仕様では移植性に問題があった。C++23からは、すべてのコンパイラはUTF-8文字コードのソースコードをサポートしなければならないことが規定される。&lt;/p&gt;
&lt;p&gt;コンパイラは、ほかの文字コードと区別するため、入力ファイルがUTF-8であることを決定する実装定義の手段をもたなければならない。つまり、BOM (バイトオーダーマーク) を認識するだけでは十分ではない。&lt;/p&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p2295r6.pdf&#34; target=&#34;_blank&#34;&gt;P2295R6 Support for UTF-8 as a portable source file encoding&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>行末スペースを無視するよう規定 [P2223R2] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/trimming_whitespaces_before_line_splicing.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp23/trimming_whitespaces_before_line_splicing.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/trimming_whitespaces_before_line_splicing.md b/lang/cpp23/trimming_whitespaces_before_line_splicing.md
index d17c4a549..fe51f851a 100644
--- a/lang/cpp23/trimming_whitespaces_before_line_splicing.md
+++ b/lang/cpp23/trimming_whitespaces_before_line_splicing.md
@@ -1,4 +1,4 @@
-# 行末スペースを無視するよう規定
+# 行末スペースを無視するよう規定 [P2223R2]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>#warningのサポートを追加 [P2437R1] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/warning.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp23/warning.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/warning.md b/lang/cpp23/warning.md
index 2695381db..4706b00c5 100644
--- a/lang/cpp23/warning.md
+++ b/lang/cpp23/warning.md
@@ -1,4 +1,4 @@
-# #warningのサポートを追加
+# #warningのサポートを追加 [P2437R1]
 * cpp23[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>static_assertの診断メッセージにユーザーが生成した文字列の指定を許可 [P2741R3] -- 言語機能 : ページタイトルの末尾に提案文書の番号を記載 #1288</title>
      <link href="https://cpprefjp.github.io/lang/cpp26/user-generated_static_assert_messages.html"/>
      <id>5ac418093b505b39ae5725362b41d5030352873b:lang/cpp26/user-generated_static_assert_messages.md</id>
      <updated>2024-06-14T14:17:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp26/user-generated_static_assert_messages.md b/lang/cpp26/user-generated_static_assert_messages.md
index e05ce729d..06e1dadb8 100644
--- a/lang/cpp26/user-generated_static_assert_messages.md
+++ b/lang/cpp26/user-generated_static_assert_messages.md
@@ -1,4 +1,4 @@
-# static_assertの診断メッセージにユーザーが生成した文字列の指定を許可
+# static_assertの診断メッセージにユーザーが生成した文字列の指定を許可 [P2741R3]
 * cpp26[meta cpp]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>add -- linalg : addを追加(#1233).</title>
      <link href="https://cpprefjp.github.io/reference/linalg/add.html"/>
      <id>439aededa674eeece8990ecdc8f785264ed6830b:reference/linalg/add.md</id>
      <updated>2024-06-13T21:47:23+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/add.md b/reference/linalg/add.md
new file mode 100644
index 000000000..fd21543da
--- /dev/null
+++ b/reference/linalg/add.md
@@ -0,0 +1,96 @@
+# add
+
+* [mathjax enable]
+* linalg[meta header]
+* function template[meta id-type]
+* std::linalg[meta namespace]
+* cpp26[meta cpp]
+
+
+```cpp
+namespace std::linalg {
+  template&amp;lt;in-object InObj1,
+           in-object InObj2,
+           out-object OutObj&amp;gt;
+  void add(InObj1 x,
+           InObj2 y,
+           OutObj z);               // (1)
+
+  template&amp;lt;class ExecutionPolicy,
+           in-object InObj1,
+           in-object InObj2,
+           out-object OutObj&amp;gt;
+  void add(ExecutionPolicy&amp;amp;&amp;amp; exec,
+           InObj1 x,
+           InObj2 y,
+           OutObj z);               // (2)
+}
+```
+
+
+## 概要
+同じサイズの行列またはベクトルの`x`と`y`、`z`に対して、$x + y$ を`z`に代入する:
+
+$$
+z \leftarrow x + y
+$$
+
+
+## テンプレートパラメータ制約
+`x`と`y`、`z`の次元が全て等しくなければならない。
+- `x.rank() == y.rank() &amp;amp;&amp;amp; y.rank() == z.rank()`
+
+
+## 適格要件
+行列またはベクトルの`x`、`y`、`z`の各次元の静的要素数が同じであること。
+
+- [`possibly-addable`](possibly-addable.md)`&amp;lt;InObj1, InObj2, OutObj&amp;gt;() == true`
+
+
+## 事前条件
+行列またはベクトルの`x`、`y`、`z`の各次元が同じであること。
+
+- [`addable`](addable.md)`(x, y, z) == true`
+
+
+## 効果
+$x + y$ を`z`に代入する。
+
+- (1): 逐次実行する。
+- (2): 指定された実行ポリシーに応じて実行する。
+
+
+## 戻り値
+なし
+
+
+## 備考
+`z`を`x`または`y`としてもよい。
+
+
+## 例
+
+
+### 出力
+
+
+## バージョン
+### 言語
+- C++26
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
+
+
+## 関連項目
+- [`execution`](/reference/execution.md)
+- [`mdspan`](/reference/mdspan.md)
+
+
+## 参照
+- [P0788R3 Standard Library Specification in a Concepts and Contracts World](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0788r3.pdf)
+- [`LAPACK: caxpy`](https://netlib.org/lapack/explore-html/d5/d4b/group__axpy_ga0b7bac1f4d42514074a48f14f5f9caa0.html#ga0b7bac1f4d42514074a48f14f5f9caa0)
+
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>addable -- linalg : addを追加(#1233).</title>
      <link href="https://cpprefjp.github.io/reference/linalg/addable.html"/>
      <id>439aededa674eeece8990ecdc8f785264ed6830b:reference/linalg/addable.md</id>
      <updated>2024-06-13T21:47:23+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/addable.md b/reference/linalg/addable.md
new file mode 100644
index 000000000..1f6e46f79
--- /dev/null
+++ b/reference/linalg/addable.md
@@ -0,0 +1,57 @@
+# addable
+
+* linalg[meta header]
+* function template[meta id-type]
+* std::linalg[meta namespace]
+* cpp26[meta cpp]
+
+
+```cpp
+namespace std::linalg {
+constexpr bool addable(
+  const in-vector auto&amp;amp; in1,
+  const in-vector auto&amp;amp; in2,
+  const in-vector auto&amp;amp; out)
+{
+  return out.extent(0) == in1.extent(0) &amp;amp;&amp;amp;
+         out.extent(0) == in2.extent(0);
+} // (1)
+
+constexpr bool addable(
+  const in-matrix auto&amp;amp; in1,
+  const in-matrix auto&amp;amp; in2,
+  const in-matrix auto&amp;amp; out)
+{
+  return out.extent(0) == in1.extent(0) &amp;amp;&amp;amp;
+         out.extent(1) == in1.extent(1) &amp;amp;&amp;amp;
+         out.extent(0) == in2.extent(0) &amp;amp;&amp;amp;
+         out.extent(1) == in2.extent(1);
+} // (2)
+}
+```
+
+
+## 概要
+テンプレートパラメータに指定されたベクトルまたは行列の次元が同じかどうかを判定する、説明専用の関数である。
+
+
+## 戻り値
+`In1`、`In2`、`Out`の各次元が同じ場合`true`を返す。そうでない場合は、`false`を返す。
+
+- (1): ベクトル
+- (2): 行列
+
+
+## バージョン
+### 言語
+- C++26
+
+
+## 関連項目
+- [`mdspan`](/reference/mdspan.md)
+
+
+## 参照
+- [P1673R13 A free function linear algebra interface based on the BLAS](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p1673r13.html)
+
+
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>possibly-addable -- linalg : addを追加(#1233).</title>
      <link href="https://cpprefjp.github.io/reference/linalg/possibly-addable.html"/>
      <id>439aededa674eeece8990ecdc8f785264ed6830b:reference/linalg/possibly-addable.md</id>
      <updated>2024-06-13T21:47:23+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/possibly-addable.md b/reference/linalg/possibly-addable.md
new file mode 100644
index 000000000..3b34fa1dd
--- /dev/null
+++ b/reference/linalg/possibly-addable.md
@@ -0,0 +1,55 @@
+# possibly-addable
+
+* linalg[meta header]
+* function template[meta id-type]
+* std::linalg[meta namespace]
+* cpp26[meta cpp]
+
+
+```cpp
+namespace std::linalg {
+  template&amp;lt;in-vector In1, in-vector In2, in-vector Out&amp;gt;
+  constexpr bool possibly-addable()
+  {
+    return compatible-static-extents&amp;lt;Out, In1&amp;gt;(0, 0) &amp;amp;&amp;amp;
+           compatible-static-extents&amp;lt;Out, In2&amp;gt;(0, 0) &amp;amp;&amp;amp;
+           compatible-static-extents&amp;lt;In1, In2&amp;gt;(0, 0);
+  }   // (1)
+
+  template&amp;lt;in-matrix In1, in-matrix In2, in-matrix Out&amp;gt;
+  constexpr bool possibly-addable()
+  {
+    return compatible-static-extents&amp;lt;Out, In1&amp;gt;(0, 0) &amp;amp;&amp;amp;
+           compatible-static-extents&amp;lt;Out, In1&amp;gt;(1, 1) &amp;amp;&amp;amp;
+           compatible-static-extents&amp;lt;Out, In2&amp;gt;(0, 0) &amp;amp;&amp;amp;
+           compatible-static-extents&amp;lt;Out, In2&amp;gt;(1, 1) &amp;amp;&amp;amp;
+           compatible-static-extents&amp;lt;In1, In2&amp;gt;(0, 0) &amp;amp;&amp;amp;
+           compatible-static-extents&amp;lt;In1, In2&amp;gt;(1, 1);
+  }   // (2)
+}
+```
+
+
+## 概要
+テンプレートパラメータに指定されたベクトルまたは行列の次元が同じかどうかを静的要素数で判定する、説明専用の関数である。
+
+
+## 戻り値
+`In1`、`In2`、`Out`の各次元の静的要素数が同じ場合`true`を返す。そうでない場合は、`false`を返す。
+
+- (1): ベクトル
+- (2): 行列
+
+
+## バージョン
+### 言語
+- C++26
+
+
+## 関連項目
+- [`mdspan`](/reference/mdspan.md)
+
+
+## 参照
+- [P1673R13 A free function linear algebra interface based on the BLAS](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p1673r13.html)
+
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>関数のdefault／delete宣言 -- Merge pull request #1289 from yknishidate/fixtypo</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/defaulted_and_deleted_functions.html"/>
      <id>24bdd5df3ba4cfbe33688b71b622c2ccbf6f0558:lang/cpp11/defaulted_and_deleted_functions.md</id>
      <updated>2024-06-12T23:45:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/defaulted_and_deleted_functions.md b/lang/cpp11/defaulted_and_deleted_functions.md
index 733bc3397..23f08f71d 100644
--- a/lang/cpp11/defaulted_and_deleted_functions.md
+++ b/lang/cpp11/defaulted_and_deleted_functions.md
@@ -104,7 +104,7 @@ int main()
     };
 
     // コンパイルエラー！= deleteはここではなく、最初の宣言に対して指定しなければならない
-    sometype::somtype() = delete;
+    sometype::sometype() = delete;
     ```
 
     - 削除定義された関数は、暗黙的にインラインとなる。もしその関数が外部リンケージを持ち、ひとつの翻訳単位で削除定義された場合、全ての翻訳単位で削除定義される。削除定義された関数は、
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
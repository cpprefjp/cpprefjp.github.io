<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2025-04-28T14:49:44.126446</updated>
  <id>b0287875-5786-49a9-a97f-efd48319b976</id>

  
    <entry>
      <title>contracts -- reference/contracts.md: Added function</title>
      <link href="https://cpprefjp.github.io/reference/contracts.html"/>
      <id>0595a39f9b3d8809bb9d77b08c4756889a223016:reference/contracts.md</id>
      <updated>2025-04-27T12:37:16+09:00</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;contracts&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;contracts&lt;/span&gt;&lt;span class=&#34;cpp cpp26&#34; title=&#34;C++26で追加&#34;&gt;(C++26)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;contracts&amp;gt;&lt;/code&gt;ヘッダでは、C++における契約プログラミングのサポートを提供する。&lt;/p&gt;
&lt;p&gt;契約プログラミングは、関数やクラスの前提条件、事後条件、およびアサーションを明示的に指定するプログラミング手法である。これらの条件が満たされない場合、プログラムは契約違反を報告する。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;contracts/assertion_kind.md.nolink&#34;&gt;assertion_kind&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;アサーションの種類 (enum)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;contracts/evaluation_semantic.md.nolink&#34;&gt;evaluation_semantic&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;アサーションの評価の種類(enum)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;contracts/detection_mode.md.nolink&#34;&gt;detection_mode&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;契約違反の検出モード(enum)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;contracts/contract_violation.md.nolink&#34;&gt;contract_violation&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;契約違反に関する情報 (class)&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;contracts/invoke_default_contract_violation_handler.nolink&#34;&gt;invoke_default_contract_violation_handler&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;デフォルトcontract_violationハンドラー&lt;/td&gt;
&lt;td&gt;C++26&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++26&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: 未実装&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: 未実装&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ?&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: 未実装&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;関連項目&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../lang/future/contract-based_programming.html&#34;&gt;契約に基づくプログラミング&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../lang/cpp26/contracts.html&#34;&gt;契約プログラミング&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0542r5.html&#34; target=&#34;_blank&#34;&gt;P0542R5 Support for contract based programming in C++&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>rotarymars</name>
        <email>s.goto2050@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>arrive -- Merge pull request #1443 from Gumichocopengin8/fix/missing-include-mutex</title>
      <link href="https://cpprefjp.github.io/reference/barrier/barrier/arrive.html"/>
      <id>1a4a9d8ee3d38620334c8f792c781f543225870c:reference/barrier/barrier/arrive.md</id>
      <updated>2025-04-25T23:46:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/barrier/barrier/arrive.md b/reference/barrier/barrier/arrive.md
index 6af0b912c..e98ab098a 100644
--- a/reference/barrier/barrier/arrive.md
+++ b/reference/barrier/barrier/arrive.md
@@ -47,6 +47,7 @@ arrival_token arrive(ptrdiff_t update = 1); // (1) C++26
 #include &amp;lt;barrier&amp;gt;
 #include &amp;lt;chrono&amp;gt;
 #include &amp;lt;iostream&amp;gt;
+#include &amp;lt;mutex&amp;gt;
 #include &amp;lt;thread&amp;gt;
 #include &amp;lt;utility&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>arrive_and_drop -- Merge pull request #1443 from Gumichocopengin8/fix/missing-include-mutex</title>
      <link href="https://cpprefjp.github.io/reference/barrier/barrier/arrive_and_drop.html"/>
      <id>1a4a9d8ee3d38620334c8f792c781f543225870c:reference/barrier/barrier/arrive_and_drop.md</id>
      <updated>2025-04-25T23:46:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/barrier/barrier/arrive_and_drop.md b/reference/barrier/barrier/arrive_and_drop.md
index 8c54f1e47..fefb63d5c 100644
--- a/reference/barrier/barrier/arrive_and_drop.md
+++ b/reference/barrier/barrier/arrive_and_drop.md
@@ -43,6 +43,7 @@ void arrive_and_drop();
 #include &amp;lt;barrier&amp;gt;
 #include &amp;lt;chrono&amp;gt;
 #include &amp;lt;iostream&amp;gt;
+#include &amp;lt;mutex&amp;gt;
 #include &amp;lt;thread&amp;gt;
 #include &amp;lt;utility&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>arrive_and_wait -- Merge pull request #1443 from Gumichocopengin8/fix/missing-include-mutex</title>
      <link href="https://cpprefjp.github.io/reference/barrier/barrier/arrive_and_wait.html"/>
      <id>1a4a9d8ee3d38620334c8f792c781f543225870c:reference/barrier/barrier/arrive_and_wait.md</id>
      <updated>2025-04-25T23:46:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/barrier/barrier/arrive_and_wait.md b/reference/barrier/barrier/arrive_and_wait.md
index 80259d552..93abaf94f 100644
--- a/reference/barrier/barrier/arrive_and_wait.md
+++ b/reference/barrier/barrier/arrive_and_wait.md
@@ -34,6 +34,7 @@ void arrive_and_wait();
 #include &amp;lt;barrier&amp;gt;
 #include &amp;lt;chrono&amp;gt;
 #include &amp;lt;iostream&amp;gt;
+#include &amp;lt;mutex&amp;gt;
 #include &amp;lt;thread&amp;gt;
 #include &amp;lt;utility&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>wait -- Merge pull request #1443 from Gumichocopengin8/fix/missing-include-mutex</title>
      <link href="https://cpprefjp.github.io/reference/barrier/barrier/wait.html"/>
      <id>1a4a9d8ee3d38620334c8f792c781f543225870c:reference/barrier/barrier/wait.md</id>
      <updated>2025-04-25T23:46:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/barrier/barrier/wait.md b/reference/barrier/barrier/wait.md
index 1f78e962a..66905bb73 100644
--- a/reference/barrier/barrier/wait.md
+++ b/reference/barrier/barrier/wait.md
@@ -38,6 +38,7 @@ void wait(arrival_token&amp;amp;&amp;amp; arrival) const;
 #include &amp;lt;barrier&amp;gt;
 #include &amp;lt;chrono&amp;gt;
 #include &amp;lt;iostream&amp;gt;
+#include &amp;lt;mutex&amp;gt;
 #include &amp;lt;thread&amp;gt;
 #include &amp;lt;utility&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>arrive -- fix: missing `#include &lt;mutex&gt;` in `std::barrier`</title>
      <link href="https://cpprefjp.github.io/reference/barrier/barrier/arrive.html"/>
      <id>5c5c70946c055fd5626e2637ab053568ae7ebb46:reference/barrier/barrier/arrive.md</id>
      <updated>2025-04-25T03:29:37-07:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/barrier/barrier/arrive.md b/reference/barrier/barrier/arrive.md
index 6af0b912c..e98ab098a 100644
--- a/reference/barrier/barrier/arrive.md
+++ b/reference/barrier/barrier/arrive.md
@@ -47,6 +47,7 @@ arrival_token arrive(ptrdiff_t update = 1); // (1) C++26
 #include &amp;lt;barrier&amp;gt;
 #include &amp;lt;chrono&amp;gt;
 #include &amp;lt;iostream&amp;gt;
+#include &amp;lt;mutex&amp;gt;
 #include &amp;lt;thread&amp;gt;
 #include &amp;lt;utility&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Keita Nonaka</name>
        <email>iKonnyaku40@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>arrive_and_drop -- fix: missing `#include &lt;mutex&gt;` in `std::barrier`</title>
      <link href="https://cpprefjp.github.io/reference/barrier/barrier/arrive_and_drop.html"/>
      <id>5c5c70946c055fd5626e2637ab053568ae7ebb46:reference/barrier/barrier/arrive_and_drop.md</id>
      <updated>2025-04-25T03:29:37-07:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/barrier/barrier/arrive_and_drop.md b/reference/barrier/barrier/arrive_and_drop.md
index 8c54f1e47..fefb63d5c 100644
--- a/reference/barrier/barrier/arrive_and_drop.md
+++ b/reference/barrier/barrier/arrive_and_drop.md
@@ -43,6 +43,7 @@ void arrive_and_drop();
 #include &amp;lt;barrier&amp;gt;
 #include &amp;lt;chrono&amp;gt;
 #include &amp;lt;iostream&amp;gt;
+#include &amp;lt;mutex&amp;gt;
 #include &amp;lt;thread&amp;gt;
 #include &amp;lt;utility&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Keita Nonaka</name>
        <email>iKonnyaku40@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>arrive_and_wait -- fix: missing `#include &lt;mutex&gt;` in `std::barrier`</title>
      <link href="https://cpprefjp.github.io/reference/barrier/barrier/arrive_and_wait.html"/>
      <id>5c5c70946c055fd5626e2637ab053568ae7ebb46:reference/barrier/barrier/arrive_and_wait.md</id>
      <updated>2025-04-25T03:29:37-07:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/barrier/barrier/arrive_and_wait.md b/reference/barrier/barrier/arrive_and_wait.md
index 80259d552..93abaf94f 100644
--- a/reference/barrier/barrier/arrive_and_wait.md
+++ b/reference/barrier/barrier/arrive_and_wait.md
@@ -34,6 +34,7 @@ void arrive_and_wait();
 #include &amp;lt;barrier&amp;gt;
 #include &amp;lt;chrono&amp;gt;
 #include &amp;lt;iostream&amp;gt;
+#include &amp;lt;mutex&amp;gt;
 #include &amp;lt;thread&amp;gt;
 #include &amp;lt;utility&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Keita Nonaka</name>
        <email>iKonnyaku40@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>wait -- fix: missing `#include &lt;mutex&gt;` in `std::barrier`</title>
      <link href="https://cpprefjp.github.io/reference/barrier/barrier/wait.html"/>
      <id>5c5c70946c055fd5626e2637ab053568ae7ebb46:reference/barrier/barrier/wait.md</id>
      <updated>2025-04-25T03:29:37-07:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/barrier/barrier/wait.md b/reference/barrier/barrier/wait.md
index 1f78e962a..66905bb73 100644
--- a/reference/barrier/barrier/wait.md
+++ b/reference/barrier/barrier/wait.md
@@ -38,6 +38,7 @@ void wait(arrival_token&amp;amp;&amp;amp; arrival) const;
 #include &amp;lt;barrier&amp;gt;
 #include &amp;lt;chrono&amp;gt;
 #include &amp;lt;iostream&amp;gt;
+#include &amp;lt;mutex&amp;gt;
 #include &amp;lt;thread&amp;gt;
 #include &amp;lt;utility&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Keita Nonaka</name>
        <email>iKonnyaku40@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>定数式での`void*`からポインタ型へのキャストを許可 [P2738R1] -- fix link</title>
      <link href="https://cpprefjp.github.io/lang/cpp26/constexpr_cast_from_voidptr.html"/>
      <id>09b3c3e59a1c0b808f326d1d924a7e143e2e6dca:lang/cpp26/constexpr_cast_from_voidptr.md</id>
      <updated>2025-04-25T18:00:28+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp26/constexpr_cast_from_voidptr.md b/lang/cpp26/constexpr_cast_from_voidptr.md
index 9ecf75ba4..21d55886b 100644
--- a/lang/cpp26/constexpr_cast_from_voidptr.md
+++ b/lang/cpp26/constexpr_cast_from_voidptr.md
@@ -12,7 +12,7 @@
 ## 概要
 C++23までは、定数式の文脈での`void*`から元のポインタ型への変換が禁止されていたが、C++26からは許可される。
 
-`void*`から元のポインタ型への変換は、「型消去 (type erasure)」で有用に使われるもので、標準ライブラリの実装としては[`std::any`](/reference/any/any.md)、[`std::function_ref`](/reference/functional/funcion_ref.md)、[`std::format()`](/reference/format/format.md)などで使われており、これらがコンパイル時に使用できるようにするための必要となる。
+`void*`から元のポインタ型への変換は、「型消去 (type erasure)」で有用に使われるもので、標準ライブラリの実装としては[`std::any`](/reference/any/any.md)、[`std::function_ref`](/reference/functional/function_ref.md)、[`std::format()`](/reference/format/format.md)などで使われており、これらがコンパイル時に使用できるようにするための必要となる。
 
 型消去は、テンプレートインスタンスの数を減らし、バイナリサイズを小さくするために一般的に使用される技法である。とくに、メモリ制約のある組み込みプラットフォームでは、共通のコードパスを確保するために型消去が有効である。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>定数式での`void*`からポインタ型へのキャストを許可 [P2738R1] -- fix link</title>
      <link href="https://cpprefjp.github.io/lang/cpp26/constexpr_cast_from_voidptr.html"/>
      <id>3c7eee6f893f8c223edb4f846ef4ec93406420a2:lang/cpp26/constexpr_cast_from_voidptr.md</id>
      <updated>2025-04-25T17:58:11+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp26/constexpr_cast_from_voidptr.md b/lang/cpp26/constexpr_cast_from_voidptr.md
index 6dec51d65..9ecf75ba4 100644
--- a/lang/cpp26/constexpr_cast_from_voidptr.md
+++ b/lang/cpp26/constexpr_cast_from_voidptr.md
@@ -12,7 +12,7 @@
 ## 概要
 C++23までは、定数式の文脈での`void*`から元のポインタ型への変換が禁止されていたが、C++26からは許可される。
 
-`void*`から元のポインタ型への変換は、「型消去 (type erasure)」で有用に使われるもので、標準ライブラリの実装としては[`std::any`](/reference/any/any.md)、[`std::function_ref`](/reference/function_ref/functional/funcion_ref.md)、[`std::format()`](/reference/format/format.md)などで使われており、これらがコンパイル時に使用できるようにするための必要となる。
+`void*`から元のポインタ型への変換は、「型消去 (type erasure)」で有用に使われるもので、標準ライブラリの実装としては[`std::any`](/reference/any/any.md)、[`std::function_ref`](/reference/functional/funcion_ref.md)、[`std::format()`](/reference/format/format.md)などで使われており、これらがコンパイル時に使用できるようにするための必要となる。
 
 型消去は、テンプレートインスタンスの数を減らし、バイナリサイズを小さくするために一般的に使用される技法である。とくに、メモリ制約のある組み込みプラットフォームでは、共通のコードパスを確保するために型消去が有効である。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
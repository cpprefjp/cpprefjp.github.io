<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2022-04-18T14:42:18.747684</updated>
  <id>d0f29801-8125-4f96-8f8d-62dcaf9b7a7e</id>

  
    <entry>
      <title>コンストラクタ -- Merge pull request #963 from acd1034/fix-typo-string-view-ctor</title>
      <link href="https://cpprefjp.github.io/reference/string_view/basic_string_view/op_constructor.html"/>
      <id>fb2836348954a533fb909430acdaeaef8210a9dd:reference/string_view/basic_string_view/op_constructor.md</id>
      <updated>2022-04-16T19:05:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string_view/basic_string_view/op_constructor.md b/reference/string_view/basic_string_view/op_constructor.md
index 300dc8038..37c4358cb 100644
--- a/reference/string_view/basic_string_view/op_constructor.md
+++ b/reference/string_view/basic_string_view/op_constructor.md
@@ -42,7 +42,7 @@ constexpr basic_string_view(R&amp;amp;&amp;amp; r);                            // (7) C++23
     - [`is_same_v`](/reference/type_traits/is_same.md)`&amp;lt;`[`ranges::range_value_t`](/reference/ranges/range_value_t.md)`&amp;lt;R&amp;gt;, charT&amp;gt;`が`true`であること
     - [`is_convertible_v`](/reference/type_traits/is_convertible.md)`&amp;lt;R, const charT*&amp;gt;`が`false`であること
     - `d`を[`remove_cvref_t`](/reference/type_traits/remove_cvref.md)`&amp;lt;R&amp;gt;`型の左辺値としたとき、`d.operator ::std::basic_string_view&amp;lt;charT, traits&amp;gt;()`が妥当な式ではないこと
-    - もし`R::traits_type`が妥当な型の場合、[`is_same_v`](/reference/type_traits/is_same.md)`&amp;lt;`[`remove_reference_t`](/reference/type_traits/remove_reference.md)`&amp;lt;R&amp;gt;::type_traits, traits&amp;gt;`が`true`であること
+    - もし`R::traits_type`が妥当な型の場合、[`is_same_v`](/reference/type_traits/is_same.md)`&amp;lt;`[`remove_reference_t`](/reference/type_traits/remove_reference.md)`&amp;lt;R&amp;gt;::traits_type, traits&amp;gt;`が`true`であること
 
 
 ## 事前条件
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- Fix typo in basic_string_view/op_constructor</title>
      <link href="https://cpprefjp.github.io/reference/string_view/basic_string_view/op_constructor.html"/>
      <id>b3ed96809ba9b73f4de1cd95f350817e9fa13571:reference/string_view/basic_string_view/op_constructor.md</id>
      <updated>2022-04-16T14:09:55+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string_view/basic_string_view/op_constructor.md b/reference/string_view/basic_string_view/op_constructor.md
index 300dc8038..37c4358cb 100644
--- a/reference/string_view/basic_string_view/op_constructor.md
+++ b/reference/string_view/basic_string_view/op_constructor.md
@@ -42,7 +42,7 @@ constexpr basic_string_view(R&amp;amp;&amp;amp; r);                            // (7) C++23
     - [`is_same_v`](/reference/type_traits/is_same.md)`&amp;lt;`[`ranges::range_value_t`](/reference/ranges/range_value_t.md)`&amp;lt;R&amp;gt;, charT&amp;gt;`が`true`であること
     - [`is_convertible_v`](/reference/type_traits/is_convertible.md)`&amp;lt;R, const charT*&amp;gt;`が`false`であること
     - `d`を[`remove_cvref_t`](/reference/type_traits/remove_cvref.md)`&amp;lt;R&amp;gt;`型の左辺値としたとき、`d.operator ::std::basic_string_view&amp;lt;charT, traits&amp;gt;()`が妥当な式ではないこと
-    - もし`R::traits_type`が妥当な型の場合、[`is_same_v`](/reference/type_traits/is_same.md)`&amp;lt;`[`remove_reference_t`](/reference/type_traits/remove_reference.md)`&amp;lt;R&amp;gt;::type_traits, traits&amp;gt;`が`true`であること
+    - もし`R::traits_type`が妥当な型の場合、[`is_same_v`](/reference/type_traits/is_same.md)`&amp;lt;`[`remove_reference_t`](/reference/type_traits/remove_reference.md)`&amp;lt;R&amp;gt;::traits_type, traits&amp;gt;`が`true`であること
 
 
 ## 事前条件
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>acd1034</name>
        <email>48613285+acd1034@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>view_interface -- view_interface : LWG Issue 3549対応</title>
      <link href="https://cpprefjp.github.io/reference/ranges/view_interface.html"/>
      <id>c979c55860c923d0090b0e1c0b3299c2e99e299c:reference/ranges/view_interface.md</id>
      <updated>2022-04-15T12:51:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/view_interface.md b/reference/ranges/view_interface.md
index 04d5516fd..1e1765f58 100644
--- a/reference/ranges/view_interface.md
+++ b/reference/ranges/view_interface.md
@@ -8,10 +8,9 @@
 namespace std::ranges {
   template&amp;lt;class D&amp;gt;
     requires is_class_v&amp;lt;D&amp;gt; &amp;amp;&amp;amp; same_as&amp;lt;D, remove_cv_t&amp;lt;D&amp;gt;&amp;gt;
-  class view_interface : public view_base { …… };
+  class view_interface { …… };
 }
 ```
-* view_base[link view_base.md]
 * is_class_v[link /reference/type_traits/is_class.md]
 * same_as[link /reference/concepts/same_as.md]
 * remove_cv_t[link /reference/type_traits/remove_cv.md]
@@ -59,3 +58,4 @@ namespace std::ranges {
 ## 参照
 - [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
 - [C++20 ranges](https://techbookfest.org/product/5134506308665344)
+- [LWG Issue 3549. `view_interface` is overspecified to derive from `view_base`](https://cplusplus.github.io/LWG/issue3549)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>enable_view -- enable_view : LWG Issue 3549対応</title>
      <link href="https://cpprefjp.github.io/reference/ranges/enable_view.html"/>
      <id>481e7e83b49332b33952117f678b6f1b850f2c9a:reference/ranges/enable_view.md</id>
      <updated>2022-04-15T12:47:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/enable_view.md b/reference/ranges/enable_view.md
index 5dee32f1f..88acefd57 100644
--- a/reference/ranges/enable_view.md
+++ b/reference/ranges/enable_view.md
@@ -7,7 +7,7 @@
 ```cpp
 namespace std::ranges {
   template&amp;lt;class T&amp;gt;
-  inline constexpr bool enable_view = derived_from&amp;lt;T, view_base&amp;gt;;
+  inline constexpr bool enable_view = derived_from&amp;lt;T, view_base&amp;gt; | is-derived-from-view-interface&amp;lt;T&amp;gt;;
 }
 ```
 * derived_from[link /reference/concepts/derived_from.md]
@@ -19,6 +19,21 @@ namespace std::ranges {
 
 [`view`](view.md)コンセプトの要件は意味論要件がメインなため、[`view_base`](view_base.md)を基底クラスにするか、`enable_view`を特殊化することで、明示的に`view`であることを示すようになっている。
 
+## *is-derived-from-view-interface*
+
+`is-derived-from-view-interface&amp;lt;T&amp;gt;`は説明専用の`bool`型の変数テンプレートである。
+
+```cpp
+namespace std::ranges {
+  template&amp;lt;class T&amp;gt;
+  inline constexpr bool is-derived-from-view-interface = see below; // 説明専用
+}
+```
+
+`is-derived-from-view-interface&amp;lt;T&amp;gt;`は、`T`がある型`U`についてただ一つだけ`view_interface&amp;lt;U&amp;gt;`を`public`な基底クラスに持ち、他の型`V`についての`view_interface&amp;lt;V&amp;gt;`を基底クラスに持たない場合に`true`となる。
+
+多くの場合`U = T`であり、その場合`T`は`view_interface&amp;lt;T&amp;gt;`を`public`で1つだけ継承していればこれを満たすことができる。継承関係が複雑な型などで、`view_interface`を複数継承階層の中に持っているとこれを満たすことができなくなる。
+
 ## 例
 
 ```cpp example
@@ -55,3 +70,4 @@ int main()
 ## 参照
 - [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
 - [C++20 ranges](https://techbookfest.org/product/5134506308665344)
+- [LWG Issue 3549. `view_interface` is overspecified to derive from `view_base`](https://cplusplus.github.io/LWG/issue3549)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>view_interface -- view_interface : 利用法を追記</title>
      <link href="https://cpprefjp.github.io/reference/ranges/view_interface.html"/>
      <id>52ffdf82a9a6b33ab5bbdf2314f890c9486045e4:reference/ranges/view_interface.md</id>
      <updated>2022-04-15T12:20:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/view_interface.md b/reference/ranges/view_interface.md
index 4ca0de06d..04d5516fd 100644
--- a/reference/ranges/view_interface.md
+++ b/reference/ranges/view_interface.md
@@ -18,7 +18,9 @@ namespace std::ranges {
 
 ## 概要
 
-`view_interface`は、[`view`](view.md)を実装する際に便利なクラステンプレートである。使用するときは、派生クラスを`view_interface`のテンプレート引数にする(CRTP)。
+`view_interface`は、[`view`](view.md)を実装する際に便利なクラステンプレートである。
+
+使用するときは、`D`で`view_interface`を公開継承した上で派生クラス`D`を`view_interface`のテンプレート引数にする(CRTP)。
 
 ## テンプレートパラメータ制約
 
@@ -49,6 +51,11 @@ namespace std::ranges {
 - [ICC](/implementation.md#icc): ?
 - [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
 
+
+## 関連項目
+
+- [`enable_view`](/reference/ranges/enable_view.md)
+
 ## 参照
 - [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
 - [C++20 ranges](https://techbookfest.org/product/5134506308665344)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
</feed>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2025-07-31T13:08:10.077877</updated>
  <id>c1121c2e-3413-4e09-8030-75fdef010903</id>

  
    <entry>
      <title>when_all -- execution/when_all: LWG4227</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/when_all.html"/>
      <id>664d0699baa19a5c51b3b3ddea3af210899cd419:reference/execution/execution/when_all.md</id>
      <updated>2025-07-31T22:03:52+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/when_all.md b/reference/execution/execution/when_all.md
index 0992cf2e9..ae02008c7 100644
--- a/reference/execution/execution/when_all.md
+++ b/reference/execution/execution/when_all.md
@@ -92,7 +92,7 @@ namespace std::execution {
 `impls-for&amp;lt;when_all_t&amp;gt;::get-state`メンバは、下記ラムダ式と等価な関数呼び出し可能なオブジェクトで初期化される。
 
 ```cpp
-[]&amp;lt;class Sndr, class Rcvr&amp;gt;(Sndr&amp;amp;&amp;amp; sndr, Rcvr&amp;amp; rcvr) noexcept(e) -&amp;gt; decltype(e) {
+[]&amp;lt;class Sndr, class Rcvr&amp;gt;(Sndr&amp;amp;&amp;amp; sndr, Rcvr&amp;amp; rcvr) noexcept(noexcept(e)) -&amp;gt; decltype(e) {
   return e;
 }
 ```
@@ -477,3 +477,4 @@ error=-2
 - [P2999R3 Sender Algorithm Customization](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p2999r3.html)
 - [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
 - [P3396R1 std::execution wording fixes](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p3396r1.html)
+- [LWG 4227. Missing `noexcept` operator in [exec.when.all]](https://cplusplus.github.io/LWG/issue4227)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>with-await-transform -- execution/with-await-transform: LWG4201</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/with-await-transform.html"/>
      <id>0bf9ae6391387157cca3248ca664007b9dadf7ec:reference/execution/execution/with-await-transform.md</id>
      <updated>2025-07-31T22:01:29+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/with-await-transform.md b/reference/execution/execution/with-await-transform.md
index ea2531348..39fbfe496 100644
--- a/reference/execution/execution/with-await-transform.md
+++ b/reference/execution/execution/with-await-transform.md
@@ -20,8 +20,9 @@ namespace std::execution {
     }
 
     template&amp;lt;has-as-awaitable&amp;lt;Derived&amp;gt; T&amp;gt;
-    decltype(auto) await_transform(T&amp;amp;&amp;amp; value)
+    auto await_transform(T&amp;amp;&amp;amp; value)
       noexcept(noexcept(std::forward&amp;lt;T&amp;gt;(value).as_awaitable(declval&amp;lt;Derived&amp;amp;&amp;gt;())))
+      -&amp;gt; decltype(std::forward&amp;lt;T&amp;gt;(value).as_awaitable(declval&amp;lt;Derived&amp;amp;&amp;gt;()))
     {
       return std::forward&amp;lt;T&amp;gt;(value).as_awaitable(static_cast&amp;lt;Derived&amp;amp;&amp;gt;(*this));
     }
@@ -45,3 +46,4 @@ namespace std::execution {
 
 ## 参照
 - [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
+- [LWG 4201. `with-await-transform::await_transform` should not use a deduced return type](https://cplusplus.github.io/LWG/issue4201)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operation_state -- execution/operation_state: LWG4200</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/operation_state.html"/>
      <id>2aa170e38a92b594b09c4ff65b3375f28e3903aa:reference/execution/execution/operation_state.md</id>
      <updated>2025-07-31T21:59:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/operation_state.md b/reference/execution/execution/operation_state.md
index ac0ea20c8..06ebbf074 100644
--- a/reference/execution/execution/operation_state.md
+++ b/reference/execution/execution/operation_state.md
@@ -9,9 +9,8 @@ namespace std::execution {
   template&amp;lt;class O&amp;gt;
   concept operation_state =
     derived_from&amp;lt;typename O::operation_state_concept, operation_state_t&amp;gt; &amp;amp;&amp;amp;
-    is_object_v&amp;lt;O&amp;gt; &amp;amp;&amp;amp;
     requires (O&amp;amp; o) {
-      { start(o) } noexcept;
+      start(o);
     };
 
   struct operation_state_t {};  // タグ型
@@ -25,8 +24,8 @@ namespace std::execution {
 
 下記をみたすクラス型はOperation Stateとみなせる。
 
-- `operation_state_t`をメンバ型`O::operation_state_concept`として定義するクラス型
-- `O`型の左辺値`o`に対して[`execution::start`](start.md)`(o)`が有効な式かつ例外送出されないこと
+- `operation_state_t`をメンバ型`O::operation_state_concept`として定義する
+- `O`型の左辺値`o`に対して[`execution::start`](start.md)`(o)`が有効な式
 
 非同期操作の生存期間中に`operation_state`オブジェクトが破棄されると、未定義の動作を引き起こす。
 
@@ -89,3 +88,4 @@ int main()
 
 ## 参照
 - [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
+- [LWG 4200. The `operation_state` concept can be simplified](https://cplusplus.github.io/LWG/issue4200)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>transform_env -- execution/default_domain/transform_env: LWG4209</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/default_domain/transform_env.html"/>
      <id>86a0ae386967dff230e2d6f64a072ab802d22c6b:reference/execution/execution/default_domain/transform_env.md</id>
      <updated>2025-07-31T21:53:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/default_domain/transform_env.md b/reference/execution/execution/default_domain/transform_env.md
index cdc915cdd..ebab7fb39 100644
--- a/reference/execution/execution/default_domain/transform_env.md
+++ b/reference/execution/execution/default_domain/transform_env.md
@@ -28,7 +28,7 @@ template&amp;lt;sender Sndr, queryable Env&amp;gt;
 説明用の式`e`を次の通りとしたとき、`e`を返す。
 
 - 適格であるならば、式[`tag_of_t`](../tag_of_t.md)`&amp;lt;Sndr&amp;gt;().transform_env(`[`std::forward`](/reference/utility/forward.md)`&amp;lt;Sndr&amp;gt;(sndr),` [`std::forward`](/reference/utility/forward.md)`&amp;lt;Env&amp;gt;(env))`
-- そうでなければ、`static_cast&amp;lt;Env&amp;gt;(`[`std::forward`](/reference/utility/forward.md)`&amp;lt;Env&amp;gt;(env))`
+- そうでなければ、[`FWD-ENV`](../../forwarding_query.md)`(`[`std::forward`](/reference/utility/forward.md)`&amp;lt;Env&amp;gt;(env))`
 
 
 ## 例外
@@ -53,3 +53,4 @@ template&amp;lt;sender Sndr, queryable Env&amp;gt;
 ## 参照
 - [P2999R3 Sender Algorithm Customization](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p2999r3.html)
 - [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
+- [LWG 4209. `default_domain::transform_env` should be returning `FWD-ENV(env)`](https://cplusplus.github.io/LWG/issue4209)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>connect -- execution/connect: LWG4208</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/connect.html"/>
      <id>46c87af7befb28566eb8c2206b1dfa3eb1001313:reference/execution/execution/connect.md</id>
      <updated>2025-07-31T21:50:28+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/connect.md b/reference/execution/execution/connect.md
index 1ca3d497b..484c5208c 100644
--- a/reference/execution/execution/connect.md
+++ b/reference/execution/execution/connect.md
@@ -32,7 +32,7 @@ transform_sender(decltype(get-domain-late(sndr, get_env(rcvr))){}, sndr, get_env
 * get-domain-late[link get-domain-late.md]
 * get_env[link get_env.md]
 
-式`connect(sndr, rcvr)`は下記と等価であり、[`operation_state`](operation_state.md)を満たす型の値となる。
+式`connect(sndr, rcvr)`は`rcvr`が1回だけ評価されることを除いて、下記と等価。式の型は[`operation_state`](operation_state.md)を満たす。
 
 - 適格であるならば、式`new_sndr.connect(rcvr)`
 - そうでなければ、式`connect-awaitable(new_sndr, rcvr)`
@@ -238,3 +238,4 @@ int main()
 ## 参照
 - [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
 - [P3396R1 std::execution wording fixes](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p3396r1.html)
+- [LWG 4208. Wording needs to ensure that in `connect(sndr, rcvr)` that `rcvr` expression is only evaluated once](https://cplusplus.github.io/LWG/issue4208)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
</feed>
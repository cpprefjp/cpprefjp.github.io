<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2025-07-06T09:25:01.543422</updated>
  <id>b440fb9f-8cdf-4a65-b2be-9db5745a40a7</id>

  
    <entry>
      <title>srand -- add .nolink in `time` path</title>
      <link href="https://cpprefjp.github.io/reference/cstdlib/srand.html"/>
      <id>e1b31f5923717d346622beaa27dbb48c755689cc:reference/cstdlib/srand.md</id>
      <updated>2025-07-06T17:09:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstdlib/srand.md b/reference/cstdlib/srand.md
index 6a0c1b392..2b3b0b613 100644
--- a/reference/cstdlib/srand.md
+++ b/reference/cstdlib/srand.md
@@ -46,5 +46,5 @@ int main()
 ## 関連項目
 - [`rand`](rand.md):疑似乱数を生成する
 - [`RAND_MAX`](rand_max.md):`std::rand()`が返す最高値。
-- [`time`]():時刻を取得する
+- [`time`](/reference/ctime/time.md.nolink):時刻を取得する
 - [`time_t`](/reference/ctime/time_t.md):UNIX時間を表すための型。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>K10-K10</name>
        <email>keito.tottori@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>rand -- add path to `RAND_MAX`</title>
      <link href="https://cpprefjp.github.io/reference/cstdlib/rand.html"/>
      <id>ce18c980e315d55a4a1e3c9f54d96f8252078a13:reference/cstdlib/rand.md</id>
      <updated>2025-07-06T16:58:56+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstdlib/rand.md b/reference/cstdlib/rand.md
index 057ed18d8..9b8ded0db 100644
--- a/reference/cstdlib/rand.md
+++ b/reference/cstdlib/rand.md
@@ -43,5 +43,5 @@ int main()
 
 ## 関連項目
 - [`srand()`](srand.md):この関数の疑似乱数生成器で使用するシード値を決定する。
-- [`RAND_MAX`]():この関数で返される疑似乱数の最大値。
+- [`RAND_MAX`](rand_max.md):この関数で返される疑似乱数の最大値。
 - [`random`](/reference/random.md):より安全な乱数生成ライブラリ。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>K10-K10</name>
        <email>keito.tottori@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>srand -- add path to `RAND_MAX`</title>
      <link href="https://cpprefjp.github.io/reference/cstdlib/srand.html"/>
      <id>ce18c980e315d55a4a1e3c9f54d96f8252078a13:reference/cstdlib/srand.md</id>
      <updated>2025-07-06T16:58:56+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstdlib/srand.md b/reference/cstdlib/srand.md
index 726effe71..6a0c1b392 100644
--- a/reference/cstdlib/srand.md
+++ b/reference/cstdlib/srand.md
@@ -45,6 +45,6 @@ int main()
 
 ## 関連項目
 - [`rand`](rand.md):疑似乱数を生成する
-- `RAND_MAX`:`std::rand()`が返す最高値。
-- `time`:時刻を取得する
+- [`RAND_MAX`](rand_max.md):`std::rand()`が返す最高値。
+- [`time`]():時刻を取得する
 - [`time_t`](/reference/ctime/time_t.md):UNIX時間を表すための型。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>K10-K10</name>
        <email>keito.tottori@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>cstdlib -- new page `cstdlib/RAND_MAX`</title>
      <link href="https://cpprefjp.github.io/reference/cstdlib.html"/>
      <id>76d4ce82c58a306d7bd36340270f547bd5bf29a1:reference/cstdlib.md</id>
      <updated>2025-07-06T16:58:42+09:00</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;cstdlib&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;cstdlib&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;cstdlib&amp;gt;&lt;/code&gt;ヘッダでは、一般的なユーティリティの関数を定義する。これらの機能は基本的には、&lt;code&gt;std&lt;/code&gt;名前空間に属することを除いてC言語の標準ライブラリ&lt;code&gt;&amp;lt;stdlib.h&amp;gt;&lt;/code&gt;ヘッダと同じである。&lt;/p&gt;
&lt;p&gt;本ヘッダはフリースタンディング環境でも提供される。
フリースタンディング環境の場合、少なくとも&lt;code&gt;abort&lt;/code&gt;, &lt;code&gt;atexit&lt;/code&gt;, &lt;code&gt;at_quick_exit&lt;/code&gt;, &lt;code&gt;exit&lt;/code&gt;, &lt;code&gt;quick_exit&lt;/code&gt;関数がサポートされる。&lt;/p&gt;
&lt;p&gt;ただし、一部の機能には、&lt;code&gt;[[noreturn]]&lt;/code&gt;属性、&lt;code&gt;noexcept&lt;/code&gt;キーワード、スレッドローカルストレージのような、C++特有の言語機能に関する規定がある。&lt;/p&gt;
&lt;h2&gt;数値変換&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/atoi_atol_atoll.html&#34;&gt;atoi&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列を&lt;code&gt;int&lt;/code&gt;型に変換する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/atoi_atol_atoll.html&#34;&gt;atol&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列を&lt;code&gt;long&lt;/code&gt;型に変換する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/atoi_atol_atoll.html&#34;&gt;atoll&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列を&lt;code&gt;long long&lt;/code&gt;型に変換する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/atof.html&#34;&gt;atof&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列を&lt;code&gt;double&lt;/code&gt;型に変換する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;strtol&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列を、基数を指定して&lt;code&gt;long&lt;/code&gt;型に変換する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;strtoll&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列を、基数を指定して&lt;code&gt;long long&lt;/code&gt;型に変換する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;strtoul&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列を、基数を指定して&lt;code&gt;unsigned long&lt;/code&gt;型に変換する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;strtoull&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列を、基数を指定して&lt;code&gt;unsigned long long&lt;/code&gt;型に変換する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;strtof&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列を、&lt;code&gt;float&lt;/code&gt;型に変換する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;strtod&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列を、&lt;code&gt;double&lt;/code&gt;型に変換する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;strtold&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列を、&lt;code&gt;long double&lt;/code&gt;型に変換する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;擬似乱数&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/rand_max.html&#34;&gt;RAND_MAX&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;rand&lt;/code&gt;関数によって生成される値域の最大値を表す整数値マクロ (macro)&lt;/td&gt;
&lt;td&gt;C++14から非推奨&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/srand.html&#34;&gt;srand&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;rand&lt;/code&gt;関数によって生成される擬似乱数のシードを指定する (function)&lt;/td&gt;
&lt;td&gt;C++14から非推奨&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/rand.html&#34;&gt;rand&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;srand&lt;/code&gt;で指定されたシードを元に、擬似乱数を生成する (function)&lt;/td&gt;
&lt;td&gt;C++14から非推奨&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;メモリ管理&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;aligned_alloc&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定したアライメントでメモリを確保する (function)&lt;/td&gt;
&lt;td&gt;C++17&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;malloc&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;メモリを確保する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;calloc&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;メモリを確保し、領域をゼロ初期化する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;realloc&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;メモリを再確保する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;free&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;確保したメモリを解放する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;プログラムの開始と終了&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/exit_failure.html&#34;&gt;EXIT_FAILURE&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;プログラムが異常終了したことを表す整数値マクロ (macro)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/exit_success.html&#34;&gt;EXIT_SUCCESS&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;プログラムが正常終了したことを表す整数値マクロ (macro)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/abort.html&#34;&gt;abort&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;プログラムを異常終了させる (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/exit_.html&#34;&gt;_Exit&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;後処理をせずに、プログラムを終了させる (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/exit.html&#34;&gt;exit&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;プログラムを終了させる (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/atexit.html&#34;&gt;atexit&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;プログラムが通常の方法で終了するときに呼ばれる関数を登録する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/quick_exit.html&#34;&gt;quick_exit&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;後処理をせずに、プログラムを終了させる (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/at_quick_exit.html&#34;&gt;at_quick_exit&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;quick_exit&lt;/code&gt;関数でプログラムが終了するときに呼ばれる関数を登録する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;環境&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/getenv.html&#34;&gt;getenv&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;環境変数を取得する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/system.html&#34;&gt;system&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;システムコマンドを実行する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;検索と並び替え&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;bsearch&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;二分探索を行う (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;qsort&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の並べ替えを行う (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;整数に対する算術関数&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/abs.html&#34;&gt;abs&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int&lt;/code&gt;の絶対値を取得する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/abs.html&#34;&gt;labs&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;long&lt;/code&gt;の絶対値を取得する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/abs.html&#34;&gt;llabs&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;long long&lt;/code&gt;の絶対値を取得する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/div_t.html&#34;&gt;div_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;div&lt;/code&gt;関数の戻り値型 (class)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/div.html&#34;&gt;div&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int&lt;/code&gt;の除算と剰余算を行う (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/ldiv_t.html&#34;&gt;ldiv_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ldiv&lt;/code&gt;関数の戻り値型 (class)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/div.html&#34;&gt;ldiv&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;long&lt;/code&gt;の除算と剰余算を行う (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/lldiv_t.html&#34;&gt;lldiv_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;lldiv&lt;/code&gt;関数の戻り値型 (class)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/div.html&#34;&gt;lldiv&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;long long&lt;/code&gt;の除算と剰余算を行う (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;マルチバイト文字とワイド文字の変換&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;MB_CUR_MAX&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;マルチバイト文字列の最大サイズを表す整数値マクロ (macro)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mblen&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;マルチバイト文字の長さを取得する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mbtowc&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;マルチバイト文字を、ワイド文字に変換する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;wctomb&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ワイド文字を、マルチバイト文字に変換する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mbstowcs&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;マルチバイト文字列を、ワイド文字列に変換する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;wcstombs&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ワイド文字列を、マルチバイト文字列に変換する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;</content>
      
      <author>
        <name>K10-K10</name>
        <email>keito.tottori@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>RAND_MAX -- new page `cstdlib/RAND_MAX`</title>
      <link href="https://cpprefjp.github.io/reference/cstdlib/rand_max.html"/>
      <id>76d4ce82c58a306d7bd36340270f547bd5bf29a1:reference/cstdlib/rand_max.md</id>
      <updated>2025-07-06T16:58:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstdlib/rand_max.md b/reference/cstdlib/rand_max.md
new file mode 100644
index 000000000..a78c39747
--- /dev/null
+++ b/reference/cstdlib/rand_max.md
@@ -0,0 +1,38 @@
+# RAND_MAX
+* cstdlib[meta header]
+* macro[meta id-type]
+
+```cpp
+#define RAND_MAX /*implementation defined*/
+```
+
+## 概要
+`std::rand()`関数で生成される疑似乱数の最大値を定義しているマクロ。
+
+このマクロの値は実装依存である。
+
+また、少なくとも`32767`以上であることは保証されている。
+
+## 例
+```cpp example
+#include &amp;lt;climits&amp;gt;
+#include &amp;lt;cstdlib&amp;gt;
+#include &amp;lt;ctime&amp;gt;
+#include &amp;lt;iostream&amp;gt;
+ 
+int main()
+{
+    // use current time as seed for random generator
+    std::srand(std::time(NULL));
+ 
+    std::cout &amp;lt;&amp;lt; &amp;#34;RAND_MAX: &amp;#34; &amp;lt;&amp;lt; RAND_MAX &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
+}
+```
+
+## 出力例
+```
+RAND_MAX: 2147483647
+```
+
+## 関連項目
+- [`rand()`](rand.md): 疑似乱数を生成する。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>K10-K10</name>
        <email>keito.tottori@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>linear_congruential_engine -- delete `.nolink` in path to `cstdlib/rand`</title>
      <link href="https://cpprefjp.github.io/reference/random/linear_congruential_engine.html"/>
      <id>29f79cc2b24a2586a4d935b6820c03c3b86b0159:reference/random/linear_congruential_engine.md</id>
      <updated>2025-07-06T16:46:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/linear_congruential_engine.md b/reference/random/linear_congruential_engine.md
index 6011bbc5b..3cfa8af5a 100644
--- a/reference/random/linear_congruential_engine.md
+++ b/reference/random/linear_congruential_engine.md
@@ -35,7 +35,7 @@ $$x_{n+1}= (a \times x_n + c) \bmod m$$
 * 周期が短い(2&amp;lt;sup&amp;gt;31&amp;lt;/sup&amp;gt;-1)
 
 省メモリで高速という点から、多くの言語で、標準の乱数生成法として使用されている。  
-C言語から引き継いだ標準ライブラリ関数[`std::rand()`](/reference/cstdlib/rand.md.nolink)の乱数生成法は実装定義だが、多くの実装で線形合同法が使用されている。
+C言語から引き継いだ標準ライブラリ関数[`std::rand()`](/reference/cstdlib/rand.md)の乱数生成法は実装定義だが、多くの実装で線形合同法が使用されている。
 
 
 しかし、メモリ使用量がそれほど問題にならないのであれば、メルセンヌ・ツイスター([`mt19937`](mt19937.md))の使用を検討した方がいいだろう。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>K10-K10</name>
        <email>keito.tottori@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>rand -- add path to `random`library</title>
      <link href="https://cpprefjp.github.io/reference/cstdlib/rand.html"/>
      <id>129dc5c77180cc9f2f6379bd1ff3013fb2b39456:reference/cstdlib/rand.md</id>
      <updated>2025-07-06T16:44:06+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstdlib/rand.md b/reference/cstdlib/rand.md
index e451faa51..057ed18d8 100644
--- a/reference/cstdlib/rand.md
+++ b/reference/cstdlib/rand.md
@@ -44,3 +44,4 @@ int main()
 ## 関連項目
 - [`srand()`](srand.md):この関数の疑似乱数生成器で使用するシード値を決定する。
 - [`RAND_MAX`]():この関数で返される疑似乱数の最大値。
+- [`random`](/reference/random.md):より安全な乱数生成ライブラリ。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>K10-K10</name>
        <email>keito.tottori@gmail.com</email>
      </author>
    </entry>
  
</feed>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++ Reference Site</title>
  <link href="http://cpprefjp.github.io" />
  <updated>2015-01-23T17:06:17.040529</updated>
  <id>cce88c41-9c3b-4577-86db-1d773ba37c13</id>

  
    <entry>
      <title>shared_timed_mutex (C++14) -- リンク切れを修正</title>
      <link href="http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex.html"/>
      <id>81b3fde204152a89415c439dce27542f664b0840:reference/shared_mutex/shared_timed_mutex.md</id>
      <updated>2015-01-23 17:06:00 +0900</updated>
      
        <content type="html">&lt;h1&gt;shared_timed_mutex (C++14)&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;shared_timed_mutex&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;shared_timed_mutex&lt;/code&gt;クラスは、&lt;a href=&#34;http://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock&#34; target=&#34;_blank&#34;&gt;Readers–writer lock&lt;/a&gt;パターンをサポートするミューテックスクラスである。&lt;/p&gt;
&lt;p&gt;このパターンは、「複数のユーザーによる読み込みと、単一ユーザーによる書き込み」の排他制御を効率的に行うミューテックスクラスである。書き込みよりも読み込みの方が多い状況で使用する。&lt;/p&gt;
&lt;p&gt;このミューテックスクラスのロック取得方法は2種類ある。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;lock()&lt;/code&gt;／&lt;code&gt;unlock()&lt;/code&gt;メンバ関数：書き込み用のロックを取得する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/lock_shared.html&#34;&gt;&lt;code&gt;lock_shared()&lt;/code&gt;&lt;/a&gt;／&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/unlock_shared.html&#34;&gt;&lt;code&gt;unlock_shared()&lt;/code&gt;&lt;/a&gt;メンバ関数：読み込み用のロックを取得する&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;このクラスは、デストラクタで自動的にロックを手放すことはしない。そのため、以下の補助クラスを使用して、デストラクタで自動的にロックを手放す。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/mutex/lock_guard.html&#34;&gt;&lt;code&gt;lock_guard&lt;/code&gt;&lt;/a&gt;クラス／&lt;a href=&#34;http://cpprefjp.github.io/reference/mutex/unique_lock.html&#34;&gt;&lt;code&gt;unique_lock&lt;/code&gt;&lt;/a&gt;クラス：書き込み用のロックを自動的に手放す&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/mutex/shared_lock.md.nolink&#34;&gt;&lt;code&gt;shared_lock&lt;/code&gt;&lt;/a&gt;：読み込み用のロックを自動的に手放す&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;メンバ関数&lt;/h2&gt;
&lt;h3&gt;構築・破棄&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/op_constructor.md.nolink&#34;&gt;&lt;code&gt;(constructor)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コンストラクタ&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/op_destructor.md.nolink&#34;&gt;&lt;code&gt;(destructor)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;デストラクタ&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator=(const shared_timed_mutex&amp;amp;) = delete;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;代入演算子&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;排他の所有権&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/lock.md.nolink&#34;&gt;&lt;code&gt;lock&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;排他ロックを取得する&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/try_lock.md.nolink&#34;&gt;&lt;code&gt;try_lock&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;排他ロックの取得を試みる&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/try_lock_for.md.nolink&#34;&gt;&lt;code&gt;try_lock_for&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;タイムアウトする相対時間を指定して排他ロックの取得を試みる&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/try_lock_until.md.nolink&#34;&gt;&lt;code&gt;try_lock_until&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;タイムアウトする絶対時間を指定して排他ロックの取得を試みる&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/unlock.md.nolink&#34;&gt;&lt;code&gt;unlock&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;排他ロックを手放す&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;共有の所有権&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/lock_shared.html&#34;&gt;&lt;code&gt;lock_shared&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;共有ロックを取得する&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/try_lock_shared.html&#34;&gt;&lt;code&gt;try_lock_shared&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;共有ロックの取得を試みる&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/try_lock_shared_for.html&#34;&gt;&lt;code&gt;try_lock_shared_for&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;タイムアウトする相対時間を指定して共有ロックの取得を試みる&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/try_lock_shared_until.md.nolink&#34;&gt;&lt;code&gt;try_lock_shared_until&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;タイムアウトする絶対時間を指定して共有ロックの取得を試みる&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/unlock_shared.html&#34;&gt;&lt;code&gt;unlock_shared&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;共有ロックを手放す&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;thread&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;shared_mutex&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;chrono&amp;gt;&lt;/span&gt;

&lt;a href=&#34;http://cpprefjp.github.io/reference/mutex/mutex.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;mutex&lt;/a&gt; print_mtx;
&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;print_value&lt;/span&gt;(&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; x)
{
  &lt;a href=&#34;http://cpprefjp.github.io/reference/mutex/lock_guard.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;lock_guard&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/mutex/mutex.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;mutex&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; lock(print_mtx);
  &lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; x &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/endl.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl&lt;/a&gt;;
}

&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;X&lt;/span&gt; {
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;shared_timed_mutex mtx_;
  &lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; count_ &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;0&lt;/span&gt;;
&lt;span style=&#34;color: #A0A000&#34;&gt;public:&lt;/span&gt;
  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 書き込み側：カウンタを加算する&lt;/span&gt;
  &lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;writer&lt;/span&gt;()
  {
    &lt;a href=&#34;http://cpprefjp.github.io/reference/mutex/lock_guard.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;lock_guard&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;shared_timed_mutex&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; lock(mtx_);
    &lt;span style=&#34;color: #666666&#34;&gt;++&lt;/span&gt;count_;
  }

  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 読み込み側：カウンタの値を読む&lt;/span&gt;
  &lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;reader&lt;/span&gt;()
  {
    &lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_lock.md.nolink&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;shared_lock&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;shared_timed_mutex&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; lock(mtx_);
    print_value(count_);
  }
};

X obj;
&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;writer_thread&lt;/span&gt;()
{
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;3&lt;/span&gt;; &lt;span style=&#34;color: #666666&#34;&gt;++&lt;/span&gt;i) {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;this_thread&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/thread/this_thread/sleep_for.html&#34;&gt;sleep_for&lt;/a&gt;(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;chrono&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/chrono/milliseconds.html&#34;&gt;milliseconds&lt;/a&gt;(&lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;));
    obj.writer();
  }
}

&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;reader_thread&lt;/span&gt;()
{
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;10&lt;/span&gt;; &lt;span style=&#34;color: #666666&#34;&gt;++&lt;/span&gt;i) {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;this_thread&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/thread/this_thread/sleep_for.html&#34;&gt;sleep_for&lt;/a&gt;(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;chrono&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/chrono/milliseconds.html&#34;&gt;milliseconds&lt;/a&gt;(&lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;));
    obj.reader();
  }
}

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 書き込みユーザー1人&lt;/span&gt;
  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 読み込みユーザー3人&lt;/span&gt;
  &lt;a href=&#34;http://cpprefjp.github.io/reference/thread/thread.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;thread&lt;/a&gt; writer1(writer_thread);
  &lt;a href=&#34;http://cpprefjp.github.io/reference/thread/thread.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;thread&lt;/a&gt; reader1(reader_thread);
  &lt;a href=&#34;http://cpprefjp.github.io/reference/thread/thread.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;thread&lt;/a&gt; reader2(reader_thread);
  &lt;a href=&#34;http://cpprefjp.github.io/reference/thread/thread.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;thread&lt;/a&gt; reader3(reader_thread);

  writer1.&lt;a href=&#34;http://cpprefjp.github.io/reference/thread/thread/join.html&#34;&gt;join()&lt;/a&gt;;
  reader1.&lt;a href=&#34;http://cpprefjp.github.io/reference/thread/thread/join.html&#34;&gt;join()&lt;/a&gt;;
  reader2.&lt;a href=&#34;http://cpprefjp.github.io/reference/thread/thread/join.html&#34;&gt;join()&lt;/a&gt;;
  reader3.&lt;a href=&#34;http://cpprefjp.github.io/reference/thread/thread/join.html&#34;&gt;join()&lt;/a&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力例&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;1
1
1
2
2
2
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++14&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang, C++14 mode&lt;/a&gt;: 3.4&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++14 mode&lt;/a&gt;: 4.9&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt; ??&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock&#34; target=&#34;_blank&#34;&gt;Readers–writer lock - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3427.html&#34; target=&#34;_blank&#34;&gt;N3427 Shared locking in C++&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3568.html&#34; target=&#34;_blank&#34;&gt;N3568 Shared locking in C++ (Revision 1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3659.html&#34; target=&#34;_blank&#34;&gt;N3659 Shared locking in C++ (Revision 2)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n3891.htm&#34; target=&#34;_blank&#34;&gt;N3891 A proposal to rename &lt;code&gt;shared_mutex&lt;/code&gt; to &lt;code&gt;shared_timed_mutex&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>shared_timed_mutex (C++14) -- リンク切れを修正</title>
      <link href="http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex.html"/>
      <id>cfd46c15204878106315a07d7b75648ef04ef970:reference/shared_mutex/shared_timed_mutex.md</id>
      <updated>2015-01-23 17:03:12 +0900</updated>
      
        <content type="html">&lt;h1&gt;shared_timed_mutex (C++14)&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;shared_timed_mutex&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;shared_timed_mutex&lt;/code&gt;クラスは、&lt;a href=&#34;http://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock&#34; target=&#34;_blank&#34;&gt;Readers–writer lock&lt;/a&gt;パターンをサポートするミューテックスクラスである。&lt;/p&gt;
&lt;p&gt;このパターンは、「複数のユーザーによる読み込みと、単一ユーザーによる書き込み」の排他制御を効率的に行うミューテックスクラスである。書き込みよりも読み込みの方が多い状況で使用する。&lt;/p&gt;
&lt;p&gt;このミューテックスクラスのロック取得方法は2種類ある。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;lock()&lt;/code&gt;／&lt;code&gt;unlock()&lt;/code&gt;メンバ関数：書き込み用のロックを取得する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/lock_shared.html&#34;&gt;&lt;code&gt;lock_shared()&lt;/code&gt;&lt;/a&gt;／&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/unlock_shared.html&#34;&gt;&lt;code&gt;unlock_shared()&lt;/code&gt;&lt;/a&gt;メンバ関数：読み込み用のロックを取得する&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;このクラスは、デストラクタで自動的にロックを手放すことはしない。そのため、以下の補助クラスを使用して、デストラクタで自動的にロックを手放す。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/mutex/lock_guard.html&#34;&gt;&lt;code&gt;lock_guard&lt;/code&gt;&lt;/a&gt;クラス／&lt;a href=&#34;http://cpprefjp.github.io/reference/mutex/unique_lock.html&#34;&gt;&lt;code&gt;unique_lock&lt;/code&gt;&lt;/a&gt;クラス：書き込み用のロックを自動的に手放す&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/mutex/shared_lock.md.nolink&#34;&gt;&lt;code&gt;shared_lock&lt;/code&gt;&lt;/a&gt;：読み込み用のロックを自動的に手放す&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;メンバ関数&lt;/h2&gt;
&lt;h3&gt;構築・破棄&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/op_constructor.md.nolink&#34;&gt;&lt;code&gt;(constructor)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コンストラクタ&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/op_destructor.md.nolink&#34;&gt;&lt;code&gt;(destructor)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;デストラクタ&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator=(const shared_timed_mutex&amp;amp;) = delete;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;代入演算子&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;排他の所有権&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/lock.md.nolink&#34;&gt;&lt;code&gt;lock&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;排他ロックを取得する&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/try_lock.md.nolink&#34;&gt;&lt;code&gt;try_lock&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;排他ロックの取得を試みる&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/try_lock_shared_for.html&#34;&gt;&lt;code&gt;try_lock_for&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;タイムアウトする相対時間を指定して排他ロックの取得を試みる&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/try_lock_shared_until.md.nolink&#34;&gt;&lt;code&gt;try_lock_until&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;タイムアウトする絶対時間を指定して排他ロックの取得を試みる&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/unlock.md.nolink&#34;&gt;&lt;code&gt;unlock&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;排他ロックを手放す&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;共有の所有権&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/lock_shared.html&#34;&gt;&lt;code&gt;lock_shared&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;共有ロックを取得する&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/try_lock_shared.html&#34;&gt;&lt;code&gt;try_lock_shared&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;共有ロックの取得を試みる&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/try_lock_shared_for.md.nolink&#34;&gt;&lt;code&gt;try_lock_shared_for&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;タイムアウトする相対時間を指定して共有ロックの取得を試みる&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/try_lock_shared_until.md.nolink&#34;&gt;&lt;code&gt;try_lock_shared_until&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;タイムアウトする絶対時間を指定して共有ロックの取得を試みる&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/unlock_shared.html&#34;&gt;&lt;code&gt;unlock_shared&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;共有ロックを手放す&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;thread&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;shared_mutex&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;chrono&amp;gt;&lt;/span&gt;

&lt;a href=&#34;http://cpprefjp.github.io/reference/mutex/mutex.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;mutex&lt;/a&gt; print_mtx;
&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;print_value&lt;/span&gt;(&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; x)
{
  &lt;a href=&#34;http://cpprefjp.github.io/reference/mutex/lock_guard.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;lock_guard&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/mutex/mutex.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;mutex&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; lock(print_mtx);
  &lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; x &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/endl.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl&lt;/a&gt;;
}

&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;X&lt;/span&gt; {
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;shared_timed_mutex mtx_;
  &lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; count_ &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;0&lt;/span&gt;;
&lt;span style=&#34;color: #A0A000&#34;&gt;public:&lt;/span&gt;
  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 書き込み側：カウンタを加算する&lt;/span&gt;
  &lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;writer&lt;/span&gt;()
  {
    &lt;a href=&#34;http://cpprefjp.github.io/reference/mutex/lock_guard.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;lock_guard&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;shared_timed_mutex&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; lock(mtx_);
    &lt;span style=&#34;color: #666666&#34;&gt;++&lt;/span&gt;count_;
  }

  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 読み込み側：カウンタの値を読む&lt;/span&gt;
  &lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;reader&lt;/span&gt;()
  {
    &lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_lock.md.nolink&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;shared_lock&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;shared_timed_mutex&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; lock(mtx_);
    print_value(count_);
  }
};

X obj;
&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;writer_thread&lt;/span&gt;()
{
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;3&lt;/span&gt;; &lt;span style=&#34;color: #666666&#34;&gt;++&lt;/span&gt;i) {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;this_thread&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/thread/this_thread/sleep_for.html&#34;&gt;sleep_for&lt;/a&gt;(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;chrono&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/chrono/milliseconds.html&#34;&gt;milliseconds&lt;/a&gt;(&lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;));
    obj.writer();
  }
}

&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;reader_thread&lt;/span&gt;()
{
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;10&lt;/span&gt;; &lt;span style=&#34;color: #666666&#34;&gt;++&lt;/span&gt;i) {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;this_thread&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/thread/this_thread/sleep_for.html&#34;&gt;sleep_for&lt;/a&gt;(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;chrono&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/chrono/milliseconds.html&#34;&gt;milliseconds&lt;/a&gt;(&lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;));
    obj.reader();
  }
}

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 書き込みユーザー1人&lt;/span&gt;
  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 読み込みユーザー3人&lt;/span&gt;
  &lt;a href=&#34;http://cpprefjp.github.io/reference/thread/thread.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;thread&lt;/a&gt; writer1(writer_thread);
  &lt;a href=&#34;http://cpprefjp.github.io/reference/thread/thread.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;thread&lt;/a&gt; reader1(reader_thread);
  &lt;a href=&#34;http://cpprefjp.github.io/reference/thread/thread.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;thread&lt;/a&gt; reader2(reader_thread);
  &lt;a href=&#34;http://cpprefjp.github.io/reference/thread/thread.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;thread&lt;/a&gt; reader3(reader_thread);

  writer1.&lt;a href=&#34;http://cpprefjp.github.io/reference/thread/thread/join.html&#34;&gt;join()&lt;/a&gt;;
  reader1.&lt;a href=&#34;http://cpprefjp.github.io/reference/thread/thread/join.html&#34;&gt;join()&lt;/a&gt;;
  reader2.&lt;a href=&#34;http://cpprefjp.github.io/reference/thread/thread/join.html&#34;&gt;join()&lt;/a&gt;;
  reader3.&lt;a href=&#34;http://cpprefjp.github.io/reference/thread/thread/join.html&#34;&gt;join()&lt;/a&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力例&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;1
1
1
2
2
2
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++14&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang, C++14 mode&lt;/a&gt;: 3.4&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++14 mode&lt;/a&gt;: 4.9&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt; ??&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock&#34; target=&#34;_blank&#34;&gt;Readers–writer lock - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3427.html&#34; target=&#34;_blank&#34;&gt;N3427 Shared locking in C++&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3568.html&#34; target=&#34;_blank&#34;&gt;N3568 Shared locking in C++ (Revision 1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3659.html&#34; target=&#34;_blank&#34;&gt;N3659 Shared locking in C++ (Revision 2)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n3891.htm&#34; target=&#34;_blank&#34;&gt;N3891 A proposal to rename &lt;code&gt;shared_mutex&lt;/code&gt; to &lt;code&gt;shared_timed_mutex&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>shared_timed_mutex (C++14) -- shared_timed_mutex : try_lock_shared_for関数のリファレンスを追加</title>
      <link href="http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex.html"/>
      <id>555d7e42512c9f15a3f84b7c759a0e4200d46434:reference/shared_mutex/shared_timed_mutex.md</id>
      <updated>2015-01-23 17:00:29 +0900</updated>
      
        <content type="html">&lt;h1&gt;shared_timed_mutex (C++14)&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;shared_timed_mutex&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;shared_timed_mutex&lt;/code&gt;クラスは、&lt;a href=&#34;http://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock&#34; target=&#34;_blank&#34;&gt;Readers–writer lock&lt;/a&gt;パターンをサポートするミューテックスクラスである。&lt;/p&gt;
&lt;p&gt;このパターンは、「複数のユーザーによる読み込みと、単一ユーザーによる書き込み」の排他制御を効率的に行うミューテックスクラスである。書き込みよりも読み込みの方が多い状況で使用する。&lt;/p&gt;
&lt;p&gt;このミューテックスクラスのロック取得方法は2種類ある。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;lock()&lt;/code&gt;／&lt;code&gt;unlock()&lt;/code&gt;メンバ関数：書き込み用のロックを取得する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/lock_shared.html&#34;&gt;&lt;code&gt;lock_shared()&lt;/code&gt;&lt;/a&gt;／&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/unlock_shared.html&#34;&gt;&lt;code&gt;unlock_shared()&lt;/code&gt;&lt;/a&gt;メンバ関数：読み込み用のロックを取得する&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;このクラスは、デストラクタで自動的にロックを手放すことはしない。そのため、以下の補助クラスを使用して、デストラクタで自動的にロックを手放す。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/mutex/lock_guard.html&#34;&gt;&lt;code&gt;lock_guard&lt;/code&gt;&lt;/a&gt;クラス／&lt;a href=&#34;http://cpprefjp.github.io/reference/mutex/unique_lock.html&#34;&gt;&lt;code&gt;unique_lock&lt;/code&gt;&lt;/a&gt;クラス：書き込み用のロックを自動的に手放す&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/mutex/shared_lock.md.nolink&#34;&gt;&lt;code&gt;shared_lock&lt;/code&gt;&lt;/a&gt;：読み込み用のロックを自動的に手放す&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;メンバ関数&lt;/h2&gt;
&lt;h3&gt;構築・破棄&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/op_constructor.md.nolink&#34;&gt;&lt;code&gt;(constructor)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コンストラクタ&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/op_destructor.md.nolink&#34;&gt;&lt;code&gt;(destructor)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;デストラクタ&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator=(const shared_timed_mutex&amp;amp;) = delete;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;代入演算子&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;排他の所有権&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/lock.md.nolink&#34;&gt;&lt;code&gt;lock&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;排他ロックを取得する&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/try_lock.md.nolink&#34;&gt;&lt;code&gt;try_lock&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;排他ロックの取得を試みる&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/try_lock_for.html&#34;&gt;&lt;code&gt;try_lock_for&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;タイムアウトする相対時間を指定して排他ロックの取得を試みる&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/try_lock_until.md.nolink&#34;&gt;&lt;code&gt;try_lock_until&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;タイムアウトする絶対時間を指定して排他ロックの取得を試みる&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/unlock.md.nolink&#34;&gt;&lt;code&gt;unlock&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;排他ロックを手放す&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;共有の所有権&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/lock_shared.html&#34;&gt;&lt;code&gt;lock_shared&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;共有ロックを取得する&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/try_lock_shared.html&#34;&gt;&lt;code&gt;try_lock_shared&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;共有ロックの取得を試みる&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/try_lock_shared_for.md.nolink&#34;&gt;&lt;code&gt;try_lock_shared_for&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;タイムアウトする相対時間を指定して共有ロックの取得を試みる&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/try_lock_shared_until.md.nolink&#34;&gt;&lt;code&gt;try_lock_shared_until&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;タイムアウトする絶対時間を指定して共有ロックの取得を試みる&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/unlock_shared.html&#34;&gt;&lt;code&gt;unlock_shared&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;共有ロックを手放す&lt;/td&gt;
&lt;td&gt;C++14&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;thread&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;shared_mutex&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;chrono&amp;gt;&lt;/span&gt;

&lt;a href=&#34;http://cpprefjp.github.io/reference/mutex/mutex.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;mutex&lt;/a&gt; print_mtx;
&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;print_value&lt;/span&gt;(&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; x)
{
  &lt;a href=&#34;http://cpprefjp.github.io/reference/mutex/lock_guard.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;lock_guard&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/mutex/mutex.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;mutex&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; lock(print_mtx);
  &lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; x &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/endl.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl&lt;/a&gt;;
}

&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;X&lt;/span&gt; {
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;shared_timed_mutex mtx_;
  &lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; count_ &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;0&lt;/span&gt;;
&lt;span style=&#34;color: #A0A000&#34;&gt;public:&lt;/span&gt;
  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 書き込み側：カウンタを加算する&lt;/span&gt;
  &lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;writer&lt;/span&gt;()
  {
    &lt;a href=&#34;http://cpprefjp.github.io/reference/mutex/lock_guard.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;lock_guard&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;shared_timed_mutex&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; lock(mtx_);
    &lt;span style=&#34;color: #666666&#34;&gt;++&lt;/span&gt;count_;
  }

  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 読み込み側：カウンタの値を読む&lt;/span&gt;
  &lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;reader&lt;/span&gt;()
  {
    &lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_lock.md.nolink&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;shared_lock&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;shared_timed_mutex&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; lock(mtx_);
    print_value(count_);
  }
};

X obj;
&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;writer_thread&lt;/span&gt;()
{
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;3&lt;/span&gt;; &lt;span style=&#34;color: #666666&#34;&gt;++&lt;/span&gt;i) {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;this_thread&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/thread/this_thread/sleep_for.html&#34;&gt;sleep_for&lt;/a&gt;(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;chrono&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/chrono/milliseconds.html&#34;&gt;milliseconds&lt;/a&gt;(&lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;));
    obj.writer();
  }
}

&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;reader_thread&lt;/span&gt;()
{
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;10&lt;/span&gt;; &lt;span style=&#34;color: #666666&#34;&gt;++&lt;/span&gt;i) {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;this_thread&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/thread/this_thread/sleep_for.html&#34;&gt;sleep_for&lt;/a&gt;(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;chrono&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/chrono/milliseconds.html&#34;&gt;milliseconds&lt;/a&gt;(&lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;));
    obj.reader();
  }
}

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 書き込みユーザー1人&lt;/span&gt;
  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 読み込みユーザー3人&lt;/span&gt;
  &lt;a href=&#34;http://cpprefjp.github.io/reference/thread/thread.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;thread&lt;/a&gt; writer1(writer_thread);
  &lt;a href=&#34;http://cpprefjp.github.io/reference/thread/thread.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;thread&lt;/a&gt; reader1(reader_thread);
  &lt;a href=&#34;http://cpprefjp.github.io/reference/thread/thread.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;thread&lt;/a&gt; reader2(reader_thread);
  &lt;a href=&#34;http://cpprefjp.github.io/reference/thread/thread.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;thread&lt;/a&gt; reader3(reader_thread);

  writer1.&lt;a href=&#34;http://cpprefjp.github.io/reference/thread/thread/join.html&#34;&gt;join()&lt;/a&gt;;
  reader1.&lt;a href=&#34;http://cpprefjp.github.io/reference/thread/thread/join.html&#34;&gt;join()&lt;/a&gt;;
  reader2.&lt;a href=&#34;http://cpprefjp.github.io/reference/thread/thread/join.html&#34;&gt;join()&lt;/a&gt;;
  reader3.&lt;a href=&#34;http://cpprefjp.github.io/reference/thread/thread/join.html&#34;&gt;join()&lt;/a&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力例&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;1
1
1
2
2
2
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++14&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang, C++14 mode&lt;/a&gt;: 3.4&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++14 mode&lt;/a&gt;: 4.9&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt; ??&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock&#34; target=&#34;_blank&#34;&gt;Readers–writer lock - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3427.html&#34; target=&#34;_blank&#34;&gt;N3427 Shared locking in C++&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3568.html&#34; target=&#34;_blank&#34;&gt;N3568 Shared locking in C++ (Revision 1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3659.html&#34; target=&#34;_blank&#34;&gt;N3659 Shared locking in C++ (Revision 2)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n3891.htm&#34; target=&#34;_blank&#34;&gt;N3891 A proposal to rename &lt;code&gt;shared_mutex&lt;/code&gt; to &lt;code&gt;shared_timed_mutex&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>try_lock_shared_for (C++11) -- shared_timed_mutex : try_lock_shared_for関数のリファレンスを追加</title>
      <link href="http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/try_lock_shared_for.html"/>
      <id>555d7e42512c9f15a3f84b7c759a0e4200d46434:reference/shared_mutex/shared_timed_mutex/try_lock_shared_for.md</id>
      <updated>2015-01-23 17:00:29 +0900</updated>
      
        <content type="html">&lt;h1&gt;try_lock_shared_for (C++11)&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;Rep&lt;/span&gt;, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;Period&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #B00040&#34;&gt;bool&lt;/span&gt; try_lock_shared_for(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; chrono&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/chrono/duration.html&#34;&gt;duration&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;Rep, Period&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; rel_time);
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;タイムアウトする相対時間を指定して共有ロックの取得を試みる。&lt;/p&gt;
&lt;h2&gt;要件&lt;/h2&gt;
&lt;p&gt;この関数を呼び出したスレッドが、ミューテックスの共有所有権を保持していないこと。&lt;/p&gt;
&lt;h2&gt;効果&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;rel_time&lt;/code&gt;パラメータで指定された相対時間の間、ミューテックスの共有所有権の取得を試みる。&lt;/p&gt;
&lt;p&gt;共有所有権が取得できるまで、もしくは&lt;code&gt;rel_time&lt;/code&gt;時間が経過するまでこの関数はブロッキングする。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rel_time&lt;/code&gt;が&lt;code&gt;rel_time.&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/chrono/duration/zero.html&#34;&gt;&lt;code&gt;zero()&lt;/code&gt;&lt;/a&gt;より小さい場合、この関数は&lt;a href=&#34;http://cpprefjp.github.io/reference/mutex/timed_mutex/try_lock.html&#34;&gt;&lt;code&gt;try_lock()&lt;/code&gt;&lt;/a&gt;と同じ効果をもち、ブロッキングせずにミューテックスの共有所有権の取得を試みる。&lt;/p&gt;
&lt;h2&gt;戻り値&lt;/h2&gt;
&lt;p&gt;共有所有権が取得できた場合は&lt;code&gt;true&lt;/code&gt;を返す。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rel_time&lt;/code&gt;パラメータで指定された相対時間の間に共有所有権が取得できなかった場合はタイムアウトとなり、&lt;code&gt;false&lt;/code&gt;を返す。&lt;/p&gt;
&lt;h2&gt;例外&lt;/h2&gt;
&lt;p&gt;時計クラス、&lt;a href=&#34;http://cpprefjp.github.io/reference/chrono/time_point.html&#34;&gt;&lt;code&gt;time_point&lt;/code&gt;&lt;/a&gt;クラス、&lt;a href=&#34;http://cpprefjp.github.io/reference/chrono/duration.html&#34;&gt;&lt;code&gt;duration&lt;/code&gt;&lt;/a&gt;クラスの構築が例外を送出する場合、この関数はそれらの例外を送出する。&lt;/p&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;thread&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;shared_mutex&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;X&lt;/span&gt; {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;mutable&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;shared_timed_mutex mtx_;
  &lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; value_ &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;0&lt;/span&gt;;
&lt;span style=&#34;color: #A0A000&#34;&gt;public:&lt;/span&gt;
  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// メンバ変数value_への書き込みを排他的にする&lt;/span&gt;
  &lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;add_value&lt;/span&gt;(&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; value)
  {
    mtx_.&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/lock.md.nolink&#34;&gt;lock()&lt;/a&gt;; &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 排他ロックを取得する&lt;/span&gt;
    value_ &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; value;
    mtx_.&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/unlock.md.nolink&#34;&gt;unlock()&lt;/a&gt;; &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 排他ロックを手放す&lt;/span&gt;
  }

  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// メンバ変数value_の値を読み込む&lt;/span&gt;
  &lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; get_value() &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt;
  {
    &lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; result &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;0&lt;/span&gt;;

    &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 共有ロックの取得を試みる(3秒でタイムアウト)&lt;/span&gt;
    &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color: #666666&#34;&gt;!&lt;/span&gt;mtx_.&lt;span style=&#34;color:#ff0000&#34;&gt;try_lock_shared_for&lt;/span&gt;(&lt;a href=&#34;http://cpprefjp.github.io/reference/chrono/seconds.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;chrono&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;seconds&lt;/a&gt;(&lt;span style=&#34;color: #666666&#34;&gt;3&lt;/span&gt;))) {
      &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 共有ロックの取得に失敗&lt;/span&gt;
      &lt;a href=&#34;http://cpprefjp.github.io/reference/system_error/error_code.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;error_code&lt;/a&gt; ec(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;static_cast&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;(&lt;a href=&#34;http://cpprefjp.github.io/reference/system_error/errc.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;errc&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;device_or_resource_busy&lt;/a&gt;), &lt;a href=&#34;http://cpprefjp.github.io/reference/system_error/generic_category.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;generic_category()&lt;/a&gt;);
      &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;throw&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/system_error/system_error.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;system_error&lt;/a&gt;(ec);
    }

    result &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; value_;
    mtx_.&lt;a href=&#34;http://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex/unlock_shared.html&#34;&gt;unlock_shared()&lt;/a&gt;; &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 共有ロックを手放す&lt;/span&gt;
    &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;return&lt;/span&gt; result;
  }
};

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  X x;

  &lt;a href=&#34;http://cpprefjp.github.io/reference/thread/thread.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;thread&lt;/a&gt; t1([&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt;x]{ x.add_value(&lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;); &lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; value &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; x.get_value(); });
  &lt;a href=&#34;http://cpprefjp.github.io/reference/thread/thread.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;thread&lt;/a&gt; t2([&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt;x]{ x.add_value(&lt;span style=&#34;color: #666666&#34;&gt;2&lt;/span&gt;); &lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; value &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; x.get_value(); });

  t1.&lt;a href=&#34;http://cpprefjp.github.io/reference/thread/thread/join.html&#34;&gt;join()&lt;/a&gt;;
  t2.&lt;a href=&#34;http://cpprefjp.github.io/reference/thread/thread/join.html&#34;&gt;join()&lt;/a&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++14&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang, C++14 mode&lt;/a&gt;: 3.5&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++14 mode&lt;/a&gt;: 4.9&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt; ??&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>cpprefjp - C++ Reference Site -- トップページがごちゃごちゃしていたので整理</title>
      <link href="http://cpprefjp.github.io/index.html"/>
      <id>cffd1ecb4289fc6514e01c6decf7b2927b40809b:index.md</id>
      <updated>2015-01-23 16:43:13 +0900</updated>
      
        <content type="html">&lt;h1&gt;cpprefjp - C++ Reference Site&lt;/h1&gt;
&lt;p&gt;本サイトcpprefjpは、プログラミング言語C++のリファレンスを提供するWebサイトです。&lt;/p&gt;
&lt;p&gt;現行バージョンであるC++14(ISO/IEC 14882:2014)に基づいたリファレンスを提供します。&lt;/p&gt;
&lt;h2&gt;運営方針&lt;/h2&gt;
&lt;p&gt;本リファレンスサイトは、C++言語の最新のリファレンスを常に提供し続けることを目標にしています。&lt;/p&gt;
&lt;p&gt;各クラス、関数にはそれぞれ1つ以上のサンプルコードを付けていく方針です。&lt;/p&gt;
&lt;p&gt;本サイトでは、他サイトおよび規格書の直接的な翻訳ではなく、編集者の調査と考えに基づいた解説を提供していきます。&lt;/p&gt;
&lt;h2&gt;参加方法&lt;/h2&gt;
&lt;p&gt;本サイトは、多くのユーザの手によって書かれています。&lt;/p&gt;
&lt;p&gt;あなたがこの cpprefjp プロジェクトに参加したいのであれば、私達はそれをとても歓迎します。&lt;/p&gt;
&lt;p&gt;cpprefjp プロジェクトに参加する方法は簡単です。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/cpprefjp/site/issues?state=open&#34; target=&#34;_blank&#34;&gt;cpprefjp の Issues&lt;/a&gt; にアクセスし、&lt;/li&gt;
&lt;li&gt;あなたが手伝えそうな、まだ誰にもアサインされていないタスクを見つけ、&lt;/li&gt;
&lt;li&gt;その Issue のコメントに「このタスクやります」と書く&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;これだけです。&lt;/p&gt;
&lt;p&gt;あとは、そのタスクを完了させて pull request を送れば、あなたも cpprefjp のコミッタになれます。&lt;/p&gt;
&lt;h2&gt;編集者向けのさらなる情報&lt;/h2&gt;
&lt;p&gt;本サイトは、GitHubのリポジトリ上で、Markdown形式でリファレンスを記載し、GitHub Pagesに自動反映するという形をとっています。本サイトのMarkdownソースは、以下のリポジトリにあります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/cpprefjp/site&#34; target=&#34;_blank&#34;&gt;https://github.com/cpprefjp/site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上記リポジトリのREADMEに、コアメンバの一覧を記載してありますので、何かありましたらそのうちの誰か、もしくはリポジトリへのIssueという形でご相談ください。&lt;/p&gt;
&lt;p&gt;本サイトの編集方法については、以下のドキュメントを参照してください。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/editors_doc/start_editing.html&#34;&gt;cpprefjpを編集するには&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本サイトのコンテンツを作成、編集するにあたり、仕様を熟知し、一人で完璧に正しい内容を書くことは要求しません。&lt;/p&gt;
&lt;p&gt;たとえ間違ったことを記載した場合や、不安の残る内容を記載した場合でも、それに気づいた誰かが修正してくれます。&lt;/p&gt;
&lt;h2&gt;Twitter ハッシュタグ&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://twitter.com/#!/search/%23cpprefjp&#34; target=&#34;_blank&#34;&gt;#cpprefjp&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;その他参考情報&lt;/h2&gt;
&lt;p&gt;以下のWebサイトから転載許可をいただいています。&lt;/p&gt;
&lt;p&gt;翻訳や解説などで活用してください：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://episteme.wankuma.com/stlprog/index.html&#34; target=&#34;_blank&#34;&gt;Standard Template Library プログラミング on the Web&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;ライセンスについて&lt;/h2&gt;
&lt;p&gt;本サイトの情報は、&lt;a href=&#34;http://creativecommons.org/licenses/by/3.0/&#34; target=&#34;_blank&#34;&gt;クリエイティブ・コモンズ 表示 3.0 非移植 ライセンス(CC BY)&lt;/a&gt;の下に提供しています。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;http://i.creativecommons.org/l/by/3.0/88x31.png&#34; /&gt;&lt;/p&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>cpprefjp - C++ Reference Site -- C++14が策定されたので、トップページ、およびREADMEを更新。</title>
      <link href="http://cpprefjp.github.io/index.html"/>
      <id>767464dcdd100e55bd37a180328ec888c220b746:index.md</id>
      <updated>2015-01-23 16:39:33 +0900</updated>
      
        <content type="html">&lt;h1&gt;cpprefjp - C++ Reference Site&lt;/h1&gt;
&lt;p&gt;本サイトcpprefjpは、プログラミング言語C++のリファレンスを提供するWebサイトです。&lt;/p&gt;
&lt;p&gt;現行バージョンであるC++14(ISO/IEC 14882:2014)に基づいたリファレンスを提供します。&lt;/p&gt;
&lt;h2&gt;運営方針&lt;/h2&gt;
&lt;p&gt;本リファレンスサイトは、C++言語の最新のリファレンスを常に提供し続けることを目標にしています。&lt;/p&gt;
&lt;p&gt;各クラス、関数にはそれぞれ1つ以上のサンプルコードを付けていく方針です。&lt;/p&gt;
&lt;p&gt;C++11対応するために、各関数の説明に以下の情報を記述しています。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;言語のバージョン (C++11)&lt;/li&gt;
&lt;li&gt;開発環境のバージョン(例：「VC++ 10.0から使用可能」「GCC 4.3から使用可能(-std=c++0xオプション)。」)&lt;ul&gt;
&lt;li&gt;開発環境の表記がない場合は、C++98対応のあらゆる環境で使用できるものとします。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;現在は標準ライブラリのリファレンス作成に注力していますが、それがひと段落したら言語仕様のリファレンスも当サイトでカバーしていけたらと考えています。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.cplusplus.com/reference/&#34; target=&#34;_blank&#34;&gt;http://www.cplusplus.com/reference/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上記のサイトは、全ての関数にサンプルコードが付いているので参考になります。&lt;/p&gt;
&lt;p&gt;また、C++のリファレンスサイトとして他に &lt;a href=&#34;http://cppreference.com&#34; target=&#34;_blank&#34;&gt;http://cppreference.com&lt;/a&gt; があります。&lt;/p&gt;
&lt;p&gt;こちらは英語版をもとにして他言語の翻訳を行っていくものですが、本サイトは編集者が各クラス・関数の解説を書いていく集合知のリファレンスサイトを目標にしているので、そういった点で方針が異なります。&lt;/p&gt;
&lt;p&gt;本サイトでは、他サイトおよび規格書の直接的な翻訳ではなく、編集者の調査と考えに基づいた解説を提供していきます。&lt;/p&gt;
&lt;h2&gt;参加方法&lt;/h2&gt;
&lt;p&gt;本サイトは、多くのユーザの手によって書かれています。&lt;/p&gt;
&lt;p&gt;あなたがこの cpprefjp プロジェクトに参加したいのであれば、私達はそれをとても歓迎します。&lt;/p&gt;
&lt;p&gt;cpprefjp プロジェクトに参加する方法は簡単です。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/cpprefjp/site/issues?state=open&#34; target=&#34;_blank&#34;&gt;cpprefjp の Issues&lt;/a&gt; にアクセスし、&lt;/li&gt;
&lt;li&gt;あなたが手伝えそうな、まだ誰にもアサインされていないタスクを見つけ、&lt;/li&gt;
&lt;li&gt;その Issue のコメントに「このタスクやります」と書く&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;これだけです。&lt;/p&gt;
&lt;p&gt;あとは、そのタスクを完了させて pull request を送れば、あなたも cpprefjp のコミッタになれます。&lt;/p&gt;
&lt;p&gt;本サイトは、GitHubのリポジトリ上で、Markdown形式でリファレンスを記載し、GitHub Pagesに自動反映するという形をとっています。本サイトのMarkdownソースは、以下のリポジトリにあります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/cpprefjp/site&#34; target=&#34;_blank&#34;&gt;https://github.com/cpprefjp/site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上記リポジトリのREADMEに、コアメンバの一覧を記載してありますので、何かありましたらそのうちの誰か、もしくはリポジトリへのIssueという形でご相談ください。&lt;/p&gt;
&lt;p&gt;本サイトの編集方法については、以下のドキュメントを参照してください。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/editors_doc/start_editing.html&#34;&gt;cpprefjpを編集するには&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本サイトのコンテンツを作成、編集するにあたり、仕様を熟知し、一人で完璧に正しい内容を書くことは要求しません。&lt;/p&gt;
&lt;p&gt;たとえ間違ったことを記載した場合や、不安の残る内容を記載した場合でも、それに気づいた誰かが修正してくれます。&lt;/p&gt;
&lt;h2&gt;Twitter ハッシュタグ&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://twitter.com/#!/search/%23cpprefjp&#34; target=&#34;_blank&#34;&gt;#cpprefjp&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;その他参考情報&lt;/h2&gt;
&lt;p&gt;以下のWebサイトから転載許可をいただいています。&lt;/p&gt;
&lt;p&gt;翻訳や解説などで活用してください：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://episteme.wankuma.com/stlprog/index.html&#34; target=&#34;_blank&#34;&gt;Standard Template Library プログラミング on the Web&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;ライセンスについて&lt;/h2&gt;
&lt;p&gt;本サイトの情報は、&lt;a href=&#34;http://creativecommons.org/licenses/by/3.0/&#34; target=&#34;_blank&#34;&gt;クリエイティブ・コモンズ 表示 3.0 非移植 ライセンス(CC BY)&lt;/a&gt;の下に提供しています。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;http://i.creativecommons.org/l/by/3.0/88x31.png&#34; /&gt;&lt;/p&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
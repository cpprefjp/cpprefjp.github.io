<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2023-02-15T10:13:22.641002</updated>
  <id>f18d0166-3326-421d-9594-80abc18edd4d</id>

  
    <entry>
      <title>shared_timed_mutex -- Merge pull request #1126 from cpprefjp/yutopp-patch-1</title>
      <link href="https://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex.html"/>
      <id>24c4e8a3e69f4bba9ea5eb43ad44588fb8340f3f:reference/shared_mutex/shared_timed_mutex.md</id>
      <updated>2023-02-15T19:07:55+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/shared_mutex/shared_timed_mutex.md b/reference/shared_mutex/shared_timed_mutex.md
index 64940c2d7..07aaa1a92 100644
--- a/reference/shared_mutex/shared_timed_mutex.md
+++ b/reference/shared_mutex/shared_timed_mutex.md
@@ -96,7 +96,7 @@ public:
   {
     int local_count;
     {
-      std::shared_lock&amp;lt;std::shared_mutex&amp;gt; lock(mtx_);
+      std::shared_lock&amp;lt;std::shared_timed_mutex&amp;gt; lock(mtx_);
       local_count = count_;
     } // 共有ロックをここで手放す
     print_value(local_count);
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>shared_timed_mutex -- typo/コンパイルエラーの修正: shared_mutex→shared_timed_mutex</title>
      <link href="https://cpprefjp.github.io/reference/shared_mutex/shared_timed_mutex.html"/>
      <id>20ed53df537f4456bc971969411f1277bbeb22f0:reference/shared_mutex/shared_timed_mutex.md</id>
      <updated>2023-02-15T17:44:48+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/shared_mutex/shared_timed_mutex.md b/reference/shared_mutex/shared_timed_mutex.md
index 64940c2d7..07aaa1a92 100644
--- a/reference/shared_mutex/shared_timed_mutex.md
+++ b/reference/shared_mutex/shared_timed_mutex.md
@@ -96,7 +96,7 @@ public:
   {
     int local_count;
     {
-      std::shared_lock&amp;lt;std::shared_mutex&amp;gt; lock(mtx_);
+      std::shared_lock&amp;lt;std::shared_timed_mutex&amp;gt; lock(mtx_);
       local_count = count_;
     } // 共有ロックをここで手放す
     print_value(local_count);
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yutopp</name>
        <email>yutopp@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>epsilon -- fix external link (close #1123)</title>
      <link href="https://cpprefjp.github.io/reference/limits/numeric_limits/epsilon.html"/>
      <id>8203fdd4e47fe92368e78d40c7821cb1d6bae2b9:reference/limits/numeric_limits/epsilon.md</id>
      <updated>2023-02-15T11:56:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/limits/numeric_limits/epsilon.md b/reference/limits/numeric_limits/epsilon.md
index 9f969b62c..3af48f808 100644
--- a/reference/limits/numeric_limits/epsilon.md
+++ b/reference/limits/numeric_limits/epsilon.md
@@ -57,7 +57,7 @@ equal
 ```
 
 ## 参照
-- [C++ FAQ - Why doesn&amp;#39;t my floating-point comparison work?](http://www.cs.technion.ac.il/users/yechiel/c++-faq/floating-point-arith.html)
+- [C++ FAQ - Why doesn&amp;#39;t my floating-point comparison work?](https://isocpp.org/wiki/faq/newbie#floating-point-arith)
 - [Comparing Floating Point Numbers, 2012 Edition](https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/)
 - [浮動小数比較の落とし穴 - trinoの走り書き](http://d.hatena.ne.jp/n-trino/20161101#p1)
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>expected -- expected/expected: 最低限の説明増補(#1066)</title>
      <link href="https://cpprefjp.github.io/reference/expected/expected.html"/>
      <id>1bcaedc52902daf98f55025838c8ea628714af70:reference/expected/expected.md</id>
      <updated>2023-02-11T20:28:17+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/expected/expected.md b/reference/expected/expected.md
index 8e3940398..23da5b514 100644
--- a/reference/expected/expected.md
+++ b/reference/expected/expected.md
@@ -21,10 +21,16 @@ namespace std {
 ## 概要
 `expected`クラスは、任意の型`T`の値を正常値とし任意の型`E`の値をエラー値として、正常もしくはエラーいずれかの状態を取ることを値として表現できる型である。
 
+このクラスは、ヒープからの動的メモリ確保を行わない。
+実装は配置newのような機能によって、スタック領域のメモリのみを使用する。
+
 
 ## 適格要件
 
+- 型`T`および型`E`は、参照型、関数型、[`in_place_t`](/reference/utility/in_place_t.md)、[`unexpect_t`](unexpect_t.md)のいずれでもないこと。
+- 型`T`は[`unexpected`](unexpected.md)の特殊化ではないこと。
 - 型`T`が（CV修飾された）`void`型でなければ、型`T`はCpp17Destructible要件を満たすこと。
+- 型`E`は非オブジェクト型、配列型、`unexpected`の特殊化、CV修飾された型のいずれでもないこと。
 - 型`E`はCpp17Destructible要件を満たすこと。
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>unexpected -- expected/expected: 最低限の説明増補(#1066)</title>
      <link href="https://cpprefjp.github.io/reference/expected/unexpected.html"/>
      <id>1bcaedc52902daf98f55025838c8ea628714af70:reference/expected/unexpected.md</id>
      <updated>2023-02-11T20:28:17+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/expected/unexpected.md b/reference/expected/unexpected.md
index e0dc8715d..6e8f00f67 100644
--- a/reference/expected/unexpected.md
+++ b/reference/expected/unexpected.md
@@ -16,7 +16,7 @@ namespace std {
 
 
 ## 適格要件
-`E`は非オブジェクト型、配列型、`unexpected&amp;lt;U&amp;gt;`、CV修飾された型のいずれでもないこと。
+型`E`は非オブジェクト型、配列型、`unexpected`の特殊化、CV修飾された型のいずれでもないこと。
 
 
 ## メンバ関数
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
</feed>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2025-07-07T15:39:27.037324</updated>
  <id>4f7261c3-e416-454a-a614-bf5520a7b840</id>

  
    <entry>
      <title>calloc -- delete unnecessary space</title>
      <link href="https://cpprefjp.github.io/reference/cstdlib/calloc.html"/>
      <id>28dcdfac5b4dd06005971b3fd05155b40ed26280:reference/cstdlib/calloc.md</id>
      <updated>2025-07-08T00:16:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstdlib/calloc.md b/reference/cstdlib/calloc.md
index c370b8ad1..834985107 100644
--- a/reference/cstdlib/calloc.md
+++ b/reference/cstdlib/calloc.md
@@ -16,7 +16,7 @@ namespace std {
 
 この関数で返されるポインタは、割当領域の先頭のポインタである。
 
-領域の確保に失敗し た場合は、[`nullptr`](/lang/cpp11/nullptr.md)を返す。
+領域の確保に失敗した場合は、[`nullptr`](/lang/cpp11/nullptr.md)を返す。
 
 割り当てられたオブジェクトの寿命は、このメモリが割り当てられた時から、[`free`](free.md)などで解放されるまでである。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>K10-K10</name>
        <email>keito.tottori@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>emplace -- flatなコンテナのemplace/_hintの計算量追記</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map/emplace.html"/>
      <id>42b481a53ba309965dac7fc99cea47367bc13098:reference/flat_map/flat_map/emplace.md</id>
      <updated>2025-07-07T23:29:20+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map/emplace.md b/reference/flat_map/flat_map/emplace.md
index 155d95fdc..fbb790e47 100644
--- a/reference/flat_map/flat_map/emplace.md
+++ b/reference/flat_map/flat_map/emplace.md
@@ -44,6 +44,12 @@ c.values.insert(value_it, std::move(t.second));
 ## 戻り値
 挿入されたかどうかを示す `bool` と、挿入された要素へのイテレータからなる [`pair`](/reference/utility/pair.md) を返す。挿入されなかったときは、既存要素へのイテレータを返す。
 
+## 計算量
+
+操作の前のコンテナサイズ（[`size()`](size.md)）を`N`とすると
+
+- 新しい要素が挿入された場合: `N`に対して線形
+- 要素の挿入が行われなかった場合: `N`に対して対数
 
 ## 例
 ### 単純なキー・値を挿入する例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>emplace_hint -- flatなコンテナのemplace/_hintの計算量追記</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map/emplace_hint.html"/>
      <id>42b481a53ba309965dac7fc99cea47367bc13098:reference/flat_map/flat_map/emplace_hint.md</id>
      <updated>2025-07-07T23:29:20+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map/emplace_hint.md b/reference/flat_map/flat_map/emplace_hint.md
index 193f6698c..de5263167 100644
--- a/reference/flat_map/flat_map/emplace_hint.md
+++ b/reference/flat_map/flat_map/emplace_hint.md
@@ -24,8 +24,8 @@ iterator emplace_hint(const_iterator hint, Args&amp;amp;&amp;amp;... args);
 
 
 ## 計算量
-一般にコンテナのサイズについて対数時間だが、新しい要素が `hint` の前に挿入された場合は償却定数時間。
 
+操作の前のコンテナサイズ（[`size()`](size.md)）を`N`とすると、`O(N)`（挿入が行われなかった場合は`O(log N)`より小さくなる可能性がある）。
 
 ## 備考
 - [`try_emplace`](try_emplace.md) と異なり、たとえ要素が挿入されなかった場合でも `value_type` 型のオブジェクトが構築される可能性があり、結果として引数 `args` が [`move`](/reference/utility/move.md) の対象となって変更されてしまっている可能性があるため、注意が必要である。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>emplace -- flatなコンテナのemplace/_hintの計算量追記</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_multimap/emplace.html"/>
      <id>42b481a53ba309965dac7fc99cea47367bc13098:reference/flat_map/flat_multimap/emplace.md</id>
      <updated>2025-07-07T23:29:20+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_multimap/emplace.md b/reference/flat_map/flat_multimap/emplace.md
index b82cd98d5..e9ac1748a 100644
--- a/reference/flat_map/flat_multimap/emplace.md
+++ b/reference/flat_map/flat_multimap/emplace.md
@@ -25,6 +25,9 @@ iterator emplace(Args&amp;amp;&amp;amp;... args);
 ## 戻り値
 挿入された要素へのイテレータを返す。
 
+## 計算量
+
+コンテナサイズ（[`size()`](size.md)）に対して線形
 
 ## 例
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>emplace_hint -- flatなコンテナのemplace/_hintの計算量追記</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_multimap/emplace_hint.html"/>
      <id>42b481a53ba309965dac7fc99cea47367bc13098:reference/flat_map/flat_multimap/emplace_hint.md</id>
      <updated>2025-07-07T23:29:20+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_multimap/emplace_hint.md b/reference/flat_map/flat_multimap/emplace_hint.md
index 8bc40631b..019c1a265 100644
--- a/reference/flat_map/flat_multimap/emplace_hint.md
+++ b/reference/flat_map/flat_multimap/emplace_hint.md
@@ -24,8 +24,8 @@ iterator emplace_hint(const_iterator hint, Args&amp;amp;&amp;amp;... args);
 
 
 ## 計算量
-一般にコンテナのサイズについて対数時間だが、新しい要素が `hint` の前に挿入された場合は償却定数時間。
 
+コンテナサイズ（[`size()`](size.md)）に対して線形
 
 ## 例
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>emplace -- flatなコンテナのemplace/_hintの計算量追記</title>
      <link href="https://cpprefjp.github.io/reference/flat_set/flat_multiset/emplace.html"/>
      <id>42b481a53ba309965dac7fc99cea47367bc13098:reference/flat_set/flat_multiset/emplace.md</id>
      <updated>2025-07-07T23:29:20+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_set/flat_multiset/emplace.md b/reference/flat_set/flat_multiset/emplace.md
index 02e7feb99..c6609212d 100644
--- a/reference/flat_set/flat_multiset/emplace.md
+++ b/reference/flat_set/flat_multiset/emplace.md
@@ -25,6 +25,9 @@ iterator emplace(Args&amp;amp;&amp;amp;... args);
 ## 戻り値
 挿入された要素へのイテレータを返す。
 
+## 計算量
+
+コンテナサイズ（[`size()`](size.md)）に対して線形
 
 ## 例
 ### 単純な挿入の例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>emplace_hint -- flatなコンテナのemplace/_hintの計算量追記</title>
      <link href="https://cpprefjp.github.io/reference/flat_set/flat_multiset/emplace_hint.html"/>
      <id>42b481a53ba309965dac7fc99cea47367bc13098:reference/flat_set/flat_multiset/emplace_hint.md</id>
      <updated>2025-07-07T23:29:20+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_set/flat_multiset/emplace_hint.md b/reference/flat_set/flat_multiset/emplace_hint.md
index acaa29283..46e96497c 100644
--- a/reference/flat_set/flat_multiset/emplace_hint.md
+++ b/reference/flat_set/flat_multiset/emplace_hint.md
@@ -24,8 +24,8 @@ iterator emplace_hint(const_iterator hint, Args&amp;amp;&amp;amp;... args);
 
 
 ## 計算量
-一般にコンテナのサイズについて対数時間だが、新しい要素が `hint` の前に挿入された場合は償却定数時間。
 
+コンテナサイズ（[`size()`](size.md)）に対して線形
 
 ## 例
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>emplace -- flatなコンテナのemplace/_hintの計算量追記</title>
      <link href="https://cpprefjp.github.io/reference/flat_set/flat_set/emplace.html"/>
      <id>42b481a53ba309965dac7fc99cea47367bc13098:reference/flat_set/flat_set/emplace.md</id>
      <updated>2025-07-07T23:29:20+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_set/flat_set/emplace.md b/reference/flat_set/flat_set/emplace.md
index 7378406a2..abd530ea2 100644
--- a/reference/flat_set/flat_set/emplace.md
+++ b/reference/flat_set/flat_set/emplace.md
@@ -39,6 +39,12 @@ c.insert(it, std::move(t));
 ## 戻り値
 挿入されたかどうかを示す `bool` と、挿入された要素へのイテレータからなる [`pair`](/reference/utility/pair.md) を返す。挿入されなかったときは、既存要素へのイテレータを返す。
 
+## 計算量
+
+操作の前のコンテナサイズ（[`size()`](size.md)）を`N`とすると
+
+- 新しい要素が挿入された場合: `N`に対して線形
+- 要素の挿入が行われなかった場合: `N`に対して対数
 
 ## 例
 ### 単純な挿入の例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>emplace_hint -- flatなコンテナのemplace/_hintの計算量追記</title>
      <link href="https://cpprefjp.github.io/reference/flat_set/flat_set/emplace_hint.html"/>
      <id>42b481a53ba309965dac7fc99cea47367bc13098:reference/flat_set/flat_set/emplace_hint.md</id>
      <updated>2025-07-07T23:29:20+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_set/flat_set/emplace_hint.md b/reference/flat_set/flat_set/emplace_hint.md
index 8fd7b5a7c..46f6abed6 100644
--- a/reference/flat_set/flat_set/emplace_hint.md
+++ b/reference/flat_set/flat_set/emplace_hint.md
@@ -24,8 +24,8 @@ iterator emplace_hint(const_iterator hint, Args&amp;amp;&amp;amp;... args);
 
 
 ## 計算量
-一般にコンテナのサイズについて対数時間だが、新しい要素が `hint` の前に挿入された場合は償却定数時間。
 
+操作の前のコンテナサイズ（[`size()`](size.md)）を`N`とすると、`O(N)`（挿入が行われなかった場合は`O(log N)`より小さくなる可能性がある）。
 
 ## 例
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>free -- 出力結果−＞出力</title>
      <link href="https://cpprefjp.github.io/reference/cstdlib/free.html"/>
      <id>1b8a7cdc159a3c9475930fb8d215f8c9522c0b6b:reference/cstdlib/free.md</id>
      <updated>2025-07-07T13:40:35+00:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstdlib/free.md b/reference/cstdlib/free.md
index 389c2fbb8..8d785c808 100644
--- a/reference/cstdlib/free.md
+++ b/reference/cstdlib/free.md
@@ -36,7 +36,7 @@ int main(void)
     free(p2); // realloc が失敗した場合は元の領域を解放
 }
 ```
-### 出力結果
+### 出力
 ```
 
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>K10-K10</name>
        <email>keito.tottori@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>insert -- flatなコンテナのinsert()の計算量修正</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map/insert.html"/>
      <id>39b99d1b9628accc8ddb71e9e2f08be4359ac926:reference/flat_map/flat_map/insert.md</id>
      <updated>2025-07-07T22:38:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map/insert.md b/reference/flat_map/flat_map/insert.md
index a4ce80b3f..f83c8ca4e 100644
--- a/reference/flat_map/flat_map/insert.md
+++ b/reference/flat_map/flat_map/insert.md
@@ -50,8 +50,6 @@ void insert(sorted_unique_t s,
 
 内部的に `flat_map` コンテナは、コンストラクト時に指定された比較オブジェクトによって要素を下位から上位へとソートして保持する。
 
-この操作は、適切な引数 `position` を提供することで効率を飛躍的に改善することができる。
-
 - (1) : 単一要素を挿入する
 - (2) : 単一要素の一時オブジェクトを挿入する
 - (3) : 指定された位置に、単一要素を挿入する
@@ -198,8 +196,11 @@ void insert(sorted_unique_t s,
 
 
 ## 計算量
+- (1)~(6) : コンテナサイズ（[`size()`](size.md)）に対して線形
 - (7) : Nをこの操作の前の[`size()`](size.md)、Mを[`distance`](/reference/iterator/distance.md)`(first, last)`として、N + MlogM
 - (8) : Nをこの操作のあとの[`size()`](size.md)として、Nに対して線形
+- (9) : Nをこの操作の前の[`size()`](size.md)、Mを`il.size()`として、N + MlogM
+- (10) : Nをこの操作のあとの[`size()`](size.md)として、Nに対して線形
 
 
 ## 備考
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>insert -- flatなコンテナのinsert()の計算量修正</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_multimap/insert.html"/>
      <id>39b99d1b9628accc8ddb71e9e2f08be4359ac926:reference/flat_map/flat_multimap/insert.md</id>
      <updated>2025-07-07T22:38:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_multimap/insert.md b/reference/flat_map/flat_multimap/insert.md
index 08e944b5f..4f8ebed9f 100644
--- a/reference/flat_map/flat_multimap/insert.md
+++ b/reference/flat_map/flat_multimap/insert.md
@@ -45,8 +45,6 @@ void insert(sorted_equivalent_t,
 
 内部的に `flat_multimap` コンテナは、コンストラクト時に指定された比較オブジェクトによって要素を下位から上位へとソートして保持する。
 
-この操作は、適切な引数 `position` を提供することで効率を飛躍的に改善することができる。
-
 - (1) : 単一要素を挿入する
 - (2) : 単一要素の一時オブジェクトを挿入する
 - (3) : 指定された位置に、単一要素を挿入する
@@ -158,8 +156,11 @@ void insert(sorted_equivalent_t,
 
 
 ## 計算量
+- (1)~(6) : コンテナサイズ（[`size()`](size.md)）に対して線形
 - (7) : Nをこの操作の前の[`size()`](size.md)、Mを[`distance`](/reference/iterator/distance.md)`(first, last)`として、N + MlogM
 - (8) : Nをこの操作のあとの[`size()`](size.md)として、Nに対して線形
+- (9) : Nをこの操作の前の[`size()`](size.md)、Mを`il.size()`として、N + MlogM
+- (10) : Nをこの操作のあとの[`size()`](size.md)として、Nに対して線形
 
 
 ## 備考
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>insert -- flatなコンテナのinsert()の計算量修正</title>
      <link href="https://cpprefjp.github.io/reference/flat_set/flat_multiset/insert.html"/>
      <id>39b99d1b9628accc8ddb71e9e2f08be4359ac926:reference/flat_set/flat_multiset/insert.md</id>
      <updated>2025-07-07T22:38:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_set/flat_multiset/insert.md b/reference/flat_set/flat_multiset/insert.md
index 58985f98d..14294b61e 100644
--- a/reference/flat_set/flat_multiset/insert.md
+++ b/reference/flat_set/flat_multiset/insert.md
@@ -45,8 +45,6 @@ void insert(sorted_equivalent_t,
 
 内部的に `flat_multiset` コンテナは、コンストラクト時に指定された比較オブジェクトによって要素を下位から上位へとソートして保持する。
 
-この操作は、適切な引数 `position` を提供することで効率を飛躍的に改善することができる。
-
 - (1) : 単一要素を挿入する
 - (2) : 単一要素の一時オブジェクトを挿入する
 - (3) : 指定された位置に、単一要素を挿入する
@@ -148,8 +146,11 @@ void insert(sorted_equivalent_t,
 
 
 ## 計算量
+- (1)~(6) : コンテナサイズ（[`size()`](size.md)）に対して線形
 - (7) : Nをこの操作の前の[`size()`](size.md)、Mを[`distance`](/reference/iterator/distance.md)`(first, last)`として、N + MlogM
 - (8) : Nをこの操作のあとの[`size()`](size.md)として、Nに対して線形
+- (9) : Nをこの操作の前の[`size()`](size.md)、Mを`il.size()`として、N + MlogM
+- (10) : Nをこの操作のあとの[`size()`](size.md)として、Nに対して線形
 
 
 ## 備考
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>insert -- flatなコンテナのinsert()の計算量修正</title>
      <link href="https://cpprefjp.github.io/reference/flat_set/flat_set/insert.html"/>
      <id>39b99d1b9628accc8ddb71e9e2f08be4359ac926:reference/flat_set/flat_set/insert.md</id>
      <updated>2025-07-07T22:38:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_set/flat_set/insert.md b/reference/flat_set/flat_set/insert.md
index 02134d89c..2096a7078 100644
--- a/reference/flat_set/flat_set/insert.md
+++ b/reference/flat_set/flat_set/insert.md
@@ -50,8 +50,6 @@ void insert(sorted_unique_t s,
 
 内部的に `flat_set` コンテナは、コンストラクト時に指定された比較オブジェクトによって要素を下位から上位へとソートして保持する。
 
-この操作は、適切な引数 `position` を提供することで効率を飛躍的に改善することができる。
-
 - (1) : 単一要素を挿入する
 - (2) : 単一要素の一時オブジェクトを挿入する
 - (3) : 指定された位置に、単一要素を挿入する
@@ -160,8 +158,11 @@ void insert(sorted_unique_t s,
 
 
 ## 計算量
+- (1)~(6) : コンテナサイズ（[`size()`](size.md)）に対して線形
 - (7) : Nをこの操作の前の[`size()`](size.md)、Mを[`distance`](/reference/iterator/distance.md)`(first, last)`として、N + MlogM
 - (8) : Nをこの操作のあとの[`size()`](size.md)として、Nに対して線形
+- (9) : Nをこの操作の前の[`size()`](size.md)、Mを`il.size()`として、N + MlogM
+- (10) : Nをこの操作のあとの[`size()`](size.md)として、Nに対して線形
 
 
 ## 備考
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>malloc -- `free.md`のパスを修正</title>
      <link href="https://cpprefjp.github.io/reference/cstdlib/malloc.html"/>
      <id>6ba8c53818059f2d2de201eb3f02d9b58e0d65be:reference/cstdlib/malloc.md</id>
      <updated>2025-07-07T22:15:06+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstdlib/malloc.md b/reference/cstdlib/malloc.md
index 98990cf85..6820bc78f 100644
--- a/reference/cstdlib/malloc.md
+++ b/reference/cstdlib/malloc.md
@@ -70,7 +70,7 @@ p1[3] == 9
 
 ## 関連項目
 
-- [`free`](/cstdlib/free.md): 確保したメモリを解放する。
+- [`free`](free.md): 確保したメモリを解放する。
 
 ## 参照
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>K10-K10</name>
        <email>keito.tottori@gmail.com</email>
      </author>
    </entry>
  
</feed>
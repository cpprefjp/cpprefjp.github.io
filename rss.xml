<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2023-06-30T10:11:01.528824</updated>
  <id>5656c739-3b45-4123-b724-80fb526ff7ed</id>

  
    <entry>
      <title>flat_map -- flat_map : swapを追加 #1078</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map.html"/>
      <id>0b736455a3af08ad8f820288134a5935e0cb513d:reference/flat_map/flat_map.md</id>
      <updated>2023-06-30T19:05:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map.md b/reference/flat_map/flat_map.md
index fad991010..498606679 100644
--- a/reference/flat_map/flat_map.md
+++ b/reference/flat_map/flat_map.md
@@ -65,7 +65,7 @@ namespace std {
 | [`emplace_hint`](flat_map/emplace_hint.md)         | ヒントを使って要素を直接構築する           | C++23 |
 | [`try_emplace`](flat_map/try_emplace.md)           | キーが存在しない場合のみ要素を直接構築する | C++23 |
 | [`erase`](flat_map/erase.md)                       | 要素を削除する                             | C++23 |
-| [`swap`](flat_map/swap.md.nolink)                         | コンテンツを交換する                       | C++23 |
+| [`swap`](flat_map/swap.md)                         | コンテンツを交換する                       | C++23 |
 | [`extract`](flat_map/extract.md.nolink)                   | キーのコンテナ、値のコンテナを取得する     | C++23 |
 | [`replace`](flat_map/replace.md.nolink)                   | キーのコンテナ、値のコンテナを置き換える   | C++23 |
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>swap -- flat_map : swapを追加 #1078</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map/swap.html"/>
      <id>0b736455a3af08ad8f820288134a5935e0cb513d:reference/flat_map/flat_map/swap.md</id>
      <updated>2023-06-30T19:05:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map/swap.md b/reference/flat_map/flat_map/swap.md
new file mode 100644
index 000000000..8f483eb1e
--- /dev/null
+++ b/reference/flat_map/flat_map/swap.md
@@ -0,0 +1,81 @@
+# swap
+* flat_map[meta header]
+* std[meta namespace]
+* flat_map[meta class]
+* function[meta id-type]
+* cpp23[meta cpp]
+
+```cpp
+void swap(flat_map&amp;amp; y) noexcept; // (1) C++23
+```
+
+## 概要
+コンテナ内のコンテンツを、同じ型の要素を保持する他の `flat_map` オブジェクトである `y` 内のコンテンツと交換する。
+
+このメンバ関数の呼び出しの後、呼び出し前にコンテナ内にあった要素は `y` へ、`y` 内にあった要素は `*this` へ移る。
+
+
+## 計算量
+定数時間
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;flat_map&amp;gt;
+
+template &amp;lt;class Map&amp;gt;
+void print(const char* name, const Map&amp;amp; m)
+{
+  std::cout &amp;lt;&amp;lt; name &amp;lt;&amp;lt; &amp;#34; : {&amp;#34;;
+
+  bool first = true;
+
+  for (const auto&amp;amp; x : m) {
+    if (first) {
+      first = false;
+    }
+    else {
+      std::cout &amp;lt;&amp;lt; &amp;#34;, &amp;#34;;
+    }
+    std::cout &amp;lt;&amp;lt; &amp;#34;[&amp;#34; &amp;lt;&amp;lt; x.first &amp;lt;&amp;lt; &amp;#34;,&amp;#34; &amp;lt;&amp;lt; x.second &amp;lt;&amp;lt; &amp;#34;]&amp;#34;;
+  }
+  std::cout &amp;lt;&amp;lt; &amp;#34;}&amp;#34; &amp;lt;&amp;lt; std::endl;
+}
+
+int main()
+{
+  std::flat_map&amp;lt;int, char&amp;gt; fm1 = {
+    {10, &amp;#39;a&amp;#39;},
+    {20, &amp;#39;b&amp;#39;},
+    {30, &amp;#39;c&amp;#39;}
+  };
+
+  std::flat_map&amp;lt;int, char&amp;gt; fm2 = {
+    {5, &amp;#39;d&amp;#39;},
+    {15, &amp;#39;e&amp;#39;}
+  };
+
+  // fm1とfm2を入れ替える
+  fm1.swap(fm2);
+
+  print(&amp;#34;fm1&amp;#34;, fm1);
+  print(&amp;#34;fm2&amp;#34;, fm2);
+}
+```
+
+### 出力
+```
+fm1 : {[5,d], [15,e]}
+fm2 : {[10,a], [20,b], [30,c]}
+```
+
+## バージョン
+### 言語
+- C++23
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
+
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase -- リンクミスを修正</title>
      <link href="https://cpprefjp.github.io/reference/map/map/erase.html"/>
      <id>c170374a913b9dbd4dceb07dbfa4eeba5489ed24:reference/map/map/erase.md</id>
      <updated>2023-06-24T22:42:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/map/map/erase.md b/reference/map/map/erase.md
index dfe1c708e..de6be33b3 100644
--- a/reference/map/map/erase.md
+++ b/reference/map/map/erase.md
@@ -50,8 +50,8 @@ iterator erase(const_iterator first, const_iterator last); // (5) C++11
 
 ## 計算量
 - (1), (2) : 定数時間
-- (3), (4) : コンテナの [`size()`](/reference/map/map/size.md) について対数時間
-- (5) : コンテナの [`size()`](/reference/map/map/size.md) について対数時間、それに加えて `first` と `last` の間の距離に対する線形時間
+- (3), (4) : コンテナの [`size()`](size.md) について対数時間
+- (5) : コンテナの [`size()`](size.md) について対数時間、それに加えて `first` と `last` の間の距離に対する線形時間
 
 
 ## 備考
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase -- リンクミスを修正</title>
      <link href="https://cpprefjp.github.io/reference/map/multimap/erase.html"/>
      <id>c170374a913b9dbd4dceb07dbfa4eeba5489ed24:reference/map/multimap/erase.md</id>
      <updated>2023-06-24T22:42:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/map/multimap/erase.md b/reference/map/multimap/erase.md
index e62de6e0f..c67b298f1 100644
--- a/reference/map/multimap/erase.md
+++ b/reference/map/multimap/erase.md
@@ -50,8 +50,8 @@ iterator erase(const_iterator first, const_iterator last); // (5) C++11
 
 ## 計算量
 - (1), (2) : 定数時間
-- (3), (4) : コンテナの [`size()`](/reference/map/map/size.md) について対数時間
-- (5) : コンテナの [`size()`](/reference/map/map/size.md) について対数時間、それに加えて `first` と `last` の間の距離に対する線形時間
+- (3), (4) : コンテナの [`size()`](size.md) について対数時間
+- (5) : コンテナの [`size()`](size.md) について対数時間、それに加えて `first` と `last` の間の距離に対する線形時間
 
 
 ## 備考
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase -- リンクミスを修正</title>
      <link href="https://cpprefjp.github.io/reference/set/multiset/erase.html"/>
      <id>c170374a913b9dbd4dceb07dbfa4eeba5489ed24:reference/set/multiset/erase.md</id>
      <updated>2023-06-24T22:42:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/set/multiset/erase.md b/reference/set/multiset/erase.md
index 8fa95adcd..f4bfc5a4d 100644
--- a/reference/set/multiset/erase.md
+++ b/reference/set/multiset/erase.md
@@ -50,8 +50,8 @@ iterator erase(const_iterator first, const_iterator last); // (5) C++11
 
 ## 計算量
 - (1), (2) : 定数時間
-- (3), (4) : コンテナの [`size()`](/reference/map/map/size.md) について対数時間
-- (5) : コンテナの [`size()`](/reference/map/map/size.md) について対数時間、それに加えて `first` と `last` の間の距離に対する線形時間
+- (3), (4) : コンテナの [`size()`](size.md) について対数時間
+- (5) : コンテナの [`size()`](size.md) について対数時間、それに加えて `first` と `last` の間の距離に対する線形時間
 
 
 ## 備考
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase -- リンクミスを修正</title>
      <link href="https://cpprefjp.github.io/reference/set/set/erase.html"/>
      <id>c170374a913b9dbd4dceb07dbfa4eeba5489ed24:reference/set/set/erase.md</id>
      <updated>2023-06-24T22:42:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/set/set/erase.md b/reference/set/set/erase.md
index 2b4d0794d..385c77ac4 100644
--- a/reference/set/set/erase.md
+++ b/reference/set/set/erase.md
@@ -50,8 +50,8 @@ iterator erase(const_iterator first, const_iterator last); // (5) C++11
 
 ## 計算量
 - (1), (2) : 定数時間
-- (3), (4) : コンテナの [`size()`](/reference/map/map/size.md) について対数時間
-- (5) : コンテナの [`size()`](/reference/map/map/size.md) について対数時間、それに加えて `first` と `last` の間の距離に対する線形時間
+- (3), (4) : コンテナの [`size()`](size.md) について対数時間
+- (5) : コンテナの [`size()`](size.md) について対数時間、それに加えて `first` と `last` の間の距離に対する線形時間
 
 
 ## 備考
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase -- map / setのerase : erase(iterator)は仕様としてはC++17で再追加されたがdefectなのでC++14でも使える場合があることを記載</title>
      <link href="https://cpprefjp.github.io/reference/map/map/erase.html"/>
      <id>e7ee1d999620147a6423c73b2992803bf7185a50:reference/map/map/erase.md</id>
      <updated>2023-06-24T21:23:22+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/map/map/erase.md b/reference/map/map/erase.md
index 11f2fa09a..dfe1c708e 100644
--- a/reference/map/map/erase.md
+++ b/reference/map/map/erase.md
@@ -55,6 +55,7 @@ iterator erase(const_iterator first, const_iterator last); // (5) C++11
 
 
 ## 備考
+- (1) : C++17で再追加されたこのオーバーロードは、それ以前の言語バージョンから使用できる可能性がある
 - (1), (2) : この関数に、範囲外のイテレータ (終端イテレータを含む) を指定した場合の動作は未定義
 - 削除された要素を指すイテレータ、および、参照のみ無効になる。なお、規格書に明確な記載は無いが、削除された要素を指すポインタも無効になる
 - ループ中で `map` の要素を削除するためには、C++03 までは以下のようなコードを書く必要があった。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase -- map / setのerase : erase(iterator)は仕様としてはC++17で再追加されたがdefectなのでC++14でも使える場合があることを記載</title>
      <link href="https://cpprefjp.github.io/reference/map/multimap/erase.html"/>
      <id>e7ee1d999620147a6423c73b2992803bf7185a50:reference/map/multimap/erase.md</id>
      <updated>2023-06-24T21:23:22+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/map/multimap/erase.md b/reference/map/multimap/erase.md
index 335cddf5f..e62de6e0f 100644
--- a/reference/map/multimap/erase.md
+++ b/reference/map/multimap/erase.md
@@ -55,6 +55,7 @@ iterator erase(const_iterator first, const_iterator last); // (5) C++11
 
 
 ## 備考
+- (1) : C++17で再追加されたこのオーバーロードは、それ以前の言語バージョンから使用できる可能性がある
 - (1), (2) : この関数に、範囲外のイテレータ (終端イテレータを含む) を指定した場合の動作は未定義
 - 削除された要素を指すイテレータ、および、参照のみ無効になる。なお、規格書に明確な記載は無いが、削除された要素を指すポインタも無効になる。
 - ループ中で `multimap` の要素を削除するためには、C++03 までは以下のようなコードを書く必要があった。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase -- map / setのerase : erase(iterator)は仕様としてはC++17で再追加されたがdefectなのでC++14でも使える場合があることを記載</title>
      <link href="https://cpprefjp.github.io/reference/set/multiset/erase.html"/>
      <id>e7ee1d999620147a6423c73b2992803bf7185a50:reference/set/multiset/erase.md</id>
      <updated>2023-06-24T21:23:22+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/set/multiset/erase.md b/reference/set/multiset/erase.md
index b3aaab549..8fa95adcd 100644
--- a/reference/set/multiset/erase.md
+++ b/reference/set/multiset/erase.md
@@ -55,6 +55,7 @@ iterator erase(const_iterator first, const_iterator last); // (5) C++11
 
 
 ## 備考
+- (1) : C++17で再追加されたこのオーバーロードは、それ以前の言語バージョンから使用できる可能性がある
 - (1), (2) : この関数に、範囲外のイテレータ (終端イテレータを含む) を指定した場合の動作は未定義
 - 削除された要素を指すイテレータ、および、参照のみ無効になる。なお、規格書に明確な記載は無いが、削除された要素を指すポインタも無効になる。
 - ループ中で `multiset` の要素を削除するためには、C++03 までは以下のようなコードを書く必要があった。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase -- map / setのerase : erase(iterator)は仕様としてはC++17で再追加されたがdefectなのでC++14でも使える場合があることを記載</title>
      <link href="https://cpprefjp.github.io/reference/set/set/erase.html"/>
      <id>e7ee1d999620147a6423c73b2992803bf7185a50:reference/set/set/erase.md</id>
      <updated>2023-06-24T21:23:22+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/set/set/erase.md b/reference/set/set/erase.md
index 489bcdbc3..2b4d0794d 100644
--- a/reference/set/set/erase.md
+++ b/reference/set/set/erase.md
@@ -55,6 +55,7 @@ iterator erase(const_iterator first, const_iterator last); // (5) C++11
 
 
 ## 備考
+- (1) : C++17で再追加されたこのオーバーロードは、それ以前の言語バージョンから使用できる可能性がある
 - (1), (2) : この関数に、範囲外のイテレータ (終端イテレータを含む) を指定した場合の動作は未定義
 - 削除された要素を指すイテレータ、および、参照のみ無効になる。なお、規格書に明確な記載は無いが、削除された要素を指すポインタも無効になる。
 - ループ中で `set` の要素を削除するためには、C++03 までは以下のようなコードを書く必要があった。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase -- flat_mapのerase : flat_mapでは該当しない仕様を削除</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map/erase.html"/>
      <id>5674bf7cffb19f6e4c99d61e786dabb7ccfb5106:reference/flat_map/flat_map/erase.md</id>
      <updated>2023-06-24T21:20:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map/erase.md b/reference/flat_map/flat_map/erase.md
index f68910010..9c39eed04 100644
--- a/reference/flat_map/flat_map/erase.md
+++ b/reference/flat_map/flat_map/erase.md
@@ -19,7 +19,7 @@ iterator erase(const_iterator first, const_iterator last); // (5) C++23
 ```
 
 ## 概要
-単一要素またはイテレータ範囲`[first, last)`を `map` コンテナから削除する。
+単一要素またはイテレータ範囲`[first, last)`を コンテナから削除する。
 
 これは削除された要素の数だけコンテナの `size` を減らし、それぞれの要素のデストラクタを呼び出す。
 
@@ -43,35 +43,12 @@ iterator erase(const_iterator first, const_iterator last); // (5) C++23
 
 ## 計算量
 - (1), (2) : 定数時間
-- (3), (4) : コンテナの [`size()`](/reference/map/map/size.md) について対数時間
-- (5) : コンテナの [`size()`](/reference/map/map/size.md) について対数時間、それに加えて `first` と `last` の間の距離に対する線形時間
+- (3), (4) : コンテナの [`size()`](size.md) について対数時間
+- (5) : コンテナの [`size()`](size.md) について対数時間、それに加えて `first` と `last` の間の距離に対する線形時間
 
 
 ## 備考
 - (1), (2) : この関数に、範囲外のイテレータ (終端イテレータを含む) を指定した場合の動作は未定義
-- 削除された要素を指すイテレータ、および、参照のみ無効になる。なお、規格書に明確な記載は無いが、削除された要素を指すポインタも無効になる
-- ループ中で `map` の要素を削除するためには、C++03 までは以下のようなコードを書く必要があった。
-    ```cpp
-    while (it != map_object.end()) {
-      if (条件) {
-        map_object.erase(it++);
-      }
-      else {
-        ++it;
-      }
-    }
-    ```
-
-    - これは、`erase` で指定したイテレータが、対象となる要素が削除されることによって無効になるため、後置インクリメント `it++` を使用することで要素が削除されるより先に削除対象の次の要素を指すようにするためである。
-    - このような書き方は C++11 以降でも依然として有効だが、`erase` が削除された次の要素を指すイテレータを返すようになったため、以下のようなコードを
-    ```cpp
-    map_object.erase(it++);
-    ```
-
-    - 以下のように書くこともできるようになった
-    ```cpp
-    it = map_object.erase(it);
-    ```
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase -- map / set / flat_mapのerase : 存在しないキーを指定した場合でも問題なく動作する (何もしない) ことを確認 #1152</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map/erase.html"/>
      <id>717658da25868f54091bc273aaff7f7c5e46e02b:reference/flat_map/flat_map/erase.md</id>
      <updated>2023-06-24T21:18:59+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map/erase.md b/reference/flat_map/flat_map/erase.md
index 866a61380..f68910010 100644
--- a/reference/flat_map/flat_map/erase.md
+++ b/reference/flat_map/flat_map/erase.md
@@ -48,7 +48,7 @@ iterator erase(const_iterator first, const_iterator last); // (5) C++23
 
 
 ## 備考
-- この関数に、範囲外のイテレータ (終端イテレータを含む) や存在しないキーを指定した場合の動作は未定義
+- (1), (2) : この関数に、範囲外のイテレータ (終端イテレータを含む) を指定した場合の動作は未定義
 - 削除された要素を指すイテレータ、および、参照のみ無効になる。なお、規格書に明確な記載は無いが、削除された要素を指すポインタも無効になる
 - ループ中で `map` の要素を削除するためには、C++03 までは以下のようなコードを書く必要があった。
     ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase -- map / set / flat_mapのerase : 存在しないキーを指定した場合でも問題なく動作する (何もしない) ことを確認 #1152</title>
      <link href="https://cpprefjp.github.io/reference/map/map/erase.html"/>
      <id>717658da25868f54091bc273aaff7f7c5e46e02b:reference/map/map/erase.md</id>
      <updated>2023-06-24T21:18:59+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/map/map/erase.md b/reference/map/map/erase.md
index f40a1cb9a..11f2fa09a 100644
--- a/reference/map/map/erase.md
+++ b/reference/map/map/erase.md
@@ -55,7 +55,7 @@ iterator erase(const_iterator first, const_iterator last); // (5) C++11
 
 
 ## 備考
-- この関数に、範囲外のイテレータ (終端イテレータを含む) や存在しないキーを指定した場合の動作は未定義
+- (1), (2) : この関数に、範囲外のイテレータ (終端イテレータを含む) を指定した場合の動作は未定義
 - 削除された要素を指すイテレータ、および、参照のみ無効になる。なお、規格書に明確な記載は無いが、削除された要素を指すポインタも無効になる
 - ループ中で `map` の要素を削除するためには、C++03 までは以下のようなコードを書く必要があった。
     ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase -- map / set / flat_mapのerase : 存在しないキーを指定した場合でも問題なく動作する (何もしない) ことを確認 #1152</title>
      <link href="https://cpprefjp.github.io/reference/map/multimap/erase.html"/>
      <id>717658da25868f54091bc273aaff7f7c5e46e02b:reference/map/multimap/erase.md</id>
      <updated>2023-06-24T21:18:59+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/map/multimap/erase.md b/reference/map/multimap/erase.md
index 47d878c4d..335cddf5f 100644
--- a/reference/map/multimap/erase.md
+++ b/reference/map/multimap/erase.md
@@ -55,7 +55,7 @@ iterator erase(const_iterator first, const_iterator last); // (5) C++11
 
 
 ## 備考
-- この関数に、範囲外のイテレータ (終端イテレータを含む) や存在しないキーを指定した場合の動作は未定義
+- (1), (2) : この関数に、範囲外のイテレータ (終端イテレータを含む) を指定した場合の動作は未定義
 - 削除された要素を指すイテレータ、および、参照のみ無効になる。なお、規格書に明確な記載は無いが、削除された要素を指すポインタも無効になる。
 - ループ中で `multimap` の要素を削除するためには、C++03 までは以下のようなコードを書く必要があった。
     ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase -- map / set / flat_mapのerase : 存在しないキーを指定した場合でも問題なく動作する (何もしない) ことを確認 #1152</title>
      <link href="https://cpprefjp.github.io/reference/set/multiset/erase.html"/>
      <id>717658da25868f54091bc273aaff7f7c5e46e02b:reference/set/multiset/erase.md</id>
      <updated>2023-06-24T21:18:59+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/set/multiset/erase.md b/reference/set/multiset/erase.md
index 4ed6d8977..b3aaab549 100644
--- a/reference/set/multiset/erase.md
+++ b/reference/set/multiset/erase.md
@@ -55,7 +55,7 @@ iterator erase(const_iterator first, const_iterator last); // (5) C++11
 
 
 ## 備考
-- この関数に、範囲外のイテレータ (終端イテレータを含む) や存在しないキーを指定した場合の動作は未定義
+- (1), (2) : この関数に、範囲外のイテレータ (終端イテレータを含む) を指定した場合の動作は未定義
 - 削除された要素を指すイテレータ、および、参照のみ無効になる。なお、規格書に明確な記載は無いが、削除された要素を指すポインタも無効になる。
 - ループ中で `multiset` の要素を削除するためには、C++03 までは以下のようなコードを書く必要があった。
     ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase -- map / set / flat_mapのerase : 存在しないキーを指定した場合でも問題なく動作する (何もしない) ことを確認 #1152</title>
      <link href="https://cpprefjp.github.io/reference/set/set/erase.html"/>
      <id>717658da25868f54091bc273aaff7f7c5e46e02b:reference/set/set/erase.md</id>
      <updated>2023-06-24T21:18:59+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/set/set/erase.md b/reference/set/set/erase.md
index 2b3f85a0e..489bcdbc3 100644
--- a/reference/set/set/erase.md
+++ b/reference/set/set/erase.md
@@ -55,7 +55,7 @@ iterator erase(const_iterator first, const_iterator last); // (5) C++11
 
 
 ## 備考
-- この関数に、範囲外のイテレータ (終端イテレータを含む) や存在しないキーを指定した場合の動作は未定義
+- (1), (2) : この関数に、範囲外のイテレータ (終端イテレータを含む) を指定した場合の動作は未定義
 - 削除された要素を指すイテレータ、および、参照のみ無効になる。なお、規格書に明確な記載は無いが、削除された要素を指すポインタも無効になる。
 - ループ中で `set` の要素を削除するためには、C++03 までは以下のようなコードを書く必要があった。
     ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
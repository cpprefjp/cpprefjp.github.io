<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2025-05-02T08:22:45.833251</updated>
  <id>6cc72432-cc8c-41d6-aa10-3341df6e7084</id>

  
    <entry>
      <title>basic-operation -- execution/basic-operation: fix inner links</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/basic-operation.html"/>
      <id>5e7c6ee264d5044b5c94d2f1a49e74b84df6edce:reference/execution/execution/basic-operation.md</id>
      <updated>2025-05-02T17:18:07+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/basic-operation.md b/reference/execution/execution/basic-operation.md
index 7ac6e0592..f1181fa9d 100644
--- a/reference/execution/execution/basic-operation.md
+++ b/reference/execution/execution/basic-operation.md
@@ -111,7 +111,7 @@ using indices-for = remove_reference_t&amp;lt;Sndr&amp;gt;::indices-for;  // exposition only
 
 説明専用の定数`connect-all`は、下記ラムダ式と等価な関数呼び出し可能なオブジェクトとして初期化される。
 
-- 全ての子Sender`child`とSenderアルゴリズム`sndr`の[Receiver](basic-receiver.md)を[接続(connect)](connec.md)し、結果の[Operation State](operation_state.md)リストを[`product-type`](product-type.md.nolink)型にまとめて返す。
+- 全ての子Sender`child`とSenderアルゴリズム`sndr`の[Receiver](basic-receiver.md.nolink)を[接続(connect)](connect.md)し、結果の[Operation State](operation_state.md)リストを[`product-type`](product-type.md.nolink)型にまとめて返す。
 
 ```cpp
 []&amp;lt;class Sndr, class Rcvr, size_t... Is&amp;gt;(
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>execution -- execution: just (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution.html"/>
      <id>885f6ee7a8b2f4257a21a51e4e97f3adaf46ab1d:reference/execution/execution.md</id>
      <updated>2025-05-02T17:14:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution.md b/reference/execution/execution.md
index 18549d320..705591d71 100644
--- a/reference/execution/execution.md
+++ b/reference/execution/execution.md
@@ -99,7 +99,7 @@ namespace std::execution {
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`execution::just`](execution/just.md.nolink) | 値を送信するSender (customization point object) | C++26 |
+| [`execution::just`](execution/just.md) | 値を送信するSender (customization point object) | C++26 |
 | [`execution::just_error`](execution/just_error.md.nolink) | エラーを送信するSender (customization point object) | C++26 |
 | [`execution::just_stopped`](execution/just_stopped.md.nolink) | 停止を送信するSender (customization point object) | C++26 |
 | [`execution::read_env`](execution/read_env.md.nolink) | Receiver環境から構築されるSender (customization point object) | C++26 |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>basic-operation -- execution: just (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/basic-operation.html"/>
      <id>885f6ee7a8b2f4257a21a51e4e97f3adaf46ab1d:reference/execution/execution/basic-operation.md</id>
      <updated>2025-05-02T17:14:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/basic-operation.md b/reference/execution/execution/basic-operation.md
new file mode 100644
index 000000000..7ac6e0592
--- /dev/null
+++ b/reference/execution/execution/basic-operation.md
@@ -0,0 +1,149 @@
+# basic-operation
+* execution[meta header]
+* class template[meta id-type]
+* std::execution[meta namespace]
+* cpp26[meta cpp]
+
+```cpp
+namespace std::execution {
+  template&amp;lt;class Sndr, class Rcvr&amp;gt;
+    requires valid-specialization&amp;lt;state-type, Sndr, Rcvr&amp;gt; &amp;amp;&amp;amp;
+             valid-specialization&amp;lt;connect-all-result, Sndr, Rcvr&amp;gt;
+  struct basic-operation : basic-state&amp;lt;Sndr, Rcvr&amp;gt; {  // exposition only
+    using operation_state_concept = operation_state_t;
+    using tag-t = tag_of_t&amp;lt;Sndr&amp;gt;;                     // exposition only
+
+    connect-all-result&amp;lt;Sndr, Rcvr&amp;gt; inner-ops;         // exposition only
+
+    basic-operation(Sndr&amp;amp;&amp;amp; sndr, Rcvr&amp;amp;&amp;amp; rcvr) noexcept(see below)  // exposition only
+      : basic-state&amp;lt;Sndr, Rcvr&amp;gt;(std::forward&amp;lt;Sndr&amp;gt;(sndr), std::move(rcvr)),
+        inner-ops(connect-all(this, std::forward&amp;lt;Sndr&amp;gt;(sndr), indices-for&amp;lt;Sndr&amp;gt;()))
+    {}
+
+    void start() &amp;amp; noexcept {
+      auto&amp;amp; [...ops] = inner-ops;
+      impls-for&amp;lt;tag-t&amp;gt;::start(this-&amp;gt;state, this-&amp;gt;rcvr, ops...);
+    }
+  };
+
+  template&amp;lt;class Sndr, class Rcvr&amp;gt;
+  struct basic-state {             // exposition only
+    basic-state(Sndr&amp;amp;&amp;amp; sndr, Rcvr&amp;amp;&amp;amp; rcvr) noexcept(see below)
+      : rcvr(std::move(rcvr))
+      , state(impls-for&amp;lt;tag_of_t&amp;lt;Sndr&amp;gt;&amp;gt;::get-state(std::forward&amp;lt;Sndr&amp;gt;(sndr), rcvr)) { }
+
+    Rcvr rcvr;                     // exposition only
+    state-type&amp;lt;Sndr, Rcvr&amp;gt; state;  // exposition only
+  };
+}
+```
+* operation_state_t[link operation_state.md]
+* tag_of_t[link tag_of_t.md.nolink]
+* impls-for[link impls-for.md]
+* see below[italic]
+
+## 概要
+`basic-operation`および`basic-state`は、Senderアルゴリズム動作仕様定義で用いられる説明専用のクラステンプレートである。
+
+`basic-operation&amp;lt;Sndr, Rcvr&amp;gt;`は[`operation_state`](operation_state.md)のモデルであり、[Senderアルゴリズム](basic-sender.md)と[Recevier](receiver.md)の[接続(connect)](connect.md)結果型として利用される。
+
+- `rcvr` : 接続先Receiverオブジェクトを保持。Senderアルゴリズム同士を連結する場合は、親Senderアルゴリズム側の[Receiver](receiver.md)が該当する。
+- `state` : Senderアルゴリズム構築時の引数リストを保持。（[`impls-for`](impls-for.md)でカスタマイズ可能）
+- `inner-ops` : 子SenderリストとSenderアルゴリズムとの接続結果[Operation State](operation_state.md)リストを保持。Senderファクトリでは0個、Senderアダプタでは通常1個の子Senderと接続される。
+
+
+## クラス仕様
+`basic-operation`コンストラクタ`noexcept`節の式は下記の通り。
+
+```cpp
+is_nothrow_constructible_v&amp;lt;basic-state&amp;lt;Self, Rcvr&amp;gt;, Self, Rcvr&amp;gt; &amp;amp;&amp;amp;
+noexcept(connect-all(this, std::forward&amp;lt;Sndr&amp;gt;(sndr), indices-for&amp;lt;Sndr&amp;gt;()))
+```
+* is_nothrow_constructible_v[link /reference/type_traits/is_nothrow_constructible.md]
+
+`basic-state`コンストラクタ`noexcept`節の式は下記の通り。
+
+```cpp
+is_nothrow_move_constructible_v&amp;lt;Rcvr&amp;gt; &amp;amp;&amp;amp;
+nothrow-callable&amp;lt;decltype(impls-for&amp;lt;tag_of_t&amp;lt;Sndr&amp;gt;&amp;gt;::get-state), Sndr, Rcvr&amp;amp;&amp;gt; &amp;amp;&amp;amp;
+(same_as&amp;lt;state-type&amp;lt;Sndr, Rcvr&amp;gt;, get-state-result&amp;gt; ||
+ is_nothrow_constructible_v&amp;lt;state-type&amp;lt;Sndr, Rcvr&amp;gt;, get-state-result&amp;gt;)
+```
+* impls-for[link impls-for.md]
+* tag_of_t[link tag_of_t.md.nolink]
+* is_nothrow_move_constructible_v[link /reference/type_traits/is_nothrow_move_constructible.md]
+* is_nothrow_constructible_v[link /reference/type_traits/is_nothrow_constructible.md]
+
+ここで、説明用の型`get-state-result`は下記の通り定義される。
+
+```cpp
+call-result-t&amp;lt;decltype(impls-for&amp;lt;tag_of_t&amp;lt;Sndr&amp;gt;&amp;gt;::get-state), Sndr, Rcvr&amp;amp;&amp;gt;.
+```
+* impls-for[link impls-for.md]
+* tag_of_t[link tag_of_t.md.nolink]
+
+
+## 説明専用エンティティ
+
+```cpp
+template&amp;lt;template&amp;lt;class...&amp;gt; class T, class... Args&amp;gt;
+concept valid-specialization =  // exposition only
+  requires { typename T&amp;lt;Args...&amp;gt;; };
+
+template&amp;lt;class Sndr, class Rcvr&amp;gt;  // exposition only
+using state-type = decay_t&amp;lt;call-result-t&amp;lt;
+  decltype(impls-for&amp;lt;tag_of_t&amp;lt;Sndr&amp;gt;&amp;gt;::get-state), Sndr, Rcvr&amp;amp;&amp;gt;&amp;gt;;
+
+constexpr auto connect-all = see below;  // exposition only
+
+template&amp;lt;class Sndr, class Rcvr&amp;gt;
+using connect-all-result = call-result-t&amp;lt;  // exposition only
+  decltype(connect-all), basic-state&amp;lt;Sndr, Rcvr&amp;gt;*, Sndr, indices-for&amp;lt;Sndr&amp;gt;&amp;gt;;
+
+template&amp;lt;class Sndr&amp;gt;
+using indices-for = remove_reference_t&amp;lt;Sndr&amp;gt;::indices-for;  // exposition only 
+```
+* impls-for[link impls-for.md]
+* tag_of_t[link tag_of_t.md.nolink]
+* decay_t[link /reference/type_traits/decay.md]
+* remove_reference_t[link /reference/type_traits/remove_reference.md]
+* see below[italic]
+
+説明専用の定数`connect-all`は、下記ラムダ式と等価な関数呼び出し可能なオブジェクトとして初期化される。
+
+- 全ての子Sender`child`とSenderアルゴリズム`sndr`の[Receiver](basic-receiver.md)を[接続(connect)](connec.md)し、結果の[Operation State](operation_state.md)リストを[`product-type`](product-type.md.nolink)型にまとめて返す。
+
+```cpp
+[]&amp;lt;class Sndr, class Rcvr, size_t... Is&amp;gt;(
+  basic-state&amp;lt;Sndr, Rcvr&amp;gt;* op, Sndr&amp;amp;&amp;amp; sndr, index_sequence&amp;lt;Is...&amp;gt;) noexcept(see below)
+    -&amp;gt; decltype(auto) {
+    auto&amp;amp; [_, data, ...child] = sndr;
+    return product-type{connect(
+      std::forward_like&amp;lt;Sndr&amp;gt;(child),
+      basic-receiver&amp;lt;Sndr, Rcvr, integral_constant&amp;lt;size_t, Is&amp;gt;&amp;gt;{op})...};
+  }
+```
+* index_sequence[link /reference/utility/index_sequence.md]
+* product-type[link product-type.md.nolink]
+* connect[link connect.md]
+* basic-receiver[link basic-receiver.md.nolink]
+* integral_constant[link /reference/type_traits/integral_constant.md]
+* see below[italic]
+
+- テンプレートパラメータ制約 : ラムダ式中の`return`文の式が適格であること。
+- ラムダ式中の`return`文の式が例外送出する可能性がある場合は、`noexcept(false)`となる。そうでなければ、`noexcept(true)`となる。
+
+
+## バージョン
+### 言語
+- C++26
+
+
+## 関連項目
+- [`basic-sender`](basic-sender.md)
+- [`basic-receiver`](basic-receiver.md.nolink)
+- [`execution::operation_state`](operation_state.md)
+
+
+## 参照
+- [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>basic-sender -- execution: just (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/basic-sender.html"/>
      <id>885f6ee7a8b2f4257a21a51e4e97f3adaf46ab1d:reference/execution/execution/basic-sender.md</id>
      <updated>2025-05-02T17:14:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/basic-sender.md b/reference/execution/execution/basic-sender.md
new file mode 100644
index 000000000..1d9d0c7da
--- /dev/null
+++ b/reference/execution/execution/basic-sender.md
@@ -0,0 +1,91 @@
+# basic-sender
+* execution[meta header]
+* class template[meta id-type]
+* std::execution[meta namespace]
+* cpp26[meta cpp]
+
+```cpp
+namespace std::execution {
+  template&amp;lt;class Tag, class Data, class... Child&amp;gt;
+  struct basic-sender : product-type&amp;lt;Tag, Data, Child...&amp;gt; {  // exposition only
+    using sender_concept = sender_t;
+    using indices-for = index_sequence_for&amp;lt;Child...&amp;gt;;        // exposition only
+
+    decltype(auto) get_env() const noexcept {
+      auto&amp;amp; [_, data, ...child] = *this;
+      return impls-for&amp;lt;Tag&amp;gt;::get-attrs(data, child...);
+    }
+
+    template&amp;lt;decays-to&amp;lt;basic-sender&amp;gt; Self, receiver Rcvr&amp;gt;
+    auto connect(this Self&amp;amp;&amp;amp; self, Rcvr rcvr) noexcept(see below)
+      -&amp;gt; basic-operation&amp;lt;Self, Rcvr&amp;gt; {
+      return {std::forward&amp;lt;Self&amp;gt;(self), std::move(rcvr)};
+    }
+
+    template&amp;lt;decays-to&amp;lt;basic-sender&amp;gt; Self, class Env&amp;gt;
+    auto get_completion_signatures(this Self&amp;amp;&amp;amp; self, Env&amp;amp;&amp;amp; env) noexcept
+      -&amp;gt; completion-signatures-for&amp;lt;Self, Env&amp;gt; {
+      return {};
+    }
+  };
+}
+```
+* product-type[link product-type.md.nolink]
+* sender_t[link sender.md]
+* index_sequence_for[link /reference/utility/index_sequence_for.md]
+* impls-for[link impls-for.md]
+* receiver[link receiver.md]
+* basic-operation[link basic-operation.md]
+* this Self[link /lang/cpp23/deducing_this.md.nolink]
+* see below[italic]
+
+## 概要
+`basic-sender`は、Senderアルゴリズム動作仕様定義で用いられる説明専用のクラステンプレートである。
+
+`basic-sender&amp;lt;Tag, Data, Child...&amp;gt;`は[`sender`](sender.md)のモデルであり、[Senderアルゴリズム構築](make-sender.md)の結果型として利用される。
+
+- `Tag` : [Senderタグ](tag_of_t.md.nolink)（例：[`just`](just.md), [`then`](then.md.nolink)）
+- `Data` : Senderアルゴリズムに指定された追加の引数。複数個の引数は[`product-type`](product-type.md.nolink)型を用いて単一値として保持する。
+- `Child` : 子Senderのリスト。Senderファクトリでは0個、Senderアダプタでは通常1個の子Senderを保持する。
+
+
+## クラス仕様
+`basic-sender`の特殊化が集成体となるか否かは未規定である。
+`basic-sender`型の式は[構造化束縛](/lang/cpp17/structured_bindings.md)における初期化子として利用できる。
+
+`basic-sender::connect`メンバ関数`noexcept`節の式は下記の通り。
+
+```cpp
+is_nothrow_constructible_v&amp;lt;basic-operation&amp;lt;Self, Rcvr&amp;gt;, Self, Rcvr&amp;gt;
+```
+* is_nothrow_constructible_v[link /reference/type_traits/is_nothrow_constructible.md]
+* basic-operation[link basic-operation.md]
+
+説明専用のエイリアステンプレート`completion-signatures-for`は、下記の通り定義される。
+
+```
+template&amp;lt;class Sndr, class Env&amp;gt;
+using completion-signatures-for = see below;  // exposition only
+```
+* see below[italic]
+
+説明用の`sndr`を`decltype((sndr))`が`Sndr`型となる式、`rcvr`を[`sender_in`](sender_in.md)`&amp;lt;Sndr, Env&amp;gt; == true`となる[環境](../queryable.md)`Env`に関連付けられた[`Receiver`](receiver.md)とする。
+
+`completion-signatures-for&amp;lt;Sndr, Env&amp;gt;`は[`completion_signatures`](completion_signatures.md)の特殊化であり、そのテンプレート引数は `sndr`と`rcvr`との[接続(connect)](connect.md)結果[Operation State](operation_state.md)を[開始(start)](start.md)して得られる可能性のある結果の完了シグネチャ集合となる。
+
+[`sender_in`](sender_in.md)`&amp;lt;Sndr, Env&amp;gt; == false`となる場合、`completion-signatures-for&amp;lt;Sndr, Env&amp;gt;`は[`completion_signatures`](completion_signatures.md)の特殊化ではない別の型となる。
+ 処理系（標準ライブラリ実装者）は、この型を用いてユーザにエラー理由を通知することが推奨される。
+
+
+## バージョン
+### 言語
+- C++26
+
+
+## 関連項目
+- [`make-sender`](make-sender.md)
+- [`execution::sender`](sender.md)
+
+
+## 参照
+- [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>connect -- execution: just (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/connect.html"/>
      <id>885f6ee7a8b2f4257a21a51e4e97f3adaf46ab1d:reference/execution/execution/connect.md</id>
      <updated>2025-05-02T17:14:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/connect.md b/reference/execution/execution/connect.md
index 467004ba3..233f66d06 100644
--- a/reference/execution/execution/connect.md
+++ b/reference/execution/execution/connect.md
@@ -209,7 +209,7 @@ int main()
 * ex::connect[color ff0000]
 * ex::receiver_t[link receiver.md]
 * ex::sender[link sender.md]
-* ex::just[link just.md.nolink]
+* ex::just[link just.md]
 * ex::operation_state[link operation_state.md]
 * ex::start[link start.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>error_types_of_t -- execution: just (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/error_types_of_t.html"/>
      <id>885f6ee7a8b2f4257a21a51e4e97f3adaf46ab1d:reference/execution/execution/error_types_of_t.md</id>
      <updated>2025-05-02T17:14:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/error_types_of_t.md b/reference/execution/execution/error_types_of_t.md
index 416c8551e..10b6d9bcf 100644
--- a/reference/execution/execution/error_types_of_t.md
+++ b/reference/execution/execution/error_types_of_t.md
@@ -52,7 +52,7 @@ int main()
 ```
 * ex::error_types_of_t[color ff0000]
 * ex::sender[link sender.md]
-* ex::just[link just.md.nolink]
+* ex::just[link just.md]
 * ex::just_error[link just_error.md.nolink]
 
 ### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>get_completion_signatures -- execution: just (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/get_completion_signatures.html"/>
      <id>885f6ee7a8b2f4257a21a51e4e97f3adaf46ab1d:reference/execution/execution/get_completion_signatures.md</id>
      <updated>2025-05-02T17:14:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/get_completion_signatures.md b/reference/execution/execution/get_completion_signatures.md
index 4aee05a22..4ef53f601 100644
--- a/reference/execution/execution/get_completion_signatures.md
+++ b/reference/execution/execution/get_completion_signatures.md
@@ -68,7 +68,7 @@ int main()
 ```
 * ex::get_completion_signatures[color ff0000]
 * ex::sender[link sender.md]
-* ex::just[link just.md.nolink]
+* ex::just[link just.md]
 * ex::completion_signatures[link completion_signatures.md]
 * ex::env&amp;lt;&amp;gt;[link env.md]
 * ex::set_value_t[link set_value.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>get_env -- execution: just (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/get_env.html"/>
      <id>885f6ee7a8b2f4257a21a51e4e97f3adaf46ab1d:reference/execution/execution/get_env.md</id>
      <updated>2025-05-02T17:14:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/get_env.md b/reference/execution/execution/get_env.md
index 7998c204e..64fc27b0b 100644
--- a/reference/execution/execution/get_env.md
+++ b/reference/execution/execution/get_env.md
@@ -52,7 +52,7 @@ int main()
 ```
 * ex::get_env[color ff0000]
 * ex::sender[link sender.md]
-* ex::just[link just.md.nolink]
+* ex::just[link just.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>impls-for -- execution: just (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/impls-for.html"/>
      <id>885f6ee7a8b2f4257a21a51e4e97f3adaf46ab1d:reference/execution/execution/impls-for.md</id>
      <updated>2025-05-02T17:14:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/impls-for.md b/reference/execution/execution/impls-for.md
new file mode 100644
index 000000000..e21c5f00b
--- /dev/null
+++ b/reference/execution/execution/impls-for.md
@@ -0,0 +1,124 @@
+# impls-for
+* execution[meta header]
+* class template[meta id-type]
+* std::execution[meta namespace]
+* cpp26[meta cpp]
+
+```cpp
+namespace std::execution {
+  template&amp;lt;class Tag&amp;gt;
+  struct impls-for : default-impls {};  // exposition only
+
+  struct default-impls {  // exposition only
+    static constexpr auto get-attrs = see below;  // exposition only
+    static constexpr auto get-env = see below;    // exposition only
+    static constexpr auto get-state = see below;  // exposition only
+    static constexpr auto start = see below;      // exposition only
+    static constexpr auto complete = see below;   // exposition only
+  };
+}
+```
+* see below[italic]
+
+## 概要
+`impls-for`は、Senderアルゴリズム動作仕様定義で用いられる説明専用のクラステンプレートである。
+
+説明専用のクラス`default-impls`にてSenderアルゴリズム共通動作を記述し、[Senderタグ](tag_of_t.md.nolink)`Tag`を用いて`impls-for&amp;lt;Tag&amp;gt;`特殊化を定義することでSenderアルゴリズム固有動作を静的にオーバーライドする。
+
+
+## 説明専用クラス `default-impls`
+
+### `get-attrs`メンバ
+`get-attrs`は、[`basic-sender`](basic-sender.md)実装におけるSender[属性](../queryable.md)取得のカスタマイゼーションポイントとして機能する。
+
+`default-impls::get-attrs`メンバは、下記ラムダ式と等価な関数呼び出し可能なオブジェクトで初期化される。
+
+- 子[Sender](sender.md)`child`が1個の場合は、その子Senderの[属性](../queryable.md)を転送する。
+- それ以外の場合は、空の属性[`env&amp;lt;&amp;gt;()`](env.md)を返す。
+
+```cpp
+[](const auto&amp;amp;, const auto&amp;amp;... child) noexcept -&amp;gt; decltype(auto) {
+  if constexpr (sizeof...(child) == 1)
+    return (FWD-ENV(get_env(child)), ...);
+  else
+    return env&amp;lt;&amp;gt;();
+}
+```
+* get_env[link get_env.md]
+* env&amp;lt;&amp;gt;[link env.md]
+
+### `get-env`メンバ
+`get-env`は、[`basic-receiver`](basic-receiver.md.nolink)実装におけるReceiver[環境](../queryable.md)取得のカスタマイゼーションポイントとして機能する。
+
+`default-impls::get-env`メンバは、下記ラムダ式と等価な関数呼び出し可能なオブジェクトで初期化される。
+
+- 接続先[Receiver](receiver.md)`rcvr`の[環境](../queryable.md)を転送する。
+
+```cpp
+[](auto, auto&amp;amp;, const auto&amp;amp; rcvr) noexcept -&amp;gt; decltype(auto) {
+  return FWD-ENV(get_env(rcvr));
+}
+```
+* get_env[link get_env.md]
+
+### `get-state`メンバ
+`get-state`は、[`basic-operation`](basic-operation.md)実装がメンバ変数として保持する状態(state)取得のカスタマイゼーションポイントとして機能する。
+
+`default-impls::get-state`メンバは、下記ラムダ式と等価な関数呼び出し可能なオブジェクトで初期化される。
+
+- [Sender](sender.md)`sndr`オブジェクト構築時の引数を返す。
+
+```cpp
+[]&amp;lt;class Sndr, class Rcvr&amp;gt;(Sndr&amp;amp;&amp;amp; sndr, Rcvr&amp;amp; rcvr) noexcept -&amp;gt; decltype(auto) {
+  auto&amp;amp; [_, data, ...child] = sndr;
+  return std::forward_like&amp;lt;Sndr&amp;gt;(data);
+}
+```
+
+### `start`メンバ
+`start`は、[`basic-operation`](basic-operation.md)実装における[開始(start)](start.md)のカスタマイゼーションポイントとして機能する。
+
+`default-impls::start`メンバは、下記ラムダ式と等価な関数呼び出し可能なオブジェクトで初期化される。
+
+- 子[Operation State](operation_state.md)`ops`を逐次的に[開始(start)](start.md)する。
+
+```cpp
+[](auto&amp;amp;, auto&amp;amp;, auto&amp;amp;... ops) noexcept -&amp;gt; void {
+  (execution::start(ops), ...);
+}
+```
+* execution::start[link start.md]
+
+### `complete`メンバ
+`complete`は、[`basic-receiver`](basic-receiver.md.nolink)実装における各種完了操作のカスタマイゼーションポイントとして機能する。
+
+`default-impls::complete`メンバは、下記ラムダ式と等価な関数呼び出し可能なオブジェクトで初期化される。
+
+- 完了タグ`Tag`と引数リスト`args`を用いて、接続先[Receiver](receiver.md)`rcvr`の完了操作を呼び出す。
+    - `Tag`型は[`set_value_t`](set_value.md), [`set_error_t`](set_error.md), [`set_stopped_t`](set_stopped.md)のいずれか。
+- 第1引数`Index`は、`default-impls`実装では利用しない。
+    - 複数の子Senderを保持するSenderアルゴリズムの`impls-for`オーバーライド実装で利用する（例 : [`when_all`](when_all.md.nolink)）。
+
+```cpp
+[]&amp;lt;class Index, class Rcvr, class Tag, class... Args&amp;gt;(
+  Index, auto&amp;amp; state, Rcvr&amp;amp; rcvr, Tag, Args&amp;amp;&amp;amp;... args) noexcept
+    -&amp;gt; void requires callable&amp;lt;Tag, Rcvr, Args...&amp;gt; {
+  static_assert(Index::value == 0);
+  Tag()(std::move(rcvr), std::forward&amp;lt;Args&amp;gt;(args)...);
+}
+```
+
+
+## バージョン
+### 言語
+- C++26
+
+
+## 関連項目
+- [`basic-sender`](basic-sender.md)
+- [`basic-receiver`](basic-receiver.md.nolink)
+- [`basic-operation`](basic-operation.md)
+
+
+## 参照
+- [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>just -- execution: just (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/just.html"/>
      <id>885f6ee7a8b2f4257a21a51e4e97f3adaf46ab1d:reference/execution/execution/just.md</id>
      <updated>2025-05-02T17:14:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/just.md b/reference/execution/execution/just.md
new file mode 100644
index 000000000..535828449
--- /dev/null
+++ b/reference/execution/execution/just.md
@@ -0,0 +1,92 @@
+# just
+* execution[meta header]
+* cpo[meta id-type]
+* std::execution[meta namespace]
+* cpp26[meta cpp]
+
+```cpp
+namespace std::execution {
+  struct just_t { unspecified };
+  inline constexpr just_t just{};
+}
+```
+* unspecified[italic]
+
+## 概要
+`just`は、非同期操作の[開始(start)](start.md)で[値完了関数](set_value.md)を呼び出すSenderファクトリである。
+
+
+## 効果
+- 呼び出し式`just(ts...)`は、`(`[`movable-value`](movable-value.md.nolink)`&amp;lt;Ts&amp;gt; &amp;amp;&amp;amp;...) == false`のとき不適格となる。
+- そうでなければ、式[`make-sender`](make-sender.md)`(just,` [`product-type`](product-type.md.nolink)`{ts...})`と等価。
+
+
+### Senderタグ `just`
+Senderアルゴリズム動作説明用のクラステンプレート`impls-for`に対して、下記の特殊化が定義される。
+
+```cpp
+namespace std::execution {
+  template&amp;lt;&amp;gt;
+  struct impls-for&amp;lt;decayed-typeof&amp;lt;just&amp;gt;&amp;gt; : default-impls {
+    static constexpr auto start =
+      [](auto&amp;amp; state, auto&amp;amp; rcvr) noexcept -&amp;gt; void {
+        auto&amp;amp; [...ts] = state;
+        set_value(std::move(rcvr), std::move(ts)...);
+      };
+  };
+}
+```
+* impls-for[link impls-for.md]
+* default-impls[link impls-for.md]
+* set_value[link set_value.md]
+
+
+## 例
+```cpp example
+#include &amp;lt;print&amp;gt;
+#include &amp;lt;execution&amp;gt;
+namespace ex = std::execution;
+
+int main()
+{
+  // 値(123,&amp;#39;X&amp;#39;)の送信結果は tuple&amp;lt;int,char&amp;gt; 型で受け取る
+  ex::sender auto snd1 = ex::just(123, &amp;#39;X&amp;#39;);
+  std::tuple&amp;lt;int, char&amp;gt; result1 = std::this_thread::sync_wait(snd1).value();
+  std::println(&amp;#34;result1={}&amp;#34;, result1);
+
+  // 空値の送信結果は tuple&amp;lt;&amp;gt; 型で受け取る
+  ex::sender auto snd2 = ex::just();
+  std::tuple&amp;lt;&amp;gt; result2 = std::this_thread::sync_wait(snd2).value();
+  std::println(&amp;#34;result2={}&amp;#34;, result2);
+}
+```
+* ex::just[color ff0000]
+* ex::sender[link sender.md]
+* std::this_thread::sync_wait[link ../this_thread/sync_wait.md]
+* value()[link /reference/optional/optional/value.md]
+
+### 出力
+```
+result1=(123, &amp;#39;X&amp;#39;)
+result2=()
+```
+
+
+## バージョン
+### 言語
+- C++26
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
+
+
+## 関連項目
+- [`execution::just_error`](just_error.md.nolink)
+- [`execution::just_stopped`](just_stopped.md.nolink)
+
+
+## 参照
+- [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>make-sender -- execution: just (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/make-sender.html"/>
      <id>885f6ee7a8b2f4257a21a51e4e97f3adaf46ab1d:reference/execution/execution/make-sender.md</id>
      <updated>2025-05-02T17:14:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/make-sender.md b/reference/execution/execution/make-sender.md
new file mode 100644
index 000000000..b35e29823
--- /dev/null
+++ b/reference/execution/execution/make-sender.md
@@ -0,0 +1,47 @@
+# make-sender
+* execution[meta header]
+* function template[meta id-type]
+* std::execution[meta namespace]
+* cpp26[meta cpp]
+
+```cpp
+template&amp;lt;class Tag, class Data = see below, class... Child&amp;gt;
+constexpr auto make-sender(Tag tag, Data&amp;amp;&amp;amp; data, Child&amp;amp;&amp;amp;... child);
+```
+* see below[italic]
+
+## 概要
+`make-sender`は、Senderアルゴリズム動作仕様定義で用いられる説明専用の関数テンプレートである。
+
+[`sender`](sender.md)のモデルである説明専用クラステンプレート[`basic-sender`](basic-sender.md)のインスタンスを生成する。
+
+- `Tag` : [Senderタグ](tag_of_t.md.nolink)（例：[`just`](just.md), [`then`](then.md.nolink)）
+- `Data` : Senderアルゴリズムに指定された追加の引数。複数個の引数は[`product-type`](product-type.md.nolink)型を用いて単一値として保持する。
+- `Child` : 子Senderのリスト。Senderファクトリでは0個、Senderアダプタでは通常1個の子Senderを保持する。
+
+
+## 適格要件
+- [`semiregular`](/reference/concepts/semiregular.md)`&amp;lt;Tag&amp;gt; == true`
+- [`movable-value`](movable-value.md.nolink)`&amp;lt;Data&amp;gt; == true`
+- `(`[`sender`](sender.md)`&amp;lt;Child&amp;gt; &amp;amp;&amp;amp; ...) == true`
+
+
+## 戻り値
+転送された各引数により直接非リスト初期化された型[`basic-sender`](basic-sender.md)`&amp;lt;Tag,` [`decay_t`](/reference/type_traits/decay.md)`&amp;lt;Data&amp;gt;,` [`decay_t`](/reference/type_traits/decay.md)`&amp;lt;Child&amp;gt;...&amp;gt;`のprvalueを返す。
+
+
+## 備考
+テンプレートパラメータ`Data`のデフォルト引数は、[`semiregular`](/reference/concepts/semiregular.md)のモデルである空のトリビアルにコピー可能な未規定なクラス型。
+
+
+## バージョン
+### 言語
+- C++26
+
+
+## 関連項目
+- [`basic-sender`](basic-sender.md)
+
+
+## 参照
+- [P2300R10 `std::execution`](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p2300r10.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operation_state -- execution: just (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/operation_state.html"/>
      <id>885f6ee7a8b2f4257a21a51e4e97f3adaf46ab1d:reference/execution/execution/operation_state.md</id>
      <updated>2025-05-02T17:14:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/operation_state.md b/reference/execution/execution/operation_state.md
index dc6405300..57b51859e 100644
--- a/reference/execution/execution/operation_state.md
+++ b/reference/execution/execution/operation_state.md
@@ -63,7 +63,7 @@ int main()
 * ex::operation_state[color ff0000]
 * ex::receiver_t[link receiver.md]
 * ex::sender[link sender.md]
-* ex::just[link just.md.nolink]
+* ex::just[link just.md]
 * ex::connect[link connect.md]
 * ex::start[link start.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sender -- execution: just (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/sender.html"/>
      <id>885f6ee7a8b2f4257a21a51e4e97f3adaf46ab1d:reference/execution/execution/sender.md</id>
      <updated>2025-05-02T17:14:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/sender.md b/reference/execution/execution/sender.md
index a7aa146f5..5f6e98eac 100644
--- a/reference/execution/execution/sender.md
+++ b/reference/execution/execution/sender.md
@@ -78,7 +78,7 @@ int main()
 }
 ```
 * ex::sender[color ff0000]
-* ex::just[link just.md.nolink]
+* ex::just[link just.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sender_in -- execution: just (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/sender_in.html"/>
      <id>885f6ee7a8b2f4257a21a51e4e97f3adaf46ab1d:reference/execution/execution/sender_in.md</id>
      <updated>2025-05-02T17:14:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/sender_in.md b/reference/execution/execution/sender_in.md
index bb725c838..e587de234 100644
--- a/reference/execution/execution/sender_in.md
+++ b/reference/execution/execution/sender_in.md
@@ -47,7 +47,7 @@ int main()
 ```
 * ex::sender_in[color ff0000]
 * ex::sender[link sender.md]
-* ex::just[link just.md.nolink]
+* ex::just[link just.md]
 * ex::env&amp;lt;&amp;gt;[link env.md]
 
 ### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sender_to -- execution: just (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/sender_to.html"/>
      <id>885f6ee7a8b2f4257a21a51e4e97f3adaf46ab1d:reference/execution/execution/sender_to.md</id>
      <updated>2025-05-02T17:14:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/sender_to.md b/reference/execution/execution/sender_to.md
index edd3efacc..332587bf7 100644
--- a/reference/execution/execution/sender_to.md
+++ b/reference/execution/execution/sender_to.md
@@ -58,7 +58,7 @@ int main()
 * ex::sender_to[color ff0000]
 * ex::receiver_t[link receiver.md]
 * ex::sender[link sender.md]
-* ex::just[link just.md.nolink]
+* ex::just[link just.md]
 * ex::operation_state[link operation_state.md]
 * ex::connect[link connect.md]
 * ex::start[link start.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sends_stopped -- execution: just (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/sends_stopped.html"/>
      <id>885f6ee7a8b2f4257a21a51e4e97f3adaf46ab1d:reference/execution/execution/sends_stopped.md</id>
      <updated>2025-05-02T17:14:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/sends_stopped.md b/reference/execution/execution/sends_stopped.md
index 8efd74d33..d4cbda9e0 100644
--- a/reference/execution/execution/sends_stopped.md
+++ b/reference/execution/execution/sends_stopped.md
@@ -43,7 +43,7 @@ int main()
 ```
 * ex::sends_stopped[color ff0000]
 * ex::sender[link sender.md]
-* ex::just[link just.md.nolink]
+* ex::just[link just.md]
 * ex::just_stopped[link just_stopped.md.nolink]
 
 ### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>start -- execution: just (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/start.html"/>
      <id>885f6ee7a8b2f4257a21a51e4e97f3adaf46ab1d:reference/execution/execution/start.md</id>
      <updated>2025-05-02T17:14:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/start.md b/reference/execution/execution/start.md
index 90fc7ed10..ea0c3623e 100644
--- a/reference/execution/execution/start.md
+++ b/reference/execution/execution/start.md
@@ -62,7 +62,7 @@ int main()
 * ex::start[color ff0000]
 * ex::receiver_t[link receiver.md]
 * ex::sender[link sender.md]
-* ex::just[link just.md.nolink]
+* ex::just[link just.md]
 * ex::operation_state[link operation_state.md]
 * ex::connect[link connect.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>value_types_of_t -- execution: just (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/value_types_of_t.html"/>
      <id>885f6ee7a8b2f4257a21a51e4e97f3adaf46ab1d:reference/execution/execution/value_types_of_t.md</id>
      <updated>2025-05-02T17:14:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/value_types_of_t.md b/reference/execution/execution/value_types_of_t.md
index 1a5d74344..48bebc208 100644
--- a/reference/execution/execution/value_types_of_t.md
+++ b/reference/execution/execution/value_types_of_t.md
@@ -54,7 +54,7 @@ int main()
 ```
 * ex::value_types_of_t[color ff0000]
 * ex::sender[link sender.md]
-* ex::just[link just.md.nolink]
+* ex::just[link just.md]
 * ex::just_error[link just_error.md.nolink]
 
 ### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>get_stop_token -- execution: just (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/get_stop_token.html"/>
      <id>885f6ee7a8b2f4257a21a51e4e97f3adaf46ab1d:reference/execution/get_stop_token.md</id>
      <updated>2025-05-02T17:14:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/get_stop_token.md b/reference/execution/get_stop_token.md
index d83666b85..feb7b4778 100644
--- a/reference/execution/get_stop_token.md
+++ b/reference/execution/get_stop_token.md
@@ -51,7 +51,7 @@ int main()
 ```
 * std::get_stop_token[color ff0000]
 * ex::sender[link execution/sender.md]
-* ex::just[link execution/just.md.nolink]
+* ex::just[link execution/just.md]
 * ex::get_env[link execution/get_env.md]
 * std::never_stop_token[link /reference/stop_token/never_stop_token.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sync_wait -- execution: just (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/this_thread/sync_wait.html"/>
      <id>885f6ee7a8b2f4257a21a51e4e97f3adaf46ab1d:reference/execution/this_thread/sync_wait.md</id>
      <updated>2025-05-02T17:14:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/this_thread/sync_wait.md b/reference/execution/this_thread/sync_wait.md
index a6625caf8..98f7dc66c 100644
--- a/reference/execution/this_thread/sync_wait.md
+++ b/reference/execution/this_thread/sync_wait.md
@@ -118,7 +118,7 @@ int main()
 ```
 * std::this_thread::sync_wait[color ff0000]
 * ex::sender[link ../execution/sender.md]
-* ex::just[link ../execution/just.md.nolink]
+* ex::just[link ../execution/just.md]
 * value()[link /reference/optional/optional/value.md]
 
 ### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sync_wait_with_variant -- execution: just (#1384)</title>
      <link href="https://cpprefjp.github.io/reference/execution/this_thread/sync_wait_with_variant.html"/>
      <id>885f6ee7a8b2f4257a21a51e4e97f3adaf46ab1d:reference/execution/this_thread/sync_wait_with_variant.md</id>
      <updated>2025-05-02T17:14:47+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/this_thread/sync_wait_with_variant.md b/reference/execution/this_thread/sync_wait_with_variant.md
index a6e227308..711d8fca6 100644
--- a/reference/execution/this_thread/sync_wait_with_variant.md
+++ b/reference/execution/this_thread/sync_wait_with_variant.md
@@ -109,7 +109,7 @@ int main()
 ```
 * std::this_thread::sync_wait_with_variant[color ff0000]
 * ex::sender[link ../execution/sender.md]
-* ex::just[link ../execution/just.md.nolink]
+* ex::just[link ../execution/just.md]
 * get&amp;lt;0&amp;gt;[link /reference/variant/variant/get.md]
 * value()[link /reference/optional/optional/value.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>kill_dependency -- GLOBAL_QUALIFY_LIST: std::memory_order_consume削除 (#1420)</title>
      <link href="https://cpprefjp.github.io/reference/atomic/kill_dependency.html"/>
      <id>9ea31e83a71896f726b6ff594a35d37f76277847:reference/atomic/kill_dependency.md</id>
      <updated>2025-05-02T00:59:23+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/atomic/kill_dependency.md b/reference/atomic/kill_dependency.md
index f7ff021e3..0f41534d7 100644
--- a/reference/atomic/kill_dependency.md
+++ b/reference/atomic/kill_dependency.md
@@ -88,6 +88,7 @@ int main()
 * std::kill_dependency[color ff0000]
 * a.store[link atomic/store.md]
 * a.load[link atomic/load.md]
+* std::memory_order_consume[link /reference/atomic/memory_order.md]
 
 
 ### 出力例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ポインタから`bool`への変換を縮小変換とする [P1957R2] -- GLOBAL_QUALIFY_LIST: std::variant追加</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/converting_from_pointer_to_bool_should_be_considered_narrowing.html"/>
      <id>0e7abe950b0cff66280b05cf6fa06b1bdb1c968d:lang/cpp20/converting_from_pointer_to_bool_should_be_considered_narrowing.md</id>
      <updated>2025-05-02T00:54:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/converting_from_pointer_to_bool_should_be_considered_narrowing.md b/lang/cpp20/converting_from_pointer_to_bool_should_be_considered_narrowing.md
index 486be44f1..0a40c7441 100644
--- a/lang/cpp20/converting_from_pointer_to_bool_should_be_considered_narrowing.md
+++ b/lang/cpp20/converting_from_pointer_to_bool_should_be_considered_narrowing.md
@@ -34,8 +34,6 @@ C++17で導入された`std::variant`には当初、`const char*`から`bool`へ
 ```cpp
 std::variant&amp;lt;std::string, bool&amp;gt; x = &amp;#34;abc&amp;#34;;  // boolを保持して構築されてしまう
 ```
-* variant[link /reference/variant/variant.md]
-* string[link /reference/string/basic_string.md]
 
 この他にも構築・代入時に縮小変換が行われてしまう事から同様の問題があり、それはC++20において[P0608R3](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0608r3.html)によって解決された。そこでは、構築・代入時の縮小変換を禁止するとともに、`bool`に変換可能な型を`bool`に変換することを禁止することで問題に対処していた。
 
@@ -46,7 +44,6 @@ std::bitset&amp;lt;4&amp;gt; b(&amp;#34;0101&amp;#34;);
 std::variant&amp;lt;bool, int&amp;gt; v = b[1]; // intを保持して構築されてしまう
 ```
 * bitset[link /reference/bitset/bitset.md]
-* variant[link /reference/variant/variant.md]
 
 `std::bitset`の非`const`な[`operator[]`](/reference/bitset/bitset/op_at.md)は`bool`型へ暗黙変換可能なプロキシオブジェクトを返す。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>in_place_index_t -- GLOBAL_QUALIFY_LIST: std::variant追加</title>
      <link href="https://cpprefjp.github.io/reference/utility/in_place_index_t.html"/>
      <id>0e7abe950b0cff66280b05cf6fa06b1bdb1c968d:reference/utility/in_place_index_t.md</id>
      <updated>2025-05-02T00:54:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/utility/in_place_index_t.md b/reference/utility/in_place_index_t.md
index 450d23a68..24c61fae2 100644
--- a/reference/utility/in_place_index_t.md
+++ b/reference/utility/in_place_index_t.md
@@ -42,7 +42,6 @@ int main()
 }
 ```
 * std::in_place_index[color ff0000]
-* std::variant[link /reference/variant/variant.md]
 * std::visit[link /reference/variant/visit.md]
 
 ### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>run -- GLOBAL_QUALIFY_LIST: std::jthread追加</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/run_loop/run.html"/>
      <id>b7bf5a18276675dc1b6a14e6c7dc2db3ad0c7a12:reference/execution/execution/run_loop/run.md</id>
      <updated>2025-05-02T00:51:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/run_loop/run.md b/reference/execution/execution/run_loop/run.md
index 3c7970871..85f406acf 100644
--- a/reference/execution/execution/run_loop/run.md
+++ b/reference/execution/execution/run_loop/run.md
@@ -90,7 +90,6 @@ int main()
 * run()[color ff0000]
 * ex::run_loop[link ../run_loop.md]
 * finish()[link finish.md]
-* std::jthread[link /reference/thread/jthread.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>schedule -- GLOBAL_QUALIFY_LIST: std::jthread追加</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/schedule.html"/>
      <id>b7bf5a18276675dc1b6a14e6c7dc2db3ad0c7a12:reference/execution/execution/schedule.md</id>
      <updated>2025-05-02T00:51:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/schedule.md b/reference/execution/execution/schedule.md
index f112291e5..778b9aa8a 100644
--- a/reference/execution/execution/schedule.md
+++ b/reference/execution/execution/schedule.md
@@ -69,7 +69,6 @@ int main()
 * run()[link run_loop/run.md]
 * finish()[link run_loop/finish.md]
 * std::move[link /reference/utility/move.md]
-* std::jthread[link /reference/thread/jthread.md]
 * std::this_thread::get_id()[link /reference/thread/this_thread/get_id.md]
 
 ### 出力例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>rcu_obj_base -- GLOBAL_QUALIFY_LIST: std::jthread追加</title>
      <link href="https://cpprefjp.github.io/reference/rcu/rcu_obj_base.html"/>
      <id>b7bf5a18276675dc1b6a14e6c7dc2db3ad0c7a12:reference/rcu/rcu_obj_base.md</id>
      <updated>2025-05-02T00:51:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/rcu/rcu_obj_base.md b/reference/rcu/rcu_obj_base.md
index 3a36d3ebc..cd2d1639d 100644
--- a/reference/rcu/rcu_obj_base.md
+++ b/reference/rcu/rcu_obj_base.md
@@ -87,7 +87,6 @@ int main()
 * std::rcu_default_domain[link rcu_default_domain.md]
 * retire()[link rcu_obj_base/retire.md]
 * std::scoped_lock[link /reference/mutex/scoped_lock.md]
-* std::jthread[link /reference/thread/jthread.md]
 * exchange[link /reference/atomic/atomic/exchange.md]
 * store[link /reference/atomic/atomic/store.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>rcu_retire -- GLOBAL_QUALIFY_LIST: std::jthread追加</title>
      <link href="https://cpprefjp.github.io/reference/rcu/rcu_retire.html"/>
      <id>b7bf5a18276675dc1b6a14e6c7dc2db3ad0c7a12:reference/rcu/rcu_retire.md</id>
      <updated>2025-05-02T00:51:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/rcu/rcu_retire.md b/reference/rcu/rcu_retire.md
index d4d63c374..80aa742f6 100644
--- a/reference/rcu/rcu_retire.md
+++ b/reference/rcu/rcu_retire.md
@@ -97,7 +97,6 @@ int main()
 * std::rcu_retire[color ff0000]
 * std::rcu_default_domain[link rcu_default_domain.md]
 * std::scoped_lock[link /reference/mutex/scoped_lock.md]
-* std::jthread[link /reference/thread/jthread.md]
 * exchange[link /reference/atomic/atomic/exchange.md]
 * store[link /reference/atomic/atomic/store.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>rcu_synchronize -- GLOBAL_QUALIFY_LIST: std::jthread追加</title>
      <link href="https://cpprefjp.github.io/reference/rcu/rcu_synchronize.html"/>
      <id>b7bf5a18276675dc1b6a14e6c7dc2db3ad0c7a12:reference/rcu/rcu_synchronize.md</id>
      <updated>2025-05-02T00:51:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/rcu/rcu_synchronize.md b/reference/rcu/rcu_synchronize.md
index 713b6ab02..cbb1cf2df 100644
--- a/reference/rcu/rcu_synchronize.md
+++ b/reference/rcu/rcu_synchronize.md
@@ -88,7 +88,6 @@ int main()
 * std::rcu_synchronize[color ff0000]
 * std::rcu_default_domain[link rcu_default_domain.md]
 * std::scoped_lock[link /reference/mutex/scoped_lock.md]
-* std::jthread[link /reference/thread/jthread.md]
 * exchange[link /reference/atomic/atomic/exchange.md]
 * store[link /reference/atomic/atomic/store.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
</feed>
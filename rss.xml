<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2025-07-03T09:54:32.487612</updated>
  <id>c91373ee-e073-4d83-a5c6-097445586cdd</id>

  
    <entry>
      <title>operator= -- 代入演算子のタイトルを operator= で統一</title>
      <link href="https://cpprefjp.github.io/reference/coroutine/coroutine_handle/op_assign.html"/>
      <id>a8797d0960c754d3ac0d80fb1fa376482cf98cc9:reference/coroutine/coroutine_handle/op_assign.md</id>
      <updated>2025-07-03T18:48:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/coroutine/coroutine_handle/op_assign.md b/reference/coroutine/coroutine_handle/op_assign.md
index 01e0354ed..d43b55785 100644
--- a/reference/coroutine/coroutine_handle/op_assign.md
+++ b/reference/coroutine/coroutine_handle/op_assign.md
@@ -1,4 +1,4 @@
-# 代入演算子
+# operator=
 * coroutine[meta header]
 * std[meta namespace]
 * coroutine_handle[meta class]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator= -- 代入演算子のタイトルを operator= で統一</title>
      <link href="https://cpprefjp.github.io/reference/locale/wstring_convert/op_assign.html"/>
      <id>a8797d0960c754d3ac0d80fb1fa376482cf98cc9:reference/locale/wstring_convert/op_assign.md</id>
      <updated>2025-07-03T18:48:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/locale/wstring_convert/op_assign.md b/reference/locale/wstring_convert/op_assign.md
index aca1466a4..f5aa4bcb9 100644
--- a/reference/locale/wstring_convert/op_assign.md
+++ b/reference/locale/wstring_convert/op_assign.md
@@ -1,4 +1,4 @@
-# 代入演算子
+# operator=
 * locale[meta header]
 * std[meta namespace]
 * wstring_convert[meta class]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>atomic_wait_explicit -- タイトルと一致しないコードを修正</title>
      <link href="https://cpprefjp.github.io/reference/atomic/atomic_wait_explicit.html"/>
      <id>e5793966a34a3e119c8f6abfd4e3794c2d3484af:reference/atomic/atomic_wait_explicit.md</id>
      <updated>2025-07-03T18:48:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/atomic/atomic_wait_explicit.md b/reference/atomic/atomic_wait_explicit.md
index 1c5f02754..12f391f6f 100644
--- a/reference/atomic/atomic_wait_explicit.md
+++ b/reference/atomic/atomic_wait_explicit.md
@@ -8,18 +8,18 @@
 namespace std {
   template&amp;lt;class T&amp;gt;
   void
-    atomic_wait(const volatile atomic&amp;lt;T&amp;gt;* object,
+    atomic_wait_explicit(const volatile atomic&amp;lt;T&amp;gt;* object,
                 typename atomic&amp;lt;T&amp;gt;::value_type old,
                 memory_order order);                 // (1) C++20
 
   template&amp;lt;class T&amp;gt;
   void
-    atomic_wait(const atomic&amp;lt;T&amp;gt;* object,
+    atomic_wait_explicit(const atomic&amp;lt;T&amp;gt;* object,
                 typename atomic&amp;lt;T&amp;gt;::value_type old,
                 memory_order order);                 // (2) C++20
   template&amp;lt;class T&amp;gt;
   constexpr void
-    atomic_wait(const atomic&amp;lt;T&amp;gt;* object,
+    atomic_wait_explicit(const atomic&amp;lt;T&amp;gt;* object,
                 typename atomic&amp;lt;T&amp;gt;::value_type old,
                 memory_order order);                 // (2) C++26
 }
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator-&gt; -- タイトルと一致しないコードを修正</title>
      <link href="https://cpprefjp.github.io/reference/filesystem/directory_iterator/op_arrow.html"/>
      <id>e5793966a34a3e119c8f6abfd4e3794c2d3484af:reference/filesystem/directory_iterator/op_arrow.md</id>
      <updated>2025-07-03T18:48:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/filesystem/directory_iterator/op_arrow.md b/reference/filesystem/directory_iterator/op_arrow.md
index 52b6dc1ac..d40563486 100644
--- a/reference/filesystem/directory_iterator/op_arrow.md
+++ b/reference/filesystem/directory_iterator/op_arrow.md
@@ -6,7 +6,7 @@
 * cpp17[meta cpp]
 
 ```cpp
-const directory_entry&amp;amp; operator*() const;
+const directory_entry&amp;amp; operator-&amp;gt;() const;
 ```
 * directory_entry[link /reference/filesystem/directory_entry.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator-&gt; -- タイトルと一致しないコードを修正</title>
      <link href="https://cpprefjp.github.io/reference/filesystem/recursive_directory_iterator/op_arrow.html"/>
      <id>e5793966a34a3e119c8f6abfd4e3794c2d3484af:reference/filesystem/recursive_directory_iterator/op_arrow.md</id>
      <updated>2025-07-03T18:48:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/filesystem/recursive_directory_iterator/op_arrow.md b/reference/filesystem/recursive_directory_iterator/op_arrow.md
index e223b0e08..0f704f0e0 100644
--- a/reference/filesystem/recursive_directory_iterator/op_arrow.md
+++ b/reference/filesystem/recursive_directory_iterator/op_arrow.md
@@ -6,7 +6,7 @@
 * cpp17[meta cpp]
 
 ```cpp
-const directory_entry&amp;amp; operator*() const;
+const directory_entry&amp;amp; operator-&amp;gt;() const;
 ```
 * directory_entry[link /reference/filesystem/directory_entry.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>no-throw-forward-iterator -- タイトルと一致しないコードを修正</title>
      <link href="https://cpprefjp.github.io/reference/memory/no-throw-forward-iterator.html"/>
      <id>e5793966a34a3e119c8f6abfd4e3794c2d3484af:reference/memory/no-throw-forward-iterator.md</id>
      <updated>2025-07-03T18:48:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/memory/no-throw-forward-iterator.md b/reference/memory/no-throw-forward-iterator.md
index 739574a00..5fd500873 100644
--- a/reference/memory/no-throw-forward-iterator.md
+++ b/reference/memory/no-throw-forward-iterator.md
@@ -7,7 +7,7 @@
 ```cpp
 namespace std {
   template &amp;lt;class I&amp;gt;
-  concept no-throw-input-iterator =
+  concept no-throw-forward-iterator =
     no-throw-input-iterator&amp;lt;I&amp;gt; &amp;amp;&amp;amp;
     forward_iterator&amp;lt;T&amp;gt; &amp;amp;&amp;amp;
     no-throw-sentinel&amp;lt;T, I&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>no-throw-forward-range -- タイトルと一致しないコードを修正</title>
      <link href="https://cpprefjp.github.io/reference/memory/no-throw-forward-range.html"/>
      <id>e5793966a34a3e119c8f6abfd4e3794c2d3484af:reference/memory/no-throw-forward-range.md</id>
      <updated>2025-07-03T18:48:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/memory/no-throw-forward-range.md b/reference/memory/no-throw-forward-range.md
index 97f2dc755..04649db41 100644
--- a/reference/memory/no-throw-forward-range.md
+++ b/reference/memory/no-throw-forward-range.md
@@ -7,7 +7,7 @@
 ```cpp
 namespace std {
   template &amp;lt;class R&amp;gt;
-  concept no-throw-input-range =
+  concept no-throw-forward-range =
     no-throw-input-range&amp;lt;R&amp;gt; &amp;amp;&amp;amp;
     no-throw-forward-iterator&amp;lt;iterator_t&amp;lt;R&amp;gt;&amp;gt;;
 }
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>move_iterator -- ファイル名を修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/move_iterator.html"/>
      <id>a47d09f68a07153c37e6e2dcd7cc55dd6e311c09:reference/iterator/move_iterator.md</id>
      <updated>2025-07-03T18:46:03+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/move_iterator.md b/reference/iterator/move_iterator.md
index 29b57543f..51940304b 100644
--- a/reference/iterator/move_iterator.md
+++ b/reference/iterator/move_iterator.md
@@ -45,7 +45,7 @@ namespace std {
 | 名前 | 説明 | 対応バージョン |
 |------------------------------------------------------|-------------|-------|
 | `iterator_type` | 元となるイテレータ型 `Iterator` | C++11 |
-| [`difference_type`](move_iterator/type-deferrence_type.md) | イテレータ間の差を表す数値型 | C++11 |
+| [`difference_type`](move_iterator/type-difference_type.md) | イテレータ間の差を表す数値型 | C++11 |
 | `pointer` | ポインタ型 `Iterator` | C++11 |
 | [`value_type`](move_iterator/type-value_type.md) | イテレータが指す値型 | C++11 |
 | [`iterator_category`](move_iterator/type-iterator_category.md) | イテレータの分類を表す型 | C++11 |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>difference_type -- ファイル名を修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/move_iterator/type-difference_type.html"/>
      <id>a47d09f68a07153c37e6e2dcd7cc55dd6e311c09:reference/iterator/move_iterator/type-difference_type.md</id>
      <updated>2025-07-03T18:46:03+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/move_iterator/type-difference_type.md b/reference/iterator/move_iterator/type-difference_type.md
new file mode 100644
index 000000000..5ff758cb5
--- /dev/null
+++ b/reference/iterator/move_iterator/type-difference_type.md
@@ -0,0 +1,22 @@
+# difference_type
+* iterator[meta header]
+* std[meta namespace]
+* move_iterator[meta class]
+* type-alias[meta id-type]
+* cpp11[meta cpp]
+
+```cpp
+using difference_type = iterator_traits&amp;lt;Iterator&amp;gt;::difference_type; // (1) C++11
+using difference_type = iter_difference_t&amp;lt;Iterator&amp;gt;;                // (1) C++20
+```
+
+## 概要
+イテレータの差を表す型。
+
+
+## バージョン
+### 言語
+- C++11
+
+## 参照
+- [P0896R4 The One Ranges Proposal (was Merging the Ranges TS)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0896r4.pdf)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>difference_type -- タイトルを修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/move_iterator/type-deferrence_type.html"/>
      <id>e408f41fdb26245e3edc72ec45590ca5ea217b6e:reference/iterator/move_iterator/type-deferrence_type.md</id>
      <updated>2025-07-03T18:44:28+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/move_iterator/type-deferrence_type.md b/reference/iterator/move_iterator/type-deferrence_type.md
index 1278ae8d0..5ff758cb5 100644
--- a/reference/iterator/move_iterator/type-deferrence_type.md
+++ b/reference/iterator/move_iterator/type-deferrence_type.md
@@ -1,4 +1,4 @@
-# deferrence_type
+# difference_type
 * iterator[meta header]
 * std[meta namespace]
 * move_iterator[meta class]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>vector_idx_abs_max -- タイトルを修正</title>
      <link href="https://cpprefjp.github.io/reference/linalg/vector_idx_abs_max.html"/>
      <id>e408f41fdb26245e3edc72ec45590ca5ea217b6e:reference/linalg/vector_idx_abs_max.md</id>
      <updated>2025-07-03T18:44:28+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/vector_idx_abs_max.md b/reference/linalg/vector_idx_abs_max.md
index 7c55f3855..5172a42fe 100644
--- a/reference/linalg/vector_idx_abs_max.md
+++ b/reference/linalg/vector_idx_abs_max.md
@@ -1,4 +1,4 @@
-# vector_idx_abs_sum
+# vector_idx_abs_max
 * [mathjax enable]
 * linalg[meta header]
 * function template[meta id-type]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_virtual_base_of -- タイトルを修正</title>
      <link href="https://cpprefjp.github.io/reference/type_traits/is_virtual_base_of.html"/>
      <id>e408f41fdb26245e3edc72ec45590ca5ea217b6e:reference/type_traits/is_virtual_base_of.md</id>
      <updated>2025-07-03T18:44:28+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/type_traits/is_virtual_base_of.md b/reference/type_traits/is_virtual_base_of.md
index 9f6fab227..4d20f58a1 100644
--- a/reference/type_traits/is_virtual_base_of.md
+++ b/reference/type_traits/is_virtual_base_of.md
@@ -1,4 +1,4 @@
-# is_virtualbase_of
+# is_virtual_base_of
 * type_traits[meta header]
 * std[meta namespace]
 * class template[meta id-type]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>max_align_t -- improve std::max_align_t</title>
      <link href="https://cpprefjp.github.io/reference/cstddef/max_align_t.html"/>
      <id>5dd8cd882070365995310e41ccc4e7efcc1733ba:reference/cstddef/max_align_t.md</id>
      <updated>2025-07-02T20:02:52+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstddef/max_align_t.md b/reference/cstddef/max_align_t.md
index 9e99e2078..0c04c6d60 100644
--- a/reference/cstddef/max_align_t.md
+++ b/reference/cstddef/max_align_t.md
@@ -11,7 +11,7 @@ namespace std {
 ```
 
 ## 概要
-`std::max_align_t`は、どのスカラー型よりも大きいアライメントを必要とする型である。
+`std::max_align_t`のアライメントサイズは、スカラー型の中の最も大きなアライメントサイズと同じかそれ以上である。
 
 この型は、C++11では[POD型](/reference/type_traits/is_pod.md)、C++20では[トリビアル型](/reference/type_traits/is_trivial.md)に分類される。
 
@@ -28,6 +28,8 @@ int main()
 {
   std::cout &amp;lt;&amp;lt; &amp;#34;sizeof(max_align_t): &amp;#34; &amp;lt;&amp;lt; sizeof(std::max_align_t) &amp;lt;&amp;lt; std::endl;
   std::cout &amp;lt;&amp;lt; &amp;#34;alignof(max_align_t): &amp;#34; &amp;lt;&amp;lt; alignof(std::max_align_t) &amp;lt;&amp;lt; std::endl;
+  static_assert(alignof(std::max_align_t) &amp;gt;= alignof(long long), &amp;#34;&amp;#34;);
+  static_assert(alignof(std::max_align_t) &amp;gt;= alignof(long double), &amp;#34;&amp;#34;);
 
   std::cout &amp;lt;&amp;lt; &amp;#34;is_object&amp;lt;max_align_t&amp;gt;: &amp;#34; &amp;lt;&amp;lt; std::is_object&amp;lt;std::max_align_t&amp;gt;::value &amp;lt;&amp;lt; std::endl;
   std::cout &amp;lt;&amp;lt; &amp;#34;is_scalar&amp;lt;max_align_t&amp;gt;: &amp;#34; &amp;lt;&amp;lt; std::is_scalar&amp;lt;std::max_align_t&amp;gt;::value &amp;lt;&amp;lt; std::endl;
@@ -45,7 +47,7 @@ int main()
 * std::is_class[link /reference/type_traits/is_class.md]
 * std::is_pod[link /reference/type_traits/is_pod.md]
 
-### 出力
+### 出力例
 ```
 sizeof(max_align_t): 24
 alignof(max_align_t): 8
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
</feed>
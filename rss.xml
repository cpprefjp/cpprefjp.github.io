<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2025-10-21T07:50:02.177503</updated>
  <id>68f6d521-e51b-4d1b-aa19-5ba65533644c</id>

  
    <entry>
      <title>count -- いくつかのコード例の出力を修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_count.html"/>
      <id>d707563ff7798e050aa616dc843d19c57d956a76:reference/algorithm/ranges_count.md</id>
      <updated>2025-10-21T16:45:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_count.md b/reference/algorithm/ranges_count.md
index 4cea7f80f..58a13d5e8 100644
--- a/reference/algorithm/ranges_count.md
+++ b/reference/algorithm/ranges_count.md
@@ -166,7 +166,7 @@ int main() {
 #### 出力
 ```
 count of label==&amp;#34;foo&amp;#34;: 2
-count of id==1: 2
+count of id==1: 1
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>basic_format_string -- いくつかのコード例の出力を修正</title>
      <link href="https://cpprefjp.github.io/reference/format/basic_format_string.html"/>
      <id>d707563ff7798e050aa616dc843d19c57d956a76:reference/format/basic_format_string.md</id>
      <updated>2025-10-21T16:45:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/format/basic_format_string.md b/reference/format/basic_format_string.md
index d6a534940..7cb8ac258 100644
--- a/reference/format/basic_format_string.md
+++ b/reference/format/basic_format_string.md
@@ -96,7 +96,7 @@ int main()
 
 ### 出力
 ```
-2023-02-06 10:46:53: Hello 42 World
+2023-02-06 10:46:53 JST: Hello 42 World
 ```
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>format -- いくつかのコード例の出力を修正</title>
      <link href="https://cpprefjp.github.io/reference/format/format.html"/>
      <id>d707563ff7798e050aa616dc843d19c57d956a76:reference/format/format.md</id>
      <updated>2025-10-21T16:45:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/format/format.md b/reference/format/format.md
index c3801f9ab..06f14bead 100644
--- a/reference/format/format.md
+++ b/reference/format/format.md
@@ -479,7 +479,7 @@ int main() {
 #### 出力
 ```
 0. [1, 2, 3]
-1. [&amp;#34;abc&amp;#34;, &amp;#34;bbb&amp;#34;, &amp;#34;ccc&amp;#34;]
+1. [&amp;#34;aaa&amp;#34;, &amp;#34;bbb&amp;#34;, &amp;#34;ccc&amp;#34;]
 2. {1: &amp;#34;aaa&amp;#34;, 2: &amp;#34;bbb&amp;#34;}
 3. {1, 2, 3}
 4. [1, 2, 3, 4]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>reference_wrapper -- いくつかのコード例の出力を修正</title>
      <link href="https://cpprefjp.github.io/reference/functional/reference_wrapper.html"/>
      <id>d707563ff7798e050aa616dc843d19c57d956a76:reference/functional/reference_wrapper.md</id>
      <updated>2025-10-21T16:45:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/functional/reference_wrapper.md b/reference/functional/reference_wrapper.md
index 3ee9bfab0..8a6811f0e 100644
--- a/reference/functional/reference_wrapper.md
+++ b/reference/functional/reference_wrapper.md
@@ -132,7 +132,6 @@ my_struct&amp;amp; get_my_struct()
 ### 出力
 
 ```
-0
 ```
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>推論補助 -- いくつかのコード例の出力を修正</title>
      <link href="https://cpprefjp.github.io/reference/functional/reference_wrapper/op_deduction_guide.html"/>
      <id>d707563ff7798e050aa616dc843d19c57d956a76:reference/functional/reference_wrapper/op_deduction_guide.md</id>
      <updated>2025-10-21T16:45:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/functional/reference_wrapper/op_deduction_guide.md b/reference/functional/reference_wrapper/op_deduction_guide.md
index 65d040c3b..20bd44fde 100644
--- a/reference/functional/reference_wrapper/op_deduction_guide.md
+++ b/reference/functional/reference_wrapper/op_deduction_guide.md
@@ -34,7 +34,7 @@ int main()
 
 ### 出力
 ```
-４
+4
 ```
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>end (非メンバ関数) -- いくつかのコード例の出力を修正</title>
      <link href="https://cpprefjp.github.io/reference/initializer_list/initializer_list/end_free.html"/>
      <id>d707563ff7798e050aa616dc843d19c57d956a76:reference/initializer_list/initializer_list/end_free.md</id>
      <updated>2025-10-21T16:45:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/initializer_list/initializer_list/end_free.md b/reference/initializer_list/initializer_list/end_free.md
index 6c130fa3d..a4b91264b 100644
--- a/reference/initializer_list/initializer_list/end_free.md
+++ b/reference/initializer_list/initializer_list/end_free.md
@@ -48,6 +48,8 @@ int main()
 ### 出力
 ```
 1
+2
+3
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>flags -- いくつかのコード例の出力を修正</title>
      <link href="https://cpprefjp.github.io/reference/ios/ios_base/flags.html"/>
      <id>d707563ff7798e050aa616dc843d19c57d956a76:reference/ios/ios_base/flags.md</id>
      <updated>2025-10-21T16:45:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ios/ios_base/flags.md b/reference/ios/ios_base/flags.md
index d51f00a3c..1cd138504 100644
--- a/reference/ios/ios_base/flags.md
+++ b/reference/ios/ios_base/flags.md
@@ -71,6 +71,7 @@ int main()
 
 ### 出力
 ```
+100
 64
 100
 64
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator-= -- いくつかのコード例の出力を修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/counted_iterator/op_minus_assign.html"/>
      <id>d707563ff7798e050aa616dc843d19c57d956a76:reference/iterator/counted_iterator/op_minus_assign.md</id>
      <updated>2025-10-21T16:45:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/counted_iterator/op_minus_assign.md b/reference/iterator/counted_iterator/op_minus_assign.md
index 2932754fb..629a42130 100644
--- a/reference/iterator/counted_iterator/op_minus_assign.md
+++ b/reference/iterator/counted_iterator/op_minus_assign.md
@@ -53,7 +53,7 @@ int main() {
 
 ### 出力
 ```
-5
+4
 ```
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>weakly_incrementable -- いくつかのコード例の出力を修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/weakly_incrementable.html"/>
      <id>d707563ff7798e050aa616dc843d19c57d956a76:reference/iterator/weakly_incrementable.md</id>
      <updated>2025-10-21T16:45:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/weakly_incrementable.md b/reference/iterator/weakly_incrementable.md
index b4167a1a1..d068279c7 100644
--- a/reference/iterator/weakly_incrementable.md
+++ b/reference/iterator/weakly_incrementable.md
@@ -96,11 +96,11 @@ int* is weakly incrementable
 const int* is weakly incrementable
 std::vector&amp;lt;int&amp;gt;::iterator is weakly incrementable
 std::ostream_iterator&amp;lt;double&amp;gt; is weakly incrementable
-sample_incrementable is weakly incrementable
+sample_weak_incrementable is weakly incrementable
 
 int* const is not weakly incrementable
 std::unique_ptr&amp;lt;int&amp;gt; is not weakly incrementable
-sample_not_incrementable is not weakly incrementable
+sample_not_weak_incrementable is not weakly incrementable
 ```
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>regex_match -- いくつかのコード例の出力を修正</title>
      <link href="https://cpprefjp.github.io/reference/regex/regex_match.html"/>
      <id>d707563ff7798e050aa616dc843d19c57d956a76:reference/regex/regex_match.md</id>
      <updated>2025-10-21T16:45:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/regex/regex_match.md b/reference/regex/regex_match.md
index b39d2ef56..fa1ca0844 100644
--- a/reference/regex/regex_match.md
+++ b/reference/regex/regex_match.md
@@ -178,7 +178,7 @@ int main()
 
 ### 出力
 ```
-(1) = true
+(1) true
 str = &amp;#39;abc123def&amp;#39;, position = 0
 (2) true
 str = &amp;#39;abc123def&amp;#39;, position = 0
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>regex_search -- いくつかのコード例の出力を修正</title>
      <link href="https://cpprefjp.github.io/reference/regex/regex_search.html"/>
      <id>d707563ff7798e050aa616dc843d19c57d956a76:reference/regex/regex_search.md</id>
      <updated>2025-10-21T16:45:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/regex/regex_search.md b/reference/regex/regex_search.md
index cd0a10918..85350cd4b 100644
--- a/reference/regex/regex_search.md
+++ b/reference/regex/regex_search.md
@@ -179,7 +179,7 @@ int main()
 
 ### 出力
 ```
-(1) = true
+(1) true
 str = &amp;#39;123&amp;#39;, position = 3
 (2) true
 str = &amp;#39;123&amp;#39;, position = 3
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator+ (非メンバ関数) -- いくつかのコード例を修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/basic_const_iterator/op_plus.html"/>
      <id>c012fa32030b9a78f11cda6426d51a9235d7481a:reference/iterator/basic_const_iterator/op_plus.md</id>
      <updated>2025-10-21T16:44:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/basic_const_iterator/op_plus.md b/reference/iterator/basic_const_iterator/op_plus.md
index 729919512..2ec77f4f7 100644
--- a/reference/iterator/basic_const_iterator/op_plus.md
+++ b/reference/iterator/basic_const_iterator/op_plus.md
@@ -41,7 +41,7 @@ return basic_const_iterator(i.current_ + n);
 int main() {
   std::vector vec = {1, 2, 3, 4, 5};
 
-  std::basic_const_iterator cit = vec.end();
+  std::basic_const_iterator cit = vec.begin();
 
   auto cit2 = cit + 3;
   auto cit3 = 4 + cit;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>permutable -- いくつかのコード例を修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/permutable.html"/>
      <id>c012fa32030b9a78f11cda6426d51a9235d7481a:reference/iterator/permutable.md</id>
      <updated>2025-10-21T16:44:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/permutable.md b/reference/iterator/permutable.md
index 95d912d5d..1b20b1c70 100644
--- a/reference/iterator/permutable.md
+++ b/reference/iterator/permutable.md
@@ -44,6 +44,7 @@ int main() {
   f&amp;lt;std::forward_list&amp;lt;int&amp;gt;::iterator&amp;gt;(&amp;#34;std::forward_list&amp;lt;int&amp;gt;::iterator&amp;#34;);
   f&amp;lt;std::list&amp;lt;int&amp;gt;::iterator&amp;gt;(&amp;#34;std::list&amp;lt;int&amp;gt;::iterator&amp;#34;);
   f&amp;lt;std::vector&amp;lt;int&amp;gt;::iterator&amp;gt;(&amp;#34;std::vector&amp;lt;int&amp;gt;::iterator&amp;#34;);
+  f&amp;lt;std::vector&amp;lt;std::unique_ptr&amp;lt;int&amp;gt;&amp;gt;::iterator&amp;gt;(&amp;#34;std::vector&amp;lt;std::unique_ptr&amp;lt;int&amp;gt;&amp;gt;::iterator&amp;#34;);
 
   std::cout &amp;lt;&amp;lt; &amp;#34;\n&amp;#34;;
   f&amp;lt;const int*&amp;gt;(&amp;#34;const int*&amp;#34;);
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>stop_possible -- いくつかのコード例を修正</title>
      <link href="https://cpprefjp.github.io/reference/stop_token/stop_token/stop_possible.html"/>
      <id>c012fa32030b9a78f11cda6426d51a9235d7481a:reference/stop_token/stop_token/stop_possible.md</id>
      <updated>2025-10-21T16:44:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stop_token/stop_token/stop_possible.md b/reference/stop_token/stop_token/stop_possible.md
index a9dcedc21..f28bb13a9 100644
--- a/reference/stop_token/stop_token/stop_possible.md
+++ b/reference/stop_token/stop_token/stop_possible.md
@@ -62,7 +62,7 @@ int main()
   // 停止状態が停止要求を受け取った場合は、
   // その後で stop_source が破棄されても stop_possible() == true のままになる
   assert(st1.stop_possible() == true);
-  assert(st2.stop_possible() == false);
+  assert(st2.stop_possible() == true);
   assert(st3.stop_possible() == false);
 }
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- stringbuf : オーバーロードの番号を修正</title>
      <link href="https://cpprefjp.github.io/reference/sstream/basic_stringbuf/op_constructor.html"/>
      <id>00f118737e1bddc536ec9c77175ce3f70e2a60c1:reference/sstream/basic_stringbuf/op_constructor.md</id>
      <updated>2025-10-21T15:32:00+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/sstream/basic_stringbuf/op_constructor.md b/reference/sstream/basic_stringbuf/op_constructor.md
index db0530c44..ba24f7c55 100644
--- a/reference/sstream/basic_stringbuf/op_constructor.md
+++ b/reference/sstream/basic_stringbuf/op_constructor.md
@@ -6,73 +6,73 @@
 
 ```cpp
 basic_stringbuf()
-  : basic_stringbuf(ios_base::in | ios_base::out) {}        // (1) C++11
+  : basic_stringbuf(ios_base::in | ios_base::out) {}          // (1) C++11
 explicit basic_stringbuf(
-  ios_base::openmode which);                                // (2) C++11
+  ios_base::openmode which);                                  // (2) C++11
 explicit basic_stringbuf(
-  ios_base::openmode which = ios_base::in | ios_base::out); // (1)+(2) C++03
+  ios_base::openmode which = ios_base::in | ios_base::out);   // (1)+(2) C++03
 
 explicit basic_stringbuf(
   const basic_string&amp;lt;CharT, Traits, Allocator&amp;gt;&amp;amp; s,
-  ios_base::openmode which = ios_base::in | ios_base::out);  // (2) C++03
+  ios_base::openmode which = ios_base::in | ios_base::out);   // (3) C++03
 
 explicit basic_stringbuf(
   basic_string&amp;lt;CharT, Traits, Allocator&amp;gt;&amp;amp;&amp;amp; s,
-  ios_base::openmode which = ios_base::in | ios_base::out);   // (3) C++20
+  ios_base::openmode which = ios_base::in | ios_base::out);   // (4) C++20
 
 basic_stringbuf(
   ios_base::openmode which,
-  const Allocator&amp;amp; a);                                        // (4) C++20
+  const Allocator&amp;amp; a);                                        // (5) C++20
 
 explicit basic_stringbuf(const Allocator&amp;amp; a)
-  : basic_stringbuf(ios_base::in | ios_base::out, a) {}       // (5) C++20
+  : basic_stringbuf(ios_base::in | ios_base::out, a) {}       // (6) C++20
 
 explicit basic_stringbuf(
   const basic_string&amp;lt;CharT, Traits, Allocator&amp;gt;&amp;amp; s,
   const Allocator&amp;amp; a)
-    : basic_stringbuf(s, ios_base::in | ios_base::out, a) {}  // (6) C++20
+    : basic_stringbuf(s, ios_base::in | ios_base::out, a) {}  // (7) C++20
 
 explicit basic_stringbuf(
   const basic_string&amp;lt;CharT, Traits, Allocator&amp;gt;&amp;amp; s,
   ios_base::openmode which,
-  const Allocator&amp;amp; a);                                        // (7) C++20
+  const Allocator&amp;amp; a);                                        // (8) C++20
 
 template&amp;lt;class SAlloc&amp;gt;
 explicit basic_stringbuf(
   const basic_string&amp;lt;CharT, Traits, SAlloc&amp;gt;&amp;amp; s,
-  ios_base::openmode which = ios_base::in | ios_base::out);   // (8) C++20
+  ios_base::openmode which = ios_base::in | ios_base::out);   // (9) C++20
 
 template&amp;lt;class SAlloc&amp;gt;
 basic_stringbuf(
   const basic_string&amp;lt;CharT, Traits, SAlloc&amp;gt;&amp;amp; s,
   const Allocator&amp;amp; a)
-    : basic_stringbuf(s, ios_base::in | ios_base::out, a) {}  // (9) C++20
+    : basic_stringbuf(s, ios_base::in | ios_base::out, a) {}  // (10) C++20
 
 template&amp;lt;class SAlloc&amp;gt;
 basic_stringbuf(
   const basic_string&amp;lt;CharT, Traits, SAlloc&amp;gt;&amp;amp; s,
   ios_base::openmode which,
-  const Allocator&amp;amp; a);                                        // (10) C++20
+  const Allocator&amp;amp; a);                                        // (11) C++20
 
-basic_stringbuf(basic_stringbuf&amp;amp;&amp;amp; rhs);                       // (11) C++11
-basic_stringbuf(basic_stringbuf&amp;amp;&amp;amp; rhs, const Allocator&amp;amp; a);   // (12) C++20
+basic_stringbuf(basic_stringbuf&amp;amp;&amp;amp; rhs);                       // (12) C++11
+basic_stringbuf(basic_stringbuf&amp;amp;&amp;amp; rhs, const Allocator&amp;amp; a);   // (13) C++20
 
 template&amp;lt;class T&amp;gt;
 explicit
 basic_stringbuf(
   const T&amp;amp; t,
-  ios_base::openmode which = ios_base::in | ios_base::out);   // (13) C++26
+  ios_base::openmode which = ios_base::in | ios_base::out);   // (14) C++26
 
 template&amp;lt;class T&amp;gt;
 basic_stringbuf(
   const T&amp;amp; t,
-  const Allocator&amp;amp; a);                                        // (14) C++26
+  const Allocator&amp;amp; a);                                        // (15) C++26
 
 template&amp;lt;class T&amp;gt;
 basic_stringbuf(
   const T&amp;amp; t,
   ios_base::openmode which,
-  const Allocator&amp;amp; a);                                        // (15) C++26
+  const Allocator&amp;amp; a);                                        // (16) C++26
 ```
 * ios_base[link /reference/ios/ios_base.md]
 * basic_string[link /reference/string/basic_string.md]
@@ -83,22 +83,23 @@ basic_stringbuf(
 - (1) : デフォルトコンストラクタ
 - (2) : 指定されたモードで構築する
 - (3) : 入力文字列として[`std::basic_string`](/reference/string/basic_string.md)オブジェクトのコピーと、指定されたモードで構築する
-- (4) : モードとアロケータを指定して構築する
-- (5) : アロケータを指定して構築する
-- (6) : 入力文字列として[`std::basic_string`](/reference/string/basic_string.md)オブジェクトのコピーと、アロケータを指定して構築する
-- (7) : 入力文字列として[`std::basic_string`](/reference/string/basic_string.md)オブジェクトのコピー、モード、アロケータを指定して構築する
-- (8) : 入力文字列として`Allocator`に変換可能なアロケータ型をもつ[`std::basic_string`](/reference/string/basic_string.md)オブジェクトのコピーと、指定されたモードで構築する
-- (9) : 入力文字列として`Allocator`に変換可能なアロケータ型をもつ[`std::basic_string`](/reference/string/basic_string.md)オブジェクトのコピーと、アロケータを指定して構築する
-- (10) : 入力文字列として`Allocator`に変換可能なアロケータ型をもつ[`std::basic_string`](/reference/string/basic_string.md)オブジェクトのコピー、モード、アロケータを指定して構築する
-- (11) : ムーブコンストラクタ
-- (12) : ムーブコンストラクタでアロケータを指定して構築する
-- (13) : 入力文字列として[`basic_string_view`](/reference/string_view/basic_string_view.md)に変換可能な文字列と、モードを設定する
-- (14) : 入力文字列として[`basic_string_view`](/reference/string_view/basic_string_view.md)に変換可能な文字列と、アロケータを設定する
-- (15) : 入力文字列として[`basic_string_view`](/reference/string_view/basic_string_view.md)に変換可能な文字列と、モードとアロケータを設定する
+- (4) : 入力文字列として[`std::basic_string`](/reference/string/basic_string.md)オブジェクトの右辺値参照と、指定されたモードで構築する
+- (5) : モードとアロケータを指定して構築する
+- (6) : アロケータを指定して構築する
+- (7) : 入力文字列として[`std::basic_string`](/reference/string/basic_string.md)オブジェクトのコピーと、アロケータを指定して構築する
+- (8) : 入力文字列として[`std::basic_string`](/reference/string/basic_string.md)オブジェクトのコピー、モード、アロケータを指定して構築する
+- (9) : 入力文字列として`Allocator`に変換可能なアロケータ型をもつ[`std::basic_string`](/reference/string/basic_string.md)オブジェクトのコピーと、指定されたモードで構築する
+- (10) : 入力文字列として`Allocator`に変換可能なアロケータ型をもつ[`std::basic_string`](/reference/string/basic_string.md)オブジェクトのコピーと、アロケータを指定して構築する
+- (11) : 入力文字列として`Allocator`に変換可能なアロケータ型をもつ[`std::basic_string`](/reference/string/basic_string.md)オブジェクトのコピー、モード、アロケータを指定して構築する
+- (12) : ムーブコンストラクタ
+- (13) : ムーブコンストラクタでアロケータを指定して構築する
+- (14) : 入力文字列として[`basic_string_view`](/reference/string_view/basic_string_view.md)に変換可能な文字列と、モードを設定する
+- (15) : 入力文字列として[`basic_string_view`](/reference/string_view/basic_string_view.md)に変換可能な文字列と、アロケータを設定する
+- (16) : 入力文字列として[`basic_string_view`](/reference/string_view/basic_string_view.md)に変換可能な文字列と、モードとアロケータを設定する
 
 
 ## テンプレートパラメータ制約
-- (13), (14), (15) : `is_convertible_v&amp;lt;const T&amp;amp;, basic_string_view&amp;lt;CharT, Traits&amp;gt;&amp;gt;`が`true`であること
+- (14), (15), (16) : `is_convertible_v&amp;lt;const T&amp;amp;, basic_string_view&amp;lt;CharT, Traits&amp;gt;&amp;gt;`が`true`であること
 
 
 ## 効果
@@ -107,12 +108,13 @@ basic_stringbuf(
 - (3) : 内部の文字列バッファを`s`のコピー、モードは`which`に設定する
 - (4) : 内部の文字列バッファを`std::move(s)`で、モードは`which`に設定する
 - (5) : 内部の文字列バッファを空にし、モードは`which`、アロケータは`a`に設定する
-- (6), (7), (8), (9), (10) : 各引数は内部状態の初期化に使用される
-- (11) : `rhs`から`basic_stringbuf`オブジェクトをムーブ構築する
-- (12) : `rhs`から`basic_stringbuf`オブジェクトをムーブ構築し、アロケータは`a`を使用する
-- (13) : `basic_string_view&amp;lt;CharT, Traits&amp;gt;(t)`で文字列を初期化し、モードは`which`に設定する
-- (14) : `basic_string_view&amp;lt;CharT, Traits&amp;gt;(t)`で文字列を初期化し、モードは`ios_base::in | ios_base::out`、アロケータは`a`に設定する
-- (15) : `basic_string_view&amp;lt;CharT, Traits&amp;gt;(t)`で文字列を初期化し、モードは`which`、アロケータは`a`に設定する
+- (6) : 内部の文字列バッファを空にし、モードは`ios_base::in | ios_base::out`、アロケータは`a`に設定する
+- (7), (8), (9), (10), (11) : 各引数は内部状態の初期化に使用される
+- (12) : `rhs`から`basic_stringbuf`オブジェクトをムーブ構築する
+- (13) : `rhs`から`basic_stringbuf`オブジェクトをムーブ構築し、アロケータは`a`を使用する
+- (14) : `basic_string_view&amp;lt;CharT, Traits&amp;gt;(t)`で文字列を初期化し、モードは`which`に設定する
+- (15) : `basic_string_view&amp;lt;CharT, Traits&amp;gt;(t)`で文字列を初期化し、モードは`ios_base::in | ios_base::out`、アロケータは`a`に設定する
+- (16) : `basic_string_view&amp;lt;CharT, Traits&amp;gt;(t)`で文字列を初期化し、モードは`which`、アロケータは`a`に設定する
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>rdbuf -- stringbuf, spanbuf : コード例や出力を修正</title>
      <link href="https://cpprefjp.github.io/reference/spanstream/basic_spanstream/rdbuf.html"/>
      <id>45eb8c111ab6158d1faa95d1689473b28b53ec2d:reference/spanstream/basic_spanstream/rdbuf.md</id>
      <updated>2025-10-21T15:28:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/spanstream/basic_spanstream/rdbuf.md b/reference/spanstream/basic_spanstream/rdbuf.md
index 1f3d610da..5458b49cb 100644
--- a/reference/spanstream/basic_spanstream/rdbuf.md
+++ b/reference/spanstream/basic_spanstream/rdbuf.md
@@ -49,7 +49,7 @@ int main()
 ### 出力
 ```
 t
-est!
+!est
 ```
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- stringbuf, spanbuf : コード例や出力を修正</title>
      <link href="https://cpprefjp.github.io/reference/sstream/basic_stringbuf/op_constructor.html"/>
      <id>45eb8c111ab6158d1faa95d1689473b28b53ec2d:reference/sstream/basic_stringbuf/op_constructor.md</id>
      <updated>2025-10-21T15:28:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/sstream/basic_stringbuf/op_constructor.md b/reference/sstream/basic_stringbuf/op_constructor.md
index 4936f70c8..db0530c44 100644
--- a/reference/sstream/basic_stringbuf/op_constructor.md
+++ b/reference/sstream/basic_stringbuf/op_constructor.md
@@ -129,13 +129,16 @@ int main()
   std::cout &amp;lt;&amp;lt; buf1.str() &amp;lt;&amp;lt; std::endl;
   
   // (3) 文字列を指定して構築
-  std::stringbuf buf2(&amp;#34;initial&amp;#34;);
+  std::stringbuf buf2(&amp;#34;initial&amp;#34;, std::ios_base::out | std::ios_base::app);
   buf2.sputc(&amp;#39;!&amp;#39;);
   std::cout &amp;lt;&amp;lt; buf2.str() &amp;lt;&amp;lt; std::endl;
 }
 ```
 * sputc[link /reference/streambuf/basic_streambuf/sputc.md]
 * str()[link str.md]
+* std::ios_base[link /reference/ios/ios_base.md]
+* out[link /reference/ios/ios_base/type-openmode.md]
+* app[link /reference/ios/ios_base/type-openmode.md]
 
 #### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>str -- stringbuf, spanbuf : コード例や出力を修正</title>
      <link href="https://cpprefjp.github.io/reference/sstream/basic_stringbuf/str.html"/>
      <id>45eb8c111ab6158d1faa95d1689473b28b53ec2d:reference/sstream/basic_stringbuf/str.md</id>
      <updated>2025-10-21T15:28:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/sstream/basic_stringbuf/str.md b/reference/sstream/basic_stringbuf/str.md
index 7424b4953..b8dde7d0e 100644
--- a/reference/sstream/basic_stringbuf/str.md
+++ b/reference/sstream/basic_stringbuf/str.md
@@ -78,7 +78,7 @@ int main()
   ch = buf.sbumpc();  // &amp;#39;e&amp;#39;
   std::cout &amp;lt;&amp;lt; &amp;#34;3: After reading 2 chars: &amp;#34; &amp;lt;&amp;lt; buf.str() &amp;lt;&amp;lt; std::endl;
   
-  // 書き込み（現在の位置から）
+  // 書き込み（読み取り位置と書き込み位置は別なので、先頭から書き込まれる）
   buf.sputc(&amp;#39;X&amp;#39;);
   buf.sputc(&amp;#39;Y&amp;#39;);
   std::cout &amp;lt;&amp;lt; &amp;#34;4: After writing: &amp;#34; &amp;lt;&amp;lt; buf.str() &amp;lt;&amp;lt; std::endl;
@@ -97,7 +97,7 @@ int main()
 1: Hello, World!
 2: New content
 3: After reading 2 chars: Read/Write test
-4: After writing: ReXY/Write test
+4: After writing: XYad/Write test
 5: Empty? yes
 ```
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- stringbuf, spanbuf : コード例や出力を修正</title>
      <link href="https://cpprefjp.github.io/reference/sstream/basic_stringstream/op_constructor.html"/>
      <id>45eb8c111ab6158d1faa95d1689473b28b53ec2d:reference/sstream/basic_stringstream/op_constructor.md</id>
      <updated>2025-10-21T15:28:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/sstream/basic_stringstream/op_constructor.md b/reference/sstream/basic_stringstream/op_constructor.md
index 43a302aa1..68db07c9a 100644
--- a/reference/sstream/basic_stringstream/op_constructor.md
+++ b/reference/sstream/basic_stringstream/op_constructor.md
@@ -121,12 +121,15 @@ int main()
   std::cout &amp;lt;&amp;lt; s &amp;lt;&amp;lt; std::endl;
   
   // (3) 文字列を指定して構築
-  std::stringstream ss2(&amp;#34;initial value&amp;#34;);
+  std::stringstream ss2(&amp;#34;initial value&amp;#34;, std::ios_base::out | std::ios_base::app);
   ss2 &amp;lt;&amp;lt; &amp;#34; added&amp;#34;;
   std::cout &amp;lt;&amp;lt; ss2.str() &amp;lt;&amp;lt; std::endl;
 }
 ```
 * str()[link str.md]
+* std::ios_base[link /reference/ios/ios_base.md]
+* out[link /reference/ios/ios_base/type-openmode.md]
+* app[link /reference/ios/ios_base/type-openmode.md]
 
 #### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>rdbuf -- stringbuf, spanbuf : コード例や出力を修正</title>
      <link href="https://cpprefjp.github.io/reference/sstream/basic_stringstream/rdbuf.html"/>
      <id>45eb8c111ab6158d1faa95d1689473b28b53ec2d:reference/sstream/basic_stringstream/rdbuf.md</id>
      <updated>2025-10-21T15:28:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/sstream/basic_stringstream/rdbuf.md b/reference/sstream/basic_stringstream/rdbuf.md
index c79760227..1683e7849 100644
--- a/reference/sstream/basic_stringstream/rdbuf.md
+++ b/reference/sstream/basic_stringstream/rdbuf.md
@@ -42,5 +42,5 @@ int main()
 ### 出力
 ```
 t
-est!
+!est
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>str -- stringbuf, spanbuf : コード例や出力を修正</title>
      <link href="https://cpprefjp.github.io/reference/sstream/basic_stringstream/str.html"/>
      <id>45eb8c111ab6158d1faa95d1689473b28b53ec2d:reference/sstream/basic_stringstream/str.md</id>
      <updated>2025-10-21T15:28:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/sstream/basic_stringstream/str.md b/reference/sstream/basic_stringstream/str.md
index 9e62e17ef..7f77ddcb4 100644
--- a/reference/sstream/basic_stringstream/str.md
+++ b/reference/sstream/basic_stringstream/str.md
@@ -67,6 +67,7 @@ int main()
   std::cout &amp;lt;&amp;lt; &amp;#34;1: &amp;#34; &amp;lt;&amp;lt; ss.str() &amp;lt;&amp;lt; std::endl;
   
   // ストリームに追記
+  ss.seekp(0, std::ios_base::end);
   ss &amp;lt;&amp;lt; &amp;#34; + added&amp;#34;;
   std::cout &amp;lt;&amp;lt; &amp;#34;2: &amp;#34; &amp;lt;&amp;lt; ss.str() &amp;lt;&amp;lt; std::endl;
   
@@ -85,6 +86,9 @@ int main()
   std::cout &amp;lt;&amp;lt; &amp;#34;5: Empty? &amp;#34; &amp;lt;&amp;lt; (ss.str().empty() ? &amp;#34;yes&amp;#34; : &amp;#34;no&amp;#34;) &amp;lt;&amp;lt; std::endl;
 }
 ```
+* seekp[link /reference/ostream/basic_ostream/seekp.md]
+* std::ios_base[link /reference/ios/ios_base.md]
+* end[link /reference/ios/ios_base/type-seekdir.md]
 
 #### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>equivalent -- error_category : 出力を修正</title>
      <link href="https://cpprefjp.github.io/reference/system_error/error_category/equivalent.html"/>
      <id>8d6bfc930234f1edaf7aae317631bcc84c35a927:reference/system_error/error_category/equivalent.md</id>
      <updated>2025-10-21T00:43:29+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/system_error/error_category/equivalent.md b/reference/system_error/error_category/equivalent.md
index 30fb7dd97..4019fab84 100644
--- a/reference/system_error/error_category/equivalent.md
+++ b/reference/system_error/error_category/equivalent.md
@@ -57,7 +57,7 @@ int main()
 ### 出力
 ```
 true
-false
+true
 true
 false
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
</feed>
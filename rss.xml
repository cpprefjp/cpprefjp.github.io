<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2020-11-19T15:22:33.885014</updated>
  <id>33e8320d-bf13-46e7-b92e-d969f10fb61f</id>

  
    <entry>
      <title>丸カッコの値リストからの集成体初期化を許可 -- &#34;丸カッコの値リストからの集成体初期化を許可&#34;を更新</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/allow_initializing_aggregates_from_a_parenthesized_list_of_values.html"/>
      <id>738b732ae1d5500bd8f90e7c51143d233c47acba:lang/cpp20/allow_initializing_aggregates_from_a_parenthesized_list_of_values.md</id>
      <updated>2020-11-20T00:17:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/allow_initializing_aggregates_from_a_parenthesized_list_of_values.md b/lang/cpp20/allow_initializing_aggregates_from_a_parenthesized_list_of_values.md
index e02fd183d..258797cb5 100644
--- a/lang/cpp20/allow_initializing_aggregates_from_a_parenthesized_list_of_values.md
+++ b/lang/cpp20/allow_initializing_aggregates_from_a_parenthesized_list_of_values.md
@@ -101,12 +101,14 @@ struct A {
 丸カッコで集成体初期化を可能にすることで両者の差はより少なくなり、コンストラクタを書かなければいけない場面もより少なくなる。
 集成体初期化なのかコンストラクタ呼び出しなのかを意識せずに済むよう、丸カッコによる集成体初期化は丸カッコによるコンストラクタ呼び出しに近い意味論になっている。
 
+また、この機能によって、集成体に対しても [`make_shared`](/reference/memory/make_shared.md)、[`make_unique`](/reference/memory/make_unique.md)、各種コンテナの `emplace`、[`allocator::construct`](/reference/memory/allocator/construct.md) などの関数が使えるようになる。
+
 ## 検討されたほかの選択肢
 
 以下のような案もあったが採用されなかった。
 
-1. 丸カッコによる集成体初期化を単純に波カッコに置き換えて解釈する
-2. コンストラクタ呼び出しと全く同じ意味論にする(コンストラクタを自動生成して呼び出す)
+1. 丸カッコによる集成体初期化を単純に波カッコに置き換えて解釈する([P0960R1](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0960r1.html))
+2. コンストラクタ呼び出しと全く同じ意味論にする(コンストラクタを自動生成して呼び出す)([P0960R2](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p0960r2.html))
 
 丸カッコを単純に波カッコに置き換えて解釈すると、コンストラクタ呼び出しと同じ構文にもかかわらず意味論が異なり、混乱を招くという問題があった。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>parse -- chronoのparse : 戻り値を規定</title>
      <link href="https://cpprefjp.github.io/reference/chrono/parse.html"/>
      <id>9a80a05259ad87b0d2f7c5027cb4f9deb66ae60c:reference/chrono/parse.md</id>
      <updated>2020-11-19T17:52:43+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/parse.md b/reference/chrono/parse.md
index d53c58215..932b5d7bb 100644
--- a/reference/chrono/parse.md
+++ b/reference/chrono/parse.md
@@ -85,17 +85,17 @@ namespace std::chrono {
 
 
 ## テンプレートパラメータ制約
-- (1) : `from_stream(`[`declval`](/reference/utility/declval.md)`&amp;lt;basic_istream&amp;lt;charT, traits&amp;gt;&amp;amp;&amp;gt;(), fmt.`[`c_str()`](/reference/string/basic_string/c_str.md)`, tp)`が妥当な式であること
-- (2) : `from_stream(`[`declval`](/reference/utility/declval.md)`&amp;lt;basic_istream&amp;lt;charT, traits&amp;gt;&amp;amp;&amp;gt;(), fmt.`[`c_str()`](/reference/string/basic_string/c_str.md)`, tp,` [`addressof`](/reference/memory/addressof.md)`(abbrev))`が妥当な式であること
-- (3) : 式`from_stream(`[`declval`](/reference/utility/declval.md)`&amp;lt;basic_istream&amp;lt;charT, traits&amp;gt;&amp;amp;&amp;gt;(), fmt.`[`c_str()`](/reference/string/basic_string/c_str.md)`, tp,` [`declval`](/reference/utility/declval.md)`&amp;lt;`[`basic_string`](/reference/string/basic_string.md)`&amp;lt;charT, traits, Alloc&amp;gt;*&amp;gt;(), &amp;amp;offset)`が評価されないオペランドとして扱われた場合に妥当な式であること
-- (4) : `from_stream(`[`declval`](/reference/utility/declval.md)`&amp;lt;basic_istream&amp;lt;charT, traits&amp;gt;&amp;amp;&amp;gt;(), fmt.`[`c_str()`](/reference/string/basic_string/c_str.md)`, tp,` [`addressof`](/reference/memory/addressof.md)`(abbrev), &amp;amp;offset)`が妥当な式であること
+- (1) : `from_stream(`[`declval`](/reference/utility/declval.md)`&amp;lt;basic_istream&amp;lt;charT, traits&amp;gt;&amp;amp;&amp;gt;(), fmt.`[`c_str()`](/reference/string/basic_string/c_str.md)`, tp)`が評価されないオペランドとして扱われた場合に適格な式であること
+- (2) : `from_stream(`[`declval`](/reference/utility/declval.md)`&amp;lt;basic_istream&amp;lt;charT, traits&amp;gt;&amp;amp;&amp;gt;(), fmt.`[`c_str()`](/reference/string/basic_string/c_str.md)`, tp,` [`addressof`](/reference/memory/addressof.md)`(abbrev))`が評価されないオペランドとして扱われた場合に適格な式であること
+- (3) : 式`from_stream(`[`declval`](/reference/utility/declval.md)`&amp;lt;basic_istream&amp;lt;charT, traits&amp;gt;&amp;amp;&amp;gt;(), fmt.`[`c_str()`](/reference/string/basic_string/c_str.md)`, tp,` [`declval`](/reference/utility/declval.md)`&amp;lt;`[`basic_string`](/reference/string/basic_string.md)`&amp;lt;charT, traits, Alloc&amp;gt;*&amp;gt;(), &amp;amp;offset)`が評価されないオペランドとして扱われた場合に適格な式であること
+- (4) : `from_stream(`[`declval`](/reference/utility/declval.md)`&amp;lt;basic_istream&amp;lt;charT, traits&amp;gt;&amp;amp;&amp;gt;(), fmt.`[`c_str()`](/reference/string/basic_string/c_str.md)`, tp,` [`addressof`](/reference/memory/addressof.md)`(abbrev), &amp;amp;offset)`が評価されないオペランドとして扱われた場合に適格な式であること
 
 
-## 効果
-- (1) : このマニピュレータは、[`basic_istream`](/reference/istream/basic_istream.md)`&amp;lt;charT, traits&amp;gt;`型オブジェクト`is`に対して`from_stream(is, fmt.`[`c_str()`](/reference/string/basic_string/c_str.md)`, tp)`を呼び出す
-- (2) : このマニピュレータは、[`basic_istream`](/reference/istream/basic_istream.md)`&amp;lt;charT, traits&amp;gt;`型オブジェクト`is`に対して`from_stream(is, fmt.`[`c_str()`](/reference/string/basic_string/c_str.md)`, tp,` [`addressof`](/reference/memory/addressof.md)`(abbrev))`を呼び出す
-- (3) : このマニピュレータは、[`basic_istream`](/reference/istream/basic_istream.md)`&amp;lt;charT, traits&amp;gt;`型オブジェクト`is`に対して`from_stream(is, fmt.`[`c_str()`](/reference/string/basic_string/c_str.md)`, tp, static_cast&amp;lt;`[`basic_string`](/reference/string/basic_string.md)`&amp;lt;charT, traits, Alloc&amp;gt;*&amp;gt;(nullptr), &amp;amp;offset)`を呼び出す
-- (4) : このマニピュレータは、[`basic_istream`](/reference/istream/basic_istream.md)`&amp;lt;charT, traits&amp;gt;`型オブジェクト`is`に対して`from_stream(is, fmt.`[`c_str()`](/reference/string/basic_string/c_str.md)`, tp,` [`addressof`](/reference/memory/addressof.md)`(abbrev), &amp;amp;offset)`を呼び出す
+## 戻り値
+- (1) : このマニピュレータは、[`basic_istream`](/reference/istream/basic_istream.md)`&amp;lt;charT, traits&amp;gt;`型オブジェクト`is`に対して`from_stream(is, fmt.`[`c_str()`](/reference/string/basic_string/c_str.md)`, tp)`を呼び出した結果の`is`を返す
+- (2) : このマニピュレータは、[`basic_istream`](/reference/istream/basic_istream.md)`&amp;lt;charT, traits&amp;gt;`型オブジェクト`is`に対して`from_stream(is, fmt.`[`c_str()`](/reference/string/basic_string/c_str.md)`, tp,` [`addressof`](/reference/memory/addressof.md)`(abbrev))`を呼び出した結果の`is`を返す
+- (3) : このマニピュレータは、[`basic_istream`](/reference/istream/basic_istream.md)`&amp;lt;charT, traits&amp;gt;`型オブジェクト`is`に対して`from_stream(is, fmt.`[`c_str()`](/reference/string/basic_string/c_str.md)`, tp, static_cast&amp;lt;`[`basic_string`](/reference/string/basic_string.md)`&amp;lt;charT, traits, Alloc&amp;gt;*&amp;gt;(nullptr), &amp;amp;offset)`を呼び出した結果の`is`を返す
+- (4) : このマニピュレータは、[`basic_istream`](/reference/istream/basic_istream.md)`&amp;lt;charT, traits&amp;gt;`型オブジェクト`is`に対して`from_stream(is, fmt.`[`c_str()`](/reference/string/basic_string/c_str.md)`, tp,` [`addressof`](/reference/memory/addressof.md)`(abbrev), &amp;amp;offset)`を呼び出した結果の`is`を返す
 
 以下、オーバーロード全体について、
 
@@ -109,10 +109,6 @@ namespace std::chrono {
 - フォーマット文字列で指定されたいずれの解析にも失敗した場合、もしくは完全な`duration`、時間点、カレンダーデータ構造を指定するために十分な情報が解析されなかった場合、`is.`[`setstate`](/reference/ios/basic_ios/setstate.md)`(`[`ios_base::failbit`](/reference/ios/ios_base/type-iostate.md)`)`が呼び出される
 
 
-## 戻り値
-未規定
-
-
 ## 例
 ```cpp example
 #include &amp;lt;sstream&amp;gt;
@@ -179,3 +175,7 @@ JST
 - [Clang](/implementation.md#clang): (9.0時点で実装なし)
 - [GCC](/implementation.md#gcc): (9.2時点で実装なし)
 - [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 参照
+- [LWG Issue 3269. Parse manipulators do not specify the result of the extraction from stream](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3269)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>format -- hh_mm_ss : operator&lt;&lt;以外の文字列フォーマットでも負数にはマイナス記号が付加される</title>
      <link href="https://cpprefjp.github.io/reference/chrono/format.html"/>
      <id>162f991dad70d3bf6d054f0a36471366e881f133:reference/chrono/format.md</id>
      <updated>2020-11-19T16:03:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/format.md b/reference/chrono/format.md
index be75d75c0..e5fe97746 100644
--- a/reference/chrono/format.md
+++ b/reference/chrono/format.md
@@ -64,31 +64,9 @@ chronoライブラリではこれに加え、たとえばデフォルトでは
 | `%Z` | タイムゾーンの略称。タイムゾーンの略称が利用可能でない場合、[`std::format_error`](/reference/format/format_error.md)例外を送出する | `&amp;#34;JST&amp;#34;` |
 | `%%` | 文字`%` | `&amp;#34;%&amp;#34;` |
 
+- 便宜上のリテラルキャスト`STATICALLY-WIDEN`を導入する。`STATICALLY-WIDEN&amp;lt;charT&amp;gt;(&amp;#34;...&amp;#34;)`は、`charT`が`char`である場合は`&amp;#34;...&amp;#34;`、`charT`が`wchar_t`である場合は`L&amp;#34;...&amp;#34;`を意味する。
+- [`hh_mm_ss`](hh_mm_ss.md)オブジェクトの[`is_negative()`](hh_mm_ss/is_negative.md)が`true`である場合、出力される文字列の先頭に`STATICALLY-WIDEN&amp;lt;charT&amp;gt;(&amp;#34;-&amp;#34;)`が挿入される
 
-### chronoライブラリの各クラスのデフォルトフォーマット
-
-
-
-## 戻り値
-
-
-
-## 例
-```cpp example
-#include &amp;lt;iostream&amp;gt;
-#include &amp;lt;format&amp;gt;
-#include &amp;lt;chrono&amp;gt;
-
-namespace chrono = std::chrono;
-
-int main()
-{
-}
-```
-
-### 出力例
-```
-```
 
 ## バージョン
 ### 言語
@@ -103,3 +81,4 @@ int main()
 ## 参照
 - [P1361R2 Integration of chrono with text formatting](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1361r2.pdf)
 - [P2117R0 C++ Standard Library Issues Resolved Directly In Prague](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html)
+- [LWG Issue 3262. Formatting of negative durations is not specified](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3262)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;&lt; -- hh_mm_ss : operator&lt;&lt;以外の文字列フォーマットでも負数にはマイナス記号が付加される</title>
      <link href="https://cpprefjp.github.io/reference/chrono/hh_mm_ss/op_ostream.html"/>
      <id>162f991dad70d3bf6d054f0a36471366e881f133:reference/chrono/hh_mm_ss/op_ostream.md</id>
      <updated>2020-11-19T16:03:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/hh_mm_ss/op_ostream.md b/reference/chrono/hh_mm_ss/op_ostream.md
index ead77b83f..4b551c169 100644
--- a/reference/chrono/hh_mm_ss/op_ostream.md
+++ b/reference/chrono/hh_mm_ss/op_ostream.md
@@ -22,15 +22,14 @@ namespace std::chrono {
 - (1) : 以下と等価：
     ```cpp
     return os &amp;lt;&amp;lt; format(os.getloc(),
-                   hms.is_negative() ?
-                     STATICALLY-WIDEN&amp;lt;charT&amp;gt;(&amp;#34;-{:%T}&amp;#34;)
-                   : STATICALLY-WIDEN&amp;lt;charT&amp;gt;(&amp;#34;{:%T}&amp;#34;),
-                   abs(hms.to_duration()));
+                        STATICALLY-WIDEN&amp;lt;charT&amp;gt;(&amp;#34;{:%T}&amp;#34;),
+                        hms);
     ```
     * format[link /reference/format/format.md]
-    * hms.is_negative()[link is_negative.md]
-    * abs[link /reference/chrono/duration/abs.md]
-    * hms.to_dutation()[link to_duration.md]
+
+
+## 備考
+- このクラスのオブジェクトを文字列フォーマットする場合、負数には先頭に`-` (マイナス) がつく
 
 
 ## 例
@@ -72,3 +71,7 @@ int main()
 
 ## 関連項目
 - [chronoの`std::format()`](/reference/chrono/format.md) (フォーマットの詳細)
+
+
+## 参照
+- [LWG Issue 3262. Formatting of negative durations is not specified](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3262)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator- -- year_month*クラスの+- : 暗黙変換の優先順位を記載</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month/op_minus.html"/>
      <id>0e67c1f607491057ac68ad91fb2b940145b5bf40:reference/chrono/year_month/op_minus.md</id>
      <updated>2020-11-19T15:56:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month/op_minus.md b/reference/chrono/year_month/op_minus.md
index accb92cc5..fabda36ea 100644
--- a/reference/chrono/year_month/op_minus.md
+++ b/reference/chrono/year_month/op_minus.md
@@ -18,6 +18,10 @@ namespace std::chrono {
 - (2) : `year_month`から年の時間間隔を減算する
 
 
+## テンプレートパラメータ制約
+- (1) : [`months`](/reference/chrono/duration_aliases.md)パラメータに指定した引数が[`years`](/reference/chrono/duration_aliases.md)に変換可能である場合、[`years`](/reference/chrono/duration_aliases.md)への暗黙変換は、[`months`](/reference/chrono/duration_aliases.md)への暗黙変換よりも劣る
+
+
 ## 戻り値
 - (1) : `return ym + (-dm);`
 - (2) : `return ym + (-dy);`
@@ -56,3 +60,7 @@ int main()
 - [Clang](/implementation.md#clang): 8.0
 - [GCC](/implementation.md#gcc): 11.1
 - [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 参照
+- [LWG Issue 3260. `year_month*` arithmetic rejects durations convertible to `years`](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3260)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator-= -- year_month*クラスの+- : 暗黙変換の優先順位を記載</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month/op_minus_assign.html"/>
      <id>0e67c1f607491057ac68ad91fb2b940145b5bf40:reference/chrono/year_month/op_minus_assign.md</id>
      <updated>2020-11-19T15:56:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month/op_minus_assign.md b/reference/chrono/year_month/op_minus_assign.md
index b83668504..f44c6e0f6 100644
--- a/reference/chrono/year_month/op_minus_assign.md
+++ b/reference/chrono/year_month/op_minus_assign.md
@@ -19,6 +19,10 @@ constexpr year_month&amp;amp; operator-=(const years&amp;amp; dy) noexcept;  // (2) C++20
 パラメータの型が、カレンダー時間の[`month`](/reference/chrono/month.md)、[`year`](/reference/chrono/year.md)ではなく、時間間隔を表す[`months`](/reference/chrono/duration_aliases.md)、[`years`](/reference/chrono/duration_aliases.md)であることに注意。
 
 
+## テンプレートパラメータ制約
+- (1) : [`months`](/reference/chrono/duration_aliases.md)パラメータに指定した引数が[`years`](/reference/chrono/duration_aliases.md)に変換可能である場合、[`years`](/reference/chrono/duration_aliases.md)への暗黙変換は、[`months`](/reference/chrono/duration_aliases.md)への暗黙変換よりも劣る
+
+
 ## 効果
 - (1) : `*this = *this - dm`
 - (2) : `*this = *this - dy`
@@ -65,3 +69,7 @@ int main()
 - [Clang](/implementation.md#clang): 8.0
 - [GCC](/implementation.md#gcc): 11.1
 - [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 参照
+- [LWG Issue 3260. `year_month*` arithmetic rejects durations convertible to `years`](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3260)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator+ -- year_month*クラスの+- : 暗黙変換の優先順位を記載</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month/op_plus.html"/>
      <id>0e67c1f607491057ac68ad91fb2b940145b5bf40:reference/chrono/year_month/op_plus.md</id>
      <updated>2020-11-19T15:56:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month/op_plus.md b/reference/chrono/year_month/op_plus.md
index a97748474..95fa1f14b 100644
--- a/reference/chrono/year_month/op_plus.md
+++ b/reference/chrono/year_month/op_plus.md
@@ -23,6 +23,10 @@ namespace std::chrono {
 - (4) : 年の時間間隔に`year_month`を加算する
 
 
+## テンプレートパラメータ制約
+- (1), (2) : [`months`](/reference/chrono/duration_aliases.md)パラメータに指定した引数が[`years`](/reference/chrono/duration_aliases.md)に変換可能である場合、[`years`](/reference/chrono/duration_aliases.md)への暗黙変換は、[`months`](/reference/chrono/duration_aliases.md)への暗黙変換よりも劣る
+
+
 ## 戻り値
 - (1) : 以下の式が`true`となる`year_month`オブジェクト`z`を返す
     ```cpp
@@ -86,3 +90,7 @@ int main()
 - [Clang](/implementation.md#clang): 8.0
 - [GCC](/implementation.md#gcc): 11.1
 - [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 参照
+- [LWG Issue 3260. `year_month*` arithmetic rejects durations convertible to `years`](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3260)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator+= -- year_month*クラスの+- : 暗黙変換の優先順位を記載</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month/op_plus_assign.html"/>
      <id>0e67c1f607491057ac68ad91fb2b940145b5bf40:reference/chrono/year_month/op_plus_assign.md</id>
      <updated>2020-11-19T15:56:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month/op_plus_assign.md b/reference/chrono/year_month/op_plus_assign.md
index b543e035a..ab13c5632 100644
--- a/reference/chrono/year_month/op_plus_assign.md
+++ b/reference/chrono/year_month/op_plus_assign.md
@@ -19,6 +19,10 @@ constexpr year_month&amp;amp; operator+=(const years&amp;amp; dy) noexcept;  // (2) C++20
 パラメータの型が、カレンダー時間の[`month`](/reference/chrono/month.md)、[`year`](/reference/chrono/year.md)ではなく、時間間隔を表す[`months`](/reference/chrono/duration_aliases.md)、[`years`](/reference/chrono/duration_aliases.md)であることに注意。
 
 
+## テンプレートパラメータ制約
+- (1) : [`months`](/reference/chrono/duration_aliases.md)パラメータに指定した引数が[`years`](/reference/chrono/duration_aliases.md)に変換可能である場合、[`years`](/reference/chrono/duration_aliases.md)への暗黙変換は、[`months`](/reference/chrono/duration_aliases.md)への暗黙変換よりも劣る
+
+
 ## 効果
 - (1) : `*this = *this + dm`
 - (2) : `*this = *this + dy`
@@ -65,3 +69,7 @@ int main()
 - [Clang](/implementation.md#clang): 8.0
 - [GCC](/implementation.md#gcc): 11.1
 - [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 参照
+- [LWG Issue 3260. `year_month*` arithmetic rejects durations convertible to `years`](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3260)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator- -- year_month*クラスの+- : 暗黙変換の優先順位を記載</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day/op_minus.html"/>
      <id>0e67c1f607491057ac68ad91fb2b940145b5bf40:reference/chrono/year_month_day/op_minus.md</id>
      <updated>2020-11-19T15:56:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day/op_minus.md b/reference/chrono/year_month_day/op_minus.md
index 4041bc5c6..ff282f3e4 100644
--- a/reference/chrono/year_month_day/op_minus.md
+++ b/reference/chrono/year_month_day/op_minus.md
@@ -18,6 +18,10 @@ namespace std::chrono {
 - (2) : `year_month_day`から年の時間間隔を減算する
 
 
+## テンプレートパラメータ制約
+- (1) : [`months`](/reference/chrono/duration_aliases.md)パラメータに指定した引数が[`years`](/reference/chrono/duration_aliases.md)に変換可能である場合、[`years`](/reference/chrono/duration_aliases.md)への暗黙変換は、[`months`](/reference/chrono/duration_aliases.md)への暗黙変換よりも劣る
+
+
 ## 戻り値
 - (1) : `return ymd + (-dm);`
 - (2) : `return ymd + (-dy);`
@@ -60,3 +64,7 @@ int main()
 - [Clang](/implementation.md#clang): 8.0
 - [GCC](/implementation.md#gcc): (9.2時点で実装なし)
 - [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 参照
+- [LWG Issue 3260. `year_month*` arithmetic rejects durations convertible to `years`](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3260)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator-= -- year_month*クラスの+- : 暗黙変換の優先順位を記載</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day/op_minus_assign.html"/>
      <id>0e67c1f607491057ac68ad91fb2b940145b5bf40:reference/chrono/year_month_day/op_minus_assign.md</id>
      <updated>2020-11-19T15:56:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day/op_minus_assign.md b/reference/chrono/year_month_day/op_minus_assign.md
index c44124e0a..34d7d315c 100644
--- a/reference/chrono/year_month_day/op_minus_assign.md
+++ b/reference/chrono/year_month_day/op_minus_assign.md
@@ -19,6 +19,10 @@ constexpr year_month_day&amp;amp; operator-=(const years&amp;amp; y) noexcept;  // (2) C++20
 パラメータの型が、カレンダー時間の[`month`](/reference/chrono/month.md)、[`year`](/reference/chrono/year.md)ではなく、時間間隔を表す[`months`](/reference/chrono/duration_aliases.md)、[`years`](/reference/chrono/duration_aliases.md)であることに注意。
 
 
+## テンプレートパラメータ制約
+- (1) : [`months`](/reference/chrono/duration_aliases.md)パラメータに指定した引数が[`years`](/reference/chrono/duration_aliases.md)に変換可能である場合、[`years`](/reference/chrono/duration_aliases.md)への暗黙変換は、[`months`](/reference/chrono/duration_aliases.md)への暗黙変換よりも劣る
+
+
 ## 効果
 - (1) : `*this = *this - m`
 - (2) : `*this = *this - y`
@@ -65,3 +69,7 @@ int main()
 - [Clang](/implementation.md#clang): 8.0
 - [GCC](/implementation.md#gcc): (9.2時点で実装なし)
 - [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 参照
+- [LWG Issue 3260. `year_month*` arithmetic rejects durations convertible to `years`](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3260)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator+ -- year_month*クラスの+- : 暗黙変換の優先順位を記載</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day/op_plus.html"/>
      <id>0e67c1f607491057ac68ad91fb2b940145b5bf40:reference/chrono/year_month_day/op_plus.md</id>
      <updated>2020-11-19T15:56:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day/op_plus.md b/reference/chrono/year_month_day/op_plus.md
index 7d52c873e..56fc9d8c1 100644
--- a/reference/chrono/year_month_day/op_plus.md
+++ b/reference/chrono/year_month_day/op_plus.md
@@ -23,6 +23,10 @@ namespace std::chrono {
 - (4) : 年の時間間隔に`year_month_day`を加算する
 
 
+## テンプレートパラメータ制約
+- (1), (2) : [`months`](/reference/chrono/duration_aliases.md)パラメータに指定した引数が[`years`](/reference/chrono/duration_aliases.md)に変換可能である場合、[`years`](/reference/chrono/duration_aliases.md)への暗黙変換は、[`months`](/reference/chrono/duration_aliases.md)への暗黙変換よりも劣る
+
+
 ## 戻り値
 - (1) :
 
@@ -93,3 +97,7 @@ int main()
 - [Clang](/implementation.md#clang): 8.0
 - [GCC](/implementation.md#gcc): (9.2時点で実装なし)
 - [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 参照
+- [LWG Issue 3260. `year_month*` arithmetic rejects durations convertible to `years`](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3260)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator+= -- year_month*クラスの+- : 暗黙変換の優先順位を記載</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day/op_plus_assign.html"/>
      <id>0e67c1f607491057ac68ad91fb2b940145b5bf40:reference/chrono/year_month_day/op_plus_assign.md</id>
      <updated>2020-11-19T15:56:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day/op_plus_assign.md b/reference/chrono/year_month_day/op_plus_assign.md
index a73814740..8cbb11d1f 100644
--- a/reference/chrono/year_month_day/op_plus_assign.md
+++ b/reference/chrono/year_month_day/op_plus_assign.md
@@ -19,6 +19,10 @@ constexpr year_month_day&amp;amp; operator+=(const years&amp;amp; y) noexcept;  // (2) C++20
 パラメータの型が、カレンダー時間の[`month`](/reference/chrono/month.md)、[`year`](/reference/chrono/year.md)ではなく、時間間隔を表す[`months`](/reference/chrono/duration_aliases.md)、[`years`](/reference/chrono/duration_aliases.md)であることに注意。
 
 
+## テンプレートパラメータ制約
+- (1) : [`months`](/reference/chrono/duration_aliases.md)パラメータに指定した引数が[`years`](/reference/chrono/duration_aliases.md)に変換可能である場合、[`years`](/reference/chrono/duration_aliases.md)への暗黙変換は、[`months`](/reference/chrono/duration_aliases.md)への暗黙変換よりも劣る
+
+
 ## 効果
 - (1) : `*this = *this + m`
 - (2) : `*this = *this + y`
@@ -65,3 +69,7 @@ int main()
 - [Clang](/implementation.md#clang): 8.0
 - [GCC](/implementation.md#gcc): (9.2時点で実装なし)
 - [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 参照
+- [LWG Issue 3260. `year_month*` arithmetic rejects durations convertible to `years`](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3260)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator- -- year_month*クラスの+- : 暗黙変換の優先順位を記載</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day_last/op_minus.html"/>
      <id>0e67c1f607491057ac68ad91fb2b940145b5bf40:reference/chrono/year_month_day_last/op_minus.md</id>
      <updated>2020-11-19T15:56:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day_last/op_minus.md b/reference/chrono/year_month_day_last/op_minus.md
index 1d5be3967..0af943998 100644
--- a/reference/chrono/year_month_day_last/op_minus.md
+++ b/reference/chrono/year_month_day_last/op_minus.md
@@ -22,6 +22,10 @@ namespace std::chrono {
 - (2) : `year_month_day_last`から年の時間間隔を減算する
 
 
+## テンプレートパラメータ制約
+- (1) : [`months`](/reference/chrono/duration_aliases.md)パラメータに指定した引数が[`years`](/reference/chrono/duration_aliases.md)に変換可能である場合、[`years`](/reference/chrono/duration_aliases.md)への暗黙変換は、[`months`](/reference/chrono/duration_aliases.md)への暗黙変換よりも劣る
+
+
 ## 戻り値
 - (1) : `return ymdl + (-dm);`
 - (2) : `return ymdl + (-dy);`
@@ -62,3 +66,7 @@ int main()
 - [Clang](/implementation.md#clang): 8.0
 - [GCC](/implementation.md#gcc): 11.1
 - [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 参照
+- [LWG Issue 3260. `year_month*` arithmetic rejects durations convertible to `years`](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3260)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator-= -- year_month*クラスの+- : 暗黙変換の優先順位を記載</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day_last/op_minus_assign.html"/>
      <id>0e67c1f607491057ac68ad91fb2b940145b5bf40:reference/chrono/year_month_day_last/op_minus_assign.md</id>
      <updated>2020-11-19T15:56:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day_last/op_minus_assign.md b/reference/chrono/year_month_day_last/op_minus_assign.md
index 5a9e9c50a..85c7b0bf3 100644
--- a/reference/chrono/year_month_day_last/op_minus_assign.md
+++ b/reference/chrono/year_month_day_last/op_minus_assign.md
@@ -19,6 +19,10 @@ constexpr year_month_day_last&amp;amp; operator-=(const years&amp;amp; y) noexcept;  // (2) C++2
 パラメータの型が、カレンダー時間の[`month`](/reference/chrono/month.md)、[`year`](/reference/chrono/year.md)ではなく、時間間隔を表す[`months`](/reference/chrono/duration_aliases.md)、[`years`](/reference/chrono/duration_aliases.md)であることに注意。
 
 
+## テンプレートパラメータ制約
+- (1) : [`months`](/reference/chrono/duration_aliases.md)パラメータに指定した引数が[`years`](/reference/chrono/duration_aliases.md)に変換可能である場合、[`years`](/reference/chrono/duration_aliases.md)への暗黙変換は、[`months`](/reference/chrono/duration_aliases.md)への暗黙変換よりも劣る
+
+
 ## 効果
 - (1) : `*this = *this - m`
 - (2) : `*this = *this - y`
@@ -67,3 +71,7 @@ int main()
 - [Clang](/implementation.md#clang): 8.0
 - [GCC](/implementation.md#gcc): (9.2時点で実装なし)
 - [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 参照
+- [LWG Issue 3260. `year_month*` arithmetic rejects durations convertible to `years`](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3260)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator+ -- year_month*クラスの+- : 暗黙変換の優先順位を記載</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day_last/op_plus.html"/>
      <id>0e67c1f607491057ac68ad91fb2b940145b5bf40:reference/chrono/year_month_day_last/op_plus.md</id>
      <updated>2020-11-19T15:56:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day_last/op_plus.md b/reference/chrono/year_month_day_last/op_plus.md
index 90831ea16..83ae3cf07 100644
--- a/reference/chrono/year_month_day_last/op_plus.md
+++ b/reference/chrono/year_month_day_last/op_plus.md
@@ -31,6 +31,10 @@ namespace std::chrono {
 - (4) : 年の時間間隔に`year_month_day_last`を加算する
 
 
+## テンプレートパラメータ制約
+- (1), (2) : [`months`](/reference/chrono/duration_aliases.md)パラメータに指定した引数が[`years`](/reference/chrono/duration_aliases.md)に変換可能である場合、[`years`](/reference/chrono/duration_aliases.md)への暗黙変換は、[`months`](/reference/chrono/duration_aliases.md)への暗黙変換よりも劣る
+
+
 ## 戻り値
 - (1) :
 
@@ -99,3 +103,7 @@ int main()
 - [Clang](/implementation.md#clang): 8.0
 - [GCC](/implementation.md#gcc): 11.1
 - [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 参照
+- [LWG Issue 3260. `year_month*` arithmetic rejects durations convertible to `years`](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3260)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator+= -- year_month*クラスの+- : 暗黙変換の優先順位を記載</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day_last/op_plus_assign.html"/>
      <id>0e67c1f607491057ac68ad91fb2b940145b5bf40:reference/chrono/year_month_day_last/op_plus_assign.md</id>
      <updated>2020-11-19T15:56:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day_last/op_plus_assign.md b/reference/chrono/year_month_day_last/op_plus_assign.md
index 7c556bf39..241691003 100644
--- a/reference/chrono/year_month_day_last/op_plus_assign.md
+++ b/reference/chrono/year_month_day_last/op_plus_assign.md
@@ -19,6 +19,10 @@ constexpr year_month_day_last&amp;amp; operator+=(const years&amp;amp; y) noexcept;  // (2) C++2
 パラメータの型が、カレンダー時間の[`month`](/reference/chrono/month.md)、[`year`](/reference/chrono/year.md)ではなく、時間間隔を表す[`months`](/reference/chrono/duration_aliases.md)、[`years`](/reference/chrono/duration_aliases.md)であることに注意。
 
 
+## テンプレートパラメータ制約
+- (1) : [`months`](/reference/chrono/duration_aliases.md)パラメータに指定した引数が[`years`](/reference/chrono/duration_aliases.md)に変換可能である場合、[`years`](/reference/chrono/duration_aliases.md)への暗黙変換は、[`months`](/reference/chrono/duration_aliases.md)への暗黙変換よりも劣る
+
+
 ## 効果
 - (1) : `*this = *this + m`
 - (2) : `*this = *this + y`
@@ -67,3 +71,7 @@ int main()
 - [Clang](/implementation.md#clang): 8.0
 - [GCC](/implementation.md#gcc): 11.1
 - [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 参照
+- [LWG Issue 3260. `year_month*` arithmetic rejects durations convertible to `years`](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3260)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator- -- year_month*クラスの+- : 暗黙変換の優先順位を記載</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/op_minus.html"/>
      <id>0e67c1f607491057ac68ad91fb2b940145b5bf40:reference/chrono/year_month_weekday/op_minus.md</id>
      <updated>2020-11-19T15:56:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/op_minus.md b/reference/chrono/year_month_weekday/op_minus.md
index f04128062..0f0624e51 100644
--- a/reference/chrono/year_month_weekday/op_minus.md
+++ b/reference/chrono/year_month_weekday/op_minus.md
@@ -22,6 +22,10 @@ namespace std::chrono {
 - (2) : `year_month_weekday`から年の時間間隔を減算する
 
 
+## テンプレートパラメータ制約
+- (1) : [`months`](/reference/chrono/duration_aliases.md)パラメータに指定した引数が[`years`](/reference/chrono/duration_aliases.md)に変換可能である場合、[`years`](/reference/chrono/duration_aliases.md)への暗黙変換は、[`months`](/reference/chrono/duration_aliases.md)への暗黙変換よりも劣る
+
+
 ## 戻り値
 - (1) : `return ymwd + (-dm);`
 - (2) : `return ymwd + (-dy);`
@@ -61,3 +65,7 @@ int main()
 - [Clang](/implementation.md#clang): 8.0
 - [GCC](/implementation.md#gcc): 11.1
 - [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 参照
+- [LWG Issue 3260. `year_month*` arithmetic rejects durations convertible to `years`](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3260)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator-= -- year_month*クラスの+- : 暗黙変換の優先順位を記載</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/op_minus_assign.html"/>
      <id>0e67c1f607491057ac68ad91fb2b940145b5bf40:reference/chrono/year_month_weekday/op_minus_assign.md</id>
      <updated>2020-11-19T15:56:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/op_minus_assign.md b/reference/chrono/year_month_weekday/op_minus_assign.md
index a33bb4b5f..d6c2bf7fb 100644
--- a/reference/chrono/year_month_weekday/op_minus_assign.md
+++ b/reference/chrono/year_month_weekday/op_minus_assign.md
@@ -19,6 +19,10 @@ constexpr year_month_day&amp;amp; operator-=(const years&amp;amp; y) noexcept;  // (2) C++20
 パラメータの型が、カレンダー時間の[`month`](/reference/chrono/month.md)、[`year`](/reference/chrono/year.md)ではなく、時間間隔を表す[`months`](/reference/chrono/duration_aliases.md)、[`years`](/reference/chrono/duration_aliases.md)であることに注意。
 
 
+## テンプレートパラメータ制約
+- (1) : [`months`](/reference/chrono/duration_aliases.md)パラメータに指定した引数が[`years`](/reference/chrono/duration_aliases.md)に変換可能である場合、[`years`](/reference/chrono/duration_aliases.md)への暗黙変換は、[`months`](/reference/chrono/duration_aliases.md)への暗黙変換よりも劣る
+
+
 ## 効果
 - (1) : `*this = *this - m`
 - (2) : `*this = *this - y`
@@ -68,3 +72,7 @@ int main()
 - [Clang](/implementation.md#clang): 8.0
 - [GCC](/implementation.md#gcc): 11.1
 - [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 参照
+- [LWG Issue 3260. `year_month*` arithmetic rejects durations convertible to `years`](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3260)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator+ -- year_month*クラスの+- : 暗黙変換の優先順位を記載</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/op_plus.html"/>
      <id>0e67c1f607491057ac68ad91fb2b940145b5bf40:reference/chrono/year_month_weekday/op_plus.md</id>
      <updated>2020-11-19T15:56:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/op_plus.md b/reference/chrono/year_month_weekday/op_plus.md
index f45bc760b..4557d5389 100644
--- a/reference/chrono/year_month_weekday/op_plus.md
+++ b/reference/chrono/year_month_weekday/op_plus.md
@@ -31,6 +31,10 @@ namespace std::chrono {
 - (4) : 年の時間間隔に`year_month_weekday`を加算する
 
 
+## テンプレートパラメータ制約
+- (1), (2) : [`months`](/reference/chrono/duration_aliases.md)パラメータに指定した引数が[`years`](/reference/chrono/duration_aliases.md)に変換可能である場合、[`years`](/reference/chrono/duration_aliases.md)への暗黙変換は、[`months`](/reference/chrono/duration_aliases.md)への暗黙変換よりも劣る
+
+
 ## 戻り値
 - (1) :
 
@@ -98,3 +102,7 @@ int main()
 - [Clang](/implementation.md#clang): 8.0
 - [GCC](/implementation.md#gcc): 11.1
 - [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 参照
+- [LWG Issue 3260. `year_month*` arithmetic rejects durations convertible to `years`](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3260)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator+= -- year_month*クラスの+- : 暗黙変換の優先順位を記載</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/op_plus_assign.html"/>
      <id>0e67c1f607491057ac68ad91fb2b940145b5bf40:reference/chrono/year_month_weekday/op_plus_assign.md</id>
      <updated>2020-11-19T15:56:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/op_plus_assign.md b/reference/chrono/year_month_weekday/op_plus_assign.md
index 48ffb12c3..f35bd52d0 100644
--- a/reference/chrono/year_month_weekday/op_plus_assign.md
+++ b/reference/chrono/year_month_weekday/op_plus_assign.md
@@ -19,6 +19,10 @@ constexpr year_month_weekday&amp;amp; operator+=(const years&amp;amp; y) noexcept;  // (2) C++20
 パラメータの型が、カレンダー時間の[`month`](/reference/chrono/month.md)、[`year`](/reference/chrono/year.md)ではなく、時間間隔を表す[`months`](/reference/chrono/duration_aliases.md)、[`years`](/reference/chrono/duration_aliases.md)であることに注意。
 
 
+## テンプレートパラメータ制約
+- (1) : [`months`](/reference/chrono/duration_aliases.md)パラメータに指定した引数が[`years`](/reference/chrono/duration_aliases.md)に変換可能である場合、[`years`](/reference/chrono/duration_aliases.md)への暗黙変換は、[`months`](/reference/chrono/duration_aliases.md)への暗黙変換よりも劣る
+
+
 ## 効果
 - (1) : `*this = *this + m`
 - (2) : `*this = *this + y`
@@ -68,3 +72,7 @@ int main()
 - [Clang](/implementation.md#clang): 8.0
 - [GCC](/implementation.md#gcc): 11.1
 - [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 参照
+- [LWG Issue 3260. `year_month*` arithmetic rejects durations convertible to `years`](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3260)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator- -- year_month*クラスの+- : 暗黙変換の優先順位を記載</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday_last/op_minus.html"/>
      <id>0e67c1f607491057ac68ad91fb2b940145b5bf40:reference/chrono/year_month_weekday_last/op_minus.md</id>
      <updated>2020-11-19T15:56:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday_last/op_minus.md b/reference/chrono/year_month_weekday_last/op_minus.md
index d65595990..fe8c2f166 100644
--- a/reference/chrono/year_month_weekday_last/op_minus.md
+++ b/reference/chrono/year_month_weekday_last/op_minus.md
@@ -22,6 +22,10 @@ namespace std::chrono {
 - (2) : `year_month_weekday_last`から年の時間間隔を減算する
 
 
+## テンプレートパラメータ制約
+- (1) : [`months`](/reference/chrono/duration_aliases.md)パラメータに指定した引数が[`years`](/reference/chrono/duration_aliases.md)に変換可能である場合、[`years`](/reference/chrono/duration_aliases.md)への暗黙変換は、[`months`](/reference/chrono/duration_aliases.md)への暗黙変換よりも劣る
+
+
 ## 戻り値
 - (1) : `return ymwdl + (-dm);`
 - (2) : `return ymwdl + (-dy);`
@@ -61,3 +65,7 @@ int main()
 - [Clang](/implementation.md#clang): 8.0
 - [GCC](/implementation.md#gcc): 11.1
 - [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 参照
+- [LWG Issue 3260. `year_month*` arithmetic rejects durations convertible to `years`](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3260)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator-= -- year_month*クラスの+- : 暗黙変換の優先順位を記載</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday_last/op_minus_assign.html"/>
      <id>0e67c1f607491057ac68ad91fb2b940145b5bf40:reference/chrono/year_month_weekday_last/op_minus_assign.md</id>
      <updated>2020-11-19T15:56:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday_last/op_minus_assign.md b/reference/chrono/year_month_weekday_last/op_minus_assign.md
index f46face39..741835a6b 100644
--- a/reference/chrono/year_month_weekday_last/op_minus_assign.md
+++ b/reference/chrono/year_month_weekday_last/op_minus_assign.md
@@ -19,6 +19,10 @@ constexpr year_month_weekday_last&amp;amp; operator-=(const years&amp;amp; y) noexcept;  // (2)
 パラメータの型が、カレンダー時間の[`month`](/reference/chrono/month.md)、[`year`](/reference/chrono/year.md)ではなく、時間間隔を表す[`months`](/reference/chrono/duration_aliases.md)、[`years`](/reference/chrono/duration_aliases.md)であることに注意。
 
 
+## テンプレートパラメータ制約
+- (1) : [`months`](/reference/chrono/duration_aliases.md)パラメータに指定した引数が[`years`](/reference/chrono/duration_aliases.md)に変換可能である場合、[`years`](/reference/chrono/duration_aliases.md)への暗黙変換は、[`months`](/reference/chrono/duration_aliases.md)への暗黙変換よりも劣る
+
+
 ## 効果
 - (1) : `*this = *this - m`
 - (2) : `*this = *this - y`
@@ -69,3 +73,7 @@ int main()
 - [Clang](/implementation.md#clang): 8.0
 - [GCC](/implementation.md#gcc): 11.1
 - [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 参照
+- [LWG Issue 3260. `year_month*` arithmetic rejects durations convertible to `years`](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3260)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator+ -- year_month*クラスの+- : 暗黙変換の優先順位を記載</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday_last/op_plus.html"/>
      <id>0e67c1f607491057ac68ad91fb2b940145b5bf40:reference/chrono/year_month_weekday_last/op_plus.md</id>
      <updated>2020-11-19T15:56:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday_last/op_plus.md b/reference/chrono/year_month_weekday_last/op_plus.md
index d2f8e8a1a..7f0ead02c 100644
--- a/reference/chrono/year_month_weekday_last/op_plus.md
+++ b/reference/chrono/year_month_weekday_last/op_plus.md
@@ -31,6 +31,10 @@ namespace std::chrono {
 - (4) : 年の時間間隔に`year_month_weekday_last`を加算する
 
 
+## テンプレートパラメータ制約
+- (1), (2) : [`months`](/reference/chrono/duration_aliases.md)パラメータに指定した引数が[`years`](/reference/chrono/duration_aliases.md)に変換可能である場合、[`years`](/reference/chrono/duration_aliases.md)への暗黙変換は、[`months`](/reference/chrono/duration_aliases.md)への暗黙変換よりも劣る
+
+
 ## 戻り値
 - (1) :
 
@@ -98,3 +102,7 @@ int main()
 - [Clang](/implementation.md#clang): 8.0
 - [GCC](/implementation.md#gcc): 11.1
 - [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 参照
+- [LWG Issue 3260. `year_month*` arithmetic rejects durations convertible to `years`](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3260)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator+= -- year_month*クラスの+- : 暗黙変換の優先順位を記載</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday_last/op_plus_assign.html"/>
      <id>0e67c1f607491057ac68ad91fb2b940145b5bf40:reference/chrono/year_month_weekday_last/op_plus_assign.md</id>
      <updated>2020-11-19T15:56:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday_last/op_plus_assign.md b/reference/chrono/year_month_weekday_last/op_plus_assign.md
index 80fdb7e5d..f356d77ea 100644
--- a/reference/chrono/year_month_weekday_last/op_plus_assign.md
+++ b/reference/chrono/year_month_weekday_last/op_plus_assign.md
@@ -19,6 +19,10 @@ constexpr year_month_weekday_last&amp;amp; operator+=(const years&amp;amp; y) noexcept;  // (2)
 パラメータの型が、カレンダー時間の[`month`](/reference/chrono/month.md)、[`year`](/reference/chrono/year.md)ではなく、時間間隔を表す[`months`](/reference/chrono/duration_aliases.md)、[`years`](/reference/chrono/duration_aliases.md)であることに注意。
 
 
+## テンプレートパラメータ制約
+- (1) : [`months`](/reference/chrono/duration_aliases.md)パラメータに指定した引数が[`years`](/reference/chrono/duration_aliases.md)に変換可能である場合、[`years`](/reference/chrono/duration_aliases.md)への暗黙変換は、[`months`](/reference/chrono/duration_aliases.md)への暗黙変換よりも劣る
+
+
 ## 効果
 - (1) : `*this = *this + m`
 - (2) : `*this = *this + y`
@@ -69,3 +73,7 @@ int main()
 - [Clang](/implementation.md#clang): 8.0
 - [GCC](/implementation.md#gcc): 11.1
 - [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 参照
+- [LWG Issue 3260. `year_month*` arithmetic rejects durations convertible to `years`](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html#3260)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>format -- chronoのformat : 拡張コマンドが追加された経緯の文書を追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/format.html"/>
      <id>bad1872d0884f390dad8983a3d7dbed559779666:reference/chrono/format.md</id>
      <updated>2020-11-19T15:22:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/format.md b/reference/chrono/format.md
index 178048ea7..be75d75c0 100644
--- a/reference/chrono/format.md
+++ b/reference/chrono/format.md
@@ -102,3 +102,4 @@ int main()
 
 ## 参照
 - [P1361R2 Integration of chrono with text formatting](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1361r2.pdf)
+- [P2117R0 C++ Standard Library Issues Resolved Directly In Prague](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2117r0.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
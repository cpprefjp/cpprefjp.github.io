<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2024-05-17T14:38:44.217852</updated>
  <id>1b4b01c8-a1b3-46b8-a906-d07dc9922f5b</id>

  
    <entry>
      <title>複合文の末尾へのラベルを許可 -- Merge pull request #1278 from kusunosetoru/patch-1</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/labels_at_the_end_of_compound_statements.html"/>
      <id>08d60442212454bebc463e559a64282aab19b2a0:lang/cpp23/labels_at_the_end_of_compound_statements.md</id>
      <updated>2024-05-17T19:51:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/labels_at_the_end_of_compound_statements.md b/lang/cpp23/labels_at_the_end_of_compound_statements.md
index 2d85ec996..c8377072a 100644
--- a/lang/cpp23/labels_at_the_end_of_compound_statements.md
+++ b/lang/cpp23/labels_at_the_end_of_compound_statements.md
@@ -2,24 +2,24 @@
 * cpp23[meta cpp]
 
 ## 概要
-C言語 (C20) との互換性のため、C言語で許可されていた複合文の末尾 (関数末尾など`{}`ブロックの末尾) へのgotoラベルを許可する。
+C言語 (C23) との互換性のため、C言語で新しく許可された複合文の末尾 (関数末尾など`{}`ブロックの末尾) へのgotoラベルを許可する。
 
 関数末尾の例：
 
 ```cpp
 void foo(void)
 {
-first:  // C20:OK C++:OK
+first:  // C23:OK C++:OK
   int x;
-second: // C20:OK C++:OK
+second: // C:OK C++:OK
   x = 1;
-last:   // C20:OK C++23:OK
+last:   // C23:OK C++23:OK
 }
 ```
 
 
 ## この機能が必要になった背景・経緯
-CではN2508の提案により、宣言の前など、複合文のあらゆる箇所にgotoラベルを置けるようになり、C++との互換性が改善した。C++では宣言は文として扱われるため宣言の前には以前からgotoラベルを置くことができた。ただし、C++では複合文の末尾にはgotoラベルを置けないという非互換が残っていた。
+CではN2508の提案により、宣言の前など、複合文のあらゆる箇所にgotoラベルを置けるようになり、C++との互換性が改善した。C++では宣言は文として扱われるため宣言の前には以前からgotoラベルを置くことができた。ただし、C++では複合文の末尾にはgotoラベルを置けないため新しい非互換が生じた。
 
 C++23でこの機能を導入することにより、gotoラベルを置ける場所についての非互換がなくなる。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>複合文の末尾へのラベルを許可 -- Update labels_at_the_end_of_compound_statements.md</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/labels_at_the_end_of_compound_statements.html"/>
      <id>dd7c42cc5ecbd1e1fd12fe1aff1ac4c2412e426d:lang/cpp23/labels_at_the_end_of_compound_statements.md</id>
      <updated>2024-05-17T18:10:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/labels_at_the_end_of_compound_statements.md b/lang/cpp23/labels_at_the_end_of_compound_statements.md
index 2d85ec996..c8377072a 100644
--- a/lang/cpp23/labels_at_the_end_of_compound_statements.md
+++ b/lang/cpp23/labels_at_the_end_of_compound_statements.md
@@ -2,24 +2,24 @@
 * cpp23[meta cpp]
 
 ## 概要
-C言語 (C20) との互換性のため、C言語で許可されていた複合文の末尾 (関数末尾など`{}`ブロックの末尾) へのgotoラベルを許可する。
+C言語 (C23) との互換性のため、C言語で新しく許可された複合文の末尾 (関数末尾など`{}`ブロックの末尾) へのgotoラベルを許可する。
 
 関数末尾の例：
 
 ```cpp
 void foo(void)
 {
-first:  // C20:OK C++:OK
+first:  // C23:OK C++:OK
   int x;
-second: // C20:OK C++:OK
+second: // C:OK C++:OK
   x = 1;
-last:   // C20:OK C++23:OK
+last:   // C23:OK C++23:OK
 }
 ```
 
 
 ## この機能が必要になった背景・経緯
-CではN2508の提案により、宣言の前など、複合文のあらゆる箇所にgotoラベルを置けるようになり、C++との互換性が改善した。C++では宣言は文として扱われるため宣言の前には以前からgotoラベルを置くことができた。ただし、C++では複合文の末尾にはgotoラベルを置けないという非互換が残っていた。
+CではN2508の提案により、宣言の前など、複合文のあらゆる箇所にgotoラベルを置けるようになり、C++との互換性が改善した。C++では宣言は文として扱われるため宣言の前には以前からgotoラベルを置くことができた。ただし、C++では複合文の末尾にはgotoラベルを置けないため新しい非互換が生じた。
 
 C++23でこの機能を導入することにより、gotoラベルを置ける場所についての非互換がなくなる。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Kusunose Toru</name>
        <email>kusunose@ironhell.sakura.ne.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>nexttoward -- nexttoward : typo修正</title>
      <link href="https://cpprefjp.github.io/reference/cmath/nexttoward.html"/>
      <id>7e81584d47168b40ffeb38ac1ab0cbd8f5bdc6e3:reference/cmath/nexttoward.md</id>
      <updated>2024-05-17T17:27:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/nexttoward.md b/reference/cmath/nexttoward.md
index 2ede9b204..9e97347cc 100644
--- a/reference/cmath/nexttoward.md
+++ b/reference/cmath/nexttoward.md
@@ -62,7 +62,7 @@ namespace std {
 
 
 ## 戻り値
-パラメータ`x`の値をパラメータ`x`の方向に、表現可能な最小の値だけ進めた値を返す。
+パラメータ`x`の値をパラメータ`y`の方向に、表現可能な最小の値だけ進めた値を返す。
 
 `x`と`y`が等値である場合、`y`を返す。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>piecewise_linear_distribution -- Merge pull request #1277 from cpprefjp/typofix/mix_to_min</title>
      <link href="https://cpprefjp.github.io/reference/random/piecewise_linear_distribution.html"/>
      <id>78f6f64b7865c052d06ef5bf47bd1d964f456c96:reference/random/piecewise_linear_distribution.md</id>
      <updated>2024-05-17T14:30:39+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/piecewise_linear_distribution.md b/reference/random/piecewise_linear_distribution.md
index a213d6de1..4fffc975e 100644
--- a/reference/random/piecewise_linear_distribution.md
+++ b/reference/random/piecewise_linear_distribution.md
@@ -48,7 +48,7 @@ namespace std {
 | [`intervals`](piecewise_linear_distribution/intervals.md) | 区間の数列を取得する             | C++11 |
 | [`densities`](piecewise_linear_distribution/densities.md) | 重み付けの数列を取得する         | C++11 |
 | [`param`](piecewise_linear_distribution/param.md)         | 分布のパラメータを取得／設定する | C++11 |
-| [`mix`](piecewise_linear_distribution/min.md)             | 下限を取得する                 | C++11 |
+| [`min`](piecewise_linear_distribution/min.md)             | 下限を取得する                 | C++11 |
 | [`max`](piecewise_linear_distribution/max.md)             | 上限を取得する                 | C++11 |
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>piecewise_linear_distribution -- Fix typo</title>
      <link href="https://cpprefjp.github.io/reference/random/piecewise_linear_distribution.html"/>
      <id>5871133be244bda206b60a0a3226ea55a0b0ab77:reference/random/piecewise_linear_distribution.md</id>
      <updated>2024-05-17T14:21:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/random/piecewise_linear_distribution.md b/reference/random/piecewise_linear_distribution.md
index a213d6de1..4fffc975e 100644
--- a/reference/random/piecewise_linear_distribution.md
+++ b/reference/random/piecewise_linear_distribution.md
@@ -48,7 +48,7 @@ namespace std {
 | [`intervals`](piecewise_linear_distribution/intervals.md) | 区間の数列を取得する             | C++11 |
 | [`densities`](piecewise_linear_distribution/densities.md) | 重み付けの数列を取得する         | C++11 |
 | [`param`](piecewise_linear_distribution/param.md)         | 分布のパラメータを取得／設定する | C++11 |
-| [`mix`](piecewise_linear_distribution/min.md)             | 下限を取得する                 | C++11 |
+| [`min`](piecewise_linear_distribution/min.md)             | 下限を取得する                 | C++11 |
 | [`max`](piecewise_linear_distribution/max.md)             | 上限を取得する                 | C++11 |
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Kotaro Yoshimoto</name>
        <email>pythagora.yoshimoto@gmail.com</email>
      </author>
    </entry>
  
</feed>
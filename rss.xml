<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2022-04-08T15:04:53.219937</updated>
  <id>22a9454e-4227-4d25-823f-2047b33f88d1</id>

  
    <entry>
      <title>forward_range -- リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/forward_range.html"/>
      <id>d1aa117ed9fddd7610e43b259aa5ba98422fc890:reference/ranges/forward_range.md</id>
      <updated>2022-04-08T23:59:06+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/forward_range.md b/reference/ranges/forward_range.md
index 34ac10997..3c67b3b2a 100644
--- a/reference/ranges/forward_range.md
+++ b/reference/ranges/forward_range.md
@@ -31,14 +31,15 @@ int main() {
   // forward_listはforward_range
   static_assert(ranges::forward_range&amp;lt;forward_list&amp;lt;int&amp;gt;&amp;gt;);
 
-  // istream_viewはforward_rangeではなく、input_range
-  static_assert(!ranges::forward_range&amp;lt;decltype(ranges::istream_view&amp;lt;int&amp;gt;(cin))&amp;gt;);
-  static_assert(ranges::input_range&amp;lt;decltype(ranges::istream_view&amp;lt;int&amp;gt;(cin))&amp;gt;);
+  // basic_istream_viewはforward_rangeではなく、input_range
+  static_assert(!ranges::forward_range&amp;lt;decltype(views::istream&amp;lt;int&amp;gt;(cin))&amp;gt;);
+  static_assert(ranges::input_range&amp;lt;decltype(views::istream&amp;lt;int&amp;gt;(cin))&amp;gt;);
 }
 ```
 * ranges::forward_range[color ff0000]
 * ranges::input_range[link input_range.md]
-* ranges::istream_view[link basic_istream_view.md]
+* basic_istream_view[link basic_istream_view.md]
+* views::istream[link basic_istream_view.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>input_range -- リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/input_range.html"/>
      <id>d1aa117ed9fddd7610e43b259aa5ba98422fc890:reference/ranges/input_range.md</id>
      <updated>2022-04-08T23:59:06+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/input_range.md b/reference/ranges/input_range.md
index 3d4323681..4a718f0ca 100644
--- a/reference/ranges/input_range.md
+++ b/reference/ranges/input_range.md
@@ -28,14 +28,15 @@ namespace std::ranges {
 
 int main() {
   using namespace std;
-  // istream_viewはforward_rangeではなく、input_range
-  static_assert(!ranges::forward_range&amp;lt;decltype(ranges::istream_view&amp;lt;int&amp;gt;(cin))&amp;gt;);
-  static_assert(ranges::input_range&amp;lt;decltype(ranges::istream_view&amp;lt;int&amp;gt;(cin))&amp;gt;);
+  // basic_istream_viewはforward_rangeではなく、input_range
+  static_assert(!ranges::forward_range&amp;lt;decltype(views::istream&amp;lt;int&amp;gt;(cin))&amp;gt;);
+  static_assert(ranges::input_range&amp;lt;decltype(views::istream&amp;lt;int&amp;gt;(cin))&amp;gt;);
 }
 ```
 * ranges::input_range[color ff0000]
 * ranges::forward_range[link forward_range.md]
-* ranges::istream_view[link basic_istream_view.md]
+* basic_istream_view[link basic_istream_view.md]
+* views::istream[link basic_istream_view.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>lazy_split_view -- リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/lazy_split_view.html"/>
      <id>d1aa117ed9fddd7610e43b259aa5ba98422fc890:reference/ranges/lazy_split_view.md</id>
      <updated>2022-04-08T23:59:06+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/lazy_split_view.md b/reference/ranges/lazy_split_view.md
index 812cf2a9a..83c75d6da 100644
--- a/reference/ranges/lazy_split_view.md
+++ b/reference/ranges/lazy_split_view.md
@@ -142,7 +142,7 @@ int main() {
   using namespace std;
   auto iss = istringstream{&amp;#34;1 2 3 1 4 5 6 1 7 8 1 9 1&amp;#34;};
 
-  for (auto inner_range : ranges::istream_view&amp;lt;int&amp;gt;(iss) | views::lazy_split(1)) {
+  for (auto inner_range : views::istream&amp;lt;int&amp;gt;(iss) | views::lazy_split(1)) {
     for (int n : inner_range) {
       std::cout &amp;lt;&amp;lt; n;
     }
@@ -150,6 +150,7 @@ int main() {
   }
 }
 ```
+* views::istream[link basic_istream_view.md]
 * views::lazy_split[color ff0000]
 
 ### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>basic_istream_view -- basic_istream_viewの説明を追加</title>
      <link href="https://cpprefjp.github.io/reference/ranges/basic_istream_view.html"/>
      <id>308b93a2ef135dada2fa976e0c94d9af5319ca53:reference/ranges/basic_istream_view.md</id>
      <updated>2022-04-08T23:56:09+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/basic_istream_view.md b/reference/ranges/basic_istream_view.md
index 6908989a2..7520b6153 100644
--- a/reference/ranges/basic_istream_view.md
+++ b/reference/ranges/basic_istream_view.md
@@ -37,6 +37,9 @@ namespace std::ranges {
 - (2): `basic_istream_view`の、文字の型を`wchar_t`とするエイリアス
 - (4): `basic_istream_view`を生成するカスタマイゼーションポイントオブジェクト
 
+基本的な挙動は[`istream_iterator`](/reference/iterator/istream_iterator.md)と同じで、イテレータが作られるときにストリームから値を1つ読み、インクリメントされるときに次の値を読む。
+ただし、`basic_istream_view`の場合、読んだ値はイテレータではなくRangeオブジェクトに保存されている。
+
 ### Rangeコンセプト
 
 | borrowed | sized | output | input | forward | bidirectional | random_access | contiguous | common | viewable | view |
@@ -67,7 +70,7 @@ concept stream-extractable = requires(basic_istream&amp;lt;CharT, Traits&amp;gt;&amp;amp; is, Val&amp;amp; t)
 | 名前                                                     | 説明                             | 対応バージョン |
 |----------------------------------------------------------|----------------------------------|----------------|
 | [`(constructor)`](basic_istream_view/op_constructor.md.nolink)  | コンストラクタ                   | C++20          |
-| [`begin`](basic_istream_view/begin.md.nolink)                   | 先頭を指すイテレータを取得する   | C++20          |
+| [`begin`](basic_istream_view/begin.md.nolink)                   | ストリームから値を1つ読み、それを指すイテレータを取得する   | C++20          |
 | [`end`](basic_istream_view/end.md.nolink)                       | 番兵を取得する                   | C++20          |
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>format -- formatの説明を追加</title>
      <link href="https://cpprefjp.github.io/reference/format/format.html"/>
      <id>1dd72245548789c1ecc05aaa651094c3209dca1c:reference/format/format.md</id>
      <updated>2022-04-08T23:55:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/format/format.md b/reference/format/format.md
index 87071c218..b847d6fb8 100644
--- a/reference/format/format.md
+++ b/reference/format/format.md
@@ -137,6 +137,8 @@ string s3 = format(&amp;#34;{} {1}&amp;#34;,  &amp;#34;a&amp;#34;, &amp;#34;b&amp;#34;); // コンパイルエラー
 |:-----------|:-------------------|:----------------------------------------------------------------------------------------------------------------|
 | p (省略可) | アドレスを出力する | `&amp;#34;0x&amp;#34; + to_chars(first, last, reinterpret_cast&amp;lt;uintptr_t&amp;gt;(value), 16)`  |
 
+ポインタは`void*`のみサポートする。それ以外のポインタは、`void*`にキャストしなければ出力できない。
+
 ### 例(N4861より)
 
 ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>istream_iterator -- リンク追加</title>
      <link href="https://cpprefjp.github.io/reference/iterator/istream_iterator.html"/>
      <id>0ccf2f0b3e26827cfe526bfdb632a88ee2df3c8b:reference/iterator/istream_iterator.md</id>
      <updated>2022-04-08T23:02:17+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/istream_iterator.md b/reference/iterator/istream_iterator.md
index 97c9fc456..98a9df2ae 100644
--- a/reference/iterator/istream_iterator.md
+++ b/reference/iterator/istream_iterator.md
@@ -91,6 +91,9 @@ int main()
 3
 ```
 
+## 関連項目
+- [`basic_istream_view`](/reference/ranges/basic_istream_view.md): ストリームからデータを読み込むRange
+
 ### 参照
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>basic_istream_view -- リンク追加</title>
      <link href="https://cpprefjp.github.io/reference/ranges/basic_istream_view.html"/>
      <id>0ccf2f0b3e26827cfe526bfdb632a88ee2df3c8b:reference/ranges/basic_istream_view.md</id>
      <updated>2022-04-08T23:02:17+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/basic_istream_view.md b/reference/ranges/basic_istream_view.md
index 805780d98..6908989a2 100644
--- a/reference/ranges/basic_istream_view.md
+++ b/reference/ranges/basic_istream_view.md
@@ -102,6 +102,9 @@ int main() {
 - [ICC](/implementation.md#icc): ?
 - [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
 
+## 関連項目
+- [`istream_iterator`](/reference/iterator/istream_iterator.md): ストリームからデータを読み込む入力イテレータ
+
 ## 参照
 - [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
 - [C++20 ranges](https://techbookfest.org/product/5134506308665344)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sized_range -- sized_rangeの説明を追加</title>
      <link href="https://cpprefjp.github.io/reference/ranges/sized_range.html"/>
      <id>c3bc5be038ff92fca5766d485fdb5732bf1a1a7f:reference/ranges/sized_range.md</id>
      <updated>2022-04-08T21:58:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/sized_range.md b/reference/ranges/sized_range.md
index 3ea230f0b..77e0f6928 100644
--- a/reference/ranges/sized_range.md
+++ b/reference/ranges/sized_range.md
@@ -18,6 +18,10 @@ namespace std::ranges {
 
 `sized_range`なRangeからは[`ranges::size`](size.md)で大きさを取得できる。
 
+`sized_range`ではないRangeとしては、[`iota_view`](iota_view.md)のように無限長のもの、
+[`forward_list`](/reference/forward_list/forward_list.md)のように大きさは決まっているが償却定数時間で求められないもの、
+[`basic_istream_view`](basic_istream_view.md)のように事前に求められないものなどがある。
+
 ## モデル
 型が[`remove_reference_t`](/reference/type_traits/remove_reference.md)`&amp;lt;T&amp;gt;`であるようなlvalue`t`があるとする。`T`が`sized_range`のモデルとなるのは、以下の条件をすべて満たす場合である。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
</feed>
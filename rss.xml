<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2020-06-11T13:13:40.184277</updated>
  <id>8611ddb4-1a96-41ae-bcfa-dbb8fb8d0244</id>

  
    <entry>
      <title>chrono -- chrono : weekday_lastを追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono.html"/>
      <id>a5a511e96f317f3961e7dd194362728f0027c558:reference/chrono.md</id>
      <updated>2020-06-11T22:09:38+09:00</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;chrono&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;chrono&lt;/span&gt;&lt;span class=&#34;cpp cpp11&#34; title=&#34;C++11で追加&#34;&gt;(C++11)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;chrono&amp;gt;&lt;/code&gt;ヘッダは、時間に関するユーティリティとして機能する関数・クラスを提供する。このヘッダに含まれる関数・クラスは、&lt;code&gt;std::chrono&lt;/code&gt;名前空間で定義される。&lt;/p&gt;
&lt;p&gt;このライブラリは、タイムアウト、操作間隔、スケジューリングといった短期間の操作を主な用途として想定している。そのためカレンダー機能としては遥かな過去・未来を扱えるようにはなっていない。&lt;/p&gt;
&lt;h2&gt;時間を表す型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration.html&#34;&gt;duration&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間の間隔(class template)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/time_point.html&#34;&gt;time_point&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間軸上の一点(class template)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/treat_as_floating_point.html&#34;&gt;treat_as_floating_point&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;duration&lt;/code&gt;内部表現の型が浮動小数点型かを判定するためのトレイト(class template)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_values.html&#34;&gt;duration_values&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;duration&lt;/code&gt;内部表現の特別な値を取得するためのトレイト(class template)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;時間の単位を表す型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;nanoseconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ナノ秒を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;microseconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;マイクロ秒を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;milliseconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ミリ秒を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;minutes&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;分を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;hours&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;days&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;weeks&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;週を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;years&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;months&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;時計型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/is_clock.html&#34;&gt;is_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;クロック型かを判定する (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/system_clock.html&#34;&gt;system_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;システム時間のクロック(class)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/steady_clock.html&#34;&gt;steady_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間が逆行しないクロック(class)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/high_resolution_clock.html&#34;&gt;high_resolution_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;高分解能クロック(class)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/utc_clock.html&#34;&gt;utc_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;UTC時間 (協定世界時) のクロック (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/tai_clock.html&#34;&gt;tai_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;TAI時間 (国際原子時) のクロック (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/gps_clock.html&#34;&gt;gps_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;GPS時間のクロック (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/file_clock.html&#34;&gt;file_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ファイル時間を作るために使用されるクロック (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;システム時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/sys_time.html&#34;&gt;sys_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;システム時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/sys_time.html&#34;&gt;sys_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でシステム時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/sys_time.html&#34;&gt;sys_days&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日単位でシステム時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;ローカル時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_time.html&#34;&gt;local_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間を表す擬似的なクロック (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_time.html&#34;&gt;local_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_time.html&#34;&gt;local_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でローカル時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_time.html&#34;&gt;local_days&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日単位でローカル時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;UTC時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/utc_time.html&#34;&gt;utc_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;UTC時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/utc_time.html&#34;&gt;utc_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でUTC時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;TAI時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/tai_time.html&#34;&gt;tai_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;TAI時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/tai_time.html&#34;&gt;tai_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でTAI時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;GPS時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/gps_time.html&#34;&gt;gps_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;GPS時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/gps_time.html&#34;&gt;gps_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でGPS時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;ファイル時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/file_time.html&#34;&gt;file_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ファイル時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;時計時間の変換&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/clock_time_conversion.html&#34;&gt;clock_time_conversion&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時計間の変換方法を組み合わせごとに定義するためのクラス (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/clock_cast.html&#34;&gt;clock_cast&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ほかの時計時間のtime_pointに変換する (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;うるう秒の情報&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/leap_second_info.html&#34;&gt;leap_second_info&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;うるう秒の情報を扱うクラス (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/get_leap_second_info.html&#34;&gt;get_leap_second_info&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した日時までに挿入されたうるう秒の回数を取得する (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;カレンダー型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/last_spec.html&#34;&gt;last_spec&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月の最終日、週の最終日など、文脈に応じた「最後」を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/day.html&#34;&gt;day&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;未規定の月の指定した日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month.html&#34;&gt;month&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月単体の値を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year.html&#34;&gt;year&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;カレンダーの年を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday.html&#34;&gt;weekday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;週の日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_indexed.html&#34;&gt;weekday_indexed&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;N回目の指定した曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_last.html&#34;&gt;weekday_last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;未規定の月の最後の指定した曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_day.md.nolink&#34;&gt;month_day&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月と日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_day_last.md.nolink&#34;&gt;month_day_last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した月の最終日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_weekday.md.nolink&#34;&gt;month_weekday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月の指定したN番目の曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_weekday_last.md.nolink&#34;&gt;month_weekday_last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月の最後の指定した曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year_month.md.nolink&#34;&gt;year_month&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年と月を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year_month_day.html&#34;&gt;year_month_day&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年、月、日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year_month_day_last.md.nolink&#34;&gt;year_month_day_last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年、月、月の最終日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year_month_weekday.md.nolink&#34;&gt;year_month_weekday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年、月、N回目の指定した曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year_month_weekday_last.md.nolink&#34;&gt;year_month_weekday_last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年、月、月の最後の指定した曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;1日内の時間情報&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/time_of_day.md.nolink&#34;&gt;time_of_day&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1日内の時間情報を取得するクラス (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/hh_mm_ss.md.nolink&#34;&gt;hh_mm_ss&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時、分、秒を表すクラス (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/is_am.md.nolink&#34;&gt;is_am&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間が午前かを判定する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/is_pm.md.nolink&#34;&gt;is_pm&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間が午後かを判定する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/make12.md.nolink&#34;&gt;make12&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[1h, 12h]&lt;/code&gt;の時間範囲に変換する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/make24.md.nolink&#34;&gt;make24&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間を午前&lt;code&gt;[0h, 11h]&lt;/code&gt;か午後&lt;code&gt;[12h, 23h]&lt;/code&gt;の範囲に変換する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;タイムゾーン&lt;/h2&gt;
&lt;h3&gt;タイムゾーンのデータベース&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/tzdb.html&#34;&gt;tzdb&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンのデータベース型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/get_tzdb.html&#34;&gt;get_tzdb&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンデータベースを取得する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/tzdb_list.html&#34;&gt;tzdb_list&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンデータベースのリスト (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/get_tzdb_list.html&#34;&gt;get_tzdb_list&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンデータベースのリストを取得する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/locate_zone.html&#34;&gt;locate_zone&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した名前のタイムゾーンを取得する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/current_zone.html&#34;&gt;current_zone&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;現在のタイムゾーンを取得する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;リモートタイムゾーンデータベースのサポート&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/reload_tzdb.html&#34;&gt;reload_tzdb&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;リモートタイムゾーンデータベースを再読み込みする (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/remote_version.html&#34;&gt;remote_version&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;リモートタイムゾーンデータベースの最新バージョン番号を取得する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;例外クラス&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/nonexistent_local_time.html&#34;&gt;nonexistent_local_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;存在しないローカル時間をシステム時間に変換しようとした (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/ambiguous_local_time.html&#34;&gt;ambiguous_local_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間があいまい (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;タイムゾーン&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/sys_info.html&#34;&gt;sys_info&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;システム時間用のタイムゾーン情報 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_info.html&#34;&gt;local_info&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間用のタイムゾーン情報 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/choose.html&#34;&gt;choose&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンを変換する際に、早い時間側と遅い時間側どちらに丸めるかの種類 (enum)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/time_zone.html&#34;&gt;time_zone&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンの変換を扱うクラス (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/zoned_traits.html&#34;&gt;zoned_traits&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーン取得のカスタマイズ用中間インタフェース (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/zoned_time.html&#34;&gt;zoned_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンを考慮した時間軸上の一点を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/zoned_time.html&#34;&gt;zoned_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でタイムゾーンを考慮した時間軸上の一点を表す型 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;うるう秒サポート&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/leap_second.html&#34;&gt;leap_second&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;うるう秒が挿入された日時を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;リンク&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/time_zone_link.html&#34;&gt;time_zone_link&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンの代替名を管理する型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;文字列フォーマット&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local-time-format-t.html&#34;&gt;local-time-format-t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間を文字列フォーマットするために必要な情報をまとめた説明用の型 (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_time_format.html&#34;&gt;local_time_format&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間の文字列フォーマット用オブジェクトを生成する (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/format.html&#34;&gt;format&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列フォーマット&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;文字列解析&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/parse.html&#34;&gt;parse&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日時文字列を解析する入力マニピュレータ (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;カレンダー定数&lt;/h2&gt;
&lt;h3&gt;最後&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/last_spec.html&#34;&gt;last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月の最終日、週の最終日など、文脈に応じた「最後」を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;曜日&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Sunday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Monday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Tuesday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;火曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Wednesday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;水曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Thursday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;木曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Friday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;金曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Saturday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;土曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;月&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;January&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;February&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;2月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;March&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;3月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;April&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;4月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;May&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;5月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;June&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;6月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;July&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;7月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;August&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;8月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;September&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;9月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;October&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;10月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;November&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;11月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;December&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;12月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2661.htm&#34; target=&#34;_blank&#34;&gt;N2661 A Foundation to Sleep On&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0216r0.html&#34; target=&#34;_blank&#34;&gt;P0216R0 C++ Standard Proposal — A Time-Zone Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0355r7.html&#34; target=&#34;_blank&#34;&gt;P0355R7 Extending &lt;code&gt;&amp;lt;chrono&amp;gt;&lt;/code&gt; to Calendars and Time Zones&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator[] -- chrono : weekday_lastを追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/weekday/op_at.html"/>
      <id>a5a511e96f317f3961e7dd194362728f0027c558:reference/chrono/weekday/op_at.md</id>
      <updated>2020-06-11T22:09:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/weekday/op_at.md b/reference/chrono/weekday/op_at.md
index cdad3ca60..a22e9dbf6 100644
--- a/reference/chrono/weekday/op_at.md
+++ b/reference/chrono/weekday/op_at.md
@@ -13,7 +13,7 @@ constexpr weekday_last
   operator[](last_spec) const noexcept;          // (2) C++20
 ```
 * weekday_indexed[link /reference/chrono/weekday_indexed.md]
-* weekday_last[link /reference/chrono/weekday_last.md.nolink]
+* weekday_last[link /reference/chrono/weekday_last.md]
 * last_spec[link /reference/chrono/last_spec.md]
 
 ## 概要
@@ -25,7 +25,7 @@ constexpr weekday_last
 
 ## 戻り値
 - (1) : `{*this, index}`
-- (2) : [`weekday_last`](/reference/chrono/weekday_last.md.nolink)`{*this}`
+- (2) : [`weekday_last`](/reference/chrono/weekday_last.md)`{*this}`
 
 
 ## 例外
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>weekday_last -- chrono : weekday_lastを追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/weekday_last.html"/>
      <id>a5a511e96f317f3961e7dd194362728f0027c558:reference/chrono/weekday_last.md</id>
      <updated>2020-06-11T22:09:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/weekday_last.md b/reference/chrono/weekday_last.md
new file mode 100644
index 000000000..84e865b01
--- /dev/null
+++ b/reference/chrono/weekday_last.md
@@ -0,0 +1,106 @@
+# weekday_last
+* chrono[meta header]
+* std::chrono[meta namespace]
+* class[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  class weekday_last;
+}
+```
+
+## 概要
+`weekday_last`は、月内での指定した最終曜日を表すクラスである。
+
+このクラスは等値比較ができ、[EqualityComparable](/reference/concepts/equality_comparable.md)の要件を満たす。しかし大小比較はできず、LessThanComparable要件は満たさない。
+
+このクラスは、[トリビアルコピー可能](/reference/type_traits/is_trivially_copyable.md)で、かつ[スタンダードレイアウト型](/reference/type_traits/is_standard_layout.md)である。
+
+
+## メンバ関数
+### 構築／コピー／破棄
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`(constructor)`](weekday_last/op_constructor.md) | コンストラクタ | C++20 |
+| `weekday_last&amp;amp; operator=(const weekday_last&amp;amp;) = default;`&amp;lt;br/&amp;gt; `weekday_last&amp;amp; operator=(weekday_last&amp;amp;&amp;amp;) = default;` | 代入演算子 | C++20 |
+
+
+### 観測
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`weekday`](weekday_last/weekday.md) | 曜日を取得する | C++20 |
+| [`ok`](weekday_last/ok.md) | 値が範囲に収まっているか判定する | C++20 |
+
+
+## 非メンバ関数
+### 比較演算
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`operator==`](weekday_last/op_equal.md) | 等値比較を行う | C++20 |
+| `bool operator!=(const weekday_last&amp;amp;, const weekday_last&amp;amp;) noexcept;` | 非等値比較を行う (`==`により使用可能) | C++20 |
+
+
+### 入出力
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`operator&amp;lt;&amp;lt;`](weekday_last/op_ostream.md) | 出力ストリームに出力する | C++20 |
+
+
+## 文字列フォーマット
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`formatter`](weekday_last/formatter.md) | [`std::formatter`](/reference/format/formatter.md)クラスの特殊化 | C++20 |
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main() {
+  // 未規定の年月の、最後の日曜日
+  auto wl1 = chrono::Sunday[chrono::last];
+  chrono::weekday_last wl2{chrono::Sunday};
+  assert(wl1.weekday() == chrono::Sunday);
+  assert(wl1 == wl2);
+
+  // 2020年4月の最後の日曜日を取得する
+  chrono::year_month_weekday_last ymwl = 2020y/4/chrono::Sunday[chrono::last];
+  chrono::sys_days sd{ymwl};
+  chrono::year_month_day date{sd};
+  std::cout &amp;lt;&amp;lt; date &amp;lt;&amp;lt; std::endl;
+}
+```
+* chrono::weekday_last[color ff0000]
+* chrono::Sunday[link weekday_constants.md]
+* chrono::last[link last_spec.md]
+* 2020y[link year/op_y.md]
+* wl1.weekday()[link weekday_indexed/weekday.md]
+* chrono::year_month_weekday_last[link year_month_weekday_last.md.nolink]
+* chrono::sys_days[link sys_time.md]
+* chrono::year_month_day[link year_month_day.md]
+
+### 出力
+```
+2020-04-26
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0 (入出力ストリームなし)
+- [GCC](/implementation.md#gcc): (10.1時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>formatter -- chrono : weekday_lastを追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/weekday_last/formatter.html"/>
      <id>a5a511e96f317f3961e7dd194362728f0027c558:reference/chrono/weekday_last/formatter.md</id>
      <updated>2020-06-11T22:09:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/weekday_last/formatter.md b/reference/chrono/weekday_last/formatter.md
new file mode 100644
index 000000000..b5b722ecd
--- /dev/null
+++ b/reference/chrono/weekday_last/formatter.md
@@ -0,0 +1,77 @@
+# formatter
+* chrono[meta header]
+* std[meta namespace]
+* class[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std {
+  template &amp;lt;class charT&amp;gt;
+  struct formatter&amp;lt;chrono::weekday_last, charT&amp;gt;;
+}
+```
+
+## 概要
+`weekday_last`クラスに対する[`std::formatter`](/reference/format/formatter.md)クラステンプレートの特殊化。
+
+フォーマットフラグとしては、以下を使用できる：
+
+| フォーマットフラグ | 説明 |
+|--------------------|------|
+| `%a` | ロケール依存の曜日の略称 |
+| `%A` | ロケール依存の曜日の完全名 |
+| `%u` | 10進数での月曜を1とするISO曜日番号 (1-7) |
+| `%Ou` | ロケール依存の`%u`の異なる表現 |
+| `%w` | 10進数での日曜を0とするISO曜日番号 (0-6) |
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+#include &amp;lt;format&amp;gt;
+
+namespace chrono = std::chrono;
+
+int main()
+{
+  chrono::weekday_last wl = chrono::Sunday[chrono::last];
+
+  // デフォルトフォーマットはoperator&amp;lt;&amp;lt;と同じ
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;{}&amp;#34;, wl) &amp;lt;&amp;lt; std::endl;
+
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;{:%a}&amp;#34;, wl) &amp;lt;&amp;lt; std::endl; // 曜日の略称
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;{:%A}&amp;#34;, wl) &amp;lt;&amp;lt; std::endl; // 曜日の完全名
+
+  // ロケール依存の出力
+  std::cout &amp;lt;&amp;lt; std::format(std::locale(&amp;#34;ja_JP.UTF-8&amp;#34;), &amp;#34;{}&amp;#34;, wl) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(std::locale(&amp;#34;ja_JP.UTF-8&amp;#34;), &amp;#34;{:%a}&amp;#34;, wl) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(std::locale(&amp;#34;ja_JP.UTF-8&amp;#34;), &amp;#34;{:%A}&amp;#34;, wl) &amp;lt;&amp;lt; std::endl;
+}
+```
+* std::format[link /reference/chrono/format.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* std::locale[link /reference/locale/locale.md]
+
+### 出力
+```
+Sun[last]
+Sun
+Sunday
+日[last]
+日
+日曜日
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): (9.0時点で実装なし)
+- [GCC](/implementation.md#gcc): (9.2時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 関連項目
+- [chronoの`std::format()`](/reference/chrono/format.md) (フォーマットの詳細)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ok -- chrono : weekday_lastを追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/weekday_last/ok.html"/>
      <id>a5a511e96f317f3961e7dd194362728f0027c558:reference/chrono/weekday_last/ok.md</id>
      <updated>2020-06-11T22:09:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/weekday_last/ok.md b/reference/chrono/weekday_last/ok.md
new file mode 100644
index 000000000..11800a94a
--- /dev/null
+++ b/reference/chrono/weekday_last/ok.md
@@ -0,0 +1,55 @@
+# ok
+* chrono[meta header]
+* std::chrono[meta namespace]
+* weekday_last[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr bool ok() const noexcept; // (1) C++20
+```
+
+## 概要
+`weekday_last`オブジェクトが保持する曜日が妥当な範囲内にあるかを判定する。
+
+
+## 戻り値
+コンストラクタで設定されて保持している曜日を表す値`wd_`があるとして、以下を返す：
+
+```cpp
+return wd_.ok();
+```
+* wd_.ok()[link /reference/chrono/weekday/ok.md]
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+
+int main()
+{
+  assert(chrono::Sunday[chrono::last].ok());
+  assert(!(chrono::weekday_last{chrono::weekday{8}}).ok());
+}
+```
+* ok()[color ff0000]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* chrono::weekday[link /reference/chrono/weekday.md]
+* chrono::last[link /reference/chrono/last_spec.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): (9.2時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- chrono : weekday_lastを追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/weekday_last/op_constructor.html"/>
      <id>a5a511e96f317f3961e7dd194362728f0027c558:reference/chrono/weekday_last/op_constructor.md</id>
      <updated>2020-06-11T22:09:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/weekday_last/op_constructor.md b/reference/chrono/weekday_last/op_constructor.md
new file mode 100644
index 000000000..4a667ee18
--- /dev/null
+++ b/reference/chrono/weekday_last/op_constructor.md
@@ -0,0 +1,60 @@
+# コンストラクタ
+* chrono[meta header]
+* std::chrono[meta namespace]
+* weekday_last[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+weekday_last() = default;                    // (1) C++20
+constexpr explicit weekday_last(
+  const chrono::weekday&amp;amp; wd) noexcept;       // (2) C++20
+
+weekday_last(const weekday_last&amp;amp;) = default; // (3) C++20
+weekday_last(weekday_last&amp;amp;&amp;amp;) = default;      // (4) C++20
+```
+* weekday[link /reference/chrono/weekday.md]
+
+## 概要
+- (1) : デフォルトコンストラクタ
+- (2) : 曜日を指定して`weekday_last`オブジェクトを構築する
+- (3) : コピーコンストラクタ
+- (4) : ムーブコンストラクタ
+
+
+## 効果
+- (1) : デフォルト初期化では曜日の未初期化値となり、値初期化では値0 (日曜日) となる
+- (2) : `wd`をメンバ変数として保持する
+
+
+## 例外
+投げない
+
+
+### 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+
+int main() {
+  chrono::weekday_last wl{chrono::Sunday};
+  assert(wl.weekday() == chrono::Sunday);
+}
+```
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* wl.weekday()[link weekday.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): (9.2時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator== -- chrono : weekday_lastを追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/weekday_last/op_equal.html"/>
      <id>a5a511e96f317f3961e7dd194362728f0027c558:reference/chrono/weekday_last/op_equal.md</id>
      <updated>2020-06-11T22:09:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/weekday_last/op_equal.md b/reference/chrono/weekday_last/op_equal.md
new file mode 100644
index 000000000..67378d9f6
--- /dev/null
+++ b/reference/chrono/weekday_last/op_equal.md
@@ -0,0 +1,62 @@
+# operator==
+* chrono[meta header]
+* std::chrono[meta namespace]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  constexpr bool operator==(const weekday_last&amp;amp; x, const weekday_last&amp;amp; y) noexcept; // (1) C++20
+}
+```
+
+## 概要
+`weekday_last`同士の等値比較を行う。
+
+
+## 戻り値
+- (1) :
+
+```cpp
+return x.weekday() == y.weekday();
+```
+* weekday()[link weekday.md]
+
+
+## 例外
+投げない
+
+
+## 備考
+- この演算子により、`operator!=`が使用可能になる
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+
+int main()
+{
+  assert(chrono::Sunday[chrono::last] == chrono::Sunday[chrono::last]);
+  assert(chrono::Sunday[chrono::last] != chrono::Monday[chrono::last]);
+}
+```
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* chrono::Monday[link /reference/chrono/weekday_constants.md]
+* chrono::last[link /reference/chrono/last_spec.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): (9.2時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;&lt; -- chrono : weekday_lastを追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/weekday_last/op_ostream.html"/>
      <id>a5a511e96f317f3961e7dd194362728f0027c558:reference/chrono/weekday_last/op_ostream.md</id>
      <updated>2020-06-11T22:09:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/weekday_last/op_ostream.md b/reference/chrono/weekday_last/op_ostream.md
new file mode 100644
index 000000000..476b87364
--- /dev/null
+++ b/reference/chrono/weekday_last/op_ostream.md
@@ -0,0 +1,62 @@
+# operator&amp;lt;&amp;lt;
+* chrono[meta header]
+* std::chrono[meta namespace]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  template &amp;lt;class charT, class traits&amp;gt;
+  std::basic_ostream&amp;lt;charT, traits&amp;gt;&amp;amp;
+    operator&amp;lt;&amp;lt;(std::basic_ostream&amp;lt;charT, traits&amp;gt;&amp;amp; os, const weekday_last&amp;amp; wdl); // (1) C++20
+}
+```
+
+## 概要
+`weekday_last`オブジェクトを出力ストリームに出力する。
+
+
+## 戻り値
+便宜上のリテラルキャスト`STATICALLY-WIDEN`を導入する。`STATICALLY-WIDEN&amp;lt;charT&amp;gt;(&amp;#34;...&amp;#34;)`は、`charT`が`char`である場合は`&amp;#34;...&amp;#34;`、`charT`が`wchar_t`である場合は`L&amp;#34;...&amp;#34;`を意味する。
+
+- (1) : 以下と等価：
+    ```cpp
+    return os &amp;lt;&amp;lt; format(os.getloc(), STATICALLY-WIDEN&amp;lt;charT&amp;gt;(&amp;#34;{}[last]&amp;#34;), wdl.weekday());
+    ```
+    * format[link /reference/chrono/format.md]
+    * wdl.weekday()[link weekday.md]
+    * os.getloc()[link /reference/ios/ios_base/getloc.md]
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+
+int main()
+{
+  std::cout &amp;lt;&amp;lt; chrono::Sunday[chrono::last] &amp;lt;&amp;lt; std::endl;
+}
+```
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* chrono::last[link /reference/chrono/last_spec.md]
+
+### 出力
+```
+Sun[last]
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): (9.0時点で実装なし)
+- [GCC](/implementation.md#gcc): (9.2時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 関連項目
+- [chronoの`std::format()`](/reference/chrono/format.md) (フォーマットの詳細)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>weekday -- chrono : weekday_lastを追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/weekday_last/weekday.html"/>
      <id>a5a511e96f317f3961e7dd194362728f0027c558:reference/chrono/weekday_last/weekday.md</id>
      <updated>2020-06-11T22:09:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/weekday_last/weekday.md b/reference/chrono/weekday_last/weekday.md
new file mode 100644
index 000000000..216b87776
--- /dev/null
+++ b/reference/chrono/weekday_last/weekday.md
@@ -0,0 +1,53 @@
+# weekday
+* chrono[meta header]
+* std::chrono[meta namespace]
+* weekday_last[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr chrono::weekday weekday() const noexcept; // (1) C++20
+```
+* chrono::weekday[link /reference/chrono/weekday.md]
+
+## 概要
+曜日を取得する。
+
+
+## 戻り値
+コンストラクタで設定されて保持している[`weekday`](/reference/chrono/weekday.md)型オブジェクトを返す。
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+
+int main()
+{
+  chrono::weekday_last wl = chrono::Sunday[chrono::last];
+  chrono::weekday w = wl.weekday();
+
+  assert(w == chrono::Sunday);
+}
+```
+* weekday()[color ff0000]
+* chrono::weekday[link /reference/chrono/weekday.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* chrono::last[link /reference/chrono/last_spec.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): (9.2時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ok -- weekday_indexed::ok : 誤字修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/weekday_indexed/ok.html"/>
      <id>b6ecef3e939962a472991e43918065dd189a4b8b:reference/chrono/weekday_indexed/ok.md</id>
      <updated>2020-06-11T21:58:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/weekday_indexed/ok.md b/reference/chrono/weekday_indexed/ok.md
index aba5dfc0e..5e73b871a 100644
--- a/reference/chrono/weekday_indexed/ok.md
+++ b/reference/chrono/weekday_indexed/ok.md
@@ -10,7 +10,7 @@ constexpr bool ok() const noexcept; // (1) C++20
 ```
 
 ## 概要
-`weekday_index`オブジェクトが保持する曜日とインデックスが妥当な範囲内にあるかを判定する。
+`weekday_indexed`オブジェクトが保持する曜日とインデックスが妥当な範囲内にあるかを判定する。
 
 
 ## 戻り値
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>状態を持たないラムダ式を、デフォルト構築可能、代入可能とする -- 状態を持たないラムダ式を、デフォルト構築可能、代入可能とする : サンプルコードを修正</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/default_constructible_and_assignable_stateless_lambdas.html"/>
      <id>b19e4343d6ae014f96b138d81526ad08468e011f:lang/cpp20/default_constructible_and_assignable_stateless_lambdas.md</id>
      <updated>2020-06-11T15:56:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/default_constructible_and_assignable_stateless_lambdas.md b/lang/cpp20/default_constructible_and_assignable_stateless_lambdas.md
index 402a55087..54c60d3ce 100644
--- a/lang/cpp20/default_constructible_and_assignable_stateless_lambdas.md
+++ b/lang/cpp20/default_constructible_and_assignable_stateless_lambdas.md
@@ -110,11 +110,14 @@ void close_handle(handle_t*) {
   std::cout &amp;lt;&amp;lt; &amp;#34;The handle was closed&amp;#34; &amp;lt;&amp;lt; std::endl;
 }
 
-int n{};
+handle_t get_handle() {
+  static int n{};
+  return &amp;amp;n;
+}
 
 int main()
 {
-  handle_t h = &amp;amp;n;
+  handle_t h = get_handle();
   std::unique_ptr&amp;lt;handle_t, decltype([](auto h) {close_handle(h);})&amp;gt; handle{&amp;amp;h};
 }
 ```
@@ -151,7 +154,7 @@ set1 = set2;  // C++17まではコンパイルエラー
 ラムダ式は関数オブジェクトを生成する糖衣構文であるが、これらのことは対応する関数オブジェクトを直接書いた場合と一貫しておらず不便であるため、状態を持たないラムダ式に限ってデフォルト構築と代入が可能になるように変更された。
 
 C++20では同時に[評価されない文脈にラムダ式を書くことができるようになった](./wording_for_lambdas_in_unevaluated_contexts.md)ため、この様な場合にラムダ式のクロージャ型を直接取得し渡すことができ、余計なコードをほとんど削減することができるようになる。
-。
+
 ## 関連項目
 - [評価されない文脈でのラムダ式](./wording_for_lambdas_in_unevaluated_contexts.md)
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>weekday_indexed -- weekday_indexed : 出力関係を追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/weekday_indexed.html"/>
      <id>dcf96158616c9d5a8f06fd3aa4671c1d91fe957c:reference/chrono/weekday_indexed.md</id>
      <updated>2020-06-10T17:10:30+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/weekday_indexed.md b/reference/chrono/weekday_indexed.md
index f6edad3d9..ae9f591c3 100644
--- a/reference/chrono/weekday_indexed.md
+++ b/reference/chrono/weekday_indexed.md
@@ -51,15 +51,14 @@ Nの妥当な範囲は`[1, 5]`である。0ベースではないことに注意
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`operator&amp;lt;&amp;lt;`](weekday_indexed/op_ostream.md.nolink)   | 出力ストリームに出力する | C++20 |
-| [`from_stream`](weekday_indexed/from_stream.md.nolink) | フォーマット指定して入力ストリームから入力する | C++20 |
+| [`operator&amp;lt;&amp;lt;`](weekday_indexed/op_ostream.md) | 出力ストリームに出力する | C++20 |
 
 
 ## 文字列フォーマット
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`formatter`](weekday_indexed/formatter.md.nolink) | [`std::formatter`](/reference/format/formatter.md)クラスの特殊化 | C++20 |
+| [`formatter`](weekday_indexed/formatter.md) | [`std::formatter`](/reference/format/formatter.md)クラスの特殊化 | C++20 |
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>formatter -- weekday_indexed : 出力関係を追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/weekday_indexed/formatter.html"/>
      <id>dcf96158616c9d5a8f06fd3aa4671c1d91fe957c:reference/chrono/weekday_indexed/formatter.md</id>
      <updated>2020-06-10T17:10:30+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/weekday_indexed/formatter.md b/reference/chrono/weekday_indexed/formatter.md
new file mode 100644
index 000000000..ebf23af1a
--- /dev/null
+++ b/reference/chrono/weekday_indexed/formatter.md
@@ -0,0 +1,75 @@
+# formatter
+* chrono[meta header]
+* std[meta namespace]
+* class[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std {
+  template &amp;lt;class charT&amp;gt;
+  struct formatter&amp;lt;chrono::weekday_indexed, charT&amp;gt;;
+}
+```
+
+## 概要
+`weekday_indexed`クラスに対する[`std::formatter`](/reference/format/formatter.md)クラステンプレートの特殊化。
+
+フォーマットフラグとしては、以下を使用できる：
+
+| フォーマットフラグ | 説明 |
+|--------------------|------|
+| `%a` | ロケール依存の曜日の略称 |
+| `%A` | ロケール依存の曜日の完全名 |
+| `%u` | 10進数での月曜を1とするISO曜日番号 (1-7) |
+| `%Ou` | ロケール依存の`%u`の異なる表現 |
+| `%w` | 10進数での日曜を0とするISO曜日番号 (0-6) |
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+#include &amp;lt;format&amp;gt;
+
+namespace chrono = std::chrono;
+
+int main()
+{
+  // デフォルトフォーマットはoperator&amp;lt;&amp;lt;と同じ
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;{}&amp;#34;, chrono::Sunday[1]) &amp;lt;&amp;lt; std::endl;
+
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;{:%a}&amp;#34;, chrono::Sunday[1]) &amp;lt;&amp;lt; std::endl; // 曜日の略称
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;{:%A}&amp;#34;, chrono::Sunday[1]) &amp;lt;&amp;lt; std::endl; // 曜日の完全名
+
+  // ロケール依存の出力
+  std::cout &amp;lt;&amp;lt; std::format(std::locale(&amp;#34;ja_JP.UTF-8&amp;#34;), &amp;#34;{}&amp;#34;, chrono::Sunday[1]) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(std::locale(&amp;#34;ja_JP.UTF-8&amp;#34;), &amp;#34;{:%a}&amp;#34;, chrono::Sunday[1]) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(std::locale(&amp;#34;ja_JP.UTF-8&amp;#34;), &amp;#34;{:%A}&amp;#34;, chrono::Sunday[1]) &amp;lt;&amp;lt; std::endl;
+}
+```
+* std::format[link /reference/chrono/format.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* std::locale[link /reference/locale/locale.md]
+
+### 出力
+```
+Sun[1]
+Sun
+Sunday
+日[1]
+日
+日曜日
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): (9.0時点で実装なし)
+- [GCC](/implementation.md#gcc): (9.2時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 関連項目
+- [chronoの`std::format()`](/reference/chrono/format.md) (フォーマットの詳細)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;&lt; -- weekday_indexed : 出力関係を追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/weekday_indexed/op_ostream.html"/>
      <id>dcf96158616c9d5a8f06fd3aa4671c1d91fe957c:reference/chrono/weekday_indexed/op_ostream.md</id>
      <updated>2020-06-10T17:10:30+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/weekday_indexed/op_ostream.md b/reference/chrono/weekday_indexed/op_ostream.md
new file mode 100644
index 000000000..734ef2c0b
--- /dev/null
+++ b/reference/chrono/weekday_indexed/op_ostream.md
@@ -0,0 +1,66 @@
+# operator&amp;lt;&amp;lt;
+* chrono[meta header]
+* std::chrono[meta namespace]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  template &amp;lt;class charT, class traits&amp;gt;
+  std::basic_ostream&amp;lt;charT, traits&amp;gt;&amp;amp;
+    operator&amp;lt;&amp;lt;(std::basic_ostream&amp;lt;charT, traits&amp;gt;&amp;amp; os, const weekday_indexed&amp;amp; wdi); // (1) C++20
+}
+```
+
+## 概要
+`weekday_indexed`オブジェクトを出力ストリームに出力する。
+
+
+## 戻り値
+便宜上のリテラルキャスト`STATICALLY-WIDEN`を導入する。`STATICALLY-WIDEN&amp;lt;charT&amp;gt;(&amp;#34;...&amp;#34;)`は、`charT`が`char`である場合は`&amp;#34;...&amp;#34;`、`charT`が`wchar_t`である場合は`L&amp;#34;...&amp;#34;`を意味する。
+
+- (1) : 以下と等価：
+    ```cpp
+    auto i = wdi.index();
+    return os &amp;lt;&amp;lt; (i &amp;gt;= 1 &amp;amp;&amp;amp; i &amp;lt;= 5 ?
+      format(os.getloc(), STATICALLY-WIDEN&amp;lt;charT&amp;gt;(&amp;#34;{}[{}]&amp;#34;), wdi.weekday(), i) :
+      format(os.getloc(), STATICALLY-WIDEN&amp;lt;charT&amp;gt;(&amp;#34;{}[{} is not a valid index]&amp;#34;),
+             wdi.weekday(), i));
+    ```
+    * wdi.index()[link index.md]
+    * format[link /reference/chrono/format.md]
+    * wdi.weekday()[link weekday.md]
+    * os.getloc()[link /reference/ios/ios_base/getloc.md]
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+
+int main()
+{
+  std::cout &amp;lt;&amp;lt; chrono::Sunday[1] &amp;lt;&amp;lt; std::endl;
+}
+```
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+
+### 出力
+```
+Sun[1]
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): (9.0時点で実装なし)
+- [GCC](/implementation.md#gcc): (9.2時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 関連項目
+- [chronoの`std::format()`](/reference/chrono/format.md) (フォーマットの詳細)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>weekday_indexed -- weekday_indexed : operator==を追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/weekday_indexed.html"/>
      <id>f7ea4112a2582ff7de8831b50d0c3aaf9061dc47:reference/chrono/weekday_indexed.md</id>
      <updated>2020-06-10T16:58:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/weekday_indexed.md b/reference/chrono/weekday_indexed.md
index 2f17d01d0..f6edad3d9 100644
--- a/reference/chrono/weekday_indexed.md
+++ b/reference/chrono/weekday_indexed.md
@@ -43,7 +43,7 @@ Nの妥当な範囲は`[1, 5]`である。0ベースではないことに注意
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`operator==`](weekday_indexed/op_equal.md.nolink) | 等値比較を行う | C++20 |
+| [`operator==`](weekday_indexed/op_equal.md) | 等値比較を行う | C++20 |
 | `bool operator!=(const weekday_indexed&amp;amp;, const weekday_indexed&amp;amp;) noexcept;` | 非等値比較を行う (`==`により使用可能) | C++20 |
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator== -- weekday_indexed : operator==を追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/weekday_indexed/op_equal.html"/>
      <id>f7ea4112a2582ff7de8831b50d0c3aaf9061dc47:reference/chrono/weekday_indexed/op_equal.md</id>
      <updated>2020-06-10T16:58:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/weekday_indexed/op_equal.md b/reference/chrono/weekday_indexed/op_equal.md
new file mode 100644
index 000000000..168cc8c15
--- /dev/null
+++ b/reference/chrono/weekday_indexed/op_equal.md
@@ -0,0 +1,63 @@
+# operator==
+* chrono[meta header]
+* std::chrono[meta namespace]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  constexpr bool operator==(const weekday_indexed&amp;amp; x, const weekday_indexed&amp;amp; y) noexcept; // (1) C++20
+}
+```
+
+## 概要
+`weekday_indexed`同士の等値比較を行う。
+
+
+## 戻り値
+- (1) :
+
+```cpp
+return x.weekday() == y.weekday() &amp;amp;&amp;amp; x.index() == y.index();
+```
+* weekday()[link weekday.md]
+* index()[link index.md]
+
+
+## 例外
+投げない
+
+
+## 備考
+- この演算子により、`operator!=`が使用可能になる
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+
+int main()
+{
+  assert(chrono::Sunday[1] == chrono::Sunday[1]);
+  assert(chrono::Sunday[1] != chrono::Sunday[2]);
+  assert(chrono::Sunday[1] != chrono::Monday[1]);
+}
+```
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* chrono::Monday[link /reference/chrono/weekday_constants.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): (9.2時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
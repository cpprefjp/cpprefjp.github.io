<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2021-09-02T18:55:53.376172</updated>
  <id>e7b80fda-d89c-419d-a67d-7adba2cb3c64</id>

  
    <entry>
      <title>common_iterator -- リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/common_iterator.html"/>
      <id>1f4f00dca326715b3360448876d30de85756652e:reference/iterator/common_iterator.md</id>
      <updated>2021-09-03T03:38:05+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/common_iterator.md b/reference/iterator/common_iterator.md
index 8231e1221..2d8df7fa5 100644
--- a/reference/iterator/common_iterator.md
+++ b/reference/iterator/common_iterator.md
@@ -113,7 +113,7 @@ int main() {
 }
 ```
 * std::common_iterator[color ff0000]
-* views::iota[link /reference/ranges/iota_view.md.nolink]
+* views::iota[link /reference/ranges/iota_view.md]
 * views::take[link /reference/ranges/take_view.md.nolink]
 * iterator_t[link /reference/ranges/iterator_t.md]
 * sentinel_t[link /reference/ranges/sentinel_t.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/common_iterator/op_constructor.html"/>
      <id>1f4f00dca326715b3360448876d30de85756652e:reference/iterator/common_iterator/op_constructor.md</id>
      <updated>2021-09-03T03:38:05+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/common_iterator/op_constructor.md b/reference/iterator/common_iterator/op_constructor.md
index cf73a0fd6..0a9ea28db 100644
--- a/reference/iterator/common_iterator/op_constructor.md
+++ b/reference/iterator/common_iterator/op_constructor.md
@@ -65,7 +65,7 @@ int main() {
 }
 ```
 * std::common_iterator[color ff0000]
-* views::iota[link /reference/ranges/iota_view.md.nolink]
+* views::iota[link /reference/ranges/iota_view.md]
 * views::take[link /reference/ranges/take_view.md.nolink]
 * iterator_t[link /reference/ranges/iterator_t.md]
 * sentinel_t[link /reference/ranges/sentinel_t.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator* -- リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/common_iterator/op_deref.html"/>
      <id>1f4f00dca326715b3360448876d30de85756652e:reference/iterator/common_iterator/op_deref.md</id>
      <updated>2021-09-03T03:38:05+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/common_iterator/op_deref.md b/reference/iterator/common_iterator/op_deref.md
index c2b44439b..9c257a189 100644
--- a/reference/iterator/common_iterator/op_deref.md
+++ b/reference/iterator/common_iterator/op_deref.md
@@ -46,7 +46,7 @@ int main() {
 }
 ```
 * *ci[color ff0000]
-* views::iota[link /reference/ranges/iota_view.md.nolink]
+* views::iota[link /reference/ranges/iota_view.md]
 * views::take[link /reference/ranges/take_view.md.nolink]
 * iterator_t[link /reference/ranges/iterator_t.md]
 * sentinel_t[link /reference/ranges/sentinel_t.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator== -- リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/common_iterator/op_equal.html"/>
      <id>1f4f00dca326715b3360448876d30de85756652e:reference/iterator/common_iterator/op_equal.md</id>
      <updated>2021-09-03T03:38:05+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/common_iterator/op_equal.md b/reference/iterator/common_iterator/op_equal.md
index c7e575ccb..b38ec25e0 100644
--- a/reference/iterator/common_iterator/op_equal.md
+++ b/reference/iterator/common_iterator/op_equal.md
@@ -84,7 +84,7 @@ int main() {
   std::cout &amp;lt;&amp;lt; (ci != ce) &amp;lt;&amp;lt; std::endl;
 }
 ```
-* views::iota[link /reference/ranges/iota_view.md.nolink]
+* views::iota[link /reference/ranges/iota_view.md]
 * views::take[link /reference/ranges/take_view.md.nolink]
 * iterator_t[link /reference/ranges/iterator_t.md]
 * sentinel_t[link /reference/ranges/sentinel_t.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator++ -- リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/common_iterator/op_increment.html"/>
      <id>1f4f00dca326715b3360448876d30de85756652e:reference/iterator/common_iterator/op_increment.md</id>
      <updated>2021-09-03T03:38:05+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/common_iterator/op_increment.md b/reference/iterator/common_iterator/op_increment.md
index 695f366a8..a2736cd30 100644
--- a/reference/iterator/common_iterator/op_increment.md
+++ b/reference/iterator/common_iterator/op_increment.md
@@ -63,7 +63,7 @@ int main() {
 }
 ```
 * ++ci[color ff0000]
-* views::iota[link /reference/ranges/iota_view.md.nolink]
+* views::iota[link /reference/ranges/iota_view.md]
 * views::take[link /reference/ranges/take_view.md.nolink]
 * iterator_t[link /reference/ranges/iterator_t.md]
 * sentinel_t[link /reference/ranges/sentinel_t.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is-integer-like -- リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/is_integer_like.html"/>
      <id>1f4f00dca326715b3360448876d30de85756652e:reference/iterator/is_integer_like.md</id>
      <updated>2021-09-03T03:38:05+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/is_integer_like.md b/reference/iterator/is_integer_like.md
index b4774a8d8..d67494342 100644
--- a/reference/iterator/is_integer_like.md
+++ b/reference/iterator/is_integer_like.md
@@ -61,7 +61,7 @@ namespace std {
 ## 関連項目
 
 - [`weakly_incrementable`](weakly_incrementable.md)
-- [`iota_view`](/reference/ranges/iota_view.md.nolink)
+- [`iota_view`](/reference/ranges/iota_view.md)
 
 ## 参照
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>forward_range -- リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/forward_range.html"/>
      <id>1f4f00dca326715b3360448876d30de85756652e:reference/ranges/forward_range.md</id>
      <updated>2021-09-03T03:38:05+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/forward_range.md b/reference/ranges/forward_range.md
index 759b43c4e..be1d54309 100644
--- a/reference/ranges/forward_range.md
+++ b/reference/ranges/forward_range.md
@@ -38,7 +38,7 @@ int main() {
 ```
 * ranges::forward_range[color ff0000]
 * ranges::input_range[link input_range.md]
-* ranges::istream_view[link istream_view.md.nolink]
+* ranges::istream_view[link basic_istream_view.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>input_range -- リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/input_range.html"/>
      <id>1f4f00dca326715b3360448876d30de85756652e:reference/ranges/input_range.md</id>
      <updated>2021-09-03T03:38:05+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/input_range.md b/reference/ranges/input_range.md
index c506b285d..3e21ad671 100644
--- a/reference/ranges/input_range.md
+++ b/reference/ranges/input_range.md
@@ -35,7 +35,7 @@ int main() {
 ```
 * ranges::input_range[color ff0000]
 * ranges::forward_range[link forward_range.md]
-* ranges::istream_view[link istream_view.md.nolink]
+* ranges::istream_view[link basic_istream_view.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ranges -- &lt;ranges&gt; Rangeファクトリを追加 #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges.html"/>
      <id>e68063df071c44dfda70087528f3cd2e8840fe79:reference/ranges.md</id>
      <updated>2021-09-03T03:21:27+09:00</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;ranges&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;ranges&lt;/span&gt;&lt;span class=&#34;cpp cpp20&#34; title=&#34;C++20で追加&#34;&gt;(C++20)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;ranges&amp;gt;&lt;/code&gt; では、イテレータの組ではなく、コンテナや配列、部分的なコンテナなどを扱う範囲ライブラリを提供する。&lt;/p&gt;
&lt;p&gt;C++17までは、標準アルゴリズム関数はイテレータの組を扱い、範囲を直接扱ってはいなかった。
範囲ライブラリはBoost.Rangeやrange-v3などで実績があり、C++標準にも取り込まれることになった。&lt;/p&gt;
&lt;h2&gt;範囲アクセス&lt;/h2&gt;
&lt;p&gt;これらの機能は従来&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/iterator.html&#34;&gt;&amp;lt;iterator&amp;gt;&lt;/a&gt;&lt;/code&gt;でフリー関数として提供されていた。
C++20では関数によるカスタマイゼーションポイントの問題点を解消するため、関数オブジェクトとして再実装されている。
互換性を維持するために従来の関数も残っているが、これらのカスタマイゼーションポイントオブジェクトを使用することが推奨される。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/begin.html&#34;&gt;begin&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の先頭を指すイテレータを取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/end.html&#34;&gt;end&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の末尾の次を指すイテレータもしくは番兵を取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/cbegin.html&#34;&gt;cbegin&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の先頭を指す読み取り専用イテレータを取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/cend.html&#34;&gt;cend&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の末尾の次を指す読み取り専用イテレータもしくは番兵を取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/rbegin.html&#34;&gt;rbegin&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の末尾を指す逆イテレータを取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/rend.html&#34;&gt;rend&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の先頭の前を指す逆イテレータもしくは番兵を取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/crbegin.html&#34;&gt;crbegin&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の末尾を指す読み取り専用逆イテレータを取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/crend.html&#34;&gt;crend&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の先頭の前を指す読み取り専用逆イテレータもしくは番兵を取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/size.html&#34;&gt;size&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の要素数を取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/ssize.html&#34;&gt;ssize&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の要素数を、符号付き整数型で取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/empty.html&#34;&gt;empty&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲が空かどうかを判定する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/data.html&#34;&gt;data&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の要素配列へのポインタを取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/cdata.html&#34;&gt;cdata&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の要素配列への読み取り専用ポインタを取得する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;範囲に関連する型へのアクセス&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/iterator_t.html&#34;&gt;iterator_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲のイテレータ型を取得する (alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/sentinel_t.html&#34;&gt;sentinel_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の番兵型を取得する (alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/range_difference_t.html&#34;&gt;range_difference_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲のイテレータの差の型を取得する (alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/range_size_t.html&#34;&gt;range_size_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲のサイズの型を取得する(alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/range_value_t.html&#34;&gt;range_value_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の要素の型を取得する (alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/range_reference_t.html&#34;&gt;range_reference_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の要素の参照型を取得する (alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/range_rvalue_reference_t.html&#34;&gt;range_rvalue_reference_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の要素の右辺値参照型を取得する (alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;範囲コンセプト&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/range.html&#34;&gt;range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲を定義するコンセプト (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/borrowed_range.html&#34;&gt;borrowed_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;所有権を持たない範囲 (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/sized_range.html&#34;&gt;sized_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;サイズを一定時間で求められる範囲 (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/view.html&#34;&gt;view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビューである範囲 (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/output_range.html&#34;&gt;output_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;イテレータが出力イテレータである範囲 (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/input_range.html&#34;&gt;input_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;イテレータが入力イテレータである範囲 (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/forward_range.html&#34;&gt;forward_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;イテレータが前進イテレータである範囲 (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/bidirectional_range.html&#34;&gt;bidirectional_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;イテレータが双方向イテレータである範囲 (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/random_access_range.html&#34;&gt;random_access_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;イテレータがランダムアクセスイテレータである範囲 (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/contiguous_range.html&#34;&gt;contiguous_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;イテレータが隣接イテレータである範囲 (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/common_range.html&#34;&gt;common_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;イテレータと番兵の型が等しい範囲 (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/viewable_range.html&#34;&gt;viewable_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビューに変換できる範囲 (concept)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;カスタマイゼーションポイント&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/enable_borrowed_range.html&#34;&gt;enable_borrowed_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲を&lt;code&gt;borrowed_range&lt;/code&gt;にする (variable template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/enable_view.html&#34;&gt;enable_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲を&lt;code&gt;view&lt;/code&gt;にする (variable template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/disable_sized_range.html&#34;&gt;disable_sized_range&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲を&lt;code&gt;sized_range&lt;/code&gt;にならないようにする (variable template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;ビューインターフェース&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/view_base.html&#34;&gt;view_base&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;基底クラスとすることで&lt;code&gt;view&lt;/code&gt;となるタグ型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/view_interface.html&#34;&gt;view_interface&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ビューの基底クラスとして推奨されるクラス (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;部分範囲&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/subrange_kind.html&#34;&gt;subrange_kind&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;部分範囲の種類を表す列挙体 (enum class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/subrange.html&#34;&gt;subrange&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;イテレータペアを範囲として扱う (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;ダングリングイテレータハンドリング&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/dangling.html&#34;&gt;dangling&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ダングリングイテレータ、ダングリング範囲を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/borrowed_iterator_t.html&#34;&gt;borrowed_iterator_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲が&lt;code&gt;borrowed_range&lt;/code&gt;ではないとき&lt;code&gt;dangling&lt;/code&gt;となるイテレータ (alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/borrowed_subrange_t.html&#34;&gt;borrowed_subrange_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲が&lt;code&gt;borrowed_range&lt;/code&gt;ではないとき&lt;code&gt;dangling&lt;/code&gt;となる部分範囲 (alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;範囲ファクトリ&lt;/h2&gt;
&lt;h3&gt;empty view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/empty_view.html&#34;&gt;empty_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;空の範囲 (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/empty_view.html&#34;&gt;empty&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;empty_view&lt;/code&gt;を生成する (variable template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;single view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/single_view.html&#34;&gt;single_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した値1つからなる範囲 (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/single_view.html&#34;&gt;single&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;single_view&lt;/code&gt;を生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;iota view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/iota_view.html&#34;&gt;iota_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;単調増加列である範囲 (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/iota_view.html&#34;&gt;iota&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;iota_view&lt;/code&gt;を生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;istream view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/basic_istream_view.html&#34;&gt;basic_istream_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;入力ストリームから値を読む範囲 (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/basic_istream_view.html&#34;&gt;istream_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;basic_istream_view&lt;/code&gt;を生成する (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;範囲アダプタ&lt;/h2&gt;
&lt;h3&gt;all view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/ref_view.md.nolink&#34;&gt;ref_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲への参照として振る舞うビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/all.md.nolink&#34;&gt;all&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲への参照として振る舞うビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/all_t.md.nolink&#34;&gt;all_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;all&lt;/code&gt;の戻り値型 (alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;filter view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/filter_view.md.nolink&#34;&gt;filter_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した条件を満たす要素だけを集めるビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/filter.md.nolink&#34;&gt;filter&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した条件を満たす要素だけを集めるビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;transform view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/transform_view.md.nolink&#34;&gt;transform_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した関数で各要素を変換するビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/transform.md.nolink&#34;&gt;transform&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した関数で各要素を変換するビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;take view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/take_view.md.nolink&#34;&gt;take_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;先頭から指定した個数だけ取り出すビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/take.md.nolink&#34;&gt;take&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;先頭から指定した個数だけ取り出すビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;take while view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/take_while_view.md.nolink&#34;&gt;take_while_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;先頭から指定した条件を満たす範囲を取り出すビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/take_while.md.nolink&#34;&gt;take_while&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;先頭から指定した条件を満たす範囲を取り出すビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;drop view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/drop_view.md.nolink&#34;&gt;drop_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;先頭から指定した個数だけ除外するビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/drop.md.nolink&#34;&gt;drop&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;先頭から指定した個数だけ除外するビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;drop while view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/drop_while_view.md.nolink&#34;&gt;drop_while_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;先頭から指定した条件を満たす範囲を除外するビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/drop_while.md.nolink&#34;&gt;drop_while&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;先頭から指定した条件を満たす範囲を除外するビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;join view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/join_view.md.nolink&#34;&gt;join_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ネストされた範囲を平坦にするビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/join.md.nolink&#34;&gt;join&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ネストされた範囲を平坦にするビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;split view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/split_view.md.nolink&#34;&gt;split_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲を指定したデリミタで分割するビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/split.md.nolink&#34;&gt;split&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲を指定したデリミタで分割するビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;counted view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/counted.md.nolink&#34;&gt;counted&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;イテレータを指定した数だけ進めるビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;common view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/common_view.md.nolink&#34;&gt;common_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;common_range&lt;/code&gt;にしたビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/common.md.nolink&#34;&gt;common&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;common_range&lt;/code&gt;なビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;reverse view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/reverse_view.md.nolink&#34;&gt;reverse_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;逆順のビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/reverse.md.nolink&#34;&gt;reverse&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;逆順のビューを生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;elements view&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/elements_view.md.nolink&#34;&gt;elements_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;第n要素を集めたビュー (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/keys_view.md.nolink&#34;&gt;keys_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;第0要素を集めたビュー (alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/values_view.md.nolink&#34;&gt;values_view&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;第1要素を集めたビュー (alias template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/elements.md.nolink&#34;&gt;elements&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;elements_view&lt;/code&gt;を生成する (variable template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/keys.md.nolink&#34;&gt;keys&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;keys_view&lt;/code&gt;を生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/ranges/values.md.nolink&#34;&gt;values&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;values_view&lt;/code&gt;を生成する (customization point object)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++20&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: 13.0.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: 10.1.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ?&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: 2019 Update 10&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;関連項目&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/iterator.html&#34;&gt;&amp;lt;iterator&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/concepts.html&#34;&gt;&amp;lt;concepts&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://timsong-cpp.github.io/cppwp/n4861/ranges&#34; target=&#34;_blank&#34;&gt;N4861 24 Ranges library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://techbookfest.org/product/5134506308665344&#34; target=&#34;_blank&#34;&gt;C++20 ranges&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>basic_istream_view -- &lt;ranges&gt; Rangeファクトリを追加 #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges/basic_istream_view.html"/>
      <id>e68063df071c44dfda70087528f3cd2e8840fe79:reference/ranges/basic_istream_view.md</id>
      <updated>2021-09-03T03:21:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/basic_istream_view.md b/reference/ranges/basic_istream_view.md
new file mode 100644
index 000000000..ac1d11b96
--- /dev/null
+++ b/reference/ranges/basic_istream_view.md
@@ -0,0 +1,100 @@
+# basic_istream_view
+* ranges[meta header]
+* std::ranges[meta namespace]
+* class template[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std {
+  namespace ranges {
+    template&amp;lt;movable Val, class CharT, class Traits&amp;gt;
+    requires default_initializable&amp;lt;Val&amp;gt; &amp;amp;&amp;amp; stream-extractable&amp;lt;Val, CharT, Traits&amp;gt;
+    class basic_istream_view : public view_interface&amp;lt;basic_istream_view&amp;lt;Val, CharT, Traits&amp;gt;&amp;gt; { …… }; // (1)
+
+    namespace views {
+      template&amp;lt;class Val, class CharT, class Traits&amp;gt;
+      basic_istream_view&amp;lt;Val, CharT, Traits&amp;gt; istream_view(basic_istream&amp;lt;CharT, Traits&amp;gt;&amp;amp; s);  // (2)
+    }
+  }
+
+  namespace views = ranges::views;
+}
+```
+* movable[link /reference/concepts/movable.md]
+* default_initializable[link /reference/concepts/default_initializable.md]
+* view_interface[link view_interface.md]
+* stream-extractable[italic]
+
+## 概要
+`basic_istream_view`は、入力ストリームから読み取った値の範囲である。
+
+`basic_istream_view`のオブジェクトは(2)の関数テンプレート`views::istream_view`で生成できる。
+
+### 範囲カテゴリ
+
+| borrowed | sized | output | input | forward | bidirectional | random_access | contiguous | common | viewable | view |
+|----------|-------|--------|-------|---------|---------------|---------------|------------|--------|----------|------|
+|          |       |        | ○    |         |               |               |            |        | ○       | ○   |
+
+## テンプレートパラメータ制約
+
+説明専用コンセプト`stream-extractable`を以下のように定義する。
+
+```cpp
+template&amp;lt;class Val, class CharT, class Traits&amp;gt;
+concept stream-extractable = requires(basic_istream&amp;lt;CharT, Traits&amp;gt;&amp;amp; is, Val&amp;amp; t) { is &amp;gt;&amp;gt; t; }
+```
+
+これを用いて、
+
+- [`movable`](/reference/concepts/movable.md)`&amp;lt;Val&amp;gt;`
+- [`default_initializable`](/reference/concepts/default_initializable.md)`&amp;lt;Val&amp;gt;`
+- `stream-extractable&amp;lt;Val, CharT, Traits&amp;gt;`
+
+## 効果
+
+- (2): `return basic_istream_view&amp;lt;Val, CharT, Traits&amp;gt;{s};`
+
+## メンバ関数
+
+| 名前                                             | 説明                             | 対応バージョン |
+|--------------------------------------------------|----------------------------------|----------------|
+| [`(constructor)`](iota_view/op_constructor.md.nolink)  | コンストラクタ                   | C++20          |
+| [`begin`](iota_view/begin.md.nolink)                   | 先頭を指すイテレータを取得する   | C++20          |
+| [`end`](iota_view/end.md.nolink)                       | 番兵を取得する                   | C++20          |
+
+## 例
+```cpp example
+#include &amp;lt;ranges&amp;gt;
+#include &amp;lt;sstream&amp;gt;
+#include &amp;lt;iostream&amp;gt;
+
+int main() {
+  using namespace std;
+  auto iss = istringstream{&amp;#34;1 2 3 4 5&amp;#34;};
+
+  for (int i : ranges::istream_view&amp;lt;int&amp;gt;(iss)) {
+    cout &amp;lt;&amp;lt; i;
+  }
+}
+```
+* views::istream_view[color ff0000]
+
+### 出力
+```
+12345
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 13.0.0
+- [GCC](/implementation.md#gcc): 10.1.0
+- [ICC](/implementation.md#icc): ?
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
+
+## 参照
+- [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
+- [C++20 ranges](https://techbookfest.org/product/5134506308665344)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>empty_view -- &lt;ranges&gt; Rangeファクトリを追加 #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges/empty_view.html"/>
      <id>e68063df071c44dfda70087528f3cd2e8840fe79:reference/ranges/empty_view.md</id>
      <updated>2021-09-03T03:21:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/empty_view.md b/reference/ranges/empty_view.md
new file mode 100644
index 000000000..e9c14a371
--- /dev/null
+++ b/reference/ranges/empty_view.md
@@ -0,0 +1,105 @@
+# empty_view
+* ranges[meta header]
+* std::ranges[meta namespace]
+* class template[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std {
+  namespace ranges {
+    template&amp;lt;class T&amp;gt;
+    requires is_object_v&amp;lt;T&amp;gt;
+    class empty_view : public view_interface&amp;lt;empty_view&amp;lt;T&amp;gt;&amp;gt; { // (1)
+    public:
+      static constexpr T* begin() noexcept { return nullptr; }
+      static constexpr T* end() noexcept { return nullptr; }
+      static constexpr T* data() noexcept { return nullptr; }
+      static constexpr size_t size() noexcept { return 0; }
+      static constexpr bool empty() noexcept { return true; }
+    };
+
+    namespace views {
+      template&amp;lt;class T&amp;gt;
+      inline constexpr empty_view&amp;lt;T&amp;gt; empty{}; // (2)
+    }
+  }
+
+  namespace views = ranges::views;
+}
+```
+* is_object_v[link /reference/type_traits/is_object.md]
+* view_interface[link view_interface.md]
+
+## 概要
+`empty_view`は、空の範囲を表す[`view`](view.md)。
+
+`empty_view`のオブジェクトは(2)の変数テンプレート`views::empty`で取得できる。
+
+### 範囲カテゴリ
+
+| borrowed | sized | output | input | forward | bidirectional | random_access | contiguous | common | viewable | view |
+|----------|-------|--------|-------|---------|---------------|---------------|------------|--------|----------|------|
+| ○       | ○    | ○     | ○    | ○      | ○            | ○            | ○         | ○     | ○       | ○   |
+
+## テンプレートパラメータ制約
+[`is_object_v`](/reference/type_traits/is_object.md)`&amp;lt;T&amp;gt;`
+
+## 静的メンバ関数
+
+| 名前                                             | 説明                             | 対応バージョン |
+|--------------------------------------------------|----------------------------------|----------------|
+| [`begin`](empty_view/begin.md.nolink)                   | 先頭を指すイテレータを取得する   | C++20          |
+| [`end`](empty_view/end.md.nolink)                       | 番兵を取得する                   | C++20          |
+| [`data`](empty_view/data.md.nolink)                     | 配列の先頭へのポインタを取得する | C++20          |
+| [`size`](empty_view/size.md.nolink)                     | 要素数を取得する                 | C++20          |
+| [`empty`](empty_view/empty.md.nolink)                   | 範囲が空かどうかを判定する       | C++20          |
+
+## 継承しているメンバ関数
+
+| 名前                                         | 説明                             | 対応バージョン |
+|----------------------------------------------|----------------------------------|----------------|
+| [`operator bool`](view_interface/op_bool.md) | 範囲が空でないかどうかを判定する | C++20          |
+| [`front`](view_interface/front.md)           | 先頭要素への参照を取得する       | C++20          |
+| [`back`](view_interface/back.md)             | 末尾要素への参照を取得する       | C++20          |
+| [`operator[]`](view_interface/op_at.md)      | 要素へアクセスする               | C++20          |
+
+## カスタマイゼーション
+
+| 名前                                                  | 説明                         | 対応バージョン |
+|-------------------------------------------------------|------------------------------|----------------|
+| [`enable_borrowed_range`](empty_view/enable_borrowed_range.md.nolink) | `enable_borrowed_range`の特殊化 (variable template) | C++20          |
+
+## 例
+```cpp example
+#include &amp;lt;ranges&amp;gt;
+#include &amp;lt;iostream&amp;gt;
+
+int main() {
+  using namespace std;
+
+  static_assert(ranges::empty(views::empty&amp;lt;int&amp;gt;));
+
+  for(int n : views::empty&amp;lt;int&amp;gt;) {
+    cout &amp;lt;&amp;lt; n;
+  }
+}
+```
+* views::empty[color ff0000]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 13.0.0
+- [GCC](/implementation.md#gcc): 10.1.0
+- [ICC](/implementation.md#icc): ?
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
+
+## 参照
+- [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
+- [C++20 ranges](https://techbookfest.org/product/5134506308665344)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>input_range -- &lt;ranges&gt; Rangeファクトリを追加 #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges/input_range.html"/>
      <id>e68063df071c44dfda70087528f3cd2e8840fe79:reference/ranges/input_range.md</id>
      <updated>2021-09-03T03:21:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/input_range.md b/reference/ranges/input_range.md
index 74efd0159..c506b285d 100644
--- a/reference/ranges/input_range.md
+++ b/reference/ranges/input_range.md
@@ -37,6 +37,10 @@ int main() {
 * ranges::forward_range[link forward_range.md]
 * ranges::istream_view[link istream_view.md.nolink]
 
+### 出力
+```
+```
+
 ## バージョン
 ### 言語
 - C++20
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>iota_view -- &lt;ranges&gt; Rangeファクトリを追加 #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges/iota_view.html"/>
      <id>e68063df071c44dfda70087528f3cd2e8840fe79:reference/ranges/iota_view.md</id>
      <updated>2021-09-03T03:21:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/iota_view.md b/reference/ranges/iota_view.md
new file mode 100644
index 000000000..d6d944e18
--- /dev/null
+++ b/reference/ranges/iota_view.md
@@ -0,0 +1,125 @@
+# iota_view
+* ranges[meta header]
+* std::ranges[meta namespace]
+* class template[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std {
+  namespace ranges {
+    template&amp;lt;weakly_incrementable W, semiregular Bound = unreachable_sentinel_t&amp;gt;
+    requires weakly-equality-comparable-with&amp;lt;W, Bound&amp;gt; &amp;amp;&amp;amp; semiregular&amp;lt;W&amp;gt;
+    class iota_view : public view_interface&amp;lt;iota_view&amp;lt;W, Bound&amp;gt;&amp;gt; { …… }; // (1)
+
+    namespace views {
+      inline constexpr unspecified iota = unspecified; // (2)
+    }
+  }
+
+  namespace views = ranges::views;
+}
+```
+* is_object_v[link /reference/type_traits/is_object.md]
+* weakly_incrementable[link /reference/iterator/weakly_incrementable.md]
+* semiregular[link /reference/concepts/semiregular.md]
+* unreachable_sentinel_t[link /reference/iterator/unreachable_sentinel_t.md]
+* weakly-equality-comparable-with[link /reference/concepts/equality_comparable.md]
+* view_interface[link view_interface.md]
+
+## 概要
+`iota_view`は、有限長または無限長の単調増加列を表す[`view`](view.md)。
+
+- 1つの値`b`から生成した`iota_view`は、`b`から始まる無限長の単調増加列となる。
+- 2つの値`b`, `e`から生成した`iota_view`は、`[b, e)`に含まれる値を列挙する有限長の単調増加列となる。
+
+`iota_view`のオブジェクトは(2)のカスタマイゼーションポイントオブジェクト`views::iota`で生成できる。
+
+### 範囲カテゴリ
+
+有限長のとき:
+
+| borrowed | sized | output | input | forward | bidirectional | random_access | contiguous | common | viewable | view |
+|----------|-------|--------|-------|---------|---------------|---------------|------------|--------|----------|------|
+| ○       | ○    |        | ○    | ○      | ○            | ○            |            | ○     | ○       | ○   |
+
+無限長のとき:
+
+| borrowed | sized | output | input | forward | bidirectional | random_access | contiguous | common | viewable | view |
+|----------|-------|--------|-------|---------|---------------|---------------|------------|--------|----------|------|
+| ○       |       |        | ○    | ○      | ○            | ○            |            |        | ○       | ○   |
+
+## テンプレートパラメータ制約
+- [`weakly_incrementable`](/reference/type_traits/is_object.md)`&amp;lt;W&amp;gt;`
+- [`semiregular`](/reference/concepts/semiregular.md)`&amp;lt;W&amp;gt;`
+- [`semiregular`](/reference/concepts/semiregular.md)`&amp;lt;Bound&amp;gt;`
+- [`weakly-equality-comparable-with`](/reference/concepts/equality_comparable.md)`&amp;lt;W, Bound&amp;gt;`
+
+## 効果
+
+- 式`views::iota(E)`の効果は`iota_view{E}`と等しい。
+- 式`views::iota(E, F)`の効果は`iota_view{E, F}`と等しい。
+
+## メンバ関数
+
+| 名前                                             | 説明                             | 対応バージョン |
+|--------------------------------------------------|----------------------------------|----------------|
+| [`(constructor)`](iota_view/op_constructor.md.nolink)  | コンストラクタ                   | C++20          |
+| [`begin`](iota_view/begin.md.nolink)                   | 先頭を指すイテレータを取得する   | C++20          |
+| [`end`](iota_view/end.md.nolink)                       | 番兵を取得する                   | C++20          |
+| [`size`](iota_view/size.md.nolink)                     | 有限長のとき、要素数を取得する   | C++20          |
+
+## 継承しているメンバ関数
+
+| 名前                                         | 説明                                     | 対応バージョン |
+|----------------------------------------------|------------------------------------------|----------------|
+| [`empty`](view_interface/empty.md)           | 範囲が空かどうかを判定する               | C++20          |
+| [`operator bool`](view_interface/op_bool.md) | 範囲が空でないかどうかを判定する         | C++20          |
+| [`front`](view_interface/front.md)           | 先頭要素への参照を取得する               | C++20          |
+| [`back`](view_interface/back.md)             | 有限長のとき、末尾要素への参照を取得する | C++20          |
+| [`operator[]`](view_interface/op_at.md)      | 要素へアクセスする                       | C++20          |
+
+## 推論補助
+
+| 名前                                                  | 説明                         | 対応バージョン |
+|-------------------------------------------------------|------------------------------|----------------|
+| [`(deduction_guide)`](subrange/op_deduction_guide.md.nolink) | クラステンプレートの推論補助 | C++20          |
+
+## 例
+```cpp example
+#include &amp;lt;ranges&amp;gt;
+#include &amp;lt;iostream&amp;gt;
+
+int main() {
+  using namespace std;
+
+  for (int i : ranges::iota(1, 10)) {
+    cout &amp;lt;&amp;lt; i;
+  }
+  cout &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
+  for (int i : ranges::iota(10)) {
+     cout &amp;lt;&amp;lt; i;
+     break;
+  }
+}
+```
+* views::iota[color ff0000]
+
+### 出力
+```
+123456789
+10
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 13.0.0
+- [GCC](/implementation.md#gcc): 10.1.0
+- [ICC](/implementation.md#icc): ?
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
+
+## 参照
+- [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
+- [C++20 ranges](https://techbookfest.org/product/5134506308665344)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>single_view -- &lt;ranges&gt; Rangeファクトリを追加 #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges/single_view.html"/>
      <id>e68063df071c44dfda70087528f3cd2e8840fe79:reference/ranges/single_view.md</id>
      <updated>2021-09-03T03:21:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/single_view.md b/reference/ranges/single_view.md
new file mode 100644
index 000000000..3a8ed4773
--- /dev/null
+++ b/reference/ranges/single_view.md
@@ -0,0 +1,99 @@
+# single_view
+* ranges[meta header]
+* std::ranges[meta namespace]
+* class template[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std {
+  namespace ranges {
+    template&amp;lt;copy_constructible T&amp;gt;
+    requires is_object_v&amp;lt;T&amp;gt;
+    class single_view : public view_interface&amp;lt;single_view&amp;lt;T&amp;gt;&amp;gt; { …… }; // (1)
+
+    namespace views {
+      inline constexpr unspecified single = unspecified; // (2)
+    }
+  }
+
+  namespace views = ranges::views;
+}
+```
+* copy_constructible[link /reference/concepts/copy_constructible.md]
+* is_object_v[link /reference/type_traits/is_object.md]
+* view_interface[link view_interface.md]
+
+## 概要
+`single_view`は、要素1つからなる範囲を表す[`view`](view.md)。
+
+`single_view`のオブジェクトは(2)のカスタマイゼーションポイントオブジェクト`views::single`で生成できる。
+
+### 範囲カテゴリ
+
+| borrowed | sized | output | input | forward | bidirectional | random_access | contiguous | common | viewable | view |
+|----------|-------|--------|-------|---------|---------------|---------------|------------|--------|----------|------|
+|          | ○    | ○     | ○    | ○      | ○            | ○            | ○         | ○     | ○       | ○   |
+
+## テンプレートパラメータ制約
+[`is_object_v`](/reference/type_traits/is_object.md)`&amp;lt;T&amp;gt;`
+
+## 効果
+- 式`views::single(E)`の効果は`single_view{E}`と等しい。
+
+## メンバ関数
+
+| 名前                                             | 説明                             | 対応バージョン |
+|--------------------------------------------------|----------------------------------|----------------|
+| [`(constructor)`](single_view/op_constructor.md.nolink)  | コンストラクタ                   | C++20          |
+| [`begin`](single_view/begin.md.nolink)                   | 先頭を指すイテレータを取得する   | C++20          |
+| [`end`](single_view/end.md.nolink)                       | 番兵を取得する                   | C++20          |
+| [`data`](single_view/data.md.nolink)                     | 配列の先頭へのポインタを取得する | C++20          |
+
+## 静的メンバ関数
+
+| 名前                                             | 説明                             | 対応バージョン |
+|--------------------------------------------------|----------------------------------|----------------|
+| [`size`](single_view/size.md.nolink)                     | 要素数を取得する                 | C++20          |
+
+## 継承しているメンバ関数
+
+| 名前                                         | 説明                             | 対応バージョン |
+|----------------------------------------------|----------------------------------|----------------|
+| [`operator bool`](view_interface/op_bool.md) | 範囲が空でないかどうかを判定する | C++20          |
+| [`front`](view_interface/front.md)           | 先頭要素への参照を取得する       | C++20          |
+| [`back`](view_interface/back.md)             | 末尾要素への参照を取得する       | C++20          |
+| [`operator[]`](view_interface/op_at.md)      | 要素へアクセスする               | C++20          |
+
+## 例
+```cpp example
+#include &amp;lt;ranges&amp;gt;
+#include &amp;lt;iostream&amp;gt;
+
+int main() {
+  using namespace std;
+
+  for(int n : views::single(1)) {
+    cout &amp;lt;&amp;lt; n;
+  }
+}
+```
+* views::single[color ff0000]
+
+### 出力
+```
+1
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 13.0.0
+- [GCC](/implementation.md#gcc): 10.1.0
+- [ICC](/implementation.md#icc): ?
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
+
+## 参照
+- [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
+- [C++20 ranges](https://techbookfest.org/product/5134506308665344)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>view -- &lt;ranges&gt; 説明を修正 #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges/view.html"/>
      <id>614d5cc8c9f18538af7d57e5fbbe2fa1f567be36:reference/ranges/view.md</id>
      <updated>2021-09-03T03:16:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/view.md b/reference/ranges/view.md
index e5571121c..76c5b9965 100644
--- a/reference/ranges/view.md
+++ b/reference/ranges/view.md
@@ -27,7 +27,7 @@ namespace std::ranges {
 4. [`copy_constructible`](/reference/concepts/copy_constructible.md)`&amp;lt;T&amp;gt;`が`false`、または`T`のコピーコンストラクタがO(1)
 5. [`copyable`](/reference/concepts/copyable.md)`&amp;lt;T&amp;gt;`が`false`、または`T`のコピー代入演算子がO(1)
 
-`view`と[`borrowed_range`](borrowed_range.md)には直接の包含関係はないが、要素を所有していると一般にこれらの要件は満たせないため、[`borrowed_range`](borrowed_range.md)でもあると考えてよい。
+`view`と[`borrowed_range`](borrowed_range.md)には直接の包含関係はないが、要素を所有していると一般にこれらの要件は満たせないため、[`borrowed_range`](borrowed_range.md)でもある場合が多い。
 
 ## 備考
 `view`を自作する場合、[`view_interface`](view_interface.md)を基底クラスにすると便利である。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>derived -- &lt;ranges&gt; 説明を修正 #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges/view_interface/derived.html"/>
      <id>614d5cc8c9f18538af7d57e5fbbe2fa1f567be36:reference/ranges/view_interface/derived.md</id>
      <updated>2021-09-03T03:16:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/view_interface/derived.md b/reference/ranges/view_interface/derived.md
index f4b708289..8e7b0a16a 100644
--- a/reference/ranges/view_interface/derived.md
+++ b/reference/ranges/view_interface/derived.md
@@ -19,11 +19,9 @@ constexpr const D&amp;amp; derived() const noexcept {       // exposition only
 ## 概要
 派生クラスの参照にダウンキャストする説明用の`private`メンバー関数。
 
-### 処理系
-- [Clang](/implementation.md#clang): 13.0.0
-- [GCC](/implementation.md#gcc): 10.1.0
-- [ICC](/implementation.md#icc): ?
-- [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
+## バージョン
+### 言語
+- C++20
 
 ## 参照
 - [N4861 24 Ranges library](https://timsong-cpp.github.io/cppwp/n4861/ranges)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator bool -- &lt;ranges&gt; 説明を修正 #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges/view_interface/op_bool.html"/>
      <id>614d5cc8c9f18538af7d57e5fbbe2fa1f567be36:reference/ranges/view_interface/op_bool.md</id>
      <updated>2021-09-03T03:16:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/view_interface/op_bool.md b/reference/ranges/view_interface/op_bool.md
index 0f1f77802..fa1de8818 100644
--- a/reference/ranges/view_interface/op_bool.md
+++ b/reference/ranges/view_interface/op_bool.md
@@ -19,7 +19,7 @@ constexpr explicit operator bool()
 範囲が空かどうかを判定する。
 
 ## テンプレートパラメータ制約
-式[`ranges::empty`](../empty.md)`(`[`derived`](derived.md)`)`が有効であること。
+式[`ranges::empty`](../empty.md)`(`[`derived`](derived.md)`())`が有効であること。
 
 ## 戻り値
 (1)、(2)共に、以下と等価：
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>view_interface -- ranges/view_interface: 表記調整と誤記修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/view_interface.html"/>
      <id>def0d6b474f4a41f2a4a8269bf4f9e8d3307d2d3:reference/ranges/view_interface.md</id>
      <updated>2021-09-02T19:25:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/view_interface.md b/reference/ranges/view_interface.md
index cd24deb80..6d7a5e637 100644
--- a/reference/ranges/view_interface.md
+++ b/reference/ranges/view_interface.md
@@ -7,7 +7,7 @@
 ```cpp
 namespace std::ranges {
   template&amp;lt;class D&amp;gt;
-  requires is_class_v&amp;lt;D&amp;gt; &amp;amp;&amp;amp; same_as&amp;lt;D, remove_cv_t&amp;lt;D&amp;gt;&amp;gt;
+    requires is_class_v&amp;lt;D&amp;gt; &amp;amp;&amp;amp; same_as&amp;lt;D, remove_cv_t&amp;lt;D&amp;gt;&amp;gt;
   class view_interface : public view_base { …… };
 }
 ```
@@ -22,7 +22,7 @@ namespace std::ranges {
 
 ## メンバ関数
 
-これらのメンバ関数は、`std::ranges`以下のカスタマイゼーションポイントオブジェクトを使って実装されており、テンプレート引数として渡された範囲型に対して該当する呼び出しが可能な場合のみオーバーロード解決に参加する。
+これらのメンバ関数は、`std::ranges`以下のカスタマイゼーションポイントオブジェクトを使って実装されており、テンプレート引数`D`として渡された範囲型に対して該当する呼び出しが可能な場合のみオーバーロード解決に参加する。
 
 | 名前                                         | 説明                             | 対応バージョン |
 |----------------------------------------------|----------------------------------|----------------|
@@ -33,7 +33,7 @@ namespace std::ranges {
 | [`front`](view_interface/front.md)           | 先頭要素への参照を取得する       | C++20          |
 | [`back`](view_interface/back.md)             | 末尾要素への参照を取得する       | C++20          |
 | [`operator[]`](view_interface/op_at.md)      | 要素へアクセスする               | C++20          |
-| [`derived`](view_interface/derived.md)       | ダウンキャストする (説明専用)    | C++20          |
+| [`derived`](view_interface/derived.md)       | `D`へダウンキャストする (説明専用) | C++20          |
 
 ## バージョン
 ### 言語
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>back -- ranges/view_interface: 表記調整と誤記修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/view_interface/back.html"/>
      <id>def0d6b474f4a41f2a4a8269bf4f9e8d3307d2d3:reference/ranges/view_interface/back.md</id>
      <updated>2021-09-02T19:25:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/view_interface/back.md b/reference/ranges/view_interface/back.md
index fe6f26faa..12c3c9009 100644
--- a/reference/ranges/view_interface/back.md
+++ b/reference/ranges/view_interface/back.md
@@ -6,8 +6,11 @@
 * cpp20[meta cpp]
 
 ```cpp
-constexpr decltype(auto) back() requires bidirectional_range&amp;lt;D&amp;gt; &amp;amp;&amp;amp; common_range&amp;lt;D&amp;gt;;                   // (1)
-constexpr decltype(auto) back() const requires bidirectional_range&amp;lt;const D&amp;gt; &amp;amp;&amp;amp; common_range&amp;lt;const D&amp;gt;; // (2)
+constexpr decltype(auto) back()
+  requires bidirectional_range&amp;lt;D&amp;gt; &amp;amp;&amp;amp; common_range&amp;lt;D&amp;gt;;             // (1)
+
+constexpr decltype(auto) back() const
+  requires bidirectional_range&amp;lt;const D&amp;gt; &amp;amp;&amp;amp; common_range&amp;lt;const D&amp;gt;; // (2)
 ```
 * bidirectional_range[link ../bidirectional_range.md]
 * common_range[link ../common_range.md]
@@ -30,7 +33,7 @@ constexpr decltype(auto) back() const requires bidirectional_range&amp;lt;const D&amp;gt; &amp;amp;&amp;amp; c
 ```cpp
 *ranges::prev(ranges::end(derived()))
 ```
-* ranges::end[link ../begin.md]
+* ranges::end[link ../end.md]
 * ranges::prev[link /reference/iterator/ranges_prev.md]
 * derived[link derived.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>data -- ranges/view_interface: 表記調整と誤記修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/view_interface/data.html"/>
      <id>def0d6b474f4a41f2a4a8269bf4f9e8d3307d2d3:reference/ranges/view_interface/data.md</id>
      <updated>2021-09-02T19:25:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/view_interface/data.md b/reference/ranges/view_interface/data.md
index 5864adf1b..d11df0fce 100644
--- a/reference/ranges/view_interface/data.md
+++ b/reference/ranges/view_interface/data.md
@@ -6,11 +6,15 @@
 * cpp20[meta cpp]
 
 ```cpp
-constexpr auto data() requires contiguous_iterator&amp;lt;iterator_t&amp;lt;D&amp;gt;&amp;gt;;             // (1) 
-constexpr auto data() const requires contiguous_iterator&amp;lt;iterator_t&amp;lt;const D&amp;gt;&amp;gt;; // (2)
+constexpr auto data()
+  requires contiguous_iterator&amp;lt;iterator_t&amp;lt;D&amp;gt;&amp;gt;;  // (1)
+
+constexpr auto data() const
+  requires range&amp;lt;const D&amp;gt; &amp;amp;&amp;amp; contiguous_iterator&amp;lt;iterator_t&amp;lt;const D&amp;gt;&amp;gt;; // (2)
 ```
 * contiguous_iterator[link /reference/iterator/contiguous_iterator.md]
 * iterator_t[link ../iterator_t.md]
+* range[link ../range.md]
 
 ## 概要
 範囲の要素へのポインタを取得する。
@@ -19,7 +23,7 @@ constexpr auto data() const requires contiguous_iterator&amp;lt;iterator_t&amp;lt;const D&amp;gt;&amp;gt;; /
 [`view_interface`](../view_interface.md)`&amp;lt;D&amp;gt;`に対して、
 
 - (1): `D`のイテレータが[`contiguous_iterator`](/reference/iterator/contiguous_iterator.md)であること。
-- (2): `const D`のイテレータが[`contiguous_iterator`](/reference/iterator/contiguous_iterator.md)であること。
+- (2): `const D`が[`range`](../range.md)かつ`const D`のイテレータが[`contiguous_iterator`](/reference/iterator/contiguous_iterator.md)であること。
 
 ## 戻り値
 (1)、(2)共に、以下と等価：
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>empty -- ranges/view_interface: 表記調整と誤記修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/view_interface/empty.html"/>
      <id>def0d6b474f4a41f2a4a8269bf4f9e8d3307d2d3:reference/ranges/view_interface/empty.md</id>
      <updated>2021-09-02T19:25:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/view_interface/empty.md b/reference/ranges/view_interface/empty.md
index 0e850355f..9980c4d55 100644
--- a/reference/ranges/view_interface/empty.md
+++ b/reference/ranges/view_interface/empty.md
@@ -6,8 +6,11 @@
 * cpp20[meta cpp]
 
 ```cpp
-constexpr bool empty() requires forward_range&amp;lt;D&amp;gt;;             // (1) 
-constexpr bool empty() const requires forward_range&amp;lt;const D&amp;gt;; // (2)
+constexpr bool empty()
+  requires forward_range&amp;lt;D&amp;gt;;       // (1)
+
+constexpr bool empty() const
+  requires forward_range&amp;lt;const D&amp;gt;; // (2)
 ```
 * forward_range[link ../forward_range.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>front -- ranges/view_interface: 表記調整と誤記修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/view_interface/front.html"/>
      <id>def0d6b474f4a41f2a4a8269bf4f9e8d3307d2d3:reference/ranges/view_interface/front.md</id>
      <updated>2021-09-02T19:25:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/view_interface/front.md b/reference/ranges/view_interface/front.md
index 706fd2728..2b8059217 100644
--- a/reference/ranges/view_interface/front.md
+++ b/reference/ranges/view_interface/front.md
@@ -6,8 +6,11 @@
 * cpp20[meta cpp]
 
 ```cpp
-constexpr decltype(auto) front() requires forward_range&amp;lt;D&amp;gt;;             // (1)
-constexpr decltype(auto) front() const requires forward_range&amp;lt;const D&amp;gt;; // (2)
+constexpr decltype(auto) front()
+  requires forward_range&amp;lt;D&amp;gt;;             // (1)
+
+constexpr decltype(auto) front()
+  const requires forward_range&amp;lt;const D&amp;gt;; // (2)
 ```
 * forward_range[link ../forward_range.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator [] -- ranges/view_interface: 表記調整と誤記修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/view_interface/op_at.html"/>
      <id>def0d6b474f4a41f2a4a8269bf4f9e8d3307d2d3:reference/ranges/view_interface/op_at.md</id>
      <updated>2021-09-02T19:25:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/view_interface/op_at.md b/reference/ranges/view_interface/op_at.md
index b289893c1..8e1b3d347 100644
--- a/reference/ranges/view_interface/op_at.md
+++ b/reference/ranges/view_interface/op_at.md
@@ -14,7 +14,6 @@ constexpr decltype(auto) operator[](range_difference_t&amp;lt;R&amp;gt; n) const // (2)
 ```
 * random_access_range[link ../random_access_range.md]
 * range_difference_t[link ../range_difference_t.md]
-* derived[link derived.md]
 
 ## 概要
 範囲の要素にアクセスする。
@@ -28,7 +27,7 @@ constexpr decltype(auto) operator[](range_difference_t&amp;lt;R&amp;gt; n) const // (2)
 ```cpp
 ranges::begin(derived())[n];
 ```
-* ranges::begin[link ../empty.md]
+* ranges::begin[link ../begin.md]
 * derived[link derived.md]
 
 ## 計算量
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator bool -- ranges/view_interface: 表記調整と誤記修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/view_interface/op_bool.html"/>
      <id>def0d6b474f4a41f2a4a8269bf4f9e8d3307d2d3:reference/ranges/view_interface/op_bool.md</id>
      <updated>2021-09-02T19:25:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/view_interface/op_bool.md b/reference/ranges/view_interface/op_bool.md
index 1aac7d4c3..0f1f77802 100644
--- a/reference/ranges/view_interface/op_bool.md
+++ b/reference/ranges/view_interface/op_bool.md
@@ -6,8 +6,11 @@
 * cpp20[meta cpp]
 
 ```cpp
-    constexpr explicit operator bool() requires requires { ranges::empty(derived()); };       // (1)
-    constexpr explicit operator bool() const requires requires { ranges::empty(derived()); }; // (2)
+constexpr explicit operator bool()
+  requires requires { ranges::empty(derived()); };       // (1)
+
+constexpr explicit operator bool()
+  const requires requires { ranges::empty(derived()); }; // (2)
 ```
 * ranges::empty[link ../empty.md]
 * derived[link derived.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>size -- ranges/view_interface: 表記調整と誤記修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/view_interface/size.html"/>
      <id>def0d6b474f4a41f2a4a8269bf4f9e8d3307d2d3:reference/ranges/view_interface/size.md</id>
      <updated>2021-09-02T19:25:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/view_interface/size.md b/reference/ranges/view_interface/size.md
index 6c50c4e4d..fd08e62b1 100644
--- a/reference/ranges/view_interface/size.md
+++ b/reference/ranges/view_interface/size.md
@@ -6,8 +6,11 @@
 * cpp20[meta cpp]
 
 ```cpp
-constexpr auto size() requires forward_range&amp;lt;D&amp;gt; &amp;amp;&amp;amp; sized_sentinel_for&amp;lt;sentinel_t&amp;lt;D&amp;gt;, iterator_t&amp;lt;D&amp;gt;&amp;gt;;                         // (1) 
-constexpr auto size() const requires forward_range&amp;lt;const D&amp;gt; &amp;amp;&amp;amp; sized_sentinel_for&amp;lt;sentinel_t&amp;lt;const D&amp;gt;, iterator_t&amp;lt;const D&amp;gt;&amp;gt;; // (2)
+constexpr auto size()
+  requires forward_range&amp;lt;D&amp;gt; &amp;amp;&amp;amp; sized_sentinel_for&amp;lt;sentinel_t&amp;lt;D&amp;gt;, iterator_t&amp;lt;D&amp;gt;&amp;gt;;                   // (1)
+
+constexpr auto size() const
+  requires forward_range&amp;lt;const D&amp;gt; &amp;amp;&amp;amp; sized_sentinel_for&amp;lt;sentinel_t&amp;lt;const D&amp;gt;, iterator_t&amp;lt;const D&amp;gt;&amp;gt;; // (2)
 ```
 * forward_range[link ../forward_range.md]
 * sentinel_t[link ../sentinel_t.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>bidirectional_range -- ranges/*: 例示コードの修飾を調整</title>
      <link href="https://cpprefjp.github.io/reference/ranges/bidirectional_range.html"/>
      <id>d042b448c9a35d3482a71b295cac99ed15cd9cc6:reference/ranges/bidirectional_range.md</id>
      <updated>2021-09-02T15:50:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/bidirectional_range.md b/reference/ranges/bidirectional_range.md
index 8004f9b16..d20da489f 100644
--- a/reference/ranges/bidirectional_range.md
+++ b/reference/ranges/bidirectional_range.md
@@ -36,6 +36,7 @@ int main() {
   static_assert(ranges::forward_range&amp;lt;forward_list&amp;lt;int&amp;gt;&amp;gt;);
 }
 ```
+* ranges::bidirectional_range[color ff0000]
 * ranges::forward_range[link forward_range.md]
 
 ### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>borrowed_iterator_t -- ranges/*: 例示コードの修飾を調整</title>
      <link href="https://cpprefjp.github.io/reference/ranges/borrowed_iterator_t.html"/>
      <id>d042b448c9a35d3482a71b295cac99ed15cd9cc6:reference/ranges/borrowed_iterator_t.md</id>
      <updated>2021-09-02T15:50:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/borrowed_iterator_t.md b/reference/ranges/borrowed_iterator_t.md
index c6f6a4969..34ee11752 100644
--- a/reference/ranges/borrowed_iterator_t.md
+++ b/reference/ranges/borrowed_iterator_t.md
@@ -56,7 +56,7 @@ int main() {
   static_assert(same_as&amp;lt;decltype(result3), vector&amp;lt;int&amp;gt;::iterator&amp;gt;);
 }
 ```
-* ranges::ranges::borrowed_iterator_t[color ff0000]
+* ranges::borrowed_iterator_t[color ff0000]
 * ranges::range[link range.md]
 * ranges::begin[link begin.md]
 * ranges::end[link end.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>borrowed_range -- ranges/*: 例示コードの修飾を調整</title>
      <link href="https://cpprefjp.github.io/reference/ranges/borrowed_range.html"/>
      <id>d042b448c9a35d3482a71b295cac99ed15cd9cc6:reference/ranges/borrowed_range.md</id>
      <updated>2021-09-02T15:50:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/borrowed_range.md b/reference/ranges/borrowed_range.md
index daf2c5f14..f6eaf8ad9 100644
--- a/reference/ranges/borrowed_range.md
+++ b/reference/ranges/borrowed_range.md
@@ -48,6 +48,7 @@ int main()
   static_assert(std::ranges::borrowed_range&amp;lt;std::span&amp;lt;int&amp;gt;&amp;gt;);
 }
 ```
+* std::ranges::borrowed_range[color ff0000]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>borrowed_subrange_t -- ranges/*: 例示コードの修飾を調整</title>
      <link href="https://cpprefjp.github.io/reference/ranges/borrowed_subrange_t.html"/>
      <id>d042b448c9a35d3482a71b295cac99ed15cd9cc6:reference/ranges/borrowed_subrange_t.md</id>
      <updated>2021-09-02T15:50:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/borrowed_subrange_t.md b/reference/ranges/borrowed_subrange_t.md
index 2bd7ab35f..c9bab3c9e 100644
--- a/reference/ranges/borrowed_subrange_t.md
+++ b/reference/ranges/borrowed_subrange_t.md
@@ -53,7 +53,7 @@ int main() {
   static_assert(!same_as&amp;lt;decltype(result3), ranges::dangling&amp;gt;);
 }
 ```
-* ranges::ranges::borrowed_iborrowed_subrange_tterator_t[color ff0000]
+* ranges::borrowed_subrange_t[color ff0000]
 * ranges::range[link range.md]
 * ranges::begin[link begin.md]
 * ranges::end[link end.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>contiguous_range -- ranges/*: 例示コードの修飾を調整</title>
      <link href="https://cpprefjp.github.io/reference/ranges/contiguous_range.html"/>
      <id>d042b448c9a35d3482a71b295cac99ed15cd9cc6:reference/ranges/contiguous_range.md</id>
      <updated>2021-09-02T15:50:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/contiguous_range.md b/reference/ranges/contiguous_range.md
index 0c51cfded..0b522cc5c 100644
--- a/reference/ranges/contiguous_range.md
+++ b/reference/ranges/contiguous_range.md
@@ -46,6 +46,7 @@ int main() {
   static_assert(!ranges::contiguous_range&amp;lt;view_t&amp;gt;);
 }
 ```
+* ranges::contiguous_range[color ff0000]
 * elements_view[link elements_view.md.nolink]
 * all_t[link all_t.md.nolink]
 * ranges::random_access_range[link random_access_range.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>enable_view -- ranges/*: 例示コードの修飾を調整</title>
      <link href="https://cpprefjp.github.io/reference/ranges/enable_view.html"/>
      <id>d042b448c9a35d3482a71b295cac99ed15cd9cc6:reference/ranges/enable_view.md</id>
      <updated>2021-09-02T15:50:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/enable_view.md b/reference/ranges/enable_view.md
index 3aa75e16a..5dee32f1f 100644
--- a/reference/ranges/enable_view.md
+++ b/reference/ranges/enable_view.md
@@ -35,6 +35,8 @@ int main()
   static_assert(enable_view&amp;lt;t&amp;gt;);
 }
 ```
+* enable_view[color ff0000]
+* view_base[link view_base.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>forward_range -- ranges/*: 例示コードの修飾を調整</title>
      <link href="https://cpprefjp.github.io/reference/ranges/forward_range.html"/>
      <id>d042b448c9a35d3482a71b295cac99ed15cd9cc6:reference/ranges/forward_range.md</id>
      <updated>2021-09-02T15:50:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/forward_range.md b/reference/ranges/forward_range.md
index d68fed342..759b43c4e 100644
--- a/reference/ranges/forward_range.md
+++ b/reference/ranges/forward_range.md
@@ -36,6 +36,7 @@ int main() {
   static_assert(ranges::input_range&amp;lt;decltype(ranges::istream_view&amp;lt;int&amp;gt;(cin))&amp;gt;);
 }
 ```
+* ranges::forward_range[color ff0000]
 * ranges::input_range[link input_range.md]
 * ranges::istream_view[link istream_view.md.nolink]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>input_range -- ranges/*: 例示コードの修飾を調整</title>
      <link href="https://cpprefjp.github.io/reference/ranges/input_range.html"/>
      <id>d042b448c9a35d3482a71b295cac99ed15cd9cc6:reference/ranges/input_range.md</id>
      <updated>2021-09-02T15:50:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/input_range.md b/reference/ranges/input_range.md
index d9760cabd..74efd0159 100644
--- a/reference/ranges/input_range.md
+++ b/reference/ranges/input_range.md
@@ -33,6 +33,7 @@ int main() {
   static_assert(ranges::input_range&amp;lt;decltype(ranges::istream_view&amp;lt;int&amp;gt;(cin))&amp;gt;);
 }
 ```
+* ranges::input_range[color ff0000]
 * ranges::forward_range[link forward_range.md]
 * ranges::istream_view[link istream_view.md.nolink]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>random_access_range -- ranges/*: 例示コードの修飾を調整</title>
      <link href="https://cpprefjp.github.io/reference/ranges/random_access_range.html"/>
      <id>d042b448c9a35d3482a71b295cac99ed15cd9cc6:reference/ranges/random_access_range.md</id>
      <updated>2021-09-02T15:50:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/random_access_range.md b/reference/ranges/random_access_range.md
index eeb1fcf05..06f890669 100644
--- a/reference/ranges/random_access_range.md
+++ b/reference/ranges/random_access_range.md
@@ -39,6 +39,7 @@ int main()
   static_assert(!std::ranges::random_access_range&amp;lt;std::set&amp;lt;int&amp;gt;&amp;gt;);
 }
 ```
+* std::ranges::random_access_range[color ff0000]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sized_range -- ranges/*: 例示コードの修飾を調整</title>
      <link href="https://cpprefjp.github.io/reference/ranges/sized_range.html"/>
      <id>d042b448c9a35d3482a71b295cac99ed15cd9cc6:reference/ranges/sized_range.md</id>
      <updated>2021-09-02T15:50:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/sized_range.md b/reference/ranges/sized_range.md
index c0cedf69b..a623da601 100644
--- a/reference/ranges/sized_range.md
+++ b/reference/ranges/sized_range.md
@@ -47,6 +47,7 @@ int main()
   static_assert(!std::ranges::sized_range&amp;lt;std::forward_list&amp;lt;int&amp;gt;&amp;gt;);
 }
 ```
+* std::ranges::sized_range[color ff0000]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>view -- ranges/*: 例示コードの修飾を調整</title>
      <link href="https://cpprefjp.github.io/reference/ranges/view.html"/>
      <id>d042b448c9a35d3482a71b295cac99ed15cd9cc6:reference/ranges/view.md</id>
      <updated>2021-09-02T15:50:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/view.md b/reference/ranges/view.md
index a7bdda9b4..e5571121c 100644
--- a/reference/ranges/view.md
+++ b/reference/ranges/view.md
@@ -51,6 +51,7 @@ int main()
   static_assert(std::ranges::view&amp;lt;std::span&amp;lt;int&amp;gt;&amp;gt;);
 }
 ```
+* std::ranges::view[color ff0000]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>view_base -- ranges/*: 例示コードの修飾を調整</title>
      <link href="https://cpprefjp.github.io/reference/ranges/view_base.html"/>
      <id>d042b448c9a35d3482a71b295cac99ed15cd9cc6:reference/ranges/view_base.md</id>
      <updated>2021-09-02T15:50:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/view_base.md b/reference/ranges/view_base.md
index 7484a1619..5c92cba02 100644
--- a/reference/ranges/view_base.md
+++ b/reference/ranges/view_base.md
@@ -30,6 +30,8 @@ int main()
   static_assert(enable_view&amp;lt;t&amp;gt;);
 }
 ```
+* view_base[color ff0000]
+* enable_view[link enable_view.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
</feed>
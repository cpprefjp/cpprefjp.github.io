<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2025-07-08T15:15:50.180086</updated>
  <id>5fec2cca-2f13-4007-b76d-7cb4e0413e9a</id>

  
    <entry>
      <title>realloc -- realloc : 備考を整理</title>
      <link href="https://cpprefjp.github.io/reference/cstdlib/realloc.html"/>
      <id>ec127b7079201b4ad45d6d985f3ae793870c301c:reference/cstdlib/realloc.md</id>
      <updated>2025-07-09T00:11:33+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstdlib/realloc.md b/reference/cstdlib/realloc.md
index a42e20d5c..ac4df8fd2 100644
--- a/reference/cstdlib/realloc.md
+++ b/reference/cstdlib/realloc.md
@@ -27,16 +27,18 @@ namespace std {
 - 新しいサイズの領域を確保、割り当てする。その後、新しいサイズと古いサイズのいずれか小さい方のサイズに等しいメモリ領域をコピーし、古いブロックを解放する。
 - メモリが不足している場合、`nullptr`が返される。
 
-## 備考
-`new_size`が0の場合の動作は定義されていない。
 
 ## 戻り値
 再確保できた場合、その領域の先頭のポインタを返す。
 
-なお、その領域はメモリリークを避けるため、`free`、`realloc`で解放する必要がある。
-
 失敗した場合、`nullptr`を返す。もとのポインタは有効なままで、解放する必要がある。
 
+
+## 備考
+- `new_size`が0の場合の動作は未規定。
+- 確保された領域はメモリリークを避けるため、`free`、`realloc`で解放する必要がある。
+
+
 ## 例
 ```cpp example
 #include &amp;lt;cstdlib&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>realloc -- realloc : インデントのエラーを修正</title>
      <link href="https://cpprefjp.github.io/reference/cstdlib/realloc.html"/>
      <id>7f399059bd0da68a435467af802301edc159f12e:reference/cstdlib/realloc.md</id>
      <updated>2025-07-09T00:10:29+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstdlib/realloc.md b/reference/cstdlib/realloc.md
index be2e9cf1a..a42e20d5c 100644
--- a/reference/cstdlib/realloc.md
+++ b/reference/cstdlib/realloc.md
@@ -21,15 +21,11 @@ namespace std {
 ## 効果
 メモリの確保は次のいずれかの方法で行われる。
 
-  - 既存のメモリを拡張、縮小する。
-
-    縮小した場合、再確保されたメモリのサイズまでの領域の内容が保持される。
-
-    拡張した場合、新しい領域の内容は未規定。
-
-  - 新しいサイズの領域を確保、割り当てする。その後、新しいサイズと古いサイズのいずれか小さい方のサイズに等しいメモリ領域をコピーし、古いブロックを解放する。
-
-  - メモリが不足している場合、`nullptr`が返される。
+- 既存のメモリを拡張、縮小する。
+    - 縮小した場合、再確保されたメモリのサイズまでの領域の内容が保持される。
+    - 拡張した場合、新しい領域の内容は未規定。
+- 新しいサイズの領域を確保、割り当てする。その後、新しいサイズと古いサイズのいずれか小さい方のサイズに等しいメモリ領域をコピーし、古いブロックを解放する。
+- メモリが不足している場合、`nullptr`が返される。
 
 ## 備考
 `new_size`が0の場合の動作は定義されていない。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>realloc -- realloc: 未定義 → 未規定</title>
      <link href="https://cpprefjp.github.io/reference/cstdlib/realloc.html"/>
      <id>89af337229e0e55fccff475dc596b66b78960384:reference/cstdlib/realloc.md</id>
      <updated>2025-07-08T23:28:00+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstdlib/realloc.md b/reference/cstdlib/realloc.md
index ff0dada9d..be2e9cf1a 100644
--- a/reference/cstdlib/realloc.md
+++ b/reference/cstdlib/realloc.md
@@ -59,7 +59,7 @@ int main() {
     std::free(p);
     std::cerr &amp;lt;&amp;lt; &amp;#34;realloc failed&amp;#34; &amp;lt;&amp;lt; std::endl;
     return 1;
-  }// 拡張後の内容を出力（追加領域の値は未定義）
+  }// 拡張後の内容を出力（追加領域の値は未規定）
   for (int i = 0; i &amp;lt; 10; ++i) {
     std::cout &amp;lt;&amp;lt; q[i] &amp;lt;&amp;lt; &amp;#39; &amp;#39;;
   }
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>realloc -- realloc : fix typo</title>
      <link href="https://cpprefjp.github.io/reference/cstdlib/realloc.html"/>
      <id>0c244fb2734e3824d2e86eda81c8610bd1e4f97b:reference/cstdlib/realloc.md</id>
      <updated>2025-07-08T23:06:37+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstdlib/realloc.md b/reference/cstdlib/realloc.md
index 69648d655..ff0dada9d 100644
--- a/reference/cstdlib/realloc.md
+++ b/reference/cstdlib/realloc.md
@@ -29,7 +29,7 @@ namespace std {
 
   - 新しいサイズの領域を確保、割り当てする。その後、新しいサイズと古いサイズのいずれか小さい方のサイズに等しいメモリ領域をコピーし、古いブロックを解放する。
 
-  - メモリが不足している場合、`nullpte`が返される。
+  - メモリが不足している場合、`nullptr`が返される。
 
 ## 備考
 `new_size`が0の場合の動作は定義されていない。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>realloc -- realloc : 未定義 → 未規定</title>
      <link href="https://cpprefjp.github.io/reference/cstdlib/realloc.html"/>
      <id>bada4782a24270e3b9c77d4ddaf87e8fd932f978:reference/cstdlib/realloc.md</id>
      <updated>2025-07-08T23:06:30+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstdlib/realloc.md b/reference/cstdlib/realloc.md
index 508213991..69648d655 100644
--- a/reference/cstdlib/realloc.md
+++ b/reference/cstdlib/realloc.md
@@ -25,7 +25,7 @@ namespace std {
 
     縮小した場合、再確保されたメモリのサイズまでの領域の内容が保持される。
 
-    拡張した場合、新しい領域の内容は未定義。
+    拡張した場合、新しい領域の内容は未規定。
 
   - 新しいサイズの領域を確保、割り当てする。その後、新しいサイズと古いサイズのいずれか小さい方のサイズに等しいメモリ領域をコピーし、古いブロックを解放する。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2020-07-01T14:35:10.165485</updated>
  <id>80a02ae3-5faf-4a47-8872-34ffea8288b6</id>

  
    <entry>
      <title>from_stream -- chrono : from_streamからparseへの参照を整理</title>
      <link href="https://cpprefjp.github.io/reference/chrono/day/from_stream.html"/>
      <id>745f8bcdcf07c523bf69275bee845fef025477a7:reference/chrono/day/from_stream.md</id>
      <updated>2020-07-01T17:18:28+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/day/from_stream.md b/reference/chrono/day/from_stream.md
index f4e3912a8..2661692f6 100644
--- a/reference/chrono/day/from_stream.md
+++ b/reference/chrono/day/from_stream.md
@@ -31,10 +31,6 @@ namespace std::chrono {
 `is`を返す
 
 
-## 備考
-- この解析においては、日のフォーマットは、デフォルトで2桁ゼロ埋めの日を意味する`%d`が使用される。1日を表すために`01`および`1`のどちらでも入力できる。1桁の場合の、先頭のゼロは必須ではない。ゼロ埋めの桁数を指定する`%Nd`も指定できる
-
-
 ## 例
 ```cpp example
 #include &amp;lt;cassert&amp;gt;
@@ -80,4 +76,4 @@ int main()
 
 
 ## 関連項目
-- [chronoの`std::format()`](/reference/chrono/format.md) (フォーマットの詳細)
+- [chronoの`parse()`](/reference/chrono/parse.md) (入力フォーマットの詳細)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>from_stream -- chrono : from_streamからparseへの参照を整理</title>
      <link href="https://cpprefjp.github.io/reference/chrono/duration/from_stream.html"/>
      <id>745f8bcdcf07c523bf69275bee845fef025477a7:reference/chrono/duration/from_stream.md</id>
      <updated>2020-07-01T17:18:28+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/duration/from_stream.md b/reference/chrono/duration/from_stream.md
index dbdc55652..507db49f2 100644
--- a/reference/chrono/duration/from_stream.md
+++ b/reference/chrono/duration/from_stream.md
@@ -87,3 +87,7 @@ JST
 - [Clang](/implementation.md#clang): (9.0時点で実装なし)
 - [GCC](/implementation.md#gcc): (9.2時点で実装なし)
 - [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 関連項目
+- [chronoの`parse()`](/reference/chrono/parse.md) (入力フォーマットの詳細)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>file_time -- chrono : from_streamからparseへの参照を整理</title>
      <link href="https://cpprefjp.github.io/reference/chrono/file_time.html"/>
      <id>745f8bcdcf07c523bf69275bee845fef025477a7:reference/chrono/file_time.md</id>
      <updated>2020-07-01T17:18:28+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/file_time.md b/reference/chrono/file_time.md
index 3a9115f4f..373ed845e 100644
--- a/reference/chrono/file_time.md
+++ b/reference/chrono/file_time.md
@@ -214,6 +214,5 @@ int main()
 
 
 ## 関連項目
-- [chronoの`std::format()`](/reference/chrono/format.md) (フォーマットの詳細)
-
-
+- [chronoの`std::format()`](/reference/chrono/format.md) (出力フォーマットの詳細)
+- [chronoの`parse()`](/reference/chrono/parse.md) (入力フォーマットの詳細)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>gps_time -- chrono : from_streamからparseへの参照を整理</title>
      <link href="https://cpprefjp.github.io/reference/chrono/gps_time.html"/>
      <id>745f8bcdcf07c523bf69275bee845fef025477a7:reference/chrono/gps_time.md</id>
      <updated>2020-07-01T17:18:28+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/gps_time.md b/reference/chrono/gps_time.md
index 4895cfd09..a6ced9619 100644
--- a/reference/chrono/gps_time.md
+++ b/reference/chrono/gps_time.md
@@ -215,4 +215,5 @@ int main()
 
 
 ## 関連項目
-- [chronoの`std::format()`](/reference/chrono/format.md) (フォーマットの詳細)
+- [chronoの`std::format()`](/reference/chrono/format.md) (出力フォーマットの詳細)
+- [chronoの`parse()`](/reference/chrono/parse.md) (入力フォーマットの詳細)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>local_time -- chrono : from_streamからparseへの参照を整理</title>
      <link href="https://cpprefjp.github.io/reference/chrono/local_time.html"/>
      <id>745f8bcdcf07c523bf69275bee845fef025477a7:reference/chrono/local_time.md</id>
      <updated>2020-07-01T17:18:28+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/local_time.md b/reference/chrono/local_time.md
index 55e2596a5..5f4f1eeff 100644
--- a/reference/chrono/local_time.md
+++ b/reference/chrono/local_time.md
@@ -240,4 +240,5 @@ int main()
 
 
 ## 関連項目
-- [chronoの`std::format()`](/reference/chrono/format.md) (フォーマットの詳細)
+- [chronoの`std::format()`](/reference/chrono/format.md) (出力フォーマットの詳細)
+- [chronoの`parse()`](/reference/chrono/parse.md) (入力フォーマットの詳細)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>from_stream -- chrono : from_streamからparseへの参照を整理</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month/from_stream.html"/>
      <id>745f8bcdcf07c523bf69275bee845fef025477a7:reference/chrono/month/from_stream.md</id>
      <updated>2020-07-01T17:18:28+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month/from_stream.md b/reference/chrono/month/from_stream.md
index 743d56b8e..285d41cda 100644
--- a/reference/chrono/month/from_stream.md
+++ b/reference/chrono/month/from_stream.md
@@ -31,10 +31,6 @@ namespace std::chrono {
 `is`を返す
 
 
-## 備考
-- この解析においては、月のフォーマットは、ロケール規定の完全もしくは短縮された月名を意味する`%b`が使用される。そのため、デフォルトのCロケールにおいては、1月を入力するために`&amp;#34;January`&amp;#34; (完全名) と`&amp;#34;Jan&amp;#34;` (短縮名)の2通りが使用でき、ほかの月も同様である
-
-
 ## 例
 ```cpp example
 #include &amp;lt;cassert&amp;gt;
@@ -81,4 +77,4 @@ int main()
 
 
 ## 関連項目
-- [chronoの`std::format()`](/reference/chrono/format.md) (フォーマットの詳細)
+- [chronoの`parse()`](/reference/chrono/parse.md) (入力フォーマットの詳細)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>from_stream -- chrono : from_streamからparseへの参照を整理</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_day/from_stream.html"/>
      <id>745f8bcdcf07c523bf69275bee845fef025477a7:reference/chrono/month_day/from_stream.md</id>
      <updated>2020-07-01T17:18:28+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_day/from_stream.md b/reference/chrono/month_day/from_stream.md
index febe9bc60..71122e8c2 100644
--- a/reference/chrono/month_day/from_stream.md
+++ b/reference/chrono/month_day/from_stream.md
@@ -43,7 +43,7 @@ int main()
 {
   {
     std::stringstream ss;
-    ss &amp;lt;&amp;lt; &amp;#34;Mar/1&amp;#34;; // &amp;#34;Mar/01&amp;#34;でもOK
+    ss &amp;lt;&amp;lt; &amp;#34;Mar/1&amp;#34;; // &amp;#34;Mar/01&amp;#34;や&amp;#34;March/1&amp;#34;でもOK
 
     chrono::month_day md;
     chrono::from_stream(ss, md, &amp;#34;%b/%d&amp;#34;);
@@ -77,4 +77,4 @@ int main()
 
 
 ## 関連項目
-- [`std::chrono::parse()`](/reference/chrono/parse.md) (解析フォーマットの詳細)
+- [chronoの`parse()`](/reference/chrono/parse.md) (入力フォーマットの詳細)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>tai_time -- chrono : from_streamからparseへの参照を整理</title>
      <link href="https://cpprefjp.github.io/reference/chrono/tai_time.html"/>
      <id>745f8bcdcf07c523bf69275bee845fef025477a7:reference/chrono/tai_time.md</id>
      <updated>2020-07-01T17:18:28+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/tai_time.md b/reference/chrono/tai_time.md
index 47d3a09b3..1babdb290 100644
--- a/reference/chrono/tai_time.md
+++ b/reference/chrono/tai_time.md
@@ -214,4 +214,5 @@ int main()
 
 
 ## 関連項目
-- [chronoの`std::format()`](/reference/chrono/format.md) (フォーマットの詳細)
+- [chronoの`std::format()`](/reference/chrono/format.md) (出力フォーマットの詳細)
+- [chronoの`parse()`](/reference/chrono/parse.md) (入力フォーマットの詳細)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>utc_time -- chrono : from_streamからparseへの参照を整理</title>
      <link href="https://cpprefjp.github.io/reference/chrono/utc_time.html"/>
      <id>745f8bcdcf07c523bf69275bee845fef025477a7:reference/chrono/utc_time.md</id>
      <updated>2020-07-01T17:18:28+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/utc_time.md b/reference/chrono/utc_time.md
index e0ba0d17f..6846ca961 100644
--- a/reference/chrono/utc_time.md
+++ b/reference/chrono/utc_time.md
@@ -208,4 +208,5 @@ int main()
 
 
 ## 関連項目
-- [chronoの`std::format()`](/reference/chrono/format.md) (フォーマットの詳細)
+- [chronoの`std::format()`](/reference/chrono/format.md) (出力フォーマットの詳細)
+- [chronoの`parse()`](/reference/chrono/parse.md) (入力フォーマットの詳細)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>from_stream -- chrono : from_streamからparseへの参照を整理</title>
      <link href="https://cpprefjp.github.io/reference/chrono/weekday/from_stream.html"/>
      <id>745f8bcdcf07c523bf69275bee845fef025477a7:reference/chrono/weekday/from_stream.md</id>
      <updated>2020-07-01T17:18:28+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/weekday/from_stream.md b/reference/chrono/weekday/from_stream.md
index fb0f17bf4..65232c5f8 100644
--- a/reference/chrono/weekday/from_stream.md
+++ b/reference/chrono/weekday/from_stream.md
@@ -31,10 +31,6 @@ namespace std::chrono {
 `is`を返す
 
 
-## 備考
-- この解析においては、曜日のフォーマットは、ロケール規定の完全もしくは短縮された曜日名を意味する`%a`が使用される。そのため、デフォルトのCロケールにおいては、日曜日を入力するために`&amp;#34;Sunday`&amp;#34; (完全名) と`&amp;#34;Sun&amp;#34;` (短縮名)の2通りが使用でき、ほかの曜日も同様である
-
-
 ## 例
 ```cpp example
 #include &amp;lt;cassert&amp;gt;
@@ -81,4 +77,4 @@ int main()
 
 
 ## 関連項目
-- [chronoの`std::format()`](/reference/chrono/format.md) (フォーマットの詳細)
+- [chronoの`parse()`](/reference/chrono/parse.md) (入力フォーマットの詳細)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>from_stream -- chrono : from_streamからparseへの参照を整理</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year/from_stream.html"/>
      <id>745f8bcdcf07c523bf69275bee845fef025477a7:reference/chrono/year/from_stream.md</id>
      <updated>2020-07-01T17:18:28+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year/from_stream.md b/reference/chrono/year/from_stream.md
index 3aaf8f08a..98ffed589 100644
--- a/reference/chrono/year/from_stream.md
+++ b/reference/chrono/year/from_stream.md
@@ -31,10 +31,6 @@ namespace std::chrono {
 `is`を返す
 
 
-## 備考
-- この解析においては、日のフォーマットは、デフォルトで4桁ゼロ埋めの日を意味する`%Y`が使用される。3桁の年として123年を表すために`0123`および`123`のどちらでも入力できる。4桁の未満の場合、ゼロ埋めは必須ではない。ゼロ埋めの桁数を指定する`%NY`も指定できる
-
-
 ## 例
 ```cpp example
 #include &amp;lt;cassert&amp;gt;
@@ -80,4 +76,4 @@ int main()
 
 
 ## 関連項目
-- [chronoの`std::format()`](/reference/chrono/format.md) (フォーマットの詳細)
+- [chronoの`parse()`](/reference/chrono/parse.md) (入力フォーマットの詳細)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>from_stream -- chrono : from_streamからparseへの参照を整理</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day/from_stream.html"/>
      <id>745f8bcdcf07c523bf69275bee845fef025477a7:reference/chrono/year_month_day/from_stream.md</id>
      <updated>2020-07-01T17:18:28+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day/from_stream.md b/reference/chrono/year_month_day/from_stream.md
index 1aa4e74f3..0e33d88aa 100644
--- a/reference/chrono/year_month_day/from_stream.md
+++ b/reference/chrono/year_month_day/from_stream.md
@@ -31,10 +31,6 @@ namespace std::chrono {
 `is`を返す
 
 
-## 備考
-- この解析においては、`year_month_day`のフォーマットは、デフォルトで`&amp;#34;%F&amp;#34;`が使用される。これは`&amp;#34;%Y-%m-%d&amp;#34;`と等価であり、ハイフン区切りで年、月、日を整数値として解析する
-
-
 ## 例
 ```cpp example
 #include &amp;lt;cassert&amp;gt;
@@ -82,4 +78,4 @@ int main()
 
 
 ## 関連項目
-- [chronoの`std::format()`](/reference/chrono/format.md) (フォーマットの詳細)
+- [chronoの`parse()`](/reference/chrono/parse.md) (入力フォーマットの詳細)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>parse -- chrono::parse : %aと%bは完全名も許可していた</title>
      <link href="https://cpprefjp.github.io/reference/chrono/parse.html"/>
      <id>edb3c6999cead1de1eb98b4a5238e90a69041e71:reference/chrono/parse.md</id>
      <updated>2020-07-01T17:10:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/parse.md b/reference/chrono/parse.md
index 8b38e8ee7..d53c58215 100644
--- a/reference/chrono/parse.md
+++ b/reference/chrono/parse.md
@@ -45,9 +45,9 @@ namespace std::chrono {
 
 | フォーマットフラグ | 説明 | 例 |
 |--------------------|------|----|
-| `%a` | ロケール依存の曜日の略称 (大文字・小文字を区別しない) | `&amp;#34;Sun&amp;#34;`&amp;lt;br/&amp;gt; 日本のロケールでは`&amp;#34;日&amp;#34;` |
+| `%a` | ロケール依存の曜日の完全名もしくは略称 (大文字・小文字を区別しない) | `&amp;#34;Sun&amp;#34;`&amp;lt;br/&amp;gt; 日本のロケールでは`&amp;#34;日&amp;#34;` |
 | `%A` | `%a`と等価 | |
-| `%b` | ロケール依存の月の略称 (大文字・小文字を区別しない) | `&amp;#34;Apr&amp;#34;`&amp;lt;br/&amp;gt; 日本のロケールでは`&amp;#34;4月&amp;#34;` |
+| `%b` | ロケール依存の月の完全名もしくは略称 (大文字・小文字を区別しない) | `&amp;#34;Apr&amp;#34;`&amp;lt;br/&amp;gt; `&amp;#34;April&amp;#34;`&amp;lt;br/&amp;gt; 日本のロケールでは`&amp;#34;4月&amp;#34;` |
 | `%B` | `%b`と等価 | |
 | `%c` | ロケール依存の日付・時間の表現。改良コマンド`%Ec`を指定すると、異なる表現になる | `&amp;#34;Fri Apr 24 17:14:44 2020&amp;#34;`&amp;lt;br/&amp;gt; 日本のロケールでは`&amp;#34;2020年04月24日 17時14分44秒&amp;#34;`&amp;lt;br/&amp;gt; `%Ec`では`&amp;#34;令和02年04月24日 17時14分44秒&amp;#34;` |
 | `%C` | 世紀の10進数番号。改良コマンド`%NC` (Nは10進整数) によって読み込む最大の文字数を指定できる。Nを指定しない場合、デフォルトは2。先頭の0は許可されるが要求はされない。改良コマンド`%EC`と`%OC`はロケール依存の異なる表現になる | `&amp;#34;21&amp;#34;`&amp;lt;br/&amp;gt; `%EC`では元号`&amp;#34;令和&amp;#34;` |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>month_day -- month_day : from_streamを追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_day.html"/>
      <id>d6a4bc491a3692c763ca8fddb7f7413dae65ebd7:reference/chrono/month_day.md</id>
      <updated>2020-07-01T17:06:58+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_day.md b/reference/chrono/month_day.md
index 0d60c22e0..c477c31e7 100644
--- a/reference/chrono/month_day.md
+++ b/reference/chrono/month_day.md
@@ -68,7 +68,7 @@ namespace std::chrono {
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
 | [`operator&amp;lt;&amp;lt;`](month_day/op_ostream.md)   | 出力ストリームに出力する | C++20 |
-| [`from_stream`](month_day/from_stream.md.nolink) | フォーマット指定して入力ストリームから入力する | C++20 |
+| [`from_stream`](month_day/from_stream.md) | フォーマット指定して入力ストリームから入力する | C++20 |
 
 
 ## 文字列フォーマット
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>from_stream -- month_day : from_streamを追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_day/from_stream.html"/>
      <id>d6a4bc491a3692c763ca8fddb7f7413dae65ebd7:reference/chrono/month_day/from_stream.md</id>
      <updated>2020-07-01T17:06:58+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_day/from_stream.md b/reference/chrono/month_day/from_stream.md
new file mode 100644
index 000000000..febe9bc60
--- /dev/null
+++ b/reference/chrono/month_day/from_stream.md
@@ -0,0 +1,80 @@
+# from_stream
+* chrono[meta header]
+* std::chrono[meta namespace]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  template &amp;lt;class charT, class traits, class Alloc = std::allocator&amp;lt;charT&amp;gt;&amp;gt;
+  std::basic_istream&amp;lt;charT, traits&amp;gt;&amp;amp;
+    from_stream(std::basic_istream&amp;lt;charT, traits&amp;gt;&amp;amp; is,
+                const charT* fmt,
+                month_day&amp;amp; md,
+                basic_string&amp;lt;charT, traits, Alloc&amp;gt;* abbrev = nullptr,
+                minutes* offset = nullptr);   // (1) C++20
+}
+```
+
+## 概要
+フォーマット指定して入力ストリームから`month_day`オブジェクトに入力する。
+
+
+## 効果
+- パラメータ`fmt`で指定されたフォーマットフラグを使用して、入力を解析し、`md`に代入する
+- 有効な年の解析に失敗した場合、`is.`[`setstate`](/reference/ios/basic_ios/setstate.md)`(`[`ios_base::failbit`](/reference/ios/ios_base/type-iostate.md)`)`が呼び出され、パラメータ`md`は変更されない
+- タイムゾーンフォーマット`&amp;#34;%Z&amp;#34;`が指定され、解析が成功した場合、パラメータ`abbrev`が非ヌルである場合に`*abbrev`にタイムゾーン名が代入される
+- タイムゾーンとしてUTC時間からのオフセット時間 (日本なら`&amp;#34;+0900&amp;#34;`) を意味するフォーマット`&amp;#34;%z&amp;#34;`が指定され、解析が成功した場合、パラメータ`offset`が非ヌルである場合に`*offset`にその値が代入される
+
+
+## 戻り値
+`is`を返す
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;sstream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+
+int main()
+{
+  {
+    std::stringstream ss;
+    ss &amp;lt;&amp;lt; &amp;#34;Mar/1&amp;#34;; // &amp;#34;Mar/01&amp;#34;でもOK
+
+    chrono::month_day md;
+    chrono::from_stream(ss, md, &amp;#34;%b/%d&amp;#34;);
+    assert(md == chrono::March/1);
+  }
+  {
+    std::stringstream ss;
+    ss &amp;lt;&amp;lt; &amp;#34;3月1日&amp;#34;;
+
+    chrono::month_day md;
+    chrono::from_stream(ss, md, &amp;#34;%m月%d日&amp;#34;);
+    assert(md == chrono::March/1);
+  }
+}
+```
+* chrono::from_stream[color ff0000]
+* chrono::March[link /reference/chrono/month_constants.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): (9.0時点で実装なし)
+- [GCC](/implementation.md#gcc): (9.2時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 関連項目
+- [`std::chrono::parse()`](/reference/chrono/parse.md) (解析フォーマットの詳細)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>month_day -- month_day : 出力ストリームを追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_day.html"/>
      <id>16fe6232c4adafe0b91a61479ba6380b60abffb9:reference/chrono/month_day.md</id>
      <updated>2020-07-01T16:58:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_day.md b/reference/chrono/month_day.md
index cb9959ed6..0d60c22e0 100644
--- a/reference/chrono/month_day.md
+++ b/reference/chrono/month_day.md
@@ -67,7 +67,7 @@ namespace std::chrono {
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`operator&amp;lt;&amp;lt;`](month_day/op_ostream.md.nolink)   | 出力ストリームに出力する | C++20 |
+| [`operator&amp;lt;&amp;lt;`](month_day/op_ostream.md)   | 出力ストリームに出力する | C++20 |
 | [`from_stream`](month_day/from_stream.md.nolink) | フォーマット指定して入力ストリームから入力する | C++20 |
 
 
@@ -112,11 +112,11 @@ int main()
 
 ### 出力
 ```
-03/01
-03/01
-03/01
-03/01
-03/01
+Mar/01
+Mar/01
+Mar/01
+Mar/01
+Mar/01
 ```
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;&lt; -- month_day : 出力ストリームを追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_day/op_ostream.html"/>
      <id>16fe6232c4adafe0b91a61479ba6380b60abffb9:reference/chrono/month_day/op_ostream.md</id>
      <updated>2020-07-01T16:58:18+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_day/op_ostream.md b/reference/chrono/month_day/op_ostream.md
new file mode 100644
index 000000000..18e3e8006
--- /dev/null
+++ b/reference/chrono/month_day/op_ostream.md
@@ -0,0 +1,61 @@
+# operator&amp;lt;&amp;lt;
+* chrono[meta header]
+* std::chrono[meta namespace]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  template &amp;lt;class charT, class traits&amp;gt;
+  std::basic_ostream&amp;lt;charT, traits&amp;gt;&amp;amp;
+    operator&amp;lt;&amp;lt;(std::basic_ostream&amp;lt;charT, traits&amp;gt;&amp;amp; os, const month_day&amp;amp; md); // (1) C++20
+}
+```
+
+## 概要
+`month_day`オブジェクトを出力ストリームに出力する。
+
+
+## 戻り値
+便宜上のリテラルキャスト`STATICALLY-WIDEN`を導入する。`STATICALLY-WIDEN&amp;lt;charT&amp;gt;(&amp;#34;...&amp;#34;)`は、`charT`が`char`である場合は`&amp;#34;...&amp;#34;`、`charT`が`wchar_t`である場合は`L&amp;#34;...&amp;#34;`を意味する。
+
+- (1) : 以下と等価：
+    ```cpp
+    return os &amp;lt;&amp;lt; format(STATICALLY-WIDEN&amp;lt;charT&amp;gt;(&amp;#34;{}/{}&amp;#34;), md.month(), md.day()) :
+    ```
+    * format[link /reference/format/format.md]
+    * md.month()[link month.md]
+    * md.day()[link day.md]
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+
+int main()
+{
+  std::cout &amp;lt;&amp;lt; chrono::March/1 &amp;lt;&amp;lt; std::endl;
+}
+```
+* chrono::March[link /reference/chrono/month_constants.md]
+
+### 出力
+```
+Mar/01
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): (9.0時点で実装なし)
+- [GCC](/implementation.md#gcc): (9.2時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 関連項目
+- [chronoの`std::format()`](/reference/chrono/format.md) (フォーマットの詳細)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>month_day -- month_day : 比較演算子を追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_day.html"/>
      <id>83f8ec495b4c0cb7f29afc7058ae29c19e0cef15:reference/chrono/month_day.md</id>
      <updated>2020-07-01T16:52:39+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_day.md b/reference/chrono/month_day.md
index 6087b0bb9..cb9959ed6 100644
--- a/reference/chrono/month_day.md
+++ b/reference/chrono/month_day.md
@@ -54,9 +54,9 @@ namespace std::chrono {
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`operator==`](month_day/op_equal.md.nolink) | 等値比較を行う | C++20 |
+| [`operator==`](month_day/op_equal.md) | 等値比較を行う | C++20 |
 | `bool operator!=(const month_day&amp;amp;, const month_day&amp;amp;) noexcept;` | 非等値比較を行う (`==`により使用可能) | C++20 |
-| [`operator&amp;lt;=&amp;gt;`](month_day/op_compare_3way.md.nolink) | 三方比較を行う | C++20 |
+| [`operator&amp;lt;=&amp;gt;`](month_day/op_compare_3way.md) | 三方比較を行う | C++20 |
 | `bool operator&amp;lt;(const month_day&amp;amp;, const month_day&amp;amp;) noexcept;` | 左辺が右辺より小さいかを判定する (`&amp;lt;=&amp;gt;`により使用可能) | C++20 |
 | `bool operator&amp;lt;=(const month_day&amp;amp;, const month_day&amp;amp;) noexcept;` | 左辺が右辺以下を判定する (`&amp;lt;=&amp;gt;`により使用可能) | C++20 |
 | `bool operator&amp;gt;(const month_day&amp;amp;, const month_day&amp;amp;) noexcept;` | 左辺が右辺より大きいかを判定する (`&amp;lt;=&amp;gt;`により使用可能) | C++20 |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;=&gt; -- month_day : 比較演算子を追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_day/op_compare_3way.html"/>
      <id>83f8ec495b4c0cb7f29afc7058ae29c19e0cef15:reference/chrono/month_day/op_compare_3way.md</id>
      <updated>2020-07-01T16:52:39+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_day/op_compare_3way.md b/reference/chrono/month_day/op_compare_3way.md
new file mode 100644
index 000000000..79f94a6a9
--- /dev/null
+++ b/reference/chrono/month_day/op_compare_3way.md
@@ -0,0 +1,67 @@
+# operator&amp;lt;=&amp;gt;
+* chrono[meta header]
+* std::chrono[meta namespace]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  constexpr strong_ordering operator&amp;lt;=&amp;gt;(const month_day&amp;amp; x, const month_day&amp;amp; y) noexcept; // (1) C++20
+}
+```
+
+## 概要
+`month_day`同士の三方比較を行う。
+
+
+## 戻り値
+- (1) : 以下と等価：
+
+```cpp
+if (auto c = x.month() &amp;lt;=&amp;gt; y.month(); c != 0) return c;
+return x.day() &amp;lt;=&amp;gt; y.day();
+```
+* month()[link month.md]
+* day()[link day.md]
+
+
+## 例外
+投げない
+
+
+## 備考
+- この演算子により、`operator&amp;lt;`、`operator&amp;lt;=`、`operator&amp;gt;`、`operator&amp;gt;=`が使用可能になる
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+
+int main()
+{
+  assert((chrono::March/1 &amp;lt;=&amp;gt; chrono::March/1) == 0);
+
+  assert(chrono::March/1 &amp;lt; chrono::March/2);
+  assert(chrono::March/1 &amp;lt;= chrono::March/2);
+
+  assert(chrono::March/2 &amp;gt; chrono::March/1);
+  assert(chrono::March/2 &amp;gt;= chrono::March/1);
+}
+```
+* chrono::March[link /reference/chrono/month_constants.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): (10.0時点で実装なし)
+- [GCC](/implementation.md#gcc): (9.2時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator== -- month_day : 比較演算子を追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_day/op_equal.html"/>
      <id>83f8ec495b4c0cb7f29afc7058ae29c19e0cef15:reference/chrono/month_day/op_equal.md</id>
      <updated>2020-07-01T16:52:39+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_day/op_equal.md b/reference/chrono/month_day/op_equal.md
new file mode 100644
index 000000000..220123f70
--- /dev/null
+++ b/reference/chrono/month_day/op_equal.md
@@ -0,0 +1,61 @@
+# operator==
+* chrono[meta header]
+* std::chrono[meta namespace]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  constexpr bool operator==(const month_day&amp;amp; x, const month_day&amp;amp; y) noexcept; // (1) C++20
+}
+```
+
+## 概要
+`month_day`同士の等値比較を行う。
+
+
+## 戻り値
+- (1) :
+
+```cpp
+return x.month() == y.month() &amp;amp;&amp;amp; x.day() == y.day();
+```
+* month()[link month.md]
+* day()[link day.md]
+
+
+## 例外
+投げない
+
+
+## 備考
+- この演算子により、`operator!=`が使用可能になる
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+
+int main()
+{
+  assert(chrono::March/1 == chrono::March/1);
+  assert(chrono::March/1 != chrono::March/2);
+}
+```
+* chrono::March[link /reference/chrono/month_constants.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): (9.2時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
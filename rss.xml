<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2022-03-20T16:16:41.933526</updated>
  <id>5da79282-6d23-45a0-b4a6-2ef0d626665b</id>

  
    <entry>
      <title>perms -- Merge pull request #957 from cpprefjp/fix_typo</title>
      <link href="https://cpprefjp.github.io/reference/filesystem/perms.html"/>
      <id>d85e7606fed036200a64a202e00646eb2d01baeb:reference/filesystem/perms.md</id>
      <updated>2022-03-21T01:11:45+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/filesystem/perms.md b/reference/filesystem/perms.md
index aea7d0436..82a69422c 100644
--- a/reference/filesystem/perms.md
+++ b/reference/filesystem/perms.md
@@ -25,7 +25,7 @@ namespace std::filesystem {
     set_gid      = 02000,
     sticky_bit   = 01000,
     mask         = 07777, // all | set_uid | set_gid | sticky_bit
-    unknown      = 0xFFF
+    unknown      = 0xFFFF
   };
 }
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>end -- Merge pull request #957 from cpprefjp/fix_typo</title>
      <link href="https://cpprefjp.github.io/reference/set/multiset/end.html"/>
      <id>d85e7606fed036200a64a202e00646eb2d01baeb:reference/set/multiset/end.md</id>
      <updated>2022-03-21T01:11:45+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/set/multiset/end.md b/reference/set/multiset/end.md
index 4992db631..d11e9f9c5 100644
--- a/reference/set/multiset/end.md
+++ b/reference/set/multiset/end.md
@@ -1,4 +1,4 @@
-# end, cend
+# end
 * set[meta header]
 * std[meta namespace]
 * multiset[meta class]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>end -- Merge pull request #957 from cpprefjp/fix_typo</title>
      <link href="https://cpprefjp.github.io/reference/set/set/end.html"/>
      <id>d85e7606fed036200a64a202e00646eb2d01baeb:reference/set/set/end.md</id>
      <updated>2022-03-21T01:11:45+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/set/set/end.md b/reference/set/set/end.md
index d650f48d6..91d728408 100644
--- a/reference/set/set/end.md
+++ b/reference/set/set/end.md
@@ -1,4 +1,4 @@
-# end, cend
+# end
 * set[meta header]
 * std[meta namespace]
 * set[meta class]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>merge -- リンク修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_merge.html"/>
      <id>07831c60f3b4aebbc4a6da00749eec1e4a58772c:reference/algorithm/ranges_merge.md</id>
      <updated>2022-03-21T00:05:06+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_merge.md b/reference/algorithm/ranges_merge.md
index d236bf85d..25c63d85a 100644
--- a/reference/algorithm/ranges_merge.md
+++ b/reference/algorithm/ranges_merge.md
@@ -9,16 +9,27 @@ namespace std::ranges {
   template&amp;lt;class I1, class I2, class O&amp;gt;
   using merge_result = in_in_out_result&amp;lt;I1, I2, O&amp;gt;;
 
-  template&amp;lt;input_iterator I1, sentinel_for&amp;lt;I1&amp;gt; S1, input_iterator I2, sentinel_for&amp;lt;I2&amp;gt; S2,
-           weakly_incrementable O, class Comp = ranges::less, class Proj1 = identity, class Proj2 = identity&amp;gt;
+  template&amp;lt;input_iterator I1, sentinel_for&amp;lt;I1&amp;gt; S1, input_iterator I2, sentinel_for&amp;lt;I2&amp;gt; S2, weakly_incrementable O,
+           class Comp = ranges::less, class Proj1 = identity, class Proj2 = identity&amp;gt;
     requires mergeable&amp;lt;I1, I2, O, Comp, Proj1, Proj2&amp;gt;
   constexpr merge_result&amp;lt;I1, I2, O&amp;gt; merge(I1 first1, S1 last1, I2 first2, S2 last2, O result, Comp comp = {}, Proj1 proj1 = {}, Proj2 proj2 = {});                    // (1)
 
-  template&amp;lt;input_range R1, input_range R2, weakly_incrementable O, class Comp = ranges::less, class Proj1 = identity, class Proj2 = identity&amp;gt;
+  template&amp;lt;input_range R1, input_range R2, weakly_incrementable O,
+           class Comp = ranges::less, class Proj1 = identity, class Proj2 = identity&amp;gt;
     requires mergeable&amp;lt;iterator_t&amp;lt;R1&amp;gt;, iterator_t&amp;lt;R2&amp;gt;, O, Comp, Proj1, Proj2&amp;gt;
   constexpr merge_result&amp;lt;borrowed_iterator_t&amp;lt;R1&amp;gt;, borrowed_iterator_t&amp;lt;R2&amp;gt;, O&amp;gt; merge(R1&amp;amp;&amp;amp; r1, R2&amp;amp;&amp;amp; r2, O result, Comp comp = {}, Proj1 proj1 = {}, Proj2 proj2 = {});  // (2)
 }
 ```
+* in_in_out_result[link in_in_out_result.md]
+* input_iterator[link /reference/iterator/input_iterator.md]
+* sentinel_for[link /reference/iterator/sentinel_for.md]
+* weakly_incrementable[link /reference/iterator/weakly_incrementable.md]
+* ranges::less[link /reference/functional/ranges_less.md]
+* identity[link /reference/functional/identity.md]
+* mergeable[link /reference/iterator/mergeable.md]
+* input_range[link /reference/ranges/input_range.md]
+* iterator_t[link /reference/ranges/iterator_t.md]
+* borrowed_iterator_t[link /reference/ranges/borrowed_iterator_t.md]
 
 ## 概要
 2つのソート済み範囲をマージして、出力イテレーターへ出力する。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>algorithm -- マージ関係の説明を追加 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm.html"/>
      <id>6b1aa1b919a376d92a729fbacb34fbc35f8825d6:reference/algorithm.md</id>
      <updated>2022-03-21T00:04:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm.md b/reference/algorithm.md
index d70adabd9..3917d36fe 100644
--- a/reference/algorithm.md
+++ b/reference/algorithm.md
@@ -313,8 +313,8 @@ ranges::sort(pv, {}, &amp;amp;Parson::name);
 |-------------------------------------------------|---------------------------------|-------|
 | [`merge`](algorithm/merge.md)                 | 2つのソート済み範囲をマージする | |
 | [`inplace_merge`](algorithm/inplace_merge.md) | 2つの連続したソート済み範囲をマージする | |
-| [`ranges::merge`](algorithm/ranges_merge.md.nolink)                 | 2つのソート済み範囲をマージする         | C++20 |
-| [`ranges::inplace_merge`](algorithm/ranges_inplace_merge.md.nolink) | 2つの連続したソート済み範囲をマージする | C++20 |
+| [`ranges::merge`](algorithm/ranges_merge.md)                 | 2つのソート済み範囲をマージする         | C++20 |
+| [`ranges::inplace_merge`](algorithm/ranges_inplace_merge.md) | 2つの連続したソート済み範囲をマージする | C++20 |
 
 ### ソート済み構造に対する集合演算
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>inplace_merge -- マージ関係の説明を追加 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_inplace_merge.html"/>
      <id>6b1aa1b919a376d92a729fbacb34fbc35f8825d6:reference/algorithm/ranges_inplace_merge.md</id>
      <updated>2022-03-21T00:04:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_inplace_merge.md b/reference/algorithm/ranges_inplace_merge.md
new file mode 100644
index 000000000..4b0fad40d
--- /dev/null
+++ b/reference/algorithm/ranges_inplace_merge.md
@@ -0,0 +1,102 @@
+# inplace_merge
+* algorithm[meta header]
+* std::ranges[meta namespace]
+* function template[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std {
+  template&amp;lt;bidirectional_iterator I, sentinel_for&amp;lt;I&amp;gt; S, class Comp = ranges::less, class Proj = identity&amp;gt;
+    requires sortable&amp;lt;I, Comp, Proj&amp;gt;
+  I inplace_merge(I first, I middle, S last, Comp comp = {}, Proj proj = {});
+
+  template&amp;lt;bidirectional_range R, class Comp = ranges::less, class Proj = identity&amp;gt;
+    requires sortable&amp;lt;iterator_t&amp;lt;R&amp;gt;, Comp, Proj&amp;gt;
+  borrowed_iterator_t&amp;lt;R&amp;gt; inplace_merge(R&amp;amp;&amp;amp; r, iterator_t&amp;lt;R&amp;gt; middle, Comp comp = {}, Proj proj = {});
+}
+```
+* bidirectional_iterator[link /reference/iterator/bidirectional_iterator.md]
+* sentinel_for[link /reference/iterator/sentinel_for.md]
+* ranges::less[link /reference/functional/ranges_less.md]
+* identity[link /reference/functional/identity.md]
+* sortable[link /reference/iterator/sortable.md]
+* bidirectional_range[link /reference/ranges/bidirectional_range.md]
+* iterator_t[link /reference/ranges/iterator_t.md]
+* borrowed_iterator_t[link /reference/ranges/borrowed_iterator_t.md]
+
+## 概要
+2つの連続したソート済み範囲をマージする。
+
+* (1): イテレーターペアで範囲を指定する
+* (2): 範囲を直接指定する
+
+## 事前条件
+- `[first,middle)` と `[middle,last)` の範囲はそれぞれソートされていること。
+
+
+## 効果
+`[first,middle)`, `[middle,last)` という、連続した２つの範囲をマージし、結果を `[first,last)` へ格納する。
+
+結果の範囲 `[first,last)` は昇順になる。
+
+
+## 戻り値
+`last`
+
+
+## 計算量
+`N = last - first`であるとして説明する。
+
+- 余分なメモリを使用する場合は、`N - 1` 回比較する。そうでない場合は、O(N log(N))回比較する
+
+## 備考
+この操作は安定である。つまり、各入力範囲内の要素の前後関係は保たれ、また、1 番目の範囲と 2 番目に等値の要素があった場合には、1 番目の範囲の要素の方が先に来る。
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;vector&amp;gt;
+#include &amp;lt;algorithm&amp;gt;
+
+int main()
+{
+  std::vector&amp;lt;int&amp;gt; v = {1,4,5,  2,3,6};
+
+  // ソートされた2つの範囲をマージ
+  std::ranges::inplace_merge(v, v.begin() + 3);
+
+  for (int x : v) {
+    std::cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; std::endl;
+  }
+}
+```
+* std::ranges::inplace_merge[color ff0000]
+
+### 出力
+```
+1
+2
+3
+4
+5
+6
+```
+
+## 実装例
+- [inplace_merge を読んでみた](http://www.kmonos.net/wlog/115.html#_2300101215)
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): 10.1.0
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
+
+## 参照
+- [N4861 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
+
+
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>merge -- マージ関係の説明を追加 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_merge.html"/>
      <id>6b1aa1b919a376d92a729fbacb34fbc35f8825d6:reference/algorithm/ranges_merge.md</id>
      <updated>2022-03-21T00:04:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_merge.md b/reference/algorithm/ranges_merge.md
new file mode 100644
index 000000000..d236bf85d
--- /dev/null
+++ b/reference/algorithm/ranges_merge.md
@@ -0,0 +1,106 @@
+# merge
+* algorithm[meta header]
+* std::ranges[meta namespace]
+* function template[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::ranges {
+  template&amp;lt;class I1, class I2, class O&amp;gt;
+  using merge_result = in_in_out_result&amp;lt;I1, I2, O&amp;gt;;
+
+  template&amp;lt;input_iterator I1, sentinel_for&amp;lt;I1&amp;gt; S1, input_iterator I2, sentinel_for&amp;lt;I2&amp;gt; S2,
+           weakly_incrementable O, class Comp = ranges::less, class Proj1 = identity, class Proj2 = identity&amp;gt;
+    requires mergeable&amp;lt;I1, I2, O, Comp, Proj1, Proj2&amp;gt;
+  constexpr merge_result&amp;lt;I1, I2, O&amp;gt; merge(I1 first1, S1 last1, I2 first2, S2 last2, O result, Comp comp = {}, Proj1 proj1 = {}, Proj2 proj2 = {});                    // (1)
+
+  template&amp;lt;input_range R1, input_range R2, weakly_incrementable O, class Comp = ranges::less, class Proj1 = identity, class Proj2 = identity&amp;gt;
+    requires mergeable&amp;lt;iterator_t&amp;lt;R1&amp;gt;, iterator_t&amp;lt;R2&amp;gt;, O, Comp, Proj1, Proj2&amp;gt;
+  constexpr merge_result&amp;lt;borrowed_iterator_t&amp;lt;R1&amp;gt;, borrowed_iterator_t&amp;lt;R2&amp;gt;, O&amp;gt; merge(R1&amp;amp;&amp;amp; r1, R2&amp;amp;&amp;amp; r2, O result, Comp comp = {}, Proj1 proj1 = {}, Proj2 proj2 = {});  // (2)
+}
+```
+
+## 概要
+2つのソート済み範囲をマージして、出力イテレーターへ出力する。
+
+* (1): イテレーターペアで範囲を指定する
+* (2): 範囲を直接指定する
+
+
+## 事前条件
+- `[first1,last1)` と `[first2,last2)` はソートされていること。
+- 結果の範囲と入力の範囲は重なっていてはならない。
+
+
+## 効果
+`[first1,last1)` と `[first2,last2)` の２つの要素を全て `[result,result_last)` へコピーする。その際に、[`is_sorted`](ranges_is_sorted.md)`(result, result_last, comp)` を満たすようにコピーする（`result_last` は `result + (last1 - first1) + (last2 - first2)` とする）。
+
+
+## 戻り値
+次のメンバをもつtuple-likeオブジェクト。
+
+```cpp
+merge_result {
+  .in  = last1,
+  .in2 = last2,
+  .out = result + (last1 - first1) + (last2 - first2),
+}
+```
+
+## 計算量
+`N = (last1 - first1) + (last2 - first2)`であるとして最大で、N - 1回比較する
+
+## 備考
+この操作は安定である。つまり、各入力範囲内の要素の前後関係は保たれ、また、1 番目の範囲と 2 番目に等値の要素があった場合には、1 番目の範囲の要素の方が先に来る。
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;vector&amp;gt;
+#include &amp;lt;algorithm&amp;gt;
+
+int main()
+{
+  std::vector&amp;lt;int&amp;gt; a = {3, 1, 4, 2};
+  std::vector&amp;lt;int&amp;gt; b = {2, 5, 6, 4};
+  std::vector&amp;lt;int&amp;gt; result;
+
+  std::ranges::sort(a);
+  std::ranges::sort(b);
+
+  // aとbをマージ
+  std::ranges::merge(a, b, std::back_inserter(result));
+
+  for (int x : result) {
+    std::cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; std::endl;
+  }
+}
+```
+* std::ranges::sort[link ranges_sort.md]
+* std::ranges::merge[color ff0000]
+
+### 出力
+```
+1
+2
+2
+3
+4
+4
+5
+6
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): 10.1.0
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
+
+## 参照
+- [N4861 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>max_element -- リンク修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_max_element.html"/>
      <id>1befcbdc598b49e8652bb8b32f0947dcad9ae03b:reference/algorithm/ranges_max_element.md</id>
      <updated>2022-03-20T23:07:45+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_max_element.md b/reference/algorithm/ranges_max_element.md
index e95211c11..fdcacd74e 100644
--- a/reference/algorithm/ranges_max_element.md
+++ b/reference/algorithm/ranges_max_element.md
@@ -15,7 +15,7 @@ namespace std::ranges {
   constexpr borrowed_iterator_t&amp;lt;R&amp;gt; max_element(R&amp;amp;&amp;amp; r, Comp comp = {}, Proj proj = {});
 }
 ```
-* forward_iterator[link /reference/ranges/forward_iterator.md]
+* forward_iterator[link /reference/iterator/forward_iterator.md]
 * identity[link /reference/functional/identity.md]
 * indirect_strict_weak_order[link /reference/iterator/indirect_strict_weak_order.md]
 * projected[link /reference/iterator/projected.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>min_element -- リンク修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_min_element.html"/>
      <id>1befcbdc598b49e8652bb8b32f0947dcad9ae03b:reference/algorithm/ranges_min_element.md</id>
      <updated>2022-03-20T23:07:45+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_min_element.md b/reference/algorithm/ranges_min_element.md
index d0cc89f93..1ce557869 100644
--- a/reference/algorithm/ranges_min_element.md
+++ b/reference/algorithm/ranges_min_element.md
@@ -15,7 +15,7 @@ namespace std::ranges {
   constexpr borrowed_iterator_t&amp;lt;R&amp;gt; min_element(R&amp;amp;&amp;amp; r, Comp comp = {}, Proj proj = {});
 }
 ```
-* forward_iterator[link /reference/ranges/forward_iterator.md]
+* forward_iterator[link /reference/iterator/forward_iterator.md]
 * identity[link /reference/functional/identity.md]
 * indirect_strict_weak_order[link /reference/iterator/indirect_strict_weak_order.md]
 * projected[link /reference/iterator/projected.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>minmax_element -- リンク修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_minmax_element.html"/>
      <id>1befcbdc598b49e8652bb8b32f0947dcad9ae03b:reference/algorithm/ranges_minmax_element.md</id>
      <updated>2022-03-20T23:07:45+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_minmax_element.md b/reference/algorithm/ranges_minmax_element.md
index 6c8cf95aa..5914791fd 100644
--- a/reference/algorithm/ranges_minmax_element.md
+++ b/reference/algorithm/ranges_minmax_element.md
@@ -19,7 +19,7 @@ namespace std::ranges {
 }
 ```
 * min_max_result[link min_max_result.md.nolink]
-* forward_iterator[link /reference/ranges/forward_iterator.md]
+* forward_iterator[link /reference/iterator/forward_iterator.md]
 * identity[link /reference/functional/identity.md]
 * indirect_strict_weak_order[link /reference/iterator/indirect_strict_weak_order.md]
 * projected[link /reference/iterator/projected.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>perms -- fix typos</title>
      <link href="https://cpprefjp.github.io/reference/filesystem/perms.html"/>
      <id>e0823067c18bfabb215ed1785e8b88b82716f3d0:reference/filesystem/perms.md</id>
      <updated>2022-03-20T20:19:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/filesystem/perms.md b/reference/filesystem/perms.md
index aea7d0436..82a69422c 100644
--- a/reference/filesystem/perms.md
+++ b/reference/filesystem/perms.md
@@ -25,7 +25,7 @@ namespace std::filesystem {
     set_gid      = 02000,
     sticky_bit   = 01000,
     mask         = 07777, // all | set_uid | set_gid | sticky_bit
-    unknown      = 0xFFF
+    unknown      = 0xFFFF
   };
 }
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>end -- fix typos</title>
      <link href="https://cpprefjp.github.io/reference/set/multiset/end.html"/>
      <id>e0823067c18bfabb215ed1785e8b88b82716f3d0:reference/set/multiset/end.md</id>
      <updated>2022-03-20T20:19:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/set/multiset/end.md b/reference/set/multiset/end.md
index 4992db631..d11e9f9c5 100644
--- a/reference/set/multiset/end.md
+++ b/reference/set/multiset/end.md
@@ -1,4 +1,4 @@
-# end, cend
+# end
 * set[meta header]
 * std[meta namespace]
 * multiset[meta class]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>end -- fix typos</title>
      <link href="https://cpprefjp.github.io/reference/set/set/end.html"/>
      <id>e0823067c18bfabb215ed1785e8b88b82716f3d0:reference/set/set/end.md</id>
      <updated>2022-03-20T20:19:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/set/set/end.md b/reference/set/set/end.md
index d650f48d6..91d728408 100644
--- a/reference/set/set/end.md
+++ b/reference/set/set/end.md
@@ -1,4 +1,4 @@
-# end, cend
+# end
 * set[meta header]
 * std[meta namespace]
 * set[meta class]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
</feed>
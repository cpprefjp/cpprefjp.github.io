<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="http://cpprefjp.github.io" />
  <updated>2015-11-03T01:30:26.256999</updated>
  <id>8eee945f-c8f9-4961-9707-48a5e33886d0</id>

  
    <entry>
      <title>arg -- complex:コードの空白の調整</title>
      <link href="http://cpprefjp.github.io/reference/complex/arg.html"/>
      <id>f40c0f3233d59cba58628be3fba33506bf53dfcc:reference/complex/arg.md</id>
      <updated>2015-11-03 01:29:39 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;function template&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;complex&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;arg&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  T arg(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; x);

  &lt;i&gt;Promoted&lt;/i&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;arg&lt;/span&gt;(&lt;i&gt;Arithmetic&lt;/i&gt; x);   &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 追加のオーバーロード：C++11 から&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;複素数値の偏角を得る。arg は argument（偏角）の略。&lt;/p&gt;
&lt;p&gt;なお、C++11 で追加されたオーバーロードは、以下のように規定されている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;実引数の型が &lt;code&gt;long double&lt;/code&gt; の場合、&lt;code&gt;complex&amp;lt;long double&amp;gt;&lt;/code&gt; にキャストされているかのように振る舞う。&lt;/li&gt;
&lt;li&gt;そうでなくて、実引数の型が &lt;code&gt;double&lt;/code&gt; か整数型の場合、&lt;code&gt;complex&amp;lt;double&amp;gt;&lt;/code&gt; にキャストされているかのように振る舞う。&lt;/li&gt;
&lt;li&gt;そうでなくて、実引数の型が &lt;code&gt;float&lt;/code&gt; の場合、&lt;code&gt;complex&amp;lt;float&amp;gt;&lt;/code&gt; にキャストされているかのように振る舞う。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;また、これらの追加のオーバーロードが関数テンプレートなのか否か、あるいは、引数が参照型なのか否かなどについては、規格では何も言及されていない。&lt;/p&gt;
&lt;h2&gt;戻り値&lt;/h2&gt;
&lt;p&gt;引数 &lt;code&gt;x&lt;/code&gt; の偏角。単位はラジアン。&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/atan2.html&#34;&gt;atan2&lt;/a&gt;(&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/imag.html&#34;&gt;imag&lt;/a&gt;(x), &lt;a href=&#34;http://cpprefjp.github.io/reference/complex/real.html&#34;&gt;real&lt;/a&gt;(x))&lt;/code&gt;。&lt;/p&gt;
&lt;h2&gt;備考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;規格には、上記の戻り値に記載されている以上の規定・説明は無い。&lt;br /&gt;
    なお、C99 の規格にある本関数と同等の関数群（&lt;code&gt;complex.h&lt;/code&gt; ヘッダの &lt;code&gt;carg&lt;/code&gt;、&lt;code&gt;cargf&lt;/code&gt;、&lt;code&gt;cargl&lt;/code&gt; の 3 つ。それぞれ C++ の &lt;code&gt;arg&amp;lt;double&amp;gt;&lt;/code&gt;、&lt;code&gt;arg&amp;lt;float&amp;gt;&lt;/code&gt;、&lt;code&gt;arg&amp;lt;long double&amp;gt;&lt;/code&gt; に相当）では、本関数は実軸の負の領域すべてを分岐截断とすること、および、戻り値は &lt;code&gt;[-π, π]&lt;/code&gt; の区間であることが記載されている。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/atan2.html&#34;&gt;atan2&lt;/a&gt;&lt;/code&gt; は、処理系が ISO IEC 60559（IEEE 754 と同一）に準拠していない場合、両方の引数が &lt;code&gt;0&lt;/code&gt; の場合には定義域エラー（domain error）としても良いとされているので注意（つまり、&lt;code&gt;0&lt;/code&gt; の偏角を求めようとするとエラーとなる）。&lt;br /&gt;
    ISO IEC 60559 に準拠している場合、両方の引数が &lt;code&gt;0&lt;/code&gt; の場合には戻り値が &lt;code&gt;0&lt;/code&gt; であることが規定されている。&lt;/li&gt;
&lt;li&gt;処理系が ISO IEC 60559 に準拠しているかどうかは、C99 の場合はマクロ &lt;code&gt;__STDC_IEC_559_COMPLEX__&lt;/code&gt; が &lt;code&gt;1&lt;/code&gt; に定義されている事で判別可能であるが、C++ の規格書には該当する記載を見つける事ができなかった。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream.html&#34;&gt;iostream&lt;/a&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; c(&lt;span style=&#34;color: #666666&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;2.0&lt;/span&gt;);

  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; result &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;arg&lt;/span&gt;(c);
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;span style=&#34;color:#ff0000&#34;&gt;arg&lt;/span&gt;( &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; c &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34; ) = &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; result &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;arg( (1,2) ) = 1.10715
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++98（追加のオーバーロードは C++11 から）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: 3.0, 3.1, 3.2, 3.3, 3.4（追加のオーバーロード含む）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: 4.3.6, 4.4.7, 4.5.4, 4.6.4, 4.7.3, 4.8.1, 4.8.2, 4.9.0（追加のオーバーロード以外）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++11 mode&lt;/a&gt;: 4.3.6, 4.4.7, 4.5.4, 4.6.4, 4.7.3, 4.8.1, 4.8.2, 4.9.0（追加のオーバーロード含む）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: ??&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/real.html&#34;&gt;real&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の実部を得る。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/imag.html&#34;&gt;imag&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の虚部を得る。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/abs.html&#34;&gt;abs&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の絶対値を得る。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/norm.html&#34;&gt;norm&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数体のノルムを得る。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/conj.html&#34;&gt;conj&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;共役複素数を得る。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/proj.html&#34;&gt;proj&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;リーマン球面への射影を得る。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/polar.html&#34;&gt;polar&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した絶対値と偏角の複素数値を得る。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Mitsuru Kariya</name>
        <email>kariya_mitsuru@hotmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>asinh -- complex:コードの空白の調整</title>
      <link href="http://cpprefjp.github.io/reference/complex/asinh.html"/>
      <id>f40c0f3233d59cba58628be3fba33506bf53dfcc:reference/complex/asinh.md</id>
      <updated>2015-11-03 01:29:39 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;function template&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;complex&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;asinh&lt;span class=&#34;cpp cpp11&#34; title=&#34;C++11で追加&#34;&gt;(C++11)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; asinh(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; x);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;複素数値の逆双曲線正弦（エリアハイパボリックサイン：area hyperbolic sine（備考参照））を得る。&lt;/p&gt;
&lt;h2&gt;戻り値&lt;/h2&gt;
&lt;p&gt;引数 &lt;code&gt;x&lt;/code&gt; の逆双曲線正弦。本関数の値域は、虚軸方向は全域、実軸方向は &lt;code&gt;[-π/2, +π/2]&lt;/code&gt; の区間である。&lt;/p&gt;
&lt;h2&gt;備考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;本関数は実軸の区間 &lt;code&gt;[-1, +1]&lt;/code&gt; の外側を分岐截断とする。&lt;/li&gt;
&lt;li&gt;本関数は、C99 の規格にある &lt;code&gt;casinh&lt;/code&gt;（より正確には &lt;code&gt;complex.h&lt;/code&gt; ヘッダの &lt;code&gt;casinh&lt;/code&gt;、&lt;code&gt;casinhf&lt;/code&gt;、&lt;code&gt;casinhl&lt;/code&gt; の 3 つ。それぞれ C++ の &lt;code&gt;asinh&amp;lt;double&amp;gt;&lt;/code&gt;、&lt;code&gt;asinh&amp;lt;float&amp;gt;&lt;/code&gt;、&lt;code&gt;asinh&amp;lt;long double&amp;gt;&lt;/code&gt; に相当）と同等である。&lt;br /&gt;
    C99 では、処理系が ISO IEC 60559（IEEE 754 と同一）に準拠している場合、以下のように規定されている。&lt;ul&gt;
&lt;li&gt;&lt;code&gt;asinh(&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/conj.html&#34;&gt;conj&lt;/a&gt;(x)) = &lt;a href=&#34;http://cpprefjp.github.io/reference/complex/conj.html&#34;&gt;conj&lt;/a&gt;(asinh(x))&lt;/code&gt; で、また、&lt;code&gt;asinh&lt;/code&gt; は奇関数（つまり、&lt;code&gt;asinh(-x) = -asinh(x)&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;asinh(complex(+0, +0))&lt;/code&gt; は &lt;code&gt;complex(+0, +0)&lt;/code&gt; を返す。&lt;/li&gt;
&lt;li&gt;有限で正の符号を持つ（&lt;code&gt;+0&lt;/code&gt; を含む）&lt;code&gt;x&lt;/code&gt; について、&lt;code&gt;asinh(complex(x, +∞))&lt;/code&gt; は &lt;code&gt;complex(+∞, π/2)&lt;/code&gt; を返す。&lt;/li&gt;
&lt;li&gt;有限の &lt;code&gt;x&lt;/code&gt; について、&lt;code&gt;asinh(complex(x, NaN))&lt;/code&gt; は &lt;code&gt;complex(NaN, NaN)&lt;/code&gt; を返すとともに、無効演算の浮動小数点例外（&lt;code&gt;FE_INVALID&lt;/code&gt;）を引き起こす可能性がある。&lt;/li&gt;
&lt;li&gt;有限で正の符号を持つ（&lt;code&gt;+0&lt;/code&gt; を含む）&lt;code&gt;y&lt;/code&gt; について、&lt;code&gt;asinh(complex(+∞, y))&lt;/code&gt; は &lt;code&gt;complex(+∞, +0)&lt;/code&gt; を返す。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;asinh(complex(+∞, +∞))&lt;/code&gt; は &lt;code&gt;complex(+∞, π/4)&lt;/code&gt; を返す。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;asinh(complex(+∞, NaN))&lt;/code&gt; は &lt;code&gt;complex(+∞, NaN)&lt;/code&gt; を返す。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;asinh(complex(NaN, +0))&lt;/code&gt; は &lt;code&gt;complex(NaN, +0)&lt;/code&gt; を返す。&lt;/li&gt;
&lt;li&gt;有限で非ゼロの &lt;code&gt;y&lt;/code&gt; について、&lt;code&gt;asinh(complex(NaN, y))&lt;/code&gt; は &lt;code&gt;complex(NaN, NaN)&lt;/code&gt; を返すとともに、無効演算の浮動小数点例外（&lt;code&gt;FE_INVALID&lt;/code&gt;）を引き起こす可能性がある。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;asinh(complex(NaN, +∞))&lt;/code&gt; は &lt;code&gt;complex(±∞, NaN)&lt;/code&gt; を返す（結果値の実部の符号は未規定）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;asinh(complex(NaN, NaN))&lt;/code&gt; は &lt;code&gt;complex(NaN, NaN)&lt;/code&gt; を返す。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;処理系が ISO IEC 60559 に準拠しているかどうかは、C99 の場合はマクロ &lt;code&gt;__STDC_IEC_559_COMPLEX__&lt;/code&gt; が &lt;code&gt;1&lt;/code&gt; に定義されている事で判別可能であるが、C++ の規格書には該当する記載を見つける事ができなかった。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;逆双曲線正弦の算出については、一部の算術型に対しても、他のヘッダで定義されている。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;引数の型&lt;/th&gt;
&lt;th&gt;関数&lt;/th&gt;
&lt;th&gt;ヘッダ&lt;/th&gt;
&lt;th&gt;備考&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;float&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/asinh.html&#34;&gt;asinh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath.html&#34;&gt;cmath&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;C++11 から&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;double&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/asinh.html&#34;&gt;asinh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath.html&#34;&gt;cmath&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;C++11 から&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;long double&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/asinh.html&#34;&gt;asinh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath.html&#34;&gt;cmath&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;C++11 から&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;任意の整数型&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/asinh.html&#34;&gt;asinh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath.html&#34;&gt;cmath&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;C++11 から&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;なお、残念ながら &lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/valarray.html&#34;&gt;valarray&lt;/a&gt;&lt;/code&gt; クラステンプレートには逆双曲線正弦の算出は定義されていない。
逆双曲線関数は C++11 で追加された関数であるため、その際の追加漏れかもしれない。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;規格書では arc hyperbolic sine となっているが、逆双曲線関数で求めるのは「弧（arc）」ではなく「面積（area）」であるため、（広く誤用されてはいるものの）適切な表現ではない。（&lt;a href=&#34;http://ja.wikipedia.org/wiki/逆双曲線関数&#34; target=&#34;_blank&#34;&gt;逆双曲線関数 - Wikipedia&lt;/a&gt;）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream.html&#34;&gt;iostream&lt;/a&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; c(&lt;span style=&#34;color: #666666&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;2.0&lt;/span&gt;);

  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; result &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;asinh&lt;/span&gt;(c);
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;span style=&#34;color:#ff0000&#34;&gt;asinh&lt;/span&gt;( &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; c &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34; ) = &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; result &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;asinh( (1,2) ) = (1.46935,1.06344)
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: 3.0, 3.1, 3.2, 3.3, 3.4&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC C++11 mode&lt;/a&gt;: 4.3.6, 4.4.7, 4.5.4, 4.6.4, 4.7.3, 4.8.1, 4.8.2, 4.9.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: ??&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;備考&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;libstdc++ では（規格通りに）C++11 以降のモードでなければ本関数は使用できないが、libc++ では C++98 モードでも使用することができる。（上記の &lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt; が C++11 モードになっていないのはそのため）&lt;/li&gt;
&lt;li&gt;libstdc++ では、通常 glibc の対応する関数を呼び出すため、上記の備考に記載した C99 の ISO IEC 60559 準拠要件を満たす。&lt;br /&gt;
    しかし、glibc を使用していない libstdc++、および、libc++ は、当該要件を満たしていない（満たすつもりが無い？）ようである。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/acos.html&#34;&gt;acos&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の逆余弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/asin.html&#34;&gt;asin&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の逆正弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/atan.html&#34;&gt;atan&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の逆正接を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/acosh.html&#34;&gt;acosh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の逆双曲線余弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/atanh.html&#34;&gt;atanh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の逆双曲線正接を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/cos.html&#34;&gt;cos&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の余弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/cosh.html&#34;&gt;cosh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の双曲線余弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/exp.html&#34;&gt;exp&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;自然対数の底 e の累乗（複素数）を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/log.html&#34;&gt;log&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の自然対数を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/log10.html&#34;&gt;log10&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の常用対数を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/pow.html&#34;&gt;pow&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の累乗を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/sin.html&#34;&gt;sin&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の正弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/sinh.html&#34;&gt;sinh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の双曲線正弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/sqrt.html&#34;&gt;sqrt&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の平方根を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/tan.html&#34;&gt;tan&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の正接を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/tanh.html&#34;&gt;tanh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の双曲線正接を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/asinh.html&#34;&gt;asinh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;実数の逆双曲線正弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Mitsuru Kariya</name>
        <email>kariya_mitsuru@hotmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>cosh -- complex:コードの空白の調整</title>
      <link href="http://cpprefjp.github.io/reference/complex/cosh.html"/>
      <id>f40c0f3233d59cba58628be3fba33506bf53dfcc:reference/complex/cosh.md</id>
      <updated>2015-11-03 01:29:39 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;function template&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;complex&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;cosh&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; cosh(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; x);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;複素数値の双曲線余弦（ハイパボリックコサイン：hyperbolic cosine）を得る。&lt;/p&gt;
&lt;h2&gt;戻り値&lt;/h2&gt;
&lt;p&gt;引数 &lt;code&gt;x&lt;/code&gt; の双曲線余弦。&lt;/p&gt;
&lt;h2&gt;備考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;規格には、上記の戻り値に記載されている以上の規定・説明は無い。&lt;br /&gt;
    なお、C99 の規格にある本関数と同等の関数群（&lt;code&gt;complex.h&lt;/code&gt; ヘッダの &lt;code&gt;ccosh&lt;/code&gt;、&lt;code&gt;ccoshf&lt;/code&gt;、&lt;code&gt;ccoshl&lt;/code&gt; の 3 つ。それぞれ C++ の &lt;code&gt;cosh&amp;lt;double&amp;gt;&lt;/code&gt;、&lt;code&gt;cosh&amp;lt;float&amp;gt;&lt;/code&gt;、&lt;code&gt;cosh&amp;lt;long double&amp;gt;&lt;/code&gt; に相当）では、処理系が ISO IEC 60559（IEEE 754 と同一）に準拠している場合、以下のように規定されている。&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cosh(&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/conj.html&#34;&gt;conj&lt;/a&gt;(x)) = &lt;a href=&#34;http://cpprefjp.github.io/reference/complex/conj.html&#34;&gt;conj&lt;/a&gt;(cosh(x))&lt;/code&gt; で、また、&lt;code&gt;cosh&lt;/code&gt; は偶関数（つまり、&lt;code&gt;cosh(-x) = cosh(x)&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cosh(complex(+0, +0))&lt;/code&gt; は &lt;code&gt;complex(+1, +0)&lt;/code&gt; を返す。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cosh(complex(+0, +∞))&lt;/code&gt; は &lt;code&gt;complex(NaN, ±0)&lt;/code&gt; を返し（結果の虚部の符号は未規定）、無効演算の浮動小数点例外（&lt;code&gt;FE_INVALID&lt;/code&gt;）を引き起こす。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cosh(complex(+0, NaN))&lt;/code&gt; は &lt;code&gt;complex(NaN, ±0)&lt;/code&gt; を返す（結果の虚部の符号は未規定）。&lt;/li&gt;
&lt;li&gt;有限で非ゼロの &lt;code&gt;x&lt;/code&gt; に対して、&lt;code&gt;cosh(complex(x, +∞))&lt;/code&gt; は &lt;code&gt;complex(NaN, NaN)&lt;/code&gt; を返し、無効演算の浮動小数点例外（&lt;code&gt;FE_INVALID&lt;/code&gt;）を引き起こす。&lt;/li&gt;
&lt;li&gt;有限で非ゼロの &lt;code&gt;x&lt;/code&gt; に対して、&lt;code&gt;cosh(complex(x, NaN))&lt;/code&gt; は &lt;code&gt;complex(NaN, NaN)&lt;/code&gt; を返し、無効演算の浮動小数点例外（&lt;code&gt;FE_INVALID&lt;/code&gt;）を引き起こす可能性がある。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cosh(complex(+∞, +0))&lt;/code&gt; は &lt;code&gt;complex(+∞, +0)&lt;/code&gt; を返す。&lt;/li&gt;
&lt;li&gt;有限で非ゼロの &lt;code&gt;y&lt;/code&gt; に対して、&lt;code&gt;cosh(complex(+∞, y))&lt;/code&gt; は &lt;code&gt;+∞ * complex(&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/cos.html&#34;&gt;cos&lt;/a&gt;(y), &lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/sin.html&#34;&gt;sin&lt;/a&gt;(y))&lt;/code&gt; を返す。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cosh(complex(+∞, +∞))&lt;/code&gt; は &lt;code&gt;complex(±∞, NaN)&lt;/code&gt; を返し（結果の実部の符号は未規定）、無効演算の浮動小数点例外（&lt;code&gt;FE_INVALID&lt;/code&gt;）を引き起こす。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cosh(complex(+∞, NaN))&lt;/code&gt; は &lt;code&gt;complex(+∞, NaN)&lt;/code&gt; を返す。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cosh(complex(NaN, +0))&lt;/code&gt; は &lt;code&gt;complex(NaN, ±0)&lt;/code&gt; を返す（結果の虚部の符号は未規定）。&lt;/li&gt;
&lt;li&gt;あらゆる非ゼロの &lt;code&gt;y&lt;/code&gt; に対して、&lt;code&gt;cosh(complex(NaN, y))&lt;/code&gt; は &lt;code&gt;complex(NaN, NaN)&lt;/code&gt; を返し、無効演算の浮動小数点例外（&lt;code&gt;FE_INVALID&lt;/code&gt;）を引き起こす可能性がある。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cosh(complex(NaN, NaN))&lt;/code&gt; は &lt;code&gt;complex(NaN, NaN)&lt;/code&gt; を返す。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;処理系が ISO IEC 60559 に準拠しているかどうかは、C99 の場合はマクロ &lt;code&gt;__STDC_IEC_559_COMPLEX__&lt;/code&gt; が &lt;code&gt;1&lt;/code&gt; に定義されている事で判別可能であるが、C++ の規格書には該当する記載を見つける事ができなかった。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;双曲線余弦の算出については、一部の算術型、および、&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/valarray.html&#34;&gt;valarray&lt;/a&gt;&lt;/code&gt; クラステンプレートに対しても、他のヘッダで定義されている。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;引数の型&lt;/th&gt;
&lt;th&gt;関数&lt;/th&gt;
&lt;th&gt;ヘッダ&lt;/th&gt;
&lt;th&gt;備考&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;float&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/cosh.html&#34;&gt;cosh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath.html&#34;&gt;cmath&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;double&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/cosh.html&#34;&gt;cosh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath.html&#34;&gt;cmath&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;long double&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/cosh.html&#34;&gt;cosh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath.html&#34;&gt;cmath&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;任意の整数型&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/cosh.html&#34;&gt;cosh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath.html&#34;&gt;cmath&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;C++11 から&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/valarray.html&#34;&gt;valarray&amp;lt;T&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/valarray/valarray/cosh.html&#34;&gt;cosh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/valarray.html&#34;&gt;valarray&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream.html&#34;&gt;iostream&lt;/a&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; c(&lt;span style=&#34;color: #666666&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;2.0&lt;/span&gt;);

  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; result &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;cosh&lt;/span&gt;(c);
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;span style=&#34;color:#ff0000&#34;&gt;cosh&lt;/span&gt;( &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; c &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34; ) = &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; result &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;cosh( (1,2) ) = (-0.642148,1.06861)
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++98&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: 3.0, 3.1, 3.2, 3.3, 3.4&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: 4.3.6, 4.4.7, 4.5.4, 4.6.4, 4.7.3, 4.8.1, 4.8.2, 4.9.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: ??&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;備考&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;libstdc++ では、通常 glibc の対応する関数を呼び出すため、上記の備考に記載した C99 の ISO IEC 60559 準拠要件を満たす。&lt;br /&gt;
    しかし、glibc を使用していない libstdc++、および、libc++ は、当該要件を満たしていない（満たすつもりが無い？）ようである。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/acos.html&#34;&gt;acos&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の逆余弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/asin.html&#34;&gt;asin&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の逆正弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/atan.html&#34;&gt;atan&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の逆正接を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/acosh.html&#34;&gt;acosh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の逆双曲線余弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/asinh.html&#34;&gt;asinh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の逆双曲線正弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/atanh.html&#34;&gt;atanh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の逆双曲線正接を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/cos.html&#34;&gt;cos&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の余弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/exp.html&#34;&gt;exp&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;自然対数の底 e の累乗（複素数）を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/log.html&#34;&gt;log&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の自然対数を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/log10.html&#34;&gt;log10&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の常用対数を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/pow.html&#34;&gt;pow&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の累乗を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/sin.html&#34;&gt;sin&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の正弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/sinh.html&#34;&gt;sinh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の双曲線正弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/sqrt.html&#34;&gt;sqrt&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の平方根を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/tan.html&#34;&gt;tan&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の正接を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/tanh.html&#34;&gt;tanh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の双曲線正接を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/cosh.html&#34;&gt;cosh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;実数の双曲線余弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Mitsuru Kariya</name>
        <email>kariya_mitsuru@hotmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>log10 -- complex:コードの空白の調整</title>
      <link href="http://cpprefjp.github.io/reference/complex/log10.html"/>
      <id>f40c0f3233d59cba58628be3fba33506bf53dfcc:reference/complex/log10.md</id>
      <updated>2015-11-03 01:29:39 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;function template&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;complex&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;log10&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; log10(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; x);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;複素数の常用対数（10 を底とした対数）を得る。log は logarithm（対数）、あるいは、logarithmic function（対数関数）の略。&lt;/p&gt;
&lt;h2&gt;戻り値&lt;/h2&gt;
&lt;p&gt;引数 &lt;code&gt;x&lt;/code&gt; の常用対数（10 を底とした対数）。&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/log.html&#34;&gt;log&lt;/a&gt;(x) / &lt;a href=&#34;http://cpprefjp.github.io/reference/complex/log.html&#34;&gt;log&lt;/a&gt;(10)&lt;/code&gt; で定義される。&lt;/p&gt;
&lt;h2&gt;備考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;分岐截断は負の実軸に沿っている。&lt;/li&gt;
&lt;li&gt;C99 の規格（および C11 の規格）では、本関数と同等と思われる関数名群 &lt;code&gt;clog10&lt;/code&gt;、&lt;code&gt;clog10f&lt;/code&gt;、&lt;code&gt;clog10l&lt;/code&gt; が future library directions として予約されているが、これらの関数の挙動については（名前から明らかであるものの）一切記載はない。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;常用対数の算出については、一部の算術型、および、&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/valarray.html&#34;&gt;valarray&lt;/a&gt;&lt;/code&gt; クラステンプレートに対しても、他のヘッダで定義されている。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;引数の型&lt;/th&gt;
&lt;th&gt;関数&lt;/th&gt;
&lt;th&gt;ヘッダ&lt;/th&gt;
&lt;th&gt;備考&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;float&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/log10.html&#34;&gt;log10&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath.html&#34;&gt;cmath&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;double&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/log10.html&#34;&gt;log10&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath.html&#34;&gt;cmath&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;long double&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/log10.html&#34;&gt;log10&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath.html&#34;&gt;cmath&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;任意の整数型&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/log10.html&#34;&gt;log10&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath.html&#34;&gt;cmath&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;C++11 から&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/valarray.html&#34;&gt;valarray&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/valarray/valarray/log10.html&#34;&gt;log10&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/valarray.html&#34;&gt;valarray&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream.html&#34;&gt;iostream&lt;/a&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; c(&lt;span style=&#34;color: #666666&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;2.0&lt;/span&gt;);

  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; result &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;log10&lt;/span&gt;(c);
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;span style=&#34;color:#ff0000&#34;&gt;log10&lt;/span&gt;( &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; c &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34; ) = &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; result &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;log10( (1,2) ) = (0.349485,0.480829)
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++98&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: 3.0, 3.1, 3.2, 3.3, 3.4&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: 4.3.6, 4.4.7, 4.5.4, 4.6.4, 4.7.3, 4.8.1, 4.8.2, 4.9.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: ??&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/acos.html&#34;&gt;acos&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の逆余弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/asin.html&#34;&gt;asin&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の逆正弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/atan.html&#34;&gt;atan&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の逆正接を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/acosh.html&#34;&gt;acosh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の双曲線逆余弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/asinh.html&#34;&gt;asinh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の双曲線逆正弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/atanh.html&#34;&gt;atanh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の双曲線逆正接を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/cos.html&#34;&gt;cos&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の余弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/cosh.html&#34;&gt;cosh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の双曲線余弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/exp.html&#34;&gt;exp&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;自然対数の底 e の累乗（複素数）を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/log.html&#34;&gt;log&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の自然対数を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/pow.html&#34;&gt;pow&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の累乗を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/sin.html&#34;&gt;sin&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の正弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/sinh.html&#34;&gt;sinh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の双曲線正弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/sqrt.html&#34;&gt;sqrt&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の平方根を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/tan.html&#34;&gt;tan&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の正接を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/tanh.html&#34;&gt;tanh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の双曲線正接を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/log10.html&#34;&gt;log10&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;実数の常用対数を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Mitsuru Kariya</name>
        <email>kariya_mitsuru@hotmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>norm -- complex:コードの空白の調整</title>
      <link href="http://cpprefjp.github.io/reference/complex/norm.html"/>
      <id>f40c0f3233d59cba58628be3fba33506bf53dfcc:reference/complex/norm.md</id>
      <updated>2015-11-03 01:29:39 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;function template&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;complex&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;norm&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  T norm(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; x);

  &lt;i&gt;Promoted&lt;/i&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;norm&lt;/span&gt;(&lt;i&gt;Arithmetic&lt;/i&gt; x);  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 追加のオーバーロード：C++11 から&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;複素数体のノルム（field norm。絶対値の 2 乗）を得る。&lt;/p&gt;
&lt;p&gt;なお、C++11 で追加されたオーバーロードは、以下のように規定されている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;実引数の型が &lt;code&gt;long double&lt;/code&gt; の場合、&lt;code&gt;complex&amp;lt;long double&amp;gt;&lt;/code&gt; にキャストされているかのように振る舞う。&lt;/li&gt;
&lt;li&gt;そうでなくて、実引数の型が &lt;code&gt;double&lt;/code&gt; か整数型の場合、&lt;code&gt;complex&amp;lt;double&amp;gt;&lt;/code&gt; にキャストされているかのように振る舞う。&lt;/li&gt;
&lt;li&gt;そうでなくて、実引数の型が &lt;code&gt;float&lt;/code&gt; の場合、&lt;code&gt;complex&amp;lt;float&amp;gt;&lt;/code&gt; にキャストされているかのように振る舞う。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;また、これらの追加のオーバーロードが関数テンプレートなのか否か、あるいは、引数が参照型なのか否かなどについては、規格では何も言及されていない。&lt;/p&gt;
&lt;h2&gt;戻り値&lt;/h2&gt;
&lt;p&gt;引数 &lt;code&gt;x&lt;/code&gt; のノルム&lt;/p&gt;
&lt;h2&gt;備考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ここで言う「ノルム」は複素数を体として実数体の拡大体と見た際のノルム（&lt;code&gt;x * &lt;a href=&#34;http://cpprefjp.github.io/reference/complex/conj.html&#34;&gt;conj&lt;/a&gt;(x)&lt;/code&gt;）である。&lt;br /&gt;
    複素数を複素平面上の点と見たときの原点との距離（絶対値：&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/abs.html&#34;&gt;abs&lt;/a&gt;&lt;/code&gt;）ではないことに注意。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream.html&#34;&gt;iostream&lt;/a&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; c(&lt;span style=&#34;color: #666666&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;2.0&lt;/span&gt;);

  &lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt; result &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;norm&lt;/span&gt;(c);
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;span style=&#34;color:#ff0000&#34;&gt;norm&lt;/span&gt;( &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; c &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34; ) = &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; result &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;norm( (1,2) ) = 5
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++98（追加のオーバーロードは C++11 から）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: 3.0, 3.1, 3.2, 3.3, 3.4（追加のオーバーロード含む）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: 4.3.6, 4.4.7, 4.5.4, 4.6.4, 4.7.3, 4.8.1, 4.8.2, 4.9.0（追加のオーバーロード以外）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++11 mode&lt;/a&gt;: 4.3.6, 4.4.7, 4.5.4, 4.6.4, 4.7.3, 4.8.1, 4.8.2, 4.9.0（追加のオーバーロード含む）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: ??&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/real.html&#34;&gt;real&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の実部を得る。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/imag.html&#34;&gt;imag&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の虚部を得る。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/abs.html&#34;&gt;abs&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の絶対値を得る。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/arg.html&#34;&gt;arg&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の偏角を得る。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/conj.html&#34;&gt;conj&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;共役複素数を得る。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/proj.html&#34;&gt;proj&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;リーマン球面への射影を得る。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/polar.html&#34;&gt;polar&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した絶対値と偏角の複素数値を得る。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://ja.wikipedia.org/wiki/%E3%83%8E%E3%83%AB%E3%83%A0_(%E4%BD%93%E8%AB%96)&#34; target=&#34;_blank&#34;&gt;ノルム (体論) - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ja.wikipedia.org/wiki/%E3%83%8E%E3%83%AB%E3%83%A0&#34; target=&#34;_blank&#34;&gt;ノルム - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Mitsuru Kariya</name>
        <email>kariya_mitsuru@hotmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator/ -- complex:コードの空白の調整</title>
      <link href="http://cpprefjp.github.io/reference/complex/op_divide.html"/>
      <id>f40c0f3233d59cba58628be3fba33506bf53dfcc:reference/complex/op_divide.md</id>
      <updated>2015-11-03 01:29:39 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;function template&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;complex&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;operator/&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;operator&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;/&lt;/span&gt;(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; lhs, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; rhs);

  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;operator&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;/&lt;/span&gt;(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; lhs, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; T&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; rhs);

  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;operator&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;/&lt;/span&gt;(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; T&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; lhs, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; rhs);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;複素数の除算を行う&lt;/p&gt;
&lt;h2&gt;戻り値&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;complex&amp;lt;T&amp;gt;(lhs) &lt;a href=&#34;http://cpprefjp.github.io/reference/complex/complex/op_divide_assign.html&#34;&gt;/=&lt;/a&gt; rhs&lt;/code&gt;&lt;br /&gt;
（&lt;code&gt;lhs&lt;/code&gt; を基に新たな &lt;code&gt;complex&amp;lt;T&amp;gt;&lt;/code&gt; 型のオブジェクトを作成し、そのオブジェクトを &lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/complex/op_divide_assign.html&#34;&gt;operator/=&lt;/a&gt;&lt;/code&gt; を用いて &lt;code&gt;rhs&lt;/code&gt; で割った上で、当該オブジェクトを返す）&lt;/p&gt;
&lt;h2&gt;備考&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;lhs&lt;/code&gt; と &lt;code&gt;rhs&lt;/code&gt; の両辺に現れる型 &lt;code&gt;T&lt;/code&gt; は（残念ながら）同じ型でなければならない。（&lt;code&gt;complex&amp;lt;double&amp;gt;&lt;/code&gt; と &lt;code&gt;complex&amp;lt;float&amp;gt;&lt;/code&gt; の除算や、&lt;code&gt;complex&amp;lt;double&amp;gt;&lt;/code&gt; と &lt;code&gt;float&lt;/code&gt; の除算などを行うことはできない。）&lt;br /&gt;
特に、これらの演算子は関数テンプレートであるため、&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/complex/op_divide_assign.html&#34;&gt;operator/=&lt;/a&gt;&lt;/code&gt; の場合と異なり、暗黙の型変換は行われないことに注意。&lt;/p&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream.html&#34;&gt;iostream&lt;/a&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;float&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; c(&lt;span style=&#34;color: #666666&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;2.0&lt;/span&gt;);
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;float&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; d(&lt;span style=&#34;color: #666666&#34;&gt;2.0&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;3.0&lt;/span&gt;);
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; c &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34; &lt;span style=&#34;color:#ff0000&#34;&gt;/&lt;/span&gt; &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; d &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34; = &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; (c &lt;span style=&#34;color:#ff0000&#34;&gt;&lt;span style=&#34;color: #666666&#34;&gt;/&lt;/span&gt;&lt;/span&gt; d) &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; c &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34; &lt;span style=&#34;color:#ff0000&#34;&gt;/&lt;/span&gt; &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;3.0F&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34; = &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; (c &lt;span style=&#34;color:#ff0000&#34;&gt;&lt;span style=&#34;color: #666666&#34;&gt;/&lt;/span&gt;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;3.0F&lt;/span&gt;) &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;5.0F&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34; &lt;span style=&#34;color:#ff0000&#34;&gt;/&lt;/span&gt; &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; d &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34; = &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; (&lt;span style=&#34;color: #666666&#34;&gt;5.0F&lt;/span&gt; &lt;span style=&#34;color:#ff0000&#34;&gt;&lt;span style=&#34;color: #666666&#34;&gt;/&lt;/span&gt;&lt;/span&gt; d) &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;(1,2) / (2,3) = (0.615385,0.0769231)
(1,2) / 3 = (0.333333,0.666667)
5 / (2,3) = (0.769231,-1.15385)
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/complex/op_assign.html&#34;&gt;operator=&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;代入する。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/complex/op_plus_assign.html&#34;&gt;operator+=&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の加算を行う。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/complex/op_minus_assign.html&#34;&gt;operator-=&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の減算を行う。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/complex/op_multiply_assign.html&#34;&gt;operator*=&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の乗算を行う。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/complex/op_divide_assign.html&#34;&gt;operator/=&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の除算を行う。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/op_plus.html&#34;&gt;operator+&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の加算を行う。（非メンバ関数）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/op_minus.html&#34;&gt;operator-&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の減算を行う。（非メンバ関数）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/op_multiply.html&#34;&gt;operator*&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の乗算を行う。（非メンバ関数）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Mitsuru Kariya</name>
        <email>kariya_mitsuru@hotmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator- -- complex:コードの空白の調整</title>
      <link href="http://cpprefjp.github.io/reference/complex/op_minus.html"/>
      <id>f40c0f3233d59cba58628be3fba33506bf53dfcc:reference/complex/op_minus.md</id>
      <updated>2015-11-03 01:29:39 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;function template&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;complex&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;operator-&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;operator&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; lhs, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; rhs);

  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;operator&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; lhs, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; T&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; rhs);

  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;operator&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; T&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; lhs, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; rhs);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;複素数の減算を行う&lt;/p&gt;
&lt;h2&gt;戻り値&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;complex&amp;lt;T&amp;gt;(lhs) &lt;a href=&#34;http://cpprefjp.github.io/reference/complex/complex/op_minus_assign.html&#34;&gt;-=&lt;/a&gt; rhs&lt;/code&gt;&lt;br /&gt;
（&lt;code&gt;lhs&lt;/code&gt; を基に新たな &lt;code&gt;complex&amp;lt;T&amp;gt;&lt;/code&gt; 型のオブジェクトを作成し、そのオブジェクトから &lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/complex/op_minus_assign.html&#34;&gt;operator-=&lt;/a&gt;&lt;/code&gt; を用いて &lt;code&gt;rhs&lt;/code&gt; を引いた上で当該オブジェクトを返す）&lt;/p&gt;
&lt;h2&gt;備考&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;lhs&lt;/code&gt; と &lt;code&gt;rhs&lt;/code&gt; の両辺に現れる型 &lt;code&gt;T&lt;/code&gt; は（残念ながら）同じ型でなければならない。（&lt;code&gt;complex&amp;lt;double&amp;gt;&lt;/code&gt; と &lt;code&gt;complex&amp;lt;float&amp;gt;&lt;/code&gt; の減算や、&lt;code&gt;complex&amp;lt;double&amp;gt;&lt;/code&gt; と &lt;code&gt;float&lt;/code&gt; の減算などを行うことはできない。）&lt;br /&gt;
特に、これらの演算子は関数テンプレートであるため、&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/complex/op_minus_assign.html&#34;&gt;operator-=&lt;/a&gt;&lt;/code&gt; の場合と異なり、暗黙の型変換は行われないことに注意。&lt;/p&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream.html&#34;&gt;iostream&lt;/a&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;float&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; c(&lt;span style=&#34;color: #666666&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;2.0&lt;/span&gt;);
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;float&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; d(&lt;span style=&#34;color: #666666&#34;&gt;2.0&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;3.0&lt;/span&gt;);
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; c &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34; &lt;span style=&#34;color:#ff0000&#34;&gt;-&lt;/span&gt; &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; d &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34; = &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; (c &lt;span style=&#34;color:#ff0000&#34;&gt;&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;&lt;/span&gt; d) &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; c &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34; &lt;span style=&#34;color:#ff0000&#34;&gt;-&lt;/span&gt; &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;3.0F&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34; = &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; (c &lt;span style=&#34;color:#ff0000&#34;&gt;&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;3.0F&lt;/span&gt;) &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;5.0F&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34; &lt;span style=&#34;color:#ff0000&#34;&gt;-&lt;/span&gt; &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; d &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34; = &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; (&lt;span style=&#34;color: #666666&#34;&gt;5.0F&lt;/span&gt; &lt;span style=&#34;color:#ff0000&#34;&gt;&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;&lt;/span&gt; d) &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;(1,2) - (2,3) = (-1,-1)
(1,2) - 3 = (-2,2)
5 - (2,3) = (3,-3)
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/complex/op_assign.html&#34;&gt;operator=&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;代入する。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/complex/op_plus_assign.html&#34;&gt;operator+=&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の加算を行う。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/complex/op_minus_assign.html&#34;&gt;operator-=&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の減算を行う。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/complex/op_multiply_assign.html&#34;&gt;operator*=&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の乗算を行う。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/complex/op_divide_assign.html&#34;&gt;operator/=&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の除算を行う。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/op_plus.html&#34;&gt;operator+&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の加算を行う。（非メンバ関数）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/op_multiply.html&#34;&gt;operator*&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の乗算を行う。（非メンバ関数）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/op_divide.html&#34;&gt;operator/&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の除算を行う。（非メンバ関数）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Mitsuru Kariya</name>
        <email>kariya_mitsuru@hotmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator* -- complex:コードの空白の調整</title>
      <link href="http://cpprefjp.github.io/reference/complex/op_multiply.html"/>
      <id>f40c0f3233d59cba58628be3fba33506bf53dfcc:reference/complex/op_multiply.md</id>
      <updated>2015-11-03 01:29:39 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;function template&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;complex&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;operator*&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;operator&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;*&lt;/span&gt;(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; lhs, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; rhs);

  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;operator&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;*&lt;/span&gt;(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; lhs, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; T&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; rhs);

  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;operator&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;*&lt;/span&gt;(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; T&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; lhs, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; rhs);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;複素数の乗算を行う&lt;/p&gt;
&lt;h2&gt;戻り値&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;complex&amp;lt;T&amp;gt;(lhs) &lt;a href=&#34;http://cpprefjp.github.io/reference/complex/complex/op_multiply_assign.html&#34;&gt;*=&lt;/a&gt; rhs&lt;/code&gt;&lt;br /&gt;
（&lt;code&gt;lhs&lt;/code&gt; を基に新たな &lt;code&gt;complex&amp;lt;T&amp;gt;&lt;/code&gt; 型のオブジェクトを作成し、そのオブジェクトに &lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/complex/op_multiply_assign.html&#34;&gt;operator*=&lt;/a&gt;&lt;/code&gt; を用いて &lt;code&gt;rhs&lt;/code&gt; を掛けた上で、当該オブジェクトを返す）&lt;/p&gt;
&lt;h2&gt;備考&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;lhs&lt;/code&gt; と &lt;code&gt;rhs&lt;/code&gt; の両辺に現れる型 &lt;code&gt;T&lt;/code&gt; は（残念ながら）同じ型でなければならない。（&lt;code&gt;complex&amp;lt;double&amp;gt;&lt;/code&gt; と &lt;code&gt;complex&amp;lt;float&amp;gt;&lt;/code&gt; の乗算や、&lt;code&gt;complex&amp;lt;double&amp;gt;&lt;/code&gt; と &lt;code&gt;float&lt;/code&gt; の乗算などを行うことはできない。）&lt;br /&gt;
特に、これらの演算子は関数テンプレートであるため、&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/complex/op_multiply_assign.html&#34;&gt;operator*=&lt;/a&gt;&lt;/code&gt; の場合と異なり、暗黙の型変換は行われないことに注意。&lt;/p&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream.html&#34;&gt;iostream&lt;/a&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;float&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; c(&lt;span style=&#34;color: #666666&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;2.0&lt;/span&gt;);
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;float&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; d(&lt;span style=&#34;color: #666666&#34;&gt;2.0&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;3.0&lt;/span&gt;);
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; c &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34; &lt;span style=&#34;color:#ff0000&#34;&gt;*&lt;/span&gt; &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; d &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34; = &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; (c &lt;span style=&#34;color:#ff0000&#34;&gt;&lt;span style=&#34;color: #666666&#34;&gt;*&lt;/span&gt;&lt;/span&gt; d) &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; c &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34; &lt;span style=&#34;color:#ff0000&#34;&gt;*&lt;/span&gt; &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;3.0F&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34; = &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; (c &lt;span style=&#34;color:#ff0000&#34;&gt;&lt;span style=&#34;color: #666666&#34;&gt;*&lt;/span&gt;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;3.0F&lt;/span&gt;) &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;5.0F&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34; &lt;span style=&#34;color:#ff0000&#34;&gt;*&lt;/span&gt; &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; d &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34; = &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; (&lt;span style=&#34;color: #666666&#34;&gt;5.0F&lt;/span&gt; &lt;span style=&#34;color:#ff0000&#34;&gt;&lt;span style=&#34;color: #666666&#34;&gt;*&lt;/span&gt;&lt;/span&gt; d) &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;(1,2) * (2,3) = (-4,7)
(1,2) * 3 = (3,6)
5 * (2,3) = (10,15)
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/complex/op_assign.html&#34;&gt;operator=&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;代入する。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/complex/op_plus_assign.html&#34;&gt;operator+=&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の加算を行う。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/complex/op_minus_assign.html&#34;&gt;operator-=&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の減算を行う。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/complex/op_multiply_assign.html&#34;&gt;operator*=&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の乗算を行う。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/complex/op_divide_assign.html&#34;&gt;operator/=&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の除算を行う。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/op_plus.html&#34;&gt;operator+&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の加算を行う。（非メンバ関数）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/op_minus.html&#34;&gt;operator-&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の減算を行う。（非メンバ関数）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/op_divide.html&#34;&gt;operator/&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の除算を行う。（非メンバ関数）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Mitsuru Kariya</name>
        <email>kariya_mitsuru@hotmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator+ -- complex:コードの空白の調整</title>
      <link href="http://cpprefjp.github.io/reference/complex/op_plus.html"/>
      <id>f40c0f3233d59cba58628be3fba33506bf53dfcc:reference/complex/op_plus.md</id>
      <updated>2015-11-03 01:29:39 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;function template&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;complex&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;operator+&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;operator&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;+&lt;/span&gt;(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; lhs, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; rhs);

  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;operator&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;+&lt;/span&gt;(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; lhs, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; T&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; rhs);

  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;operator&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;+&lt;/span&gt;(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; T&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; lhs, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; rhs);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;複素数の加算を行う&lt;/p&gt;
&lt;h2&gt;戻り値&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;complex&amp;lt;T&amp;gt;(lhs) &lt;a href=&#34;http://cpprefjp.github.io/reference/complex/complex/op_plus_assign.html&#34;&gt;+=&lt;/a&gt; rhs&lt;/code&gt;&lt;br /&gt;
（&lt;code&gt;lhs&lt;/code&gt; を基に新たな &lt;code&gt;complex&amp;lt;T&amp;gt;&lt;/code&gt; 型のオブジェクトを作成し、そのオブジェクトに &lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/complex/op_plus_assign.html&#34;&gt;operator+=&lt;/a&gt;&lt;/code&gt; を用いて &lt;code&gt;rhs&lt;/code&gt; を加えた上で、当該オブジェクトを返す）&lt;/p&gt;
&lt;h2&gt;備考&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;lhs&lt;/code&gt; と &lt;code&gt;rhs&lt;/code&gt; の両辺に現れる型 &lt;code&gt;T&lt;/code&gt; は（残念ながら）同じ型でなければならない。（&lt;code&gt;complex&amp;lt;double&amp;gt;&lt;/code&gt; と &lt;code&gt;complex&amp;lt;float&amp;gt;&lt;/code&gt; の加算や、&lt;code&gt;complex&amp;lt;double&amp;gt;&lt;/code&gt; と &lt;code&gt;float&lt;/code&gt; の加算などを行うことはできない。）&lt;br /&gt;
特に、これらの演算子は関数テンプレートであるため、&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/complex/op_plus_assign.html&#34;&gt;operator+=&lt;/a&gt;&lt;/code&gt; の場合と異なり、暗黙の型変換は行われないことに注意。&lt;/p&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream.html&#34;&gt;iostream&lt;/a&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;float&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; c(&lt;span style=&#34;color: #666666&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;2.0&lt;/span&gt;);
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;float&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; d(&lt;span style=&#34;color: #666666&#34;&gt;2.0&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;3.0&lt;/span&gt;);
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; c &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34; &lt;span style=&#34;color:#ff0000&#34;&gt;+&lt;/span&gt; &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; d &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34; = &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; (c &lt;span style=&#34;color:#ff0000&#34;&gt;&lt;span style=&#34;color: #666666&#34;&gt;+&lt;/span&gt;&lt;/span&gt; d) &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; c &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34; &lt;span style=&#34;color:#ff0000&#34;&gt;+&lt;/span&gt; &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;3.0F&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34; = &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; (c &lt;span style=&#34;color:#ff0000&#34;&gt;&lt;span style=&#34;color: #666666&#34;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;3.0F&lt;/span&gt;) &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;5.0F&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34; &lt;span style=&#34;color:#ff0000&#34;&gt;+&lt;/span&gt; &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; d &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34; = &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; (&lt;span style=&#34;color: #666666&#34;&gt;5.0F&lt;/span&gt; &lt;span style=&#34;color:#ff0000&#34;&gt;&lt;span style=&#34;color: #666666&#34;&gt;+&lt;/span&gt;&lt;/span&gt; d) &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;(1,2) + (2,3) = (3,5)
(1,2) + 3 = (4,2)
5 + (2,3) = (7,3)
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/complex/op_assign.html&#34;&gt;operator=&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;代入する。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/complex/op_plus_assign.html&#34;&gt;operator+=&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の加算を行う。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/complex/op_minus_assign.html&#34;&gt;operator-=&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の減算を行う。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/complex/op_multiply_assign.html&#34;&gt;operator*=&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の乗算を行う。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/complex/op_divide_assign.html&#34;&gt;operator/=&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の除算を行う。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/op_minus.html&#34;&gt;operator-&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の減算を行う。（非メンバ関数）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/op_multiply.html&#34;&gt;operator*&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の乗算を行う。（非メンバ関数）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/op_divide.html&#34;&gt;operator/&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の除算を行う。（非メンバ関数）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Mitsuru Kariya</name>
        <email>kariya_mitsuru@hotmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>pow -- complex:コードの空白の調整</title>
      <link href="http://cpprefjp.github.io/reference/complex/pow.html"/>
      <id>f40c0f3233d59cba58628be3fba33506bf53dfcc:reference/complex/pow.md</id>
      <updated>2015-11-03 01:29:39 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;function template&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;complex&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;pow&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; pow(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; x, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; y);     &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (1)&lt;/span&gt;

  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; pow(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; x, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; T&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; y);              &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (2)&lt;/span&gt;

  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; pow(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; T&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; x, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; y);              &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (3)&lt;/span&gt;

  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; pow(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; x, &lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; y);                   &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (4) C++03 まで&lt;/span&gt;

  &lt;i&gt;Promoted&lt;/i&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;pow&lt;/span&gt;(&lt;i&gt;ArithmeticOrComplex1&lt;/i&gt; x, &lt;i&gt;ArithmeticOrComplex2&lt;/i&gt; y); &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// (5) 追加のオーバーロード：C++11 から&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;複素数値の累乗を得る。pow は power（累乗、指数）の略。&lt;/p&gt;
&lt;p&gt;なお、C++11 で追加されたオーバーロード (5) は、少なくとも 1 つの実引数が &lt;code&gt;complex&amp;lt;T&amp;gt;&lt;/code&gt; の場合にオーバーロード解決の際に考慮され、以下のように規定されている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;いずれかの実引数の型が &lt;code&gt;complex&amp;lt;long double&amp;gt;&lt;/code&gt; か &lt;code&gt;long double&lt;/code&gt; の場合、両方の引数が &lt;code&gt;complex&amp;lt;long double&amp;gt;&lt;/code&gt; にキャストされているかのように振る舞う。&lt;/li&gt;
&lt;li&gt;そうでなくて、いずれかの実引数の型が &lt;code&gt;complex&amp;lt;double&amp;gt;&lt;/code&gt; か &lt;code&gt;double&lt;/code&gt; か整数型の場合、両方の引数が &lt;code&gt;complex&amp;lt;double&amp;gt;&lt;/code&gt; にキャストされているかのように振る舞う。&lt;/li&gt;
&lt;li&gt;そうでなくて、いずれかの実引数の型が &lt;code&gt;complex&amp;lt;float&amp;gt;&lt;/code&gt; か &lt;code&gt;float&lt;/code&gt; の場合、両方の引数が &lt;code&gt;complex&amp;lt;float&amp;gt;&lt;/code&gt; にキャストされているかのように振る舞う。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;また、これらの追加のオーバーロードが関数テンプレートなのか否か、あるいは、引数が参照型なのか否かなどについては、規格では何も言及されていない。&lt;/p&gt;
&lt;h2&gt;戻り値&lt;/h2&gt;
&lt;p&gt;引数 &lt;code&gt;x&lt;/code&gt; の &lt;code&gt;y&lt;/code&gt; 乗。&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/exp.html&#34;&gt;exp&lt;/a&gt;(y * &lt;a href=&#34;http://cpprefjp.github.io/reference/complex/log.html&#34;&gt;log&lt;/a&gt;(x))&lt;/code&gt; で定義される。&lt;code&gt;pow(0, 0)&lt;/code&gt; の戻り値は処理系定義である。&lt;/p&gt;
&lt;h2&gt;備考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;引数 &lt;code&gt;x&lt;/code&gt; に対する分岐截断は負の実軸に沿っている。&lt;/li&gt;
&lt;li&gt;C99 の規格にある本関数と同等の関数群（&lt;code&gt;complex.h&lt;/code&gt; ヘッダの &lt;code&gt;cpow&lt;/code&gt;、&lt;code&gt;cpowf&lt;/code&gt;、&lt;code&gt;cpowl&lt;/code&gt; の 3 つ。それぞれ C++ の &lt;code&gt;pow&amp;lt;double&amp;gt;&lt;/code&gt;、&lt;code&gt;pow&amp;lt;float&amp;gt;&lt;/code&gt;、&lt;code&gt;pow&amp;lt;long double&amp;gt;&lt;/code&gt; に相当）では、本関数が &lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/exp.html&#34;&gt;exp&lt;/a&gt;(y * &lt;a href=&#34;http://cpprefjp.github.io/reference/complex/log.html&#34;&gt;log&lt;/a&gt;(x))&lt;/code&gt; で定義されるとの記載は無く、処理系が ISO IEC 60559 に準拠している場合でもそのように計算することが可能である旨のみの記載となっている。&lt;br /&gt;
    また、処理系が ISO IEC 60559 に準拠している場合、結果のパートを計算する際に適切な浮動小数点例外を引き起こすこと、および、偽の浮動小数点例外を引き起こしても良いことが記載されている。&lt;/li&gt;
&lt;li&gt;処理系が ISO IEC 60559 に準拠しているかどうかは、C99 の場合はマクロ &lt;code&gt;__STDC_IEC_559_COMPLEX__&lt;/code&gt; が &lt;code&gt;1&lt;/code&gt; に定義されている事で判別可能であるが、C++ の規格書には該当する記載を見つける事ができなかった。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;累乗の算出については、一部の算術型、および、&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/valarray.html&#34;&gt;valarray&lt;/a&gt;&lt;/code&gt; クラステンプレートに対しても、他のヘッダで定義されている。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;引数の型&lt;/th&gt;
&lt;th&gt;関数&lt;/th&gt;
&lt;th&gt;ヘッダ&lt;/th&gt;
&lt;th&gt;備考&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;float&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/pow.html&#34;&gt;pow&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath.html&#34;&gt;cmath&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;double&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/pow.html&#34;&gt;pow&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath.html&#34;&gt;cmath&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;long double&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/pow.html&#34;&gt;pow&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath.html&#34;&gt;cmath&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;任意の算術型&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/pow.html&#34;&gt;pow&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath.html&#34;&gt;cmath&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;C++11 から&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/valarray.html&#34;&gt;valarray&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/valarray/valarray/pow.html&#34;&gt;pow&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/valarray.html&#34;&gt;valarray&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream.html&#34;&gt;iostream&lt;/a&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; c(&lt;span style=&#34;color: #666666&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;2.0&lt;/span&gt;);
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; d(&lt;span style=&#34;color: #666666&#34;&gt;3.0&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;4.0&lt;/span&gt;);

  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; result &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;pow&lt;/span&gt;(c, d);
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;span style=&#34;color:#ff0000&#34;&gt;pow&lt;/span&gt;( &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; c &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;, &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; d &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34; ) = &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; result &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;pow( (1,2), (3,4) ) = (0.12901,0.0339241)
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++98&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: 3.0, 3.1, 3.2, 3.3, 3.4（追加のオーバーロード含む）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: 4.3.6, 4.4.7, 4.5.4, 4.6.4, 4.7.3, 4.8.1, 4.8.2, 4.9.0（追加のオーバーロード以外）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++11 mode&lt;/a&gt;: 4.3.6, 4.4.7, 4.5.4, 4.6.4, 4.7.3, 4.8.1, 4.8.2, 4.9.0（追加のオーバーロード含む）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: ??&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;備考&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;libstdc++ では、バージョンによって C++11 モードの挙動が異なる。&lt;ul&gt;
&lt;li&gt;4.3.6 では第 2 引数が &lt;code&gt;int&lt;/code&gt; のオーバーロード (4) が無効化されていない。また、追加のオーバーロード (5) は &lt;code&gt;complex&amp;lt;T&amp;gt;&lt;/code&gt; でない方の引数の型が算術型でなくても、算術型への暗黙の型変換が可能であれば、適用されてしまう。さらに、追加のオーバーロード (5) の結果型は、引数の型が &lt;code&gt;complex&amp;lt;float&amp;gt;&lt;/code&gt; と整数型の場合、&lt;code&gt;complex&amp;lt;float&amp;gt;&lt;/code&gt;　になってしまう。&lt;/li&gt;
&lt;li&gt;4.4.7、4.5.4 では、第 2 引数が &lt;code&gt;int&lt;/code&gt; のオーバーロード (4) は無効化されているが、追加のオーバーロード (5) は &lt;code&gt;complex&amp;lt;T&amp;gt;&lt;/code&gt; でない方の引数の型が算術型でなくても、算術型への暗黙の型変換が可能であれば、適用されてしまう。さらに、追加のオーバーロード (5) の結果型は、引数の型が &lt;code&gt;complex&amp;lt;float&amp;gt;&lt;/code&gt; と整数型の場合、&lt;code&gt;complex&amp;lt;float&amp;gt;&lt;/code&gt;　になってしまう。&lt;/li&gt;
&lt;li&gt;4.6.4 から 4.8.2 の間は第 2 引数が &lt;code&gt;int&lt;/code&gt; のオーバーロード (4) は無効化されている。また、追加のオーバーロード (5) は、引数の型が &lt;code&gt;complex&amp;lt;T&amp;gt;&lt;/code&gt; と算術型でなければ適用されない。（最も規格に準拠した挙動である）&lt;/li&gt;
&lt;li&gt;4.9.0 では第 2 引数が &lt;code&gt;int&lt;/code&gt; のオーバーロード (5) は無効化されていないが、追加のオーバーロード (5) は、引数の型が &lt;code&gt;complex&amp;lt;T&amp;gt;&lt;/code&gt; と算術型でなければ適用されない。
なお、いずれのバージョンでも C++03 モードでは追加のオーバーロード (5) は無効化されている。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;libc++ では、C++03 モードでも第 2 引数が &lt;code&gt;int&lt;/code&gt; のオーバーロード (4) は使用できず、また、追加のオーバーロード (5) が使用できる。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/acos.html&#34;&gt;acos&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の逆余弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/asin.html&#34;&gt;asin&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の逆正弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/atan.html&#34;&gt;atan&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の逆正接を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/acosh.html&#34;&gt;acosh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の双曲線逆余弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/asinh.html&#34;&gt;asinh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の双曲線逆正弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/atanh.html&#34;&gt;atanh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の双曲線逆正接を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/cos.html&#34;&gt;cos&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の余弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/cosh.html&#34;&gt;cosh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の双曲線余弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/exp.html&#34;&gt;exp&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;自然対数の底 e の累乗（複素数）を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/log.html&#34;&gt;log&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の自然対数を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/log10.html&#34;&gt;log10&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の常用対数を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/sin.html&#34;&gt;sin&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の正弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/sinh.html&#34;&gt;sinh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の双曲線正弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/sqrt.html&#34;&gt;sqrt&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の平方根を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/tan.html&#34;&gt;tan&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の正接を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/tanh.html&#34;&gt;tanh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の双曲線正接を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/pow.html&#34;&gt;pow&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;実数の累乗を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Mitsuru Kariya</name>
        <email>kariya_mitsuru@hotmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>proj -- complex:コードの空白の調整</title>
      <link href="http://cpprefjp.github.io/reference/complex/proj.html"/>
      <id>f40c0f3233d59cba58628be3fba33506bf53dfcc:reference/complex/proj.md</id>
      <updated>2015-11-03 01:29:39 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;function template&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;complex&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;proj&lt;span class=&#34;cpp cpp11&#34; title=&#34;C++11で追加&#34;&gt;(C++11)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; proj(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; x);

  complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;i&gt;Promoted&lt;/i&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; proj(&lt;i&gt;Arithmetic&lt;/i&gt; x); &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 追加のオーバーロード：C++11 から&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;リーマン球面への射影（備考参照）を得る。proj は projection（射影、投射）の略。&lt;/p&gt;
&lt;p&gt;なお、C++11 で追加されたオーバーロードは、以下のように規定されている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;実引数の型が &lt;code&gt;long double&lt;/code&gt; の場合、&lt;code&gt;complex&amp;lt;long double&amp;gt;&lt;/code&gt; にキャストされているかのように振る舞う。&lt;/li&gt;
&lt;li&gt;そうでなくて、実引数の型が &lt;code&gt;double&lt;/code&gt; か整数型の場合、&lt;code&gt;complex&amp;lt;double&amp;gt;&lt;/code&gt; にキャストされているかのように振る舞う。&lt;/li&gt;
&lt;li&gt;そうでなくて、実引数の型が &lt;code&gt;float&lt;/code&gt; の場合、&lt;code&gt;complex&amp;lt;float&amp;gt;&lt;/code&gt; にキャストされているかのように振る舞う。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;また、これらの追加のオーバーロードが関数テンプレートなのか否か、あるいは、引数が参照型なのか否かなどについては、規格では何も言及されていない。&lt;/p&gt;
&lt;h2&gt;戻り値&lt;/h2&gt;
&lt;p&gt;引数 &lt;code&gt;x&lt;/code&gt; のリーマン球面への射影&lt;/p&gt;
&lt;h2&gt;備考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;本関数は、C99 の規格にある &lt;code&gt;cproj&lt;/code&gt;（より正確には &lt;code&gt;complex.h&lt;/code&gt; ヘッダの &lt;code&gt;cproj&lt;/code&gt;、&lt;code&gt;cprojf&lt;/code&gt;、&lt;code&gt;cprojl&lt;/code&gt; の 3 つ。それぞれ C++ の &lt;code&gt;proj&amp;lt;double&amp;gt;&lt;/code&gt;、&lt;code&gt;proj&amp;lt;float&amp;gt;&lt;/code&gt;、&lt;code&gt;proj&amp;lt;long double&amp;gt;&lt;/code&gt; に相当）と同等である。  &lt;/li&gt;
&lt;li&gt;本関数は、&lt;code&gt;x&lt;/code&gt; が無限大ではない場合、&lt;code&gt;x&lt;/code&gt; そのものを返す。ここで「無限大ではない」とは、&lt;code&gt;!&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/isinf.md.nolink&#34;&gt;isinf&lt;/a&gt;(&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/real.html&#34;&gt;real&lt;/a&gt;(x)) &amp;amp;&amp;amp; !&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/isinf.md.nolink&#34;&gt;isinf&lt;/a&gt;(&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/imag.html&#34;&gt;imag&lt;/a&gt;(x))&lt;/code&gt; である。&lt;br /&gt;
&lt;code&gt;x&lt;/code&gt; が無限大の場合、&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/complex/op_constructor.html&#34;&gt;complex&lt;/a&gt;&amp;lt;T&amp;gt;(&lt;a href=&#34;http://cpprefjp.github.io/reference/limits/numeric_limits.html&#34;&gt;numeric_limits&lt;/a&gt;&amp;lt;T&amp;gt;::&lt;a href=&#34;http://cpprefjp.github.io/reference/limits/numeric_limits/infinity.html&#34;&gt;infinity&lt;/a&gt;(), &lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/copysign.md.nolink&#34;&gt;copysign&lt;/a&gt;(T(), &lt;a href=&#34;http://cpprefjp.github.io/reference/complex/imag.html&#34;&gt;imag&lt;/a&gt;(x)))&lt;/code&gt; を返す。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream.html&#34;&gt;iostream&lt;/a&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;&lt;a href=&#34;http://cpprefjp.github.io/reference/limits.html&#34;&gt;limits&lt;/a&gt;&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; print_proj(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; c)
{
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; result &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;proj&lt;/span&gt;(c);

  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;span style=&#34;color:#ff0000&#34;&gt;proj&lt;/span&gt;( &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; c &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34; ) = &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; result &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
}

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; main()
{
  print_proj(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;(&lt;span style=&#34;color: #666666&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;2.0&lt;/span&gt;));
  print_proj(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/limits/numeric_limits.html&#34;&gt;numeric_limits&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/limits/numeric_limits/infinity.html&#34;&gt;infinity&lt;/a&gt;(), &lt;span style=&#34;color: #666666&#34;&gt;0.0&lt;/span&gt;));
  print_proj(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/limits/numeric_limits.html&#34;&gt;numeric_limits&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/limits/numeric_limits/infinity.html&#34;&gt;infinity&lt;/a&gt;(), &lt;span style=&#34;color: #666666&#34;&gt;-0.0&lt;/span&gt;));
  print_proj(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/limits/numeric_limits.html&#34;&gt;numeric_limits&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/limits/numeric_limits/quiet_nan.html&#34;&gt;quiet_NaN&lt;/a&gt;(), std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/limits/numeric_limits.html&#34;&gt;numeric_limits&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/limits/numeric_limits/infinity.html&#34;&gt;infinity&lt;/a&gt;()));
  print_proj(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/limits/numeric_limits.html&#34;&gt;numeric_limits&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/limits/numeric_limits/quiet_nan.html&#34;&gt;quiet_NaN&lt;/a&gt;(), &lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/limits/numeric_limits.html&#34;&gt;numeric_limits&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/limits/numeric_limits/infinity.html&#34;&gt;infinity&lt;/a&gt;()));
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力例&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;proj( (1,2) ) = (1,2)
proj( (inf,0) ) = (inf,0)
proj( (inf,-0) ) = (inf,-0)
proj( (nan,inf) ) = (inf,0)
proj( (nan,-inf) ) = (inf,-0)
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;無限大や NaN の出力は異なる可能性がある。&lt;br /&gt;
また、&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/limits/numeric_limits.html&#34;&gt;numeric_limits&lt;/a&gt;&amp;lt;double&amp;gt;::&lt;a href=&#34;http://cpprefjp.github.io/reference/limits/numeric_limits/is_iec559.html&#34;&gt;is_iec559&lt;/a&gt;()&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; でない場合、結果が異なる可能性がある。&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h2&gt;言語&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: 3.0, 3.1, 3.2, 3.3, 3.4&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC C++11 mode&lt;/a&gt;: 4.3.6, 4.4.7, 4.5.4, 4.6.4, 4.7.3, 4.8.1, 4.8.2, 4.9.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: ??&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;備考&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;libstdc++ では（規格通りに）C++11 以降のモードでなければ本関数は使用できないが、libc++ では C++98 モードでも使用することができる。（上記の &lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt; が C++11 モードになっていないのはそのため）&lt;/li&gt;
&lt;li&gt;libstdc++ では、通常 glibc の対応する関数を呼び出すが、glibc 2.18 以前のバージョンには NAN の取り扱いに、更に、2.11.* 以前のバージョンには通常の値の取り扱いにもバグがある。
    また、glibc を使用していない libstdc++ も 4.9.0 現在、glibc 2.11.* 以前のバージョンと同様のバグがある。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/real.html&#34;&gt;real&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の実部を得る。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/imag.html&#34;&gt;imag&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の虚部を得る。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/abs.html&#34;&gt;abs&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の絶対値を得る。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/arg.html&#34;&gt;arg&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の偏角を得る。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/norm.html&#34;&gt;norm&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数体のノルムを得る。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/conj.html&#34;&gt;conj&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;共役複素数を得る。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/polar.html&#34;&gt;polar&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した絶対値と偏角の複素数値を得る。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#781&#34; target=&#34;_blank&#34;&gt;LWG Issue 781. &lt;code&gt;std::complex&lt;/code&gt; should add missing C99 functions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Mitsuru Kariya</name>
        <email>kariya_mitsuru@hotmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sinh -- complex:コードの空白の調整</title>
      <link href="http://cpprefjp.github.io/reference/complex/sinh.html"/>
      <id>f40c0f3233d59cba58628be3fba33506bf53dfcc:reference/complex/sinh.md</id>
      <updated>2015-11-03 01:29:39 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;function template&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;complex&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;sinh&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; sinh(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; x);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;複素数値の双曲線正弦（ハイパボリックサイン：hyperbolic sine）を得る。&lt;/p&gt;
&lt;h2&gt;戻り値&lt;/h2&gt;
&lt;p&gt;引数 &lt;code&gt;x&lt;/code&gt; の双曲線正弦。&lt;/p&gt;
&lt;h2&gt;備考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;規格には、上記の戻り値に記載されている以上の規定・説明は無い。&lt;br /&gt;
    なお、C99 の規格にある本関数と同等の関数群（&lt;code&gt;complex.h&lt;/code&gt; ヘッダの &lt;code&gt;csinh&lt;/code&gt;、&lt;code&gt;csinhf&lt;/code&gt;、&lt;code&gt;csinhl&lt;/code&gt; の 3 つ。それぞれ C++ の &lt;code&gt;sinh&amp;lt;double&amp;gt;&lt;/code&gt;、&lt;code&gt;sinh&amp;lt;float&amp;gt;&lt;/code&gt;、&lt;code&gt;sinh&amp;lt;long double&amp;gt;&lt;/code&gt; に相当）では、処理系が ISO IEC 60559（IEEE 754 と同一）に準拠している場合、以下のように規定されている。&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sinh(&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/conj.html&#34;&gt;conj&lt;/a&gt;(x)) = &lt;a href=&#34;http://cpprefjp.github.io/reference/complex/conj.html&#34;&gt;conj&lt;/a&gt;(sinh(x))&lt;/code&gt; で、また、&lt;code&gt;sinh&lt;/code&gt; は奇関数（つまり、&lt;code&gt;sinh(-x) = -sinh(x)&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sinh(complex(+0, +0))&lt;/code&gt; は &lt;code&gt;complex(+0, +0)&lt;/code&gt; を返す。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sinh(complex(+0, +∞))&lt;/code&gt; は &lt;code&gt;complex(±0, NaN)&lt;/code&gt; を返し（結果の実部の符号は未規定）、無効演算の浮動小数点例外（&lt;code&gt;FE_INVALID&lt;/code&gt;）を引き起こす。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sinh(complex(+0, NaN))&lt;/code&gt; は &lt;code&gt;complex(±0, NaN)&lt;/code&gt; を返す（結果の実部の符号は未規定）。&lt;/li&gt;
&lt;li&gt;有限で正の &lt;code&gt;x&lt;/code&gt; に対して、&lt;code&gt;sinh(complex(x, +∞))&lt;/code&gt; は &lt;code&gt;complex(NaN, NaN)&lt;/code&gt; を返し、無効演算の浮動小数点例外（&lt;code&gt;FE_INVALID&lt;/code&gt;）を引き起こす。&lt;/li&gt;
&lt;li&gt;有限で非ゼロの &lt;code&gt;x&lt;/code&gt; に対して、&lt;code&gt;sinh(complex(x, NaN))&lt;/code&gt; は &lt;code&gt;complex(NaN, NaN)&lt;/code&gt; を返し、無効演算の浮動小数点例外（&lt;code&gt;FE_INVALID&lt;/code&gt;）を引き起こす可能性がある。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sinh(complex(+∞, +0))&lt;/code&gt; は &lt;code&gt;complex(+∞, +0)&lt;/code&gt; を返す。&lt;/li&gt;
&lt;li&gt;有限で正の &lt;code&gt;y&lt;/code&gt; に対して、&lt;code&gt;sinh(complex(+∞, y))&lt;/code&gt; は &lt;code&gt;+∞ * complex(&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/cos.html&#34;&gt;cos&lt;/a&gt;(y), &lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/sin.html&#34;&gt;sin&lt;/a&gt;(y))&lt;/code&gt; を返す。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sinh(complex(+∞, +∞))&lt;/code&gt; は &lt;code&gt;complex(±∞, NaN)&lt;/code&gt; を返し（結果の実部の符号は未規定）、無効演算の浮動小数点例外（&lt;code&gt;FE_INVALID&lt;/code&gt;）を引き起こす。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sinh(complex(+∞, NaN))&lt;/code&gt; は &lt;code&gt;complex(±∞, NaN)&lt;/code&gt; を返す（結果の実部の符号は未規定）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sinh(complex(NaN, +0))&lt;/code&gt; は &lt;code&gt;complex(NaN, +0)&lt;/code&gt; を返す。&lt;/li&gt;
&lt;li&gt;あらゆる非ゼロの &lt;code&gt;y&lt;/code&gt; に対して、&lt;code&gt;sinh(complex(NaN, y))&lt;/code&gt; は &lt;code&gt;complex(NaN, NaN)&lt;/code&gt; を返し、無効演算の浮動小数点例外（&lt;code&gt;FE_INVALID&lt;/code&gt;）を引き起こす可能性がある。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sinh(complex(NaN, NaN))&lt;/code&gt; は &lt;code&gt;complex(NaN, NaN)&lt;/code&gt; を返す。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;処理系が ISO IEC 60559 に準拠しているかどうかは、C99 の場合はマクロ &lt;code&gt;__STDC_IEC_559_COMPLEX__&lt;/code&gt; が &lt;code&gt;1&lt;/code&gt; に定義されている事で判別可能であるが、C++ の規格書には該当する記載を見つける事ができなかった。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;双曲線正弦の算出については、一部の算術型、および、&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/valarray.html&#34;&gt;valarray&lt;/a&gt;&lt;/code&gt; クラステンプレートに対しても、他のヘッダで定義されている。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;引数の型&lt;/th&gt;
&lt;th&gt;関数&lt;/th&gt;
&lt;th&gt;ヘッダ&lt;/th&gt;
&lt;th&gt;備考&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;float&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/sinh.html&#34;&gt;sinh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath.html&#34;&gt;cmath&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;double&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/sinh.html&#34;&gt;sinh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath.html&#34;&gt;cmath&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;long double&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/sinh.html&#34;&gt;sinh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath.html&#34;&gt;cmath&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;任意の整数型&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/sinh.html&#34;&gt;sinh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath.html&#34;&gt;cmath&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;C++11 から&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/valarray.html&#34;&gt;valarray&amp;lt;T&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/valarray/valarray/sinh.html&#34;&gt;sinh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/valarray.html&#34;&gt;valarray&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream.html&#34;&gt;iostream&lt;/a&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; c(&lt;span style=&#34;color: #666666&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;2.0&lt;/span&gt;);

  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; result &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;sinh&lt;/span&gt;(c);
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;span style=&#34;color:#ff0000&#34;&gt;sinh&lt;/span&gt;( &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; c &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34; ) = &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; result &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;sinh( (1,2) ) = (-0.489056,1.40312)
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++98&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: 3.0, 3.1, 3.2, 3.3, 3.4&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: 4.3.6, 4.4.7, 4.5.4, 4.6.4, 4.7.3, 4.8.1, 4.8.2, 4.9.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: ??&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;備考&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;libstdc++ では、通常 glibc の対応する関数を呼び出すため、上記の備考に記載した C99 の ISO IEC 60559 準拠要件を満たす。&lt;br /&gt;
    しかし、glibc を使用していない libstdc++、および、libc++ は、当該要件を満たしていない（満たすつもりが無い？）ようである。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/acos.html&#34;&gt;acos&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の逆余弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/asin.html&#34;&gt;asin&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の逆正弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/atan.html&#34;&gt;atan&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の逆正接を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/acosh.html&#34;&gt;acosh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の逆双曲線余弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/asinh.html&#34;&gt;asinh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の逆双曲線正弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/atanh.html&#34;&gt;atanh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の逆双曲線正接を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/cos.html&#34;&gt;cos&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の余弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/cosh.html&#34;&gt;cosh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の双曲線余弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/exp.html&#34;&gt;exp&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;自然対数の底 e の累乗（複素数）を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/log.html&#34;&gt;log&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の自然対数を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/log10.html&#34;&gt;log10&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の常用対数を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/pow.html&#34;&gt;pow&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の累乗を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/sin.html&#34;&gt;sin&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の正弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/sqrt.html&#34;&gt;sqrt&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の平方根を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/tan.html&#34;&gt;tan&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の正接を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/tanh.html&#34;&gt;tanh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の双曲線正接を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/sinh.html&#34;&gt;sinh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;実数の双曲線正弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Mitsuru Kariya</name>
        <email>kariya_mitsuru@hotmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>tanh -- complex:コードの空白の調整</title>
      <link href="http://cpprefjp.github.io/reference/complex/tanh.html"/>
      <id>f40c0f3233d59cba58628be3fba33506bf53dfcc:reference/complex/tanh.md</id>
      <updated>2015-11-03 01:29:39 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;function template&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;complex&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;tanh&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; tanh(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; complex&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; x);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;複素数値の双曲線正接（ハイパボリックタンジェント：hyperbolic tangent）を得る。&lt;/p&gt;
&lt;h2&gt;戻り値&lt;/h2&gt;
&lt;p&gt;引数 &lt;code&gt;x&lt;/code&gt; の双曲線正接。&lt;/p&gt;
&lt;h2&gt;備考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;規格には、上記の戻り値に記載されている以上の規定・説明は無い。&lt;br /&gt;
    なお、C99 の規格にある本関数と同等の関数群（&lt;code&gt;complex.h&lt;/code&gt; ヘッダの &lt;code&gt;ctan&lt;/code&gt;、&lt;code&gt;ctanf&lt;/code&gt;、&lt;code&gt;ctanl&lt;/code&gt; の 3 つ。それぞれ C++ の &lt;code&gt;tan&amp;lt;double&amp;gt;&lt;/code&gt;、&lt;code&gt;tan&amp;lt;float&amp;gt;&lt;/code&gt;、&lt;code&gt;tan&amp;lt;long double&amp;gt;&lt;/code&gt; に相当）では、処理系が ISO IEC 60559（IEEE 754 と同一）に準拠している場合、以下のように規定されている。&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tanh(&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/conj.html&#34;&gt;conj&lt;/a&gt;(x)) = &lt;a href=&#34;http://cpprefjp.github.io/reference/complex/conj.html&#34;&gt;conj&lt;/a&gt;(tanh(x))&lt;/code&gt; で、また、&lt;code&gt;tanh&lt;/code&gt; は奇関数（つまり、&lt;code&gt;tanh(-x) = -tanh(x)&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tanh(complex(+0, +0))&lt;/code&gt; は &lt;code&gt;complex(+0, +0)&lt;/code&gt; を返す。&lt;/li&gt;
&lt;li&gt;有限の &lt;code&gt;x&lt;/code&gt; に対して、&lt;code&gt;tanh(complex(x, +∞))&lt;/code&gt; は &lt;code&gt;complex(NaN, NaN)&lt;/code&gt; を返し、無効演算の浮動小数点例外（&lt;code&gt;FE_INVALID&lt;/code&gt;）を引き起こす。&lt;/li&gt;
&lt;li&gt;有限の &lt;code&gt;x&lt;/code&gt; に対して、&lt;code&gt;tanh(complex(x, NaN))&lt;/code&gt; は &lt;code&gt;complex(NaN, NaN)&lt;/code&gt; を返し、無効演算の浮動小数点例外（&lt;code&gt;FE_INVALID&lt;/code&gt;）を引き起こす可能性がある。&lt;/li&gt;
&lt;li&gt;有限で正の符号を持つ（&lt;code&gt;+0&lt;/code&gt; を含む）&lt;code&gt;y&lt;/code&gt; に対して、&lt;code&gt;tanh(complex(+∞, y))&lt;/code&gt; は &lt;code&gt;complex(1, +0 * &lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/sin.html&#34;&gt;sin&lt;/a&gt;(2 * y))&lt;/code&gt; を返す。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tanh(complex(+∞, +∞))&lt;/code&gt; は &lt;code&gt;complex(1, ±0)&lt;/code&gt; を返す（結果の虚部の符号は未規定）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tanh(complex(+∞, NaN))&lt;/code&gt; は &lt;code&gt;complex(1, ±0)&lt;/code&gt; を返す（結果の虚部の符号は未規定）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tanh(complex(NaN, +0))&lt;/code&gt; は &lt;code&gt;complex(NaN, +0)&lt;/code&gt; を返す。&lt;/li&gt;
&lt;li&gt;あらゆる非ゼロの &lt;code&gt;y&lt;/code&gt; に対して、&lt;code&gt;tanh(complex(NaN, y))&lt;/code&gt; は &lt;code&gt;complex(NaN, NaN)&lt;/code&gt; を返し、無効演算の浮動小数点例外（&lt;code&gt;FE_INVALID&lt;/code&gt;）を引き起こす可能性がある。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tanh(complex(NaN, NaN))&lt;/code&gt; は &lt;code&gt;complex(NaN, NaN)&lt;/code&gt; を返す。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;処理系が ISO IEC 60559 に準拠しているかどうかは、C99 の場合はマクロ &lt;code&gt;__STDC_IEC_559_COMPLEX__&lt;/code&gt; が &lt;code&gt;1&lt;/code&gt; に定義されている事で判別可能であるが、C++ の規格書には該当する記載を見つける事ができなかった。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;双曲線正接の算出については、一部の算術型、および、&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/valarray.html&#34;&gt;valarray&lt;/a&gt;&lt;/code&gt; クラステンプレートに対しても、他のヘッダで定義されている。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;引数の型&lt;/th&gt;
&lt;th&gt;関数&lt;/th&gt;
&lt;th&gt;ヘッダ&lt;/th&gt;
&lt;th&gt;備考&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;float&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/tanh.html&#34;&gt;tanh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath.html&#34;&gt;cmath&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;double&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/tanh.html&#34;&gt;tanh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath.html&#34;&gt;cmath&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;long double&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/tanh.html&#34;&gt;tanh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath.html&#34;&gt;cmath&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;任意の整数型&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/tanh.html&#34;&gt;tanh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath.html&#34;&gt;cmath&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;C++11 から&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/valarray.html&#34;&gt;valarray&amp;lt;T&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/valarray/valarray/tanh.html&#34;&gt;tanh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/valarray.html&#34;&gt;valarray&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream.html&#34;&gt;iostream&lt;/a&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; c(&lt;span style=&#34;color: #666666&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;2.0&lt;/span&gt;);

  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex.html&#34;&gt;complex&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; result &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;atanh(c);
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;span style=&#34;color:#ff0000&#34;&gt;tanh&lt;/span&gt;( &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; c &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34; ) = &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; result &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;tanh( (1,2) ) = (1.16674,-0.243458)
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++98&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: 3.0, 3.1, 3.2, 3.3, 3.4&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: 4.3.6, 4.4.7, 4.5.4, 4.6.4, 4.7.3, 4.8.1, 4.8.2, 4.9.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: ??&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;備考&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;libstdc++ では、通常 glibc の対応する関数を呼び出すため、上記の備考に記載した C99 の ISO IEC 60559 準拠要件を満たす（ただし、次項参照）。&lt;br /&gt;
    しかし、glibc を使用していない libstdc++、および、libc++ は、当該要件を満たしていない（満たすつもりが無い？）ようである。&lt;/li&gt;
&lt;li&gt;glibc 2.19 時点では、有限で正の符号を持つ &lt;code&gt;y&lt;/code&gt; に対する &lt;code&gt;tanh(complex(+∞, y))&lt;/code&gt; の虚部の符号が上記の備考に記載した C99 の ISO IEC 60559 準拠要件を満たしていない。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/acos.html&#34;&gt;acos&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の逆余弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/asin.html&#34;&gt;asin&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の逆正弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/atan.html&#34;&gt;atan&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の逆正接を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/acosh.html&#34;&gt;acosh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の双曲線逆余弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/asinh.html&#34;&gt;asinh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の双曲線逆正弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/atanh.html&#34;&gt;atanh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の双曲線逆正接を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/cos.html&#34;&gt;cos&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の余弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/cosh.html&#34;&gt;cosh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の双曲線余弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/exp.html&#34;&gt;exp&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の指数関数を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/log.html&#34;&gt;log&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の自然対数を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/log10.html&#34;&gt;log10&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の常用対数を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/pow.html&#34;&gt;pow&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の累乗を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/sin.html&#34;&gt;sin&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の正弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/sinh.html&#34;&gt;sinh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の双曲線正弦を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/sqrt.html&#34;&gt;sqrt&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の平方根を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/complex/tan.html&#34;&gt;tan&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;複素数の正接を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath/tanh.html&#34;&gt;tanh&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;実数の双曲線正接を求める。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Mitsuru Kariya</name>
        <email>kariya_mitsuru@hotmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator!= -- error_(code|condition)::operator!=:コードの空白の調整</title>
      <link href="http://cpprefjp.github.io/reference/system_error/op_not_equal.html"/>
      <id>f1747a38f21401d1e8266db309de2cfcbc2bf6dd:reference/system_error/op_not_equal.md</id>
      <updated>2015-11-03 01:18:47 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;function&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;system_error&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;operator!=&lt;span class=&#34;cpp cpp11&#34; title=&#34;C++11で追加&#34;&gt;(C++11)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #B00040&#34;&gt;bool&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;operator&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;!=&lt;/span&gt;(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/system_error/error_code.html&#34;&gt;error_code&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; lhs, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/system_error/error_code.html&#34;&gt;error_code&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; rhs) noexcept;
  &lt;span style=&#34;color: #B00040&#34;&gt;bool&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;operator&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;!=&lt;/span&gt;(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/system_error/error_code.html&#34;&gt;error_code&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; lhs, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/system_error/error_condition.html&#34;&gt;error_condition&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; rhs) noexcept;
  &lt;span style=&#34;color: #B00040&#34;&gt;bool&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;operator&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;!=&lt;/span&gt;(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/system_error/error_condition.html&#34;&gt;error_condition&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; lhs, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/system_error/error_code.html&#34;&gt;error_code&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; rhs) noexcept;
  &lt;span style=&#34;color: #B00040&#34;&gt;bool&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;operator&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;!=&lt;/span&gt;(&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/system_error/error_condition.html&#34;&gt;error_condition&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; lhs, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;const&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/system_error/error_condition.html&#34;&gt;error_condition&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; rhs) noexcept;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;error_code&lt;/code&gt;, &lt;code&gt;error_condition&lt;/code&gt;の非等値比較を行う&lt;/p&gt;
&lt;h2&gt;戻り値&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;!(lhs &lt;a href=&#34;http://cpprefjp.github.io/reference/system_error/op_equal.html&#34;&gt;==&lt;/a&gt; rhs)&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;例外&lt;/h2&gt;
&lt;p&gt;投げない&lt;/p&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;system_error&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;error_code ec1 &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;make_error_code(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;errc&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;invalid_argument);
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;error_code ec2 &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;make_error_code(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;errc&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;permission_denied);
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;error_condition ed1 &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;make_error_condition(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;errc&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;invalid_argument);
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;error_condition ed2 &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;make_error_condition(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;errc&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;permission_denied);

  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;boolalpha;

  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;error_code != error_code : &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; (ec1 &lt;span style=&#34;color: #666666&#34;&gt;!=&lt;/span&gt; ec1) &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;error_code != error_code : &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; (ec1 &lt;span style=&#34;color: #666666&#34;&gt;!=&lt;/span&gt; ec2) &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;

  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;error_code != error_condition : &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; (ec1 &lt;span style=&#34;color: #666666&#34;&gt;!=&lt;/span&gt; ed1) &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;error_code != error_condition : &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; (ec1 &lt;span style=&#34;color: #666666&#34;&gt;!=&lt;/span&gt; ed2) &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;

  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;error_condition != error_condition : &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; (ed1 &lt;span style=&#34;color: #666666&#34;&gt;!=&lt;/span&gt; ed1) &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;error_condition != error_condition : &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; (ed1 &lt;span style=&#34;color: #666666&#34;&gt;!=&lt;/span&gt; ed2) &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;

}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;error_code != error_code : false
error_code != error_code : true
error_code != error_condition : false
error_code != error_condition : true
error_condition != error_condition : false
error_condition != error_condition : true
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++11 mode&lt;/a&gt;: 4.7.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt; 10.0&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/system_error/op_equal.html&#34;&gt;operator==()&lt;/a&gt;&lt;/code&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Mitsuru Kariya</name>
        <email>kariya_mitsuru@hotmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>make_error_code -- Merge branch &#39;master&#39; of https://github.com/cpprefjp/site
</title>
      <link href="http://cpprefjp.github.io/reference/system_error/make_error_code.html"/>
      <id>11a751ad847a227dd36661394758ac98cb689f7f:reference/system_error/make_error_code.md</id>
      <updated>2015-11-03 01:17:21 +0900
</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;function&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;system_error&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;make_error_code&lt;span class=&#34;cpp cpp11&#34; title=&#34;C++11で追加&#34;&gt;(C++11)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;a href=&#34;http://cpprefjp.github.io/reference/system_error/error_code.html&#34;&gt;error_code&lt;/a&gt; make_error_code(&lt;a href=&#34;http://cpprefjp.github.io/reference/system_error/errc.html&#34;&gt;errc&lt;/a&gt; e) noexcept;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/system_error/errc.html&#34;&gt;errc&lt;/a&gt;&lt;/code&gt;型の列挙値から&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/system_error/error_code.html&#34;&gt;error_code&lt;/a&gt;&lt;/code&gt;オブジェクトを生成する&lt;/p&gt;
&lt;h2&gt;戻り値&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/system_error/error_code.html&#34;&gt;error_code&lt;/a&gt;(static_cast&amp;lt;int&amp;gt;(e), &lt;a href=&#34;http://cpprefjp.github.io/reference/system_error/generic_category.html&#34;&gt;generic_category()&lt;/a&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;例外&lt;/h2&gt;
&lt;p&gt;投げない&lt;/p&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;system_error&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;string&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;error_code ec &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;make_error_code&lt;/span&gt;(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;errc&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;invalid_argument);

  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;category : &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; ec.category().name() &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;value : &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; ec.value() &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;message : &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; ec.message() &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;category : generic
value : 22
message : Invalid argument
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++11 mode&lt;/a&gt;: 4.7.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt; 10.0&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi
</name>
        <email>faithandbrave@gmail.com
</email>
      </author>
    </entry>
  
    <entry>
      <title>2進数リテラル -- C++14 2進数リテラル : 関連項目にbitsetを追加</title>
      <link href="http://cpprefjp.github.io/lang/cpp14/binary_literals.html"/>
      <id>f00bd6a9625d012695eaa75a97a9fa36b52e554c:lang/cpp14/binary_literals.md</id>
      <updated>2015-11-03 01:17:02 +0900</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;2進数リテラル&lt;span class=&#34;cpp cpp14&#34; title=&#34;C++14で追加&#34;&gt;(C++14)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;整数リテラルのプレフィックスとして&lt;code&gt;0b&lt;/code&gt;もしくは&lt;code&gt;0B&lt;/code&gt;を付けることで、2進数を表す値を記述できる。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; x &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;0&lt;/span&gt;b1010; &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 2進数の値1010を表す。xの値は、10進数の値10となる&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;code&gt;0b&lt;/code&gt;と&lt;code&gt;0B&lt;/code&gt;に、機能としての違いはない。数値部分に入力できる数字は&lt;code&gt;0&lt;/code&gt;と&lt;code&gt;1&lt;/code&gt;のみである。&lt;/p&gt;
&lt;p&gt;C++14段階では、整数を2進数表記で文字列化もしくはストリーム出力するための機能は含まれない。&lt;/p&gt;
&lt;p&gt;2進数リテラルが追加されたことにより、C++14時点で規定される基数リテラルは以下のものとなった：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;10進数リテラル(プレフィックスの指定なし)&lt;/li&gt;
&lt;li&gt;16進数リテラル(&lt;code&gt;0x&lt;/code&gt;もしくは&lt;code&gt;0X&lt;/code&gt;をプレフィックスとして指定する)&lt;/li&gt;
&lt;li&gt;8進数リテラル(&lt;code&gt;0&lt;/code&gt;をプレフィックスとして指定する)&lt;/li&gt;
&lt;li&gt;2進数リテラル(&lt;code&gt;0b&lt;/code&gt;もしくは&lt;code&gt;0B&lt;/code&gt;をプレフィックスとして指定する)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;仕様&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;浮動小数点数を含まない、整数リテラルに対してのみ、2進数リテラルを使用できる&lt;/li&gt;
&lt;li&gt;2進数リテラルを記述するには、&lt;code&gt;0b&lt;/code&gt;もしくは&lt;code&gt;0B&lt;/code&gt;プレフィックスを指定する&lt;/li&gt;
&lt;li&gt;数値部分に入力できる数字・文字は&lt;code&gt;0&lt;/code&gt;と&lt;code&gt;1&lt;/code&gt;のみである&lt;/li&gt;
&lt;li&gt;2進数リテラルは、リテラル演算子と組み合わせて使用できる&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  &lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; x &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;0&lt;/span&gt;b1010;
  &lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; x &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/endl.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl&lt;/a&gt;;

  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 数値リテラルの桁区切り文字と組み合わせて、4桁区切りする&lt;/span&gt;
  &lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; y &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;0&lt;/span&gt;b1000&lt;span style=&#34;border: 1px solid #FF0000&#34;&gt;&#39;&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;1111&lt;/span&gt;;
  &lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; y &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/endl.html&#34;&gt;std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl&lt;/a&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;10
143
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;この機能が必要になった背景・経緯&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;0b&lt;/code&gt;／&lt;code&gt;0B&lt;/code&gt;プレフィックスによる2進数リテラルは、GCCやClangの言語拡張として古くからサポートされていたほか、Java、Python、Dといった言語でも同じ構文でサポートされていた。&lt;/p&gt;
&lt;p&gt;こういった経緯から、C++標準で2進数リテラルをサポートすることとなった。&lt;/p&gt;
&lt;h2&gt;関連項目&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/lang/cpp14/digit_separators.md.nolink&#34;&gt;数値リテラルの桁区切り文字&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/bitset.html&#34;&gt;bitset&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3472.pdf&#34; target=&#34;_blank&#34;&gt;N3472 - Binary Literals in the C++ Core Language&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>make_error_code -- make_error_code:コードの空白の調整</title>
      <link href="http://cpprefjp.github.io/reference/system_error/make_error_code.html"/>
      <id>1624a0c6b35ba55c6170a38307a25bfba24cebd5:reference/system_error/make_error_code.md</id>
      <updated>2015-11-03 01:16:07 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;function&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;system_error&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;make_error_code&lt;span class=&#34;cpp cpp11&#34; title=&#34;C++11で追加&#34;&gt;(C++11)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;a href=&#34;http://cpprefjp.github.io/reference/system_error/error_code.html&#34;&gt;error_code&lt;/a&gt; make_error_code(&lt;a href=&#34;http://cpprefjp.github.io/reference/system_error/errc.html&#34;&gt;errc&lt;/a&gt; e) noexcept;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/system_error/errc.html&#34;&gt;errc&lt;/a&gt;&lt;/code&gt;型の列挙値から&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/system_error/error_code.html&#34;&gt;error_code&lt;/a&gt;&lt;/code&gt;オブジェクトを生成する&lt;/p&gt;
&lt;h2&gt;戻り値&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/system_error/error_code.html&#34;&gt;error_code&lt;/a&gt;(static_cast&amp;lt;int&amp;gt;(e), &lt;a href=&#34;http://cpprefjp.github.io/reference/system_error/generic_category.html&#34;&gt;generic_category()&lt;/a&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;例外&lt;/h2&gt;
&lt;p&gt;投げない&lt;/p&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;system_error&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;string&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;error_code ec &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;make_error_code&lt;/span&gt;(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;errc&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;invalid_argument);

  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;category : &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; ec.category().name() &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;value : &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; ec.value() &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;message : &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; ec.message() &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;category : generic
value : 22
message : Invalid argument
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++11 mode&lt;/a&gt;: 4.7.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt; 10.0&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Mitsuru Kariya</name>
        <email>kariya_mitsuru@hotmail.com</email>
      </author>
    </entry>
  
</feed>
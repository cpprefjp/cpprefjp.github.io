<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2020-10-20T15:48:32.504982</updated>
  <id>694ee1b6-ed76-460f-8f70-130d26f9b771</id>

  
    <entry>
      <title>operator- -- year_month(_day)の+- : コード修飾を追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month/op_minus.html"/>
      <id>4b17733f07970499684cfa8c2cb1e06c1ed00644:reference/chrono/year_month/op_minus.md</id>
      <updated>2020-10-20T23:36:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month/op_minus.md b/reference/chrono/year_month/op_minus.md
index 28fa3e5c8..accb92cc5 100644
--- a/reference/chrono/year_month/op_minus.md
+++ b/reference/chrono/year_month/op_minus.md
@@ -41,6 +41,8 @@ int main()
   assert(2020y/3 - chrono::years{1} == 2019y/3);
 }
 ```
+* 2020y[link /reference/chrono/year/op_y.md]
+* 2019y[link /reference/chrono/year/op_y.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator+ -- year_month(_day)の+- : コード修飾を追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month/op_plus.html"/>
      <id>4b17733f07970499684cfa8c2cb1e06c1ed00644:reference/chrono/year_month/op_plus.md</id>
      <updated>2020-10-20T23:36:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month/op_plus.md b/reference/chrono/year_month/op_plus.md
index f4f71d326..a97748474 100644
--- a/reference/chrono/year_month/op_plus.md
+++ b/reference/chrono/year_month/op_plus.md
@@ -71,6 +71,8 @@ int main()
   assert(2020y/3 + chrono::years{1} == 2021y/3);
 }
 ```
+* 2020y[link /reference/chrono/year/op_y.md]
+* 2021y[link /reference/chrono/year/op_y.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator- -- year_month(_day)の+- : コード修飾を追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day/op_minus.html"/>
      <id>4b17733f07970499684cfa8c2cb1e06c1ed00644:reference/chrono/year_month_day/op_minus.md</id>
      <updated>2020-10-20T23:36:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day/op_minus.md b/reference/chrono/year_month_day/op_minus.md
index 2bba788d0..4041bc5c6 100644
--- a/reference/chrono/year_month_day/op_minus.md
+++ b/reference/chrono/year_month_day/op_minus.md
@@ -45,6 +45,8 @@ int main()
   assert(2020y/3/1 - chrono::years{1} == 2019y/3/1);
 }
 ```
+* 2020y[link /reference/chrono/year/op_y.md]
+* 2019y[link /reference/chrono/year/op_y.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator+ -- year_month(_day)の+- : コード修飾を追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day/op_plus.html"/>
      <id>4b17733f07970499684cfa8c2cb1e06c1ed00644:reference/chrono/year_month_day/op_plus.md</id>
      <updated>2020-10-20T23:36:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day/op_plus.md b/reference/chrono/year_month_day/op_plus.md
index ea42538b9..7d52c873e 100644
--- a/reference/chrono/year_month_day/op_plus.md
+++ b/reference/chrono/year_month_day/op_plus.md
@@ -78,6 +78,8 @@ int main()
   assert(2020y/3/1 + chrono::years{1} == 2021y/3/1);
 }
 ```
+* 2020y[link /reference/chrono/year/op_y.md]
+* 2021y[link /reference/chrono/year/op_y.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>chrono -- chrono : year_monthクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono.html"/>
      <id>77979742bd8306d58957085a711c93e9d31e1276:reference/chrono.md</id>
      <updated>2020-10-20T23:14:46+09:00</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;chrono&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;chrono&lt;/span&gt;&lt;span class=&#34;cpp cpp11&#34; title=&#34;C++11で追加&#34;&gt;(C++11)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;chrono&amp;gt;&lt;/code&gt;ヘッダは、時間に関するユーティリティとして機能する関数・クラスを提供する。このヘッダに含まれる関数・クラスは、&lt;code&gt;std::chrono&lt;/code&gt;名前空間で定義される。&lt;/p&gt;
&lt;p&gt;このライブラリは、タイムアウト、操作間隔、スケジューリングといった短期間の操作を主な用途として想定している。そのためカレンダー機能としては遥かな過去・未来を扱えるようにはなっていない。&lt;/p&gt;
&lt;h2&gt;時間を表す型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration.html&#34;&gt;duration&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間の間隔(class template)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/time_point.html&#34;&gt;time_point&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間軸上の一点(class template)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/treat_as_floating_point.html&#34;&gt;treat_as_floating_point&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;duration&lt;/code&gt;内部表現の型が浮動小数点型かを判定するためのトレイト(class template)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_values.html&#34;&gt;duration_values&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;duration&lt;/code&gt;内部表現の特別な値を取得するためのトレイト(class template)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;時間の単位を表す型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;nanoseconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ナノ秒を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;microseconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;マイクロ秒を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;milliseconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ミリ秒を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;minutes&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;分を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;hours&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;days&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;weeks&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;週を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;years&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;months&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;時計型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/is_clock.html&#34;&gt;is_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;クロック型かを判定する (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/system_clock.html&#34;&gt;system_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;システム時間のクロック(class)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/steady_clock.html&#34;&gt;steady_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間が逆行しないクロック(class)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/high_resolution_clock.html&#34;&gt;high_resolution_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;高分解能クロック(class)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/utc_clock.html&#34;&gt;utc_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;UTC時間 (協定世界時) のクロック (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/tai_clock.html&#34;&gt;tai_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;TAI時間 (国際原子時) のクロック (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/gps_clock.html&#34;&gt;gps_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;GPS時間のクロック (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/file_clock.html&#34;&gt;file_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ファイル時間を作るために使用されるクロック (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;システム時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/sys_time.html&#34;&gt;sys_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;システム時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/sys_time.html&#34;&gt;sys_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でシステム時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/sys_time.html&#34;&gt;sys_days&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日単位でシステム時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;ローカル時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_time.html&#34;&gt;local_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間を表す擬似的なクロック (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_time.html&#34;&gt;local_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_time.html&#34;&gt;local_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でローカル時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_time.html&#34;&gt;local_days&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日単位でローカル時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;UTC時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/utc_time.html&#34;&gt;utc_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;UTC時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/utc_time.html&#34;&gt;utc_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でUTC時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;TAI時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/tai_time.html&#34;&gt;tai_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;TAI時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/tai_time.html&#34;&gt;tai_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でTAI時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;GPS時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/gps_time.html&#34;&gt;gps_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;GPS時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/gps_time.html&#34;&gt;gps_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でGPS時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;ファイル時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/file_time.html&#34;&gt;file_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ファイル時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;時計時間の変換&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/clock_time_conversion.html&#34;&gt;clock_time_conversion&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時計間の変換方法を組み合わせごとに定義するためのクラス (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/clock_cast.html&#34;&gt;clock_cast&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ほかの時計時間のtime_pointに変換する (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;うるう秒の情報&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/leap_second_info.html&#34;&gt;leap_second_info&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;うるう秒の情報を扱うクラス (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/get_leap_second_info.html&#34;&gt;get_leap_second_info&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した日時までに挿入されたうるう秒の回数を取得する (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;カレンダー型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/last_spec.html&#34;&gt;last_spec&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月の最終日、週の最終日など、文脈に応じた「最後」を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/day.html&#34;&gt;day&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;未規定の月の指定した日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month.html&#34;&gt;month&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月単体の値を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year.html&#34;&gt;year&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;カレンダーの年を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday.html&#34;&gt;weekday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;週の日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_indexed.html&#34;&gt;weekday_indexed&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;N回目の指定した曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_last.html&#34;&gt;weekday_last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;未規定の月の最後の指定した曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_day.html&#34;&gt;month_day&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月と日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_day_last.html&#34;&gt;month_day_last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した月の最終日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_weekday.html&#34;&gt;month_weekday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月の指定したN番目の曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_weekday_last.html&#34;&gt;month_weekday_last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月の指定した最終回目の曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year_month.html&#34;&gt;year_month&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年と月を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year_month_day.html&#34;&gt;year_month_day&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年、月、日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year_month_day_last.md.nolink&#34;&gt;year_month_day_last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年、月、月の最終日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year_month_weekday.md.nolink&#34;&gt;year_month_weekday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年、月、N回目の指定した曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year_month_weekday_last.md.nolink&#34;&gt;year_month_weekday_last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年、月、月の最後の指定した曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;1日内の時間情報&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/time_of_day.md.nolink&#34;&gt;time_of_day&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1日内の時間情報を取得するクラス (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/hh_mm_ss.md.nolink&#34;&gt;hh_mm_ss&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時、分、秒を表すクラス (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/is_am.md.nolink&#34;&gt;is_am&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間が午前かを判定する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/is_pm.md.nolink&#34;&gt;is_pm&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間が午後かを判定する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/make12.md.nolink&#34;&gt;make12&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[1h, 12h]&lt;/code&gt;の時間範囲に変換する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/make24.md.nolink&#34;&gt;make24&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間を午前&lt;code&gt;[0h, 11h]&lt;/code&gt;か午後&lt;code&gt;[12h, 23h]&lt;/code&gt;の範囲に変換する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;タイムゾーン&lt;/h2&gt;
&lt;h3&gt;タイムゾーンのデータベース&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/tzdb.html&#34;&gt;tzdb&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンのデータベース型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/get_tzdb.html&#34;&gt;get_tzdb&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンデータベースを取得する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/tzdb_list.html&#34;&gt;tzdb_list&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンデータベースのリスト (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/get_tzdb_list.html&#34;&gt;get_tzdb_list&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンデータベースのリストを取得する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/locate_zone.html&#34;&gt;locate_zone&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した名前のタイムゾーンを取得する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/current_zone.html&#34;&gt;current_zone&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;現在のタイムゾーンを取得する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;リモートタイムゾーンデータベースのサポート&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/reload_tzdb.html&#34;&gt;reload_tzdb&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;リモートタイムゾーンデータベースを再読み込みする (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/remote_version.html&#34;&gt;remote_version&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;リモートタイムゾーンデータベースの最新バージョン番号を取得する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;例外クラス&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/nonexistent_local_time.html&#34;&gt;nonexistent_local_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;存在しないローカル時間をシステム時間に変換しようとした (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/ambiguous_local_time.html&#34;&gt;ambiguous_local_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間があいまい (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;タイムゾーン&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/sys_info.html&#34;&gt;sys_info&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;システム時間用のタイムゾーン情報 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_info.html&#34;&gt;local_info&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間用のタイムゾーン情報 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/choose.html&#34;&gt;choose&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンを変換する際に、早い時間側と遅い時間側どちらに丸めるかの種類 (enum)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/time_zone.html&#34;&gt;time_zone&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンの変換を扱うクラス (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/zoned_traits.html&#34;&gt;zoned_traits&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーン取得のカスタマイズ用中間インタフェース (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/zoned_time.html&#34;&gt;zoned_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンを考慮した時間軸上の一点を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/zoned_time.html&#34;&gt;zoned_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でタイムゾーンを考慮した時間軸上の一点を表す型 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;うるう秒サポート&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/leap_second.html&#34;&gt;leap_second&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;うるう秒が挿入された日時を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;リンク&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/time_zone_link.html&#34;&gt;time_zone_link&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンの代替名を管理する型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;文字列フォーマット&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local-time-format-t.html&#34;&gt;local-time-format-t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間を文字列フォーマットするために必要な情報をまとめた説明用の型 (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_time_format.html&#34;&gt;local_time_format&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間の文字列フォーマット用オブジェクトを生成する (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/format.html&#34;&gt;format&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列フォーマット&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;文字列解析&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/parse.html&#34;&gt;parse&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日時文字列を解析する入力マニピュレータ (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;カレンダー定数&lt;/h2&gt;
&lt;h3&gt;最後&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/last_spec.html&#34;&gt;last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月の最終日、週の最終日など、文脈に応じた「最後」を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;曜日&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Sunday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Monday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Tuesday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;火曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Wednesday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;水曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Thursday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;木曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Friday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;金曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Saturday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;土曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;月&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;January&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;February&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;2月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;March&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;3月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;April&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;4月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;May&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;5月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;June&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;6月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;July&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;7月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;August&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;8月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;September&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;9月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;October&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;10月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;November&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;11月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;December&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;12月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2661.htm&#34; target=&#34;_blank&#34;&gt;N2661 A Foundation to Sleep On&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0216r0.html&#34; target=&#34;_blank&#34;&gt;P0216R0 C++ Standard Proposal — A Time-Zone Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0355r7.html&#34; target=&#34;_blank&#34;&gt;P0355R7 Extending &lt;code&gt;&amp;lt;chrono&amp;gt;&lt;/code&gt; to Calendars and Time Zones&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator/ -- chrono : year_monthクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year/op_append.html"/>
      <id>77979742bd8306d58957085a711c93e9d31e1276:reference/chrono/year/op_append.md</id>
      <updated>2020-10-20T23:14:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year/op_append.md b/reference/chrono/year/op_append.md
index 4cea7f135..cc9400468 100644
--- a/reference/chrono/year/op_append.md
+++ b/reference/chrono/year/op_append.md
@@ -43,7 +43,7 @@ namespace std::chrono {
 }
 ```
 * month[link /reference/chrono/month.md]
-* year_month[link /reference/chrono/year_month.md.nolink]
+* year_month[link /reference/chrono/year_month.md]
 * year_month_day[link /reference/chrono/year_month_day.md]
 * month_day[link /reference/chrono/month_day.md]
 * year_month_day_last[link /reference/chrono/year_month_day_last.md.nolink]
@@ -120,7 +120,7 @@ int main()
 * 1d[link /reference/chrono/day/op_d.md]
 * last[link /reference/chrono/last_spec.md]
 * Sunday[link /reference/chrono/weekday_constants.md]
-* year_month[link /reference/chrono/year_month.md.nolink]
+* year_month[link /reference/chrono/year_month.md]
 * year_month_day[link /reference/chrono/year_month_day.md]
 * year_month_day_last[link /reference/chrono/year_month_day_last.md.nolink]
 * year_month_weekday[link /reference/chrono/year_month_weekday.md.nolink]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>yリテラル -- chrono : year_monthクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year/op_y.html"/>
      <id>77979742bd8306d58957085a711c93e9d31e1276:reference/chrono/year/op_y.md</id>
      <updated>2020-10-20T23:14:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year/op_y.md b/reference/chrono/year/op_y.md
index 87b0b11e9..ee47cd55e 100644
--- a/reference/chrono/year/op_y.md
+++ b/reference/chrono/year/op_y.md
@@ -53,7 +53,7 @@ int main()
 }
 ```
 * 2020y[color ff0000]
-* chrono::year_month[link /reference/chrono/year_month.md.nolink]
+* chrono::year_month[link /reference/chrono/year_month.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>year_month -- chrono : year_monthクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month.html"/>
      <id>77979742bd8306d58957085a711c93e9d31e1276:reference/chrono/year_month.md</id>
      <updated>2020-10-20T23:14:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month.md b/reference/chrono/year_month.md
new file mode 100644
index 000000000..2a9b79804
--- /dev/null
+++ b/reference/chrono/year_month.md
@@ -0,0 +1,145 @@
+# year_month
+* chrono[meta header]
+* std::chrono[meta namespace]
+* class[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  class year_month;
+}
+```
+
+## 概要
+`year_month`は、年と月を表すカレンダー表現のためクラスである。
+
+このクラスは、年、および月に関する演算に対応している。
+
+このクラスは等値比較および大小比較ができ、[EqualityComparable](/reference/concepts/equality_comparable.md)およびLessThanComparableの要件を満たす。
+
+このクラスは、[トリビアルコピー可能](/reference/type_traits/is_trivially_copyable.md)で、かつ[スタンダードレイアウト型](/reference/type_traits/is_standard_layout.md)である。
+
+
+## メンバ関数
+### 構築／コピー／破棄
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`(constructor)`](year_month/op_constructor.md) | コンストラクタ | C++20 |
+| `year_month&amp;amp; operator=(const year_month&amp;amp;) = default;`&amp;lt;br/&amp;gt; `year_month&amp;amp; operator=(year_month&amp;amp;&amp;amp;) = default;` | 代入演算子 | C++20 |
+
+
+### 算術演算
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`operator+=`](year_month/op_plus_assign.md)  | 加算の複合代入 | C++20 |
+| [`operator-=`](year_month/op_minus_assign.md) | 減算の複合代入 | C++20 |
+
+
+### 観測
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`year`](year_month/year.md)   | 年要素を取得する | C++20 |
+| [`month`](year_month/month.md) | 月要素を取得する | C++20 |
+
+
+### 検証
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`ok`](year_month/ok.md) | 値が範囲に収まっているか判定する | C++20 |
+
+
+## 非メンバ関数
+### カレンダー構文演算子
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`operator/`](month_day/op_append.md) | カレンダー要素同士をつなぎ合わせる | C++20 |
+
+
+### 算術演算
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`operator+`](year_month/op_plus.md)  | 加算 | C++20 |
+| [`operator-`](year_month/op_minus.md) | 減算 | C++20 |
+
+
+### 比較演算
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`operator==`](year_month/op_equal.md) | 等値比較を行う | C++20 |
+| `bool operator!=(const year_month&amp;amp;, const year_month&amp;amp;) noexcept;` | 非等値比較を行う (`==`により使用可能) | C++20 |
+| [`operator&amp;lt;=&amp;gt;`](year_month/op_compare_3way.md) | 三方比較を行う | C++20 |
+| `bool operator&amp;lt;(const year_month&amp;amp;, const year_month&amp;amp;) noexcept;` | 左辺が右辺より小さいかを判定する (`&amp;lt;=&amp;gt;`により使用可能) | C++20 |
+| `bool operator&amp;lt;=(const year_month&amp;amp;, const year_month&amp;amp;) noexcept;` | 左辺が右辺以下を判定する (`&amp;lt;=&amp;gt;`により使用可能) | C++20 |
+| `bool operator&amp;gt;(const year_month&amp;amp;, const year_month&amp;amp;) noexcept;` | 左辺が右辺より大きいかを判定する (`&amp;lt;=&amp;gt;`により使用可能) | C++20 |
+| `bool operator&amp;gt;=(const year_month&amp;amp;, const year_month&amp;amp;) noexcept;` | 左辺が右辺以上を判定する (`&amp;lt;=&amp;gt;`により使用可能) | C++20 |
+
+
+### 入出力
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`operator&amp;lt;&amp;lt;`](year_month/op_ostream.md)   | 出力ストリームに出力する | C++20 |
+| [`from_stream`](year_month/from_stream.md) | フォーマット指定して入力ストリームから入力する | C++20 |
+
+
+## 文字列フォーマット
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`formatter`](year_month/formatter.md) | [`std::formatter`](/reference/format/formatter.md)クラスの特殊化 | C++20 |
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  // すべて2020年3月を表す
+  chrono::year_month date1 = 2020y/3;
+  chrono::year_month date2 = 2020y/chrono::March;
+
+  // 各カレンダー要素のコンストラクタはexplicitなので、
+  // 指定順は年、月で決まっているが、int値は指定できない
+  chrono::year_month date3{2020y, chrono::March};
+  chrono::year_month date4{chrono::year{2020}, chrono::month{3}};
+
+  std::cout &amp;lt;&amp;lt; date1 &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; date2 &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; date3 &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; date4 &amp;lt;&amp;lt; std::endl;
+}
+```
+* 2020y[link year/op_y.md]
+* chrono::March[link month_constants.md]
+* chrono::year[link year.md]
+* chrono::month[link month.md]
+
+### 出力
+```
+2020/Mar
+2020/Mar
+2020/Mar
+2020/Mar
+```
+
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0 (入出力ストリームなし)
+- [GCC](/implementation.md#gcc): 11.1 (入出力ストリームなし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>formatter -- chrono : year_monthクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month/formatter.html"/>
      <id>77979742bd8306d58957085a711c93e9d31e1276:reference/chrono/year_month/formatter.md</id>
      <updated>2020-10-20T23:14:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month/formatter.md b/reference/chrono/year_month/formatter.md
new file mode 100644
index 000000000..809124e21
--- /dev/null
+++ b/reference/chrono/year_month/formatter.md
@@ -0,0 +1,59 @@
+# formatter
+* chrono[meta header]
+* std[meta namespace]
+* class[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std {
+  template &amp;lt;class charT&amp;gt;
+  struct formatter&amp;lt;chrono::year_month, charT&amp;gt;;
+}
+```
+
+## 概要
+`year_month_day`クラスに対する[`std::formatter`](/reference/format/formatter.md)クラステンプレートの特殊化。
+
+[`month`](/reference/chrono/month/formatter.md)と[`year`](/reference/chrono/year/formatter.md)で利用可能なフォーマットフラグを使用できる。
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+#include &amp;lt;format&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main() {
+  chrono::year_month date = 2020y/3;
+
+  // デフォルトフォーマットはoperator&amp;lt;&amp;lt;と同じ
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;1 : {}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;2 : {:%Y/%b}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;3 : {:%Y年%m月}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+}
+```
+* std::format[link /reference/chrono/format.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+
+### 出力
+```
+1 : 2020/Mar
+2 : 2020/Mar
+3 : 2020年03月
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): (9.0時点で実装なし)
+- [GCC](/implementation.md#gcc): (9.2時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 関連項目
+- [chronoの`std::format()`](/reference/chrono/format.md) (フォーマットの詳細)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>from_stream -- chrono : year_monthクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month/from_stream.html"/>
      <id>77979742bd8306d58957085a711c93e9d31e1276:reference/chrono/year_month/from_stream.md</id>
      <updated>2020-10-20T23:14:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month/from_stream.md b/reference/chrono/year_month/from_stream.md
new file mode 100644
index 000000000..58e6c56e0
--- /dev/null
+++ b/reference/chrono/year_month/from_stream.md
@@ -0,0 +1,81 @@
+# from_stream
+* chrono[meta header]
+* std::chrono[meta namespace]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  template &amp;lt;class charT, class traits, class Alloc = std::allocator&amp;lt;charT&amp;gt;&amp;gt;
+  std::basic_istream&amp;lt;charT, traits&amp;gt;&amp;amp;
+    from_stream(std::basic_istream&amp;lt;charT, traits&amp;gt;&amp;amp; is,
+                const charT* fmt,
+                year_month&amp;amp; ym,
+                basic_string&amp;lt;charT, traits, Alloc&amp;gt;* abbrev = nullptr,
+                minutes* offset = nullptr);   // (1) C++20
+}
+```
+
+## 概要
+フォーマット指定して入力ストリームから`year_month`オブジェクトに入力する。
+
+
+## 効果
+- パラメータ`fmt`で指定されたフォーマットフラグを使用して、入力を解析し、`ym`に代入する
+- 有効な年の解析に失敗した場合、`is.`[`setstate`](/reference/ios/basic_ios/setstate.md)`(`[`ios_base::failbit`](/reference/ios/ios_base/type-iostate.md)`)`が呼び出され、パラメータ`ym`は変更されない
+- タイムゾーンフォーマット`&amp;#34;%Z&amp;#34;`が指定され、解析が成功した場合、パラメータ`abbrev`が非ヌルである場合に`*abbrev`にタイムゾーン名が代入される
+- タイムゾーンとしてUTC時間からのオフセット時間 (日本なら`&amp;#34;+0900&amp;#34;`) を意味するフォーマット`&amp;#34;%z&amp;#34;`が指定され、解析が成功した場合、パラメータ`offset`が非ヌルである場合に`*offset`にその値が代入される
+
+
+## 戻り値
+`is`を返す
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;sstream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  {
+    std::stringstream ss;
+    ss &amp;lt;&amp;lt; &amp;#34;2020/Mar&amp;#34;;
+
+    chrono::year_month ym;
+    chrono::from_stream(ss, ym, &amp;#34;%Y/%b&amp;#34;);
+    assert(ym == 2020y/3);
+  }
+  {
+    std::stringstream ss;
+    ss &amp;lt;&amp;lt; &amp;#34;2020/03&amp;#34;;
+
+    chrono::year_month ym;
+    chrono::from_stream(ss, ym, &amp;#34;%Y/%m&amp;#34;);
+    assert(ym == 2020y/3);
+  }
+}
+```
+* chrono::from_stream[color ff0000]
+* 2020y[link /reference/chrono/year/op_y.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): (9.0時点で実装なし)
+- [GCC](/implementation.md#gcc): (9.2時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 関連項目
+- [chronoの`parse()`](/reference/chrono/parse.md) (入力フォーマットの詳細)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>month -- chrono : year_monthクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month/month.html"/>
      <id>77979742bd8306d58957085a711c93e9d31e1276:reference/chrono/year_month/month.md</id>
      <updated>2020-10-20T23:14:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month/month.md b/reference/chrono/year_month/month.md
new file mode 100644
index 000000000..89fbcaea4
--- /dev/null
+++ b/reference/chrono/year_month/month.md
@@ -0,0 +1,52 @@
+# month
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr chrono::month month() const noexcept; // (1) C++20
+```
+* chrono::month[link /reference/chrono/month.md]
+
+## 概要
+月要素を取得する。
+
+
+## 戻り値
+コンストラクタで設定されて保持している月オブジェクトを返す。
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::year_month date = 2020y/3;
+  chrono::month m = date.month();
+  assert(m == chrono::March);
+}
+```
+* date.month()[color ff0000]
+* chrono::month[link /reference/chrono/month.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::March[link /reference/chrono/month_constants.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ok -- chrono : year_monthクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month/ok.html"/>
      <id>77979742bd8306d58957085a711c93e9d31e1276:reference/chrono/year_month/ok.md</id>
      <updated>2020-10-20T23:14:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month/ok.md b/reference/chrono/year_month/ok.md
new file mode 100644
index 000000000..b058d399c
--- /dev/null
+++ b/reference/chrono/year_month/ok.md
@@ -0,0 +1,50 @@
+# ok
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr bool ok() const noexcept; // (1) C++20
+```
+
+## 概要
+`year_month`オブジェクトの値が有効な日付の範囲内かを判定する。
+
+
+## 戻り値
+以下の全ての条件を満たす場合にこの関数は`true`を返し、そうでなければ`false`を返す：
+
+- [`year()`](year.md)メンバ関数によって返されるオブジェクト`y`の[`ok()`](/reference/chrono/year/ok.md)が`true`
+- [`month()`](month.md)メンバ関数によって返されるオブジェクト`m`の[`ok()`](/reference/chrono/month/ok.md)が`true`
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  assert((2020y/3).ok()  == true);
+  assert((2020y/13).ok() == false);
+}
+```
+* ok()[color ff0000]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator/ -- chrono : year_monthクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month/op_append.html"/>
      <id>77979742bd8306d58957085a711c93e9d31e1276:reference/chrono/year_month/op_append.md</id>
      <updated>2020-10-20T23:14:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month/op_append.md b/reference/chrono/year_month/op_append.md
new file mode 100644
index 000000000..af907c69e
--- /dev/null
+++ b/reference/chrono/year_month/op_append.md
@@ -0,0 +1,97 @@
+# operator/
+* chrono[meta header]
+* std::chrono[meta namespace]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  constexpr year_month_day
+    operator/(const year_month&amp;amp; ym, const day&amp;amp; d) noexcept; // (1) C++20
+  constexpr year_month_day
+    operator/(const year_month&amp;amp; ym, int d) noexcept;        // (2) C++20
+
+  constexpr year_month_day_last
+    operator/(const year_month&amp;amp; ym, last_spec) noexcept;    // (3) C++20
+
+  constexpr year_month_weekday
+    operator/(const year_month&amp;amp; ym,
+              const weekday_indexed&amp;amp; wdi) noexcept;         // (4) C++20
+
+  constexpr year_month_weekday_last
+    operator/(const year_month&amp;amp; ym,
+              const weekday_last&amp;amp; wdl) noexcept;            // (5) C++20
+}
+```
+* day[link /reference/chrono/day.md]
+* year_month_day[link /reference/chrono/year_month_day.md]
+* year_month_day_last[link /reference/chrono/year_month_day_last.md.nolink]
+* year_month_weekday[link /reference/chrono/year_month_weekday.md.nolink]
+* year_month_weekday_last[link /reference/chrono/year_month_weekday_last.md.nolink]
+
+## 概要
+カレンダー要素同士をつなぎ合わせる。
+
+- (1) : `year_month`型と[`day`](/reference/chrono/day.md)型をつなぎ、年月日の情報をもつ型にまとめる
+- (2) : `year_month`型と`int`型での年の値をつなぎ、年月日の情報をもつ型にまとめる
+- (3) : `year_month`型と最終日をつなぎ、年、月、その月の最終日の情報をもつ型にまとめる
+- (4) : `year_month`型と指定したN回目の曜日をつなぎ、年、月、その月のN回目の指定した曜日の情報をもつ型にまとめる
+- (4) : `year_month`型と指定した最終回目の曜日をつなぎ、年、月、その月の最終回目の指定した曜日の情報をもつ型にまとめる
+
+
+## 戻り値
+- (1) : `return` [`year_month_day`](/reference/chrono/year_month_day.md)`{ym.`[`year()`](year.md)`, ym.`[`month()`](month.md)`, d};`
+- (2) : `return ym /` [`day`](/reference/chrono/day.md)`(d);`
+- (3) : `return` [`year_month_day_last`](/reference/chrono/year_month_day_last.md.nolink)`{ym.`[`year()`](year.md)`,` [`month_day_last`](/reference/chrono/month_day_last.md)`{ym.`[`month()`](month.md)`}};`
+- (4) : `return` [`year_month_weekday`](/reference/chrono/year_month_weekday.md.nolink)`{ym.`[`year()`](year.md)`, ym.`[`month()`](month.md)`, wdi};`
+- (5) : `return` [`year_month_weekday_last`](/reference/chrono/year_month_weekday_last.md.nolink)`{ym.`[`year()`](year.md)`, ym.`[`month()`](month.md)`, wdl};`
+
+
+## 例外
+投げない
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+using namespace std::chrono;
+
+int main()
+{
+  // (1), (2)
+  assert((2020y/3)/1d == (year_month_day{2020y, March, 1d}));
+  assert((2020y/3)/1 == (year_month_day{2020y, March, 1d}));
+
+  // (3)
+  assert((2020y/3)/last == (year_month_day_last{2020y, month_day_last{March}}));
+
+  // (4)
+  assert((2020y/3)/Sunday[1] == (year_month_weekday{2020y, March, Sunday[1]}));
+
+  // (5)
+  assert((2020y/3)/Sunday[last] == (year_month_weekday_last{2020y, March, Sunday[last]}));
+}
+```
+* March[link /reference/chrono/month_constants.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* 1d[link /reference/chrono/day/op_d.md]
+* year_month_day[link /reference/chrono/year_month_day.md]
+* year_month_day_last[link /reference/chrono/year_month_day_last.md.nolink]
+* month_day_last[link /reference/chrono/month_day_last.md]
+* year_month_weekday[link /reference/chrono/year_month_weekday.md.nolink]
+* year_month_weekday_last[link /reference/chrono/year_month_weekday_last.md.nolink]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;=&gt; -- chrono : year_monthクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month/op_compare_3way.html"/>
      <id>77979742bd8306d58957085a711c93e9d31e1276:reference/chrono/year_month/op_compare_3way.md</id>
      <updated>2020-10-20T23:14:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month/op_compare_3way.md b/reference/chrono/year_month/op_compare_3way.md
new file mode 100644
index 000000000..079546452
--- /dev/null
+++ b/reference/chrono/year_month/op_compare_3way.md
@@ -0,0 +1,67 @@
+# operator&amp;lt;=&amp;gt;
+* chrono[meta header]
+* std::chrono[meta namespace]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  constexpr strong_ordering operator&amp;lt;=&amp;gt;(const year_month&amp;amp; x, const year_month&amp;amp; y) noexcept; // (1) C++20
+}
+```
+
+## 概要
+`year_month`同士の三方比較を行う。
+
+
+## 戻り値
+- (1) : 以下と等価：
+
+```cpp
+if (auto c = x.year() &amp;lt;=&amp;gt; y.year(); c != 0) return c;
+return x.month() &amp;lt;=&amp;gt; y.month();
+```
+* year()[link year.md]
+* month()[link month.md]
+
+
+## 例外
+投げない
+
+
+## 備考
+- この演算子により、`operator&amp;lt;`、`operator&amp;lt;=`、`operator&amp;gt;`、`operator&amp;gt;=`が使用可能になる
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+using namespace std::chrono_literals;
+
+int main()
+{
+  assert((2020y/3 &amp;lt;=&amp;gt; 2020y/3) == 0);
+
+  assert(2020y/2 &amp;lt; 2020y/3);
+  assert(2020y/2 &amp;lt;= 2020y/3);
+
+  assert(2020y/3 &amp;gt; 2020y/2);
+  assert(2020y/3 &amp;gt;= 2020y/2);
+}
+```
+* 2020y[link /reference/chrono/year/op_y.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): (9.0時点で実装なし)
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- chrono : year_monthクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month/op_constructor.html"/>
      <id>77979742bd8306d58957085a711c93e9d31e1276:reference/chrono/year_month/op_constructor.md</id>
      <updated>2020-10-20T23:14:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month/op_constructor.md b/reference/chrono/year_month/op_constructor.md
new file mode 100644
index 000000000..1cf8bf76e
--- /dev/null
+++ b/reference/chrono/year_month/op_constructor.md
@@ -0,0 +1,71 @@
+# コンストラクタ
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+year_month() = default;                                // (1) C++20
+
+constexpr year_month(const chrono::year&amp;amp; y,
+                     const chrono::month&amp;amp; m) noexcept; // (2) C++20
+
+year_month(const year_month&amp;amp;) = default;               // (3) C++20
+year_month(year_month&amp;amp;&amp;amp;) = default;                    // (4) C++20
+```
+* chrono::year[link /reference/chrono/year.md]
+* chrono::month[link /reference/chrono/month.md]
+
+## 概要
+- (1) : デフォルトコンストラクタ
+- (2) : 年、月の値をそれぞれ指定して構築する
+- (3) : コピーコンストラクタ
+- (4) : ムーブコンストラクタ
+
+
+## 効果
+- (1) :
+    - デフォルト初期化では年、月の値がそれぞれ符号なし整数の未初期化値となり、値初期化では値0となる
+- (2) :
+    - `y`、`m`をメンバ変数として保持する
+
+
+## 例外
+投げない
+
+
+### 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  // 年、月のカレンダー要素を順に指定して構築
+  chrono::year_month date1{2020y, chrono::March};
+  chrono::year_month date2{chrono::year{2020}, chrono::month{3}};
+  assert(date1 == 2020y/3);
+  assert(date2 == 2020y/3);
+}
+```
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::March[link /reference/chrono/month_constants.md]
+* chrono::year[link /reference/chrono/year.md]
+* chrono::month[link /reference/chrono/month.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator== -- chrono : year_monthクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month/op_equal.html"/>
      <id>77979742bd8306d58957085a711c93e9d31e1276:reference/chrono/year_month/op_equal.md</id>
      <updated>2020-10-20T23:14:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month/op_equal.md b/reference/chrono/year_month/op_equal.md
new file mode 100644
index 000000000..55d60a5d0
--- /dev/null
+++ b/reference/chrono/year_month/op_equal.md
@@ -0,0 +1,61 @@
+# operator==
+* chrono[meta header]
+* std::chrono[meta namespace]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  constexpr bool operator==(const year_month&amp;amp; x, const year_month&amp;amp; y) noexcept; // (1) C++20
+}
+```
+
+## 概要
+`year_month`同士の等値比較を行う。
+
+
+## 戻り値
+- (1) :
+
+```cpp
+return x.year() == y.year() &amp;amp;&amp;amp; x.month() == y.month();
+```
+* year()[link year.md]
+* month()[link month.md]
+
+
+## 例外
+投げない
+
+
+## 備考
+- この演算子により、`operator!=`が使用可能になる
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+using namespace std::chrono_literals;
+
+int main()
+{
+  assert(2020y/3 == 2020y/3);
+  assert(2020y/3 != 2020y/2);
+}
+```
+* 2020y[link /reference/chrono/year/op_y.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator- -- chrono : year_monthクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month/op_minus.html"/>
      <id>77979742bd8306d58957085a711c93e9d31e1276:reference/chrono/year_month/op_minus.md</id>
      <updated>2020-10-20T23:14:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month/op_minus.md b/reference/chrono/year_month/op_minus.md
new file mode 100644
index 000000000..28fa3e5c8
--- /dev/null
+++ b/reference/chrono/year_month/op_minus.md
@@ -0,0 +1,56 @@
+# operator-
+* chrono[meta header]
+* std::chrono[meta namespace]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  constexpr year_month operator-(const year_month&amp;amp; ym, const months&amp;amp; dm) noexcept; // (1) C++20
+  constexpr year_month operator-(const year_month&amp;amp; ym, const years&amp;amp; dy) noexcept;  // (2) C++20
+}
+```
+
+## 概要
+`year_month`の減算を行う。
+
+- (1) : `year_month`から月の時間間隔を減算する
+- (2) : `year_month`から年の時間間隔を減算する
+
+
+## 戻り値
+- (1) : `return ym + (-dm);`
+- (2) : `return ym + (-dy);`
+
+
+## 例外
+投げない
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  assert(2020y/3 - chrono::months{1} == 2020y/2);
+  assert(2020y/3 - chrono::years{1} == 2019y/3);
+}
+```
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator-= -- chrono : year_monthクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month/op_minus_assign.html"/>
      <id>77979742bd8306d58957085a711c93e9d31e1276:reference/chrono/year_month/op_minus_assign.md</id>
      <updated>2020-10-20T23:14:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month/op_minus_assign.md b/reference/chrono/year_month/op_minus_assign.md
new file mode 100644
index 000000000..b83668504
--- /dev/null
+++ b/reference/chrono/year_month/op_minus_assign.md
@@ -0,0 +1,67 @@
+# operator-=
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr year_month&amp;amp; operator-=(const months&amp;amp; dm) noexcept; // (1) C++20
+constexpr year_month&amp;amp; operator-=(const years&amp;amp; dy) noexcept;  // (2) C++20
+```
+
+## 概要
+`year_month`の値に対して減算の複合代入を行う。
+
+- (1) : 月の時間間隔を減算する
+- (2) : 年の時間間隔を減算する
+
+パラメータの型が、カレンダー時間の[`month`](/reference/chrono/month.md)、[`year`](/reference/chrono/year.md)ではなく、時間間隔を表す[`months`](/reference/chrono/duration_aliases.md)、[`years`](/reference/chrono/duration_aliases.md)であることに注意。
+
+
+## 効果
+- (1) : `*this = *this - dm`
+- (2) : `*this = *this - dy`
+
+
+## 戻り値
+- (1), (2) : `*this`
+
+
+## 例外
+投げない
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::year_month date = 2020y/3;
+
+  date -= chrono::months{1}; // 1ヶ月戻す
+  date -= chrono::years{1};  // 1年戻す
+
+  std::cout &amp;lt;&amp;lt; date &amp;lt;&amp;lt; std::endl;
+}
+```
+* 2020y[link /reference/chrono/year/op_y.md]
+
+### 出力
+```
+2019/Feb
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;&lt; -- chrono : year_monthクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month/op_ostream.html"/>
      <id>77979742bd8306d58957085a711c93e9d31e1276:reference/chrono/year_month/op_ostream.md</id>
      <updated>2020-10-20T23:14:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month/op_ostream.md b/reference/chrono/year_month/op_ostream.md
new file mode 100644
index 000000000..3c36ed83d
--- /dev/null
+++ b/reference/chrono/year_month/op_ostream.md
@@ -0,0 +1,65 @@
+# operator&amp;lt;&amp;lt;
+* chrono[meta header]
+* std::chrono[meta namespace]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  template &amp;lt;class charT, class traits&amp;gt;
+  std::basic_ostream&amp;lt;charT, traits&amp;gt;&amp;amp;
+    operator&amp;lt;&amp;lt;(std::basic_ostream&amp;lt;charT, traits&amp;gt;&amp;amp; os, const year_month&amp;amp; ym); // (1) C++20
+}
+```
+
+## 概要
+`year_month`オブジェクトを出力ストリームに出力する。
+
+
+## 戻り値
+便宜上のリテラルキャスト`STATICALLY-WIDEN`を導入する。`STATICALLY-WIDEN&amp;lt;charT&amp;gt;(&amp;#34;...&amp;#34;)`は、`charT`が`char`である場合は`&amp;#34;...&amp;#34;`、`charT`が`wchar_t`である場合は`L&amp;#34;...&amp;#34;`を意味する。
+
+- (1) : 以下と等価：
+    ```cpp
+    return os &amp;lt;&amp;lt; format(STATICALLY-WIDEN&amp;lt;charT&amp;gt;(&amp;#34;{}/{}&amp;#34;), ym.year(), ym.month());
+    ```
+    * format[link /reference/format/format.md]
+    * ym.year()[link year.md]
+    * ym.month()[link month.md]
+
+
+## 備考
+- [`year_month_day`](/reference/chrono/year_month_day.md)クラスの出力フォーマットは`&amp;#34;%Y-%m-%d&amp;#34;`だが、こちらは`%Y/%b`であることに注意
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+using namespace std::chrono_literals;
+
+int main()
+{
+  std::cout &amp;lt;&amp;lt; 2020y/3 &amp;lt;&amp;lt; std::endl;
+}
+```
+* 2020y[link /reference/chrono/year/op_y.md]
+
+### 出力
+```
+2020/Mar
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): (9.0時点で実装なし)
+- [GCC](/implementation.md#gcc): (9.2時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 関連項目
+- [chronoの`std::format()`](/reference/chrono/format.md) (フォーマットの詳細)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator+ -- chrono : year_monthクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month/op_plus.html"/>
      <id>77979742bd8306d58957085a711c93e9d31e1276:reference/chrono/year_month/op_plus.md</id>
      <updated>2020-10-20T23:14:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month/op_plus.md b/reference/chrono/year_month/op_plus.md
new file mode 100644
index 000000000..f4f71d326
--- /dev/null
+++ b/reference/chrono/year_month/op_plus.md
@@ -0,0 +1,86 @@
+# operator+
+* chrono[meta header]
+* std::chrono[meta namespace]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  constexpr year_month operator+(const year_month&amp;amp; ym, const months&amp;amp; dm) noexcept; // (1) C++20
+  constexpr year_month operator+(const months&amp;amp; dm, const year_month&amp;amp; ym) noexcept; // (2) C++20
+
+  constexpr year_month operator+(const year_month&amp;amp; ym, const years&amp;amp; dy) noexcept;  // (3) C++20
+  constexpr year_month operator+(const years&amp;amp; dy, const year_month&amp;amp; ym) noexcept;  // (4) C++20
+}
+```
+
+## 概要
+`year_month`の加算を行う。
+
+- (1) : `year_month`に月の時間間隔を加算する
+- (2) : 月の時間間隔に`year_month`を加算する
+- (3) : `year_month`に年の時間間隔を加算する
+- (4) : 年の時間間隔に`year_month`を加算する
+
+
+## 戻り値
+- (1) : 以下の式が`true`となる`year_month`オブジェクト`z`を返す
+    ```cpp
+    z.ok() &amp;amp;&amp;amp; z - ym == dm;
+    ```
+    * z.ok()[link ok.md]
+
+
+- (2) :
+    ```cpp
+    return ym + dm;
+    ```
+
+- (3) :
+    ```cpp
+    return (ym.year() + dy) / ym.month();
+    ```
+    * ym.year()[link year.md]
+    * ym.month()[link month.md]
+
+- (4) :
+    ```cpp
+    return ym + dy;
+    ```
+
+
+## 計算量
+- (1) : `dm`の値に関してO(1)
+
+
+## 例外
+投げない
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  assert(2020y/3 + chrono::months{1} == 2020y/4);
+  assert(2020y/3 + chrono::years{1} == 2021y/3);
+}
+```
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator+= -- chrono : year_monthクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month/op_plus_assign.html"/>
      <id>77979742bd8306d58957085a711c93e9d31e1276:reference/chrono/year_month/op_plus_assign.md</id>
      <updated>2020-10-20T23:14:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month/op_plus_assign.md b/reference/chrono/year_month/op_plus_assign.md
new file mode 100644
index 000000000..b543e035a
--- /dev/null
+++ b/reference/chrono/year_month/op_plus_assign.md
@@ -0,0 +1,67 @@
+# operator+=
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr year_month&amp;amp; operator+=(const months&amp;amp; dm) noexcept; // (1) C++20
+constexpr year_month&amp;amp; operator+=(const years&amp;amp; dy) noexcept;  // (2) C++20
+```
+
+## 概要
+`year_month`の値に対して加算の複合代入を行う。
+
+- (1) : 月の時間間隔を加算する
+- (2) : 年の時間間隔を加算する
+
+パラメータの型が、カレンダー時間の[`month`](/reference/chrono/month.md)、[`year`](/reference/chrono/year.md)ではなく、時間間隔を表す[`months`](/reference/chrono/duration_aliases.md)、[`years`](/reference/chrono/duration_aliases.md)であることに注意。
+
+
+## 効果
+- (1) : `*this = *this + dm`
+- (2) : `*this = *this + dy`
+
+
+## 戻り値
+- (1), (2) : `*this`
+
+
+## 例外
+投げない
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::year_month date = 2020y/3;
+
+  date += chrono::months{1}; // 1ヶ月進める
+  date += chrono::years{1};  // 1年進める
+
+  std::cout &amp;lt;&amp;lt; date &amp;lt;&amp;lt; std::endl;
+}
+```
+* 2020y[link /reference/chrono/year/op_y.md]
+
+### 出力
+```
+2021/Apr
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>year -- chrono : year_monthクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month/year.html"/>
      <id>77979742bd8306d58957085a711c93e9d31e1276:reference/chrono/year_month/year.md</id>
      <updated>2020-10-20T23:14:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month/year.md b/reference/chrono/year_month/year.md
new file mode 100644
index 000000000..ef93b7c26
--- /dev/null
+++ b/reference/chrono/year_month/year.md
@@ -0,0 +1,51 @@
+# year
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr chrono::year year() const noexcept; // (1) C++20
+```
+* chrono::year[link /reference/chrono/year.md]
+
+## 概要
+年要素を取得する。
+
+
+## 戻り値
+コンストラクタで設定されて保持している年オブジェクトを返す。
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::year_month date = 2020y/3;
+  chrono::year y = date.year();
+  assert(y == 2020y);
+}
+```
+* date.year()[color ff0000]
+* chrono::year[link /reference/chrono/year.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- chrono : year_monthクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day/op_constructor.html"/>
      <id>77979742bd8306d58957085a711c93e9d31e1276:reference/chrono/year_month_day/op_constructor.md</id>
      <updated>2020-10-20T23:14:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day/op_constructor.md b/reference/chrono/year_month_day/op_constructor.md
index 8bba6cd7d..984595aaa 100644
--- a/reference/chrono/year_month_day/op_constructor.md
+++ b/reference/chrono/year_month_day/op_constructor.md
@@ -40,7 +40,7 @@ year_month_day(year_month_day&amp;amp;&amp;amp;) = default;                         // (7) C++20
 
 ## 効果
 - (1) :
-    - デフォルト初期化では、年、月、日の値がそれぞれ符号なし整数の未初期化値となり、値初期化では値0となる
+    - デフォルト初期化では年、月、日の値がそれぞれ符号なし整数の未初期化値となり、値初期化では値0となる
 - (2) :
     - `y`、`m`、`d`をメンバ変数として保持する
 - (3) :
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator-= -- chrono : year_monthクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day/op_minus_assign.html"/>
      <id>77979742bd8306d58957085a711c93e9d31e1276:reference/chrono/year_month_day/op_minus_assign.md</id>
      <updated>2020-10-20T23:14:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day/op_minus_assign.md b/reference/chrono/year_month_day/op_minus_assign.md
index eca5c2bc5..c44124e0a 100644
--- a/reference/chrono/year_month_day/op_minus_assign.md
+++ b/reference/chrono/year_month_day/op_minus_assign.md
@@ -20,8 +20,8 @@ constexpr year_month_day&amp;amp; operator-=(const years&amp;amp; y) noexcept;  // (2) C++20
 
 
 ## 効果
-- (1) : `*this = *this + m`
-- (2) : `*this = *this + y`
+- (1) : `*this = *this - m`
+- (2) : `*this = *this - y`
 
 
 ## 戻り値
@@ -44,8 +44,8 @@ int main()
 {
   chrono::year_month_day date = 2020y/3/1;
 
-  date += chrono::months{1}; // 1ヶ月進める
-  date += chrono::years{1};  // 1年進める
+  date -= chrono::months{1}; // 1ヶ月戻す
+  date -= chrono::years{1};  // 1年戻す
 
   std::cout &amp;lt;&amp;lt; date &amp;lt;&amp;lt; std::endl;
 }
@@ -54,7 +54,7 @@ int main()
 
 ### 出力
 ```
-2021-04-01
+2019-02-01
 ```
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator+= -- chrono : year_monthクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day/op_plus_assign.html"/>
      <id>77979742bd8306d58957085a711c93e9d31e1276:reference/chrono/year_month_day/op_plus_assign.md</id>
      <updated>2020-10-20T23:14:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day/op_plus_assign.md b/reference/chrono/year_month_day/op_plus_assign.md
index 8fa68d24a..a73814740 100644
--- a/reference/chrono/year_month_day/op_plus_assign.md
+++ b/reference/chrono/year_month_day/op_plus_assign.md
@@ -20,8 +20,8 @@ constexpr year_month_day&amp;amp; operator+=(const years&amp;amp; y) noexcept;  // (2) C++20
 
 
 ## 効果
-- (1) : `*this = *this - m`
-- (2) : `*this = *this - y`
+- (1) : `*this = *this + m`
+- (2) : `*this = *this + y`
 
 
 ## 戻り値
@@ -44,8 +44,8 @@ int main()
 {
   chrono::year_month_day date = 2020y/3/1;
 
-  date -= chrono::months{1}; // 1ヶ月戻す
-  date -= chrono::years{1};  // 1年戻す
+  date += chrono::months{1}; // 1ヶ月進める
+  date += chrono::years{1};  // 1年進める
 
   std::cout &amp;lt;&amp;lt; date &amp;lt;&amp;lt; std::endl;
 }
@@ -54,7 +54,7 @@ int main()
 
 ### 出力
 ```
-2019-02-01
+2021-04-01
 ```
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>chrono -- chrono : month_weekday_lastクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono.html"/>
      <id>a54d759e73346295a56d4ec2181d864cd64af53c:reference/chrono.md</id>
      <updated>2020-10-20T21:36:26+09:00</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;chrono&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;chrono&lt;/span&gt;&lt;span class=&#34;cpp cpp11&#34; title=&#34;C++11で追加&#34;&gt;(C++11)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;chrono&amp;gt;&lt;/code&gt;ヘッダは、時間に関するユーティリティとして機能する関数・クラスを提供する。このヘッダに含まれる関数・クラスは、&lt;code&gt;std::chrono&lt;/code&gt;名前空間で定義される。&lt;/p&gt;
&lt;p&gt;このライブラリは、タイムアウト、操作間隔、スケジューリングといった短期間の操作を主な用途として想定している。そのためカレンダー機能としては遥かな過去・未来を扱えるようにはなっていない。&lt;/p&gt;
&lt;h2&gt;時間を表す型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration.html&#34;&gt;duration&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間の間隔(class template)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/time_point.html&#34;&gt;time_point&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間軸上の一点(class template)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/treat_as_floating_point.html&#34;&gt;treat_as_floating_point&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;duration&lt;/code&gt;内部表現の型が浮動小数点型かを判定するためのトレイト(class template)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_values.html&#34;&gt;duration_values&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;duration&lt;/code&gt;内部表現の特別な値を取得するためのトレイト(class template)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;時間の単位を表す型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;nanoseconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ナノ秒を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;microseconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;マイクロ秒を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;milliseconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ミリ秒を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;minutes&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;分を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;hours&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;days&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;weeks&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;週を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;years&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;months&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;時計型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/is_clock.html&#34;&gt;is_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;クロック型かを判定する (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/system_clock.html&#34;&gt;system_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;システム時間のクロック(class)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/steady_clock.html&#34;&gt;steady_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間が逆行しないクロック(class)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/high_resolution_clock.html&#34;&gt;high_resolution_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;高分解能クロック(class)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/utc_clock.html&#34;&gt;utc_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;UTC時間 (協定世界時) のクロック (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/tai_clock.html&#34;&gt;tai_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;TAI時間 (国際原子時) のクロック (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/gps_clock.html&#34;&gt;gps_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;GPS時間のクロック (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/file_clock.html&#34;&gt;file_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ファイル時間を作るために使用されるクロック (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;システム時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/sys_time.html&#34;&gt;sys_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;システム時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/sys_time.html&#34;&gt;sys_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でシステム時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/sys_time.html&#34;&gt;sys_days&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日単位でシステム時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;ローカル時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_time.html&#34;&gt;local_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間を表す擬似的なクロック (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_time.html&#34;&gt;local_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_time.html&#34;&gt;local_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でローカル時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_time.html&#34;&gt;local_days&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日単位でローカル時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;UTC時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/utc_time.html&#34;&gt;utc_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;UTC時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/utc_time.html&#34;&gt;utc_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でUTC時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;TAI時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/tai_time.html&#34;&gt;tai_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;TAI時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/tai_time.html&#34;&gt;tai_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でTAI時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;GPS時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/gps_time.html&#34;&gt;gps_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;GPS時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/gps_time.html&#34;&gt;gps_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でGPS時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;ファイル時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/file_time.html&#34;&gt;file_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ファイル時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;時計時間の変換&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/clock_time_conversion.html&#34;&gt;clock_time_conversion&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時計間の変換方法を組み合わせごとに定義するためのクラス (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/clock_cast.html&#34;&gt;clock_cast&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ほかの時計時間のtime_pointに変換する (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;うるう秒の情報&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/leap_second_info.html&#34;&gt;leap_second_info&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;うるう秒の情報を扱うクラス (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/get_leap_second_info.html&#34;&gt;get_leap_second_info&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した日時までに挿入されたうるう秒の回数を取得する (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;カレンダー型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/last_spec.html&#34;&gt;last_spec&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月の最終日、週の最終日など、文脈に応じた「最後」を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/day.html&#34;&gt;day&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;未規定の月の指定した日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month.html&#34;&gt;month&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月単体の値を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year.html&#34;&gt;year&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;カレンダーの年を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday.html&#34;&gt;weekday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;週の日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_indexed.html&#34;&gt;weekday_indexed&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;N回目の指定した曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_last.html&#34;&gt;weekday_last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;未規定の月の最後の指定した曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_day.html&#34;&gt;month_day&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月と日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_day_last.html&#34;&gt;month_day_last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した月の最終日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_weekday.html&#34;&gt;month_weekday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月の指定したN番目の曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_weekday_last.html&#34;&gt;month_weekday_last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月の指定した最終回目の曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year_month.md.nolink&#34;&gt;year_month&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年と月を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year_month_day.html&#34;&gt;year_month_day&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年、月、日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year_month_day_last.md.nolink&#34;&gt;year_month_day_last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年、月、月の最終日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year_month_weekday.md.nolink&#34;&gt;year_month_weekday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年、月、N回目の指定した曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year_month_weekday_last.md.nolink&#34;&gt;year_month_weekday_last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年、月、月の最後の指定した曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;1日内の時間情報&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/time_of_day.md.nolink&#34;&gt;time_of_day&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1日内の時間情報を取得するクラス (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/hh_mm_ss.md.nolink&#34;&gt;hh_mm_ss&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時、分、秒を表すクラス (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/is_am.md.nolink&#34;&gt;is_am&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間が午前かを判定する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/is_pm.md.nolink&#34;&gt;is_pm&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間が午後かを判定する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/make12.md.nolink&#34;&gt;make12&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[1h, 12h]&lt;/code&gt;の時間範囲に変換する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/make24.md.nolink&#34;&gt;make24&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間を午前&lt;code&gt;[0h, 11h]&lt;/code&gt;か午後&lt;code&gt;[12h, 23h]&lt;/code&gt;の範囲に変換する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;タイムゾーン&lt;/h2&gt;
&lt;h3&gt;タイムゾーンのデータベース&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/tzdb.html&#34;&gt;tzdb&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンのデータベース型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/get_tzdb.html&#34;&gt;get_tzdb&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンデータベースを取得する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/tzdb_list.html&#34;&gt;tzdb_list&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンデータベースのリスト (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/get_tzdb_list.html&#34;&gt;get_tzdb_list&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンデータベースのリストを取得する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/locate_zone.html&#34;&gt;locate_zone&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した名前のタイムゾーンを取得する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/current_zone.html&#34;&gt;current_zone&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;現在のタイムゾーンを取得する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;リモートタイムゾーンデータベースのサポート&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/reload_tzdb.html&#34;&gt;reload_tzdb&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;リモートタイムゾーンデータベースを再読み込みする (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/remote_version.html&#34;&gt;remote_version&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;リモートタイムゾーンデータベースの最新バージョン番号を取得する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;例外クラス&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/nonexistent_local_time.html&#34;&gt;nonexistent_local_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;存在しないローカル時間をシステム時間に変換しようとした (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/ambiguous_local_time.html&#34;&gt;ambiguous_local_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間があいまい (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;タイムゾーン&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/sys_info.html&#34;&gt;sys_info&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;システム時間用のタイムゾーン情報 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_info.html&#34;&gt;local_info&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間用のタイムゾーン情報 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/choose.html&#34;&gt;choose&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンを変換する際に、早い時間側と遅い時間側どちらに丸めるかの種類 (enum)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/time_zone.html&#34;&gt;time_zone&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンの変換を扱うクラス (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/zoned_traits.html&#34;&gt;zoned_traits&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーン取得のカスタマイズ用中間インタフェース (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/zoned_time.html&#34;&gt;zoned_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンを考慮した時間軸上の一点を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/zoned_time.html&#34;&gt;zoned_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でタイムゾーンを考慮した時間軸上の一点を表す型 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;うるう秒サポート&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/leap_second.html&#34;&gt;leap_second&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;うるう秒が挿入された日時を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;リンク&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/time_zone_link.html&#34;&gt;time_zone_link&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンの代替名を管理する型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;文字列フォーマット&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local-time-format-t.html&#34;&gt;local-time-format-t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間を文字列フォーマットするために必要な情報をまとめた説明用の型 (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_time_format.html&#34;&gt;local_time_format&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間の文字列フォーマット用オブジェクトを生成する (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/format.html&#34;&gt;format&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列フォーマット&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;文字列解析&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/parse.html&#34;&gt;parse&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日時文字列を解析する入力マニピュレータ (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;カレンダー定数&lt;/h2&gt;
&lt;h3&gt;最後&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/last_spec.html&#34;&gt;last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月の最終日、週の最終日など、文脈に応じた「最後」を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;曜日&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Sunday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Monday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Tuesday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;火曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Wednesday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;水曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Thursday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;木曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Friday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;金曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Saturday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;土曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;月&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;January&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;February&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;2月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;March&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;3月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;April&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;4月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;May&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;5月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;June&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;6月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;July&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;7月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;August&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;8月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;September&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;9月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;October&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;10月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;November&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;11月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;December&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;12月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2661.htm&#34; target=&#34;_blank&#34;&gt;N2661 A Foundation to Sleep On&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0216r0.html&#34; target=&#34;_blank&#34;&gt;P0216R0 C++ Standard Proposal — A Time-Zone Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0355r7.html&#34; target=&#34;_blank&#34;&gt;P0355R7 Extending &lt;code&gt;&amp;lt;chrono&amp;gt;&lt;/code&gt; to Calendars and Time Zones&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator/ -- chrono : month_weekday_lastクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month/op_append.html"/>
      <id>a54d759e73346295a56d4ec2181d864cd64af53c:reference/chrono/month/op_append.md</id>
      <updated>2020-10-20T21:36:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month/op_append.md b/reference/chrono/month/op_append.md
index 8e3f4a592..163d77105 100644
--- a/reference/chrono/month/op_append.md
+++ b/reference/chrono/month/op_append.md
@@ -35,7 +35,7 @@ namespace std::chrono {
 * month_day_last[link /reference/chrono/month_day_last.md]
 * weekday_indexed[link /reference/chrono/weekday_indexed.md]
 * weekday_last[link /reference/chrono/weekday_last.md]
-* month_weekday_last[link /reference/chrono/month_weekday_last.md.nolink]
+* month_weekday_last[link /reference/chrono/month_weekday_last.md]
 
 ## 概要
 カレンダー要素同士をつなぎ合わせる。
@@ -120,9 +120,9 @@ int main()
 * chrono::month_weekday[link /reference/chrono/month_weekday.md]
 * mw1.month()[link /reference/chrono/month_weekday/month.md]
 * mw1.weekday_indexed()[link /reference/chrono/month_weekday/weekday_indexed.md]
-* chrono::month_weekday_last[link /reference/chrono/month_weekday_last.md.nolink]
-* mwl1.month()[link /reference/chrono/month_weekday_last/month.md.nolink]
-* mwl1.weekday_last()[link /reference/chrono/month_weekday_last/weekday_last.md.nolink]
+* chrono::month_weekday_last[link /reference/chrono/month_weekday_last.md]
+* mwl1.month()[link /reference/chrono/month_weekday_last/month.md]
+* mwl1.weekday_last()[link /reference/chrono/month_weekday_last/weekday_last.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>month_weekday -- chrono : month_weekday_lastクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_weekday.html"/>
      <id>a54d759e73346295a56d4ec2181d864cd64af53c:reference/chrono/month_weekday.md</id>
      <updated>2020-10-20T21:36:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_weekday.md b/reference/chrono/month_weekday.md
index ff888be2f..dea949c65 100644
--- a/reference/chrono/month_weekday.md
+++ b/reference/chrono/month_weekday.md
@@ -15,7 +15,7 @@ namespace std::chrono {
 
 年が規定されないために、このクラスでは月の指定したN回目の曜日が何日なのかは取得できない。年情報を付加して[`year_month_weekday`](year_month_weekday.md.nolink)クラスに変換し、そこからシステム時間もしくはローカル時間に変換するか、そこからさらに[`year_month_day`](year_month_day.md)クラスに変換することで日を取得できる。
 
-このクラスは等値比較および大小比較ができ、[EqualityComparable](/reference/concepts/equality_comparable.md)の要件を満たす。
+このクラスは等値比較ができ、[EqualityComparable](/reference/concepts/equality_comparable.md)の要件を満たす。
 
 このクラスは、[トリビアルコピー可能](/reference/type_traits/is_trivially_copyable.md)で、かつ[スタンダードレイアウト型](/reference/type_traits/is_standard_layout.md)である。
 
@@ -91,7 +91,7 @@ int main()
   chrono::month_weekday date4 = chrono::Sunday[1]/3;
 
   // 各カレンダー要素のコンストラクタはexplicitなので、
-  // 指定順は月、日で決まっているが、int値は指定できない
+  // 指定順は月、N回目の曜日で決まっているが、int値は指定できない
   chrono::month_weekday date5{chrono::March, chrono::Sunday[1]};
   chrono::month_weekday date6{chrono::month{3}, chrono::weekday_indexed{chrono::Sunday, 1}};
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>formatter -- chrono : month_weekday_lastクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_weekday/formatter.html"/>
      <id>a54d759e73346295a56d4ec2181d864cd64af53c:reference/chrono/month_weekday/formatter.md</id>
      <updated>2020-10-20T21:36:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_weekday/formatter.md b/reference/chrono/month_weekday/formatter.md
index 2ca46a4b8..059ad00d6 100644
--- a/reference/chrono/month_weekday/formatter.md
+++ b/reference/chrono/month_weekday/formatter.md
@@ -48,9 +48,8 @@ int main() {
 1 : Mar/Sun[1]
 2 : March, Sunday
 3 : 03, Sun
-4 : 03月01日
-5 : 3月, 日
-6 : 3月, 日曜日
+4 : 3月, 日
+5 : 3月, 日曜日
 ```
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>month -- chrono : month_weekday_lastクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_weekday/month.html"/>
      <id>a54d759e73346295a56d4ec2181d864cd64af53c:reference/chrono/month_weekday/month.md</id>
      <updated>2020-10-20T21:36:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_weekday/month.md b/reference/chrono/month_weekday/month.md
index e7107efdc..c5f7f3ec3 100644
--- a/reference/chrono/month_weekday/month.md
+++ b/reference/chrono/month_weekday/month.md
@@ -33,7 +33,7 @@ int main()
   assert(m == chrono::March);
 }
 ```
-* md.month()[color ff0000]
+* mwd.month()[color ff0000]
 * chrono::month[link /reference/chrono/month.md]
 * chrono::March[link /reference/chrono/month_constants.md]
 * chrono::Sunday[link /reference/chrono/weekday_constants.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator/ -- chrono : month_weekday_lastクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_weekday/op_append.html"/>
      <id>a54d759e73346295a56d4ec2181d864cd64af53c:reference/chrono/month_weekday/op_append.md</id>
      <updated>2020-10-20T21:36:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_weekday/op_append.md b/reference/chrono/month_weekday/op_append.md
index 58fae4969..35e32c424 100644
--- a/reference/chrono/month_weekday/op_append.md
+++ b/reference/chrono/month_weekday/op_append.md
@@ -13,7 +13,6 @@ namespace std::chrono {
     operator/(const month_weekday&amp;amp; mwd, int y) noexcept;         // (2) C++20
 }
 ```
-* month_weekday[link /reference/chrono/month_weekday.md]
 * year[link /reference/chrono/year.md]
 * year_month_weekday[link /reference/chrono/year_month_weekday.md.nolink]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>weekday_indexed -- chrono : month_weekday_lastクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_weekday/weekday_indexed.html"/>
      <id>a54d759e73346295a56d4ec2181d864cd64af53c:reference/chrono/month_weekday/weekday_indexed.md</id>
      <updated>2020-10-20T21:36:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_weekday/weekday_indexed.md b/reference/chrono/month_weekday/weekday_indexed.md
index ef42122ed..f715857c3 100644
--- a/reference/chrono/month_weekday/weekday_indexed.md
+++ b/reference/chrono/month_weekday/weekday_indexed.md
@@ -1,4 +1,4 @@
-# month
+# weekday_indexed
 * chrono[meta header]
 * std::chrono[meta namespace]
 * month_weekday[meta class]
@@ -33,8 +33,8 @@ int main()
   assert(wdi == chrono::Sunday[1]);
 }
 ```
-* md.month()[color ff0000]
-* chrono::month[link /reference/chrono/month.md]
+* mwd.weekday_indexed()[color ff0000]
+* chrono::weekday_indexed[link /reference/chrono/weekday_indexed.md]
 * chrono::March[link /reference/chrono/month_constants.md]
 * chrono::Sunday[link /reference/chrono/weekday_constants.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>month_weekday_last -- chrono : month_weekday_lastクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_weekday_last.html"/>
      <id>a54d759e73346295a56d4ec2181d864cd64af53c:reference/chrono/month_weekday_last.md</id>
      <updated>2020-10-20T21:36:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_weekday_last.md b/reference/chrono/month_weekday_last.md
new file mode 100644
index 000000000..1a3339a72
--- /dev/null
+++ b/reference/chrono/month_weekday_last.md
@@ -0,0 +1,137 @@
+# month_weekday_last
+* chrono[meta header]
+* std::chrono[meta namespace]
+* class[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  class month_weekday_last;
+}
+```
+
+## 概要
+`month_weekday_last`は、未規定の年の、月の指定した最終回目の曜日を表すカレンダー表現のためクラスである。
+
+年が規定されないために、このクラスでは月の指定した最終回目の曜日が何日なのかは取得できない。年情報を付加して[`year_month_weekday_last`](year_month_weekday_last.md.nolink)クラスに変換し、そこからシステム時間もしくはローカル時間に変換するか、そこからさらに[`year_month_day`](year_month_day.md)クラスに変換することで日を取得できる。
+
+このクラスは等値比較ができ、[EqualityComparable](/reference/concepts/equality_comparable.md)の要件を満たす。
+
+このクラスは、[トリビアルコピー可能](/reference/type_traits/is_trivially_copyable.md)で、かつ[スタンダードレイアウト型](/reference/type_traits/is_standard_layout.md)である。
+
+
+## メンバ関数
+### 構築／コピー／破棄
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`(constructor)`](month_weekday_last/op_constructor.md) | コンストラクタ | C++20 |
+| `month_weekday_last&amp;amp; operator=(const month_weekday_last&amp;amp;) = default;`&amp;lt;br/&amp;gt; `month_weekday_last&amp;amp; operator=(month_weekday_last&amp;amp;&amp;amp;) = default;` | 代入演算子 | C++20 |
+
+
+### 観測
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`month`](month_weekday_last/month.md) | 月要素を取得する | C++20 |
+| [`weekday_last`](month_weekday_last/weekday_last.md) | 最終曜日要素を取得する | C++20 |
+
+
+### 検証
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`ok`](month_weekday_last/ok.md) | 値が範囲に収まっているか判定する | C++20 |
+
+
+## 非メンバ関数
+### カレンダー構文演算子
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`operator/`](month_weekday_last/op_append.md) | カレンダー要素同士をつなぎ合わせる | C++20 |
+
+
+### 比較演算
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`operator==`](month_weekday_last/op_equal.md) | 等値比較を行う | C++20 |
+| `bool operator!=(const month_weekday_last&amp;amp;, const month_weekday_last&amp;amp;) noexcept;` | 非等値比較を行う (`==`により使用可能) | C++20 |
+
+
+### 入出力
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`operator&amp;lt;&amp;lt;`](month_weekday_last/op_ostream.md) | 出力ストリームに出力する | C++20 |
+
+
+## 文字列フォーマット
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`formatter`](month_weekday_last/formatter.md) | [`std::formatter`](/reference/format/formatter.md)クラスの特殊化 | C++20 |
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+using namespace std::chrono;
+
+int main()
+{
+  // すべて3月の最終回目の日曜日を表す
+  month_weekday_last date1 = March/Sunday[last];
+  month_weekday_last date2 = 3/Sunday[last];
+  month_weekday_last date3 = Sunday[last]/March;
+  month_weekday_last date4 = Sunday[last]/3;
+
+  // 各カレンダー要素のコンストラクタはexplicitなので、
+  // 指定順は月、最終曜日で決まっているが、int値は指定できない
+  month_weekday_last date5{March, Sunday[last]};
+  month_weekday_last date6{month{3}, weekday_last{Sunday}};
+
+  std::cout &amp;lt;&amp;lt; date1 &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; date2 &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; date3 &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; date4 &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; date5 &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; date6 &amp;lt;&amp;lt; std::endl;
+
+  // 2020年3月の最終回目の日曜日が何日かを取得する
+  year_month_weekday_last ymwdl = 2020y/March/Sunday[last];
+  year_month_day ymd{static_cast&amp;lt;sys_days&amp;gt;(ymwdl)};
+  std::cout &amp;lt;&amp;lt; ymd &amp;lt;&amp;lt; std::endl;
+}
+```
+* March[link month_constants.md]
+* Sunday[link weekday_constants.md]
+* last[link last_spec.md]
+* month[link month.md]
+* weekday_last[link weekday_last.md]
+* year_month_weekday_last[link year_month_weekday_last.md.nolink]
+* sys_days[link sys_time.md]
+* year_month_day[link year_month_day.md]
+
+### 出力
+```
+Mar/Sun[last]
+Mar/Sun[last]
+Mar/Sun[last]
+Mar/Sun[last]
+Mar/Sun[last]
+Mar/Sun[last]
+2020/03/29
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0 (出力ストリームなし)
+- [GCC](/implementation.md#gcc): 11.1 (出力ストリームなし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>formatter -- chrono : month_weekday_lastクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_weekday_last/formatter.html"/>
      <id>a54d759e73346295a56d4ec2181d864cd64af53c:reference/chrono/month_weekday_last/formatter.md</id>
      <updated>2020-10-20T21:36:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_weekday_last/formatter.md b/reference/chrono/month_weekday_last/formatter.md
new file mode 100644
index 000000000..2b13641a5
--- /dev/null
+++ b/reference/chrono/month_weekday_last/formatter.md
@@ -0,0 +1,67 @@
+# formatter
+* chrono[meta header]
+* std[meta namespace]
+* class[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std {
+  template &amp;lt;class charT&amp;gt;
+  struct formatter&amp;lt;chrono::month_weekday_last, charT&amp;gt;;
+}
+```
+
+## 概要
+`month_weekday_last`クラスに対する[`std::formatter`](/reference/format/formatter.md)クラステンプレートの特殊化。
+
+フォーマットフラグとしては、[`month`](/reference/chrono/month/formatter.md)と[`weekday_last`](/reference/chrono/weekday_last/formatter.md)で利用可能なフォーマットフラグを使用できる。
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+#include &amp;lt;format&amp;gt;
+
+namespace chrono = std::chrono;
+
+int main() {
+  chrono::month_weekday_last date = chrono::March/chrono::Sunday[chrono::last];
+
+  // デフォルトフォーマットはoperator&amp;lt;&amp;lt;と同じ
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;1 : {}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;2 : {:%B, %A}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;3 : {:%m, %a}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+
+  // ロケール依存の出力
+  std::cout &amp;lt;&amp;lt; std::format(std::locale(&amp;#34;ja_JP.UTF-8&amp;#34;), &amp;#34;4 : {:%b, %a}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(std::locale(&amp;#34;ja_JP.UTF-8&amp;#34;), &amp;#34;5 : {:%b, %A}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+}
+```
+* std::format[link /reference/chrono/format.md]
+* std::locale[link /reference/locale/locale.md]
+* chrono::March[link /reference/chrono/month_constants.md]
+* chrono::last[link /reference/chrono/last_spec.md]
+
+### 出力
+```
+1 : Mar/Sun[1]
+2 : March, Sunday
+3 : 03, Sun
+4 : 3月, 日
+4 : 3月, 日曜日
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): (9.0時点で実装なし)
+- [GCC](/implementation.md#gcc): (9.2時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 関連項目
+- [chronoの`std::format()`](/reference/chrono/format.md) (フォーマットの詳細)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>month -- chrono : month_weekday_lastクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_weekday_last/month.html"/>
      <id>a54d759e73346295a56d4ec2181d864cd64af53c:reference/chrono/month_weekday_last/month.md</id>
      <updated>2020-10-20T21:36:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_weekday_last/month.md b/reference/chrono/month_weekday_last/month.md
new file mode 100644
index 000000000..ce1aac6dc
--- /dev/null
+++ b/reference/chrono/month_weekday_last/month.md
@@ -0,0 +1,53 @@
+# month
+* chrono[meta header]
+* std::chrono[meta namespace]
+* month_weekday_last[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr chrono::month month() const noexcept; // (1) C++20
+```
+* chrono::month[link /reference/chrono/month.md]
+
+## 概要
+月要素を取得する。
+
+
+## 戻り値
+コンストラクタで設定されて保持している月オブジェクトを返す。
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+
+int main()
+{
+  chrono::month_weekday_last mwdl = chrono::March/chrono::Sunday[chrono::last];
+
+  chrono::month m = mwdl.month();
+  assert(m == chrono::March);
+}
+```
+* mwdl.month()[color ff0000]
+* chrono::month[link /reference/chrono/month.md]
+* chrono::March[link /reference/chrono/month_constants.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* chrono::last[link /reference/chrono/last_spec.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ok -- chrono : month_weekday_lastクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_weekday_last/ok.html"/>
      <id>a54d759e73346295a56d4ec2181d864cd64af53c:reference/chrono/month_weekday_last/ok.md</id>
      <updated>2020-10-20T21:36:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_weekday_last/ok.md b/reference/chrono/month_weekday_last/ok.md
new file mode 100644
index 000000000..3e592acf6
--- /dev/null
+++ b/reference/chrono/month_weekday_last/ok.md
@@ -0,0 +1,51 @@
+# ok
+* chrono[meta header]
+* std::chrono[meta namespace]
+* month_weekday_last[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr bool ok() const noexcept; // (1) C++20
+```
+
+## 概要
+`month_weekday_last`オブジェクトの値が有効な日付の範囲内かを判定する。
+
+
+## 戻り値
+以下の全ての条件を満たす場合にこの関数は`true`を返し、そうでなければ`false`を返す：
+
+- [`month()`](month.md)`.`[`ok()`](/reference/chrono/month/ok.md) `== true`であること
+- [`weekday_last()`](weekday_last.md)`.`[`ok()`](/reference/chrono/weekday_last/ok.md) `== true`であること
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+
+int main()
+{
+  assert((chrono::March/chrono::Sunday[chrono::last]).ok()  == true);
+}
+```
+* ok()[color ff0000]
+* chrono::March[link /reference/chrono/month_constants.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* chrono::last[link /reference/chrono/last_spec.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator/ -- chrono : month_weekday_lastクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_weekday_last/op_append.html"/>
      <id>a54d759e73346295a56d4ec2181d864cd64af53c:reference/chrono/month_weekday_last/op_append.md</id>
      <updated>2020-10-20T21:36:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_weekday_last/op_append.md b/reference/chrono/month_weekday_last/op_append.md
new file mode 100644
index 000000000..31422082c
--- /dev/null
+++ b/reference/chrono/month_weekday_last/op_append.md
@@ -0,0 +1,65 @@
+# operator/
+* chrono[meta header]
+* std::chrono[meta namespace]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  constexpr year_month_weekday_last
+    operator/(const month_weekday_last&amp;amp; mwdl, const year&amp;amp; y) noexcept; // (1) C++20
+
+  constexpr year_month_weekday_last
+    operator/(const month_weekday_last&amp;amp; mwdl, int y) noexcept;         // (2) C++20
+}
+```
+* year[link /reference/chrono/year.md]
+* year_month_weekday_last[link /reference/chrono/year_month_weekday_last.md.nolink]
+
+## 概要
+カレンダー要素同士をつなぎ合わせる。
+
+- (1) : `month_weekday_last`型と[`year`](/reference/chrono/year.md)型をつなぎ、年月の指定した最終回目の曜日の情報をもつ型にまとめる
+- (2) : `month_weekday_last`型と`int`型での年の値をつなぎ、年月の指定した最終回目の曜日の情報をもつ型にまとめる
+
+
+## 戻り値
+- (1) : `return y / mwdl;`
+- (2) : `return` [`year`](/reference/chrono/year.md)`{y} / mwdl;`
+
+
+## 例外
+投げない
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+using namespace std::chrono;
+
+int main()
+{
+  assert((March/Sunday[last])/2020y == (year_month_weekday_last{2020y, March, Sunday[last]}));
+  assert((March/Sunday[last])/2020 == (year_month_weekday_last{2020y, March, Sunday[last]}));
+}
+```
+* March[link /reference/chrono/month_constants.md]
+* Sunday[link /reference/chrono/weekday_constants.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* last[link /reference/chrono/last_spec.md]
+* chrono::year_month_weekday_last[link /reference/chrono/year_month_weekday_last.md.nolink]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- chrono : month_weekday_lastクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_weekday_last/op_constructor.html"/>
      <id>a54d759e73346295a56d4ec2181d864cd64af53c:reference/chrono/month_weekday_last/op_constructor.md</id>
      <updated>2020-10-20T21:36:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_weekday_last/op_constructor.md b/reference/chrono/month_weekday_last/op_constructor.md
new file mode 100644
index 000000000..56da899b8
--- /dev/null
+++ b/reference/chrono/month_weekday_last/op_constructor.md
@@ -0,0 +1,69 @@
+# コンストラクタ
+* chrono[meta header]
+* std::chrono[meta namespace]
+* month_weekday_last[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+month_weekday_last() = delete;                           // (1) C++20
+constexpr month_weekday_last(
+    const chrono::month&amp;amp; m,
+    const chrono::weekday_last&amp;amp; wdl) noexcept;           // (2) C++20
+
+month_weekday_last(const month_weekday_last&amp;amp;) = default; // (3) C++20
+month_weekday_last(month_weekday_last&amp;amp;&amp;amp;) = default;      // (4) C++20
+```
+* chrono::month[link /reference/chrono/month.md]
+* chrono::weekday_indexed[link /reference/chrono/weekday_indexed.md]
+
+## 概要
+- (1) : デフォルトコンストラクタ。定義されない
+- (2) : 月、最終曜日の値をそれぞれ指定して構築する
+- (3) : コピーコンストラクタ
+- (4) : ムーブコンストラクタ
+
+
+## 効果
+- (2) : `m`と`wdl`をメンバ変数として保持する
+
+
+## 例外
+投げない
+
+
+### 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  // 月、インデックス付き曜日のカレンダー要素を順に指定して構築
+  chrono::month_weekday_last mwdl1{chrono::March, chrono::Sunday[chrono::last]};
+  chrono::month_weekday_last mwdl2{chrono::month{3}, chrono::weekday_last{chrono::Sunday}};
+  assert(mwdl1 == chrono::March/chrono::Sunday[chrono::last]);
+  assert(mwdl2 == chrono::March/chrono::Sunday[chrono::last]);
+}
+```
+* chrono::March[link /reference/chrono/month_constants.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* chrono::last[link /reference/chrono/last_spec.md]
+* chrono::month[link /reference/chrono/month.md]
+* chrono::weekday_last[link /reference/chrono/weekday_last.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator== -- chrono : month_weekday_lastクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_weekday_last/op_equal.html"/>
      <id>a54d759e73346295a56d4ec2181d864cd64af53c:reference/chrono/month_weekday_last/op_equal.md</id>
      <updated>2020-10-20T21:36:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_weekday_last/op_equal.md b/reference/chrono/month_weekday_last/op_equal.md
new file mode 100644
index 000000000..83f783d41
--- /dev/null
+++ b/reference/chrono/month_weekday_last/op_equal.md
@@ -0,0 +1,64 @@
+# operator==
+* chrono[meta header]
+* std::chrono[meta namespace]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  constexpr bool operator==(const month_weekday_last&amp;amp; x, const month_weekday_last&amp;amp; y) noexcept; // (1) C++20
+}
+```
+
+## 概要
+`month_weekday_last`同士の等値比較を行う。
+
+
+## 戻り値
+- (1) :
+
+```cpp
+return x.month() == y.month() &amp;amp;&amp;amp; x.weekday_last() == y.weekday_last();
+```
+* month()[link month.md]
+* weekday_last()[link weekday_last.md]
+
+
+## 例外
+投げない
+
+
+## 備考
+- この演算子により、`operator!=`が使用可能になる
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+using namespace std::chrono;
+
+int main()
+{
+  assert(March/Sunday[last] == March/Sunday[last]);
+  assert(March/Sunday[last] != March/Monday[last]);
+}
+```
+* March[link /reference/chrono/month_constants.md]
+* Sunday[link /reference/chrono/weekday_constants.md]
+* Monday[link /reference/chrono/weekday_constants.md]
+* last[link /reference/chrono/last_spec.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;&lt; -- chrono : month_weekday_lastクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_weekday_last/op_ostream.html"/>
      <id>a54d759e73346295a56d4ec2181d864cd64af53c:reference/chrono/month_weekday_last/op_ostream.md</id>
      <updated>2020-10-20T21:36:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_weekday_last/op_ostream.md b/reference/chrono/month_weekday_last/op_ostream.md
new file mode 100644
index 000000000..1a9ade8e7
--- /dev/null
+++ b/reference/chrono/month_weekday_last/op_ostream.md
@@ -0,0 +1,63 @@
+# operator&amp;lt;&amp;lt;
+* chrono[meta header]
+* std::chrono[meta namespace]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  template &amp;lt;class charT, class traits&amp;gt;
+  std::basic_ostream&amp;lt;charT, traits&amp;gt;&amp;amp;
+    operator&amp;lt;&amp;lt;(std::basic_ostream&amp;lt;charT, traits&amp;gt;&amp;amp; os, const month_weekday_last&amp;amp; mwdl); // (1) C++20
+}
+```
+
+## 概要
+`month_weekday_last`オブジェクトを出力ストリームに出力する。
+
+
+## 戻り値
+便宜上のリテラルキャスト`STATICALLY-WIDEN`を導入する。`STATICALLY-WIDEN&amp;lt;charT&amp;gt;(&amp;#34;...&amp;#34;)`は、`charT`が`char`である場合は`&amp;#34;...&amp;#34;`、`charT`が`wchar_t`である場合は`L&amp;#34;...&amp;#34;`を意味する。
+
+- (1) : 以下と等価：
+    ```cpp
+    return os &amp;lt;&amp;lt; format(STATICALLY-WIDEN&amp;lt;charT&amp;gt;(&amp;#34;{}/{}&amp;#34;), mwdl.month(), mwdl.weeday_last());
+    ```
+    * format[link /reference/format/format.md]
+    * mwdl.month()[link month.md]
+    * mwdl.weekday_last()[link weekday_last.md]
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+
+int main()
+{
+  std::cout &amp;lt;&amp;lt; chrono::March/chrono::Sunday[chrono::last] &amp;lt;&amp;lt; std::endl;
+}
+```
+* chrono::March[link /reference/chrono/month_constants.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* chrono::last[link /reference/chrono/last_spec.md]
+
+### 出力
+```
+Mar/Sun[last]
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): (9.0時点で実装なし)
+- [GCC](/implementation.md#gcc): (10.1時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 関連項目
+- [chronoの`std::format()`](/reference/chrono/format.md) (フォーマットの詳細)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>weekday_last -- chrono : month_weekday_lastクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_weekday_last/weekday_last.html"/>
      <id>a54d759e73346295a56d4ec2181d864cd64af53c:reference/chrono/month_weekday_last/weekday_last.md</id>
      <updated>2020-10-20T21:36:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_weekday_last/weekday_last.md b/reference/chrono/month_weekday_last/weekday_last.md
new file mode 100644
index 000000000..6373eb154
--- /dev/null
+++ b/reference/chrono/month_weekday_last/weekday_last.md
@@ -0,0 +1,53 @@
+# weekday_last
+* chrono[meta header]
+* std::chrono[meta namespace]
+* month_weekday_last[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr chrono::weekday_last weekday_last() const noexcept; // (1) C++20
+```
+* chrono::weekday_last[link /reference/chrono/weekday_last.md]
+
+## 概要
+最終曜日要素を取得する。
+
+
+## 戻り値
+コンストラクタで設定されて保持している最終曜日オブジェクトを返す。
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+
+int main()
+{
+  chrono::month_weekday_last mwdl = chrono::March/chrono::Sunday[chrono::last];
+
+  chrono::weekday_last wdl = mwdl.weekday_last();
+  assert(wdl == chrono::Sunday[chrono::last]);
+}
+```
+* mwdl.weekday_last()[color ff0000]
+* chrono::weekday_last[link /reference/chrono/weekday_last.md]
+* chrono::March[link /reference/chrono/month_constants.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* chrono::last[link /reference/chrono/last_spec.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator/ -- chrono : month_weekday_lastクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year/op_append.html"/>
      <id>a54d759e73346295a56d4ec2181d864cd64af53c:reference/chrono/year/op_append.md</id>
      <updated>2020-10-20T21:36:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year/op_append.md b/reference/chrono/year/op_append.md
index 28d6592f3..4cea7f135 100644
--- a/reference/chrono/year/op_append.md
+++ b/reference/chrono/year/op_append.md
@@ -51,7 +51,7 @@ namespace std::chrono {
 * year_month_weekday[link /reference/chrono/year_month_weekday.md.nolink]
 * month_weekday[link /reference/chrono/month_weekday.md]
 * year_month_weekday_last[link /reference/chrono/year_month_weekday_last.md.nolink]
-* month_weekday_last[link /reference/chrono/month_weekday_last.md.nolink]
+* month_weekday_last[link /reference/chrono/month_weekday_last.md]
 
 ## 概要
 カレンダー要素同士をつなぎ合わせる。
@@ -64,8 +64,8 @@ namespace std::chrono {
 - (6) : `int`型の年と[`month_day_last`](/reference/chrono/month_day_last.md)型をつなぎ、年月の最終日の情報をもつ型にまとめる
 - (7) : `year`型と[`month_weekday`](/reference/chrono/month_weekday.md)型をつなぎ、年月のN回目の曜日の情報をもつ型にまとめる
 - (8) : `int`型の年と[`month_weekday`](/reference/chrono/month_weekday.md)型をつなぎ、年月のN回目の曜日の情報をもつ型にまとめる
-- (9) : `year`型と[`month_weekday_last`](/reference/chrono/month_weekday_last.md.nolink)型をつなぎ、年月の指定した最終曜日の情報をもつ型にまとめる
-- (10) : `int`型の年と[`month_weekday_last`](/reference/chrono/month_weekday_last.md.nolink)型をつなぎ、年月の指定した最終曜日の情報をもつ型にまとめる
+- (9) : `year`型と[`month_weekday_last`](/reference/chrono/month_weekday_last.md)型をつなぎ、年月の指定した最終曜日の情報をもつ型にまとめる
+- (10) : `int`型の年と[`month_weekday_last`](/reference/chrono/month_weekday_last.md)型をつなぎ、年月の指定した最終曜日の情報をもつ型にまとめる
 
 
 ## 戻り値
@@ -77,7 +77,7 @@ namespace std::chrono {
 - (6) : `return year(y) / mdl;`
 - (7) : `return` [`year_month_weekday`](/reference/year_month_weekday.md.nolink)`{y, mwd.`[`month()`](/reference/chrono/month_weekday/month.md)`, mwd.`[`weekday_indexed()`](/reference/chrono/month_weekday/weekday_indexed.md)`};`
 - (8) : `return year(y) / mwd;`
-- (9) : `return` [`year_month_weekday_last`](/reference/year_month_weekday_last.md.nolink)`{y, mwdl.`[`month()`](/reference/chrono/month_weekday_last/month.md.nolink)`, mwdl.`[`weekday_last()`](/reference/chrono/month_weekday_last/weekday_last.md.nolink)`};`
+- (9) : `return` [`year_month_weekday_last`](/reference/year_month_weekday_last.md.nolink)`{y, mwdl.`[`month()`](/reference/chrono/month_weekday_last/month.md)`, mwdl.`[`weekday_last()`](/reference/chrono/month_weekday_last/weekday_last.md)`};`
 - (10) : `return year(y) / mwdl;`
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>chrono -- chrono : month_weekdayクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono.html"/>
      <id>2f41c3ef6c804dfd5e7c4153d6d3c8829af2763e:reference/chrono.md</id>
      <updated>2020-10-20T18:47:41+09:00</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;chrono&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;chrono&lt;/span&gt;&lt;span class=&#34;cpp cpp11&#34; title=&#34;C++11で追加&#34;&gt;(C++11)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;chrono&amp;gt;&lt;/code&gt;ヘッダは、時間に関するユーティリティとして機能する関数・クラスを提供する。このヘッダに含まれる関数・クラスは、&lt;code&gt;std::chrono&lt;/code&gt;名前空間で定義される。&lt;/p&gt;
&lt;p&gt;このライブラリは、タイムアウト、操作間隔、スケジューリングといった短期間の操作を主な用途として想定している。そのためカレンダー機能としては遥かな過去・未来を扱えるようにはなっていない。&lt;/p&gt;
&lt;h2&gt;時間を表す型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration.html&#34;&gt;duration&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間の間隔(class template)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/time_point.html&#34;&gt;time_point&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間軸上の一点(class template)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/treat_as_floating_point.html&#34;&gt;treat_as_floating_point&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;duration&lt;/code&gt;内部表現の型が浮動小数点型かを判定するためのトレイト(class template)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_values.html&#34;&gt;duration_values&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;duration&lt;/code&gt;内部表現の特別な値を取得するためのトレイト(class template)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;時間の単位を表す型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;nanoseconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ナノ秒を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;microseconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;マイクロ秒を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;milliseconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ミリ秒を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;minutes&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;分を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;hours&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;days&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;weeks&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;週を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;years&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;months&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;時計型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/is_clock.html&#34;&gt;is_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;クロック型かを判定する (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/system_clock.html&#34;&gt;system_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;システム時間のクロック(class)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/steady_clock.html&#34;&gt;steady_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間が逆行しないクロック(class)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/high_resolution_clock.html&#34;&gt;high_resolution_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;高分解能クロック(class)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/utc_clock.html&#34;&gt;utc_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;UTC時間 (協定世界時) のクロック (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/tai_clock.html&#34;&gt;tai_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;TAI時間 (国際原子時) のクロック (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/gps_clock.html&#34;&gt;gps_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;GPS時間のクロック (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/file_clock.html&#34;&gt;file_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ファイル時間を作るために使用されるクロック (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;システム時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/sys_time.html&#34;&gt;sys_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;システム時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/sys_time.html&#34;&gt;sys_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でシステム時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/sys_time.html&#34;&gt;sys_days&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日単位でシステム時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;ローカル時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_time.html&#34;&gt;local_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間を表す擬似的なクロック (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_time.html&#34;&gt;local_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_time.html&#34;&gt;local_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でローカル時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_time.html&#34;&gt;local_days&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日単位でローカル時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;UTC時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/utc_time.html&#34;&gt;utc_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;UTC時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/utc_time.html&#34;&gt;utc_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でUTC時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;TAI時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/tai_time.html&#34;&gt;tai_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;TAI時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/tai_time.html&#34;&gt;tai_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でTAI時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;GPS時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/gps_time.html&#34;&gt;gps_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;GPS時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/gps_time.html&#34;&gt;gps_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でGPS時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;ファイル時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/file_time.html&#34;&gt;file_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ファイル時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;時計時間の変換&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/clock_time_conversion.html&#34;&gt;clock_time_conversion&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時計間の変換方法を組み合わせごとに定義するためのクラス (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/clock_cast.html&#34;&gt;clock_cast&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ほかの時計時間のtime_pointに変換する (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;うるう秒の情報&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/leap_second_info.html&#34;&gt;leap_second_info&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;うるう秒の情報を扱うクラス (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/get_leap_second_info.html&#34;&gt;get_leap_second_info&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した日時までに挿入されたうるう秒の回数を取得する (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;カレンダー型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/last_spec.html&#34;&gt;last_spec&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月の最終日、週の最終日など、文脈に応じた「最後」を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/day.html&#34;&gt;day&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;未規定の月の指定した日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month.html&#34;&gt;month&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月単体の値を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year.html&#34;&gt;year&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;カレンダーの年を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday.html&#34;&gt;weekday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;週の日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_indexed.html&#34;&gt;weekday_indexed&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;N回目の指定した曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_last.html&#34;&gt;weekday_last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;未規定の月の最後の指定した曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_day.html&#34;&gt;month_day&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月と日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_day_last.html&#34;&gt;month_day_last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した月の最終日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_weekday.html&#34;&gt;month_weekday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月の指定したN番目の曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_weekday_last.md.nolink&#34;&gt;month_weekday_last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月の最後の指定した曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year_month.md.nolink&#34;&gt;year_month&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年と月を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year_month_day.html&#34;&gt;year_month_day&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年、月、日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year_month_day_last.md.nolink&#34;&gt;year_month_day_last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年、月、月の最終日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year_month_weekday.md.nolink&#34;&gt;year_month_weekday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年、月、N回目の指定した曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year_month_weekday_last.md.nolink&#34;&gt;year_month_weekday_last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年、月、月の最後の指定した曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;1日内の時間情報&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/time_of_day.md.nolink&#34;&gt;time_of_day&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1日内の時間情報を取得するクラス (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/hh_mm_ss.md.nolink&#34;&gt;hh_mm_ss&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時、分、秒を表すクラス (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/is_am.md.nolink&#34;&gt;is_am&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間が午前かを判定する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/is_pm.md.nolink&#34;&gt;is_pm&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間が午後かを判定する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/make12.md.nolink&#34;&gt;make12&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[1h, 12h]&lt;/code&gt;の時間範囲に変換する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/make24.md.nolink&#34;&gt;make24&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間を午前&lt;code&gt;[0h, 11h]&lt;/code&gt;か午後&lt;code&gt;[12h, 23h]&lt;/code&gt;の範囲に変換する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;タイムゾーン&lt;/h2&gt;
&lt;h3&gt;タイムゾーンのデータベース&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/tzdb.html&#34;&gt;tzdb&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンのデータベース型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/get_tzdb.html&#34;&gt;get_tzdb&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンデータベースを取得する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/tzdb_list.html&#34;&gt;tzdb_list&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンデータベースのリスト (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/get_tzdb_list.html&#34;&gt;get_tzdb_list&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンデータベースのリストを取得する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/locate_zone.html&#34;&gt;locate_zone&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した名前のタイムゾーンを取得する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/current_zone.html&#34;&gt;current_zone&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;現在のタイムゾーンを取得する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;リモートタイムゾーンデータベースのサポート&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/reload_tzdb.html&#34;&gt;reload_tzdb&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;リモートタイムゾーンデータベースを再読み込みする (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/remote_version.html&#34;&gt;remote_version&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;リモートタイムゾーンデータベースの最新バージョン番号を取得する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;例外クラス&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/nonexistent_local_time.html&#34;&gt;nonexistent_local_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;存在しないローカル時間をシステム時間に変換しようとした (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/ambiguous_local_time.html&#34;&gt;ambiguous_local_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間があいまい (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;タイムゾーン&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/sys_info.html&#34;&gt;sys_info&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;システム時間用のタイムゾーン情報 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_info.html&#34;&gt;local_info&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間用のタイムゾーン情報 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/choose.html&#34;&gt;choose&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンを変換する際に、早い時間側と遅い時間側どちらに丸めるかの種類 (enum)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/time_zone.html&#34;&gt;time_zone&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンの変換を扱うクラス (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/zoned_traits.html&#34;&gt;zoned_traits&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーン取得のカスタマイズ用中間インタフェース (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/zoned_time.html&#34;&gt;zoned_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンを考慮した時間軸上の一点を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/zoned_time.html&#34;&gt;zoned_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でタイムゾーンを考慮した時間軸上の一点を表す型 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;うるう秒サポート&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/leap_second.html&#34;&gt;leap_second&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;うるう秒が挿入された日時を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;リンク&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/time_zone_link.html&#34;&gt;time_zone_link&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンの代替名を管理する型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;文字列フォーマット&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local-time-format-t.html&#34;&gt;local-time-format-t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間を文字列フォーマットするために必要な情報をまとめた説明用の型 (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_time_format.html&#34;&gt;local_time_format&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間の文字列フォーマット用オブジェクトを生成する (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/format.html&#34;&gt;format&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列フォーマット&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;文字列解析&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/parse.html&#34;&gt;parse&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日時文字列を解析する入力マニピュレータ (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;カレンダー定数&lt;/h2&gt;
&lt;h3&gt;最後&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/last_spec.html&#34;&gt;last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月の最終日、週の最終日など、文脈に応じた「最後」を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;曜日&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Sunday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Monday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Tuesday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;火曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Wednesday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;水曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Thursday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;木曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Friday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;金曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Saturday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;土曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;月&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;January&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;February&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;2月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;March&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;3月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;April&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;4月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;May&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;5月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;June&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;6月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;July&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;7月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;August&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;8月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;September&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;9月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;October&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;10月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;November&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;11月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;December&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;12月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2661.htm&#34; target=&#34;_blank&#34;&gt;N2661 A Foundation to Sleep On&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0216r0.html&#34; target=&#34;_blank&#34;&gt;P0216R0 C++ Standard Proposal — A Time-Zone Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0355r7.html&#34; target=&#34;_blank&#34;&gt;P0355R7 Extending &lt;code&gt;&amp;lt;chrono&amp;gt;&lt;/code&gt; to Calendars and Time Zones&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator/ -- chrono : month_weekdayクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month/op_append.html"/>
      <id>2f41c3ef6c804dfd5e7c4153d6d3c8829af2763e:reference/chrono/month/op_append.md</id>
      <updated>2020-10-20T18:47:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month/op_append.md b/reference/chrono/month/op_append.md
index 25c0a04d0..8e3f4a592 100644
--- a/reference/chrono/month/op_append.md
+++ b/reference/chrono/month/op_append.md
@@ -117,9 +117,9 @@ int main()
 * chrono::month_day_last[link /reference/chrono/month_day_last.md]
 * mdl1.month()[link /reference/chrono/month_day_last/month.md]
 * chrono::Sunday[link /reference/chrono/weekday_constants.md]
-* chrono::month_weekday[link /reference/chrono/month_weekday.md.nolink]
-* mw1.month()[link /reference/chrono/month_weekday/month.md.nolink]
-* mw1.weekday_indexed()[link /reference/chrono/month_weekday/weekday_indexed.md.nolink]
+* chrono::month_weekday[link /reference/chrono/month_weekday.md]
+* mw1.month()[link /reference/chrono/month_weekday/month.md]
+* mw1.weekday_indexed()[link /reference/chrono/month_weekday/weekday_indexed.md]
 * chrono::month_weekday_last[link /reference/chrono/month_weekday_last.md.nolink]
 * mwl1.month()[link /reference/chrono/month_weekday_last/month.md.nolink]
 * mwl1.weekday_last()[link /reference/chrono/month_weekday_last/weekday_last.md.nolink]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>month_weekday -- chrono : month_weekdayクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_weekday.html"/>
      <id>2f41c3ef6c804dfd5e7c4153d6d3c8829af2763e:reference/chrono/month_weekday.md</id>
      <updated>2020-10-20T18:47:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_weekday.md b/reference/chrono/month_weekday.md
new file mode 100644
index 000000000..ff888be2f
--- /dev/null
+++ b/reference/chrono/month_weekday.md
@@ -0,0 +1,137 @@
+# month_weekday
+* chrono[meta header]
+* std::chrono[meta namespace]
+* class[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  class month_weekday;
+}
+```
+
+## 概要
+`month_weekday`は、未規定の年の、月の指定したN回目の曜日を表すカレンダー表現のためクラスである。
+
+年が規定されないために、このクラスでは月の指定したN回目の曜日が何日なのかは取得できない。年情報を付加して[`year_month_weekday`](year_month_weekday.md.nolink)クラスに変換し、そこからシステム時間もしくはローカル時間に変換するか、そこからさらに[`year_month_day`](year_month_day.md)クラスに変換することで日を取得できる。
+
+このクラスは等値比較および大小比較ができ、[EqualityComparable](/reference/concepts/equality_comparable.md)の要件を満たす。
+
+このクラスは、[トリビアルコピー可能](/reference/type_traits/is_trivially_copyable.md)で、かつ[スタンダードレイアウト型](/reference/type_traits/is_standard_layout.md)である。
+
+
+## メンバ関数
+### 構築／コピー／破棄
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`(constructor)`](month_weekday/op_constructor.md) | コンストラクタ | C++20 |
+| `month_weekday&amp;amp; operator=(const month_weekday&amp;amp;) = default;`&amp;lt;br/&amp;gt; `month_weekday&amp;amp; operator=(month_weekday&amp;amp;&amp;amp;) = default;` | 代入演算子 | C++20 |
+
+
+### 観測
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`month`](month_weekday/month.md) | 月要素を取得する | C++20 |
+| [`weekday_indexed`](month_weekday/weekday_indexed.md) | インデックス付き曜日要素を取得する | C++20 |
+
+
+### 検証
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`ok`](month_weekday/ok.md) | 値が範囲に収まっているか判定する | C++20 |
+
+
+## 非メンバ関数
+### カレンダー構文演算子
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`operator/`](month_weekday/op_append.md) | カレンダー要素同士をつなぎ合わせる | C++20 |
+
+
+### 比較演算
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`operator==`](month_weekday/op_equal.md) | 等値比較を行う | C++20 |
+| `bool operator!=(const month_weekday&amp;amp;, const month_weekday&amp;amp;) noexcept;` | 非等値比較を行う (`==`により使用可能) | C++20 |
+
+
+### 入出力
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`operator&amp;lt;&amp;lt;`](month_weekday/op_ostream.md) | 出力ストリームに出力する | C++20 |
+
+
+## 文字列フォーマット
+
+| 名前 | 説明 | 対応バージョン |
+|------|------|----------------|
+| [`formatter`](month_weekday/formatter.md) | [`std::formatter`](/reference/format/formatter.md)クラスの特殊化 | C++20 |
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  // すべて3月の1回目の日曜日を表す
+  chrono::month_weekday date1 = chrono::March/chrono::Sunday[1];
+  chrono::month_weekday date2 = 3/chrono::Sunday[1];
+  chrono::month_weekday date3 = chrono::Sunday[1]/chrono::March;
+  chrono::month_weekday date4 = chrono::Sunday[1]/3;
+
+  // 各カレンダー要素のコンストラクタはexplicitなので、
+  // 指定順は月、日で決まっているが、int値は指定できない
+  chrono::month_weekday date5{chrono::March, chrono::Sunday[1]};
+  chrono::month_weekday date6{chrono::month{3}, chrono::weekday_indexed{chrono::Sunday, 1}};
+
+  std::cout &amp;lt;&amp;lt; date1 &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; date2 &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; date3 &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; date4 &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; date5 &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; date6 &amp;lt;&amp;lt; std::endl;
+
+  // 2020年3月の1回目の日曜日が何日かを取得する
+  chrono::year_month_weekday ymwd = 2020y/chrono::March/chrono::Sunday[1];
+  chrono::year_month_day ymd{static_cast&amp;lt;chrono::sys_days&amp;gt;(ymwd)};
+  std::cout &amp;lt;&amp;lt; ymd &amp;lt;&amp;lt; std::endl;
+}
+```
+* chrono::March[link month_constants.md]
+* chrono::Sunday[link weekday_constants.md]
+* chrono::month[link month.md]
+* chrono::weekday_indexed[link weekday_indexed.md]
+* chrono::year_month_weekday[link year_month_weekday.md.nolink]
+* chrono::sys_days[link sys_time.md]
+* chrono::year_month_day[link year_month_day.md]
+
+### 出力
+```
+Mar/Sun[1]
+Mar/Sun[1]
+Mar/Sun[1]
+Mar/Sun[1]
+Mar/Sun[1]
+Mar/Sun[1]
+2020/03/01
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0 (出力ストリームなし)
+- [GCC](/implementation.md#gcc): 11.1 (出力ストリームなし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>formatter -- chrono : month_weekdayクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_weekday/formatter.html"/>
      <id>2f41c3ef6c804dfd5e7c4153d6d3c8829af2763e:reference/chrono/month_weekday/formatter.md</id>
      <updated>2020-10-20T18:47:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_weekday/formatter.md b/reference/chrono/month_weekday/formatter.md
new file mode 100644
index 000000000..2ca46a4b8
--- /dev/null
+++ b/reference/chrono/month_weekday/formatter.md
@@ -0,0 +1,67 @@
+# formatter
+* chrono[meta header]
+* std[meta namespace]
+* class[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std {
+  template &amp;lt;class charT&amp;gt;
+  struct formatter&amp;lt;chrono::month_weekday, charT&amp;gt;;
+}
+```
+
+## 概要
+`month_weekday`クラスに対する[`std::formatter`](/reference/format/formatter.md)クラステンプレートの特殊化。
+
+フォーマットフラグとしては、[`month`](/reference/chrono/month/formatter.md)と[`weekday_indexed`](/reference/chrono/weekday_indexed/formatter.md)で利用可能なフォーマットフラグを使用できる。
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+#include &amp;lt;format&amp;gt;
+
+namespace chrono = std::chrono;
+
+int main() {
+  chrono::month_weekday date = chrono::March/chrono::Sunday[1];
+
+  // デフォルトフォーマットはoperator&amp;lt;&amp;lt;と同じ
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;1 : {}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;2 : {:%B, %A}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;3 : {:%m, %a}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+
+  // ロケール依存の出力
+  std::cout &amp;lt;&amp;lt; std::format(std::locale(&amp;#34;ja_JP.UTF-8&amp;#34;), &amp;#34;4 : {:%b, %a}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(std::locale(&amp;#34;ja_JP.UTF-8&amp;#34;), &amp;#34;5 : {:%b, %A}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+}
+```
+* std::format[link /reference/chrono/format.md]
+* std::locale[link /reference/locale/locale.md]
+* chrono::March[link /reference/chrono/month_constants.md]
+
+### 出力
+```
+1 : Mar/Sun[1]
+2 : March, Sunday
+3 : 03, Sun
+4 : 03月01日
+5 : 3月, 日
+6 : 3月, 日曜日
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): (9.0時点で実装なし)
+- [GCC](/implementation.md#gcc): (9.2時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 関連項目
+- [chronoの`std::format()`](/reference/chrono/format.md) (フォーマットの詳細)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>month -- chrono : month_weekdayクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_weekday/month.html"/>
      <id>2f41c3ef6c804dfd5e7c4153d6d3c8829af2763e:reference/chrono/month_weekday/month.md</id>
      <updated>2020-10-20T18:47:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_weekday/month.md b/reference/chrono/month_weekday/month.md
new file mode 100644
index 000000000..e7107efdc
--- /dev/null
+++ b/reference/chrono/month_weekday/month.md
@@ -0,0 +1,52 @@
+# month
+* chrono[meta header]
+* std::chrono[meta namespace]
+* month_weekday[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr chrono::month month() const noexcept; // (1) C++20
+```
+* chrono::month[link /reference/chrono/month.md]
+
+## 概要
+月要素を取得する。
+
+
+## 戻り値
+コンストラクタで設定されて保持している月オブジェクトを返す。
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+
+int main()
+{
+  chrono::month_weekday mwd = chrono::March/chrono::Sunday[1];
+
+  chrono::month m = mwd.month();
+  assert(m == chrono::March);
+}
+```
+* md.month()[color ff0000]
+* chrono::month[link /reference/chrono/month.md]
+* chrono::March[link /reference/chrono/month_constants.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ok -- chrono : month_weekdayクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_weekday/ok.html"/>
      <id>2f41c3ef6c804dfd5e7c4153d6d3c8829af2763e:reference/chrono/month_weekday/ok.md</id>
      <updated>2020-10-20T18:47:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_weekday/ok.md b/reference/chrono/month_weekday/ok.md
new file mode 100644
index 000000000..47c915908
--- /dev/null
+++ b/reference/chrono/month_weekday/ok.md
@@ -0,0 +1,51 @@
+# ok
+* chrono[meta header]
+* std::chrono[meta namespace]
+* month_weekday[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr bool ok() const noexcept; // (1) C++20
+```
+
+## 概要
+`month_weekday`オブジェクトの値が有効な日付の範囲内かを判定する。
+
+
+## 戻り値
+以下の全ての条件を満たす場合にこの関数は`true`を返し、そうでなければ`false`を返す：
+
+- [`month()`](month.md)`.`[`ok()`](/reference/chrono/month/ok.md) `== true`であること
+- [`weekday_indexed()`](weekday_indexed.md)`.`[`ok()`](/reference/chrono/weekday_indexed/ok.md) `== true`であること
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+
+int main()
+{
+  assert((chrono::March/chrono::Sunday[1]).ok()  == true);
+  assert((chrono::March/chrono::Sunday[0]).ok()  == false);
+}
+```
+* ok()[color ff0000]
+* chrono::March[link /reference/chrono/month_constants.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator/ -- chrono : month_weekdayクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_weekday/op_append.html"/>
      <id>2f41c3ef6c804dfd5e7c4153d6d3c8829af2763e:reference/chrono/month_weekday/op_append.md</id>
      <updated>2020-10-20T18:47:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_weekday/op_append.md b/reference/chrono/month_weekday/op_append.md
new file mode 100644
index 000000000..58fae4969
--- /dev/null
+++ b/reference/chrono/month_weekday/op_append.md
@@ -0,0 +1,65 @@
+# operator/
+* chrono[meta header]
+* std::chrono[meta namespace]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  constexpr year_month_weekday
+    operator/(const month_weekday&amp;amp; mwd, const year&amp;amp; y) noexcept; // (1) C++20
+
+  constexpr year_month_weekday
+    operator/(const month_weekday&amp;amp; mwd, int y) noexcept;         // (2) C++20
+}
+```
+* month_weekday[link /reference/chrono/month_weekday.md]
+* year[link /reference/chrono/year.md]
+* year_month_weekday[link /reference/chrono/year_month_weekday.md.nolink]
+
+## 概要
+カレンダー要素同士をつなぎ合わせる。
+
+- (1) : `month_weekday`型と[`year`](/reference/chrono/year.md)型をつなぎ、年月の指定したN回目の曜日の情報をもつ型にまとめる
+- (2) : `month_weekday`型と`int`型での年の値をつなぎ、年月の指定したN回目の曜日の情報をもつ型にまとめる
+
+
+## 戻り値
+- (1) : `return y / mwd;`
+- (2) : `return` [`year`](/reference/chrono/year.md)`{y} / mwd;`
+
+
+## 例外
+投げない
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+using namespace std::chrono;
+
+int main()
+{
+  assert((March/Sunday[1])/2020y == (year_month_weekday{2020y, March, Sunday[1]}));
+  assert((March/Sunday[1])/2020 == (year_month_weekday{2020y, March, Sunday[1]}));
+}
+```
+* March[link /reference/chrono/month_constants.md]
+* Sunday[link /reference/chrono/weekday_constants.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::year_month_weekday[link /reference/chrono/year_month_weekday.md.nolink]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- chrono : month_weekdayクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_weekday/op_constructor.html"/>
      <id>2f41c3ef6c804dfd5e7c4153d6d3c8829af2763e:reference/chrono/month_weekday/op_constructor.md</id>
      <updated>2020-10-20T18:47:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_weekday/op_constructor.md b/reference/chrono/month_weekday/op_constructor.md
new file mode 100644
index 000000000..0ac18a86d
--- /dev/null
+++ b/reference/chrono/month_weekday/op_constructor.md
@@ -0,0 +1,68 @@
+# コンストラクタ
+* chrono[meta header]
+* std::chrono[meta namespace]
+* month_weekday[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+month_weekday() = delete;                         // (1) C++20
+constexpr month_weekday(
+    const chrono::month&amp;amp; m,
+    const chrono::weekday_indexed&amp;amp; wdi) noexcept; // (2) C++20
+
+month_weekday(const month_weekday&amp;amp;) = default;    // (3) C++20
+month_weekday(month_weekday&amp;amp;&amp;amp;) = default;         // (4) C++20
+```
+* chrono::month[link /reference/chrono/month.md]
+* chrono::weekday_indexed[link /reference/chrono/weekday_indexed.md]
+
+## 概要
+- (1) : デフォルトコンストラクタ。定義されない
+- (2) : 月、インデックス付き曜日の値をそれぞれ指定して構築する
+- (3) : コピーコンストラクタ
+- (4) : ムーブコンストラクタ
+
+
+## 効果
+- (2) : `m`と`wdi`をメンバ変数として保持する
+
+
+## 例外
+投げない
+
+
+### 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  // 月、インデックス付き曜日のカレンダー要素を順に指定して構築
+  chrono::month_weekday mwd1{chrono::March, chrono::Sunday[1]};
+  chrono::month_weekday mwd2{chrono::month{3}, chrono::weekday_indexed{chrono::Sunday, 1}};
+  assert(mwd1 == chrono::March/chrono::Sunday[1]);
+  assert(mwd2 == chrono::March/chrono::Sunday[1]);
+}
+```
+* chrono::March[link /reference/chrono/month_constants.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* chrono::month[link /reference/chrono/month.md]
+* chrono::weekday_indexed[link /reference/chrono/weekday_indexed.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator== -- chrono : month_weekdayクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_weekday/op_equal.html"/>
      <id>2f41c3ef6c804dfd5e7c4153d6d3c8829af2763e:reference/chrono/month_weekday/op_equal.md</id>
      <updated>2020-10-20T18:47:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_weekday/op_equal.md b/reference/chrono/month_weekday/op_equal.md
new file mode 100644
index 000000000..64a115ae8
--- /dev/null
+++ b/reference/chrono/month_weekday/op_equal.md
@@ -0,0 +1,62 @@
+# operator==
+* chrono[meta header]
+* std::chrono[meta namespace]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  constexpr bool operator==(const month_weekday&amp;amp; x, const month_weekday&amp;amp; y) noexcept; // (1) C++20
+}
+```
+
+## 概要
+`month_weekday`同士の等値比較を行う。
+
+
+## 戻り値
+- (1) :
+
+```cpp
+return x.month() == y.month() &amp;amp;&amp;amp; x.weekday_indexed() == y.weekday_indexed();
+```
+* month()[link month.md]
+* weekday_indexed()[link weekday_indexed.md]
+
+
+## 例外
+投げない
+
+
+## 備考
+- この演算子により、`operator!=`が使用可能になる
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+using namespace std::chrono;
+
+int main()
+{
+  assert(March/Sunday[1] == March/Sunday[1]);
+  assert(March/Sunday[1] != March/Sunday[2]);
+}
+```
+* March[link /reference/chrono/month_constants.md]
+* Sunday[link /reference/chrono/weekday_constants.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;&lt; -- chrono : month_weekdayクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_weekday/op_ostream.html"/>
      <id>2f41c3ef6c804dfd5e7c4153d6d3c8829af2763e:reference/chrono/month_weekday/op_ostream.md</id>
      <updated>2020-10-20T18:47:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_weekday/op_ostream.md b/reference/chrono/month_weekday/op_ostream.md
new file mode 100644
index 000000000..4d276d1be
--- /dev/null
+++ b/reference/chrono/month_weekday/op_ostream.md
@@ -0,0 +1,62 @@
+# operator&amp;lt;&amp;lt;
+* chrono[meta header]
+* std::chrono[meta namespace]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  template &amp;lt;class charT, class traits&amp;gt;
+  std::basic_ostream&amp;lt;charT, traits&amp;gt;&amp;amp;
+    operator&amp;lt;&amp;lt;(std::basic_ostream&amp;lt;charT, traits&amp;gt;&amp;amp; os, const month_weekday&amp;amp; mwd); // (1) C++20
+}
+```
+
+## 概要
+`month_weekday`オブジェクトを出力ストリームに出力する。
+
+
+## 戻り値
+便宜上のリテラルキャスト`STATICALLY-WIDEN`を導入する。`STATICALLY-WIDEN&amp;lt;charT&amp;gt;(&amp;#34;...&amp;#34;)`は、`charT`が`char`である場合は`&amp;#34;...&amp;#34;`、`charT`が`wchar_t`である場合は`L&amp;#34;...&amp;#34;`を意味する。
+
+- (1) : 以下と等価：
+    ```cpp
+    return os &amp;lt;&amp;lt; format(STATICALLY-WIDEN&amp;lt;charT&amp;gt;(&amp;#34;{}/{}&amp;#34;), mwd.month(), mwd.weeday_indexed());
+    ```
+    * format[link /reference/format/format.md]
+    * mwd.month()[link month.md]
+    * mwd.weekday_indexed()[link weekday_indexed.md]
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+
+int main()
+{
+  std::cout &amp;lt;&amp;lt; chrono::March/chrono::Sunday[1] &amp;lt;&amp;lt; std::endl;
+}
+```
+* chrono::March[link /reference/chrono/month_constants.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+
+### 出力
+```
+Mar/Sun[1]
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): (9.0時点で実装なし)
+- [GCC](/implementation.md#gcc): (10.1時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 関連項目
+- [chronoの`std::format()`](/reference/chrono/format.md) (フォーマットの詳細)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>month -- chrono : month_weekdayクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_weekday/weekday_indexed.html"/>
      <id>2f41c3ef6c804dfd5e7c4153d6d3c8829af2763e:reference/chrono/month_weekday/weekday_indexed.md</id>
      <updated>2020-10-20T18:47:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_weekday/weekday_indexed.md b/reference/chrono/month_weekday/weekday_indexed.md
new file mode 100644
index 000000000..ef42122ed
--- /dev/null
+++ b/reference/chrono/month_weekday/weekday_indexed.md
@@ -0,0 +1,52 @@
+# month
+* chrono[meta header]
+* std::chrono[meta namespace]
+* month_weekday[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr chrono::weekday_indexed weekday_indexed() const noexcept; // (1) C++20
+```
+* chrono::weekday_indexed[link /reference/chrono/weekday_indexed.md]
+
+## 概要
+インデックス付き曜日要素を取得する。
+
+
+## 戻り値
+コンストラクタで設定されて保持しているインデックス付き曜日オブジェクトを返す。
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+
+int main()
+{
+  chrono::month_weekday mwd = chrono::March/chrono::Sunday[1];
+
+  chrono::weekday_indexed wdi = mwd.weekday_indexed();
+  assert(wdi == chrono::Sunday[1]);
+}
+```
+* md.month()[color ff0000]
+* chrono::month[link /reference/chrono/month.md]
+* chrono::March[link /reference/chrono/month_constants.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator/ -- chrono : month_weekdayクラスを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year/op_append.html"/>
      <id>2f41c3ef6c804dfd5e7c4153d6d3c8829af2763e:reference/chrono/year/op_append.md</id>
      <updated>2020-10-20T18:47:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year/op_append.md b/reference/chrono/year/op_append.md
index 0b96c44a6..28d6592f3 100644
--- a/reference/chrono/year/op_append.md
+++ b/reference/chrono/year/op_append.md
@@ -49,7 +49,7 @@ namespace std::chrono {
 * year_month_day_last[link /reference/chrono/year_month_day_last.md.nolink]
 * month_day_last[link /reference/chrono/month_day_last.md]
 * year_month_weekday[link /reference/chrono/year_month_weekday.md.nolink]
-* month_weekday[link /reference/chrono/month_weekday.md.nolink]
+* month_weekday[link /reference/chrono/month_weekday.md]
 * year_month_weekday_last[link /reference/chrono/year_month_weekday_last.md.nolink]
 * month_weekday_last[link /reference/chrono/month_weekday_last.md.nolink]
 
@@ -62,8 +62,8 @@ namespace std::chrono {
 - (4) : `int`型の年と[`month_day`](/reference/chrono/month_day.md)型をつなぎ、年月日の情報をもつ型にまとめる
 - (5) : `year`型と[`month_day_last`](/reference/chrono/month_day_last.md)型をつなぎ、年月の最終日の情報をもつ型にまとめる
 - (6) : `int`型の年と[`month_day_last`](/reference/chrono/month_day_last.md)型をつなぎ、年月の最終日の情報をもつ型にまとめる
-- (7) : `year`型と[`month_weekday`](/reference/chrono/month_weekday.md.nolink)型をつなぎ、年月のN回目の曜日の情報をもつ型にまとめる
-- (8) : `int`型の年と[`month_weekday`](/reference/chrono/month_weekday.md.nolink)型をつなぎ、年月のN回目の曜日の情報をもつ型にまとめる
+- (7) : `year`型と[`month_weekday`](/reference/chrono/month_weekday.md)型をつなぎ、年月のN回目の曜日の情報をもつ型にまとめる
+- (8) : `int`型の年と[`month_weekday`](/reference/chrono/month_weekday.md)型をつなぎ、年月のN回目の曜日の情報をもつ型にまとめる
 - (9) : `year`型と[`month_weekday_last`](/reference/chrono/month_weekday_last.md.nolink)型をつなぎ、年月の指定した最終曜日の情報をもつ型にまとめる
 - (10) : `int`型の年と[`month_weekday_last`](/reference/chrono/month_weekday_last.md.nolink)型をつなぎ、年月の指定した最終曜日の情報をもつ型にまとめる
 
@@ -75,9 +75,9 @@ namespace std::chrono {
 - (4) : `return year(y) / md;`
 - (5) : `return` [`year_month_day_last`](/reference/year_month_day_last.md.nolink)`{y, mdl};`
 - (6) : `return year(y) / mdl;`
-- (7) : `return` [`year_month_weekday`](/reference/year_month_weekday.md.nolink)`{y, mwd.`[`month()`](/reference/chrono/month_weekday/month.md.nolink)`, mwd.`[`weekday_indexed()`](/reference/chrono/month_weekday/weekday_indexed.md.nolink)`};`
+- (7) : `return` [`year_month_weekday`](/reference/year_month_weekday.md.nolink)`{y, mwd.`[`month()`](/reference/chrono/month_weekday/month.md)`, mwd.`[`weekday_indexed()`](/reference/chrono/month_weekday/weekday_indexed.md)`};`
 - (8) : `return year(y) / mwd;`
-- (9) : `return` [`year_month_weekday_last`](/reference/year_month_weekday_last.md.nolink)`{y, mwdl.`[`month()`](/reference/chrono/month_weekday_last/month.md.nolink)`, mwdl.`[`weekday_last()`](/reference/chrono/month_weekday/weekday_last.md.nolink)`};`
+- (9) : `return` [`year_month_weekday_last`](/reference/year_month_weekday_last.md.nolink)`{y, mwdl.`[`month()`](/reference/chrono/month_weekday_last/month.md.nolink)`, mwdl.`[`weekday_last()`](/reference/chrono/month_weekday_last/weekday_last.md.nolink)`};`
 - (10) : `return year(y) / mwdl;`
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
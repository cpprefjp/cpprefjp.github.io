<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2021-01-18T07:02:20.380474</updated>
  <id>f0679a9f-9f02-4f79-b297-8453e58c168a</id>

  
    <entry>
      <title>source_location -- source_location : GCCは11.1からサポート (11.0はない)</title>
      <link href="https://cpprefjp.github.io/reference/source_location.html"/>
      <id>ec24b4bb6f77e478a00fc2a7affd7c7367936be2:reference/source_location.md</id>
      <updated>2021-01-18T15:57:34+09:00</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;source_location&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;source_location&lt;/span&gt;&lt;span class=&#34;cpp cpp20&#34; title=&#34;C++20で追加&#34;&gt;(C++20)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;source_location&amp;gt;&lt;/code&gt;ヘッダは、ソースコード上の位置を表す型を提供する。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/source_location/source_location.html&#34;&gt;source_location&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ソースコード上の位置を表すクラス (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++20&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: 11.1&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: ??&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;関連項目&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/func.html&#34;&gt;事前定義識別子&lt;code&gt;__func__&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1208r6.pdf&#34; target=&#34;_blank&#34;&gt;P1208R6 Adopt source_location for C++20&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>source_location -- source_location : GCCは11.1からサポート (11.0はない)</title>
      <link href="https://cpprefjp.github.io/reference/source_location/source_location.html"/>
      <id>ec24b4bb6f77e478a00fc2a7affd7c7367936be2:reference/source_location/source_location.md</id>
      <updated>2021-01-18T15:57:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/source_location/source_location.md b/reference/source_location/source_location.md
index 9c80294b9..d47337d4d 100644
--- a/reference/source_location/source_location.md
+++ b/reference/source_location/source_location.md
@@ -89,8 +89,7 @@ C言語から引き継いだ定義済みマクロ`__LINE__`、`__FILE__`や[事
 
 ### 処理系
 - [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): 11.0
-- [ICC](/implementation.md#icc): ??
+- [GCC](/implementation.md#gcc): 11.1
 - [Visual C++](/implementation.md#visual_cpp): ??
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>source_location -- source_location : サンプルコードにコード修飾を追加</title>
      <link href="https://cpprefjp.github.io/reference/source_location/source_location.html"/>
      <id>8afd2b9aa046c1ab23671d2d6ccb9fbb53168882:reference/source_location/source_location.md</id>
      <updated>2021-01-18T15:44:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/source_location/source_location.md b/reference/source_location/source_location.md
index b8743b0c0..9c80294b9 100644
--- a/reference/source_location/source_location.md
+++ b/reference/source_location/source_location.md
@@ -61,6 +61,11 @@ int main()
   std::cout &amp;lt;&amp;lt; location.function_name() &amp;lt;&amp;lt; std::endl;
 }
 ```
+* current()[link source_location/current.md]
+* location.line()[link source_location/line.md]
+* location.column()[link source_location/column.md]
+* location.file_name()[link source_location/file_name.md]
+* location.function_name()[link source_location/function_name.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>iter_move -- iter_move : 色々修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/iter_move.html"/>
      <id>1a9971727ce6275ff79ec52b42dcbee95c93f876:reference/iterator/iter_move.md</id>
      <updated>2021-01-18T15:29:09+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/iter_move.md b/reference/iterator/iter_move.md
index e2ba72f9c..17e98f6b9 100644
--- a/reference/iterator/iter_move.md
+++ b/reference/iterator/iter_move.md
@@ -21,7 +21,7 @@ namespace std {
 
 `iter_move(i)`のように呼び出された時、以下のいずれかと等価
 
-1. 引数`i`の型がクラス型であるか列挙型であり、`std::ranges::iter_move`（本関数オブジェクト）の宣言を含まず下記の`iter_move`関数宣言を含むコンテキストで、`iter_move(i)`が呼び出し可能ならば`iter_move(i)`
+1. 引数`i`の型がクラス型であるか列挙型であり、`std::ranges::iter_move`（本CPO）の宣言を含まず下記の`iter_move`関数宣言を含むコンテキストで、`iter_move(i)`が呼び出し可能ならば`iter_move(i)`
    ```cpp
    void iter_move();
    ```
@@ -37,14 +37,12 @@ namespace std {
 
 ## 戻り値
 
-上記「効果」節のそれぞれのケース毎に
-
-1. 引数`i`の指す要素のへの（右辺値）参照、もしくは要素を移動した値
-2. 引数`i`の指す要素の右辺値参照
-3. 引数`i`の指す要素の右辺値参照
+引数`i`の指す要素の（右辺値）参照、もしくは`i`の指す要素を移動した値
 
 ## 例外
 
+上記「効果」節のそれぞれのケース毎に
+
 1. 呼び出される`iter_move()`が例外を投げるかに従う
 2. 引数`i`の`*`演算子が例外を投げるかに従う
 3. 引数`i`の`*`演算子が例外を投げるかに従う
@@ -111,10 +109,5 @@ int main() {
 - [GCC](/implementation.md#gcc): 10.1
 - [Visual C++](/implementation.md#visual_cpp): 2019 Update 4
 
-## 関連項目
-
-- [`views::counted`](/reference/ranges/counted.md.nolink)
-- [`take_view`](/reference/ranges/take_view.md.nolink)
-
 ## 参照
-- [P0896R4 The One Ranges Proposal (was Merging the Ranges TS)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0896r4.pdf)
\ No newline at end of file
+- [P0896R4 The One Ranges Proposal (was Merging the Ranges TS)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0896r4.pdf)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>indirectly_readable -- リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/indirectly_readable.html"/>
      <id>3bc7010cc4ba8d58c78281a8a21db1a84188249e:reference/iterator/indirectly_readable.md</id>
      <updated>2021-01-18T13:02:00+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/indirectly_readable.md b/reference/iterator/indirectly_readable.md
index 7cbb630f6..6c6b6b9c6 100644
--- a/reference/iterator/indirectly_readable.md
+++ b/reference/iterator/indirectly_readable.md
@@ -38,7 +38,7 @@ concept indirectly-readable-impl =
 * iter_value_t[link /reference/iterator/iter_value_t.md]
 * iter_reference_t[link /reference/iterator/iter_reference_t.md]
 * iter_rvalue_reference_t[link /reference/iterator/iter_rvalue_reference_t.md]
-* iter_move[link /reference/iterator/iter_move.md.nolink]
+* iter_move[link /reference/iterator/iter_move.md]
 * common_reference_with[link /reference/concepts/common_reference_with.md]
 
 `indirectly_readable`は以下のように定義される。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>iter_swap -- リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/common_iterator/iter_swap.html"/>
      <id>4220134e2af4b101204451c18eef4ff16e8828d1:reference/iterator/common_iterator/iter_swap.md</id>
      <updated>2021-01-18T12:59:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/common_iterator/iter_swap.md b/reference/iterator/common_iterator/iter_swap.md
index cdcfd15fc..95d47eb03 100644
--- a/reference/iterator/common_iterator/iter_swap.md
+++ b/reference/iterator/common_iterator/iter_swap.md
@@ -18,7 +18,6 @@ namespace std {
 ```
 * move_iterator[link /reference/iterator/move_iterator.md]
 * indirectly_swappable[link /reference/iterator/indirectly_swappable.md]
-* ranges::iter_move[link /reference/iterator/iter_move.md.nolink]
 
 ## 概要
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>iter_rvalue_reference_t -- リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/iter_rvalue_reference_t.html"/>
      <id>4220134e2af4b101204451c18eef4ff16e8828d1:reference/iterator/iter_rvalue_reference_t.md</id>
      <updated>2021-01-18T12:59:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/iter_rvalue_reference_t.md b/reference/iterator/iter_rvalue_reference_t.md
index 9821b1c64..1dc7aa653 100644
--- a/reference/iterator/iter_rvalue_reference_t.md
+++ b/reference/iterator/iter_rvalue_reference_t.md
@@ -15,7 +15,7 @@ namespace std {
 ```
 * dereferenceable[link /reference/iterator/dereferenceable.md]
 * can-reference[link /reference/iterator/dereferenceable.md]
-* iter_move[link /reference/iterator/iter_move.md.nolink]
+* iter_move[link /reference/iterator/iter_move.md]
 * declval[link /reference/utility/declval.md]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>iter_swap -- リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/move_iterator/iter_swap.html"/>
      <id>4220134e2af4b101204451c18eef4ff16e8828d1:reference/iterator/move_iterator/iter_swap.md</id>
      <updated>2021-01-18T12:59:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/move_iterator/iter_swap.md b/reference/iterator/move_iterator/iter_swap.md
index c3730335b..d45df262e 100644
--- a/reference/iterator/move_iterator/iter_swap.md
+++ b/reference/iterator/move_iterator/iter_swap.md
@@ -18,7 +18,6 @@ namespace std {
 ```
 * move_iterator[link /reference/iterator/move_iterator.md]
 * indirectly_swappable[link /reference/iterator/indirectly_swappable.md]
-* ranges::iter_move[link /reference/iterator/iter_move.md.nolink]
 
 ## 概要
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator[] -- リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/move_iterator/op_at.html"/>
      <id>4220134e2af4b101204451c18eef4ff16e8828d1:reference/iterator/move_iterator/op_at.md</id>
      <updated>2021-01-18T12:59:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/move_iterator/op_at.md b/reference/iterator/move_iterator/op_at.md
index b7ba4369a..b1a294d4b 100644
--- a/reference/iterator/move_iterator/op_at.md
+++ b/reference/iterator/move_iterator/op_at.md
@@ -21,7 +21,7 @@ constexpr reference operator[](difference_type n) const;   // C++20
 - C++17まで
     - `return std::`[`move`](/reference/utility/move.md)`(`[`base`](base.md)`()[n]);`
 - C++20
-    - `return ranges::`[`iter_move`](/reference/iterator/iter_move.md.nolink)`(`[`base`](base.md)`() + n);`
+    - `return ranges::`[`iter_move`](/reference/iterator/iter_move.md)`(`[`base`](base.md)`() + n);`
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator* -- リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/move_iterator/op_deref.html"/>
      <id>4220134e2af4b101204451c18eef4ff16e8828d1:reference/iterator/move_iterator/op_deref.md</id>
      <updated>2021-01-18T12:59:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/move_iterator/op_deref.md b/reference/iterator/move_iterator/op_deref.md
index dee2359da..2a2e242f0 100644
--- a/reference/iterator/move_iterator/op_deref.md
+++ b/reference/iterator/move_iterator/op_deref.md
@@ -19,7 +19,7 @@ constexpr reference operator*() const; // C++17
 - C++17まで
     - `std::move(*base())`
 - C++20
-    - `return ranges::`[`iter_move`](/reference/iterator/iter_move.md.nolink)`(`[`base`](base.md)`());`
+    - `return ranges::`[`iter_move`](/reference/iterator/iter_move.md)`(`[`base`](base.md)`());`
 
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>iter_move -- リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/reverse_iterator/iter_move.html"/>
      <id>4220134e2af4b101204451c18eef4ff16e8828d1:reference/iterator/reverse_iterator/iter_move.md</id>
      <updated>2021-01-18T12:59:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/reverse_iterator/iter_move.md b/reference/iterator/reverse_iterator/iter_move.md
index d9487d89e..fe97fe55c 100644
--- a/reference/iterator/reverse_iterator/iter_move.md
+++ b/reference/iterator/reverse_iterator/iter_move.md
@@ -30,7 +30,7 @@ auto tmp = i.base();
 return ranges::iter_move(--tmp);
 ```
 * base[link /reference/iterator/reverse_iterator/base.md]
-* ranges::iter_move[link /reference/iterator/iter_move.md.nolink]
+* ranges::iter_move[link /reference/iterator/iter_move.md]
 
 ## 例外
 
@@ -41,12 +41,12 @@ is_nothrow_copy_constructible_v&amp;lt;Iterator&amp;gt; &amp;amp;&amp;amp;
 noexcept(ranges::iter_move(--declval&amp;lt;Iterator&amp;amp;&amp;gt;()))
 ```
 * is_nothrow_copy_constructible_v[link /reference/type_traits/is_nothrow_copy_constructible.md]
-* ranges::iter_move[link /reference/iterator/iter_move.md.nolink]
+* ranges::iter_move[link /reference/iterator/iter_move.md]
 
 ## 備考
 
 この関数は`reverse_iterator`のクラス定義内で`friend`関数として定義される。そのため、メンバ関数としても非メンバ関数としても明示的に呼び出すことはできず、ADLによってのみ呼び出すことができる。  
-基本的には[`ranges::iter_move`](/reference/iterator/iter_move.md.nolink)カスタマイゼーションポイントオブジェクトを通して利用する。
+基本的には[`ranges::iter_move`](/reference/iterator/iter_move.md)カスタマイゼーションポイントオブジェクトを通して利用する。
 
 ## 例
 ```cpp example
@@ -71,7 +71,7 @@ int main() {
 }
 ```
 * iter_move[color ff0000]
-* ranges::iter_move[link /reference/iterator/iter_move.md.nolink]
+* ranges::iter_move[link /reference/iterator/iter_move.md]
 
 ### 出力
 ```
@@ -90,7 +90,7 @@ int main() {
 
 ## 関連項目
 
-- [`ranges::iter_move`](/reference/iterator/iter_move.md.nolink)
+- [`ranges::iter_move`](/reference/iterator/iter_move.md)
 
 ## 参照
 - [P0896R4 The One Ranges Proposal (was Merging the Ranges TS)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0896r4.pdf)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
</feed>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2020-11-17T14:36:14.771638</updated>
  <id>7d3ef1e6-e2a8-417a-a94c-2651ea4b4149</id>

  
    <entry>
      <title>base -- move_sentinel::base : 関数名修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/move_sentinel/base.html"/>
      <id>5973e1e9488851989692abc798b8f03f0d6fd253:reference/iterator/move_sentinel/base.md</id>
      <updated>2020-11-17T16:24:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/move_sentinel/base.md b/reference/iterator/move_sentinel/base.md
index 556966c51..9ae94ad38 100644
--- a/reference/iterator/move_sentinel/base.md
+++ b/reference/iterator/move_sentinel/base.md
@@ -1,4 +1,4 @@
-# operator=
+# base
 * iterator[meta header]
 * std[meta namespace]
 * move_sentinel[meta class]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- move_sentinel コンストラクタ : 見出し追加</title>
      <link href="https://cpprefjp.github.io/reference/iterator/move_sentinel/op_constructor.html"/>
      <id>e01af2571c04d046968f74359b718206c8eee22c:reference/iterator/move_sentinel/op_constructor.md</id>
      <updated>2020-11-17T16:12:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/move_sentinel/op_constructor.md b/reference/iterator/move_sentinel/op_constructor.md
index e62e7a04e..58f4ed3f8 100644
--- a/reference/iterator/move_sentinel/op_constructor.md
+++ b/reference/iterator/move_sentinel/op_constructor.md
@@ -32,6 +32,8 @@ constexpr move_sentinel(const move_sentinel&amp;lt;S2&amp;gt;&amp;amp; s);    // (3)
 
 - (1) : [`is_trivially_default_constructible_v`](/reference/type_traits/is_trivially_default_constructible.md)`&amp;lt;S&amp;gt; == true`の時。
 
+## 例
+
 ```cpp example
 #include &amp;lt;iterator&amp;gt;
 #include &amp;lt;vector&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator== -- リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/move_iterator/op_equal.html"/>
      <id>3a9c00531032c6d4634ffa1cf885718bf01319e2:reference/iterator/move_iterator/op_equal.md</id>
      <updated>2020-11-17T14:37:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/move_iterator/op_equal.md b/reference/iterator/move_iterator/op_equal.md
index 0a85d111a..a2d05ee62 100644
--- a/reference/iterator/move_iterator/op_equal.md
+++ b/reference/iterator/move_iterator/op_equal.md
@@ -41,7 +41,7 @@ namespace std {
 `x.base()`と`y.base()`はオーバーロードによって次のどちらか
 
 - [`move_iterator::base()`](base.md)
-- [`move_sentinel::base()`](/reference/iterator/move_sentinel/base.md.nolink)
+- [`move_sentinel::base()`](/reference/iterator/move_sentinel/base.md)
 
 ## 備考
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator- (非メンバ関数) -- リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/move_iterator/op_minus.html"/>
      <id>3a9c00531032c6d4634ffa1cf885718bf01319e2:reference/iterator/move_iterator/op_minus.md</id>
      <updated>2020-11-17T14:37:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/move_iterator/op_minus.md b/reference/iterator/move_iterator/op_minus.md
index 6eb90d7a0..23afb4c2c 100644
--- a/reference/iterator/move_iterator/op_minus.md
+++ b/reference/iterator/move_iterator/op_minus.md
@@ -41,7 +41,7 @@ namespace std {
 `x.base()`と`y.base()`はオーバーロードによって次のどちらか
 
 - [`move_iterator::base()`](base.md)
-- [`move_sentinel::base()`](/reference/iterator/move_sentinel/base.md.nolink)
+- [`move_sentinel::base()`](/reference/iterator/move_sentinel/base.md)
 
 ## 例
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>iter_move -- move_sentinel : メンバ追加 #712</title>
      <link href="https://cpprefjp.github.io/reference/iterator/move_iterator/iter_move.html"/>
      <id>5f46d9d7fdadecb7084927c62c052f967a00dc2f:reference/iterator/move_iterator/iter_move.md</id>
      <updated>2020-11-17T14:33:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/move_iterator/iter_move.md b/reference/iterator/move_iterator/iter_move.md
index dbe66da71..481ce5b99 100644
--- a/reference/iterator/move_iterator/iter_move.md
+++ b/reference/iterator/move_iterator/iter_move.md
@@ -74,7 +74,7 @@ int main() {
 ### 処理系
 - [Clang](/implementation.md#clang): ??
 - [GCC](/implementation.md#gcc): 10.1
-- [Visual C++](/implementation.md#visual_cpp): 2019 Update 6
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 7
 
 ## 関連項目
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>iter_swap -- move_sentinel : メンバ追加 #712</title>
      <link href="https://cpprefjp.github.io/reference/iterator/move_iterator/iter_swap.html"/>
      <id>5f46d9d7fdadecb7084927c62c052f967a00dc2f:reference/iterator/move_iterator/iter_swap.md</id>
      <updated>2020-11-17T14:33:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/move_iterator/iter_swap.md b/reference/iterator/move_iterator/iter_swap.md
index 7ddbc5324..c3730335b 100644
--- a/reference/iterator/move_iterator/iter_swap.md
+++ b/reference/iterator/move_iterator/iter_swap.md
@@ -95,7 +95,7 @@ int main() {
 ### 処理系
 - [Clang](/implementation.md#clang): ??
 - [GCC](/implementation.md#gcc): 10.1
-- [Visual C++](/implementation.md#visual_cpp): 2019 Update 6
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 7
 
 ## 関連項目
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>move_sentinel -- move_sentinel : メンバ追加 #712</title>
      <link href="https://cpprefjp.github.io/reference/iterator/move_sentinel.html"/>
      <id>5f46d9d7fdadecb7084927c62c052f967a00dc2f:reference/iterator/move_sentinel.md</id>
      <updated>2020-11-17T14:33:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/move_sentinel.md b/reference/iterator/move_sentinel.md
index 6cda3070f..23e8b6a0d 100644
--- a/reference/iterator/move_sentinel.md
+++ b/reference/iterator/move_sentinel.md
@@ -7,7 +7,11 @@
 ```cpp
 namespace std {
   template&amp;lt;semiregular S&amp;gt;
-  class move_sentinel;
+  class move_sentinel {
+
+  private:
+    S last; // 説明専用メンバ変数
+  };
 }
 ```
 * semiregular[link /reference/concepts/semiregular.md]
@@ -15,7 +19,7 @@ namespace std {
 ## 概要
 `move_sentinel`は、[`move_iterator`](/reference/iterator/move_iterator.md)と共に任意のイテレータと番兵のペアをラップして、要素をムーブする範囲を表すための番兵アダプタである。
 
-イテレータ型と番兵型が異なり番兵型がイテレータとしての要件を満たさない場合、`move_iterator`の終端を構成する事が出来ない。その場合にこのクラスを利用する事で、`move_iterator`の終端を構成する事が出来るようになる。
+イテレータ型と番兵型が異なり、番兵型がイテレータとしての要件を満たさない場合終端を指す`move_iterator`を構成する事が出来ない。その場合にこのクラスを利用する事で、`move_iterator`の終端を構成する事が出来るようになる。
 
 任意の入力イテレータ型`I`とその番兵型`S`が[`sentinel_for`](/reference/iterator/sentinel_for.md)`&amp;lt;S, I&amp;gt;`のモデルである時、`move_iterator&amp;lt;I&amp;gt;`と`move_sentinel&amp;lt;S&amp;gt;`もまた`sentinel_for&amp;lt;move_sentinel&amp;lt;S&amp;gt;, move_iterator&amp;lt;I&amp;gt;&amp;gt;`のモデルとなる。
 
@@ -23,9 +27,9 @@ namespace std {
 
 | 名前 | 説明 | 対応バージョン |
 |------------------------------------------------------|-------------|-------|
-| [`(constructor)`](move_sentinel/op_constructor.md.nolink) | コンストラクタ | C++20 |
-| [`operator=`](move_sentinel/op_assign.md.nolink)          | 代入演算子 | C++20 |
-| [`base`](move_sentinel/base.md.nolink)                    | 元の番兵を取得する | C++20 |
+| [`(constructor)`](move_sentinel/op_constructor.md) | コンストラクタ | C++20 |
+| [`operator=`](move_sentinel/op_assign.md)          | 代入演算子 | C++20 |
+| [`base`](move_sentinel/base.md)                    | 元の番兵を取得する | C++20 |
 
 ### `move_iterator`との間の操作
 
@@ -35,7 +39,6 @@ namespace std {
 | [`operator!=`](move_iterator/op_equal.md)     | 非等値比較（`==`により使用可能） | C++20 |
 | [`operator-`](move_iterator/op_minus.md)          | `move_iterator`との距離を求める | C++20 |
 
-
 ## 例
 
 (執筆中)
@@ -65,7 +68,7 @@ int main()
 ### 処理系
 - [Clang](/implementation.md#clang): ??
 - [GCC](/implementation.md#gcc): 10.1
-- [Visual C++](/implementation.md#visual_cpp): 2019 Update 6
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 7
 
 ## 関連項目
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator= -- move_sentinel : メンバ追加 #712</title>
      <link href="https://cpprefjp.github.io/reference/iterator/move_sentinel/base.html"/>
      <id>5f46d9d7fdadecb7084927c62c052f967a00dc2f:reference/iterator/move_sentinel/base.md</id>
      <updated>2020-11-17T14:33:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/move_sentinel/base.md b/reference/iterator/move_sentinel/base.md
new file mode 100644
index 000000000..556966c51
--- /dev/null
+++ b/reference/iterator/move_sentinel/base.md
@@ -0,0 +1,30 @@
+# operator=
+* iterator[meta header]
+* std[meta namespace]
+* move_sentinel[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr S base() const;
+```
+
+## 概要
+
+メンバ変数として保持している、元の番兵を取得する。
+
+## 戻り値
+
+元の番兵オブジェクトのコピー。
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): 10.1
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 7
+
+## 参照
+- [P0896R4 The One Ranges Proposal (was Merging the Ranges TS)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0896r4.pdf)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator= -- move_sentinel : メンバ追加 #712</title>
      <link href="https://cpprefjp.github.io/reference/iterator/move_sentinel/op_assign.html"/>
      <id>5f46d9d7fdadecb7084927c62c052f967a00dc2f:reference/iterator/move_sentinel/op_assign.md</id>
      <updated>2020-11-17T14:33:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/move_sentinel/op_assign.md b/reference/iterator/move_sentinel/op_assign.md
new file mode 100644
index 000000000..da9978c30
--- /dev/null
+++ b/reference/iterator/move_sentinel/op_assign.md
@@ -0,0 +1,38 @@
+# operator=
+* iterator[meta header]
+* std[meta namespace]
+* move_sentinel[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+template&amp;lt;class S2&amp;gt;
+  requires assignable_from&amp;lt;S&amp;amp;, const S2&amp;amp;&amp;gt;
+constexpr move_sentinel&amp;amp; operator=(const move_sentinel&amp;lt;S2&amp;gt;&amp;amp; s);
+```
+* assignable_from[link /reference/concepts/assignable_from.md]
+
+## 概要
+
+`move_sentinel`オブジェクトをコピー代入する。
+
+## 効果
+
+`S`の番兵オブジェクトを`last`というメンバ変数に保持しているとすると、以下と等価
+
+```cpp
+last = s.last;
+return *this;
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): 10.1
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 7
+
+## 参照
+- [P0896R4 The One Ranges Proposal (was Merging the Ranges TS)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0896r4.pdf)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- move_sentinel : メンバ追加 #712</title>
      <link href="https://cpprefjp.github.io/reference/iterator/move_sentinel/op_constructor.html"/>
      <id>5f46d9d7fdadecb7084927c62c052f967a00dc2f:reference/iterator/move_sentinel/op_constructor.md</id>
      <updated>2020-11-17T14:33:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/move_sentinel/op_constructor.md b/reference/iterator/move_sentinel/op_constructor.md
new file mode 100644
index 000000000..e62e7a04e
--- /dev/null
+++ b/reference/iterator/move_sentinel/op_constructor.md
@@ -0,0 +1,69 @@
+# コンストラクタ
+* iterator[meta header]
+* std[meta namespace]
+* move_sentinel[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr move_sentinel();                              // (1)
+
+constexpr explicit move_sentinel(S s);                  // (2)
+
+template&amp;lt;class S2&amp;gt;
+  requires convertible_to&amp;lt;const S2&amp;amp;, S&amp;gt;
+constexpr move_sentinel(const move_sentinel&amp;lt;S2&amp;gt;&amp;amp; s);    // (3)
+```
+* convertible_to[link /reference/concepts/convertible_to.md]
+
+## 概要
+
+`move_sentinel`オブジェクトを構築する。
+
+## 効果
+
+`S`の番兵オブジェクトを`last`というメンバ変数に保持しているとする。
+
+- (1) : `last`を値初期化する（`last{}`相当の初期化）。
+- (2) : `last`を`std::move(s)`によって初期化する。
+- (3) : `last`を`s.last`によって初期化する。
+
+## 定数式に評価される条件
+
+- (1) : [`is_trivially_default_constructible_v`](/reference/type_traits/is_trivially_default_constructible.md)`&amp;lt;S&amp;gt; == true`の時。
+
+```cpp example
+#include &amp;lt;iterator&amp;gt;
+#include &amp;lt;vector&amp;gt;
+
+int main() {
+  std::vector&amp;lt;int&amp;gt; vec = {1, 2, 3};
+  auto se = std::end(vec);
+
+  // (1) デフォルト構築
+  std::move_sentinel&amp;lt;std::vector&amp;lt;int&amp;gt;::iterator&amp;gt; ms1{};
+
+  // (2) 番兵を渡して構築
+  std::move_sentinel ms2{se};
+
+  // (3) コピー構築
+  std::move_sentinel&amp;lt;std::vector&amp;lt;int&amp;gt;::iterator&amp;gt; ms3{ms2};
+}
+```
+* std::move_sentinel[color ff0000]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): 10.1
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 7
+
+## 参照
+- [P0896R4 The One Ranges Proposal (was Merging the Ranges TS)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0896r4.pdf)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase (非メンバ関数) -- Merge pull request #817 from wx257osn2/free-erase-returns-removed-items-num</title>
      <link href="https://cpprefjp.github.io/reference/deque/deque/erase_free.html"/>
      <id>4b87e757fc83a576dcc4a1d772adf22c39297e7c:reference/deque/deque/erase_free.md</id>
      <updated>2020-11-16T17:10:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/deque/deque/erase_free.md b/reference/deque/deque/erase_free.md
index 7b9d7667d..5fc19f91c 100644
--- a/reference/deque/deque/erase_free.md
+++ b/reference/deque/deque/erase_free.md
@@ -7,7 +7,7 @@
 ```cpp
 namespace std {
   template &amp;lt;class T, class Allocator, class U&amp;gt;
-  void erase(deque&amp;lt;T, Allocator&amp;gt;&amp;amp; c, const U&amp;amp; value);
+  typename deque&amp;lt;T, Allocator&amp;gt;::size_type erase(deque&amp;lt;T, Allocator&amp;gt;&amp;amp; c, const U&amp;amp; value);
 }
 ```
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase_if -- Merge pull request #817 from wx257osn2/free-erase-returns-removed-items-num</title>
      <link href="https://cpprefjp.github.io/reference/deque/deque/erase_if_free.html"/>
      <id>4b87e757fc83a576dcc4a1d772adf22c39297e7c:reference/deque/deque/erase_if_free.md</id>
      <updated>2020-11-16T17:10:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/deque/deque/erase_if_free.md b/reference/deque/deque/erase_if_free.md
index 9ec37a902..851938f37 100644
--- a/reference/deque/deque/erase_if_free.md
+++ b/reference/deque/deque/erase_if_free.md
@@ -7,7 +7,7 @@
 ```cpp
 namespace std {
   template &amp;lt;class T, class Allocator, class Predicate&amp;gt;
-  void erase_if(deque&amp;lt;T, Allocator&amp;gt;&amp;amp; c, Predicate pred);
+  typename deque&amp;lt;T, Allocator&amp;gt;::size_type erase_if(deque&amp;lt;T, Allocator&amp;gt;&amp;amp; c, Predicate pred);
 }
 ```
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase (非メンバ関数) -- Merge pull request #817 from wx257osn2/free-erase-returns-removed-items-num</title>
      <link href="https://cpprefjp.github.io/reference/forward_list/forward_list/erase_free.html"/>
      <id>4b87e757fc83a576dcc4a1d772adf22c39297e7c:reference/forward_list/forward_list/erase_free.md</id>
      <updated>2020-11-16T17:10:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/forward_list/forward_list/erase_free.md b/reference/forward_list/forward_list/erase_free.md
index a5f9a288e..c903d3469 100644
--- a/reference/forward_list/forward_list/erase_free.md
+++ b/reference/forward_list/forward_list/erase_free.md
@@ -7,7 +7,7 @@
 ```cpp
 namespace std {
   template &amp;lt;class T, class Allocator, class U&amp;gt;
-  void erase(forward_list&amp;lt;T, Allocator&amp;gt;&amp;amp; c, const U&amp;amp; value);
+  typename forward_list&amp;lt;T, Allocator&amp;gt;::size_type erase(forward_list&amp;lt;T, Allocator&amp;gt;&amp;amp; c, const U&amp;amp; value);
 }
 ```
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase_if -- Merge pull request #817 from wx257osn2/free-erase-returns-removed-items-num</title>
      <link href="https://cpprefjp.github.io/reference/forward_list/forward_list/erase_if_free.html"/>
      <id>4b87e757fc83a576dcc4a1d772adf22c39297e7c:reference/forward_list/forward_list/erase_if_free.md</id>
      <updated>2020-11-16T17:10:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/forward_list/forward_list/erase_if_free.md b/reference/forward_list/forward_list/erase_if_free.md
index 1a25fd487..8b35bbded 100644
--- a/reference/forward_list/forward_list/erase_if_free.md
+++ b/reference/forward_list/forward_list/erase_if_free.md
@@ -7,7 +7,7 @@
 ```cpp
 namespace std {
   template &amp;lt;class T, class Allocator, class Predicate&amp;gt;
-  void erase_if(list&amp;lt;T, Allocator&amp;gt;&amp;amp; c, Predicate pred);
+  typename forward_list&amp;lt;T, Allocator&amp;gt;::size_type erase_if(forward_list&amp;lt;T, Allocator&amp;gt;&amp;amp; c, Predicate pred);
 }
 ```
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase (非メンバ関数) -- Merge pull request #817 from wx257osn2/free-erase-returns-removed-items-num</title>
      <link href="https://cpprefjp.github.io/reference/list/list/erase_free.html"/>
      <id>4b87e757fc83a576dcc4a1d772adf22c39297e7c:reference/list/list/erase_free.md</id>
      <updated>2020-11-16T17:10:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/list/list/erase_free.md b/reference/list/list/erase_free.md
index 7b7243f57..b3e0c369f 100644
--- a/reference/list/list/erase_free.md
+++ b/reference/list/list/erase_free.md
@@ -7,7 +7,7 @@
 ```cpp
 namespace std {
   template &amp;lt;class T, class Allocator, class U&amp;gt;
-  void erase(list&amp;lt;T, Allocator&amp;gt;&amp;amp; c, const U&amp;amp; value);
+  typename list&amp;lt;T, Allocator&amp;gt;::size_type erase(list&amp;lt;T, Allocator&amp;gt;&amp;amp; c, const U&amp;amp; value);
 }
 ```
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase_if -- Merge pull request #817 from wx257osn2/free-erase-returns-removed-items-num</title>
      <link href="https://cpprefjp.github.io/reference/list/list/erase_if_free.html"/>
      <id>4b87e757fc83a576dcc4a1d772adf22c39297e7c:reference/list/list/erase_if_free.md</id>
      <updated>2020-11-16T17:10:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/list/list/erase_if_free.md b/reference/list/list/erase_if_free.md
index 863915e01..4fd17ffc0 100644
--- a/reference/list/list/erase_if_free.md
+++ b/reference/list/list/erase_if_free.md
@@ -7,7 +7,7 @@
 ```cpp
 namespace std {
   template &amp;lt;class T, class Allocator, class Predicate&amp;gt;
-  void erase_if(list&amp;lt;T, Allocator&amp;gt;&amp;amp; c, Predicate pred);
+  typename list&amp;lt;T, Allocator&amp;gt;::size_type erase_if(list&amp;lt;T, Allocator&amp;gt;&amp;amp; c, Predicate pred);
 }
 ```
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase (非メンバ関数) -- Merge pull request #817 from wx257osn2/free-erase-returns-removed-items-num</title>
      <link href="https://cpprefjp.github.io/reference/string/basic_string/erase_free.html"/>
      <id>4b87e757fc83a576dcc4a1d772adf22c39297e7c:reference/string/basic_string/erase_free.md</id>
      <updated>2020-11-16T17:10:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string/basic_string/erase_free.md b/reference/string/basic_string/erase_free.md
index 4b9d7315e..fcd30a8ea 100644
--- a/reference/string/basic_string/erase_free.md
+++ b/reference/string/basic_string/erase_free.md
@@ -7,7 +7,8 @@
 ```cpp
 namespace std {
   template &amp;lt;class CharT, class Traits, class Allocator, class U&amp;gt;
-  void erase(basic_string&amp;lt;CharT, Traits, Allocator&amp;gt;&amp;amp; c, const U&amp;amp; value);
+  typename basic_string&amp;lt;CharT, Traits, Allocator&amp;gt;::size_type
+    erase(basic_string&amp;lt;CharT, Traits, Allocator&amp;gt;&amp;amp; c, const U&amp;amp; value);
 }
 ```
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase_if -- Merge pull request #817 from wx257osn2/free-erase-returns-removed-items-num</title>
      <link href="https://cpprefjp.github.io/reference/string/basic_string/erase_if_free.html"/>
      <id>4b87e757fc83a576dcc4a1d772adf22c39297e7c:reference/string/basic_string/erase_if_free.md</id>
      <updated>2020-11-16T17:10:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string/basic_string/erase_if_free.md b/reference/string/basic_string/erase_if_free.md
index 922a6b3bc..2c77e8212 100644
--- a/reference/string/basic_string/erase_if_free.md
+++ b/reference/string/basic_string/erase_if_free.md
@@ -7,7 +7,8 @@
 ```cpp
 namespace std {
   template &amp;lt;class CharT, class Traits, class Allocator, class Predicate&amp;gt;
-  void erase_if(basic_string&amp;lt;CharT, Traits, Allocator&amp;gt;&amp;amp; c, Predicate pred);
+  typename basic_string&amp;lt;CharT, Traits, Allocator&amp;gt;::size_type
+    erase_if(basic_string&amp;lt;CharT, Traits, Allocator&amp;gt;&amp;amp; c, Predicate pred);
 }
 ```
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase (非メンバ関数) -- Merge pull request #817 from wx257osn2/free-erase-returns-removed-items-num</title>
      <link href="https://cpprefjp.github.io/reference/vector/vector/erase_free.html"/>
      <id>4b87e757fc83a576dcc4a1d772adf22c39297e7c:reference/vector/vector/erase_free.md</id>
      <updated>2020-11-16T17:10:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/vector/vector/erase_free.md b/reference/vector/vector/erase_free.md
index bba3313d7..13ba7aeb7 100644
--- a/reference/vector/vector/erase_free.md
+++ b/reference/vector/vector/erase_free.md
@@ -7,7 +7,7 @@
 ```cpp
 namespace std {
   template &amp;lt;class T, class Allocator, class U&amp;gt;
-  void erase(vector&amp;lt;T, Allocator&amp;gt;&amp;amp; c, const U&amp;amp; value);
+  typename vector&amp;lt;T, Allocator&amp;gt;::size_type erase(vector&amp;lt;T, Allocator&amp;gt;&amp;amp; c, const U&amp;amp; value);
 }
 ```
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase_if -- Merge pull request #817 from wx257osn2/free-erase-returns-removed-items-num</title>
      <link href="https://cpprefjp.github.io/reference/vector/vector/erase_if_free.html"/>
      <id>4b87e757fc83a576dcc4a1d772adf22c39297e7c:reference/vector/vector/erase_if_free.md</id>
      <updated>2020-11-16T17:10:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/vector/vector/erase_if_free.md b/reference/vector/vector/erase_if_free.md
index 76991aa04..fb3283c72 100644
--- a/reference/vector/vector/erase_if_free.md
+++ b/reference/vector/vector/erase_if_free.md
@@ -7,7 +7,7 @@
 ```cpp
 namespace std {
   template &amp;lt;class T, class Allocator, class Predicate&amp;gt;
-  void erase_if(vector&amp;lt;T, Allocator&amp;gt;&amp;amp; c, Predicate pred);
+  typename vector&amp;lt;T, Allocator&amp;gt;::size_type erase_if(vector&amp;lt;T, Allocator&amp;gt;&amp;amp; c, Predicate pred);
 }
 ```
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
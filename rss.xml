<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2022-07-23T06:05:45.434765</updated>
  <id>a1025058-370d-48a2-9d47-2e0bbd363f0a</id>

  
    <entry>
      <title>begin -- modify std::basic_string::begin. now specify C++ versions</title>
      <link href="https://cpprefjp.github.io/reference/string/basic_string/begin.html"/>
      <id>1d6628e33a442ab8ae10cf111bfcae2cff2139b8:reference/string/basic_string/begin.md</id>
      <updated>2022-07-23T14:58:55+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string/basic_string/begin.md b/reference/string/basic_string/begin.md
index b1b2bb874..f9ee9f8f7 100644
--- a/reference/string/basic_string/begin.md
+++ b/reference/string/basic_string/begin.md
@@ -5,8 +5,11 @@
 * function[meta id-type]
 
 ```cpp
-iterator begin() noexcept;
-const_iterator begin() const noexcept;
+iterator begin();                      // (1) C++03
+iterator begin() noexcept;             // (1) C++11
+
+const_iterator begin() const;          // (2) C++03
+const_iterator begin() const noexcept; // (2) C++11
 ```
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>substr -- add section about exception to std::string_view::substr.md</title>
      <link href="https://cpprefjp.github.io/reference/string_view/basic_string_view/substr.html"/>
      <id>1eace299bfc7e1a5b1672aabb19d2a23fe89c7a3:reference/string_view/basic_string_view/substr.md</id>
      <updated>2022-07-23T14:49:43+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string_view/basic_string_view/substr.md b/reference/string_view/basic_string_view/substr.md
index e6111a965..9f7941186 100644
--- a/reference/string_view/basic_string_view/substr.md
+++ b/reference/string_view/basic_string_view/substr.md
@@ -20,6 +20,10 @@ constexpr basic_string_view substr(size_type pos = 0, size_type n = npos) const;
 [`size()`](size.md) `- pos`と`n`うち、小さい方を`rlen`とし、`basic_string_view(`[`data()`](data.md) `+ pos, rlen)`を返す。
 
 
+## 例外
+`pos &amp;gt;` [`size()`](size.md)の場合、[`std::out_of_range`](/reference/stdexcept.md)例外を送出する。
+
+
 ## 例
 ```cpp example
 #include &amp;lt;iostream&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>max_exponent10 -- Update max_exponent10.md</title>
      <link href="https://cpprefjp.github.io/reference/limits/numeric_limits/max_exponent10.html"/>
      <id>8ece85df6624669b6d77095c59dd44d9d454e81e:reference/limits/numeric_limits/max_exponent10.md</id>
      <updated>2022-07-23T09:49:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/limits/numeric_limits/max_exponent10.md b/reference/limits/numeric_limits/max_exponent10.md
index dd44f0cc0..f0cb82875 100644
--- a/reference/limits/numeric_limits/max_exponent10.md
+++ b/reference/limits/numeric_limits/max_exponent10.md
@@ -13,7 +13,7 @@ static constexpr int max_exponent10;
 ```
 
 ## 概要
-浮動小数点数型において、型`T`の指数下限値を得る。  
+浮動小数点数型において、型`T`の指数上限値を得る。  
 基数10を`max_exponent`の値で累乗した値が、型`T`で表現可能な正規化された値となる最大の正の値。  
 浮動小数点数型以外は0になる。  
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>pea-sys</name>
        <email>49807271+pea-sys@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>max_exponent -- Update max_exponent.md</title>
      <link href="https://cpprefjp.github.io/reference/limits/numeric_limits/max_exponent.html"/>
      <id>7c0f28d6eef5eef42c5a8d911177405676e0dc00:reference/limits/numeric_limits/max_exponent.md</id>
      <updated>2022-07-23T09:48:51+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/limits/numeric_limits/max_exponent.md b/reference/limits/numeric_limits/max_exponent.md
index 938d4f69f..9a0e69216 100644
--- a/reference/limits/numeric_limits/max_exponent.md
+++ b/reference/limits/numeric_limits/max_exponent.md
@@ -13,7 +13,7 @@ static constexpr int max_exponent;
 ```
 
 ## 概要
-浮動小数点数型において、型`T`の指数下限値を得る。  
+浮動小数点数型において、型`T`の指数上限値を得る。  
 基数[`radix`](radix.md)を`max_exponent`の値で累乗した値が、型`T`で表現可能な正規化された値となる最大の正の値。  
 浮動小数点数型以外は0になる。  
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>pea-sys</name>
        <email>49807271+pea-sys@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>algorithm -- push_heapとranges_push_heapの概要を平易な表現に修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm.html"/>
      <id>69c3e9a777aba98d2b50381de69e761d8c5f856f:reference/algorithm.md</id>
      <updated>2022-07-21T21:29:11+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm.md b/reference/algorithm.md
index cbd0376a7..041e10d61 100644
--- a/reference/algorithm.md
+++ b/reference/algorithm.md
@@ -346,13 +346,13 @@ ranges::sort(pv, {}, &amp;amp;Parson::name);
 
 | 名前 | 説明 | 対応バージョン |
 |-------------------------------------------------|-----------------------------------|-------|
-| [`push_heap`](algorithm/push_heap.md)         | ヒープ化された範囲に要素を追加したヒープ範囲を得る | |
+| [`push_heap`](algorithm/push_heap.md)         | ヒープ化された範囲に要素を追加する | |
 | [`pop_heap`](algorithm/pop_heap.md)           | ヒープ化された範囲の先頭と末尾を入れ替え、ヒープ範囲を作り直す | |
 | [`make_heap`](algorithm/make_heap.md)         | 範囲をヒープ化する | |
 | [`sort_heap`](algorithm/sort_heap.md)         | ヒープ化された範囲を並べ替える | |
 | [`is_heap_until`](algorithm/is_heap_until.md) | 範囲がヒープ化されているか判定し、ヒープ化されていない最初の要素を指すイテレータを取得する | C++11 |
 | [`is_heap`](algorithm/is_heap.md)             | 範囲がヒープ化されているか判定する | C++11 |
-| [`ranges::push_heap`](algorithm/ranges_push_heap.md)         | ヒープ化された範囲に要素を追加したヒープ範囲を得る                                         | C++20 |
+| [`ranges::push_heap`](algorithm/ranges_push_heap.md)         | ヒープ化された範囲に要素を追加する                                         | C++20 |
 | [`ranges::pop_heap`](algorithm/ranges_pop_heap.md)           | ヒープ化された範囲の先頭と末尾を入れ替え、ヒープ範囲を作り直す                             | C++20 |
 | [`ranges::make_heap`](algorithm/ranges_make_heap.md)         | 範囲をヒープ化する                                                                         | C++20 |
 | [`ranges::sort_heap`](algorithm/ranges_sort_heap.md)         | ヒープ化された範囲を並べ替える                                                             | C++20 |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>pea-sys</name>
        <email>pea98258@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>push_heap -- push_heapとranges_push_heapの概要を平易な表現に修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/push_heap.html"/>
      <id>69c3e9a777aba98d2b50381de69e761d8c5f856f:reference/algorithm/push_heap.md</id>
      <updated>2022-07-21T21:29:11+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/push_heap.md b/reference/algorithm/push_heap.md
index f389f145b..9395576cb 100644
--- a/reference/algorithm/push_heap.md
+++ b/reference/algorithm/push_heap.md
@@ -26,7 +26,7 @@ namespace std {
 ```
 
 ## 概要
-ヒープ化された範囲に要素を追加したヒープ範囲を得る
+ヒープ化された範囲に要素を追加する
 
 
 ## 要件
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>pea-sys</name>
        <email>pea98258@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>push_heap -- push_heapとranges_push_heapの概要を平易な表現に修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_push_heap.html"/>
      <id>69c3e9a777aba98d2b50381de69e761d8c5f856f:reference/algorithm/ranges_push_heap.md</id>
      <updated>2022-07-21T21:29:11+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_push_heap.md b/reference/algorithm/ranges_push_heap.md
index 7fa825485..a3b83cbcb 100644
--- a/reference/algorithm/ranges_push_heap.md
+++ b/reference/algorithm/ranges_push_heap.md
@@ -27,7 +27,7 @@ namespace std::ranges {
 * borrowed_iterator_t[link /reference/ranges/borrowed_iterator_t.md]
 
 ## 概要
-ヒープ化された範囲に要素を追加したヒープ範囲を得る
+ヒープ化された範囲に要素を追加する
 
 * (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>pea-sys</name>
        <email>pea98258@gmail.com</email>
      </author>
    </entry>
  
</feed>
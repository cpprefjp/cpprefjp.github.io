<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2021-09-09T14:36:51.937978</updated>
  <id>811e8825-b989-424b-990d-c920cbdd31e7</id>

  
    <entry>
      <title>is_constant_evaluated -- is_constant_evaluated: 言語機能ページへのリンク付与</title>
      <link href="https://cpprefjp.github.io/reference/type_traits/is_constant_evaluated.html"/>
      <id>95bc8e0a22c3d3c69e188b21c59bd58b3ed0ff7d:reference/type_traits/is_constant_evaluated.md</id>
      <updated>2021-09-09T16:42:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/type_traits/is_constant_evaluated.md b/reference/type_traits/is_constant_evaluated.md
index a8c246564..1cd386e9a 100644
--- a/reference/type_traits/is_constant_evaluated.md
+++ b/reference/type_traits/is_constant_evaluated.md
@@ -20,9 +20,9 @@ namespace std {
 本関数は以下の文脈内で評価された場合に`true`を返す。
 
 - 文法上の定数式（配列型の要素数、`case`ラベルの値、など）
-- `constexpr if`の条件式
+- [`constexpr if`](/lang/cpp17/if_constexpr.md)の条件式
 - [`consteval`関数](/lang/cpp20/immediate_functions.md)の呼び出し内
-- コンセプトの定義式
+- [コンセプト](/lang/cpp20/concepts.md)の定義式
     - `requires`節内
     - 入れ子要件内
 - 定数式で使用可能な変数の初期化式
@@ -31,10 +31,9 @@ namespace std {
     - 定数初期化される参照型変数の初期化式
 - 定数初期化される変数の初期化式
 
-上記の文脈の外では、コンパイラの最適化（定数畳み込み）によって容易にコンパイル時評価できる
-式や`constexpr`関数の呼び出し中の評価であっても`false`となる。
+上記の文脈の外では、コンパイラの最適化（定数畳み込み）によって容易にコンパイル時評価できる式や`constexpr`関数の呼び出し中の評価であっても`false`となる。
 
-`constexpr if`の条件式および`static_assert`の条件式に書かれている場合は必ず`true`となるので注意が必要である。
+[`constexpr if`](/lang/cpp17/if_constexpr.md)の条件式および[`static_assert`](/lang/cpp11/static_assert.md)の条件式に書かれている場合は必ず`true`となるので注意が必要である。
 
 
 ## 備考
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>format -- consteval/即時関数に当該言語機能へのリンク付与</title>
      <link href="https://cpprefjp.github.io/reference/format/format.html"/>
      <id>8fd39c7d3a324e27967350123188860d4edc0a37:reference/format/format.md</id>
      <updated>2021-09-09T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/format/format.md b/reference/format/format.md
index 99f7fd060..87071c218 100644
--- a/reference/format/format.md
+++ b/reference/format/format.md
@@ -198,6 +198,7 @@ namespace std {
   template&amp;lt;class... Args&amp;gt; using wformat_string
     = basic_format_string&amp;lt;wchar_t, type_identity_t&amp;lt;Args&amp;gt;...&amp;gt;; // exposition only
 ```
+* consteval[link /lang/cpp20/immediate_functions.md]
 
 _`basic_format_string`_ のコンストラクタは[即時関数](/lang/cpp20/immediate_functions.md)であり、書式文字列が正しい場合にのみ定数式として評価できるように実装される。即時関数であるため、定数式として評価できない場合はエラーとなる。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>source_location -- consteval/即時関数に当該言語機能へのリンク付与</title>
      <link href="https://cpprefjp.github.io/reference/source_location/source_location.html"/>
      <id>8fd39c7d3a324e27967350123188860d4edc0a37:reference/source_location/source_location.md</id>
      <updated>2021-09-09T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/source_location/source_location.md b/reference/source_location/source_location.md
index d47337d4d..abccdb775 100644
--- a/reference/source_location/source_location.md
+++ b/reference/source_location/source_location.md
@@ -23,6 +23,7 @@ namespace std {
   };
 }
 ```
+* consteval[link /lang/cpp20/immediate_functions.md]
 * uint_least32_t[link /reference/cstdint/uint_least32_t.md]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>current -- consteval/即時関数に当該言語機能へのリンク付与</title>
      <link href="https://cpprefjp.github.io/reference/source_location/source_location/current.html"/>
      <id>8fd39c7d3a324e27967350123188860d4edc0a37:reference/source_location/source_location/current.md</id>
      <updated>2021-09-09T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/source_location/source_location/current.md b/reference/source_location/source_location/current.md
index 919d9f4f1..cd61cd057 100644
--- a/reference/source_location/source_location/current.md
+++ b/reference/source_location/source_location/current.md
@@ -8,6 +8,7 @@
 ```cpp
 static consteval source_location current() noexcept;
 ```
+* consteval[link /lang/cpp20/immediate_functions.md]
 * source_location[link ../source_location.md]
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_constant_evaluated -- consteval/即時関数に当該言語機能へのリンク付与</title>
      <link href="https://cpprefjp.github.io/reference/type_traits/is_constant_evaluated.html"/>
      <id>8fd39c7d3a324e27967350123188860d4edc0a37:reference/type_traits/is_constant_evaluated.md</id>
      <updated>2021-09-09T16:33:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/type_traits/is_constant_evaluated.md b/reference/type_traits/is_constant_evaluated.md
index 42c671631..a8c246564 100644
--- a/reference/type_traits/is_constant_evaluated.md
+++ b/reference/type_traits/is_constant_evaluated.md
@@ -21,7 +21,7 @@ namespace std {
 
 - 文法上の定数式（配列型の要素数、`case`ラベルの値、など）
 - `constexpr if`の条件式
-- `consteval`関数の呼び出し内
+- [`consteval`関数](/lang/cpp20/immediate_functions.md)の呼び出し内
 - コンセプトの定義式
     - `requires`節内
     - 入れ子要件内
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>view_interface -- &lt;ranges&gt; 説明を追加 #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges/view_interface.html"/>
      <id>109ea61e830f32bf1253067101bb7ece3c84b8ba:reference/ranges/view_interface.md</id>
      <updated>2021-09-09T04:55:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/view_interface.md b/reference/ranges/view_interface.md
index f9f46f59e..74deb62e8 100644
--- a/reference/ranges/view_interface.md
+++ b/reference/ranges/view_interface.md
@@ -20,6 +20,10 @@ namespace std::ranges {
 
 `view_interface`は、[`view`](view.md)を実装する際に便利なクラステンプレートである。使用するときは、派生クラスを`view_interface`のテンプレート引数にする(CRTP)。
 
+## テンプレートパラメータ制約
+
+`D`は`view_interface&amp;lt;D&amp;gt;`の派生クラスであること。
+
 ## メンバ関数
 
 これらのメンバ関数は、`std::ranges`以下のカスタマイゼーションポイントオブジェクトを使って実装されており、テンプレート引数`D`として渡された範囲型に対して該当する呼び出しが可能な場合のみオーバーロード解決に参加する。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>iota_view -- &lt;ranges&gt; iota_viewの説明を修正 #713</title>
      <link href="https://cpprefjp.github.io/reference/ranges/iota_view.html"/>
      <id>488b384904fbece195057a7464ee4cbb8361131c:reference/ranges/iota_view.md</id>
      <updated>2021-09-09T04:42:38+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/iota_view.md b/reference/ranges/iota_view.md
index 648ec7d82..b141915c8 100644
--- a/reference/ranges/iota_view.md
+++ b/reference/ranges/iota_view.md
@@ -34,19 +34,20 @@ namespace std {
 
 `iota_view`のオブジェクトは(2)のカスタマイゼーションポイントオブジェクト`views::iota`で生成できる。
 
-### 範囲カテゴリ
-
-有限長のとき:
-
-| borrowed | sized | output | input | forward | bidirectional | random_access | contiguous | common | viewable | view |
-|----------|-------|--------|-------|---------|---------------|---------------|------------|--------|----------|------|
-| ○       | ○    |        | ○    | ○      | ○            | ○            |            | ○     | ○       | ○   |
+`iota_view`の要素は、`iota_view`が作られる時に初めの要素が生成され、残りはアクセスするときに生成される。
 
-無限長のとき:
+### 範囲カテゴリ
 
 | borrowed | sized | output | input | forward | bidirectional | random_access | contiguous | common | viewable | view |
 |----------|-------|--------|-------|---------|---------------|---------------|------------|--------|----------|------|
-| ○       |       |        | ○    | ○      | ○            | ○            |            |        | ○       | ○   |
+| ○       | (1)   |        | ○    | (2)     | (2)           | (2)           |            | (3)    | ○       | ○   |
+
+- (1): [`common_range`](common_range.md)かつ[`random_access_range`](random_access_range.md)のとき
+- (2):
+    - `W`が[`incrementable`](/reference/iterator/incrementable.md)のとき、[`forward_range`](forward_range.md)
+    - `W`が[`incrementable`](/reference/iterator/incrementable.md)かつデクリメント操作が可能であるとき、[`bidirectional_range`](bidirectional_range.md)
+    - `W`が[`incrementable`](/reference/iterator/incrementable.md)かつデクリメント操作と加減算が可能であるとき、[`random_access_range`](random_access_range.md)
+- (3): `W`と`Bound`が等しいとき
 
 ## テンプレートパラメータ制約
 - [`weakly_incrementable`](/reference/type_traits/is_object.md)`&amp;lt;W&amp;gt;`
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ref_view -- 不可視文字を削除</title>
      <link href="https://cpprefjp.github.io/reference/ranges/ref_view.html"/>
      <id>31873f9afb2760b1ac5be9f6b9a9a0a1088b37c9:reference/ranges/ref_view.md</id>
      <updated>2021-09-09T04:27:03+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/ref_view.md b/reference/ranges/ref_view.md
index 90d23c222..42fb6c013 100644
--- a/reference/ranges/ref_view.md
+++ b/reference/ranges/ref_view.md
@@ -50,9 +50,9 @@ namespace std {
 
 ## 効果
 
-- (2): 式`views​::​all(E)`の効果は次の通り
+- (2): 式`views::all(E)`の効果は次の通り
     - `E`の[`decay`](/reference/type_traits/decay.md)した型が[`view`](view.md)のモデルであれば、[`decay-copy`](/reference/exposition-only/decay-copy.md)`(E)`と等しい
-    - それ以外のとき、`ref_­view{E}`が有効な式であれば、`ref_­view{E}`と等しい
+    - それ以外のとき、`ref_view{E}`が有効な式であれば、`ref_view{E}`と等しい
     - それ以外のとき、[`subrange`](subrange.md)`{E}`と等しい
 
 ## メンバ関数
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
</feed>
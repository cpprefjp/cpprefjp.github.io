<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2024-10-10T08:38:29.843744</updated>
  <id>00ff0c4a-035c-422d-9435-b90da18fe20c</id>

  
    <entry>
      <title>cpprefjp - C++日本語リファレンス -- スポンサー更新</title>
      <link href="https://cpprefjp.github.io/index.html"/>
      <id>e1bfcbb4901e1dd1c3adbf3a5ff1d9f28e8700a0:index.md</id>
      <updated>2024-10-10T17:35:23+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;cpprefjp - C++日本語リファレンス&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;本サイトcpprefjpは、プログラミング言語C++のリファレンスを提供するWebサイトです。&lt;/p&gt;
&lt;p&gt;最新C++バージョンのリファレンスを提供していきます。&lt;/p&gt;
&lt;h2&gt;運営方針&lt;/h2&gt;
&lt;p&gt;本リファレンスサイトは、C++言語の最新のリファレンスを常に提供し続けることを目標にしています。&lt;/p&gt;
&lt;p&gt;各クラス、関数にはそれぞれ1つ以上のサンプルコードを付けていく方針です。&lt;/p&gt;
&lt;p&gt;本サイトでは、他サイトおよび規格書の直接的な翻訳ではなく、編集者の調査と考えに基づいた解説を提供していきます。&lt;/p&gt;
&lt;h2&gt;HTMLデータのダウンロード&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/cpprefjp/cpprefjp.github.io/archive/refs/heads/master.zip&#34; target=&#34;_blank&#34;&gt;cpprefjp.github.io-master.zip&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ローカルで閲覧できるHTMLを用意しています。&lt;/p&gt;
&lt;h2&gt;スポンサーシップ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://opencollective.com/cpprefjp&#34; target=&#34;_blank&#34;&gt;cpprefjp - Open Collective&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;このプロジェクトは、持続的な活動のため、ユーザーの方々からのご支援をお待ちしております。上記Open Collectiveのプロジェクトでスポンサーシップの募集をしております。&lt;/p&gt;
&lt;p&gt;ご支援いただくユーザーの方々には、以下の特典があります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;本ページ (cpprefjpサイトのトップページ) に1年間、金額順でロゴを表示させていただきます (金額が同じ場合は登録順)&lt;/li&gt;
&lt;li&gt;シルバースポンサー以上の方は、&lt;a href=&#34;https://github.com/cpprefjp/site&#34; target=&#34;_blank&#34;&gt;cpprefjp/site&lt;/a&gt;リポジトリのissueとして、採用情報を投稿できます (一週間ほどで閉じます)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ご支援いただいた資金は、貢献度に応じてコントリビューターに分配させていただきます。&lt;/p&gt;
&lt;p&gt;また、スポンサーシップの入金方法として、Open Collectiveのほかに銀行振込も対応しております。&lt;/p&gt;
&lt;p&gt;銀行振込に関して、またはそれ以外でスポンサーシップの相談に関しては、以下のメールアドレスにお問い合わせください。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;メールアドレス : &lt;a href=&#34;mailto:cpprefjp_org@googlegroups.com&#34;&gt;cpprefjp_org@googlegroups.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;宛名 : cpprefjp管理者&lt;ul&gt;
&lt;li&gt;代表として、主に高橋晶 (Akira Takahashi) がご対応させていただきます&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参加方法&lt;/h2&gt;
&lt;p&gt;本サイトは、多くのユーザの手によって書かれています。&lt;/p&gt;
&lt;p&gt;あなたがこの cpprefjp プロジェクトに参加したいのであれば、私達はそれをとても歓迎します。&lt;/p&gt;
&lt;p&gt;cpprefjp プロジェクトに参加する方法は簡単です。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/cpprefjp/site/issues?state=open&#34; target=&#34;_blank&#34;&gt;cpprefjp の Issues&lt;/a&gt; にアクセスし、&lt;/li&gt;
&lt;li&gt;あなたが手伝えそうな、まだ誰にもアサインされていないタスクを見つけ、&lt;/li&gt;
&lt;li&gt;その Issue のコメントに「このタスクやります」と書く&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;これだけです。&lt;/p&gt;
&lt;p&gt;あとは、そのタスクを完了させて pull request を送れば、あなたも cpprefjp のコミッタになれます。&lt;/p&gt;
&lt;h2&gt;編集者向けのさらなる情報&lt;/h2&gt;
&lt;p&gt;本サイトは、GitHubのリポジトリ上で、Markdown形式でリファレンスを記載し、GitHub Pagesに自動反映するという形をとっています。本サイトのMarkdownソースは、以下のリポジトリにあります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/cpprefjp/site&#34; target=&#34;_blank&#34;&gt;https://github.com/cpprefjp/site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上記リポジトリのREADMEに、コアメンバの一覧を記載してありますので、何かありましたらそのうちの誰か、もしくはリポジトリへのIssueという形でご相談ください。&lt;/p&gt;
&lt;p&gt;本サイトの編集方法については、以下のドキュメントを参照してください。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;start_editing.html&#34;&gt;cpprefjpを編集するには&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本サイトのコンテンツを作成、編集するにあたり、仕様を熟知し、一人で完璧に正しい内容を書くことは要求しません。&lt;/p&gt;
&lt;p&gt;たとえ間違ったことを記載した場合や、不安の残る内容を記載した場合でも、それに気づいた誰かが修正してくれます。&lt;/p&gt;
&lt;h2&gt;その他参考情報&lt;/h2&gt;
&lt;p&gt;以下のWebサイトから転載許可をいただいています。&lt;/p&gt;
&lt;p&gt;翻訳や解説などで活用してください：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://web.archive.org/web/20190112041213/http://episteme.wankuma.com/stlprog/index.html&#34; target=&#34;_blank&#34;&gt;Standard Template Library プログラミング on the Web&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;スポンサー&lt;/h2&gt;
&lt;p&gt;cpprefjpプロジェクトは、以下の方々にスポンサーになっていただいております。&lt;/p&gt;
&lt;h3&gt;ゴールドスポンサー&lt;/h3&gt;
&lt;p&gt;&lt;ul&gt;&lt;li&gt;Hiroshi様&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;
&lt;p&gt;&lt;div style=&#34;text-align: center&#34;&gt;&lt;a href=&#34;https://www.cocotone.jp&#34; target=&#34;_blank&#34;&gt;&lt;img alt=&#34;cocotone様&#34; src=&#34;static/image/sponsors/cocotone/cocotone.png&#34; title=&#34;cocotone様&#34; width=&#34;560&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;div style=&#34;text-align: center&#34;&gt;&lt;a href=&#34;https://www.cube-soft.jp/&#34; target=&#34;_blank&#34;&gt;&lt;img alt=&#34;CubeSoft様&#34; src=&#34;https://raw.githubusercontent.com/cube-soft/cube.assets/master/home/banner/large.png&#34; title=&#34;CubeSoft様&#34; width=&#34;560&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;div style=&#34;text-align: center&#34;&gt;&lt;a href=&#34;https://shiguredo.jp/&#34; target=&#34;_blank&#34;&gt;&lt;img alt=&#34;shiguredo様&#34; src=&#34;static/image/sponsors/shiguredo/shiguredo.png&#34; title=&#34;shiguredo様&#34; width=&#34;560&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/p&gt;
&lt;h3&gt;シルバースポンサー&lt;/h3&gt;
&lt;p&gt;&lt;div style=&#34;text-align: center&#34;&gt;&lt;a href=&#34;https://acerola-software.jp/&#34; target=&#34;_blank&#34;&gt;&lt;img alt=&#34;Acerola Software様&#34; src=&#34;static/image/sponsors/Acerola/as_logo.png&#34; title=&#34;Acerola Software様&#34; width=&#34;400&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;div style=&#34;text-align: center&#34;&gt;&lt;a href=&#34;https://www.fixstars.com/&#34; target=&#34;_blank&#34;&gt;&lt;img alt=&#34;Fixstars様&#34; src=&#34;static/image/sponsors/Fixstars/fixstars-logo.png&#34; title=&#34;Fixstars様&#34; width=&#34;400&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;div style=&#34;text-align: center&#34;&gt;&lt;a href=&#34;https://www.pegasys-inc.com/&#34; target=&#34;_blank&#34;&gt;&lt;img alt=&#34;pegasys様&#34; src=&#34;https://tmpgenc.pegasys-inc.com/images/pegasys_logo.png&#34; title=&#34;pegasys様&#34; width=&#34;320&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;div style=&#34;text-align: center&#34;&gt;&lt;a href=&#34;https://vaporoid.com/sys/&#34; target=&#34;_blank&#34;&gt;&lt;img alt=&#34;vaporoid様&#34; src=&#34;static/image/sponsors/vaporoid/cpprefjp-400x150.png&#34; title=&#34;vaporoid様&#34; width=&#34;400&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;div style=&#34;text-align: center&#34;&gt;&lt;a href=&#34;https://mkohana.github.io/&#34; target=&#34;_blank&#34;&gt;&lt;img alt=&#34;M.Kohana様&#34; src=&#34;static/image/sponsors/m_kohana/m_kohana.jpg&#34; title=&#34;M.Kohana様&#34; width=&#34;320&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;div style=&#34;text-align: center&#34;&gt;&lt;a href=&#34;https://www.techarts.co.jp/&#34; target=&#34;_blank&#34;&gt;&lt;img alt=&#34;有限会社テクニカルアーツ様&#34; src=&#34;static/image/sponsors/technical_arts/TechnicalArtsLogo3.png&#34; title=&#34;有限会社テクニカルアーツ様&#34; width=&#34;400&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;ul&gt;&lt;li&gt;T.Kishu様&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;
&lt;h3&gt;ブロンズスポンサー&lt;/h3&gt;
&lt;p&gt;&lt;div style=&#34;text-align: center&#34;&gt;&lt;img alt=&#34;Azaika様&#34; src=&#34;static/image/sponsors/Azaika/Azaika.jpg&#34; title=&#34;Azaika様&#34; width=&#34;256&#34; /&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;ul&gt;&lt;li&gt;イシハラユウヤ様&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;
&lt;p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://opencollective.com/meg_nakagami&#34; target=&#34;_blank&#34;&gt;Megumi Nakagami様&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;
&lt;p&gt;&lt;div style=&#34;text-align: center&#34;&gt;&lt;a href=&#34;https://github.com/minachun/minachun&#34; target=&#34;_blank&#34;&gt;&lt;img alt=&#34;minachun / J.Minami様&#34; src=&#34;https://raw.githubusercontent.com/minachun/minachun/main/banner.png&#34; title=&#34;minachun / J.Minami様&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;div style=&#34;text-align: center&#34;&gt;&lt;a href=&#34;https://gravatar.com/overthestardust&#34; target=&#34;_blank&#34;&gt;&lt;img alt=&#34;星くず彼方に&#34; src=&#34;static/image/sponsors/overthestardust/overthestardust.png&#34; title=&#34;星くず彼方に&#34; width=&#34;256&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;div style=&#34;text-align: center&#34;&gt;&lt;a href=&#34;https://github.com/zonuexe&#34; target=&#34;_blank&#34;&gt;&lt;img alt=&#34;USAMI Kenta&#34; src=&#34;https://gravatar.com/userimage/33138763/7af48baae61cde116bd8d28a5158946e.jpeg?size=256&#34; title=&#34;USAMI Kenta&#34; width=&#34;256&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;div style=&#34;text-align: center&#34;&gt;&lt;img alt=&#34;unagi様&#34; src=&#34;https://www.unagiworks.net/blog/wp-content/uploads/2019/01/logo.gif&#34; title=&#34;unagi様&#34; /&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://twitter.com/nodchip&#34; target=&#34;_blank&#34;&gt;nodchip様&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;
&lt;p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://opencollective.com/ugai&#34; target=&#34;_blank&#34;&gt;ugai様&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;
&lt;p&gt;スポンサーシップについては、以下のページを参照ください。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://opencollective.com/cpprefjp&#34; target=&#34;_blank&#34;&gt;cpprefjp - Open Collective&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;連絡先が不明なスポンサー様は、ロゴの表示が現在できておりません。Open Collectiveの問い合わせフォームから、表示するロゴ画像とリンク先URLについてご連絡いただきたいです。&lt;/p&gt;
&lt;h2&gt;プライバシーポリシー&lt;/h2&gt;
&lt;p&gt;本サイトは、サイトの改善のためにGoogleアナリティクスを使用しています。本サイトをご利用中のブラウザは、Googleに特定の情報を自動的に送信します。本サイトは、この分析のためにCookieを使用します。利用者は、本サイトを利用することで、この目的においてCookieを使用することを許可したものとみなします。&lt;/p&gt;
&lt;p&gt;Googleによるデータ使用の詳細は、以下のURLで確認することができます。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.google.com/intl/ja/policies/privacy/partners/&#34; target=&#34;_blank&#34;&gt;https://www.google.com/intl/ja/policies/privacy/partners/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;ライセンスについて&lt;/h2&gt;
&lt;p&gt;本サイトの情報は、&lt;a href=&#34;https://creativecommons.org/licenses/by/3.0/&#34; target=&#34;_blank&#34;&gt;クリエイティブ・コモンズ 表示 3.0 非移植 ライセンス(CC BY)&lt;/a&gt;の下に提供しています。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://i.creativecommons.org/l/by/3.0/88x31.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;cpprefjpサイトのアイコン・ロゴ画像は、&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-nd/4.0/deed.ja&#34; target=&#34;_blank&#34;&gt;クリエイティブ・コモンズ 表示 - 非営利 - 改変禁止 4.0 国際 (CC BY-NC-ND 4.0)&lt;/a&gt;の下に提供しています。&lt;/p&gt;
&lt;p&gt;高解像度画像データ： &lt;a href=&#34;https://github.com/cpprefjp/image/tree/master/cpprefjp/icon&#34; target=&#34;_blank&#34;&gt;cpprefjp/image&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png&#34; /&gt;&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>remove_cvref -- remove_cvref : 動作確認</title>
      <link href="https://cpprefjp.github.io/reference/type_traits/remove_cvref.html"/>
      <id>867bb4aca24d09a55f4c2cc8dd99370224a48b23:reference/type_traits/remove_cvref.md</id>
      <updated>2024-10-08T21:52:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/type_traits/remove_cvref.md b/reference/type_traits/remove_cvref.md
index bebdacd05..f2e95b9e1 100644
--- a/reference/type_traits/remove_cvref.md
+++ b/reference/type_traits/remove_cvref.md
@@ -55,8 +55,8 @@ int main() {}
 
 ### 処理系
 - [Clang](/implementation.md#clang): 6.0 [mark verified]
-- [GCC](/implementation.md#gcc):
-- [Visual C++](/implementation.md#visual_cpp): ??
+- [GCC](/implementation.md#gcc): 9 [mark verified]
+- [Visual C++](/implementation.md#visual_cpp): 2019 [mark verified]
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>初期化文での型の別名宣言を許可 [P2360R0] -- コメントの誤りを修正</title>
      <link href="https://cpprefjp.github.io/lang/cpp23/extend_init_statement_to_allow_alias_declaration.html"/>
      <id>f9d46be05c3582e2150173beadd51475358fb1f2:lang/cpp23/extend_init_statement_to_allow_alias_declaration.md</id>
      <updated>2024-10-07T18:18:58+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp23/extend_init_statement_to_allow_alias_declaration.md b/lang/cpp23/extend_init_statement_to_allow_alias_declaration.md
index 484797e3e..fac074117 100644
--- a/lang/cpp23/extend_init_statement_to_allow_alias_declaration.md
+++ b/lang/cpp23/extend_init_statement_to_allow_alias_declaration.md
@@ -38,7 +38,7 @@ int main()
     std::cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; std::endl;
   }
 
-  // C++20 : OK
+  // C++20 : NG
   // C++23 : OK
   if (using T = int; T x = f()) {
     std::cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; std::endl;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>format -- コード修飾を追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/format.html"/>
      <id>5d13ce90b81a3f49bec9aab0c6284ef829ae5edc:reference/chrono/format.md</id>
      <updated>2024-09-24T17:40:08+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/format.md b/reference/chrono/format.md
index 4871d0814..491b7d90c 100644
--- a/reference/chrono/format.md
+++ b/reference/chrono/format.md
@@ -115,6 +115,9 @@ int main()
   std::cout &amp;lt;&amp;lt; std::format(&amp;#34;8. {:%A}&amp;#34;, now) &amp;lt;&amp;lt; std::endl; // 曜日の完全名
 }
 ```
+* std::chrono::system_clock[link /reference/chrono/system_clock.md]
+* now()[link /reference/chrono/system_clock/now.md]
+* std::chrono::time_point_cast[link /reference/chrono/time_point_cast.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>format -- chronoのformat : 世紀のロケール表現で元号はいまのところ扱われないので削除 #1352</title>
      <link href="https://cpprefjp.github.io/reference/chrono/format.html"/>
      <id>e97eeba76a8bcd059b3445d6f0f845c2fd3a1baa:reference/chrono/format.md</id>
      <updated>2024-09-24T17:38:30+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/format.md b/reference/chrono/format.md
index 09f1d46ef..4871d0814 100644
--- a/reference/chrono/format.md
+++ b/reference/chrono/format.md
@@ -44,8 +44,8 @@ chronoライブラリではこれに加え、たとえばデフォルトでは
 | `%A` | ロケール依存の曜日の完全名。&amp;lt;br/&amp;gt; 値に有効な曜日が含まれていない場合、[`std::format_error`](/reference/format/format_error.md)例外を送出する | `&amp;#34;Friday&amp;#34;`, `&amp;#34;金曜日&amp;#34;` |
 | `%b` | ロケール依存の月の略称。&amp;lt;br/&amp;gt; 値に有効な月が含まれていない場合、[`std::format_error`](/reference/format/format_error.md)例外を送出する | `&amp;#34;Apr&amp;#34;`, `&amp;#34;4月&amp;#34;` |
 | `%B` | ロケール依存の月の完全名。&amp;lt;br/&amp;gt; 値に有効な月が含まれていない場合、[`std::format_error`](/reference/format/format_error.md)例外を送出する | `&amp;#34;April&amp;#34;`, `&amp;#34;4月&amp;#34;` |
-| `%c` | ロケール依存の日付・時間の表現。改良コマンド`%Ec`を指定すると、異なる表現を出力する | `&amp;#34;Fri Apr 24 17:14:44 2020&amp;#34;`&amp;lt;br/&amp;gt; `&amp;#34;2020年04月24日 17時14分44秒&amp;#34;`&amp;lt;br/&amp;gt; `%Ec`では`&amp;#34;令和02年04月24日 17時14分44秒&amp;#34;` |
-| `%C` | 100で切り下げ除算した年 (世紀)。結果が10進数で1桁の場合、先頭に`0`がつく。改良コマンド`%EC`を指定すると、ロケール依存の世紀の異なる表現を出力する | `&amp;#34;21&amp;#34;`&amp;lt;br/&amp;gt; `%EC`では`&amp;#34;令和&amp;#34;` (元号) |
+| `%c` | ロケール依存の日付・時間の表現。改良コマンド`%Ec`を指定すると、異なる表現を出力する | `&amp;#34;Fri Apr 24 17:14:44 2020&amp;#34;`&amp;lt;br/&amp;gt; `&amp;#34;2020年04月24日 17時14分44秒&amp;#34;` |
+| `%C` | 100で切り下げ除算した年 (世紀)。結果が10進数で1桁の場合、先頭に`0`がつく。改良コマンド`%EC`を指定すると、ロケール依存の世紀の異なる表現を出力する | 2020年では`&amp;#34;20&amp;#34;`) |
 | `%d` | 10進数での月の日。結果が10進数で1桁の場合、先頭に`0`がつく。改良コマンド`%Od`を指定すると、ロケール依存の異なる表現を出力する | `&amp;#34;24&amp;#34;` |
 | `%D` | `%m/%d/%y`と等価 | `&amp;#34;04/24/20&amp;#34;` |
 | `%e` | 10進数での月の日。結果が10進数で1桁の場合、先頭にスペースがつく。改良コマンド`%Oe`を指定すると、ロケール依存の異なる表現を出力する | `&amp;#34; 1&amp;#34;` |
@@ -72,10 +72,10 @@ chronoライブラリではこれに加え、たとえばデフォルトでは
 | `%V` | 10進数でのISO週ベースの週番号。結果が1桁の場合、先頭に`0`がつく。改良コマンド`%OV`を指定すると、ロケール依存の異なる表現を出力する | `&amp;#34;17&amp;#34;` |
 | `%w` | 10進数での日曜を0とする曜日番号 (0-6)。改良コマンド`%Ow`を指定すると、ロケール依存の異なる表現を出力する | `&amp;#34;5&amp;#34;` |
 | `%W` | 10進数での年の週番号。年の最初の月曜日が最初の曜日であるとして`01`、同年のそれより前の日は`00`となる。結果が1桁の場合、先頭に`0`がつく。改良コマンド`%OW`を指定すると、ロケール依存の異なる表現を出力する | `&amp;#34;16&amp;#34;` |
-| `%x` | ロケール依存の日付表現。改良コマンド`%Ex`を指定すると、ロケール依存の異なる表現が出力される | `&amp;#34;04/24/20&amp;#34;`&amp;lt;br/&amp;gt; `&amp;#34;2020年04月24日&amp;#34;`&amp;lt;br/&amp;gt; `%Ex`では`&amp;#34;令和02年04月24日&amp;#34;` |
+| `%x` | ロケール依存の日付表現。改良コマンド`%Ex`を指定すると、ロケール依存の異なる表現が出力される | `&amp;#34;04/24/20&amp;#34;` |
 | `%X` | ロケール依存の時間表現。改良コマンド`%EX`を指定すると、ロケール依存の異なる表現が出力される | `&amp;#34;17:14:44&amp;#34;`&amp;lt;br/&amp;gt; `&amp;#34;17時14分44秒&amp;#34;` |
 | `%y` | 10進数での年のうしろ2桁。結果が1桁の場合、先頭に`0`がつく。改良コマンド`%Oy`を指定すると、ロケール依存の異なる表現を出力する。改良コマンド`%Ey`を指定すると、`%EC`からのオフセットとしてロケール依存の異なる表現を出力する。 | `&amp;#34;20&amp;#34;`&amp;lt;br/&amp;gt; `%Ey`では`&amp;#34;02&amp;#34;` |
-| `%Y` | 10進数での年。結果が4桁未満の場合、4桁になるよう左が`0`で埋められる。改良コマンド`%EY`を指定すると、ロケール依存の異なる表現の完全な年を出力する | `&amp;#34;2020&amp;#34;`&amp;lt;br/&amp;gt; `%EY`では`&amp;#34;令和02年&amp;#34;` |
+| `%Y` | 10進数での年。結果が4桁未満の場合、4桁になるよう左が`0`で埋められる。改良コマンド`%EY`を指定すると、ロケール依存の異なる表現の完全な年を出力する | `&amp;#34;2020&amp;#34;` |
 | `%z` | ISO 8601フォーマットでのUTCからのオフセット。例として`-0430`はUTCから4時間30分遅れていることを表す。オフセットがゼロの場合は`+0000`が使用される。改良コマンド`%Ez`と`%Oz`を指定すると、時と分の間にコロン (`:`) が挿入される。オフセット情報が利用可能でない場合、[`std::format_error`](/reference/format/format_error.md)例外を送出する | `&amp;#34;+0900&amp;#34;`&amp;lt;br/&amp;gt;`%Ez`では`&amp;#34;+09:00&amp;#34;` |
 | `%Z` | タイムゾーンの略称。タイムゾーンの略称が利用可能でない場合、[`std::format_error`](/reference/format/format_error.md)例外を送出する | `&amp;#34;JST&amp;#34;` |
 | `%%` | 文字`%` | `&amp;#34;%&amp;#34;` |
@@ -83,30 +83,58 @@ chronoライブラリではこれに加え、たとえばデフォルトでは
 - 便宜上のリテラルキャスト`STATICALLY-WIDEN`を導入する。`STATICALLY-WIDEN&amp;lt;charT&amp;gt;(&amp;#34;...&amp;#34;)`は、`charT`が`char`である場合は`&amp;#34;...&amp;#34;`、`charT`が`wchar_t`である場合は`L&amp;#34;...&amp;#34;`を意味する。
 - [`hh_mm_ss`](hh_mm_ss.md)オブジェクトの[`is_negative()`](hh_mm_ss/is_negative.md)が`true`である場合、出力される文字列の先頭に`STATICALLY-WIDEN&amp;lt;charT&amp;gt;(&amp;#34;-&amp;#34;)`が挿入される
 
+## 例外
+- 指定されたフォーマットフラグに必要な情報が含まれていない場合、[`format_error`](/reference/format/format_error.md)例外が送出される (例として、[`duration`](duration.md)には曜日をフォーマットするために必要な情報が含まれていない)
+    - ただし、フラグが時刻に関するもの (`%H`, `%I`, `%p`など) である場合、`duration`の特殊化は深夜0時からの経過した時刻として解釈する
+
+
+## 例
 ```cpp example
 #include &amp;lt;iostream&amp;gt;
 #include &amp;lt;format&amp;gt;
 #include &amp;lt;chrono&amp;gt;
+
 int main()
 {
-  const auto now = std::chrono::system_clock::now();
-  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;{:%Y}&amp;#34;, now); // =&amp;gt; 2021
+  auto now = std::chrono::system_clock::now(); // UTC時間の現在日時
+
+  // 日付を出力
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;1. {:%Y年%m月%d日}&amp;#34;, now) &amp;lt;&amp;lt; std::endl;
+
+  // 時間を出力。
+  // 秒単位のtime_pointに変換しないと、小数点以下の秒も出力される
+  auto now_sec = std::chrono::time_point_cast&amp;lt;std::chrono::seconds&amp;gt;(now);
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;2. {:%H時%M分%S秒}&amp;#34;, now) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;3. {:%H時%M分%S秒}&amp;#34;, now_sec) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;4. {:%p %I時%M分%S秒}&amp;#34;, now_sec) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;4. {:%p %I時%M分%S秒}&amp;#34;, now_sec) &amp;lt;&amp;lt; std::endl;
+
+  // その他要素
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;6. {:%C}&amp;#34;, now) &amp;lt;&amp;lt; std::endl; // 世紀 (100で割って切り下げた値)
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;7. {:%a}&amp;#34;, now) &amp;lt;&amp;lt; std::endl; // 曜日の略称
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;8. {:%A}&amp;#34;, now) &amp;lt;&amp;lt; std::endl; // 曜日の完全名
 }
 ```
 
-## 例外
-- 指定されたフォーマットフラグに必要な情報が含まれていない場合、[`format_error`](/reference/format/format_error.md)例外が送出される (例として、[`duration`](duration.md)には曜日をフォーマットするために必要な情報が含まれていない)
-    - ただし、フラグが時刻に関するもの (`%H`, `%I`, `%p`など) である場合、`duration`の特殊化は深夜0時からの経過した時刻として解釈する
-
+### 出力例
+```
+1. 2024年09月24日
+2. 08時27分28.1822610秒
+3. 08時27分28秒
+4. AM 08時27分28秒
+6. 20
+7. Tue
+8. Tuesday
+```
 
 ## バージョン
 ### 言語
 - C++20
 
 ### 処理系
-- [Clang](/implementation.md#clang): 9.0 [mark noimpl]
-- [GCC](/implementation.md#gcc): 9.2 [mark noimpl]
-- [Visual C++](/implementation.md#visual_cpp): 2019 Update 3 [mark noimpl]
+- [Clang](/implementation.md#clang): 17 [mark mark verified]
+- [GCC](/implementation.md#gcc): 13 [mark verified]
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 10 [mark verified]
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
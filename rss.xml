<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2020-05-31T12:13:35.338483</updated>
  <id>afbfe8cd-01a4-428d-9403-6a4fdf8804f5</id>

  
    <entry>
      <title>char16_tとchar32_t -- Merge pull request #765 from cpprefjp/cpp20/char8_t_delete_op_left_shift</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/char16_32.html"/>
      <id>63c035c380c269d0ae09d266c0f58e6285c83479:lang/cpp11/char16_32.md</id>
      <updated>2020-05-31T21:09:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/char16_32.md b/lang/cpp11/char16_32.md
index b90b22c70..70fbf7195 100644
--- a/lang/cpp11/char16_32.md
+++ b/lang/cpp11/char16_32.md
@@ -130,7 +130,7 @@ int main()
 - [`wstring_convert`](/reference/locale/wstring_convert.md)
 - [C++11 UTF-8文字列リテラル](utf8_string_literals.md)
 - [C++20 UTF-8エンコーディングされた文字の型として`char8_t`を追加](/lang/cpp20/char8_t.md)
-
+- [ostream `operator&amp;lt;&amp;lt;`](/reference/ostream/basic_ostream/op_ostream_free.md)
 
 ## 参照
 - [WG14 N1040 Extensions for the programming language C to support new character data types](http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1040.pdf)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>UTF-8文字列リテラル -- Merge pull request #765 from cpprefjp/cpp20/char8_t_delete_op_left_shift</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/utf8_string_literals.html"/>
      <id>63c035c380c269d0ae09d266c0f58e6285c83479:lang/cpp11/utf8_string_literals.md</id>
      <updated>2020-05-31T21:09:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/utf8_string_literals.md b/lang/cpp11/utf8_string_literals.md
index 51ea16936..bf640e9cb 100644
--- a/lang/cpp11/utf8_string_literals.md
+++ b/lang/cpp11/utf8_string_literals.md
@@ -15,6 +15,7 @@ char t[] = u8&amp;#34;\U00020BB7野家&amp;#34;; // 𠮷野家
 
 `u8`プレフィックスを指定しない場合は、実装定義のマルチバイト文字コードにエンコードされる。その実装定義の文字コードは、ASCII文字コードと互換があることは保証されない。そのため、UTF-8のASCII互換部分が、実装定義の文字コードと互換があることも、保証されない。
 
+C++20ではUTF-8文字リテラルの型が[`const char[N]`ではなく`const char8_t[N]`になる](/lang/cpp20/char8_t.md)
 
 ## 仕様
 - 文字列リテラルに`u8`プレフィックスを付けることで、UTF-8にエンコードされた`char`型の配列に初期化される。
@@ -65,7 +66,7 @@ int main()
 - [C++11 `char16_t`と`char32_t`](char16_32.md)
 - [C++17 UTF-8文字リテラル](/lang/cpp17/utf8_character_literals.md)
 - [C++20 UTF-8エンコーディングされた文字の型として`char8_t`を追加](/lang/cpp20/char8_t.md)
-
+- [ostream `operator&amp;lt;&amp;lt;`](/reference/ostream/basic_ostream/op_ostream_free.md)
 
 ## 参照
 - [N2159 UTF-8 String Literals](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2159.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>UTF-8文字リテラル -- Merge pull request #765 from cpprefjp/cpp20/char8_t_delete_op_left_shift</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/utf8_character_literals.html"/>
      <id>63c035c380c269d0ae09d266c0f58e6285c83479:lang/cpp17/utf8_character_literals.md</id>
      <updated>2020-05-31T21:09:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/utf8_character_literals.md b/lang/cpp17/utf8_character_literals.md
index 6aede84e1..7c93dac3e 100644
--- a/lang/cpp17/utf8_character_literals.md
+++ b/lang/cpp17/utf8_character_literals.md
@@ -9,6 +9,7 @@ char s[] = u8&amp;#34;あいうえお&amp;#34;; // OK : C++11以降
 char c = u8&amp;#39;A&amp;#39;; // OK : C++17以降
 ```
 
+C++20ではUTF-8文字リテラルの型が[`char`ではなく`char8_t`になる](/lang/cpp20/char8_t.md)
 
 ## 仕様
 - `u8`プレフィックスが付いた文字リテラルは、`char`文字型の、UTF-8文字リテラルとなる
@@ -20,6 +21,8 @@ char c = u8&amp;#39;A&amp;#39;; // OK : C++17以降
 ## 関連項目
 - [C++11 UTF-8文字列リテラル](/lang/cpp11/utf8_string_literals.md)
 - [C++11 `char16_t`と`char32_t`](/lang/cpp11/char16_32.md)
+- [C++20 UTF-8エンコーディングされた文字の型として`char8_t`を追加](/lang/cpp20/char8_t.md)
+- [ostream `operator&amp;lt;&amp;lt;`](/reference/ostream/basic_ostream/op_ostream_free.md)
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>UTF-8エンコーディングされた文字の型として`char8_t`を追加 -- Merge pull request #765 from cpprefjp/cpp20/char8_t_delete_op_left_shift</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/char8_t.html"/>
      <id>63c035c380c269d0ae09d266c0f58e6285c83479:lang/cpp20/char8_t.md</id>
      <updated>2020-05-31T21:09:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/char8_t.md b/lang/cpp20/char8_t.md
index 1b590f54a..781a7f315 100644
--- a/lang/cpp20/char8_t.md
+++ b/lang/cpp20/char8_t.md
@@ -27,7 +27,12 @@ UTF-8でエンコードされた文字を格納することを想定した型と
 
 ## 備考
 
-[機能テストマクロ](../../lang/cpp17/feature_test_macros.md)は`__cpp_char8_t`で、値は`201803`。
+[機能テストマクロ](../../lang/cpp20/feature_test_macros.md.nolink)は以下の通り。
+
+| マクロ名            | 値       |
+|---------------------|----------|
+| `__cpp_char8_t`     | `201811` |
+| `__cpp_lib_char8_t` | `201811` |
 
 ## 例
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>u8path -- Merge pull request #765 from cpprefjp/cpp20/char8_t_delete_op_left_shift</title>
      <link href="https://cpprefjp.github.io/reference/filesystem/u8path.html"/>
      <id>63c035c380c269d0ae09d266c0f58e6285c83479:reference/filesystem/u8path.md</id>
      <updated>2020-05-31T21:09:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/filesystem/u8path.md b/reference/filesystem/u8path.md
index 233f23e54..c4c5e84a7 100644
--- a/reference/filesystem/u8path.md
+++ b/reference/filesystem/u8path.md
@@ -22,8 +22,8 @@ namespace std::filesystem {
 ## 概要
 UTF-8エンコードされた文字列からパスオブジェクトを構築する。
 
-- (1) : UTF-8エンコードされた`char`配列、[`std::string`](/reference/string/basic_string.md)、[`std::string_view`](/reference/string_view/basic_string_view.md)オブジェクトからパスオブジェクトを構築する
-- (2) : UTF-8エンコードされた`char`要素の範囲から、パスオブジェクトを構築する
+- (1) : UTF-8エンコードされた`char`(C++20移行は`char8_t`も)配列、[`std::string`](/reference/string/basic_string.md)、[`std::string_view`](/reference/string_view/basic_string_view.md)オブジェクトからパスオブジェクトを構築する
+- (2) : UTF-8エンコードされた`char`(C++20移行は`char8_t`も)要素の範囲から、パスオブジェクトを構築する
 
 
 ## 要件
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;&lt; (非メンバ関数) -- Merge pull request #765 from cpprefjp/cpp20/char8_t_delete_op_left_shift</title>
      <link href="https://cpprefjp.github.io/reference/ostream/basic_ostream/op_ostream_free.html"/>
      <id>63c035c380c269d0ae09d266c0f58e6285c83479:reference/ostream/basic_ostream/op_ostream_free.md</id>
      <updated>2020-05-31T21:09:41+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ostream/basic_ostream/op_ostream_free.md b/reference/ostream/basic_ostream/op_ostream_free.md
index 8496abc73..593a3cbf2 100644
--- a/reference/ostream/basic_ostream/op_ostream_free.md
+++ b/reference/ostream/basic_ostream/op_ostream_free.md
@@ -96,7 +96,7 @@ namespace std {
 なお、(14) の形式（`os` の文字型（`char_type`）が `char` 以外で `s` が `const char*`）の時は、`s` の各文字 `c` を直接出力するのではなく、`os.`[`widen`](../../ios/basic_ios/widen.md)`(c)` を出力する。  
 出力後、幅指定は `0` にリセットされる。
 
-### (18)～(24) 文字列の書式化出力
+### (18)～(24) 文字列の書式化出力 (C++20)
 
 これらの関数は削除されている
 
@@ -212,6 +212,25 @@ cpprefjp
 ## 実装例
 TBD
 
+## C++20で追加された`delete`指定オーバーロードについて
+
+[`char8_t`型の追加](/lang/cpp20/char8_t.md)に伴って、次に示すようなコードに破壊的変更が生じてしまった。
+
+```cpp
+#include &amp;lt;iostream&amp;gt;
+int main()
+{
+    std::cout &amp;lt;&amp;lt; u8&amp;#39;x&amp;#39;;    // C++17までは x と表示された。C++20では120と表示される
+    std::cout &amp;lt;&amp;lt; u8&amp;#34;text&amp;#34;; // C++20までは text と表示された。C++20では文字列先頭へのポインタが表示される
+}
+```
+
+これは`char8_t`/`char16_t`/`char32_t`に対するostreamの`operator&amp;lt;&amp;lt;`が提供されないため、他のオーバーロードが選ばれるためにこのような直感に反する挙動が発生する。
+
+そこで(6)～(12)、(18)～(24)のように`delete`指定された`operator&amp;lt;&amp;lt;`を追加することで不適格にし、このような直感的ではない挙動を避ける。
+
+[機能テストマクロ](/lang/cpp20/feature_test_macros.md.nolink)は`__cpp_lib_char8_t`で、値は`201907`。
+
 ## バージョン
 ### 言語
 - C++98
@@ -221,39 +240,53 @@ TBD
 
 ## 関連項目
 
-- このほかの`&amp;lt;&amp;lt;`演算子関数
-    - [`bool`値・数値・ポインタ、ストリームバッファ、マニピュレータに対するもの](op_ostream.md)
-	- [`std::sub_match`に関するもの](../../regex/sub_match/op_ostream.md)
-	- [`std::error_code`に関するもの](../../system_error/error_code/op_ostream.md)
-	- [`std::complex`に関するもの](../../complex/complex/op_ostream.md)
-	- [`std::bitset`に関するもの](../../bitset/bitset/op_ostream.md)
-	- [`std::basic_string`に関するもの](../../string/basic_string/op_ostream.md)
-	- [`std::shared_ptr`に関するもの](../../memory/shared_ptr/op_ostream.md)
-	- [`std::shuffle_order_engine`に関するもの](../../random/shuffle_order_engine/op_ostream.md)
-	- [`std::gamma_distribution`に関するもの](../../random/gamma_distribution/op_ostream.md)
-	- [`std::geometric_distribution`に関するもの](../../random/geometric_distribution/op_ostream.md)
-	- [`std::extreme_value_distribution`に関するもの](../../random/extreme_value_distribution/op_ostream.md)
-	- [`std::fisher_f_distribution`に関するもの](../../random/fisher_f_distribution/op_ostream.md)
-	- [`std::mersenne_twister_engine`に関するもの](../../random/mersenne_twister_engine/op_ostream.md)
-	- [`std::chi_squared_distribution`に関するもの](../../random/chi_squared_distribution/op_ostream.md)
-	- [`std::exponential_distribution`に関するもの](../../random/exponential_distribution/op_ostream.md)
-	- [`std::discrete_distribution`に関するもの](../../random/discrete_distribution/op_ostream.md)
-	- [`std::subtract_with_carry_engine`に関するもの](../../random/subtract_with_carry_engine/op_ostream.md)
-	- [`std::piecewise_constant_distribution`に関するもの](../../random/piecewise_constant_distribution/op_ostream.md)
-	- [`std::poisson_distribution`に関するもの](../../random/poisson_distribution/op_ostream.md)
-	- [`std::student_t_distribution`に関するもの](../../random/student_t_distribution/op_ostream.md)
-	- [`std::bernoulli_distribution`に関するもの](../../random/bernoulli_distribution/op_ostream.md)
-	- [`std::weibull_distribution`に関するもの](../../random/weibull_distribution/op_ostream.md)
-	- [`std::binomial_distribution`に関するもの](../../random/binomial_distribution/op_ostream.md)
-	- [`std::piecewise_linear_distribution`に関するもの](../../random/piecewise_linear_distribution/op_ostream.md)
-	- [`std::uniform_real_distribution`に関するもの](../../random/uniform_real_distribution/op_ostream.md)
-	- [`std::negative_binomial_distribution`に関するもの](../../random/negative_binomial_distribution/op_ostream.md)
-	- [`std::discard_block_engine`に関するもの](../../random/discard_block_engine/op_ostream.md)
-	- [`std::normal_distribution`に関するもの](../../random/normal_distribution/op_ostream.md)
-	- [`std::cauchy_distribution`に関するもの](../../random/cauchy_distribution/op_ostream.md)
-	- [`std::lognormal_distribution`に関するもの](../../random/lognormal_distribution/op_ostream.md)
-	- [`std::linear_congruential_engine`に関するもの](../../random/linear_congruential_engine/op_ostream.md)
-	- [`std::uniform_int_distribution`に関するもの](../../random/uniform_int_distribution/op_ostream.md)
-	- [`std::independent_bits_engine`に関するもの](../../random/independent_bits_engine/op_ostream.md)
-- 出力対象の型
-    - [`basic_streambuf`](../../streambuf/basic_streambuf.md)
+### このほかの`&amp;lt;&amp;lt;`演算子関数
+
+- [`bool`値・数値・ポインタ、ストリームバッファ、マニピュレータに対するもの](op_ostream.md)
+- [`std::sub_match`に関するもの](../../regex/sub_match/op_ostream.md)
+- [`std::error_code`に関するもの](../../system_error/error_code/op_ostream.md)
+- [`std::complex`に関するもの](../../complex/complex/op_ostream.md)
+- [`std::bitset`に関するもの](../../bitset/bitset/op_ostream.md)
+- [`std::basic_string`に関するもの](../../string/basic_string/op_ostream.md)
+- [`std::shared_ptr`に関するもの](../../memory/shared_ptr/op_ostream.md)
+- [`std::shuffle_order_engine`に関するもの](../../random/shuffle_order_engine/op_ostream.md)
+- [`std::gamma_distribution`に関するもの](../../random/gamma_distribution/op_ostream.md)
+- [`std::geometric_distribution`に関するもの](../../random/geometric_distribution/op_ostream.md)
+- [`std::extreme_value_distribution`に関するもの](../../random/extreme_value_distribution/op_ostream.md)
+- [`std::fisher_f_distribution`に関するもの](../../random/fisher_f_distribution/op_ostream.md)
+- [`std::mersenne_twister_engine`に関するもの](../../random/mersenne_twister_engine/op_ostream.md)
+- [`std::chi_squared_distribution`に関するもの](../../random/chi_squared_distribution/op_ostream.md)
+- [`std::exponential_distribution`に関するもの](../../random/exponential_distribution/op_ostream.md)
+- [`std::discrete_distribution`に関するもの](../../random/discrete_distribution/op_ostream.md)
+- [`std::subtract_with_carry_engine`に関するもの](../../random/subtract_with_carry_engine/op_ostream.md)
+- [`std::piecewise_constant_distribution`に関するもの](../../random/piecewise_constant_distribution/op_ostream.md)
+- [`std::poisson_distribution`に関するもの](../../random/poisson_distribution/op_ostream.md)
+- [`std::student_t_distribution`に関するもの](../../random/student_t_distribution/op_ostream.md)
+- [`std::bernoulli_distribution`に関するもの](../../random/bernoulli_distribution/op_ostream.md)
+- [`std::weibull_distribution`に関するもの](../../random/weibull_distribution/op_ostream.md)
+- [`std::binomial_distribution`に関するもの](../../random/binomial_distribution/op_ostream.md)
+- [`std::piecewise_linear_distribution`に関するもの](../../random/piecewise_linear_distribution/op_ostream.md)
+- [`std::uniform_real_distribution`に関するもの](../../random/uniform_real_distribution/op_ostream.md)
+- [`std::negative_binomial_distribution`に関するもの](../../random/negative_binomial_distribution/op_ostream.md)
+- [`std::discard_block_engine`に関するもの](../../random/discard_block_engine/op_ostream.md)
+- [`std::normal_distribution`に関するもの](../../random/normal_distribution/op_ostream.md)
+- [`std::cauchy_distribution`に関するもの](../../random/cauchy_distribution/op_ostream.md)
+- [`std::lognormal_distribution`に関するもの](../../random/lognormal_distribution/op_ostream.md)
+- [`std::linear_congruential_engine`に関するもの](../../random/linear_congruential_engine/op_ostream.md)
+- [`std::uniform_int_distribution`に関するもの](../../random/uniform_int_distribution/op_ostream.md)
+- [`std::independent_bits_engine`に関するもの](../../random/independent_bits_engine/op_ostream.md)
+
+### 出力対象の型
+
+- [`basic_streambuf`](../../streambuf/basic_streambuf.md)
+
+### C++20での変更関連
+
+- [UTF-8エンコーディングされた文字の型として`char8_t`を追加](/lang/cpp20/char8_t.md)
+- [char16_tとchar32_t](/lang/cpp11/char16_32.md)
+- [UTF-8文字列リテラル](/lang/cpp11/utf8_string_literals.md)
+- [UTF-8文字リテラル](/lang/cpp17/utf8_character_literals.md)
+
+## 参照
+
+[P1423R3: char8_t backward compatibility remediation](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1423r3.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;&lt; (非メンバ関数) -- chore(cpp20/char8_t): 「された」を続けない</title>
      <link href="https://cpprefjp.github.io/reference/ostream/basic_ostream/op_ostream_free.html"/>
      <id>31e86994b877f5aad17113cd3bb782953144b91b:reference/ostream/basic_ostream/op_ostream_free.md</id>
      <updated>2020-05-30T21:22:23+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ostream/basic_ostream/op_ostream_free.md b/reference/ostream/basic_ostream/op_ostream_free.md
index a2a8641e0..593a3cbf2 100644
--- a/reference/ostream/basic_ostream/op_ostream_free.md
+++ b/reference/ostream/basic_ostream/op_ostream_free.md
@@ -212,7 +212,7 @@ cpprefjp
 ## 実装例
 TBD
 
-## C++20で追加された`delete`指定されたオーバーロードについて
+## C++20で追加された`delete`指定オーバーロードについて
 
 [`char8_t`型の追加](/lang/cpp20/char8_t.md)に伴って、次に示すようなコードに破壊的変更が生じてしまった。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;&lt; (非メンバ関数) -- chore(cpp20/char8_t): fix typo</title>
      <link href="https://cpprefjp.github.io/reference/ostream/basic_ostream/op_ostream_free.html"/>
      <id>acf81f146dc0eea818d7eb31eaf67c1e46337417:reference/ostream/basic_ostream/op_ostream_free.md</id>
      <updated>2020-05-30T21:19:23+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ostream/basic_ostream/op_ostream_free.md b/reference/ostream/basic_ostream/op_ostream_free.md
index f68c07c76..a2a8641e0 100644
--- a/reference/ostream/basic_ostream/op_ostream_free.md
+++ b/reference/ostream/basic_ostream/op_ostream_free.md
@@ -221,7 +221,7 @@ TBD
 int main()
 {
     std::cout &amp;lt;&amp;lt; u8&amp;#39;x&amp;#39;;    // C++17までは x と表示された。C++20では120と表示される
-    std::cout &amp;lt;&amp;lt; u8&amp;#34;text&amp;#34;; // C++20までは test と表示された。C++20では文字列先頭へのポインタが表示される
+    std::cout &amp;lt;&amp;lt; u8&amp;#34;text&amp;#34;; // C++20までは text と表示された。C++20では文字列先頭へのポインタが表示される
 }
 ```
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>UTF-8文字列リテラル -- fix(cpp20/char8_t): u8 prefixリテラルの型の変更について記述</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/utf8_string_literals.html"/>
      <id>49700e62c9967c3d0f4df4d2e2c38834311b175c:lang/cpp11/utf8_string_literals.md</id>
      <updated>2020-05-30T16:32:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/utf8_string_literals.md b/lang/cpp11/utf8_string_literals.md
index d0963ab58..bf640e9cb 100644
--- a/lang/cpp11/utf8_string_literals.md
+++ b/lang/cpp11/utf8_string_literals.md
@@ -15,6 +15,7 @@ char t[] = u8&amp;#34;\U00020BB7野家&amp;#34;; // 𠮷野家
 
 `u8`プレフィックスを指定しない場合は、実装定義のマルチバイト文字コードにエンコードされる。その実装定義の文字コードは、ASCII文字コードと互換があることは保証されない。そのため、UTF-8のASCII互換部分が、実装定義の文字コードと互換があることも、保証されない。
 
+C++20ではUTF-8文字リテラルの型が[`const char[N]`ではなく`const char8_t[N]`になる](/lang/cpp20/char8_t.md)
 
 ## 仕様
 - 文字列リテラルに`u8`プレフィックスを付けることで、UTF-8にエンコードされた`char`型の配列に初期化される。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>UTF-8文字リテラル -- fix(cpp20/char8_t): u8 prefixリテラルの型の変更について記述</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/utf8_character_literals.html"/>
      <id>49700e62c9967c3d0f4df4d2e2c38834311b175c:lang/cpp17/utf8_character_literals.md</id>
      <updated>2020-05-30T16:32:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/utf8_character_literals.md b/lang/cpp17/utf8_character_literals.md
index 575e6af92..7c93dac3e 100644
--- a/lang/cpp17/utf8_character_literals.md
+++ b/lang/cpp17/utf8_character_literals.md
@@ -9,6 +9,7 @@ char s[] = u8&amp;#34;あいうえお&amp;#34;; // OK : C++11以降
 char c = u8&amp;#39;A&amp;#39;; // OK : C++17以降
 ```
 
+C++20ではUTF-8文字リテラルの型が[`char`ではなく`char8_t`になる](/lang/cpp20/char8_t.md)
 
 ## 仕様
 - `u8`プレフィックスが付いた文字リテラルは、`char`文字型の、UTF-8文字リテラルとなる
@@ -20,6 +21,7 @@ char c = u8&amp;#39;A&amp;#39;; // OK : C++17以降
 ## 関連項目
 - [C++11 UTF-8文字列リテラル](/lang/cpp11/utf8_string_literals.md)
 - [C++11 `char16_t`と`char32_t`](/lang/cpp11/char16_32.md)
+- [C++20 UTF-8エンコーディングされた文字の型として`char8_t`を追加](/lang/cpp20/char8_t.md)
 - [ostream `operator&amp;lt;&amp;lt;`](/reference/ostream/basic_ostream/op_ostream_free.md)
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>char16_tとchar32_t -- fix(cpp20/char8_t):  関連項目の追加</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/char16_32.html"/>
      <id>88729bb67cfc32a40bc41aad3f888d34b362bbea:lang/cpp11/char16_32.md</id>
      <updated>2020-05-30T16:31:51+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/char16_32.md b/lang/cpp11/char16_32.md
index b90b22c70..70fbf7195 100644
--- a/lang/cpp11/char16_32.md
+++ b/lang/cpp11/char16_32.md
@@ -130,7 +130,7 @@ int main()
 - [`wstring_convert`](/reference/locale/wstring_convert.md)
 - [C++11 UTF-8文字列リテラル](utf8_string_literals.md)
 - [C++20 UTF-8エンコーディングされた文字の型として`char8_t`を追加](/lang/cpp20/char8_t.md)
-
+- [ostream `operator&amp;lt;&amp;lt;`](/reference/ostream/basic_ostream/op_ostream_free.md)
 
 ## 参照
 - [WG14 N1040 Extensions for the programming language C to support new character data types](http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1040.pdf)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>UTF-8文字列リテラル -- fix(cpp20/char8_t):  関連項目の追加</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/utf8_string_literals.html"/>
      <id>88729bb67cfc32a40bc41aad3f888d34b362bbea:lang/cpp11/utf8_string_literals.md</id>
      <updated>2020-05-30T16:31:51+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/utf8_string_literals.md b/lang/cpp11/utf8_string_literals.md
index 51ea16936..d0963ab58 100644
--- a/lang/cpp11/utf8_string_literals.md
+++ b/lang/cpp11/utf8_string_literals.md
@@ -65,7 +65,7 @@ int main()
 - [C++11 `char16_t`と`char32_t`](char16_32.md)
 - [C++17 UTF-8文字リテラル](/lang/cpp17/utf8_character_literals.md)
 - [C++20 UTF-8エンコーディングされた文字の型として`char8_t`を追加](/lang/cpp20/char8_t.md)
-
+- [ostream `operator&amp;lt;&amp;lt;`](/reference/ostream/basic_ostream/op_ostream_free.md)
 
 ## 参照
 - [N2159 UTF-8 String Literals](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2159.html)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>UTF-8文字リテラル -- fix(cpp20/char8_t):  関連項目の追加</title>
      <link href="https://cpprefjp.github.io/lang/cpp17/utf8_character_literals.html"/>
      <id>88729bb67cfc32a40bc41aad3f888d34b362bbea:lang/cpp17/utf8_character_literals.md</id>
      <updated>2020-05-30T16:31:51+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp17/utf8_character_literals.md b/lang/cpp17/utf8_character_literals.md
index 6aede84e1..575e6af92 100644
--- a/lang/cpp17/utf8_character_literals.md
+++ b/lang/cpp17/utf8_character_literals.md
@@ -20,6 +20,7 @@ char c = u8&amp;#39;A&amp;#39;; // OK : C++17以降
 ## 関連項目
 - [C++11 UTF-8文字列リテラル](/lang/cpp11/utf8_string_literals.md)
 - [C++11 `char16_t`と`char32_t`](/lang/cpp11/char16_32.md)
+- [ostream `operator&amp;lt;&amp;lt;`](/reference/ostream/basic_ostream/op_ostream_free.md)
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
</feed>
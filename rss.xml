<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="http://cpprefjp.github.io" />
  <updated>2015-10-02T12:43:51.876882</updated>
  <id>813b0b13-1c8a-4b2b-88c9-c7f8142e42b7</id>

  
    <entry>
      <title>current_exception -- current_exception : exception_ptrへのリンクを追加</title>
      <link href="http://cpprefjp.github.io/reference/exception/current_exception.html"/>
      <id>ef3584c90837f677e36e7c69d3182a9e1b8bf9d0:reference/exception/current_exception.md</id>
      <updated>2015-10-02 12:43:40 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;function&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;exception&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;current_exception&lt;span class=&#34;cpp cpp11&#34; title=&#34;C++11で追加&#34;&gt;(C++11)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;a href=&#34;http://cpprefjp.github.io/reference/exception/exception_ptr.html&#34;&gt;exception_ptr&lt;/a&gt; current_exception() noexcept;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;現在処理中の例外オブジェクトを指す&lt;a href=&#34;http://cpprefjp.github.io/reference/exception/exception_ptr.html&#34;&gt;&lt;code&gt;exception_ptr&lt;/code&gt;&lt;/a&gt;を取得する。&lt;/p&gt;
&lt;h2&gt;戻り値&lt;/h2&gt;
&lt;p&gt;現在処理中の例外オブジェクトを指す&lt;a href=&#34;http://cpprefjp.github.io/reference/exception/exception_ptr.html&#34;&gt;&lt;code&gt;exception_ptr&lt;/code&gt;&lt;/a&gt;を返す。&lt;/p&gt;
&lt;p&gt;処理中の例外オブジェクトがない場合は、ヌルを指す&lt;a href=&#34;http://cpprefjp.github.io/reference/exception/exception_ptr.html&#34;&gt;&lt;code&gt;exception_ptr&lt;/code&gt;&lt;/a&gt;を返す。&lt;/p&gt;
&lt;h2&gt;例外&lt;/h2&gt;
&lt;p&gt;投げない&lt;/p&gt;
&lt;h2&gt;備考&lt;/h2&gt;
&lt;p&gt;この関数は、&lt;code&gt;catch&lt;/code&gt;節で使用すれば、処理中の例外オブジェクトへの例外ポインタを取得できる。&lt;/p&gt;
&lt;p&gt;ただし、例外送出によるスタック巻き戻し中は、取得できないので注意。(スタック巻き戻し中とは、&lt;code&gt;try&lt;/code&gt;ブロック中で定義されたオブジェクトのデストラクタのこと)&lt;/p&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;exception&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;stdexcept&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;exception_ptr ep;

  try {
    &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;throw&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;runtime_error(&lt;span style=&#34;color: #BA2121&#34;&gt;&#34;error!&#34;&lt;/span&gt;);
  }
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;catch&lt;/span&gt; (...) {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;catch&#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
    ep &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;current_exception&lt;/span&gt;(); &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 処理中の例外ポインタを取得&lt;/span&gt;
  }

  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;if&lt;/span&gt; (ep) {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;rethrow&#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;rethrow_exception(ep); &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 再スロー&lt;/span&gt;
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力例&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;catch
rethrow

This application has requested the Runtime to terminate it in an unusual way.
Please contact the application&#39;s support team for more information.
terminate called after throwing an instance of &#39;std::runtime_error&#39;
  what():  error!
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++11 mode&lt;/a&gt;: 4.6.1&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt; ??&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2179.html&#34; target=&#34;_blank&#34;&gt;N2179 Language Support for Transporting Exceptions between Threads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/28267484/can-i-use-stdcurrent-exception-during-stack-unwinding&#34; target=&#34;_blank&#34;&gt;Can I use &lt;code&gt;std::current_exception&lt;/code&gt; during stack unwinding? - StackOverflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>bad_exception -- bad_exception : 見た目を整理</title>
      <link href="http://cpprefjp.github.io/reference/exception/bad_exception.html"/>
      <id>dee022a60909800370392ca63d1928a01d6dd6aa:reference/exception/bad_exception.md</id>
      <updated>2015-10-02 12:42:12 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;class&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;exception&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;bad_exception&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;bad_exception&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;public&lt;/span&gt; &lt;a href=&#34;http://cpprefjp.github.io/reference/exception/exception.html&#34;&gt;exception&lt;/a&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;bad_exception&lt;/code&gt;クラスは、関数に対して例外の型を制限し、指定外の型を送出した場合に発生する例外である。&lt;/p&gt;
&lt;p&gt;このクラスの例外オブジェクトは自動で送出されるわけではなく、ユーザー自身が&lt;a href=&#34;http://cpprefjp.github.io/reference/exception/set_unexpected.html&#34;&gt;&lt;code&gt;unexpected_handler&lt;/code&gt;&lt;/a&gt;を指定してその中で例外オブジェクトの再送出を行うことで、&lt;code&gt;bad_exception&lt;/code&gt;例外が送出される。&lt;/p&gt;
&lt;h2&gt;メンバ関数&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;bad_exception() noexcept;&lt;/code&gt; &lt;code&gt;bad_exception(const bad_exception&amp;amp;) noexcept;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;コンストラクタ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;virtual ~bad_exception() = default;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;デストラクタ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;bad_exception&amp;amp; operator=(const bad_exception&amp;amp;) noexcept;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;代入演算子&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;virtual const char* what() const noexcept;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;実装定義のエラー内容を取得する&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;exception&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;stdexcept&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;user_unexpected&lt;/span&gt;()
{
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;throw&lt;/span&gt;;
}

&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;not_runtime_error_throw&lt;/span&gt;() &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;throw&lt;/span&gt;(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;runtime_error, std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;bad_exception&lt;/span&gt;)
{
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;throw&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;invalid_argument( &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;throw invalid_argument.&#34;&lt;/span&gt; );
}

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;set_unexpected(user_unexpected);

  &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// std::runtime_error以外を送出&lt;/span&gt;
  try {
    not_runtime_error_throw();
  }
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;catch&lt;/span&gt; (std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;runtime_error&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; ex) {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;caught: &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; ex.what() &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
  }
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;catch&lt;/span&gt; (std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;bad_exception&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; ex) {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;caught: &lt;span style=&#34;color:#ff0000&#34;&gt;bad_exception&lt;/span&gt;.&#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;caught: bad_exception.
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;参照&lt;/h2&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>event -- ios_base::event : インデントを4スペースから2スペースに修正</title>
      <link href="http://cpprefjp.github.io/reference/ios/ios_base/type-event.html"/>
      <id>56097a4883b7f3cc6cdbaa05e43e56eec16de833:reference/ios/ios_base/type-event.md</id>
      <updated>2015-10-02 12:25:22 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;typedef&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;ios&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;&lt;span class=&#34;class&#34; title=&#34;class ios_base&#34;&gt;ios_base::&lt;/span&gt;event&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;enum&lt;/span&gt; event { erase_event, imbue_event, copyfmt_event };
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;event&lt;/code&gt; は　&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/register_callback.md.nolink&#34;&gt;&lt;code&gt;register_callback&lt;/code&gt;&lt;/a&gt; で登録したコールバック関数を呼び出す際に、当該関数を呼び出すきっかけとなったイベントの種類を表すための列挙型である。&lt;br /&gt;
&lt;code&gt;event&lt;/code&gt; には以下の表のような列挙子値が存在する。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;列挙子&lt;/th&gt;
&lt;th&gt;発生したイベント&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;erase_event&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base.html&#34;&gt;&lt;code&gt;ios_base&lt;/code&gt;&lt;/a&gt;&lt;code&gt;::&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/op_destructor.md.nolink&#34;&gt;&lt;code&gt;~ios_base&lt;/code&gt;&lt;/a&gt; が呼び出されてオブジェクトの破棄を開始した。または、&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios.html&#34;&gt;&lt;code&gt;basic_ios&lt;/code&gt;&lt;/a&gt;&lt;code&gt;::&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/copyfmt.md.nolink&#34;&gt;&lt;code&gt;copyfmt&lt;/code&gt;&lt;/a&gt; が呼び出された。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;imbue_event&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base.html&#34;&gt;&lt;code&gt;ios_base&lt;/code&gt;&lt;/a&gt;&lt;code&gt;::&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/imbue.md.nolink&#34;&gt;&lt;code&gt;imbue&lt;/code&gt;&lt;/a&gt; が呼び出されて &lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base.html&#34;&gt;&lt;code&gt;ios_base&lt;/code&gt;&lt;/a&gt;&lt;code&gt;::&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/getloc.md.nolink&#34;&gt;&lt;code&gt;getloc&lt;/code&gt;&lt;/a&gt; が新しく設定されたロケールオブジェクトを返すようになった。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;copyfmt_event&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios.html&#34;&gt;&lt;code&gt;basic_ios&lt;/code&gt;&lt;/a&gt;&lt;code&gt;::&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios/copyfmt.md.nolink&#34;&gt;&lt;code&gt;copyfmt&lt;/code&gt;&lt;/a&gt; が呼び出されて &lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios.html&#34;&gt;&lt;code&gt;basic_ios&lt;/code&gt;&lt;/a&gt;&lt;code&gt;::&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios/exceptions.md.nolink&#34;&gt;&lt;code&gt;exceptions&lt;/code&gt;&lt;/a&gt; 以外の設定がコピーされた。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;なお、各イベントが発生する正確なタイミングは、それぞれの関数を参照。&lt;/p&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream.html&#34;&gt;iostream&lt;/a&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;&lt;a href=&#34;http://cpprefjp.github.io/reference/sstream.html&#34;&gt;sstream&lt;/a&gt;&amp;gt;&lt;/span&gt;

std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/sstream/basic_stringstream.md.nolink&#34;&gt;stringstream&lt;/a&gt; ss1;

&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;f&lt;/span&gt;(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base.html&#34;&gt;ios_base&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;event&lt;/span&gt; e, std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base.html&#34;&gt;ios_base&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; str, &lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; index)
{
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;switch&lt;/span&gt; (e) {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;case&lt;/span&gt; std:&lt;span style=&#34;color: #666666&#34;&gt;:&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base.html&#34;&gt;ios_base&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;erase_event&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;:&lt;/span&gt;
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;span style=&#34;color:#ff0000&#34;&gt;event&lt;/span&gt; = &lt;span style=&#34;color:#ff0000&#34;&gt;erase_event&lt;/span&gt;, &#34;&lt;/span&gt;;
    &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;break&lt;/span&gt;;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;case&lt;/span&gt; std:&lt;span style=&#34;color: #666666&#34;&gt;:&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base.html&#34;&gt;ios_base&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;copyfmt_event&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;:&lt;/span&gt;
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;span style=&#34;color:#ff0000&#34;&gt;event&lt;/span&gt; = &lt;span style=&#34;color:#ff0000&#34;&gt;copyfmt_event&lt;/span&gt;, &#34;&lt;/span&gt;;
    &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;break&lt;/span&gt;;
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;case&lt;/span&gt; std:&lt;span style=&#34;color: #666666&#34;&gt;:&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base.html&#34;&gt;ios_base&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;imbue_event&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;:&lt;/span&gt;
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;span style=&#34;color:#ff0000&#34;&gt;event&lt;/span&gt; = &lt;span style=&#34;color:#ff0000&#34;&gt;imbue_event&lt;/span&gt;, &#34;&lt;/span&gt;;
    &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;break&lt;/span&gt;;
  }
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;str = &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; (&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt;str &lt;span style=&#34;color: #666666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt;ss1 &lt;span style=&#34;color: #666666&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;ss1&#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;ss2&#34;&lt;/span&gt;) &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;, index = &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; index &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;, getloc.name = &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; str.getloc().name() &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#39;\n&#39;&lt;/span&gt;;
}

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  ss1.&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/register_callback.md.nolink&#34;&gt;register_callback&lt;/a&gt;(f, &lt;span style=&#34;color: #666666&#34;&gt;0&lt;/span&gt;);
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale.html&#34;&gt;locale&lt;/a&gt; l(&lt;span style=&#34;color: #BA2121&#34;&gt;&#34;en_US.UTF-8&#34;&lt;/span&gt;);

  {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/sstream/basic_stringstream.md.nolink&#34;&gt;stringstream&lt;/a&gt; ss2;
    ss2.&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/register_callback.md.nolink&#34;&gt;register_callback&lt;/a&gt;(f, &lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;);

    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/imbue.md.nolink&#34;&gt;imbue&lt;/a&gt; start&lt;/span&gt;&lt;span style=&#34;color: #BB6622; font-weight: bold&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;/span&gt;;
    ss2.&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/imbue.md.nolink&#34;&gt;imbue&lt;/a&gt;(l);
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/imbue.md.nolink&#34;&gt;imbue&lt;/a&gt; end&lt;/span&gt;&lt;span style=&#34;color: #BB6622; font-weight: bold&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;/span&gt;;

    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios/copyfmt.md.nolink&#34;&gt;copyfmt&lt;/a&gt; start&lt;/span&gt;&lt;span style=&#34;color: #BB6622; font-weight: bold&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;/span&gt;;
    ss2.&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios/copyfmt.md.nolink&#34;&gt;copyfmt&lt;/a&gt;(ss1);
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios/copyfmt.md.nolink&#34;&gt;copyfmt&lt;/a&gt; end&lt;/span&gt;&lt;span style=&#34;color: #BB6622; font-weight: bold&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;/span&gt;;
  }
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;block end&lt;/span&gt;&lt;span style=&#34;color: #BB6622; font-weight: bold&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;imbue start
event = imbue_event, str = ss2, index = 1, getloc.name = en_US.UTF-8
imbue end
copyfmt start
event = erase_event, str = ss2, index = 1, getloc.name = en_US.UTF-8
event = copyfmt_event, str = ss2, index = 0, getloc.name = C
copyfmt end
event = erase_event, str = ss2, index = 0, getloc.name = C
block end
event = erase_event, str = ss1, index = 0, getloc.name = C
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h2&gt;言語&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++98&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: 3.0, 3.1, 3.2, 3.3, 3.4, 3.5.0, 3.6.0, 3.7.0, 3.8.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: 4.3.6, 4.4.7, 4.5.4, 4.6.4, 4.7.3, 4.8.1, 4.8.2, 4.9.0, 4.9.1, 4.9.2, 5.1.0, 5.2.0, 6.0.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: ??&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base.html&#34;&gt;&lt;code&gt;ios_base&lt;/code&gt;&lt;/a&gt;&lt;code&gt;::&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/register_callback.md.nolink&#34;&gt;&lt;code&gt;register_callback&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base.html&#34;&gt;&lt;code&gt;ios_base&lt;/code&gt;&lt;/a&gt;&lt;code&gt;::&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/op_destructor.md.nolink&#34;&gt;&lt;code&gt;~ios_base&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base.html&#34;&gt;&lt;code&gt;ios_base&lt;/code&gt;&lt;/a&gt;&lt;code&gt;::&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/imbue.md.nolink&#34;&gt;&lt;code&gt;imbue&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base.html&#34;&gt;&lt;code&gt;ios_base&lt;/code&gt;&lt;/a&gt;&lt;code&gt;::&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/getloc.md.nolink&#34;&gt;&lt;code&gt;getloc&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios.html&#34;&gt;&lt;code&gt;basic_ios&lt;/code&gt;&lt;/a&gt;&lt;code&gt;::&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios/copyfmt.md.nolink&#34;&gt;&lt;code&gt;copyfmt&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios.html&#34;&gt;&lt;code&gt;basic_ios&lt;/code&gt;&lt;/a&gt;&lt;code&gt;::&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios/exceptions.md.nolink&#34;&gt;&lt;code&gt;exceptions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ios_base -- ios_base::event を追加</title>
      <link href="http://cpprefjp.github.io/reference/ios/ios_base.html"/>
      <id>286963f9c40c3899ff8a25c20d9a3f5786998bf9:reference/ios/ios_base.md</id>
      <updated>2015-10-02 11:56:04 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;class&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;ios&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;ios_base&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;ios_base&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;ios_baseは入出力クラスの基底となるクラスである。すべてのクラスで共通の処理や定数などが定義されている。&lt;/p&gt;
&lt;h2&gt;メンバ関数&lt;/h2&gt;
&lt;h3&gt;構築・破棄&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;(constructor)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;コンストラクタ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;(destructor)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;デストラクタ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;なお、コピーコンストラクタとコピー代入演算子はdelete定義されている。
C++03では、delete定義の代わりに&lt;code&gt;private&lt;/code&gt;で宣言のみされていた。&lt;/p&gt;
&lt;h3&gt;書式化&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;flags&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;書式フラグの取得・設定&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;setf&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;書式フラグの設定&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;unsetf&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;書式フラグの解除&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;precision&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;浮動書数点数精度の取得・設定&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;width&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;フィールド幅の取得・設定&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;ロケール&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;imbue&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ロケールの設定&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;getloc&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ロケールの取得&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;記憶域&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;iword&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;整数値の記憶域への参照の取得&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pword&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ポインタ値の記憶域への参照の取得&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;コールバック&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;register_callback&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;コールバックの登録&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;静的メンバ関数&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;sync_with_stdio&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;stdioとの同期の設定&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/xalloc.html&#34;&gt;&lt;code&gt;xalloc&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;私用記憶域を予約する&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;メンバ型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;failure&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;エラー&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/type-fmtflags.html&#34;&gt;&lt;code&gt;fmtflags&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;書式フラグ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/type-iostate.html&#34;&gt;&lt;code&gt;iostate&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;入出力オブジェクトの状態&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/type-openmode.html&#34;&gt;&lt;code&gt;openmode&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ストリームを開く際のモード&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/type-seekdir.html&#34;&gt;&lt;code&gt;seekdir&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;シーク時の起点の指定&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Init&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;標準入出力オブジェクトの初期化・後処理の管理&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/type-event.html&#34;&gt;&lt;code&gt;event&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コールバックイベントの種類&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;event_callback&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;コールバック関数&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios.html&#34;&gt;&lt;code&gt;basic_ios&lt;/code&gt;&lt;/a&gt;: ios_baseから派生するクラステンプレート&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Mitsuru Kariya</name>
        <email>kariya_mitsuru@hotmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>event -- ios_base::event を追加</title>
      <link href="http://cpprefjp.github.io/reference/ios/ios_base/type-event.html"/>
      <id>286963f9c40c3899ff8a25c20d9a3f5786998bf9:reference/ios/ios_base/type-event.md</id>
      <updated>2015-10-02 11:56:04 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;typedef&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;ios&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;&lt;span class=&#34;class&#34; title=&#34;class ios_base&#34;&gt;ios_base::&lt;/span&gt;event&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;enum&lt;/span&gt; event { erase_event, imbue_event, copyfmt_event };
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;event&lt;/code&gt; は　&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/register_callback.md.nolink&#34;&gt;&lt;code&gt;register_callback&lt;/code&gt;&lt;/a&gt; で登録したコールバック関数を呼び出す際に、当該関数を呼び出すきっかけとなったイベントの種類を表すための列挙型である。&lt;br /&gt;
&lt;code&gt;event&lt;/code&gt; には以下の表のような列挙子値が存在する。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;列挙子&lt;/th&gt;
&lt;th&gt;発生したイベント&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;erase_event&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base.html&#34;&gt;&lt;code&gt;ios_base&lt;/code&gt;&lt;/a&gt;&lt;code&gt;::&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/op_destructor.md.nolink&#34;&gt;&lt;code&gt;~ios_base&lt;/code&gt;&lt;/a&gt; が呼び出されてオブジェクトの破棄を開始した。または、&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios.html&#34;&gt;&lt;code&gt;basic_ios&lt;/code&gt;&lt;/a&gt;&lt;code&gt;::&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/copyfmt.md.nolink&#34;&gt;&lt;code&gt;copyfmt&lt;/code&gt;&lt;/a&gt; が呼び出された。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;imbue_event&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base.html&#34;&gt;&lt;code&gt;ios_base&lt;/code&gt;&lt;/a&gt;&lt;code&gt;::&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/imbue.md.nolink&#34;&gt;&lt;code&gt;imbue&lt;/code&gt;&lt;/a&gt; が呼び出されて &lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base.html&#34;&gt;&lt;code&gt;ios_base&lt;/code&gt;&lt;/a&gt;&lt;code&gt;::&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/getloc.md.nolink&#34;&gt;&lt;code&gt;getloc&lt;/code&gt;&lt;/a&gt; が新しく設定されたロケールオブジェクトを返すようになった。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;copyfmt_event&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios.html&#34;&gt;&lt;code&gt;basic_ios&lt;/code&gt;&lt;/a&gt;&lt;code&gt;::&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios/copyfmt.md.nolink&#34;&gt;&lt;code&gt;copyfmt&lt;/code&gt;&lt;/a&gt; が呼び出されて &lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios.html&#34;&gt;&lt;code&gt;basic_ios&lt;/code&gt;&lt;/a&gt;&lt;code&gt;::&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios/exceptions.md.nolink&#34;&gt;&lt;code&gt;exceptions&lt;/code&gt;&lt;/a&gt; 以外の設定がコピーされた。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;なお、各イベントが発生する正確なタイミングは、それぞれの関数を参照。&lt;/p&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream.html&#34;&gt;iostream&lt;/a&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;&lt;a href=&#34;http://cpprefjp.github.io/reference/sstream.html&#34;&gt;sstream&lt;/a&gt;&amp;gt;&lt;/span&gt;

std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/sstream/basic_stringstream.md.nolink&#34;&gt;stringstream&lt;/a&gt; ss1;

&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;f&lt;/span&gt;(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base.html&#34;&gt;ios_base&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;event&lt;/span&gt; e, std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base.html&#34;&gt;ios_base&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; str, &lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; index)
{
    &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;switch&lt;/span&gt; (e) {
    &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;case&lt;/span&gt; std:&lt;span style=&#34;color: #666666&#34;&gt;:&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base.html&#34;&gt;ios_base&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;erase_event&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;:&lt;/span&gt;
        std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;span style=&#34;color:#ff0000&#34;&gt;event&lt;/span&gt; = &lt;span style=&#34;color:#ff0000&#34;&gt;erase_event&lt;/span&gt;, &#34;&lt;/span&gt;;
        &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;break&lt;/span&gt;;
    &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;case&lt;/span&gt; std:&lt;span style=&#34;color: #666666&#34;&gt;:&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base.html&#34;&gt;ios_base&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;copyfmt_event&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;:&lt;/span&gt;
        std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;span style=&#34;color:#ff0000&#34;&gt;event&lt;/span&gt; = &lt;span style=&#34;color:#ff0000&#34;&gt;copyfmt_event&lt;/span&gt;, &#34;&lt;/span&gt;;
        &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;break&lt;/span&gt;;
    &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;case&lt;/span&gt; std:&lt;span style=&#34;color: #666666&#34;&gt;:&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base.html&#34;&gt;ios_base&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;imbue_event&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;:&lt;/span&gt;
        std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;span style=&#34;color:#ff0000&#34;&gt;event&lt;/span&gt; = &lt;span style=&#34;color:#ff0000&#34;&gt;imbue_event&lt;/span&gt;, &#34;&lt;/span&gt;;
        &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;break&lt;/span&gt;;
    }
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;str = &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; (&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt;str &lt;span style=&#34;color: #666666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt;ss1 &lt;span style=&#34;color: #666666&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;ss1&#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;ss2&#34;&lt;/span&gt;) &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;, index = &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; index &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;, getloc.name = &#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; str.getloc().name() &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#39;\n&#39;&lt;/span&gt;;
}

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
    ss1.&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/register_callback.md.nolink&#34;&gt;register_callback&lt;/a&gt;(f, &lt;span style=&#34;color: #666666&#34;&gt;0&lt;/span&gt;);
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale.html&#34;&gt;locale&lt;/a&gt; l(&lt;span style=&#34;color: #BA2121&#34;&gt;&#34;en_US.UTF-8&#34;&lt;/span&gt;);

    {
        std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/sstream/basic_stringstream.md.nolink&#34;&gt;stringstream&lt;/a&gt; ss2;
        ss2.&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/register_callback.md.nolink&#34;&gt;register_callback&lt;/a&gt;(f, &lt;span style=&#34;color: #666666&#34;&gt;1&lt;/span&gt;);

        std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/imbue.md.nolink&#34;&gt;imbue&lt;/a&gt; start&lt;/span&gt;&lt;span style=&#34;color: #BB6622; font-weight: bold&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;/span&gt;;
        ss2.&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/imbue.md.nolink&#34;&gt;imbue&lt;/a&gt;(l);
        std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/imbue.md.nolink&#34;&gt;imbue&lt;/a&gt; end&lt;/span&gt;&lt;span style=&#34;color: #BB6622; font-weight: bold&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;/span&gt;;

        std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios/copyfmt.md.nolink&#34;&gt;copyfmt&lt;/a&gt; start&lt;/span&gt;&lt;span style=&#34;color: #BB6622; font-weight: bold&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;/span&gt;;
        ss2.&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios/copyfmt.md.nolink&#34;&gt;copyfmt&lt;/a&gt;(ss1);
        std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios/copyfmt.md.nolink&#34;&gt;copyfmt&lt;/a&gt; end&lt;/span&gt;&lt;span style=&#34;color: #BB6622; font-weight: bold&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;/span&gt;;
    }
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;block end&lt;/span&gt;&lt;span style=&#34;color: #BB6622; font-weight: bold&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&#34;&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;imbue start
event = imbue_event, str = ss2, index = 1, getloc.name = en_US.UTF-8
imbue end
copyfmt start
event = erase_event, str = ss2, index = 1, getloc.name = en_US.UTF-8
event = copyfmt_event, str = ss2, index = 0, getloc.name = C
copyfmt end
event = erase_event, str = ss2, index = 0, getloc.name = C
block end
event = erase_event, str = ss1, index = 0, getloc.name = C
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h2&gt;言語&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++98&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: 3.0, 3.1, 3.2, 3.3, 3.4, 3.5.0, 3.6.0, 3.7.0, 3.8.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: 4.3.6, 4.4.7, 4.5.4, 4.6.4, 4.7.3, 4.8.1, 4.8.2, 4.9.0, 4.9.1, 4.9.2, 5.1.0, 5.2.0, 6.0.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: ??&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base.html&#34;&gt;&lt;code&gt;ios_base&lt;/code&gt;&lt;/a&gt;&lt;code&gt;::&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/register_callback.md.nolink&#34;&gt;&lt;code&gt;register_callback&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base.html&#34;&gt;&lt;code&gt;ios_base&lt;/code&gt;&lt;/a&gt;&lt;code&gt;::&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/op_destructor.md.nolink&#34;&gt;&lt;code&gt;~ios_base&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base.html&#34;&gt;&lt;code&gt;ios_base&lt;/code&gt;&lt;/a&gt;&lt;code&gt;::&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/imbue.md.nolink&#34;&gt;&lt;code&gt;imbue&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base.html&#34;&gt;&lt;code&gt;ios_base&lt;/code&gt;&lt;/a&gt;&lt;code&gt;::&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/getloc.md.nolink&#34;&gt;&lt;code&gt;getloc&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios.html&#34;&gt;&lt;code&gt;basic_ios&lt;/code&gt;&lt;/a&gt;&lt;code&gt;::&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios/copyfmt.md.nolink&#34;&gt;&lt;code&gt;copyfmt&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios.html&#34;&gt;&lt;code&gt;basic_ios&lt;/code&gt;&lt;/a&gt;&lt;code&gt;::&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios/exceptions.md.nolink&#34;&gt;&lt;code&gt;exceptions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Mitsuru Kariya</name>
        <email>kariya_mitsuru@hotmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>quick_exit -- quick_exit : 用途の文章がうまく締まっていなかったので書き足した。</title>
      <link href="http://cpprefjp.github.io/reference/cstdlib/quick_exit.html"/>
      <id>276c3fca8afd5f53bd0658aa709df308c02ad366:reference/cstdlib/quick_exit.md</id>
      <updated>2015-10-02 00:51:41 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;function&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;cstdlib&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;quick_exit&lt;span class=&#34;cpp cpp11&#34; title=&#34;C++11で追加&#34;&gt;(C++11)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  [[noreturn]] &lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; quick_exit(&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; status) noexcept;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;後処理をせずに、プログラムを終了させる。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdlib/exit.html&#34;&gt;&lt;code&gt;exit()&lt;/code&gt;&lt;/a&gt;関数は、オブジェクトのデストラクタを呼び出して破棄してからプログラムを終了させるが、この関数はその破棄処理を行わずに、プログラムを終了させる。これは、リソースの破棄を、OSに任せることを意味する。&lt;/p&gt;
&lt;p&gt;この関数の主な用途は、マルチスレッドプログラムの同期をキャンセルしてプログラムを終了させる、というものである。たとえば、ユーザーが作成したスレッドクラスのデストラクタが、スレッド終了まで待機するものだったとしたら、デストラクタを実行する&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdlib/exit.html&#34;&gt;&lt;code&gt;exit()&lt;/code&gt;&lt;/a&gt;関数では、スレッドが終了するまで、プロセスを終了できない。そういった状況でこの関数を使用することにより、プロセスの終了を阻害するような破棄処理をOSに任せて、即座にプロセスを終了させられる。&lt;/p&gt;
&lt;p&gt;パラメータとして渡された&lt;code&gt;status&lt;/code&gt;は、プログラムの終了コードとして使用される。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;プログラムを正常終了させたい場合は、&lt;code&gt;0&lt;/code&gt;もしくは&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdlib/exit_success.html&#34;&gt;&lt;code&gt;EXIT_SUCCESS&lt;/code&gt;&lt;/a&gt;をパラメータ&lt;code&gt;status&lt;/code&gt;に設定する。&lt;/li&gt;
&lt;li&gt;プログラムを異常終了させたい場合は、&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdlib/exit_failure.html&#34;&gt;&lt;code&gt;EXIT_FAILURE&lt;/code&gt;&lt;/a&gt;をパラメータ&lt;code&gt;status&lt;/code&gt;に設定する。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;効果&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdlib/at_quick_exit.html&#34;&gt;&lt;code&gt;at_quick_exit()&lt;/code&gt;&lt;/a&gt;関数で登録された関数が、逆順で呼び出される。&lt;ul&gt;
&lt;li&gt;登録された関数で例外が送出された場合、&lt;a href=&#34;http://cpprefjp.github.io/reference/exception/terminate.html&#34;&gt;&lt;code&gt;std::terminate()&lt;/code&gt;&lt;/a&gt;関数が呼び出され、プログラムが異常終了する。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;この関数を呼び出したときに生存しているオブジェクトは、破棄されない。&lt;/li&gt;
&lt;li&gt;Cストリームのバッファはフラッシュされない。&lt;/li&gt;
&lt;li&gt;登録された関数が呼び出されたあと、&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdlib/exit_.html&#34;&gt;&lt;code&gt;_Exit&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(status)&lt;/code&gt;を呼び出す。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;戻り値&lt;/h2&gt;
&lt;p&gt;この関数は決して返らない。&lt;/p&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;cstdlib&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;f&lt;/span&gt;()
{
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;quick_exit(&lt;span style=&#34;color: #666666&#34;&gt;0&lt;/span&gt;); &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// プログラムを正常終了させる&lt;/span&gt;
}

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  f();
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang, C++11 mode&lt;/a&gt;: 3.4&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++11 mode&lt;/a&gt;: 4.8&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: 14.0&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;関連項目&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdlib/at_quick_exit.html&#34;&gt;&lt;code&gt;at_quick_exit&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;quick_exit&lt;/code&gt;関数でプログラムが終了するときに呼ばれる関数を登録する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdlib/exit.html&#34;&gt;&lt;code&gt;exit&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;プログラムを終了させる&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2440.htm&#34; target=&#34;_blank&#34;&gt;N2440 Abandoning a Process&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://d.hatena.ne.jp/yohhoy/20120512/p1&#34; target=&#34;_blank&#34;&gt;detachスレッドとプログラム終了処理 - yohhoyの日記&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2024-04-14T15:15:36.756682</updated>
  <id>7047c810-d3ef-4461-84fc-3194b7dcf487</id>

  
    <entry>
      <title>nextafter -- Merge pull request #1266 from yknishidate/master</title>
      <link href="https://cpprefjp.github.io/reference/cmath/nextafter.html"/>
      <id>c18cdd781de7d8c2792f9f24fe83a0931700a6df:reference/cmath/nextafter.md</id>
      <updated>2024-04-11T21:00:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/nextafter.md b/reference/cmath/nextafter.md
index abecec649..f7c91349f 100644
--- a/reference/cmath/nextafter.md
+++ b/reference/cmath/nextafter.md
@@ -61,7 +61,7 @@ namespace std {
 
 
 ## 戻り値
-パラメータ`x`の値をパラメータ`x`の方向に、表現可能な最小の値だけ進めた値を返す。
+パラメータ`x`の値をパラメータ`y`の方向に、表現可能な最小の値だけ進めた値を返す。
 
 `x`と`y`が等値である場合、`y`を返す。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>nextafter -- nextafterの説明を修正</title>
      <link href="https://cpprefjp.github.io/reference/cmath/nextafter.html"/>
      <id>329b44ce48b582b4ca9c35fdb311eaa446be0017:reference/cmath/nextafter.md</id>
      <updated>2024-04-11T08:11:45+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/nextafter.md b/reference/cmath/nextafter.md
index abecec649..f7c91349f 100644
--- a/reference/cmath/nextafter.md
+++ b/reference/cmath/nextafter.md
@@ -61,7 +61,7 @@ namespace std {
 
 
 ## 戻り値
-パラメータ`x`の値をパラメータ`x`の方向に、表現可能な最小の値だけ進めた値を返す。
+パラメータ`x`の値をパラメータ`y`の方向に、表現可能な最小の値だけ進めた値を返す。
 
 `x`と`y`が等値である場合、`y`を返す。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuki Nishidate</name>
        <email>asta18425@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>read -- Add links to basic_istream/read.md</title>
      <link href="https://cpprefjp.github.io/reference/istream/basic_istream/read.html"/>
      <id>02654819aabef357f7e08a1a38297e049613767c:reference/istream/basic_istream/read.md</id>
      <updated>2024-04-07T21:44:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/istream/basic_istream/read.md b/reference/istream/basic_istream/read.md
index 829f0e153..ffd997e0e 100644
--- a/reference/istream/basic_istream/read.md
+++ b/reference/istream/basic_istream/read.md
@@ -15,14 +15,14 @@ basic_istream&amp;lt;CharT, Traits&amp;gt;&amp;amp; read(char_type* s, streamsize n);
 実引数として配列要素へのポインタ`s`とその要素数`n`を受け取る。
 [`get`](get.md)メンバ関数などと異なり、`s`の末尾にヌル文字を書き込む処理がない。
 
-また、`n`文字より少ない段階でEOFに達した場合を入力失敗として扱う（`failbit`を立てる）点も、他の多くのメンバ関数と異なる。
+また、`n`文字より少ない段階でEOFに達した場合を入力失敗として扱う（[`failbit`](../../ios/ios_base/type-iostate.md)を立てる）点も、他の多くのメンバ関数と異なる。
 
 ## 効果
-1. `sentry`オブジェクトを構築する。`sentry`オブジェクトが失敗を示した場合、何もしない。
-1. `good()`メンバ関数を呼び出して`false`であったら、`setstate(failbit)`を呼び出して終了する。
+1. [`sentry`](sentry.md)オブジェクトを構築する。[`sentry`](sentry.md)オブジェクトが失敗を示した場合、何もしない。
+1. [`good`](../../ios/basic_ios/good.md)`()`メンバ関数を呼び出して`false`であったら、[`setstate`](../../ios/basic_ios/setstate.md)`(`[`failbit`](../../ios/ios_base/type-iostate.md)`)`を呼び出して終了する。
 1. 以下のいずれかを満たすまで、文字を入力して書き込む。
     - 実引数で指定された`n`文字まで入力した。
-    - EOFに達した。この場合、`setstate(failbit | eofbit)`を呼び出す。
+    - EOFに達した。この場合、[`setstate`](../../ios/basic_ios/setstate.md)`(`[`failbit`](../../ios/ios_base/type-iostate.md)` | `[`eofbit`](../../ios/ios_base/type-iostate.md)`)`を呼び出す。
 
 ## 戻り値
 `*this`
@@ -84,6 +84,12 @@ basic_istream&amp;lt;CharT, Traits&amp;gt;&amp;amp; read(char_type* s, streamsize n) {
   return *this;
 }
 ```
+* iostate[link ../../ios/ios_base/type-iostate.md]
+* failbit[link ../../ios/ios_base/type-iostate.md]
+* eofbit[link ../../ios/ios_base/type-iostate.md]
+* sentry[link sentry.md]
+* good[link ../../ios/basic_ios/good.md]
+* setstate[link ../../ios/basic_ios/setstate.md]
 
 ## バージョン
 ### 言語
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Shunsuke Shimizu</name>
        <email>grafi@grafi.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>enumerate_view -- Update enumerate_view.md</title>
      <link href="https://cpprefjp.github.io/reference/ranges/enumerate_view.html"/>
      <id>ea628fa7aba80cecce9af40d6ef9da8dbae9e0d6:reference/ranges/enumerate_view.md</id>
      <updated>2024-04-07T19:32:10+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/enumerate_view.md b/reference/ranges/enumerate_view.md
index 9f9682c54..86e2d9003 100644
--- a/reference/ranges/enumerate_view.md
+++ b/reference/ranges/enumerate_view.md
@@ -21,7 +21,7 @@ namespace std::ranges {
 
 `enumerate_view`はインデックスを付ける[`view`](view.md)。
 
-`enumerate_view`の要素は、インデックスと元のRangeの要素からなる[`tuple`](/reference/tuple/tuple.md)である。
+`enumerate_view`の要素は、インデックスと元のRangeの要素からなる[`tuple`](/reference/tuple/tuple.md) ([`tuple`](/reference/tuple/tuple.md)`&amp;lt;`[`range_difference_t`](range_difference_t.md)`&amp;lt;Base&amp;gt;, `[`range_value_t`](range_value_t.md)`&amp;lt;Base&amp;gt;&amp;gt;`)である。
 
 - (1): `enumerate_view`のクラス定義
 - (2): `enumerate_view`を生成するRangeアダプタオブジェクト
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>size -- fix some typo</title>
      <link href="https://cpprefjp.github.io/reference/list/list/size.html"/>
      <id>44ce3c2790c0716902bc77f34948ddea553d4e27:reference/list/list/size.md</id>
      <updated>2024-04-07T18:16:24+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/list/list/size.md b/reference/list/list/size.md
index 0f0b71883..e77b56c23 100644
--- a/reference/list/list/size.md
+++ b/reference/list/list/size.md
@@ -22,7 +22,7 @@ size_type size() const noexcept; // C++11
 
 
 ## 計算量
-- C++03 : 実装依存（多くの実装で定数時間 or　線形時間）
+- C++03 : 実装依存（多くの実装で定数時間 or 線形時間）
 - C++11 : 定数時間
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>splice -- fix some typo</title>
      <link href="https://cpprefjp.github.io/reference/list/list/splice.html"/>
      <id>44ce3c2790c0716902bc77f34948ddea553d4e27:reference/list/list/splice.md</id>
      <updated>2024-04-07T18:16:24+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/list/list/splice.md b/reference/list/list/splice.md
index e58ddeaf2..137fffa8c 100644
--- a/reference/list/list/splice.md
+++ b/reference/list/list/splice.md
@@ -137,7 +137,7 @@ int main()
 
 ## 参照
 - [LWG Issue 250. splicing invalidates iterators](http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#250)
-- [LWG Issue 1133. Does N2844 break current specification of `list::splice`?](http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#250)
+- [LWG Issue 1133. Does N2844 break current specification of `list::splice`?](http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#1133)
 - [N2350 Container insert/erase and iterator constness (Revision 1)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2350.pdf)
 - [LWG Issue 3017. `list` `splice` functions should use `addressof`](https://wg21.cmeerw.net/lwg/issue3017)
 - [LWG Issue 3087. One final `&amp;amp;x` in §[list.ops]](https://wg21.cmeerw.net/lwg/issue3087)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- fix some typo</title>
      <link href="https://cpprefjp.github.io/reference/locale/wstring_convert/op_constructor.html"/>
      <id>44ce3c2790c0716902bc77f34948ddea553d4e27:reference/locale/wstring_convert/op_constructor.md</id>
      <updated>2024-04-07T18:16:24+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/locale/wstring_convert/op_constructor.md b/reference/locale/wstring_convert/op_constructor.md
index 71a93bbf6..be6c8487d 100644
--- a/reference/locale/wstring_convert/op_constructor.md
+++ b/reference/locale/wstring_convert/op_constructor.md
@@ -99,6 +99,6 @@ int main()
 
 
 ## 参照
-- [LWG Issue 2175. `wstring_convert` and `wbuffer_convert` validity](http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#2176)
+- [LWG Issue 2175. `wstring_convert` and `wbuffer_convert` validity](http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#2175)
 - [LWG Issue 2176. Special members for `wstring_convert` and `wbuffer_convert`](http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#2176)
 - [P0935R0 Eradicating unnecessarily explicit default constructors from the standard library](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0935r0.html)
\ No newline at end of file
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>unique_ptr -- fix some typo</title>
      <link href="https://cpprefjp.github.io/reference/memory/unique_ptr.html"/>
      <id>44ce3c2790c0716902bc77f34948ddea553d4e27:reference/memory/unique_ptr.md</id>
      <updated>2024-04-07T18:16:24+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/memory/unique_ptr.md b/reference/memory/unique_ptr.md
index cde23f7d4..237576b9c 100644
--- a/reference/memory/unique_ptr.md
+++ b/reference/memory/unique_ptr.md
@@ -85,9 +85,9 @@ namespace std {
 ## ハッシュサポート
 
 | 名前 | 説明 | 対応バージョン |
-|-----------------------------------------------------------|------------------------------------------|-------|
-| `template &amp;lt;class T&amp;gt; struct hash;`                         | `hash`クラスの先行宣言                   | C++11 |
-| `template &amp;lt;class T, class D&amp;gt; struct hash&amp;lt;unique_ptr&amp;lt;N&amp;gt;&amp;gt;;` | `hash`クラスの`unique_ptr`に対する特殊化 | C++11 |
+|--------------------------------------------------------------|------------------------------------------|-------|
+| `template &amp;lt;class T&amp;gt; struct hash;`                            | `hash`クラスの先行宣言                   | C++11 |
+| `template &amp;lt;class T, class D&amp;gt; struct hash&amp;lt;unique_ptr&amp;lt;T, D&amp;gt;&amp;gt;;` | `hash`クラスの`unique_ptr`に対する特殊化 | C++11 |
 
 
 ## 例
@@ -144,7 +144,7 @@ hoge::~hoge()
 - [C++11 右辺値参照・ムーブセマンティクス](/lang/cpp11/rvalue_ref_and_move_semantics.md)
 - [Rvalue Reference Recommendations for Chapter 20](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2005/n1856.html)
     - `unique_ptr`の追加と`auto_ptr`の非推奨の提案文書。
-- [LWG Issue 673. `unique_ptr` update](http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#672)
+- [LWG Issue 673. `unique_ptr` update](http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#673)
     - `unique_ptr&amp;lt;void, Deleter&amp;gt;`を許可するために、インタフェースを改良した経緯
 - [LWG Issue 762. `std::unique_ptr` requires complete type?](http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#762)
 - [N4089 Safe conversions in `unique_ptr&amp;lt;T[]&amp;gt;`, revision 2](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4089.pdf)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>subspan -- fix some typo</title>
      <link href="https://cpprefjp.github.io/reference/span/span/subspan.html"/>
      <id>44ce3c2790c0716902bc77f34948ddea553d4e27:reference/span/span/subspan.md</id>
      <updated>2024-04-07T18:16:24+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/span/span/subspan.md b/reference/span/span/subspan.md
index e452b4c31..dc501537f 100644
--- a/reference/span/span/subspan.md
+++ b/reference/span/span/subspan.md
@@ -73,7 +73,7 @@ constexpr span&amp;lt;element_type, dynamic_extent&amp;gt;
 int main()
 {
   std::vector&amp;lt;int&amp;gt; v = {1, 2, 3, 4, 5};
-  std::span&amp;lt;int, 5&amp;gt; s = std::span{v};
+  std::span&amp;lt;int&amp;gt; s = std::span{v};
 
   // (1) : テンプレート引数として開始位置と要素数を指定して、要素を取得する。
   // テンプレート内でこのオーバーロードを使用する場合、s.template subspan&amp;lt;2, 3&amp;gt;(); のように、
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>char_traits -- fix some typo</title>
      <link href="https://cpprefjp.github.io/reference/string/char_traits.html"/>
      <id>44ce3c2790c0716902bc77f34948ddea553d4e27:reference/string/char_traits.md</id>
      <updated>2024-04-07T18:16:24+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string/char_traits.md b/reference/string/char_traits.md
index 0771ee496..15f37ddf6 100644
--- a/reference/string/char_traits.md
+++ b/reference/string/char_traits.md
@@ -36,7 +36,7 @@ namespace std {
 | [`find`](char_traits/find.md)                 | 文字列中から特定の値を検索する | |
 | [`move`](char_traits/move.md)                 | 文字列を他のシーケンスにコピーする | |
 | [`copy`](char_traits/copy.md)                 | 文字列を他のシーケンスにコピーする | |
-| [`not_eof`](char_traits/not_eof.md)           | 文字がファイル終端文字(EOF)じゃないかを判定する | |
+| [`not_eof`](char_traits/not_eof.md)           | 文字がファイル終端文字(EOF)ではないかを判定する | |
 | [`to_char_type`](char_traits/to_char_type.md) | 数値を文字に変換する | |
 | [`to_int_type`](char_traits/to_int_type.md)   | 文字を数値に変換する | |
 | [`eq_int_type`](char_traits/eq_int_type.md)   | 数値の等値比較 | |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>not_eof -- fix some typo</title>
      <link href="https://cpprefjp.github.io/reference/string/char_traits/not_eof.html"/>
      <id>44ce3c2790c0716902bc77f34948ddea553d4e27:reference/string/char_traits/not_eof.md</id>
      <updated>2024-04-07T18:16:24+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string/char_traits/not_eof.md b/reference/string/char_traits/not_eof.md
index 380092141..b53c2f1d6 100644
--- a/reference/string/char_traits/not_eof.md
+++ b/reference/string/char_traits/not_eof.md
@@ -10,7 +10,7 @@ static constexpr int_type not_eof(int_type c) noexcept; // C++11
 ```
 
 ## 概要
-文字がファイル終端文字(EOF)じゃないかを判定する。
+文字がファイル終端文字(EOF)ではないかを判定する。
 
 
 ## 戻り値
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>bucket -- fix some typo</title>
      <link href="https://cpprefjp.github.io/reference/unordered_map/unordered_map/bucket.html"/>
      <id>44ce3c2790c0716902bc77f34948ddea553d4e27:reference/unordered_map/unordered_map/bucket.md</id>
      <updated>2024-04-07T18:16:24+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_map/unordered_map/bucket.md b/reference/unordered_map/unordered_map/bucket.md
index 2458b42b5..d3a1535ae 100644
--- a/reference/unordered_map/unordered_map/bucket.md
+++ b/reference/unordered_map/unordered_map/bucket.md
@@ -68,7 +68,7 @@ int main()
 * um.bucket_count()[link bucket_count.md]
 * um.bucket_size[link bucket_size.md]
 
-### 出力
+### 出力例
 ```
 bucket_count() = 11
 key = E, bucket = 3, bucket_size = 1
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>bucket_size -- fix some typo</title>
      <link href="https://cpprefjp.github.io/reference/unordered_map/unordered_map/bucket_size.html"/>
      <id>44ce3c2790c0716902bc77f34948ddea553d4e27:reference/unordered_map/unordered_map/bucket_size.md</id>
      <updated>2024-04-07T18:16:24+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_map/unordered_map/bucket_size.md b/reference/unordered_map/unordered_map/bucket_size.md
index 39542f16f..c99cef234 100644
--- a/reference/unordered_map/unordered_map/bucket_size.md
+++ b/reference/unordered_map/unordered_map/bucket_size.md
@@ -62,7 +62,7 @@ int main()
 * um.cbegin[link cbegin-size_type.md]
 * um.cend[link cend-size_type.md]
 
-### 出力
+### 出力例
 ```
 bucket_count() = 11
 bucket = 0, bucket_size = 1, keys = { B, }
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>insert_or_assign -- fix some typo</title>
      <link href="https://cpprefjp.github.io/reference/unordered_map/unordered_map/insert_or_assign.html"/>
      <id>44ce3c2790c0716902bc77f34948ddea553d4e27:reference/unordered_map/unordered_map/insert_or_assign.md</id>
      <updated>2024-04-07T18:16:24+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_map/unordered_map/insert_or_assign.md b/reference/unordered_map/unordered_map/insert_or_assign.md
index c5b85144b..e407b3ffb 100644
--- a/reference/unordered_map/unordered_map/insert_or_assign.md
+++ b/reference/unordered_map/unordered_map/insert_or_assign.md
@@ -32,8 +32,8 @@ iterator insert_or_assign(const_iterator hint, key_type&amp;amp;&amp;amp; k, M&amp;amp;&amp;amp; obj);
 
 
 ## 効果
-- (1)、(3) : `Unordered_map` が `k` と同値のキーを持つ要素 `e` を持っている場合、`e.second` に [`forward`](/reference/utility/forward.md)`&amp;lt;M&amp;gt;(obj)` を代入する。そうでなければ、`k`, [`forward`](/reference/utility/forward.md)`&amp;lt;M&amp;gt;(obj)` から構築した `value_type` 型のオブジェクトを挿入する。
-- (2)、(4) : `Unordered_map` が `k` と同値のキーを持つ要素 `e` を持っている場合、`e.second` に [`forward`](/reference/utility/forward.md)`&amp;lt;M&amp;gt;(obj)` を代入する。そうでなければ、[`move`](/reference/utility/move.md)`(k)`, [`forward`](/reference/utility/forward.md)`&amp;lt;M&amp;gt;(obj)` から構築した `value_type` 型のオブジェクトを挿入する。
+- (1)、(3) : `unordered_map` が `k` と同値のキーを持つ要素 `e` を持っている場合、`e.second` に [`forward`](/reference/utility/forward.md)`&amp;lt;M&amp;gt;(obj)` を代入する。そうでなければ、`k`, [`forward`](/reference/utility/forward.md)`&amp;lt;M&amp;gt;(obj)` から構築した `value_type` 型のオブジェクトを挿入する。
+- (2)、(4) : `unordered_map` が `k` と同値のキーを持つ要素 `e` を持っている場合、`e.second` に [`forward`](/reference/utility/forward.md)`&amp;lt;M&amp;gt;(obj)` を代入する。そうでなければ、[`move`](/reference/utility/move.md)`(k)`, [`forward`](/reference/utility/forward.md)`&amp;lt;M&amp;gt;(obj)` から構築した `value_type` 型のオブジェクトを挿入する。
 
 
 ## 戻り値
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>try_emplace -- fix some typo</title>
      <link href="https://cpprefjp.github.io/reference/unordered_map/unordered_map/try_emplace.html"/>
      <id>44ce3c2790c0716902bc77f34948ddea553d4e27:reference/unordered_map/unordered_map/try_emplace.md</id>
      <updated>2024-04-07T18:16:24+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_map/unordered_map/try_emplace.md b/reference/unordered_map/unordered_map/try_emplace.md
index b4308056a..45e7c5254 100644
--- a/reference/unordered_map/unordered_map/try_emplace.md
+++ b/reference/unordered_map/unordered_map/try_emplace.md
@@ -40,8 +40,6 @@ iterator try_emplace(const_iterator hint, key_type&amp;amp;&amp;amp; k, Args&amp;amp;&amp;amp;... args);
 
 
 ## 戻り値
-挿入されたかどうかを示す `bool` と、挿入された要素へのイテレータからなる `pair` を返す。挿入されなかったときは、既存要素へのイテレータを返す。
-
 - (1)、(2) : イテレータと `bool` 値の [`pair`](/reference/utility/pair.md) を返す。
     - 挿入された場合には、`first` に挿入された要素へのイテレータ、`second` に `true` が設定される。
     - 挿入されなかった場合には、`first` に `k` と等価のキーを持つ既存の要素へのイテレータ、`second` に `false` が設定される。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
</feed>
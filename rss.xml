<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2022-05-18T14:45:26.564960</updated>
  <id>13dbc76a-e3ec-4307-bc30-ae1a81ed8503</id>

  
    <entry>
      <title>sample -- Merge pull request #971 from cpprefjp/fix_typos</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_sample.html"/>
      <id>79eb9f8d203f4cabe1d55e4b7c7de3d7491526d1:reference/algorithm/ranges_sample.md</id>
      <updated>2022-05-18T22:54:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_sample.md b/reference/algorithm/ranges_sample.md
index a2fc80cf0..9662516c3 100644
--- a/reference/algorithm/ranges_sample.md
+++ b/reference/algorithm/ranges_sample.md
@@ -3,7 +3,6 @@
 * std::ranges[meta namespace]
 * function template[meta id-type]
 * cpp20[meta cpp]
-* cpp17[meta cpp]
 
 
 ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator-= -- Merge pull request #971 from cpprefjp/fix_typos</title>
      <link href="https://cpprefjp.github.io/reference/complex/complex/op_minus_assign.html"/>
      <id>79eb9f8d203f4cabe1d55e4b7c7de3d7491526d1:reference/complex/complex/op_minus_assign.md</id>
      <updated>2022-05-18T22:54:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/complex/complex/op_minus_assign.md b/reference/complex/complex/op_minus_assign.md
index 37d5209ee..e57bdd345 100644
--- a/reference/complex/complex/op_minus_assign.md
+++ b/reference/complex/complex/op_minus_assign.md
@@ -6,7 +6,7 @@
 
 ```cpp
 complex&amp;lt;T&amp;gt;&amp;amp; operator-=(const T&amp;amp; rhs);                    // (1) C++03
-constexpr complex&amp;lt;T&amp;gt;&amp;amp; operator-=(const T&amp;amp; rhs);          // (1) C++03
+constexpr complex&amp;lt;T&amp;gt;&amp;amp; operator-=(const T&amp;amp; rhs);          // (1) C++20
 
 template &amp;lt;class X&amp;gt;
 complex&amp;lt;T&amp;gt;&amp;amp; operator-=(const complex&amp;lt;X&amp;gt;&amp;amp; rhs);           // (2) C++03
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator*= -- Merge pull request #971 from cpprefjp/fix_typos</title>
      <link href="https://cpprefjp.github.io/reference/complex/complex/op_multiply_assign.html"/>
      <id>79eb9f8d203f4cabe1d55e4b7c7de3d7491526d1:reference/complex/complex/op_multiply_assign.md</id>
      <updated>2022-05-18T22:54:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/complex/complex/op_multiply_assign.md b/reference/complex/complex/op_multiply_assign.md
index 4eab4313f..24d944638 100644
--- a/reference/complex/complex/op_multiply_assign.md
+++ b/reference/complex/complex/op_multiply_assign.md
@@ -6,7 +6,7 @@
 
 ```cpp
 complex&amp;lt;T&amp;gt;&amp;amp; operator*=(const T&amp;amp; rhs);                    // (1) C++03
-constexpr complex&amp;lt;T&amp;gt;&amp;amp; operator*=(const T&amp;amp; rhs);          // (1) C++03
+constexpr complex&amp;lt;T&amp;gt;&amp;amp; operator*=(const T&amp;amp; rhs);          // (1) C++20
 
 template &amp;lt;class X&amp;gt;
 complex&amp;lt;T&amp;gt;&amp;amp; operator*=(const complex&amp;lt;X&amp;gt;&amp;amp; rhs);           // (2) C++03
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>try_lock_for -- Merge pull request #971 from cpprefjp/fix_typos</title>
      <link href="https://cpprefjp.github.io/reference/shared_mutex/shared_lock/try_lock_for.html"/>
      <id>79eb9f8d203f4cabe1d55e4b7c7de3d7491526d1:reference/shared_mutex/shared_lock/try_lock_for.md</id>
      <updated>2022-05-18T22:54:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/shared_mutex/shared_lock/try_lock_for.md b/reference/shared_mutex/shared_lock/try_lock_for.md
index b040af3a8..e9a110683 100644
--- a/reference/shared_mutex/shared_lock/try_lock_for.md
+++ b/reference/shared_mutex/shared_lock/try_lock_for.md
@@ -64,7 +64,7 @@ int main()
   }
 }
 ```
-* try_lock_for()[color ff0000]
+* try_lock_for[color ff0000]
 * std::shared_timed_mutex[link /reference/shared_mutex/shared_timed_mutex.md]
 * std::defer_lock[link /reference/mutex/defer_lock.md]
 * owns_lock()[link owns_lock.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>try_lock_until -- Merge pull request #971 from cpprefjp/fix_typos</title>
      <link href="https://cpprefjp.github.io/reference/shared_mutex/shared_lock/try_lock_until.html"/>
      <id>79eb9f8d203f4cabe1d55e4b7c7de3d7491526d1:reference/shared_mutex/shared_lock/try_lock_until.md</id>
      <updated>2022-05-18T22:54:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/shared_mutex/shared_lock/try_lock_until.md b/reference/shared_mutex/shared_lock/try_lock_until.md
index 15fc43a46..2eecf04e4 100644
--- a/reference/shared_mutex/shared_lock/try_lock_until.md
+++ b/reference/shared_mutex/shared_lock/try_lock_until.md
@@ -72,7 +72,7 @@ int main()
   }
 }
 ```
-* try_lock_until()[color ff0000]
+* try_lock_until[color ff0000]
 * std::shared_timed_mutex[link /reference/shared_mutex/shared_timed_mutex.md]
 * std::defer_lock[link /reference/mutex/defer_lock.md]
 * owns_lock()[link owns_lock.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator[] -- Merge pull request #971 from cpprefjp/fix_typos</title>
      <link href="https://cpprefjp.github.io/reference/string/basic_string/op_at.html"/>
      <id>79eb9f8d203f4cabe1d55e4b7c7de3d7491526d1:reference/string/basic_string/op_at.md</id>
      <updated>2022-05-18T22:54:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string/basic_string/op_at.md b/reference/string/basic_string/op_at.md
index 677688a51..f8372ada2 100644
--- a/reference/string/basic_string/op_at.md
+++ b/reference/string/basic_string/op_at.md
@@ -5,11 +5,8 @@
 * function[meta id-type]
 
 ```cpp
-const_reference operator[](size_type pos) const;          // (1) C++03
-const_reference operator[](size_type pos) const noexcept; // (1) C++11
-
-reference operator[](size_type pos);                      // (2) C++03
-reference operator[](size_type pos) noexcept;             // (2) C++11
+const_reference operator[](size_type pos) const;
+reference operator[](size_type pos);
 ```
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>vector -- Merge pull request #971 from cpprefjp/fix_typos</title>
      <link href="https://cpprefjp.github.io/reference/vector/vector.html"/>
      <id>79eb9f8d203f4cabe1d55e4b7c7de3d7491526d1:reference/vector/vector.md</id>
      <updated>2022-05-18T22:54:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/vector/vector.md b/reference/vector/vector.md
index 6eaee6041..6eacaa5fa 100644
--- a/reference/vector/vector.md
+++ b/reference/vector/vector.md
@@ -90,7 +90,7 @@ namespace std {
 |-----------------------------------|---------------|-------|
 | [`operator[]`](vector/op_at.md) | 要素アクセス | |
 | [`at`](vector/at.md)            | 要素アクセス | |
-| [`data`](vector/data.md)        | 配列の先頭へのポインタを取得する | C++11 |
+| [`data`](vector/data.md)        | 配列の先頭へのポインタを取得する | |
 | [`front`](vector/front.md)      | 先頭要素への参照を取得する | |
 | [`back`](vector/back.md)        | 末尾要素への参照を取得する | |
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>data -- Merge pull request #971 from cpprefjp/fix_typos</title>
      <link href="https://cpprefjp.github.io/reference/vector/vector/data.html"/>
      <id>79eb9f8d203f4cabe1d55e4b7c7de3d7491526d1:reference/vector/vector/data.md</id>
      <updated>2022-05-18T22:54:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/vector/vector/data.md b/reference/vector/vector/data.md
index ca5e17171..dbec8102b 100644
--- a/reference/vector/vector/data.md
+++ b/reference/vector/vector/data.md
@@ -3,11 +3,13 @@
 * std[meta namespace]
 * vector[meta class]
 * function[meta id-type]
-* cpp11[meta cpp]
 
 ```cpp
-T* data() noexcept;
-const T* data() const noexcept;
+T* data();                      // (1) C++03
+T* data() noexcept;             // (1) C++11
+
+const T* data() const;          // (2) C++03
+const T* data() const noexcept; // (2) C++11
 ```
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator[] -- fix basic_string op_at</title>
      <link href="https://cpprefjp.github.io/reference/string/basic_string/op_at.html"/>
      <id>b515818eaabbd882124c4822914cf793bc8ed3ff:reference/string/basic_string/op_at.md</id>
      <updated>2022-05-18T20:36:29+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string/basic_string/op_at.md b/reference/string/basic_string/op_at.md
index 677688a51..f8372ada2 100644
--- a/reference/string/basic_string/op_at.md
+++ b/reference/string/basic_string/op_at.md
@@ -5,11 +5,8 @@
 * function[meta id-type]
 
 ```cpp
-const_reference operator[](size_type pos) const;          // (1) C++03
-const_reference operator[](size_type pos) const noexcept; // (1) C++11
-
-reference operator[](size_type pos);                      // (2) C++03
-reference operator[](size_type pos) noexcept;             // (2) C++11
+const_reference operator[](size_type pos) const;
+reference operator[](size_type pos);
 ```
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>try_lock_for -- fix shared_lock red highlights</title>
      <link href="https://cpprefjp.github.io/reference/shared_mutex/shared_lock/try_lock_for.html"/>
      <id>8104e0813ddf1655ea6ba5ec1de4e1da1adf8def:reference/shared_mutex/shared_lock/try_lock_for.md</id>
      <updated>2022-05-18T20:31:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/shared_mutex/shared_lock/try_lock_for.md b/reference/shared_mutex/shared_lock/try_lock_for.md
index b040af3a8..e9a110683 100644
--- a/reference/shared_mutex/shared_lock/try_lock_for.md
+++ b/reference/shared_mutex/shared_lock/try_lock_for.md
@@ -64,7 +64,7 @@ int main()
   }
 }
 ```
-* try_lock_for()[color ff0000]
+* try_lock_for[color ff0000]
 * std::shared_timed_mutex[link /reference/shared_mutex/shared_timed_mutex.md]
 * std::defer_lock[link /reference/mutex/defer_lock.md]
 * owns_lock()[link owns_lock.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>try_lock_until -- fix shared_lock red highlights</title>
      <link href="https://cpprefjp.github.io/reference/shared_mutex/shared_lock/try_lock_until.html"/>
      <id>8104e0813ddf1655ea6ba5ec1de4e1da1adf8def:reference/shared_mutex/shared_lock/try_lock_until.md</id>
      <updated>2022-05-18T20:31:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/shared_mutex/shared_lock/try_lock_until.md b/reference/shared_mutex/shared_lock/try_lock_until.md
index 15fc43a46..2eecf04e4 100644
--- a/reference/shared_mutex/shared_lock/try_lock_until.md
+++ b/reference/shared_mutex/shared_lock/try_lock_until.md
@@ -72,7 +72,7 @@ int main()
   }
 }
 ```
-* try_lock_until()[color ff0000]
+* try_lock_until[color ff0000]
 * std::shared_timed_mutex[link /reference/shared_mutex/shared_timed_mutex.md]
 * std::defer_lock[link /reference/mutex/defer_lock.md]
 * owns_lock()[link owns_lock.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator-= -- fix complex</title>
      <link href="https://cpprefjp.github.io/reference/complex/complex/op_minus_assign.html"/>
      <id>1a7633bdc421a7344be029c69d2060f79acf2d6e:reference/complex/complex/op_minus_assign.md</id>
      <updated>2022-05-18T20:26:58+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/complex/complex/op_minus_assign.md b/reference/complex/complex/op_minus_assign.md
index 37d5209ee..e57bdd345 100644
--- a/reference/complex/complex/op_minus_assign.md
+++ b/reference/complex/complex/op_minus_assign.md
@@ -6,7 +6,7 @@
 
 ```cpp
 complex&amp;lt;T&amp;gt;&amp;amp; operator-=(const T&amp;amp; rhs);                    // (1) C++03
-constexpr complex&amp;lt;T&amp;gt;&amp;amp; operator-=(const T&amp;amp; rhs);          // (1) C++03
+constexpr complex&amp;lt;T&amp;gt;&amp;amp; operator-=(const T&amp;amp; rhs);          // (1) C++20
 
 template &amp;lt;class X&amp;gt;
 complex&amp;lt;T&amp;gt;&amp;amp; operator-=(const complex&amp;lt;X&amp;gt;&amp;amp; rhs);           // (2) C++03
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator*= -- fix complex</title>
      <link href="https://cpprefjp.github.io/reference/complex/complex/op_multiply_assign.html"/>
      <id>1a7633bdc421a7344be029c69d2060f79acf2d6e:reference/complex/complex/op_multiply_assign.md</id>
      <updated>2022-05-18T20:26:58+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/complex/complex/op_multiply_assign.md b/reference/complex/complex/op_multiply_assign.md
index 4eab4313f..24d944638 100644
--- a/reference/complex/complex/op_multiply_assign.md
+++ b/reference/complex/complex/op_multiply_assign.md
@@ -6,7 +6,7 @@
 
 ```cpp
 complex&amp;lt;T&amp;gt;&amp;amp; operator*=(const T&amp;amp; rhs);                    // (1) C++03
-constexpr complex&amp;lt;T&amp;gt;&amp;amp; operator*=(const T&amp;amp; rhs);          // (1) C++03
+constexpr complex&amp;lt;T&amp;gt;&amp;amp; operator*=(const T&amp;amp; rhs);          // (1) C++20
 
 template &amp;lt;class X&amp;gt;
 complex&amp;lt;T&amp;gt;&amp;amp; operator*=(const complex&amp;lt;X&amp;gt;&amp;amp; rhs);           // (2) C++03
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sample -- fix reanges_sample in algorithm</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_sample.html"/>
      <id>adfa60958ac46c7e99cf5a0356a219e098f3ace3:reference/algorithm/ranges_sample.md</id>
      <updated>2022-05-18T20:24:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_sample.md b/reference/algorithm/ranges_sample.md
index a2fc80cf0..9662516c3 100644
--- a/reference/algorithm/ranges_sample.md
+++ b/reference/algorithm/ranges_sample.md
@@ -3,7 +3,6 @@
 * std::ranges[meta namespace]
 * function template[meta id-type]
 * cpp20[meta cpp]
-* cpp17[meta cpp]
 
 
 ```cpp
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
</feed>
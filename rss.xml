<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2024-05-14T01:45:46.810292</updated>
  <id>31eff01a-1c26-43da-82dd-a6e42e59b721</id>

  
    <entry>
      <title>print -- print関係の動作確認</title>
      <link href="https://cpprefjp.github.io/reference/ostream/print.html"/>
      <id>d6df9bd69cac139c32c816f9c33389b017405276:reference/ostream/print.md</id>
      <updated>2024-05-14T10:41:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ostream/print.md b/reference/ostream/print.md
index b0fe8d5cf..8b0f87013 100644
--- a/reference/ostream/print.md
+++ b/reference/ostream/print.md
@@ -94,10 +94,10 @@ Hello 42 World
 - C++23
 
 ### 処理系
-- [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [Clang](/implementation.md#clang): 19
+- [GCC](/implementation.md#gcc): 14
 - [ICC](/implementation.md#icc): ??
-- [Visual C++](/implementation.md#visual_cpp): ??
+- [Visual C++](/implementation.md#visual_cpp): 2022 Update 7
 
 
 ## 関連項目
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>println -- print関係の動作確認</title>
      <link href="https://cpprefjp.github.io/reference/ostream/println.html"/>
      <id>d6df9bd69cac139c32c816f9c33389b017405276:reference/ostream/println.md</id>
      <updated>2024-05-14T10:41:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ostream/println.md b/reference/ostream/println.md
index 3b9834ae4..d71760d28 100644
--- a/reference/ostream/println.md
+++ b/reference/ostream/println.md
@@ -62,10 +62,10 @@ Hello 42 World
 - C++23
 
 ### 処理系
-- [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [Clang](/implementation.md#clang): 19
+- [GCC](/implementation.md#gcc): 14
 - [ICC](/implementation.md#icc): ??
-- [Visual C++](/implementation.md#visual_cpp): ??
+- [Visual C++](/implementation.md#visual_cpp): 2022 Update 7
 
 
 ## 関連項目
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>vprint_nonunicode -- print関係の動作確認</title>
      <link href="https://cpprefjp.github.io/reference/ostream/vprint_nonunicode.html"/>
      <id>d6df9bd69cac139c32c816f9c33389b017405276:reference/ostream/vprint_nonunicode.md</id>
      <updated>2024-05-14T10:41:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ostream/vprint_nonunicode.md b/reference/ostream/vprint_nonunicode.md
index a2894b7f5..389bae194 100644
--- a/reference/ostream/vprint_nonunicode.md
+++ b/reference/ostream/vprint_nonunicode.md
@@ -41,10 +41,10 @@ namespace std {
 - C++23
 
 ### 処理系
-- [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [Clang](/implementation.md#clang): 19
+- [GCC](/implementation.md#gcc): 14
 - [ICC](/implementation.md#icc): ??
-- [Visual C++](/implementation.md#visual_cpp): ??
+- [Visual C++](/implementation.md#visual_cpp): 2022 Update 7
 
 
 ## 関連項目
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>vprint_unicode -- print関係の動作確認</title>
      <link href="https://cpprefjp.github.io/reference/ostream/vprint_unicode.html"/>
      <id>d6df9bd69cac139c32c816f9c33389b017405276:reference/ostream/vprint_unicode.md</id>
      <updated>2024-05-14T10:41:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ostream/vprint_unicode.md b/reference/ostream/vprint_unicode.md
index ecc6b6f57..28b93175b 100644
--- a/reference/ostream/vprint_unicode.md
+++ b/reference/ostream/vprint_unicode.md
@@ -53,10 +53,10 @@ namespace std {
 - C++23
 
 ### 処理系
-- [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [Clang](/implementation.md#clang): 19
+- [GCC](/implementation.md#gcc): 14
 - [ICC](/implementation.md#icc): ??
-- [Visual C++](/implementation.md#visual_cpp): ??
+- [Visual C++](/implementation.md#visual_cpp): 2022 Update 7
 
 
 ## 関連項目
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>print -- print関係の動作確認</title>
      <link href="https://cpprefjp.github.io/reference/print/print.html"/>
      <id>d6df9bd69cac139c32c816f9c33389b017405276:reference/print/print.md</id>
      <updated>2024-05-14T10:41:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/print/print.md b/reference/print/print.md
index d4f5dea23..09e971a49 100644
--- a/reference/print/print.md
+++ b/reference/print/print.md
@@ -132,10 +132,10 @@ Hello 42 World
 - C++23
 
 ### 処理系
-- [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [Clang](/implementation.md#clang): 19
+- [GCC](/implementation.md#gcc): 14
 - [ICC](/implementation.md#icc): ??
-- [Visual C++](/implementation.md#visual_cpp): ??
+- [Visual C++](/implementation.md#visual_cpp): 2022 Update 7
 
 
 ## 関連項目
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>println -- print関係の動作確認</title>
      <link href="https://cpprefjp.github.io/reference/print/println.html"/>
      <id>d6df9bd69cac139c32c816f9c33389b017405276:reference/print/println.md</id>
      <updated>2024-05-14T10:41:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/print/println.md b/reference/print/println.md
index 27f0d8dd2..9c005c6f0 100644
--- a/reference/print/println.md
+++ b/reference/print/println.md
@@ -100,10 +100,10 @@ Hello 42 World
 - C++23
 
 ### 処理系
-- [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [Clang](/implementation.md#clang): 19
+- [GCC](/implementation.md#gcc): 14
 - [ICC](/implementation.md#icc): ??
-- [Visual C++](/implementation.md#visual_cpp): ??
+- [Visual C++](/implementation.md#visual_cpp): 2022 Update 7
 
 
 ## 関連項目
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>vprint_nonunicode -- print関係の動作確認</title>
      <link href="https://cpprefjp.github.io/reference/print/vprint_nonunicode.html"/>
      <id>d6df9bd69cac139c32c816f9c33389b017405276:reference/print/vprint_nonunicode.md</id>
      <updated>2024-05-14T10:41:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/print/vprint_nonunicode.md b/reference/print/vprint_nonunicode.md
index d4d6fe31f..2d86cb036 100644
--- a/reference/print/vprint_nonunicode.md
+++ b/reference/print/vprint_nonunicode.md
@@ -51,10 +51,10 @@ namespace std {
 - C++23
 
 ### 処理系
-- [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [Clang](/implementation.md#clang): 19
+- [GCC](/implementation.md#gcc): 14
 - [ICC](/implementation.md#icc): ??
-- [Visual C++](/implementation.md#visual_cpp): ??
+- [Visual C++](/implementation.md#visual_cpp): 2022 Update 7
 
 
 ## 関連項目
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>vprint_unicode -- print関係の動作確認</title>
      <link href="https://cpprefjp.github.io/reference/print/vprint_unicode.html"/>
      <id>d6df9bd69cac139c32c816f9c33389b017405276:reference/print/vprint_unicode.md</id>
      <updated>2024-05-14T10:41:57+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/print/vprint_unicode.md b/reference/print/vprint_unicode.md
index bf5736b92..54d6984d3 100644
--- a/reference/print/vprint_unicode.md
+++ b/reference/print/vprint_unicode.md
@@ -66,10 +66,10 @@ namespace std {
 - C++23
 
 ### 処理系
-- [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [Clang](/implementation.md#clang): 19
+- [GCC](/implementation.md#gcc): 14
 - [ICC](/implementation.md#icc): ??
-- [Visual C++](/implementation.md#visual_cpp): ??
+- [Visual C++](/implementation.md#visual_cpp): 2022 Update 7
 
 
 ## 関連項目
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>stacktrace_entry -- stacktrace_entry : native_handleとoperator boolを追加</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/stacktrace_entry.html"/>
      <id>53ab5e996db66163a11ae4856253a7b8fa51dbec:reference/stacktrace/stacktrace_entry.md</id>
      <updated>2024-05-13T18:57:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/stacktrace_entry.md b/reference/stacktrace/stacktrace_entry.md
index eeb157aa7..8412dcdbc 100644
--- a/reference/stacktrace/stacktrace_entry.md
+++ b/reference/stacktrace/stacktrace_entry.md
@@ -28,8 +28,8 @@ namespace std {
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`native_handle`](stacktrace_entry/native_handle.md.nolink) | ハンドルを取得する | C++23 |
-| [`operator bool`](stacktrace_entry/op_bool.md.nolink) | 空でないかを判定する | C++23 |
+| [`native_handle`](stacktrace_entry/native_handle.md) | ハンドルを取得する | C++23 |
+| [`operator bool`](stacktrace_entry/op_bool.md) | 空でないかを判定する | C++23 |
 
 
 ### 照会
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>native_handle -- stacktrace_entry : native_handleとoperator boolを追加</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/stacktrace_entry/native_handle.html"/>
      <id>53ab5e996db66163a11ae4856253a7b8fa51dbec:reference/stacktrace/stacktrace_entry/native_handle.md</id>
      <updated>2024-05-13T18:57:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/stacktrace_entry/native_handle.md b/reference/stacktrace/stacktrace_entry/native_handle.md
new file mode 100644
index 000000000..d5b7f91cf
--- /dev/null
+++ b/reference/stacktrace/stacktrace_entry/native_handle.md
@@ -0,0 +1,65 @@
+# native_handle
+* stacktrace[meta header]
+* std[meta namespace]
+* stacktrace_entry[meta class]
+* function[meta id-type]
+* cpp23[meta cpp]
+
+```cpp
+constexpr native_handle_type native_handle() const noexcept; // (1) C++23
+```
+
+## 概要
+ハンドルを取得する。
+
+
+## 戻り値
+実装定義のハンドルを返す。
+
+
+## 備考
+- 変更されていない`stacktrace_entry`オブジェクトに対してこの関数を連続して呼び出すと、同じ値が返される
+- GCCでは、libstdc++の内部ライブラリ向けのポインタを整数値型[`std::uintptr_t`](/reference/cstdint/uintptr_t.md)の変換した型になっている
+    - `__glibcxx_backtrace_pcinfo()`など、内部ライブラリ用であるため、ユーザーがハンドルを便利に使えるようにはなっていない
+- MSVCでも内部ライブラリ向けの`void*`型ポインタになっている
+    - こちらも内部ライブラリ用であるため、ユーザーがハンドルを便利に使えるようにはなっていない
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;stacktrace&amp;gt;
+
+void g() {
+  std::stacktrace st = std::stacktrace::current();
+  std::stacktrace_entry entry = st[0];
+
+  std::cout &amp;lt;&amp;lt; entry.native_handle() &amp;lt;&amp;lt; std::endl;
+}
+
+void f() {
+  g();
+}
+
+int main() {
+  f();
+}
+```
+* entry.native_handle()[color ff0000]
+* std::stacktrace[link /reference/stacktrace/basic_stacktrace.md]
+* current[link /reference/stacktrace/basic_stacktrace/current.md]
+
+### 出力例 (GCC)
+```
+4199037
+```
+
+
+## バージョン
+### 言語
+- C++23
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): 12
+- [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator bool -- stacktrace_entry : native_handleとoperator boolを追加</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/stacktrace_entry/op_bool.html"/>
      <id>53ab5e996db66163a11ae4856253a7b8fa51dbec:reference/stacktrace/stacktrace_entry/op_bool.md</id>
      <updated>2024-05-13T18:57:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/stacktrace_entry/op_bool.md b/reference/stacktrace/stacktrace_entry/op_bool.md
new file mode 100644
index 000000000..28a6af0b3
--- /dev/null
+++ b/reference/stacktrace/stacktrace_entry/op_bool.md
@@ -0,0 +1,61 @@
+# operator bool
+* stacktrace[meta header]
+* std[meta namespace]
+* stacktrace_entry[meta class]
+* function[meta id-type]
+* cpp23[meta cpp]
+
+```cpp
+constexpr explicit operator bool() const noexcept; // (1) C++23
+```
+
+## 概要
+`stacktrace_entry`が空でないかを判定する。
+
+
+## 戻り値
+`*this`が空である場合のみ`false`を返す。
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;stacktrace&amp;gt;
+
+void g() {
+  std::stacktrace st = std::stacktrace::current();
+  std::stacktrace_entry entry = st[0];
+
+  if (entry) {
+    std::cout &amp;lt;&amp;lt; &amp;#34;not empty&amp;#34; &amp;lt;&amp;lt; std::endl;
+  }
+  else {
+    std::cout &amp;lt;&amp;lt; &amp;#34;empty&amp;#34; &amp;lt;&amp;lt; std::endl;
+  }
+}
+
+void f() {
+  g();
+}
+
+int main() {
+  f();
+}
+```
+* std::stacktrace[link /reference/stacktrace/basic_stacktrace.md]
+* current[link /reference/stacktrace/basic_stacktrace/current.md]
+
+### 出力
+```
+not empty
+```
+
+
+## バージョン
+### 言語
+- C++23
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): 12
+- [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>description -- コード修飾のミスを修正</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/stacktrace_entry/description.html"/>
      <id>b22d84d393aa1deb84ba6bc3566dbc9cc8c40389:reference/stacktrace/stacktrace_entry/description.md</id>
      <updated>2024-05-13T18:36:43+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/stacktrace_entry/description.md b/reference/stacktrace/stacktrace_entry/description.md
index a23b8ba6a..cdea0fe85 100644
--- a/reference/stacktrace/stacktrace_entry/description.md
+++ b/reference/stacktrace/stacktrace_entry/description.md
@@ -42,7 +42,7 @@ int main() {
   f();
 }
 ```
-* entry.source_file()[color ff0000]
+* entry.description()[color ff0000]
 * std::stacktrace[link /reference/stacktrace/basic_stacktrace.md]
 * current[link /reference/stacktrace/basic_stacktrace/current.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>source_line -- コード修飾のミスを修正</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/stacktrace_entry/source_line.html"/>
      <id>b22d84d393aa1deb84ba6bc3566dbc9cc8c40389:reference/stacktrace/stacktrace_entry/source_line.md</id>
      <updated>2024-05-13T18:36:43+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/stacktrace_entry/source_line.md b/reference/stacktrace/stacktrace_entry/source_line.md
index 0ddcb1d55..c5278df5b 100644
--- a/reference/stacktrace/stacktrace_entry/source_line.md
+++ b/reference/stacktrace/stacktrace_entry/source_line.md
@@ -44,7 +44,7 @@ int main() {
   f();
 }
 ```
-* entry.source_file()[color ff0000]
+* entry.source_line()[color ff0000]
 * std::stacktrace[link /reference/stacktrace/basic_stacktrace.md]
 * current[link /reference/stacktrace/basic_stacktrace/current.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>stacktrace_entry -- stacktrace_entry : description, source_file, source_lineを追加</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/stacktrace_entry.html"/>
      <id>56e4f9b24d73d5d0b111b5a5a6e6768edc5c5d5e:reference/stacktrace/stacktrace_entry.md</id>
      <updated>2024-05-13T18:30:36+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/stacktrace_entry.md b/reference/stacktrace/stacktrace_entry.md
index 70cfb395c..eeb157aa7 100644
--- a/reference/stacktrace/stacktrace_entry.md
+++ b/reference/stacktrace/stacktrace_entry.md
@@ -36,9 +36,9 @@ namespace std {
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`description`](stacktrace_entry/description.md.nolink) | このオブジェクトを説明する文字列を取得する | C++23 |
-| [`source_file`](stacktrace_entry/source_file.md.nolink) | ソースファイル名を取得する | C++23 |
-| [`source_line`](stacktrace_entry/source_line.md.nolink) | 行番号を取得する | C++23 |
+| [`description`](stacktrace_entry/description.md) | このオブジェクトを説明する文字列を取得する | C++23 |
+| [`source_file`](stacktrace_entry/source_file.md) | ソースファイル名を取得する | C++23 |
+| [`source_line`](stacktrace_entry/source_line.md) | 行番号を取得する | C++23 |
 
 
 ## メンバ型
@@ -109,14 +109,14 @@ int main() {
 * std::stacktrace_entry[color ff0000]
 * std::stacktrace[link basic_stacktrace.md]
 * current[link basic_stacktrace/current.md]
-* entry.description()[link stacktrace_entry/description.md.nolink]
-* entry.source_file()[link stacktrace_entry/source_file.md.nolink]
-* entry.source_line()[link stacktrace_entry/source_line.md.nolink]
+* entry.description()[link stacktrace_entry/description.md]
+* entry.source_file()[link stacktrace_entry/source_file.md]
+* entry.source_line()[link stacktrace_entry/source_line.md]
 
-### 出力例
+### 出力例 (GCC)
 ```
-g() at main.cpp:5
-main.cpp
+g()
+/app/example.cpp
 5
 ```
 
@@ -126,5 +126,5 @@ main.cpp
 
 ### 処理系
 - [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
+- [GCC](/implementation.md#gcc): 12
 - [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>description -- stacktrace_entry : description, source_file, source_lineを追加</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/stacktrace_entry/description.html"/>
      <id>56e4f9b24d73d5d0b111b5a5a6e6768edc5c5d5e:reference/stacktrace/stacktrace_entry/description.md</id>
      <updated>2024-05-13T18:30:36+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/stacktrace_entry/description.md b/reference/stacktrace/stacktrace_entry/description.md
new file mode 100644
index 000000000..a23b8ba6a
--- /dev/null
+++ b/reference/stacktrace/stacktrace_entry/description.md
@@ -0,0 +1,62 @@
+# description
+* stacktrace[meta header]
+* std[meta namespace]
+* stacktrace_entry[meta class]
+* function[meta id-type]
+* cpp23[meta cpp]
+
+```cpp
+string description() const; // (1) C++23
+```
+* string[link /reference/string/basic_string.md]
+
+## 概要
+このオブジェクトを説明する文字列を取得する。
+
+
+## 戻り値
+`*this`で表される評価の説明、または空文字列を返す。
+
+
+## 例外
+内部のデータ構造、または結果文字列のためのメモリ確保ができない場合、[`std::bad_alloc`](/reference/new/bad_alloc.md)例外を送出する。
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;stacktrace&amp;gt;
+
+void g() {
+  std::stacktrace st = std::stacktrace::current();
+  std::stacktrace_entry entry = st[0];
+
+  std::cout &amp;lt;&amp;lt; entry.description() &amp;lt;&amp;lt; std::endl;
+}
+
+void f() {
+  g();
+}
+
+int main() {
+  f();
+}
+```
+* entry.source_file()[color ff0000]
+* std::stacktrace[link /reference/stacktrace/basic_stacktrace.md]
+* current[link /reference/stacktrace/basic_stacktrace/current.md]
+
+### 出力例 (GCC)
+```
+g()
+```
+
+
+## バージョン
+### 言語
+- C++23
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): 12
+- [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>source_file -- stacktrace_entry : description, source_file, source_lineを追加</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/stacktrace_entry/source_file.html"/>
      <id>56e4f9b24d73d5d0b111b5a5a6e6768edc5c5d5e:reference/stacktrace/stacktrace_entry/source_file.md</id>
      <updated>2024-05-13T18:30:36+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/stacktrace_entry/source_file.md b/reference/stacktrace/stacktrace_entry/source_file.md
new file mode 100644
index 000000000..b2951b1f7
--- /dev/null
+++ b/reference/stacktrace/stacktrace_entry/source_file.md
@@ -0,0 +1,62 @@
+# source_file
+* stacktrace[meta header]
+* std[meta namespace]
+* stacktrace_entry[meta class]
+* function[meta id-type]
+* cpp23[meta cpp]
+
+```cpp
+string source_file() const; // (1) C++23
+```
+* string[link /reference/string/basic_string.md]
+
+## 概要
+ソースファイル名を取得する。
+
+
+## 戻り値
+`*this`で表される評価の式または文を字句的に含むソースファイルの推定または実際の名前、または空文字列を返す。
+
+
+## 例外
+内部のデータ構造、または結果文字列のためのメモリ確保ができない場合、[`std::bad_alloc`](/reference/new/bad_alloc.md)例外を送出する。
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;stacktrace&amp;gt;
+
+void g() {
+  std::stacktrace st = std::stacktrace::current();
+  std::stacktrace_entry entry = st[0];
+
+  std::cout &amp;lt;&amp;lt; entry.source_file() &amp;lt;&amp;lt; std::endl;
+}
+
+void f() {
+  g();
+}
+
+int main() {
+  f();
+}
+```
+* entry.source_file()[color ff0000]
+* std::stacktrace[link /reference/stacktrace/basic_stacktrace.md]
+* current[link /reference/stacktrace/basic_stacktrace/current.md]
+
+### 出力例 (GCC)
+```
+/app/example.cpp
+```
+
+
+## バージョン
+### 言語
+- C++23
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): 12
+- [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>source_line -- stacktrace_entry : description, source_file, source_lineを追加</title>
      <link href="https://cpprefjp.github.io/reference/stacktrace/stacktrace_entry/source_line.html"/>
      <id>56e4f9b24d73d5d0b111b5a5a6e6768edc5c5d5e:reference/stacktrace/stacktrace_entry/source_line.md</id>
      <updated>2024-05-13T18:30:36+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stacktrace/stacktrace_entry/source_line.md b/reference/stacktrace/stacktrace_entry/source_line.md
new file mode 100644
index 000000000..0ddcb1d55
--- /dev/null
+++ b/reference/stacktrace/stacktrace_entry/source_line.md
@@ -0,0 +1,64 @@
+# source_line
+* stacktrace[meta header]
+* std[meta namespace]
+* stacktrace_entry[meta class]
+* function[meta id-type]
+* cpp23[meta cpp]
+
+```cpp
+uint_least32_t source_line() const; // (1) C++23
+```
+* uint_least32_t[link /reference/cstdint/uint_least32_t.md]
+
+## 概要
+行番号を取得する。
+
+
+## 戻り値
+`*this`で表される評価に字句的に関連する`0`または`1`ベースの行番号を返す。
+
+[`source_file()`](source_file.md)が推定のソースファイル名を返す場合は推定の行番号を返し、[`source_file`](source_file.md)が実際のソースファイル名を返す場合は実際の行番号を返す。
+
+
+## 例外
+内部のデータ構造のメモリ確保ができない場合、[`std::bad_alloc`](/reference/new/bad_alloc.md)例外を送出する。
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;stacktrace&amp;gt;
+
+void g() {
+  std::stacktrace st = std::stacktrace::current();
+  std::stacktrace_entry entry = st[0];
+
+  std::cout &amp;lt;&amp;lt; entry.source_line() &amp;lt;&amp;lt; std::endl;
+}
+
+void f() {
+  g();
+}
+
+int main() {
+  f();
+}
+```
+* entry.source_file()[color ff0000]
+* std::stacktrace[link /reference/stacktrace/basic_stacktrace.md]
+* current[link /reference/stacktrace/basic_stacktrace/current.md]
+
+### 出力例 (GCC)
+```
+5
+```
+
+
+## バージョン
+### 言語
+- C++23
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): 12
+- [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>begin -- &lt;iterator&gt;のbegin / end : メンバ関数版とのちがいを記載</title>
      <link href="https://cpprefjp.github.io/reference/iterator/begin.html"/>
      <id>e349d0e6a3354108e9518857d4d11f4c784c7966:reference/iterator/begin.md</id>
      <updated>2024-05-13T17:54:08+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/begin.md b/reference/iterator/begin.md
index 75d79887c..e866c0373 100644
--- a/reference/iterator/begin.md
+++ b/reference/iterator/begin.md
@@ -29,6 +29,12 @@ namespace std {
 ## 概要
 範囲から先頭要素へのイテレータを取得する。
 
+この関数は、メンバ関数版の`begin()`とちがい、組み込み配列に対しても使用できる。
+
+- (1) : 非`const`のコンテナの、先頭要素へのイテレータを取得する
+- (2) : `const`のコンテナの、先頭要素へのイテレータを取得する
+- (3) : 組み込み配列の、先頭要素へのポインタを取得する
+
 
 ## 戻り値
 - (1) : `return c.begin();`
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>end -- &lt;iterator&gt;のbegin / end : メンバ関数版とのちがいを記載</title>
      <link href="https://cpprefjp.github.io/reference/iterator/end.html"/>
      <id>e349d0e6a3354108e9518857d4d11f4c784c7966:reference/iterator/end.md</id>
      <updated>2024-05-13T17:54:08+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/end.md b/reference/iterator/end.md
index 82ed3f6b8..d18b72256 100644
--- a/reference/iterator/end.md
+++ b/reference/iterator/end.md
@@ -29,6 +29,12 @@ namespace std {
 ## 概要
 範囲から、最後尾要素の次を指すイテレータを取得する。
 
+この関数は、メンバ関数版の`end()`とちがい、組み込み配列に対しても使用できる。
+
+- (1) : 非`const`のコンテナの、末尾要素の次を指すイテレータを取得する
+- (2) : `const`のコンテナの、末尾要素の次を指すイテレータを取得する
+- (3) : 組み込み配列の、末尾要素の次を指すポインタを取得する
+
 
 ## 戻り値
 - (1) : `return c.end();`
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
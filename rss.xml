<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2025-09-26T16:50:22.079853</updated>
  <id>8715f51d-73ac-4454-aeea-ffc27fdded1b</id>

  
    <entry>
      <title>get_local_time -- zoned_time のコード例を修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/zoned_time/get_local_time.html"/>
      <id>b342e52edfe4bcc0dc483827db41737cdcbfaac6:reference/chrono/zoned_time/get_local_time.md</id>
      <updated>2025-09-26T23:17:05+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/zoned_time/get_local_time.md b/reference/chrono/zoned_time/get_local_time.md
index 58ddb82df..01ad8ac3f 100644
--- a/reference/chrono/zoned_time/get_local_time.md
+++ b/reference/chrono/zoned_time/get_local_time.md
@@ -38,15 +38,15 @@ int main()
 {
   auto now = chrono::system_clock::now();
   chrono::local_time local_now{now.time_since_epoch()};
-  chrono::local_time local_jst_now = now - chrono::hours{9};
+  chrono::local_time local_jst_now = local_now + chrono::hours{9};
 
   // UTCタイムゾーンのシステム時間から、Asia/Tokyoタイムゾーンのローカル時間に変換する
   chrono::zoned_time zt1{&amp;#34;Asia/Tokyo&amp;#34;, now};
   chrono::local_time lt1 = zt1.get_local_time();
   assert(lt1 == local_jst_now);
 
-  // UTCタイムゾーンのローカル時間から、Asia/Tokyoタイムゾーンのローカル時間に変換する
-  chrono::zoned_time zt2{&amp;#34;Asia/Tokyo&amp;#34;, local_now};
+  // Asia/Tokyoタイムゾーンのローカル時間から、Asia/Tokyoタイムゾーンのローカル時間に変換する
+  chrono::zoned_time zt2{&amp;#34;Asia/Tokyo&amp;#34;, local_jst_now};
   chrono::local_time lt2 = zt2.get_local_time();
   assert(lt2 == local_jst_now);
 
@@ -54,7 +54,7 @@ int main()
   std::cout &amp;lt;&amp;lt; &amp;#34;local now (UTC) : &amp;#34; &amp;lt;&amp;lt; local_now &amp;lt;&amp;lt; std::endl;
   std::cout &amp;lt;&amp;lt; &amp;#34;local now (JST) : &amp;#34; &amp;lt;&amp;lt; local_jst_now &amp;lt;&amp;lt; std::endl;
   std::cout &amp;lt;&amp;lt; &amp;#34;local now (JST) converted from system now (UTC) : &amp;#34; &amp;lt;&amp;lt; lt1 &amp;lt;&amp;lt; std::endl;
-  std::cout &amp;lt;&amp;lt; &amp;#34;local now (JST) converted from local now (UTC) : &amp;#34; &amp;lt;&amp;lt; lt2 &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; &amp;#34;local now (JST) converted from local now (JST) : &amp;#34; &amp;lt;&amp;lt; lt2 &amp;lt;&amp;lt; std::endl;
 }
 ```
 * get_local_time()[color ff0000]
@@ -69,7 +69,7 @@ system now (UTC) : 2020-01-21 05:10:15
 local now (UTC) : 2020-01-21 05:10:15
 local now (JST) : 2020-01-21 14:10:15
 local now (JST) converted from system now (UTC) : 2020-01-21 14:10:15
-local now (JST) converted from local now (UTC) : 2020-01-21 14:10:15
+local now (JST) converted from local now (JST) : 2020-01-21 14:10:15
 ```
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>get_time_zone -- zoned_time のコード例を修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/zoned_time/get_time_zone.html"/>
      <id>b342e52edfe4bcc0dc483827db41737cdcbfaac6:reference/chrono/zoned_time/get_time_zone.md</id>
      <updated>2025-09-26T23:17:05+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/zoned_time/get_time_zone.md b/reference/chrono/zoned_time/get_time_zone.md
index 89dd839f8..ad3638ad4 100644
--- a/reference/chrono/zoned_time/get_time_zone.md
+++ b/reference/chrono/zoned_time/get_time_zone.md
@@ -29,7 +29,7 @@ int main()
   auto now = chrono::system_clock::now();
 
   chrono::zoned_time zt1{&amp;#34;Asia/Tokyo&amp;#34;, now};
-  chrono::time_zone* tz = zt1.get_time_zone();
+  const chrono::time_zone* tz = zt1.get_time_zone();
   assert(tz == chrono::locate_zone(&amp;#34;Asia/Tokyo&amp;#34;));
 
   chrono::zoned_time zt2{&amp;#34;UTC&amp;#34;, now};
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator= -- zoned_time のコード例を修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/zoned_time/op_assign.html"/>
      <id>b342e52edfe4bcc0dc483827db41737cdcbfaac6:reference/chrono/zoned_time/op_assign.md</id>
      <updated>2025-09-26T23:17:05+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/zoned_time/op_assign.md b/reference/chrono/zoned_time/op_assign.md
index 59c2bca35..42c5f5eb5 100644
--- a/reference/chrono/zoned_time/op_assign.md
+++ b/reference/chrono/zoned_time/op_assign.md
@@ -47,16 +47,17 @@ int main()
 {
   auto now = chrono::system_clock::now();
   chrono::local_time local_now{now.time_since_epoch()};
+  chrono::local_time local_jst_now = local_now + chrono::hours{9};
 
-  chrono::zoned_time zt1{&amp;#34;Asia/Tokyo&amp;#34;};
+  chrono::zoned_time&amp;lt;decltype(now)::duration&amp;gt; zt1{&amp;#34;Asia/Tokyo&amp;#34;};
   zt1 = now;
   assert(zt1.get_sys_time() == now);
-  assert(zt1.get_local_time() == local_now);
+  assert(zt1.get_local_time() == local_jst_now);
 
-  chrono::zoned_time zt2{&amp;#34;Asia/Tokyo&amp;#34;};
-  zt2 = local_now;
-  assert(zt2.get_local_time() == local_now);
-  assert(zt2.get_sys_time() == sys_now);
+  chrono::zoned_time&amp;lt;decltype(now)::duration&amp;gt; zt2{&amp;#34;Asia/Tokyo&amp;#34;};
+  zt2 = local_jst_now;
+  assert(zt2.get_local_time() == local_jst_now);
+  assert(zt2.get_sys_time() == now);
 }
 ```
 * chrono::system_clock[link /reference/chrono/system_clock.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- zoned_time のコード例を修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/zoned_time/op_constructor.html"/>
      <id>b342e52edfe4bcc0dc483827db41737cdcbfaac6:reference/chrono/zoned_time/op_constructor.md</id>
      <updated>2025-09-26T23:17:05+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/zoned_time/op_constructor.md b/reference/chrono/zoned_time/op_constructor.md
index 8b0ee3427..2d85d1059 100644
--- a/reference/chrono/zoned_time/op_constructor.md
+++ b/reference/chrono/zoned_time/op_constructor.md
@@ -127,11 +127,11 @@ int main()
   auto now = chrono::system_clock::now();
   auto now_sec = chrono::floor&amp;lt;chrono::seconds&amp;gt;(now);
   chrono::local_time local_now{now.time_since_epoch()};
-  chrono::local_time local_jst_now = local_now - chrono::hours{9};
+  chrono::local_time local_jst_now = local_now + chrono::hours{9};
 
   // デフォルト構築
   chrono::zoned_time&amp;lt;chrono::seconds&amp;gt; zt1{};
-  assert(zt.get_time_zone() == chrono::locate_zone(&amp;#34;UTC&amp;#34;));
+  assert(zt1.get_time_zone() == chrono::locate_zone(&amp;#34;UTC&amp;#34;));
 
   // コピー構築
   chrono::zoned_time zt2 = zt1;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>推論補助 -- zoned_time のコード例を修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/zoned_time/op_deduction_guide.html"/>
      <id>b342e52edfe4bcc0dc483827db41737cdcbfaac6:reference/chrono/zoned_time/op_deduction_guide.md</id>
      <updated>2025-09-26T23:17:05+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/zoned_time/op_deduction_guide.md b/reference/chrono/zoned_time/op_deduction_guide.md
index 94bdfbda3..f09c59483 100644
--- a/reference/chrono/zoned_time/op_deduction_guide.md
+++ b/reference/chrono/zoned_time/op_deduction_guide.md
@@ -117,11 +117,11 @@ int main()
 
   static_assert(std::is_same_v&amp;lt;
     decltype(z4),
-    chrono::zoned_time&amp;lt;decltype(now)::duration, chrono::time_zone*&amp;gt;
+    chrono::zoned_time&amp;lt;decltype(now)::duration, const chrono::time_zone*&amp;gt;
   &amp;gt;);
   static_assert(std::is_same_v&amp;lt;
     decltype(z5),
-    chrono::zoned_time&amp;lt;decltype(now)::duration, chrono::time_zone*&amp;gt;
+    chrono::zoned_time&amp;lt;decltype(now)::duration, const chrono::time_zone*&amp;gt;
   &amp;gt;);
 }
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator local_time -- zoned_time のコード例を修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/zoned_time/op_local_time.html"/>
      <id>b342e52edfe4bcc0dc483827db41737cdcbfaac6:reference/chrono/zoned_time/op_local_time.md</id>
      <updated>2025-09-26T23:17:05+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/zoned_time/op_local_time.md b/reference/chrono/zoned_time/op_local_time.md
index b45229c92..bca9485bd 100644
--- a/reference/chrono/zoned_time/op_local_time.md
+++ b/reference/chrono/zoned_time/op_local_time.md
@@ -36,23 +36,23 @@ int main()
 {
   auto now = chrono::system_clock::now();
   chrono::local_time local_now{now.time_since_epoch()};
-  chrono::local_time local_jst_now = now - chrono::hours{9};
+  chrono::local_time local_jst_now = local_now + chrono::hours{9};
 
   // UTCタイムゾーンのシステム時間から、Asia/Tokyoタイムゾーンのローカル時間に変換する
   chrono::zoned_time zt1{&amp;#34;Asia/Tokyo&amp;#34;, now};
-  chrono::local_time lt1{zt1};
+  chrono::local_time&amp;lt;decltype(now)::duration&amp;gt; lt1{zt1};
   assert(lt1 == local_jst_now);
 
-  // UTCタイムゾーンのローカル時間から、Asia/Tokyoタイムゾーンのローカル時間に変換する
-  chrono::zoned_time zt2{&amp;#34;Asia/Tokyo&amp;#34;, local_now};
-  chrono::local_time lt2{zt2};
+  // Asia/Tokyoタイムゾーンのローカル時間から、Asia/Tokyoタイムゾーンのローカル時間に変換する
+  chrono::zoned_time zt2{&amp;#34;Asia/Tokyo&amp;#34;, local_jst_now};
+  chrono::local_time&amp;lt;decltype(now)::duration&amp;gt; lt2{zt2};
   assert(lt2 == local_jst_now);
 
   std::cout &amp;lt;&amp;lt; &amp;#34;system now (UTC) : &amp;#34; &amp;lt;&amp;lt; now &amp;lt;&amp;lt; std::endl;
   std::cout &amp;lt;&amp;lt; &amp;#34;local now (UTC) : &amp;#34; &amp;lt;&amp;lt; local_now &amp;lt;&amp;lt; std::endl;
   std::cout &amp;lt;&amp;lt; &amp;#34;local now (JST) : &amp;#34; &amp;lt;&amp;lt; local_jst_now &amp;lt;&amp;lt; std::endl;
   std::cout &amp;lt;&amp;lt; &amp;#34;local now (JST) converted from system now (UTC) : &amp;#34; &amp;lt;&amp;lt; lt1 &amp;lt;&amp;lt; std::endl;
-  std::cout &amp;lt;&amp;lt; &amp;#34;local now (JST) converted from local now (UTC) : &amp;#34; &amp;lt;&amp;lt; lt2 &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; &amp;#34;local now (JST) converted from local now (JST) : &amp;#34; &amp;lt;&amp;lt; lt2 &amp;lt;&amp;lt; std::endl;
 }
 ```
 * chrono::local_time[link /reference/chrono/local_time.md]
@@ -66,7 +66,7 @@ system now (UTC) : 2020-01-21 05:10:15
 local now (UTC) : 2020-01-21 05:10:15
 local now (JST) : 2020-01-21 14:10:15
 local now (JST) converted from system now (UTC) : 2020-01-21 14:10:15
-local now (JST) converted from local now (UTC) : 2020-01-21 14:10:15
+local now (JST) converted from local now (JST) : 2020-01-21 14:10:15
 ```
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator sys_time -- zoned_time のコード例を修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/zoned_time/op_sys_time.html"/>
      <id>b342e52edfe4bcc0dc483827db41737cdcbfaac6:reference/chrono/zoned_time/op_sys_time.md</id>
      <updated>2025-09-26T23:17:05+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/zoned_time/op_sys_time.md b/reference/chrono/zoned_time/op_sys_time.md
index 822052b22..d6bb75184 100644
--- a/reference/chrono/zoned_time/op_sys_time.md
+++ b/reference/chrono/zoned_time/op_sys_time.md
@@ -33,17 +33,22 @@ int main()
 {
   auto now = chrono::system_clock::now();
   chrono::local_time local_now{now.time_since_epoch()};
+  chrono::local_time local_jst_now = local_now + chrono::hours{9};
 
   chrono::zoned_time zt1{&amp;#34;Asia/Tokyo&amp;#34;, now};
-  assert(zt1 == now);
+  assert(zt1.get_sys_time() == now);
 
-  chrono::sys_time sys_now = zt1;
-  assert(sys_now == now);
+  chrono::sys_time&amp;lt;decltype(now)::duration&amp;gt; sys_now1 = zt1;
+  assert(sys_now1 == now);
 
-  chrono::zoned_time zt2{&amp;#34;Asia/Tokyo&amp;#34;, local_now};
-  assert(zt2 == now);
+  chrono::zoned_time zt2{&amp;#34;Asia/Tokyo&amp;#34;, local_jst_now};
+  assert(zt2.get_sys_time() == now);
+
+  chrono::sys_time&amp;lt;decltype(now)::duration&amp;gt; sys_now2 = zt2;
+  assert(sys_now2 == now);
 }
 ```
+* get_sys_time()[link get_sys_time.md]
 * chrono::local_time[link /reference/chrono/local_time.md]
 * time_since_epoch()[link /reference/chrono/time_point/time_since_epoch.md]
 * chrono::system_clock[link /reference/chrono/system_clock.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>from_stream -- chrono::from_stream() のコード例の引数の順序を修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/day/from_stream.html"/>
      <id>0157304d946c7e04fe521135e68d5cdc760609db:reference/chrono/day/from_stream.md</id>
      <updated>2025-09-26T12:52:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/day/from_stream.md b/reference/chrono/day/from_stream.md
index 3ce5b90ae..c69bfe399 100644
--- a/reference/chrono/day/from_stream.md
+++ b/reference/chrono/day/from_stream.md
@@ -46,7 +46,7 @@ int main()
     ss &amp;lt;&amp;lt; &amp;#34;01&amp;#34;;
 
     chrono::day d;
-    chrono::from_stream(ss, d, &amp;#34;%d&amp;#34;);
+    chrono::from_stream(ss, &amp;#34;%d&amp;#34;, d);
     assert(d == chrono::day{1});
   }
   {
@@ -54,7 +54,7 @@ int main()
     ss &amp;lt;&amp;lt; &amp;#34;1&amp;#34;;
 
     chrono::day d;
-    chrono::from_stream(ss, d, &amp;#34;%2d&amp;#34;);
+    chrono::from_stream(ss, &amp;#34;%2d&amp;#34;, d);
     assert(d == chrono::day{1});
   }
 }
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>from_stream -- chrono::from_stream() のコード例の引数の順序を修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month/from_stream.html"/>
      <id>0157304d946c7e04fe521135e68d5cdc760609db:reference/chrono/month/from_stream.md</id>
      <updated>2025-09-26T12:52:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month/from_stream.md b/reference/chrono/month/from_stream.md
index dda34a179..c2f16f135 100644
--- a/reference/chrono/month/from_stream.md
+++ b/reference/chrono/month/from_stream.md
@@ -46,7 +46,7 @@ int main()
     ss &amp;lt;&amp;lt; &amp;#34;Jan&amp;#34;;
 
     chrono::month m;
-    chrono::from_stream(ss, m, &amp;#34;%b&amp;#34;);
+    chrono::from_stream(ss, &amp;#34;%b&amp;#34;, m);
     assert(m == chrono::January);
   }
   {
@@ -54,7 +54,7 @@ int main()
     ss &amp;lt;&amp;lt; &amp;#34;January&amp;#34;;
 
     chrono::month m;
-    chrono::from_stream(ss, m, &amp;#34;%b&amp;#34;);
+    chrono::from_stream(ss, &amp;#34;%b&amp;#34;, m);
     assert(m == chrono::January);
   }
 }
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>from_stream -- chrono::from_stream() のコード例の引数の順序を修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/month_day/from_stream.html"/>
      <id>0157304d946c7e04fe521135e68d5cdc760609db:reference/chrono/month_day/from_stream.md</id>
      <updated>2025-09-26T12:52:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/month_day/from_stream.md b/reference/chrono/month_day/from_stream.md
index 622d53656..a01354fd1 100644
--- a/reference/chrono/month_day/from_stream.md
+++ b/reference/chrono/month_day/from_stream.md
@@ -46,7 +46,7 @@ int main()
     ss &amp;lt;&amp;lt; &amp;#34;Mar/1&amp;#34;; // &amp;#34;Mar/01&amp;#34;や&amp;#34;March/1&amp;#34;でもOK
 
     chrono::month_day md;
-    chrono::from_stream(ss, md, &amp;#34;%b/%d&amp;#34;);
+    chrono::from_stream(ss, &amp;#34;%b/%d&amp;#34;, md);
     assert(md == chrono::March/1);
   }
   {
@@ -54,7 +54,7 @@ int main()
     ss &amp;lt;&amp;lt; &amp;#34;3月1日&amp;#34;;
 
     chrono::month_day md;
-    chrono::from_stream(ss, md, &amp;#34;%m月%d日&amp;#34;);
+    chrono::from_stream(ss, &amp;#34;%m月%d日&amp;#34;, md);
     assert(md == chrono::March/1);
   }
 }
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>from_stream -- chrono::from_stream() のコード例の引数の順序を修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/weekday/from_stream.html"/>
      <id>0157304d946c7e04fe521135e68d5cdc760609db:reference/chrono/weekday/from_stream.md</id>
      <updated>2025-09-26T12:52:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/weekday/from_stream.md b/reference/chrono/weekday/from_stream.md
index ef492d9f7..a2d27f193 100644
--- a/reference/chrono/weekday/from_stream.md
+++ b/reference/chrono/weekday/from_stream.md
@@ -46,7 +46,7 @@ int main()
     ss &amp;lt;&amp;lt; &amp;#34;Sun&amp;#34;;
 
     chrono::weekday wd;
-    chrono::from_stream(ss, wd, &amp;#34;%a&amp;#34;);
+    chrono::from_stream(ss, &amp;#34;%a&amp;#34;, wd);
     assert(wd == chrono::Sunday);
   }
   {
@@ -54,7 +54,7 @@ int main()
     ss &amp;lt;&amp;lt; &amp;#34;Sunday&amp;#34;;
 
     chrono::weekday wd;
-    chrono::from_stream(ss, wd, &amp;#34;%a&amp;#34;);
+    chrono::from_stream(ss, &amp;#34;%a&amp;#34;, wd);
     assert(wd == chrono::Sunday);
   }
 }
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>from_stream -- chrono::from_stream() のコード例の引数の順序を修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year/from_stream.html"/>
      <id>0157304d946c7e04fe521135e68d5cdc760609db:reference/chrono/year/from_stream.md</id>
      <updated>2025-09-26T12:52:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year/from_stream.md b/reference/chrono/year/from_stream.md
index 7569ad588..789066a55 100644
--- a/reference/chrono/year/from_stream.md
+++ b/reference/chrono/year/from_stream.md
@@ -46,7 +46,7 @@ int main()
     ss &amp;lt;&amp;lt; &amp;#34;2020&amp;#34;;
 
     chrono::year y;
-    chrono::from_stream(ss, y, &amp;#34;%y&amp;#34;);
+    chrono::from_stream(ss, &amp;#34;%y&amp;#34;, y);
     assert(y == chrono::year{2020});
   }
   {
@@ -54,7 +54,7 @@ int main()
     ss &amp;lt;&amp;lt; &amp;#34;0123&amp;#34;;
 
     chrono::year y;
-    chrono::from_stream(ss, y, &amp;#34;%4Y&amp;#34;);
+    chrono::from_stream(ss, &amp;#34;%4Y&amp;#34;, y);
     assert(y == chrono::year{123});
   }
 }
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>from_stream -- chrono::from_stream() のコード例の引数の順序を修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month/from_stream.html"/>
      <id>0157304d946c7e04fe521135e68d5cdc760609db:reference/chrono/year_month/from_stream.md</id>
      <updated>2025-09-26T12:52:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month/from_stream.md b/reference/chrono/year_month/from_stream.md
index 3f8b698fe..64940080c 100644
--- a/reference/chrono/year_month/from_stream.md
+++ b/reference/chrono/year_month/from_stream.md
@@ -47,7 +47,7 @@ int main()
     ss &amp;lt;&amp;lt; &amp;#34;2020/Mar&amp;#34;;
 
     chrono::year_month ym;
-    chrono::from_stream(ss, ym, &amp;#34;%Y/%b&amp;#34;);
+    chrono::from_stream(ss, &amp;#34;%Y/%b&amp;#34;, ym);
     assert(ym == 2020y/3);
   }
   {
@@ -55,7 +55,7 @@ int main()
     ss &amp;lt;&amp;lt; &amp;#34;2020/03&amp;#34;;
 
     chrono::year_month ym;
-    chrono::from_stream(ss, ym, &amp;#34;%Y/%m&amp;#34;);
+    chrono::from_stream(ss, &amp;#34;%Y/%m&amp;#34;, ym);
     assert(ym == 2020y/3);
   }
 }
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>from_stream -- chrono::from_stream() のコード例の引数の順序を修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day/from_stream.html"/>
      <id>0157304d946c7e04fe521135e68d5cdc760609db:reference/chrono/year_month_day/from_stream.md</id>
      <updated>2025-09-26T12:52:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day/from_stream.md b/reference/chrono/year_month_day/from_stream.md
index e77f989ff..e0b7a5eb2 100644
--- a/reference/chrono/year_month_day/from_stream.md
+++ b/reference/chrono/year_month_day/from_stream.md
@@ -47,7 +47,7 @@ int main()
     ss &amp;lt;&amp;lt; &amp;#34;2020-03-01&amp;#34;;
 
     chrono::year_month_day ymd;
-    chrono::from_stream(ss, ymd, &amp;#34;%F&amp;#34;);
+    chrono::from_stream(ss, &amp;#34;%F&amp;#34;, ymd);
     assert(ymd == 2020y/3/1);
   }
   {
@@ -55,7 +55,7 @@ int main()
     ss &amp;lt;&amp;lt; &amp;#34;2020-03-01&amp;#34;;
 
     chrono::year_month_day ymd;
-    chrono::from_stream(ss, ymd, &amp;#34;%4F&amp;#34;); // 年の桁数を指定する
+    chrono::from_stream(ss, &amp;#34;%4F&amp;#34;, ymd); // 年の桁数を指定する
     assert(ymd == 2020y/3/1);
   }
 }
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>copy_backward -- コード例の include の不足を修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_copy_backward.html"/>
      <id>2b5b392b64f11ab7a75053a562ce53c65acec8e6:reference/algorithm/ranges_copy_backward.md</id>
      <updated>2025-09-26T00:38:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_copy_backward.md b/reference/algorithm/ranges_copy_backward.md
index e8e20bdf7..59dc02af3 100644
--- a/reference/algorithm/ranges_copy_backward.md
+++ b/reference/algorithm/ranges_copy_backward.md
@@ -63,6 +63,7 @@ copy_backward_result {
 #include &amp;lt;algorithm&amp;gt;
 #include &amp;lt;iostream&amp;gt;
 #include &amp;lt;list&amp;gt;
+#include &amp;lt;iterator&amp;gt;
 
 int main() {
   std::list&amp;lt;int&amp;gt; ls = { 1,2,3,4,5 };
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>parse -- コード例の include の不足を修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/parse.html"/>
      <id>2b5b392b64f11ab7a75053a562ce53c65acec8e6:reference/chrono/parse.md</id>
      <updated>2025-09-26T00:38:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/parse.md b/reference/chrono/parse.md
index d762cb011..bde91face 100644
--- a/reference/chrono/parse.md
+++ b/reference/chrono/parse.md
@@ -111,6 +111,7 @@ namespace std::chrono {
 
 ## 例
 ```cpp example
+#include &amp;lt;iostream&amp;gt;
 #include &amp;lt;sstream&amp;gt;
 #include &amp;lt;chrono&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- コード例の include の不足を修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day/op_constructor.html"/>
      <id>2b5b392b64f11ab7a75053a562ce53c65acec8e6:reference/chrono/year_month_day/op_constructor.md</id>
      <updated>2025-09-26T00:38:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day/op_constructor.md b/reference/chrono/year_month_day/op_constructor.md
index b7cbe5ccf..187037df1 100644
--- a/reference/chrono/year_month_day/op_constructor.md
+++ b/reference/chrono/year_month_day/op_constructor.md
@@ -62,6 +62,7 @@ year_month_day(year_month_day&amp;amp;&amp;amp;) = default;                         // (7) C++20
 ### 例
 ```cpp example
 #include &amp;lt;cassert&amp;gt;
+#include &amp;lt;iostream&amp;gt;
 #include &amp;lt;chrono&amp;gt;
 
 namespace chrono = std::chrono;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>get_info -- コード例の include の不足を修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/zoned_time/get_info.html"/>
      <id>2b5b392b64f11ab7a75053a562ce53c65acec8e6:reference/chrono/zoned_time/get_info.md</id>
      <updated>2025-09-26T00:38:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/zoned_time/get_info.md b/reference/chrono/zoned_time/get_info.md
index df45d1b04..6595ebc27 100644
--- a/reference/chrono/zoned_time/get_info.md
+++ b/reference/chrono/zoned_time/get_info.md
@@ -26,6 +26,7 @@ return zone-&amp;gt;get_info(tp);
 ## 例
 ```cpp example
 #include &amp;lt;cassert&amp;gt;
+#include &amp;lt;iostream&amp;gt;
 #include &amp;lt;chrono&amp;gt;
 
 namespace chrono = std::chrono;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>get_local_time -- コード例の include の不足を修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/zoned_time/get_local_time.html"/>
      <id>2b5b392b64f11ab7a75053a562ce53c65acec8e6:reference/chrono/zoned_time/get_local_time.md</id>
      <updated>2025-09-26T00:38:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/zoned_time/get_local_time.md b/reference/chrono/zoned_time/get_local_time.md
index 87a7e37de..58ddb82df 100644
--- a/reference/chrono/zoned_time/get_local_time.md
+++ b/reference/chrono/zoned_time/get_local_time.md
@@ -28,6 +28,7 @@ return zone-&amp;gt;to_local(tp);
 ## 例
 ```cpp example
 #include &amp;lt;cassert&amp;gt;
+#include &amp;lt;iostream&amp;gt;
 #include &amp;lt;chrono&amp;gt;
 
 namespace chrono = std::chrono;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- コード例の include の不足を修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/zoned_time/op_constructor.html"/>
      <id>2b5b392b64f11ab7a75053a562ce53c65acec8e6:reference/chrono/zoned_time/op_constructor.md</id>
      <updated>2025-09-26T00:38:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/zoned_time/op_constructor.md b/reference/chrono/zoned_time/op_constructor.md
index fbb834025..8b0ee3427 100644
--- a/reference/chrono/zoned_time/op_constructor.md
+++ b/reference/chrono/zoned_time/op_constructor.md
@@ -116,6 +116,7 @@ zoned_time(string_view name,
 
 ### 例
 ```cpp example
+#include &amp;lt;cassert&amp;gt;
 #include &amp;lt;iostream&amp;gt;
 #include &amp;lt;chrono&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator local_time -- コード例の include の不足を修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/zoned_time/op_local_time.html"/>
      <id>2b5b392b64f11ab7a75053a562ce53c65acec8e6:reference/chrono/zoned_time/op_local_time.md</id>
      <updated>2025-09-26T00:38:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/zoned_time/op_local_time.md b/reference/chrono/zoned_time/op_local_time.md
index d5825b12f..b45229c92 100644
--- a/reference/chrono/zoned_time/op_local_time.md
+++ b/reference/chrono/zoned_time/op_local_time.md
@@ -26,6 +26,7 @@ return get_local_time();
 ## 例
 ```cpp example
 #include &amp;lt;cassert&amp;gt;
+#include &amp;lt;iostream&amp;gt;
 #include &amp;lt;chrono&amp;gt;
 
 namespace chrono = std::chrono;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>const_iterator -- コード例の include の不足を修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/const_iterator.html"/>
      <id>2b5b392b64f11ab7a75053a562ce53c65acec8e6:reference/iterator/const_iterator.md</id>
      <updated>2025-09-26T00:38:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/const_iterator.md b/reference/iterator/const_iterator.md
index 36c561839..246e542bf 100644
--- a/reference/iterator/const_iterator.md
+++ b/reference/iterator/const_iterator.md
@@ -23,6 +23,7 @@ namespace std {
 ## 例
 ```cpp example
 #include &amp;lt;iterator&amp;gt;
+#include &amp;lt;vector&amp;gt;
 
 int main() {
   static_assert(std::same_as&amp;lt;std::const_iterator&amp;lt;int*&amp;gt;, std::basic_const_iterator&amp;lt;int*&amp;gt;&amp;gt;);
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>const_sentinel -- コード例の include の不足を修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/const_sentinel.html"/>
      <id>2b5b392b64f11ab7a75053a562ce53c65acec8e6:reference/iterator/const_sentinel.md</id>
      <updated>2025-09-26T00:38:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/const_sentinel.md b/reference/iterator/const_sentinel.md
index 82af81b7a..192542777 100644
--- a/reference/iterator/const_sentinel.md
+++ b/reference/iterator/const_sentinel.md
@@ -24,6 +24,7 @@ namespace std {
 ## 例
 ```cpp example
 #include &amp;lt;iterator&amp;gt;
+#include &amp;lt;vector&amp;gt;
 
 int main() {
   static_assert(std::same_as&amp;lt;std::const_sentinel&amp;lt;int*&amp;gt;, std::basic_const_iterator&amp;lt;int*&amp;gt;&amp;gt;);
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>indirectly_readable -- コード例の include の不足を修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/indirectly_readable.html"/>
      <id>2b5b392b64f11ab7a75053a562ce53c65acec8e6:reference/iterator/indirectly_readable.md</id>
      <updated>2025-09-26T00:38:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/indirectly_readable.md b/reference/iterator/indirectly_readable.md
index e39b14374..f426d9d9b 100644
--- a/reference/iterator/indirectly_readable.md
+++ b/reference/iterator/indirectly_readable.md
@@ -57,6 +57,7 @@ concept indirectly_readable =
 #include &amp;lt;memory&amp;gt;
 #include &amp;lt;vector&amp;gt;
 #include &amp;lt;optional&amp;gt;
+#include &amp;lt;iterator&amp;gt;
 
 template&amp;lt;typename T&amp;gt;
 requires std::indirectly_readable&amp;lt;T&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>start_lifetime_as -- コード例の include の不足を修正</title>
      <link href="https://cpprefjp.github.io/reference/memory/start_lifetime_as.html"/>
      <id>2b5b392b64f11ab7a75053a562ce53c65acec8e6:reference/memory/start_lifetime_as.md</id>
      <updated>2025-09-26T00:38:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/memory/start_lifetime_as.md b/reference/memory/start_lifetime_as.md
index 13fd0d874..03a41a5ba 100644
--- a/reference/memory/start_lifetime_as.md
+++ b/reference/memory/start_lifetime_as.md
@@ -49,6 +49,7 @@ const volatile T* start_lifetime_as(const volatile void* p) noexcept; // (4)
 ```cpp example
 #include &amp;lt;cstdint&amp;gt;
 #include &amp;lt;memory&amp;gt;
+#include &amp;lt;iostream&amp;gt;
 
 int main() {
   float f = 3.14f;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>start_lifetime_as_array -- コード例の include の不足を修正</title>
      <link href="https://cpprefjp.github.io/reference/memory/start_lifetime_as_array.html"/>
      <id>2b5b392b64f11ab7a75053a562ce53c65acec8e6:reference/memory/start_lifetime_as_array.md</id>
      <updated>2025-09-26T00:38:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/memory/start_lifetime_as_array.md b/reference/memory/start_lifetime_as_array.md
index 06e402dcb..dbc34ce81 100644
--- a/reference/memory/start_lifetime_as_array.md
+++ b/reference/memory/start_lifetime_as_array.md
@@ -50,6 +50,7 @@ const volatile T* start_lifetime_as_array(const volatile void* p, size_t n) noex
 ```cpp example
 #include &amp;lt;cstdint&amp;gt;
 #include &amp;lt;memory&amp;gt;
+#include &amp;lt;iostream&amp;gt;
 
 int main() {
   float f = 3.14f;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>tuple -- コード例の include の不足を修正</title>
      <link href="https://cpprefjp.github.io/reference/tuple/tuple.html"/>
      <id>2b5b392b64f11ab7a75053a562ce53c65acec8e6:reference/tuple/tuple.md</id>
      <updated>2025-09-26T00:38:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/tuple/tuple.md b/reference/tuple/tuple.md
index 8cf65409b..950ca84a1 100644
--- a/reference/tuple/tuple.md
+++ b/reference/tuple/tuple.md
@@ -153,6 +153,7 @@ C++23 で[`zip_view`](/reference/ranges/zip_view.md)などが追加されたこ
 #include &amp;lt;tuple&amp;gt;
 #include &amp;lt;string_view&amp;gt;
 #include &amp;lt;format&amp;gt;
+#include &amp;lt;utility&amp;gt;
 
 struct A
 {
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_trivially_copyable -- コード例の include の不足を修正</title>
      <link href="https://cpprefjp.github.io/reference/type_traits/is_trivially_copyable.html"/>
      <id>2b5b392b64f11ab7a75053a562ce53c65acec8e6:reference/type_traits/is_trivially_copyable.md</id>
      <updated>2025-09-26T00:38:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/type_traits/is_trivially_copyable.md b/reference/type_traits/is_trivially_copyable.md
index 7b68c54d4..2ac339c1f 100644
--- a/reference/type_traits/is_trivially_copyable.md
+++ b/reference/type_traits/is_trivially_copyable.md
@@ -60,6 +60,7 @@ CWG issue 1734は2013年8月9日に報告されている。つまりC++14に対
 
 ```cpp example
 #include &amp;lt;type_traits&amp;gt;
+#include &amp;lt;concepts&amp;gt;
 template &amp;lt;typename T&amp;gt;
 concept trivially_copy_constructible = std::is_trivially_copy_constructible_v&amp;lt;T&amp;gt;;
 template &amp;lt;typename T&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>first -- コード例の include の不足を修正</title>
      <link href="https://cpprefjp.github.io/reference/utility/pair/first.html"/>
      <id>2b5b392b64f11ab7a75053a562ce53c65acec8e6:reference/utility/pair/first.md</id>
      <updated>2025-09-26T00:38:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/utility/pair/first.md b/reference/utility/pair/first.md
index 0e87ab346..91d495051 100644
--- a/reference/utility/pair/first.md
+++ b/reference/utility/pair/first.md
@@ -14,6 +14,7 @@ T1 first;
 ## 例
 ```cpp example
 #include &amp;lt;utility&amp;gt;
+#include &amp;lt;iostream&amp;gt;
 
 int main() {
   std::pair&amp;lt;int, int&amp;gt; p(1, 2);
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>second -- コード例の include の不足を修正</title>
      <link href="https://cpprefjp.github.io/reference/utility/pair/second.html"/>
      <id>2b5b392b64f11ab7a75053a562ce53c65acec8e6:reference/utility/pair/second.md</id>
      <updated>2025-09-26T00:38:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/utility/pair/second.md b/reference/utility/pair/second.md
index f58f062a5..ad9fb3fca 100644
--- a/reference/utility/pair/second.md
+++ b/reference/utility/pair/second.md
@@ -14,6 +14,7 @@ T2 second;
 ## 例
 ```cpp example
 #include &amp;lt;utility&amp;gt;
+#include &amp;lt;iostream&amp;gt;
 
 int main() {
   std::pair&amp;lt;int, int&amp;gt; p(1, 2);
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>emplace_hint -- unordered_map::emplace_hint() のコードを修正</title>
      <link href="https://cpprefjp.github.io/reference/unordered_map/unordered_map/emplace_hint.html"/>
      <id>9b8ca475ec8130c95b83fbd7398cd33799ad5c97:reference/unordered_map/unordered_map/emplace_hint.md</id>
      <updated>2025-09-25T22:28:06+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_map/unordered_map/emplace_hint.md b/reference/unordered_map/unordered_map/emplace_hint.md
index 3384880b4..a571d60b3 100644
--- a/reference/unordered_map/unordered_map/emplace_hint.md
+++ b/reference/unordered_map/unordered_map/emplace_hint.md
@@ -89,14 +89,14 @@ int main()
   std::cout &amp;lt;&amp;lt; std::boolalpha;
 
   auto it1 = um.emplace_hint(um.cend(), &amp;#34;e&amp;#34;, 2.718281828);
-  std::cout &amp;lt;&amp;lt; &amp;#39;{&amp;#39; &amp;lt;&amp;lt; it1-&amp;gt;first &amp;lt;&amp;lt; &amp;#39;,&amp;#39; &amp;lt;&amp;lt; it1-&amp;gt;second &amp;lt;&amp;lt; &amp;#34;} at &amp;#34; &amp;lt;&amp;lt; std::distance(um.cbegin(), it1) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
+  std::cout &amp;lt;&amp;lt; &amp;#39;{&amp;#39; &amp;lt;&amp;lt; it1-&amp;gt;first &amp;lt;&amp;lt; &amp;#39;,&amp;#39; &amp;lt;&amp;lt; it1-&amp;gt;second &amp;lt;&amp;lt; &amp;#34;} at &amp;#34; &amp;lt;&amp;lt; std::distance(um.begin(), it1) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
   auto it2 = um.emplace_hint(um.cbegin(), &amp;#34;pi&amp;#34;, 3.14159265);
-  std::cout &amp;lt;&amp;lt; &amp;#39;{&amp;#39; &amp;lt;&amp;lt; it2-&amp;gt;first &amp;lt;&amp;lt; &amp;#39;,&amp;#39; &amp;lt;&amp;lt; it2-&amp;gt;second &amp;lt;&amp;lt; &amp;#34;} at &amp;#34; &amp;lt;&amp;lt; std::distance(um.cbegin(), it2) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
+  std::cout &amp;lt;&amp;lt; &amp;#39;{&amp;#39; &amp;lt;&amp;lt; it2-&amp;gt;first &amp;lt;&amp;lt; &amp;#39;,&amp;#39; &amp;lt;&amp;lt; it2-&amp;gt;second &amp;lt;&amp;lt; &amp;#34;} at &amp;#34; &amp;lt;&amp;lt; std::distance(um.begin(), it2) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
   auto it3 = um.emplace_hint(um.cbegin(), &amp;#34;pi&amp;#34;, 3);
-  std::cout &amp;lt;&amp;lt; &amp;#39;{&amp;#39; &amp;lt;&amp;lt; it3-&amp;gt;first &amp;lt;&amp;lt; &amp;#39;,&amp;#39; &amp;lt;&amp;lt; it3-&amp;gt;second &amp;lt;&amp;lt; &amp;#34;} at &amp;#34; &amp;lt;&amp;lt; std::distance(um.cbegin(), it3) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
+  std::cout &amp;lt;&amp;lt; &amp;#39;{&amp;#39; &amp;lt;&amp;lt; it3-&amp;gt;first &amp;lt;&amp;lt; &amp;#39;,&amp;#39; &amp;lt;&amp;lt; it3-&amp;gt;second &amp;lt;&amp;lt; &amp;#34;} at &amp;#34; &amp;lt;&amp;lt; std::distance(um.begin(), it3) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
 
   auto it4 = um.emplace_hint(std::next(um.cbegin(), 1), std::piecewise_construct, std::forward_as_tuple(&amp;#34;i&amp;#34;), std::forward_as_tuple(0, 1));
-  std::cout &amp;lt;&amp;lt; &amp;#39;{&amp;#39; &amp;lt;&amp;lt; it4-&amp;gt;first &amp;lt;&amp;lt; &amp;#39;,&amp;#39; &amp;lt;&amp;lt; it4-&amp;gt;second &amp;lt;&amp;lt; &amp;#34;} at &amp;#34; &amp;lt;&amp;lt; std::distance(um.cbegin(), it4) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
+  std::cout &amp;lt;&amp;lt; &amp;#39;{&amp;#39; &amp;lt;&amp;lt; it4-&amp;gt;first &amp;lt;&amp;lt; &amp;#39;,&amp;#39; &amp;lt;&amp;lt; it4-&amp;gt;second &amp;lt;&amp;lt; &amp;#34;} at &amp;#34; &amp;lt;&amp;lt; std::distance(um.begin(), it4) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
 
   std::for_each(um.cbegin(), um.cend(), [](const decltype(um)::value_type&amp;amp; v) {
     std::cout &amp;lt;&amp;lt; &amp;#39;{&amp;#39; &amp;lt;&amp;lt; v.first &amp;lt;&amp;lt; &amp;#39;,&amp;#39; &amp;lt;&amp;lt; v.second &amp;lt;&amp;lt; &amp;#34;}, &amp;#34;;
@@ -106,6 +106,7 @@ int main()
 ```
 * emplace_hint[color ff0000]
 * std::complex[link /reference/complex/complex.md]
+* um.begin()[link begin.md]
 * um.cbegin()[link cbegin.md]
 * um.cend()[link cend.md]
 * std::piecewise_construct[link /reference/utility/piecewise_construct_t.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>println -- いくつかのコード例を修正</title>
      <link href="https://cpprefjp.github.io/reference/ostream/println.html"/>
      <id>7d0aa6734c80d32a8ad5f21df897e698ed20926e:reference/ostream/println.md</id>
      <updated>2025-09-25T22:04:30+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ostream/println.md b/reference/ostream/println.md
index 9bf22a36b..bc6735237 100644
--- a/reference/ostream/println.md
+++ b/reference/ostream/println.md
@@ -90,9 +90,9 @@ Hello
 int main()
 {
   std::print(std::cout, &amp;#34;abc&amp;#34;);
-  std::println(std::cout, ); // 改行コードのみを出力する
+  std::println(std::cout); // 改行コードのみを出力する
   std::print(std::cout, &amp;#34;{}&amp;#34;, 123);
-  std::println(std::cout, );
+  std::println(std::cout);
 }
 ```
 * std::print[link print.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>base -- いくつかのコード例を修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/as_const_view/base.html"/>
      <id>7d0aa6734c80d32a8ad5f21df897e698ed20926e:reference/ranges/as_const_view/base.md</id>
      <updated>2025-09-25T22:04:30+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/as_const_view/base.md b/reference/ranges/as_const_view/base.md
index 9d33283fa..4fc69031c 100644
--- a/reference/ranges/as_const_view/base.md
+++ b/reference/ranges/as_const_view/base.md
@@ -24,7 +24,7 @@ constexpr V base() &amp;amp;&amp;amp;;                                      // (2)
 ## 例
 
 ```cpp example
-#include &amp;lt;iterator&amp;gt;
+#include &amp;lt;ranges&amp;gt;
 #include &amp;lt;vector&amp;gt;
 #include &amp;lt;iostream&amp;gt;
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>end -- いくつかのコード例を修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/as_const_view/end.html"/>
      <id>7d0aa6734c80d32a8ad5f21df897e698ed20926e:reference/ranges/as_const_view/end.md</id>
      <updated>2025-09-25T22:04:30+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/as_const_view/end.md b/reference/ranges/as_const_view/end.md
index 3c3ffe3be..11d4e1652 100644
--- a/reference/ranges/as_const_view/end.md
+++ b/reference/ranges/as_const_view/end.md
@@ -30,6 +30,7 @@ return ranges::cend(base_);
 #include &amp;lt;ranges&amp;gt;
 #include &amp;lt;vector&amp;gt;
 #include &amp;lt;iostream&amp;gt;
+#include &amp;lt;cassert&amp;gt;
 
 int main() {
   std::vector&amp;lt;int&amp;gt; vec = {1, 2, 3, 4, 5};
@@ -43,7 +44,7 @@ int main() {
 
   --se;
 
-  std::cout &amp;lt;&amp;lt; *se &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;
+  std::cout &amp;lt;&amp;lt; *se &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
 }
 ```
 * end[color ff0000]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>chunk_view -- いくつかのコード例を修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/chunk_view.html"/>
      <id>7d0aa6734c80d32a8ad5f21df897e698ed20926e:reference/ranges/chunk_view.md</id>
      <updated>2025-09-25T22:04:30+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/chunk_view.md b/reference/ranges/chunk_view.md
index 0c837cb3a..0a647ab96 100644
--- a/reference/ranges/chunk_view.md
+++ b/reference/ranges/chunk_view.md
@@ -125,7 +125,7 @@ int main() {
   const auto table = std::views::istream&amp;lt;int&amp;gt;(iss)
     | std::views::chunk(w)
     | std::views::take(h) 
-    | std::ranges::to&amp;lt;std::vector&amp;lt;std::vector&amp;lt;int&amp;gt;&amp;gt;();
+    | std::ranges::to&amp;lt;std::vector&amp;lt;std::vector&amp;lt;int&amp;gt;&amp;gt;&amp;gt;();
 
   std::println(&amp;#34;{}&amp;#34;, table);
 }
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>推論補助 -- いくつかのコード例を修正</title>
      <link href="https://cpprefjp.github.io/reference/ranges/filter_view/op_deduction_guide.html"/>
      <id>7d0aa6734c80d32a8ad5f21df897e698ed20926e:reference/ranges/filter_view/op_deduction_guide.md</id>
      <updated>2025-09-25T22:04:30+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/filter_view/op_deduction_guide.md b/reference/ranges/filter_view/op_deduction_guide.md
index c98cb920e..779e60ed3 100644
--- a/reference/ranges/filter_view/op_deduction_guide.md
+++ b/reference/ranges/filter_view/op_deduction_guide.md
@@ -34,14 +34,14 @@ int main() {
   
   static_assert(std::same_as&amp;lt;
     decltype(v1),
-    std::ranges::filter_view&amp;lt;std::ranges::ref_view&amp;lt;std::vector&amp;lt;int&amp;gt;&amp;gt;&amp;gt;
+    std::ranges::filter_view&amp;lt;std::ranges::ref_view&amp;lt;std::vector&amp;lt;int&amp;gt;&amp;gt;, decltype(pred)&amp;gt;
   &amp;gt;);
 
   std::ranges::filter_view v2{std::vector&amp;lt;int&amp;gt;{1, 2}, pred};
   
   static_assert(std::same_as&amp;lt;
     decltype(v2),
-    std::ranges::filter_view&amp;lt;std::ranges::owning_view&amp;lt;std::vector&amp;lt;int&amp;gt;&amp;gt;&amp;gt;
+    std::ranges::filter_view&amp;lt;std::ranges::owning_view&amp;lt;std::vector&amp;lt;int&amp;gt;&amp;gt;, decltype(pred)&amp;gt;
   &amp;gt;);
 }
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator= -- いくつかのコード例を修正</title>
      <link href="https://cpprefjp.github.io/reference/regex/match_results/op_assign.html"/>
      <id>7d0aa6734c80d32a8ad5f21df897e698ed20926e:reference/regex/match_results/op_assign.md</id>
      <updated>2025-09-25T22:04:30+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/regex/match_results/op_assign.md b/reference/regex/match_results/op_assign.md
index 9b39f782f..4191bb4a3 100644
--- a/reference/regex/match_results/op_assign.md
+++ b/reference/regex/match_results/op_assign.md
@@ -65,7 +65,7 @@ void print(const std::cmatch&amp;amp; m)
     for (std::size_t i = 0, n = m.size(); i &amp;lt; n; ++i) {
       std::cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &amp;#34;:&amp;#39;&amp;#34; &amp;lt;&amp;lt; m.str(i) &amp;lt;&amp;lt; &amp;#39;\&amp;#39;&amp;#39; &amp;lt;&amp;lt; std::endl;
     }
--    std::cout &amp;lt;&amp;lt; &amp;#34;suffix:&amp;#39;&amp;#34; &amp;lt;&amp;lt; m.suffix() &amp;lt;&amp;lt; &amp;#39;\&amp;#39;&amp;#39; &amp;lt;&amp;lt; std::endl;
+    std::cout &amp;lt;&amp;lt; &amp;#34;suffix:&amp;#39;&amp;#34; &amp;lt;&amp;lt; m.suffix() &amp;lt;&amp;lt; &amp;#39;\&amp;#39;&amp;#39; &amp;lt;&amp;lt; std::endl;
   }
   std::cout &amp;lt;&amp;lt; std::endl;
 }
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
</feed>
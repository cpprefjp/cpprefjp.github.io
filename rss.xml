<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2022-03-21T16:02:38.022564</updated>
  <id>60912693-19c0-4a70-98e8-f652d36c3071</id>

  
    <entry>
      <title>adjacent_find -- 概要を更新 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_adjacent_find.html"/>
      <id>daac47a8029f5fb2925d82fe4dcbf98056f2b16b:reference/algorithm/ranges_adjacent_find.md</id>
      <updated>2022-03-22T00:56:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_adjacent_find.md b/reference/algorithm/ranges_adjacent_find.md
index 7121bee48..2261d308b 100644
--- a/reference/algorithm/ranges_adjacent_find.md
+++ b/reference/algorithm/ranges_adjacent_find.md
@@ -27,6 +27,9 @@ namespace std::ranges {
 ## 概要
 隣接する要素で条件を満たしている最初の要素を検索する。
 
+* (1): イテレータペアで範囲を指定する
+* (2): 範囲を直接指定する
+
 
 ## 戻り値
 `[first,last)` 内にあるイテレータ i について、[`invoke`](/reference/functional/invoke.md)`(pred, `[`invoke`](/reference/functional/invoke.md)`(proj, *i), `[`invoke`](/reference/functional/invoke.md)`(proj, *(i + 1))) != false` であるような最初のイテレータを返す。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>all_of -- 概要を更新 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_all_of.html"/>
      <id>daac47a8029f5fb2925d82fe4dcbf98056f2b16b:reference/algorithm/ranges_all_of.md</id>
      <updated>2022-03-22T00:56:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_all_of.md b/reference/algorithm/ranges_all_of.md
index 21cda2a60..730b223ea 100644
--- a/reference/algorithm/ranges_all_of.md
+++ b/reference/algorithm/ranges_all_of.md
@@ -23,6 +23,9 @@ namespace std::ranges {
 ## 概要
 範囲の全ての要素が条件を満たすかを判定する。
 
+* (1): イテレータペアで範囲を指定する
+* (2): 範囲を直接指定する
+
 ## テンプレートパラメータ制約
 - (1):
     - `I`が[`input_iterator`](/reference/iterator/input_iterator.md)である
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>any_of -- 概要を更新 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_any_of.html"/>
      <id>daac47a8029f5fb2925d82fe4dcbf98056f2b16b:reference/algorithm/ranges_any_of.md</id>
      <updated>2022-03-22T00:56:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_any_of.md b/reference/algorithm/ranges_any_of.md
index a2b6ae1e0..ec433feda 100644
--- a/reference/algorithm/ranges_any_of.md
+++ b/reference/algorithm/ranges_any_of.md
@@ -23,6 +23,9 @@ namespace std::ranges {
 ## 概要
 範囲のいずれかの要素が条件を満たすかを判定する。
 
+* (1): イテレータペアで範囲を指定する
+* (2): 範囲を直接指定する
+
 ## テンプレートパラメータ制約
 - (1):
     - `I`が[`input_iterator`](/reference/iterator/input_iterator.md)である
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>count -- 概要を更新 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_count.html"/>
      <id>daac47a8029f5fb2925d82fe4dcbf98056f2b16b:reference/algorithm/ranges_count.md</id>
      <updated>2022-03-22T00:56:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_count.md b/reference/algorithm/ranges_count.md
index 0f31af4b6..49d338d93 100644
--- a/reference/algorithm/ranges_count.md
+++ b/reference/algorithm/ranges_count.md
@@ -29,6 +29,9 @@ namespace std::ranges {
 ## 概要
 指定された値と等値な要素の数を数える。
 
+* (1): イテレータペアで範囲を指定する
+* (2): 範囲を直接指定する
+
 ## テンプレートパラメータ制約
 - (1):
     - `I`が[`input_iterator`](/reference/iterator/input_iterator.md)である
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>count_if -- 概要を更新 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_count_if.html"/>
      <id>daac47a8029f5fb2925d82fe4dcbf98056f2b16b:reference/algorithm/ranges_count_if.md</id>
      <updated>2022-03-22T00:56:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_count_if.md b/reference/algorithm/ranges_count_if.md
index 593e963f4..2cf414f54 100644
--- a/reference/algorithm/ranges_count_if.md
+++ b/reference/algorithm/ranges_count_if.md
@@ -27,6 +27,9 @@ namespace std::ranges {
 ## 概要
 条件を満たしている要素の数を数える。
 
+* (1): イテレータペアで範囲を指定する
+* (2): 範囲を直接指定する
+
 ## テンプレートパラメータ制約
 - (1):
     - `I`が[`input_iterator`](/reference/iterator/input_iterator.md)である
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ends_with -- 概要を更新 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_ends_with.html"/>
      <id>daac47a8029f5fb2925d82fe4dcbf98056f2b16b:reference/algorithm/ranges_ends_with.md</id>
      <updated>2022-03-22T00:56:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_ends_with.md b/reference/algorithm/ranges_ends_with.md
index 06fa0976c..99ea4bd30 100644
--- a/reference/algorithm/ranges_ends_with.md
+++ b/reference/algorithm/ranges_ends_with.md
@@ -34,6 +34,9 @@ namespace std::ranges {
 ## 概要
 シーケンスの末尾が指定されたシーケンスと一致するかを調べる
 
+* (1): イテレータペアで範囲を指定する
+* (2): 範囲を直接指定する
+
 ## 戻り値
 
 * (1): 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>equal -- 概要を更新 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_equal.html"/>
      <id>daac47a8029f5fb2925d82fe4dcbf98056f2b16b:reference/algorithm/ranges_equal.md</id>
      <updated>2022-03-22T00:56:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_equal.md b/reference/algorithm/ranges_equal.md
index 9516f0940..13b23e4d8 100644
--- a/reference/algorithm/ranges_equal.md
+++ b/reference/algorithm/ranges_equal.md
@@ -30,6 +30,9 @@ namespace std::ranges {
 ## 概要
 2つの範囲を等値比較する。
 
+* (1): イテレータペアで範囲を指定する
+* (2): 範囲を直接指定する
+
 2つの範囲の要素数および各要素が等値であった場合、`true`を返す。
 
 ## 戻り値
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>find -- 概要を更新 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_find.html"/>
      <id>daac47a8029f5fb2925d82fe4dcbf98056f2b16b:reference/algorithm/ranges_find.md</id>
      <updated>2022-03-22T00:56:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_find.md b/reference/algorithm/ranges_find.md
index 2ae35ee0c..0d20a1b04 100644
--- a/reference/algorithm/ranges_find.md
+++ b/reference/algorithm/ranges_find.md
@@ -28,6 +28,9 @@ namespace std::ranges {
 ## 概要
 指定された値を検索する。
 
+* (1): イテレータペアで範囲を指定する
+* (2): 範囲を直接指定する
+
 
 ## 戻り値
 `[first,last)` あるいは `r` 内のイテレータ i について、[`invoke`](/reference/functional/invoke.md)`(proj, *i) == value` であるような最初のイテレータを返す。そのようなイテレータが見つからなかった場合は `last` を返す。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>find_end -- 概要を更新 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_find_end.html"/>
      <id>daac47a8029f5fb2925d82fe4dcbf98056f2b16b:reference/algorithm/ranges_find_end.md</id>
      <updated>2022-03-22T00:56:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_find_end.md b/reference/algorithm/ranges_find_end.md
index cf9fc0014..fb67c4655 100644
--- a/reference/algorithm/ranges_find_end.md
+++ b/reference/algorithm/ranges_find_end.md
@@ -19,6 +19,9 @@ namespace std::ranges {
 ## 概要
 範囲の中から、特定のサブシーケンスを検索する。
 
+* (1): イテレータペアで範囲を指定する
+* (2): 範囲を直接指定する
+
 
 ## 戻り値
 - (1): `[first1,last1 - (last2 - first2))` 内のイテレータ `i` があるとき、0 以上 `last2 - first2` 未満の全ての整数 `n` について、それぞれ `*(i + n) == *(first2 + n)` もしくは `invoke(pred, invoke(proj1, *(i + n)), invoke(proj2, *(first2 + n)))) != false` であるようなサブシーケンスを探し、見つかった **最後の** サブシーケンス`{i, i + (i == last1 ? 0 : last2 - first2)}`を返す。そのようなイテレータが見つからない、もしくは `[first2,last2)` が空である場合は `{last1, last1}` を返す。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>find_first_of -- 概要を更新 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_find_first_of.html"/>
      <id>daac47a8029f5fb2925d82fe4dcbf98056f2b16b:reference/algorithm/ranges_find_first_of.md</id>
      <updated>2022-03-22T00:56:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_find_first_of.md b/reference/algorithm/ranges_find_first_of.md
index 2e2736939..c71d9979b 100644
--- a/reference/algorithm/ranges_find_first_of.md
+++ b/reference/algorithm/ranges_find_first_of.md
@@ -29,6 +29,9 @@ namespace std::ranges {
 ## 概要
 ある集合の1つとマッチする最初の要素を検索する。
 
+* (1): イテレータペアで範囲を指定する
+* (2): 範囲を直接指定する
+
 
 ## 戻り値
 `[first1,last1 - (last2 - first2))` 内のイテレータ `i` があるとき、`[first2,last2)` 内のイテレータ `j` について、どれかが [`invoke`](/reference/functional/invoke.md)`(pred, `[`invoke`](/reference/functional/invoke.md)`(proj1, *i), `[`invoke`](/reference/functional/invoke.md)`(proj2, *j)) == true` であるような最初のイテレータを返す。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>find_if -- 概要を更新 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_find_if.html"/>
      <id>daac47a8029f5fb2925d82fe4dcbf98056f2b16b:reference/algorithm/ranges_find_if.md</id>
      <updated>2022-03-22T00:56:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_find_if.md b/reference/algorithm/ranges_find_if.md
index a041dbb74..97cc69aee 100644
--- a/reference/algorithm/ranges_find_if.md
+++ b/reference/algorithm/ranges_find_if.md
@@ -25,6 +25,9 @@ namespace std::ranges {
 ## 概要
 範囲の中から、指定された条件を満たす最初の要素を検索する。
 
+* (1): イテレータペアで範囲を指定する
+* (2): 範囲を直接指定する
+
 
 ## 戻り値
 `[first,last)` あるいは `r` 内のイテレータ `i` について、[`invoke`](/reference/functional/invoke.md)`(pred, `[`invoke`](/reference/functional/invoke.md)`(proj, *i)) != false` である最初のイテレータを返す。そのようなイテレータが見つからなかった場合は `last` を返す。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>find_if_not -- 概要を更新 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_find_if_not.html"/>
      <id>daac47a8029f5fb2925d82fe4dcbf98056f2b16b:reference/algorithm/ranges_find_if_not.md</id>
      <updated>2022-03-22T00:56:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_find_if_not.md b/reference/algorithm/ranges_find_if_not.md
index 5be9d90da..5423c1f33 100644
--- a/reference/algorithm/ranges_find_if_not.md
+++ b/reference/algorithm/ranges_find_if_not.md
@@ -25,6 +25,9 @@ namespace std::ranges {
 ## 概要
 範囲の中から、指定された条件を満たさない最初の要素を検索する。
 
+* (1): イテレータペアで範囲を指定する
+* (2): 範囲を直接指定する
+
 
 ## 戻り値
 `[first,last)` あるいは `r` 内のイテレータ `i` について、[`invoke`](/reference/functional/invoke.md)`(pred, `[`invoke`](/reference/functional/invoke.md)`(proj, *i)) == false` である最初のイテレータを返す。そのようなイテレータが見つからなかった場合は `last` を返す。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>for_each -- 概要を更新 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_for_each.html"/>
      <id>daac47a8029f5fb2925d82fe4dcbf98056f2b16b:reference/algorithm/ranges_for_each.md</id>
      <updated>2022-03-22T00:56:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_for_each.md b/reference/algorithm/ranges_for_each.md
index 6100702e2..85795f2be 100644
--- a/reference/algorithm/ranges_for_each.md
+++ b/reference/algorithm/ranges_for_each.md
@@ -27,6 +27,9 @@ namespace std::ranges {
 ## 概要
 範囲の全ての要素に、指定された関数を適用する。
 
+* (1): イテレータペアで範囲を指定する
+* (2): 範囲を直接指定する
+
 ## テンプレートパラメータ制約
 - (1):
     - `I`が[`input_iterator`](/reference/iterator/input_iterator.md)である
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>none_of -- 概要を更新 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_none_of.html"/>
      <id>daac47a8029f5fb2925d82fe4dcbf98056f2b16b:reference/algorithm/ranges_none_of.md</id>
      <updated>2022-03-22T00:56:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_none_of.md b/reference/algorithm/ranges_none_of.md
index 66f1da921..28fa19168 100644
--- a/reference/algorithm/ranges_none_of.md
+++ b/reference/algorithm/ranges_none_of.md
@@ -23,6 +23,9 @@ namespace std::ranges {
 ## 概要
 範囲の全ての要素が条件を満たさないかを判定する。
 
+* (1): イテレータペアで範囲を指定する
+* (2): 範囲を直接指定する
+
 ## テンプレートパラメータ制約
 - (1):
     - `I`が[`input_iterator`](/reference/iterator/input_iterator.md)である
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>search -- 概要を更新 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_search.html"/>
      <id>daac47a8029f5fb2925d82fe4dcbf98056f2b16b:reference/algorithm/ranges_search.md</id>
      <updated>2022-03-22T00:56:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_search.md b/reference/algorithm/ranges_search.md
index 2ec8cb3cd..3d474d81c 100644
--- a/reference/algorithm/ranges_search.md
+++ b/reference/algorithm/ranges_search.md
@@ -29,6 +29,9 @@ namespace std::ranges {
 ## 概要
 あるシーケンスの中から、特定のサブシーケンスを探す
 
+* (1): イテレータペアで範囲を指定する
+* (2): 範囲を直接指定する
+
 ## 戻り値
 - (1) :
     - `[first1,last1 - (last2 - first2))` 内のイテレータ `i` があるとき、0 以上 `last2 - first2` 未満の整数 `n` について、それぞれ [`invoke`](/reference/functional/invoke.md)`(pred, `[`invoke`](/reference/functional/invoke.md)`(proj1, *(i + n)), `[`invoke`](/reference/functional/invoke.md)`(proj2, *(first2 + n)))` であるようなサブシーケンスを探し、見つかった最初のサブシーケンスを返す。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>search_n -- 概要を更新 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_search_n.html"/>
      <id>daac47a8029f5fb2925d82fe4dcbf98056f2b16b:reference/algorithm/ranges_search_n.md</id>
      <updated>2022-03-22T00:56:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_search_n.md b/reference/algorithm/ranges_search_n.md
index 429eb1fac..6ccb4346b 100644
--- a/reference/algorithm/ranges_search_n.md
+++ b/reference/algorithm/ranges_search_n.md
@@ -30,6 +30,9 @@ namespace std::ranges {]
 ## 概要
 あるシーケンスの中から、指定の要素が連続するサブシーケンスを探す。
 
+* (1): イテレータペアで範囲を指定する
+* (2): 範囲を直接指定する
+
 ## 戻り値
 `[first,last-count)` 内のイテレータ `i` があるとき、0 以上 `count` 未満の整数 `n` について、それぞれ [`invoke`](/reference/functional/invoke.md)`(pred, `[`invoke`](/reference/functional/invoke.md)`(proj, *(i + n)), value)` であるようなサブシーケンスを探し、見つかった最初のサブシーケンスを返す。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>starts_with -- 概要を更新 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_starts_with.html"/>
      <id>daac47a8029f5fb2925d82fe4dcbf98056f2b16b:reference/algorithm/ranges_starts_with.md</id>
      <updated>2022-03-22T00:56:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_starts_with.md b/reference/algorithm/ranges_starts_with.md
index a0a817698..2db8929a4 100644
--- a/reference/algorithm/ranges_starts_with.md
+++ b/reference/algorithm/ranges_starts_with.md
@@ -27,6 +27,9 @@ namespace std::ranges {
 ## 概要
 シーケンスの先頭が指定されたシーケンスと一致するかを調べる
 
+* (1): イテレータペアで範囲を指定する
+* (2): 範囲を直接指定する
+
 ## 戻り値
 
 [`ranges::mismatch`](ranges_mismatch.md)`(`[`std::move`](/reference/utility/move.md)`(first1), last1, `[`std::move`](/reference/utility/move.md)`(first2), last2, pred, proj1, proj2).in2 == last2`
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>copy -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_copy.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_copy.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_copy.md b/reference/algorithm/ranges_copy.md
index 6b68acc53..d59127a00 100644
--- a/reference/algorithm/ranges_copy.md
+++ b/reference/algorithm/ranges_copy.md
@@ -27,7 +27,7 @@ namespace std::ranges {
 ## 概要
 指定された範囲の要素をコピーする。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>copy_backward -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_copy_backward.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_copy_backward.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_copy_backward.md b/reference/algorithm/ranges_copy_backward.md
index e58f5b5db..3cbeaf640 100644
--- a/reference/algorithm/ranges_copy_backward.md
+++ b/reference/algorithm/ranges_copy_backward.md
@@ -26,7 +26,7 @@ namespace std::ranges {
 ## 概要
 指定された範囲の要素を後ろからコピーする。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>copy_if -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_copy_if.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_copy_if.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_copy_if.md b/reference/algorithm/ranges_copy_if.md
index 0f7b62d74..68437521d 100644
--- a/reference/algorithm/ranges_copy_if.md
+++ b/reference/algorithm/ranges_copy_if.md
@@ -29,7 +29,7 @@ namespace std::ranges {
 ## 概要
 条件を満たす要素のみをコピーする。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 ## 事前条件
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>fill -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_fill.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_fill.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_fill.md b/reference/algorithm/ranges_fill.md
index eb53fb1dd..2eddb09d0 100644
--- a/reference/algorithm/ranges_fill.md
+++ b/reference/algorithm/ranges_fill.md
@@ -24,7 +24,7 @@ namespace std::ranges {
 ## 概要
 指定された値で出力の範囲に書き込む。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>generate -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_generate.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_generate.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_generate.md b/reference/algorithm/ranges_generate.md
index c0b07ff19..c2d7a902a 100644
--- a/reference/algorithm/ranges_generate.md
+++ b/reference/algorithm/ranges_generate.md
@@ -29,7 +29,7 @@ namespace std::ranges {
 ## 概要
 出力の範囲へ関数の結果を書き込む。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>includes -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_includes.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_includes.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_includes.md b/reference/algorithm/ranges_includes.md
index 47f4fdbcb..7ca3c4303 100644
--- a/reference/algorithm/ranges_includes.md
+++ b/reference/algorithm/ranges_includes.md
@@ -27,7 +27,7 @@ namespace std::ranges {
 ## 概要
 2つのソート済み範囲において、一方の範囲の要素がもう一方の範囲に全て含まれているかを判定する。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 ## 戻り値
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>inplace_merge -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_inplace_merge.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_inplace_merge.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_inplace_merge.md b/reference/algorithm/ranges_inplace_merge.md
index 3ea223411..a6365fb9c 100644
--- a/reference/algorithm/ranges_inplace_merge.md
+++ b/reference/algorithm/ranges_inplace_merge.md
@@ -27,7 +27,7 @@ namespace std::ranges {
 ## 概要
 2つの連続したソート済み範囲をマージする。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 ## 事前条件
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_heap -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_is_heap.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_is_heap.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_is_heap.md b/reference/algorithm/ranges_is_heap.md
index c6225ee5d..1cdbba857 100644
--- a/reference/algorithm/ranges_is_heap.md
+++ b/reference/algorithm/ranges_is_heap.md
@@ -26,7 +26,7 @@ namespace std::ranges {
 ## 概要
 範囲がヒープ化されているか判定する。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_heap_until -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_is_heap_until.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_is_heap_until.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_is_heap_until.md b/reference/algorithm/ranges_is_heap_until.md
index 95ed64d26..786dfc408 100644
--- a/reference/algorithm/ranges_is_heap_until.md
+++ b/reference/algorithm/ranges_is_heap_until.md
@@ -26,7 +26,7 @@ namespace std::ranges {
 ## 概要
 範囲がヒープ化されているか判定し、ヒープ化されていない最初の要素を指すイテレータを取得する。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_permutation -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_is_permutation.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_is_permutation.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_is_permutation.md b/reference/algorithm/ranges_is_permutation.md
index 09dc08b8a..065f8cb35 100644
--- a/reference/algorithm/ranges_is_permutation.md
+++ b/reference/algorithm/ranges_is_permutation.md
@@ -27,7 +27,7 @@ namespace std::ranges {
 ## 概要
 範囲 `[first2, last2)` を並べ替えたものが、`[first1, last1)` の範囲と一致するか判定する。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 ## 戻り値
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_sorted_until -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_is_sorted_until.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_is_sorted_until.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_is_sorted_until.md b/reference/algorithm/ranges_is_sorted_until.md
index 7df2acc3f..5bc17f503 100644
--- a/reference/algorithm/ranges_is_sorted_until.md
+++ b/reference/algorithm/ranges_is_sorted_until.md
@@ -28,7 +28,7 @@ namespace std::ranges {
 ## 概要
 ソート済みか判定し、ソートされていない位置のイテレータを取得する
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 ## 戻り値
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>lexicographical_compare -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_lexicographical_compare.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_lexicographical_compare.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_lexicographical_compare.md b/reference/algorithm/ranges_lexicographical_compare.md
index 9cca180fe..16096a9bc 100644
--- a/reference/algorithm/ranges_lexicographical_compare.md
+++ b/reference/algorithm/ranges_lexicographical_compare.md
@@ -28,7 +28,7 @@ namespace std::ranges {
 ## 概要
 `[first1, last1)`および`[first2, last2)`の2つの範囲を辞書式順序で比較する。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 ## 効果
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>make_heap -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_make_heap.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_make_heap.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_make_heap.md b/reference/algorithm/ranges_make_heap.md
index 5f4bd322c..0e2118aa8 100644
--- a/reference/algorithm/ranges_make_heap.md
+++ b/reference/algorithm/ranges_make_heap.md
@@ -29,7 +29,7 @@ namespace std::ranges {
 ## 概要
 範囲をヒープ化する。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>merge -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_merge.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_merge.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_merge.md b/reference/algorithm/ranges_merge.md
index c56b5c539..226e863ab 100644
--- a/reference/algorithm/ranges_merge.md
+++ b/reference/algorithm/ranges_merge.md
@@ -29,9 +29,9 @@ namespace std::ranges {
 * borrowed_iterator_t[link /reference/ranges/borrowed_iterator_t.md]
 
 ## 概要
-2つのソート済み範囲をマージして、出力イテレーターへ出力する。
+2つのソート済み範囲をマージして、出力イテレータへ出力する。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>mismatch -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_mismatch.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_mismatch.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_mismatch.md b/reference/algorithm/ranges_mismatch.md
index c25f09b6c..7ba4fbd53 100644
--- a/reference/algorithm/ranges_mismatch.md
+++ b/reference/algorithm/ranges_mismatch.md
@@ -34,7 +34,7 @@ namespace std::ranges {
 ## 概要
 2つのシーケンスが一致していない場所を検索する。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 ## 戻り値
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>move -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_move.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_move.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_move.md b/reference/algorithm/ranges_move.md
index ae6367d4b..5e8937914 100644
--- a/reference/algorithm/ranges_move.md
+++ b/reference/algorithm/ranges_move.md
@@ -27,7 +27,7 @@ namespace std::ranges {
 ## 概要
 指定された範囲の要素をムーブする。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 ## 事前条件
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>move_backward -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_move_backward.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_move_backward.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_move_backward.md b/reference/algorithm/ranges_move_backward.md
index 21933dee3..2e6f08a14 100644
--- a/reference/algorithm/ranges_move_backward.md
+++ b/reference/algorithm/ranges_move_backward.md
@@ -26,7 +26,7 @@ namespace std::ranges {
 ## 概要
 指定された範囲の要素を後ろからムーブする。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 ## 事前条件
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>next_permutation -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_next_permutation.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_next_permutation.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_next_permutation.md b/reference/algorithm/ranges_next_permutation.md
index 400cfc9b3..3f3f123a1 100644
--- a/reference/algorithm/ranges_next_permutation.md
+++ b/reference/algorithm/ranges_next_permutation.md
@@ -29,7 +29,7 @@ namespace std::ranges {
 ## 概要
 与えられた時点の`[first, last)`の範囲を起点の順列として、辞書順によるその次の順列を生成する。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 ## 効果
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>partial_sort_copy -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_partial_sort_copy.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_partial_sort_copy.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_partial_sort_copy.md b/reference/algorithm/ranges_partial_sort_copy.md
index 9342d7403..5301774bc 100644
--- a/reference/algorithm/ranges_partial_sort_copy.md
+++ b/reference/algorithm/ranges_partial_sort_copy.md
@@ -40,7 +40,7 @@ namespace std::ranges {
 ## 概要
 範囲を部分的にソートした結果を他の範囲にコピーする
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 ## 効果
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>partition -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_partition.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_partition.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_partition.md b/reference/algorithm/ranges_partition.md
index 70b08cb06..4c18cae09 100644
--- a/reference/algorithm/ranges_partition.md
+++ b/reference/algorithm/ranges_partition.md
@@ -29,7 +29,7 @@ namespace std::ranges {
 ## 概要
 与えられた範囲を条件によって[区分化](/reference/algorithm.md#sequence-is-partitioned)する。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>partition_copy -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_partition_copy.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_partition_copy.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_partition_copy.md b/reference/algorithm/ranges_partition_copy.md
index 50dae8cf2..ebd6fec68 100644
--- a/reference/algorithm/ranges_partition_copy.md
+++ b/reference/algorithm/ranges_partition_copy.md
@@ -35,7 +35,7 @@ namespace std::ranges {
 ## 概要
 与えられた範囲を条件によって 2 つの出力の範囲へ分けてコピーする。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>partition_point -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_partition_point.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_partition_point.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_partition_point.md b/reference/algorithm/ranges_partition_point.md
index c28391c15..165001182 100644
--- a/reference/algorithm/ranges_partition_point.md
+++ b/reference/algorithm/ranges_partition_point.md
@@ -28,7 +28,7 @@ namespace std::ranges {
 ## 概要
 与えられた範囲から条件によって[区分化](/reference/algorithm.md#sequence-is-partitioned)されている位置を得る。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 ## 事前条件
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>pop_heap -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_pop_heap.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_pop_heap.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_pop_heap.md b/reference/algorithm/ranges_pop_heap.md
index da6000f65..ae6ec364f 100644
--- a/reference/algorithm/ranges_pop_heap.md
+++ b/reference/algorithm/ranges_pop_heap.md
@@ -29,7 +29,7 @@ namespace std::ranges {
 ## 概要
 ヒープ化された範囲の先頭と末尾を入れ替え、ヒープ範囲を作り直す
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>prev_permutation -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_prev_permutation.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_prev_permutation.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_prev_permutation.md b/reference/algorithm/ranges_prev_permutation.md
index 62720edc6..8cac1b54b 100644
--- a/reference/algorithm/ranges_prev_permutation.md
+++ b/reference/algorithm/ranges_prev_permutation.md
@@ -28,7 +28,7 @@ namespace std::ranges {
 ## 概要
 与えられた時点の`[first, last)`の範囲を起点の順列として、辞書順によるその前の順列を生成する。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 ## 効果
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>push_heap -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_push_heap.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_push_heap.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_push_heap.md b/reference/algorithm/ranges_push_heap.md
index 777d489e8..7fa825485 100644
--- a/reference/algorithm/ranges_push_heap.md
+++ b/reference/algorithm/ranges_push_heap.md
@@ -29,7 +29,7 @@ namespace std::ranges {
 ## 概要
 ヒープ化された範囲に要素を追加したヒープ範囲を得る
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>remove -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_remove.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_remove.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_remove.md b/reference/algorithm/ranges_remove.md
index 8c1b1f2ea..4787437db 100644
--- a/reference/algorithm/ranges_remove.md
+++ b/reference/algorithm/ranges_remove.md
@@ -31,7 +31,7 @@ namespace std::ranges {
 ## 概要
 指定された要素を取り除く。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>remove_copy -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_remove_copy.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_remove_copy.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_remove_copy.md b/reference/algorithm/ranges_remove_copy.md
index 094f1ffa8..a047a5abf 100644
--- a/reference/algorithm/ranges_remove_copy.md
+++ b/reference/algorithm/ranges_remove_copy.md
@@ -35,7 +35,7 @@ namespace std::ranges {
 ## 概要
 指定された要素を除け、その結果を出力の範囲へコピーする。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 ## 事前条件
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>remove_copy_if -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_remove_copy_if.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_remove_copy_if.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_remove_copy_if.md b/reference/algorithm/ranges_remove_copy_if.md
index 93e54c58a..5a9362a48 100644
--- a/reference/algorithm/ranges_remove_copy_if.md
+++ b/reference/algorithm/ranges_remove_copy_if.md
@@ -34,7 +34,7 @@ namespace std::ranges {
 ## 概要
 条件を満たす要素を除け、その結果を出力の範囲へコピーする。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 ## 事前条件
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>remove_if -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_remove_if.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_remove_if.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_remove_if.md b/reference/algorithm/ranges_remove_if.md
index fa699b99c..855660bd3 100644
--- a/reference/algorithm/ranges_remove_if.md
+++ b/reference/algorithm/ranges_remove_if.md
@@ -30,7 +30,7 @@ namespace std::ranges {
 ## 概要
 条件を満たす要素を除ける。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>replace -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_replace.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_replace.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_replace.md b/reference/algorithm/ranges_replace.md
index 31f670786..c94e3b262 100644
--- a/reference/algorithm/ranges_replace.md
+++ b/reference/algorithm/ranges_replace.md
@@ -31,7 +31,7 @@ namespace std::ranges {
 ## 概要
 指定された値と一致する要素を指定された値に置き換える。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>replace_copy -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_replace_copy.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_replace_copy.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_replace_copy.md b/reference/algorithm/ranges_replace_copy.md
index 104638ab9..406a3c318 100644
--- a/reference/algorithm/ranges_replace_copy.md
+++ b/reference/algorithm/ranges_replace_copy.md
@@ -35,7 +35,7 @@ namespace std::ranges {
 ## 概要
 指定された値を一致する要素を指定された値に置き換え、その結果を出力の範囲へコピーする。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 ## 事前条件
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>replace_copy_if -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_replace_copy_if.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_replace_copy_if.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_replace_copy_if.md b/reference/algorithm/ranges_replace_copy_if.md
index b66639f88..2f3fefdde 100644
--- a/reference/algorithm/ranges_replace_copy_if.md
+++ b/reference/algorithm/ranges_replace_copy_if.md
@@ -34,7 +34,7 @@ namespace std::ranges {
 ## 概要
 条件を満たす要素を指定された値に置き換え、その結果を出力の範囲へコピーする。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 ## 事前条件
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>replace_if -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_replace_if.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_replace_if.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_replace_if.md b/reference/algorithm/ranges_replace_if.md
index cd4568bde..44222d628 100644
--- a/reference/algorithm/ranges_replace_if.md
+++ b/reference/algorithm/ranges_replace_if.md
@@ -30,7 +30,7 @@ namespace std::ranges {
 ## 概要
 条件を満たす要素を指定された値に置き換える。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>reverse -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_reverse.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_reverse.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_reverse.md b/reference/algorithm/ranges_reverse.md
index 9d81cc832..e959ffaec 100644
--- a/reference/algorithm/ranges_reverse.md
+++ b/reference/algorithm/ranges_reverse.md
@@ -27,7 +27,7 @@ namespace std::ranges {
 ## 概要
 要素の並びを逆にする。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 ## 要件
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>reverse_copy -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_reverse_copy.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_reverse_copy.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_reverse_copy.md b/reference/algorithm/ranges_reverse_copy.md
index a6202a5dc..60fa353f1 100644
--- a/reference/algorithm/ranges_reverse_copy.md
+++ b/reference/algorithm/ranges_reverse_copy.md
@@ -31,7 +31,7 @@ namespace std::ranges {
 ## 概要
 要素の並びを逆にし、その結果を出力の範囲へコピーする。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 ## 事前条件
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>rotate -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_rotate.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_rotate.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_rotate.md b/reference/algorithm/ranges_rotate.md
index 923fb73ce..057d5718b 100644
--- a/reference/algorithm/ranges_rotate.md
+++ b/reference/algorithm/ranges_rotate.md
@@ -26,7 +26,7 @@ namespace std::ranges {
 ## 概要
 `middle`の要素が先頭、`middle-1`の要素が末尾となるように、`[first,last)`の要素の並びを回転させる。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 ## 事前条件
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>rotate_copy -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_rotate_copy.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_rotate_copy.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_rotate_copy.md b/reference/algorithm/ranges_rotate_copy.md
index 59d81c1a3..60a8e5a59 100644
--- a/reference/algorithm/ranges_rotate_copy.md
+++ b/reference/algorithm/ranges_rotate_copy.md
@@ -30,7 +30,7 @@ namespace std::ranges {
 ## 概要
 `middle`の要素が先頭、`middle-1`の要素が末尾となるように、`[first,last)`の要素の並びを回転させ、その結果を出力の範囲へコピーする。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sample -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_sample.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_sample.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_sample.md b/reference/algorithm/ranges_sample.md
index 48a21f0b4..a2fc80cf0 100644
--- a/reference/algorithm/ranges_sample.md
+++ b/reference/algorithm/ranges_sample.md
@@ -33,7 +33,7 @@ namespace std::ranges {
 ## 概要
 範囲から指定された個数の要素をランダムに抽出する。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 ## 事前条件
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>set_difference -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_set_difference.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_set_difference.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_set_difference.md b/reference/algorithm/ranges_set_difference.md
index 8a8f3cb4f..5bf939271 100644
--- a/reference/algorithm/ranges_set_difference.md
+++ b/reference/algorithm/ranges_set_difference.md
@@ -34,7 +34,7 @@ namespace std::ranges {
 ## 概要
 2つのソート済み範囲の差集合を得る
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 ## 事前条件
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>set_intersection -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_set_intersection.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_set_intersection.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_set_intersection.md b/reference/algorithm/ranges_set_intersection.md
index 134478e9a..4883aaa17 100644
--- a/reference/algorithm/ranges_set_intersection.md
+++ b/reference/algorithm/ranges_set_intersection.md
@@ -33,7 +33,7 @@ namespace std::ranges {
 ## 概要
 2つのソート済み範囲の積集合を得る
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>set_symmetric_difference -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_set_symmetric_difference.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_set_symmetric_difference.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_set_symmetric_difference.md b/reference/algorithm/ranges_set_symmetric_difference.md
index ed699dc5d..e8782f0c2 100644
--- a/reference/algorithm/ranges_set_symmetric_difference.md
+++ b/reference/algorithm/ranges_set_symmetric_difference.md
@@ -36,7 +36,7 @@ namespace std::ranges {
 ## 概要
 2つのソート済み範囲の対称差集合、すなわち2つの範囲の共通しない要素からなる集合を得る。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>set_union -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_set_union.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_set_union.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_set_union.md b/reference/algorithm/ranges_set_union.md
index e876af5d5..bce71361e 100644
--- a/reference/algorithm/ranges_set_union.md
+++ b/reference/algorithm/ranges_set_union.md
@@ -33,7 +33,7 @@ namespace std::ranges {
 ## 概要
 2つのソート済み範囲の和集合を得る
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 ## 事前条件
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>shift_left -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_shift_left.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_shift_left.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_shift_left.md b/reference/algorithm/ranges_shift_left.md
index adc75fe7c..2d0e8bf69 100644
--- a/reference/algorithm/ranges_shift_left.md
+++ b/reference/algorithm/ranges_shift_left.md
@@ -28,7 +28,7 @@ namespace std::ranges {
 ## 概要
 範囲の要素をn個だけ左にシフトさせる。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 この関数に符号付き整数型のシフト数として、0および負数を指定した場合はなにもしない。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>shift_right -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_shift_right.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_shift_right.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_shift_right.md b/reference/algorithm/ranges_shift_right.md
index 55b05d1fa..0e41f9fc6 100644
--- a/reference/algorithm/ranges_shift_right.md
+++ b/reference/algorithm/ranges_shift_right.md
@@ -29,7 +29,7 @@ namespace std::ranges {
 ## 概要
 範囲の要素をn個だけ右にシフトさせる。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 この関数に符号付き整数型のシフト数として、0および負数を指定した場合はなにもしない。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>shuffle -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_shuffle.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_shuffle.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_shuffle.md b/reference/algorithm/ranges_shuffle.md
index 8a3ddf677..4c8c11fbe 100644
--- a/reference/algorithm/ranges_shuffle.md
+++ b/reference/algorithm/ranges_shuffle.md
@@ -30,7 +30,7 @@ namespace std::ranges {
 ## 概要
 `[first,last)` のそれぞれの要素を同じ確率で並び替える。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sort -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_sort.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_sort.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_sort.md b/reference/algorithm/ranges_sort.md
index c18c8c166..38a99667b 100644
--- a/reference/algorithm/ranges_sort.md
+++ b/reference/algorithm/ranges_sort.md
@@ -27,7 +27,7 @@ namespace std::ranges {
 ## 概要
 範囲を並べ替える
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 ## 効果
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sort_heap -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_sort_heap.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_sort_heap.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_sort_heap.md b/reference/algorithm/ranges_sort_heap.md
index 602197e78..30ba28e9c 100644
--- a/reference/algorithm/ranges_sort_heap.md
+++ b/reference/algorithm/ranges_sort_heap.md
@@ -29,7 +29,7 @@ namespace std::ranges {
 ## 概要
 ヒープ化された範囲を並べ替える
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>stable_partition -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_stable_partition.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_stable_partition.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_stable_partition.md b/reference/algorithm/ranges_stable_partition.md
index 513d6d409..8e013befc 100644
--- a/reference/algorithm/ranges_stable_partition.md
+++ b/reference/algorithm/ranges_stable_partition.md
@@ -32,7 +32,7 @@ namespace std::ranges {
 ## 概要
 与えられた範囲を相対順序を保ちながら条件によって[区分化](/reference/algorithm.md#sequence-is-partitioned)する。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>stable_sort -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_stable_sort.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_stable_sort.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_stable_sort.md b/reference/algorithm/ranges_stable_sort.md
index b65a6a10c..ba21cfd28 100644
--- a/reference/algorithm/ranges_stable_sort.md
+++ b/reference/algorithm/ranges_stable_sort.md
@@ -27,7 +27,7 @@ namespace std::ranges {
 ## 概要
 範囲を安定ソートで並べ替える
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 ## 効果
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>swap_ranges -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_swap_ranges.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_swap_ranges.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_swap_ranges.md b/reference/algorithm/ranges_swap_ranges.md
index 02275bcac..d70e346ff 100644
--- a/reference/algorithm/ranges_swap_ranges.md
+++ b/reference/algorithm/ranges_swap_ranges.md
@@ -26,7 +26,7 @@ namespace std::ranges {
 ## 概要
 指定された2つの範囲同士を swap する。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>transform -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_transform.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_transform.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_transform.md b/reference/algorithm/ranges_transform.md
index f71ccf389..5521d8619 100644
--- a/reference/algorithm/ranges_transform.md
+++ b/reference/algorithm/ranges_transform.md
@@ -52,7 +52,7 @@ namespace std::ranges {
 * (1), (2): 1つの範囲の要素に関数を適用し、結果を出力イテレータに出力する
 * (3), (4): 2つの範囲の要素を1つずつ取り出して関数を適用し、結果を出力イテレータに出力する
 
-* (1), (3): イテレーターペアで範囲を指定する
+* (1), (3): イテレータペアで範囲を指定する
 * (2), (4): 範囲を直接指定する
 
 ## 事前条件
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>unique -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_unique.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_unique.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_unique.md b/reference/algorithm/ranges_unique.md
index 2aa84245e..94dbae1b9 100644
--- a/reference/algorithm/ranges_unique.md
+++ b/reference/algorithm/ranges_unique.md
@@ -30,7 +30,7 @@ namespace std::ranges {
 ## 概要
 重複した要素を除ける。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 この関数は、隣り合った重複要素を除いた要素を、範囲の先頭に集める。この関数によってコンテナから直接要素が削除され、コンテナの要素数が減るようなことはない。コンテナから実際に要素を削除する場合は、この関数の戻り値として、先頭に集められた重複なし範囲の末尾の次を指すイテレータが返るため、そのイテレータを介してコンテナの`erase()`メンバ関数などを呼び出し、削除を行うこと。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>unique_copy -- 表記ゆれ修正 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_unique_copy.html"/>
      <id>7a28d45cc69ea4f6e082af9ef2f92a49106cce46:reference/algorithm/ranges_unique_copy.md</id>
      <updated>2022-03-22T00:53:40+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_unique_copy.md b/reference/algorithm/ranges_unique_copy.md
index 4e85f76ff..f418c4473 100644
--- a/reference/algorithm/ranges_unique_copy.md
+++ b/reference/algorithm/ranges_unique_copy.md
@@ -41,7 +41,7 @@ namespace std::ranges {
 ## 概要
 隣り合った重複要素を取り除き、その結果を出力の範囲へコピーする。
 
-* (1): イテレーターペアで範囲を指定する
+* (1): イテレータペアで範囲を指定する
 * (2): 範囲を直接指定する
 
 ## 事前条件
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_heap -- 不可視文字を削除 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_is_heap.html"/>
      <id>9a1c807eaab2642d6960826346f2ade0cd35f45f:reference/algorithm/ranges_is_heap.md</id>
      <updated>2022-03-22T00:52:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_is_heap.md b/reference/algorithm/ranges_is_heap.md
index e1af59137..c6225ee5d 100644
--- a/reference/algorithm/ranges_is_heap.md
+++ b/reference/algorithm/ranges_is_heap.md
@@ -31,7 +31,7 @@ namespace std::ranges {
 
 
 ## 効果
-[`ranges​::​is_­heap_­until`](ranges_is_heap_until.md)`(first, last, comp, proj) == last` と等しい。
+[`ranges::is_heap_until`](ranges_is_heap_until.md)`(first, last, comp, proj) == last` と等しい。
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>algorithm -- heap系関数の説明を追加 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm.html"/>
      <id>ad0f2d7258af154c53ba3fe6a4e0e84a24e5d57d:reference/algorithm.md</id>
      <updated>2022-03-22T00:27:48+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm.md b/reference/algorithm.md
index 18335ca6c..1da373fe2 100644
--- a/reference/algorithm.md
+++ b/reference/algorithm.md
@@ -352,12 +352,12 @@ ranges::sort(pv, {}, &amp;amp;Parson::name);
 | [`sort_heap`](algorithm/sort_heap.md)         | ヒープ化された範囲を並べ替える | |
 | [`is_heap_until`](algorithm/is_heap_until.md) | 範囲がヒープ化されているか判定し、ヒープ化されていない最初の要素を指すイテレータを取得する | C++11 |
 | [`is_heap`](algorithm/is_heap.md)             | 範囲がヒープ化されているか判定する | C++11 |
-| [`ranges::push_heap`](algorithm/ranges_push_heap.md.nolink)         | ヒープ化された範囲に要素を追加したヒープ範囲を得る                                         | C++20 |
-| [`ranges::pop_heap`](algorithm/ranges_pop_heap.md.nolink)           | ヒープ化された範囲の先頭と末尾を入れ替え、ヒープ範囲を作り直す                             | C++20 |
-| [`ranges::make_heap`](algorithm/ranges_make_heap.md.nolink)         | 範囲をヒープ化する                                                                         | C++20 |
-| [`ranges::sort_heap`](algorithm/ranges_sort_heap.md.nolink)         | ヒープ化された範囲を並べ替える                                                             | C++20 |
-| [`ranges::is_heap_until`](algorithm/ranges_is_heap_until.md.nolink) | 範囲がヒープ化されているか判定し、ヒープ化されていない最初の要素を指すイテレータを取得する | C++20 |
-| [`ranges::is_heap`](algorithm/ranges_is_heap.md.nolink)             | 範囲がヒープ化されているか判定する                                                         | C++20 |
+| [`ranges::push_heap`](algorithm/ranges_push_heap.md)         | ヒープ化された範囲に要素を追加したヒープ範囲を得る                                         | C++20 |
+| [`ranges::pop_heap`](algorithm/ranges_pop_heap.md)           | ヒープ化された範囲の先頭と末尾を入れ替え、ヒープ範囲を作り直す                             | C++20 |
+| [`ranges::make_heap`](algorithm/ranges_make_heap.md)         | 範囲をヒープ化する                                                                         | C++20 |
+| [`ranges::sort_heap`](algorithm/ranges_sort_heap.md)         | ヒープ化された範囲を並べ替える                                                             | C++20 |
+| [`ranges::is_heap_until`](algorithm/ranges_is_heap_until.md) | 範囲がヒープ化されているか判定し、ヒープ化されていない最初の要素を指すイテレータを取得する | C++20 |
+| [`ranges::is_heap`](algorithm/ranges_is_heap.md)             | 範囲がヒープ化されているか判定する                                                         | C++20 |
 
 ### 最小と最大
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_heap -- heap系関数の説明を追加 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_is_heap.html"/>
      <id>ad0f2d7258af154c53ba3fe6a4e0e84a24e5d57d:reference/algorithm/ranges_is_heap.md</id>
      <updated>2022-03-22T00:27:48+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_is_heap.md b/reference/algorithm/ranges_is_heap.md
new file mode 100644
index 000000000..e1af59137
--- /dev/null
+++ b/reference/algorithm/ranges_is_heap.md
@@ -0,0 +1,77 @@
+# is_heap
+* algorithm[meta header]
+* std::ranges[meta namespace]
+* function template[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::ranges {
+  // (1)
+  template&amp;lt;random_access_iterator I, sentinel_for&amp;lt;I&amp;gt; S, class Proj = identity, indirect_strict_weak_order&amp;lt;projected&amp;lt;I, Proj&amp;gt;&amp;gt; Comp = ranges::less&amp;gt;
+  constexpr bool is_heap(I first, S last, Comp comp = {}, Proj proj = {});
+
+  // (2)
+  template&amp;lt;random_access_range R, class Proj = identity, indirect_strict_weak_order&amp;lt;projected&amp;lt;iterator_t&amp;lt;R&amp;gt;, Proj&amp;gt;&amp;gt; Comp = ranges::less&amp;gt;
+  constexpr bool is_heap(R&amp;amp;&amp;amp; r, Comp comp = {}, Proj proj = {});
+}
+```
+* random_access_iterator[link /reference/iterator/random_access_iterator.md]
+* sentinel_for[link /reference/iterator/sentinel_for.md]
+* ranges::less[link /reference/functional/ranges_less.md]
+* identity[link /reference/functional/identity.md]
+* indirect_strict_weak_order[link /reference/iterator/indirect_strict_weak_order.md]
+* random_access_range[link /reference/ranges/random_access_range.md]
+* iterator_t[link /reference/ranges/iterator_t.md]
+
+## 概要
+範囲がヒープ化されているか判定する。
+
+* (1): イテレーターペアで範囲を指定する
+* (2): 範囲を直接指定する
+
+
+## 効果
+[`ranges​::​is_­heap_­until`](ranges_is_heap_until.md)`(first, last, comp, proj) == last` と等しい。
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;vector&amp;gt;
+#include &amp;lt;algorithm&amp;gt;
+
+int main()
+{
+  std::vector&amp;lt;int&amp;gt; v = {3, 1, 4};
+
+  std::cout &amp;lt;&amp;lt; std::boolalpha;
+
+  std::cout &amp;lt;&amp;lt; &amp;#34;before: is heap? &amp;#34;
+            &amp;lt;&amp;lt; std::ranges::is_heap(v) &amp;lt;&amp;lt; std::endl;
+
+  std::ranges::make_heap(v);
+  std::cout &amp;lt;&amp;lt; &amp;#34; after: is heap? &amp;#34;
+            &amp;lt;&amp;lt; std::ranges::is_heap(v) &amp;lt;&amp;lt; std::endl;
+}
+```
+* std::ranges::is_heap[color ff0000]
+* std::ranges::make_heap[link ranges_make_heap.md]
+
+### 出力
+```
+before: is heap? false
+ after: is heap? true
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): 10.1.0
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
+
+## 参照
+- [N4861 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_heap_until -- heap系関数の説明を追加 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_is_heap_until.html"/>
      <id>ad0f2d7258af154c53ba3fe6a4e0e84a24e5d57d:reference/algorithm/ranges_is_heap_until.md</id>
      <updated>2022-03-22T00:27:48+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_is_heap_until.md b/reference/algorithm/ranges_is_heap_until.md
new file mode 100644
index 000000000..95ed64d26
--- /dev/null
+++ b/reference/algorithm/ranges_is_heap_until.md
@@ -0,0 +1,81 @@
+# is_heap_until
+* algorithm[meta header]
+* std::ranges[meta namespace]
+* function template[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::ranges {
+  // (1)
+  template&amp;lt;random_access_iterator I, sentinel_for&amp;lt;I&amp;gt; S, class Proj = identity, indirect_strict_weak_order&amp;lt;projected&amp;lt;I, Proj&amp;gt;&amp;gt; Comp = ranges::less&amp;gt;
+  constexpr I is_heap_until(I first, S last, Comp comp = {}, Proj proj = {});
+
+  // (2)
+  template&amp;lt;random_access_range R, class Proj = identity, indirect_strict_weak_order&amp;lt;projected&amp;lt;iterator_t&amp;lt;R&amp;gt;, Proj&amp;gt;&amp;gt; Comp = ranges::less&amp;gt;
+  constexpr borrowed_iterator_t&amp;lt;R&amp;gt; is_heap_until(R&amp;amp;&amp;amp; r, Comp comp = {}, Proj proj = {});
+}
+```
+* random_access_iterator[link /reference/iterator/random_access_iterator.md]
+* sentinel_for[link /reference/iterator/sentinel_for.md]
+* ranges::less[link /reference/functional/ranges_less.md]
+* identity[link /reference/functional/identity.md]
+* indirect_strict_weak_order[link /reference/iterator/indirect_strict_weak_order.md]
+* random_access_range[link /reference/ranges/random_access_range.md]
+* iterator_t[link /reference/ranges/iterator_t.md]
+
+## 概要
+範囲がヒープ化されているか判定し、ヒープ化されていない最初の要素を指すイテレータを取得する。
+
+* (1): イテレーターペアで範囲を指定する
+* (2): 範囲を直接指定する
+
+
+## 戻り値
+[`distance`](/reference/iterator/distance.md)`(first, last) &amp;lt; 2` の場合は `last` を返す。そうでない場合、`[first,last]` 内のイテレータ `i` について、`[first,i)` が `heap` であるような最後の `i` を返す。
+
+
+## 計算量
+線形時間
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;vector&amp;gt;
+#include &amp;lt;algorithm&amp;gt;
+
+int main()
+{
+  std::vector&amp;lt;int&amp;gt; v = {3, 1, 4};
+
+  std::cout &amp;lt;&amp;lt; std::boolalpha;
+
+  std::cout &amp;lt;&amp;lt; &amp;#34;before: is heap? &amp;#34;
+            &amp;lt;&amp;lt; (std::ranges::is_heap_until(v) == v.end()) &amp;lt;&amp;lt; std::endl;
+
+  std::ranges::make_heap(v);
+  std::cout &amp;lt;&amp;lt; &amp;#34; after: is heap? &amp;#34;
+            &amp;lt;&amp;lt; (std::ranges::is_heap_until(v) == v.end()) &amp;lt;&amp;lt; std::endl;
+}
+```
+* std::ranges::is_heap_until[color ff0000]
+* std::ranges::make_heap[link ranges_make_heap.md]
+
+### 出力
+```
+before: is heap? false
+ after: is heap? true
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): 10.1.0
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
+
+## 参照
+- [N4861 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>make_heap -- heap系関数の説明を追加 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_make_heap.html"/>
      <id>ad0f2d7258af154c53ba3fe6a4e0e84a24e5d57d:reference/algorithm/ranges_make_heap.md</id>
      <updated>2022-03-22T00:27:48+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_make_heap.md b/reference/algorithm/ranges_make_heap.md
new file mode 100644
index 000000000..5f4bd322c
--- /dev/null
+++ b/reference/algorithm/ranges_make_heap.md
@@ -0,0 +1,86 @@
+# make_heap
+* algorithm[meta header]
+* std::ranges[meta namespace]
+* function template[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::ranges {
+  // (1)
+  template&amp;lt;random_access_iterator I, sentinel_for&amp;lt;I&amp;gt; S, class Comp = ranges::less, class Proj = identity&amp;gt;
+    requires sortable&amp;lt;I, Comp, Proj&amp;gt;
+  constexpr I make_heap(I first, S last, Comp comp = {}, Proj proj = {});
+
+  // (2)
+  template&amp;lt;random_access_range R, class Comp = ranges::less, class Proj = identity&amp;gt;
+    requires sortable&amp;lt;iterator_t&amp;lt;R&amp;gt;, Comp, Proj&amp;gt;
+  constexpr borrowed_iterator_t&amp;lt;R&amp;gt; make_heap(R&amp;amp;&amp;amp; r, Comp comp = {}, Proj proj = {});
+}
+```
+* random_access_iterator[link /reference/iterator/random_access_iterator.md]
+* sentinel_for[link /reference/iterator/sentinel_for.md]
+* ranges::less[link /reference/functional/ranges_less.md]
+* identity[link /reference/functional/identity.md]
+* sortable[link /reference/iterator/sortable.md]
+* random_access_range[link /reference/ranges/random_access_range.md]
+* iterator_t[link /reference/ranges/iterator_t.md]
+* borrowed_iterator_t[link /reference/ranges/borrowed_iterator_t.md]
+
+## 概要
+範囲をヒープ化する。
+
+* (1): イテレーターペアで範囲を指定する
+* (2): 範囲を直接指定する
+
+
+## 効果
+`[first,last)` の範囲で heap を構築する
+
+
+## 戻り値
+`last`
+
+
+## 計算量
+最大で `3 * (last - first)` 回比較する
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;vector&amp;gt;
+#include &amp;lt;algorithm&amp;gt;
+
+int main()
+{
+  std::vector&amp;lt;int&amp;gt; v = {3, 1, 4};
+
+  // ヒープ化する
+  std::ranges::make_heap(v);
+
+  for (int x : v) {
+    std::cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; std::endl;
+  }
+}
+```
+* std::ranges::make_heap[color ff0000]
+
+### 出力
+```
+4
+1
+3
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): 10.1.0
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
+
+## 参照
+- [N4861 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>pop_heap -- heap系関数の説明を追加 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_pop_heap.html"/>
      <id>ad0f2d7258af154c53ba3fe6a4e0e84a24e5d57d:reference/algorithm/ranges_pop_heap.md</id>
      <updated>2022-03-22T00:27:48+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_pop_heap.md b/reference/algorithm/ranges_pop_heap.md
new file mode 100644
index 000000000..da6000f65
--- /dev/null
+++ b/reference/algorithm/ranges_pop_heap.md
@@ -0,0 +1,98 @@
+# pop_heap
+* algorithm[meta header]
+* std::ranges[meta namespace]
+* function template[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::ranges {
+  // (1)
+  template&amp;lt;random_access_iterator I, sentinel_for&amp;lt;I&amp;gt; S, class Comp = ranges::less, class Proj = identity&amp;gt;
+    requires sortable&amp;lt;I, Comp, Proj&amp;gt;
+  constexpr I pop_heap(I first, S last, Comp comp = {}, Proj proj = {});
+
+  // (2)
+  template&amp;lt;random_access_range R, class Comp = ranges::less, class Proj = identity&amp;gt;
+    requires sortable&amp;lt;iterator_t&amp;lt;R&amp;gt;, Comp, Proj&amp;gt;
+  constexpr borrowed_iterator_t&amp;lt;R&amp;gt; pop_heap(R&amp;amp;&amp;amp; r, Comp comp = {}, Proj proj = {});
+}
+```
+* random_access_iterator[link /reference/iterator/random_access_iterator.md]
+* sentinel_for[link /reference/iterator/sentinel_for.md]
+* ranges::less[link /reference/functional/ranges_less.md]
+* identity[link /reference/functional/identity.md]
+* sortable[link /reference/iterator/sortable.md]
+* random_access_range[link /reference/ranges/random_access_range.md]
+* iterator_t[link /reference/ranges/iterator_t.md]
+* borrowed_iterator_t[link /reference/ranges/borrowed_iterator_t.md]
+
+## 概要
+ヒープ化された範囲の先頭と末尾を入れ替え、ヒープ範囲を作り直す
+
+* (1): イテレーターペアで範囲を指定する
+* (2): 範囲を直接指定する
+
+
+## 事前条件
+- `[first,last)` は空でない heap でなければならない。
+
+
+## 効果
+`first` にある値を `last - 1` と交換し、その後 `[first,last - 1)` が有効な heap となるように配置する。
+
+
+## 戻り値
+`last`
+
+
+## 計算量
+最大で `2 * log(last - first)` 回比較する
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;vector&amp;gt;
+#include &amp;lt;algorithm&amp;gt;
+
+int main()
+{
+  std::vector&amp;lt;int&amp;gt; v = {3, 1, 4};
+
+  std::ranges::make_heap(v);
+
+  // 最後尾要素を削除してヒープ化
+  std::ranges::pop_heap(v);
+  v.pop_back();
+
+  std::ranges::sort_heap(v);
+
+  for (int x : v) {
+    std::cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; std::endl;
+  }
+}
+```
+* std::ranges::pop_heap[color ff0000]
+* std::ranges::make_heap[link ranges_make_heap.md]
+* v.pop_back()[link /reference/vector/vector/pop_back.md]
+* std::ranges::sort_heap[link ranges_sort_heap.md]
+
+### 出力
+```
+1
+3
+```
+
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): 10.1.0
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
+
+## 参照
+- [N4861 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>push_heap -- heap系関数の説明を追加 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_push_heap.html"/>
      <id>ad0f2d7258af154c53ba3fe6a4e0e84a24e5d57d:reference/algorithm/ranges_push_heap.md</id>
      <updated>2022-03-22T00:27:48+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_push_heap.md b/reference/algorithm/ranges_push_heap.md
new file mode 100644
index 000000000..777d489e8
--- /dev/null
+++ b/reference/algorithm/ranges_push_heap.md
@@ -0,0 +1,99 @@
+# push_heap
+* algorithm[meta header]
+* std::ranges[meta namespace]
+* function template[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::ranges {
+  // (1)
+  template&amp;lt;random_access_iterator I, sentinel_for&amp;lt;I&amp;gt; S, class Comp = ranges::less, class Proj = identity&amp;gt;
+    requires sortable&amp;lt;I, Comp, Proj&amp;gt;
+  constexpr I push_heap(I first, S last, Comp comp = {}, Proj proj = {});
+
+  // (2)
+  template&amp;lt;random_access_range R, class Comp = ranges::less, class Proj = identity&amp;gt;
+    requires sortable&amp;lt;iterator_t&amp;lt;R&amp;gt;, Comp, Proj&amp;gt;
+  constexpr borrowed_iterator_t&amp;lt;R&amp;gt; push_heap(R&amp;amp;&amp;amp; r, Comp comp = {}, Proj proj = {});
+}
+```
+* random_access_iterator[link /reference/iterator/random_access_iterator.md]
+* sentinel_for[link /reference/iterator/sentinel_for.md]
+* ranges::less[link /reference/functional/ranges_less.md]
+* identity[link /reference/functional/identity.md]
+* sortable[link /reference/iterator/sortable.md]
+* random_access_range[link /reference/ranges/random_access_range.md]
+* iterator_t[link /reference/ranges/iterator_t.md]
+* borrowed_iterator_t[link /reference/ranges/borrowed_iterator_t.md]
+
+## 概要
+ヒープ化された範囲に要素を追加したヒープ範囲を得る
+
+* (1): イテレーターペアで範囲を指定する
+* (2): 範囲を直接指定する
+
+
+## 事前条件
+- `[first,last - 1)` は有効な heap である必要がある。
+
+
+## 効果
+`last - 1` の値を、`[first,last)` が有効な heap となるように配置する
+
+
+## 戻り値
+`last`
+
+
+## 計算量
+最大で `log(last - first)` 回比較する。
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;vector&amp;gt;
+#include &amp;lt;algorithm&amp;gt;
+
+int main()
+{
+  std::vector&amp;lt;int&amp;gt; v = {3, 1, 4};
+
+  std::ranges::make_heap(v);
+
+  // 要素を追加してヒープ化
+  v.push_back(2);
+  std::ranges::push_heap(v);
+
+  std::ranges::sort_heap(v);
+
+  for (int x : v) {
+    std::cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; std::endl;
+  }
+}
+```
+* std::ranges::push_heap[color ff0000]
+* std::ranges::make_heap[link ranges_make_heap.md]
+* v.push_back[link /reference/vector/vector/push_back.md]
+* std::ranges::sort_heap[link ranges_sort_heap.md]
+
+### 出力
+```
+1
+2
+3
+4
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): 10.1.0
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
+
+## 参照
+- [N4861 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>sort_heap -- heap系関数の説明を追加 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_sort_heap.html"/>
      <id>ad0f2d7258af154c53ba3fe6a4e0e84a24e5d57d:reference/algorithm/ranges_sort_heap.md</id>
      <updated>2022-03-22T00:27:48+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_sort_heap.md b/reference/algorithm/ranges_sort_heap.md
new file mode 100644
index 000000000..602197e78
--- /dev/null
+++ b/reference/algorithm/ranges_sort_heap.md
@@ -0,0 +1,93 @@
+# sort_heap
+* algorithm[meta header]
+* std::ranges[meta namespace]
+* function template[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::ranges {
+  // (1)
+  template&amp;lt;random_access_iterator I, sentinel_for&amp;lt;I&amp;gt; S, class Comp = ranges::less, class Proj = identity&amp;gt;
+    requires sortable&amp;lt;I, Comp, Proj&amp;gt;
+  constexpr I sort_heap(I first, S last, Comp comp = {}, Proj proj = {});
+
+  // (2)
+  template&amp;lt;random_access_range R, class Comp = ranges::less, class Proj = identity&amp;gt;
+    requires sortable&amp;lt;iterator_t&amp;lt;R&amp;gt;, Comp, Proj&amp;gt;
+  constexpr borrowed_iterator_t&amp;lt;R&amp;gt; sort_heap(R&amp;amp;&amp;amp; r, Comp comp = {}, Proj proj = {});
+}
+```
+* random_access_iterator[link /reference/iterator/random_access_iterator.md]
+* sentinel_for[link /reference/iterator/sentinel_for.md]
+* ranges::less[link /reference/functional/ranges_less.md]
+* identity[link /reference/functional/identity.md]
+* sortable[link /reference/iterator/sortable.md]
+* random_access_range[link /reference/ranges/random_access_range.md]
+* iterator_t[link /reference/ranges/iterator_t.md]
+* borrowed_iterator_t[link /reference/ranges/borrowed_iterator_t.md]
+
+## 概要
+ヒープ化された範囲を並べ替える
+
+* (1): イテレーターペアで範囲を指定する
+* (2): 範囲を直接指定する
+
+
+## 事前条件
+- `[first,last)` は有効なヒープである必要がある。
+
+
+## 効果
+ヒープ化されている `[first,last)` をソートする
+
+
+## 戻り値
+`last`
+
+
+## 計算量
+最大で N log(N) 回比較する（N == `last - first`）
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;vector&amp;gt;
+#include &amp;lt;algorithm&amp;gt;
+
+int main()
+{
+  std::vector&amp;lt;int&amp;gt; v = {3, 1, 4};
+  std::ranges::make_heap(v);
+
+  // ヒープ化された範囲をソート
+  std::ranges::sort_heap(v);
+
+  for (int x : v) {
+    std::cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; std::endl;
+  }
+}
+```
+* std::ranges::sort_heap[color ff0000]
+* std::ranges::make_heap[link ranges_make_heap.md]
+
+### 出力
+```
+1
+3
+4
+```
+
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): 10.1.0
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
+
+## 参照
+- [N4861 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>algorithm -- partition系関数の説明を追加 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm.html"/>
      <id>2029a42e73a0acab24b822a0d67aaba70311dafb:reference/algorithm.md</id>
      <updated>2022-03-22T00:12:07+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm.md b/reference/algorithm.md
index 07a89e8e5..18335ca6c 100644
--- a/reference/algorithm.md
+++ b/reference/algorithm.md
@@ -213,11 +213,11 @@ ranges::sort(pv, {}, &amp;amp;Parson::name);
 | [`ranges::shift_right`](algorithm/ranges_shift_right.md)           | 要素を右にシフトさせる                                                                                          | C++23 |
 | [`ranges::sample`](algorithm/ranges_sample.md)                     | 範囲から指定された個数の要素をランダムに抽出する                                                                | C++20 |
 | [`ranges::shuffle`](algorithm/ranges_shuffle.md)                   | それぞれの要素をランダムな位置に移動させる                                                                      | C++20 |
-| [`ranges::is_partitioned`](algorithm/ranges_is_partitioned.md.nolink)     | 与えられた範囲が条件によって[区分化](/reference/algorithm.md#sequence-is-partitioned)されているか判定する       | C++20 |
-| [`ranges::partition`](algorithm/ranges_partition.md.nolink)               | 与えられた範囲を条件によって[区分化](/reference/algorithm.md#sequence-is-partitioned)する                       | C++20 |
-| [`ranges::stable_partition`](algorithm/ranges_stable_partition.md.nolink) | 与えられた範囲を相対順序を保ちながら条件によって[区分化](/reference/algorithm.md#sequence-is-partitioned)する   | C++20 |
-| [`ranges::partition_copy`](algorithm/ranges_partition_copy.md.nolink)     | 与えられた範囲を条件によって 2 つの出力の範囲へ分けてコピーする                                                 | C++20 |
-| [`ranges::partition_point`](algorithm/ranges_partition_point.md.nolink)   | 与えられた範囲から条件によって[区分化](/reference/algorithm.md#sequence-is-partitioned)されている位置を得る     | C++20 |
+| [`ranges::is_partitioned`](algorithm/ranges_is_partitioned.md)     | 与えられた範囲が条件によって[区分化](/reference/algorithm.md#sequence-is-partitioned)されているか判定する       | C++20 |
+| [`ranges::partition`](algorithm/ranges_partition.md)               | 与えられた範囲を条件によって[区分化](/reference/algorithm.md#sequence-is-partitioned)する                       | C++20 |
+| [`ranges::stable_partition`](algorithm/ranges_stable_partition.md) | 与えられた範囲を相対順序を保ちながら条件によって[区分化](/reference/algorithm.md#sequence-is-partitioned)する   | C++20 |
+| [`ranges::partition_copy`](algorithm/ranges_partition_copy.md)     | 与えられた範囲を条件によって 2 つの出力の範囲へ分けてコピーする                                                 | C++20 |
+| [`ranges::partition_point`](algorithm/ranges_partition_point.md)   | 与えられた範囲から条件によって[区分化](/reference/algorithm.md#sequence-is-partitioned)されている位置を得る     | C++20 |
 
 ## ソートや、それに関連した操作
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>in_out_out_result -- partition系関数の説明を追加 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_in_out_out_result.html"/>
      <id>2029a42e73a0acab24b822a0d67aaba70311dafb:reference/algorithm/ranges_in_out_out_result.md</id>
      <updated>2022-03-22T00:12:07+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_in_out_out_result.md b/reference/algorithm/ranges_in_out_out_result.md
index 7d83207a1..1e33f5896 100644
--- a/reference/algorithm/ranges_in_out_out_result.md
+++ b/reference/algorithm/ranges_in_out_out_result.md
@@ -41,7 +41,7 @@ namespace std::ranges {
 
 ## 概要
 * (1): 3つのイテレータを格納する型
-* (2): [`ranges::partition_copy`](ranges_partition_copy.md.nolink)で使用するエイリアス
+* (2): [`ranges::partition_copy`](ranges_partition_copy.md)で使用するエイリアス
 
 この型は、関数が入力用の範囲と2つの出力用の範囲を受け取る場合に、それぞれ処理した範囲の末尾を返すために使用される。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_partitioned -- partition系関数の説明を追加 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_is_partitioned.html"/>
      <id>2029a42e73a0acab24b822a0d67aaba70311dafb:reference/algorithm/ranges_is_partitioned.md</id>
      <updated>2022-03-22T00:12:07+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_is_partitioned.md b/reference/algorithm/ranges_is_partitioned.md
new file mode 100644
index 000000000..b4cdf7976
--- /dev/null
+++ b/reference/algorithm/ranges_is_partitioned.md
@@ -0,0 +1,92 @@
+# is_partitioned
+* algorithm[meta header]
+* std::ranges[meta namespace]
+* function template[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::ranges {
+  // (1)
+  template&amp;lt;input_iterator I, sentinel_for&amp;lt;I&amp;gt; S, class Proj = identity, indirect_unary_predicate&amp;lt;projected&amp;lt;I, Proj&amp;gt;&amp;gt; Pred&amp;gt;
+  constexpr bool is_partitioned(I first, S last, Pred pred, Proj proj = {});
+
+  // (2)
+  template&amp;lt;input_range R, class Proj = identity, indirect_unary_predicate&amp;lt;projected&amp;lt;iterator_t&amp;lt;R&amp;gt;, Proj&amp;gt;&amp;gt; Pred&amp;gt;
+  constexpr bool is_partitioned(R&amp;amp;&amp;amp; r, Pred pred, Proj proj = {});
+}
+```
+* input_iterator[link /reference/iterator/input_iterator.md]
+* sentinel_for[link /reference/iterator/sentinel_for.md]
+* identity[link /reference/functional/identity.md]
+* indirect_unary_predicate[link /reference/iterator/indirect_unary_predicate.md]
+* projected[link /reference/iterator/projected.md]
+* input_range[link /reference/ranges/input_range.md]
+* iterator_t[link /reference/ranges/iterator_t.md]
+
+## 概要
+与えられた範囲が条件によって[区分化](/reference/algorithm.md#sequence-is-partitioned)されているか判定する。
+
+
+## 戻り値
+`[first,last)` が空、 または `[first,last)` が `pred` によって[区分化](/reference/algorithm.md#sequence-is-partitioned)されているなら `true` 、そうでなければ `false` を返す。
+
+つまり、`pred` を満たす全ての要素が、`pred` を満たさない全ての要素より前に出現するなら `true` を返す。
+
+
+## 計算量
+線形時間。最大で `last - first` 回 `pred` が適用される。
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;vector&amp;gt;
+#include &amp;lt;algorithm&amp;gt;
+
+int main()
+{
+  std::vector&amp;lt;int&amp;gt; v = {1, 2, 3, 4, 5};
+
+  auto pred = [](int x) { return x % 2 == 0; };
+
+  // 偶数グループと奇数グループに分ける
+  std::ranges::partition(v, pred);
+
+  for (int x : v) {
+   std::cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; std::endl;
+  }
+
+  // 偶数グループと奇数グループに分かれているか
+  if (std::ranges::is_partitioned(v, pred)) {
+    std::cout &amp;lt;&amp;lt; &amp;#34;partitioned&amp;#34; &amp;lt;&amp;lt; std::endl;
+  }
+  else {
+    std::cout &amp;lt;&amp;lt; &amp;#34;not partitioned&amp;#34; &amp;lt;&amp;lt; std::endl;
+  }
+}
+```
+* std::ranges::is_partitioned[color ff0000]
+* std::ranges::partition[link ranges_partition.md]
+
+### 出力
+```
+4
+2
+3
+1
+5
+partitioned
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): 10.1.0
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
+
+## 参照
+- [N4861 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>partition -- partition系関数の説明を追加 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_partition.html"/>
      <id>2029a42e73a0acab24b822a0d67aaba70311dafb:reference/algorithm/ranges_partition.md</id>
      <updated>2022-03-22T00:12:07+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_partition.md b/reference/algorithm/ranges_partition.md
new file mode 100644
index 000000000..70b08cb06
--- /dev/null
+++ b/reference/algorithm/ranges_partition.md
@@ -0,0 +1,106 @@
+# partition
+* algorithm[meta header]
+* std::ranges[meta namespace]
+* function template[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::ranges {
+  // (1)
+  template&amp;lt;permutable I, sentinel_for&amp;lt;I&amp;gt; S, class Proj = identity, indirect_unary_predicate&amp;lt;projected&amp;lt;I, Proj&amp;gt;&amp;gt; Pred&amp;gt;
+  constexpr subrange&amp;lt;I&amp;gt; partition(I first, S last, Pred pred, Proj proj = {});
+
+  // (2)
+  template&amp;lt;forward_range R, class Proj = identity, indirect_unary_predicate&amp;lt;projected&amp;lt;iterator_t&amp;lt;R&amp;gt;, Proj&amp;gt;&amp;gt; Pred&amp;gt;
+    requires permutable&amp;lt;iterator_t&amp;lt;R&amp;gt;&amp;gt;
+  constexpr borrowed_subrange_t&amp;lt;R&amp;gt; partition(R&amp;amp;&amp;amp; r, Pred pred, Proj proj = {});
+}
+```
+* permutable[link /reference/iterator/permutable.md]
+* sentinel_for[link /reference/iterator/sentinel_for.md]
+* identity[link /reference/functional/identity.md]
+* indirect_unary_predicate[link /reference/iterator/indirect_unary_predicate.md]
+* projected[link /reference/iterator/projected.md]
+* subrange[link /reference/ranges/subrange.md]
+* forward_range[link /reference/ranges/forward_range.md]
+* iterator_t[link /reference/ranges/iterator_t.md]
+* borrowed_subrange_t[link /reference/ranges/borrowed_subrange_t.md]
+
+## 概要
+与えられた範囲を条件によって[区分化](/reference/algorithm.md#sequence-is-partitioned)する。
+
+* (1): イテレーターペアで範囲を指定する
+* (2): 範囲を直接指定する
+
+
+## 効果
+`[first,last)` 内にある `pred` を満たす全ての要素を、`pred` を満たさない全ての要素より前に移動させる。
+
+
+## 戻り値
+`{i, last}`
+
+ただし、`[first,i)` 内にあるイテレータ `j` について `pred(*j) != false` を満たし、`[i,last)` 内にあるイテレータ `k` について `pred(*k) == false` を満たすようなイテレータ (つまり、[区分化](/reference/algorithm.md#sequence-is-partitioned)された境界を指すイテレータ) を `i` とする。
+
+
+
+## 計算量
+
+`N = last - first`として
+
+- (1) : `I` が [`bidirectional_iterator`](/reference/iterator/bidirectional_iterator.md)のモデルとなる場合、最大で `N / 2` 回 swap され、そうでない場合、最大で `N` 回 swap される。それに加えて、正確に `N` 回だけ述語が適用される
+- (2) : O(NlogN) 回の swap に加え、述語が O(N) 回適用される
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;vector&amp;gt;
+#include &amp;lt;algorithm&amp;gt;
+
+int main()
+{
+  std::vector&amp;lt;int&amp;gt; v = {1, 2, 3, 4, 5};
+
+  // 偶数グループと奇数グループに分ける
+  std::ranges::subrange latter = std::ranges::partition(v, [](int x) { return x % 2 == 0; });
+  std::ranges::subrange former = {v.begin(), latter.begin()};
+
+  // 条件x % 2 == 0を満たす要素
+  for (int x : former) {
+   std::cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; std::endl;
+  }
+
+  // それ以外の要素
+  std::cout &amp;lt;&amp;lt; &amp;#34;----&amp;#34; &amp;lt;&amp;lt; std::endl;
+  for (int x : latter) {
+   std::cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; std::endl;
+  }
+}
+```
+* std::ranges::partition[color ff0000]
+* std::ranges::subrange[link /reference/ranges/subrange.md]
+
+### 出力
+```
+4
+2
+----
+3
+1
+5
+```
+
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): 10.1.0
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
+
+## 参照
+- [N4861 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>partition_copy -- partition系関数の説明を追加 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_partition_copy.html"/>
      <id>2029a42e73a0acab24b822a0d67aaba70311dafb:reference/algorithm/ranges_partition_copy.md</id>
      <updated>2022-03-22T00:12:07+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_partition_copy.md b/reference/algorithm/ranges_partition_copy.md
new file mode 100644
index 000000000..50dae8cf2
--- /dev/null
+++ b/reference/algorithm/ranges_partition_copy.md
@@ -0,0 +1,110 @@
+# partition_copy
+* algorithm[meta header]
+* std::ranges[meta namespace]
+* function template[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::ranges {
+  // (1)
+  template&amp;lt;input_iterator I, sentinel_for&amp;lt;I&amp;gt; S, weakly_incrementable O1, weakly_incrementable O2, class Proj = identity, indirect_unary_predicate&amp;lt;projected&amp;lt;I, Proj&amp;gt;&amp;gt; Pred&amp;gt;
+    requires indirectly_copyable&amp;lt;I, O1&amp;gt; &amp;amp;&amp;amp; indirectly_copyable&amp;lt;I, O2&amp;gt;
+  constexpr partition_copy_result&amp;lt;I, O1, O2&amp;gt;
+    partition_copy(I first, S last, O1 out_true, O2 out_false, Pred pred, Proj proj = {});
+
+  // (2)
+  template&amp;lt;input_range R, weakly_incrementable O1, weakly_incrementable O2, class Proj = identity, indirect_unary_predicate&amp;lt;projected&amp;lt;iterator_t&amp;lt;R&amp;gt;, Proj&amp;gt;&amp;gt; Pred&amp;gt;
+    requires indirectly_copyable&amp;lt;iterator_t&amp;lt;R&amp;gt;, O1&amp;gt; &amp;amp;&amp;amp; indirectly_copyable&amp;lt;iterator_t&amp;lt;R&amp;gt;, O2&amp;gt;
+  constexpr partition_copy_result&amp;lt;borrowed_iterator_t&amp;lt;R&amp;gt;, O1, O2&amp;gt;
+    partition_copy(R&amp;amp;&amp;amp; r, O1 out_true, O2 out_false, Pred pred, Proj proj = {});
+}
+```
+* input_iterator[link /reference/iterator/input_iterator.md]
+* sentinel_for[link /reference/iterator/sentinel_for.md]
+* weakly_incrementable[link /reference/iterator/weakly_incrementable.md]
+* identity[link /reference/functional/identity.md]
+* indirect_unary_predicate[link /reference/iterator/indirect_unary_predicate.md]
+* projected[link /reference/iterator/projected.md]
+* indirectly_copyable[link /reference/iterator/indirectly_copyable.md]
+* partition_copy_result[link ranges_in_out_out_result.md]
+* input_range[link /reference/ranges/input_range.md]
+* iterator_t[link /reference/ranges/iterator_t.md]
+* borrowed_iterator_t[link /reference/ranges/borrowed_iterator_t.md]
+
+
+## 概要
+与えられた範囲を条件によって 2 つの出力の範囲へ分けてコピーする。
+
+* (1): イテレーターペアで範囲を指定する
+* (2): 範囲を直接指定する
+
+
+## 事前条件
+- 入力範囲は出力範囲のどちらとも重なっていてはならない。
+
+
+## 効果
+`[first,last)` 内にあるそれぞれのイテレータ `i` について、`pred(*i)` が `true` なら `*i` を `out_true` へコピーし、そうでない場合は `out_false` へコピーする。
+
+
+## 戻り値
+`o1` を `out_true` の終端、`o2` を `out_false` の終端とするとき、`{ .in = last, .out1 = o1, .out2 = o2 }`
+
+## 計算量
+正確に `last - first` 回述語が適用される。
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;vector&amp;gt;
+#include &amp;lt;algorithm&amp;gt;
+#include &amp;lt;iterator&amp;gt;
+#include &amp;lt;string&amp;gt;
+
+void print(const std::string&amp;amp; name, const std::vector&amp;lt;int&amp;gt;&amp;amp; v)
+{
+  std::cout &amp;lt;&amp;lt; name &amp;lt;&amp;lt; &amp;#34; : &amp;#34;;
+  for (int x : v) {
+    std::cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; &amp;#34;,&amp;#34;;
+  }
+  std::cout &amp;lt;&amp;lt; std::endl;
+}
+
+bool is_even(int x) { return x % 2 == 0; }
+
+int main()
+{
+  std::vector&amp;lt;int&amp;gt; v = {1, 2, 3, 4, 5};
+
+  // 偶数グループと奇数グループに分ける
+  std::vector&amp;lt;int&amp;gt; evens;
+  std::vector&amp;lt;int&amp;gt; odds;
+  std::ranges::partition_copy(v, std::back_inserter(evens), std::back_inserter(odds), is_even);
+
+  print(&amp;#34;v&amp;#34;, v);
+  print(&amp;#34;evens&amp;#34;, evens);
+  print(&amp;#34;odds&amp;#34;, odds);
+}
+```
+* std::ranges::partition_copy[color ff0000]
+
+### 出力
+```
+v : 1,2,3,4,5,
+evens : 2,4,
+odds : 1,3,5,
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): 10.1.0
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
+
+## 参照
+- [N4861 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>partition_point -- partition系関数の説明を追加 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_partition_point.html"/>
      <id>2029a42e73a0acab24b822a0d67aaba70311dafb:reference/algorithm/ranges_partition_point.md</id>
      <updated>2022-03-22T00:12:07+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_partition_point.md b/reference/algorithm/ranges_partition_point.md
new file mode 100644
index 000000000..c28391c15
--- /dev/null
+++ b/reference/algorithm/ranges_partition_point.md
@@ -0,0 +1,97 @@
+# partition_point
+* algorithm[meta header]
+* std::ranges[meta namespace]
+* function template[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::ranges {
+  // (1)
+  template&amp;lt;forward_iterator I, sentinel_for&amp;lt;I&amp;gt; S, class Proj = identity, indirect_unary_predicate&amp;lt;projected&amp;lt;I, Proj&amp;gt;&amp;gt; Pred&amp;gt;
+  constexpr I partition_point(I first, S last, Pred pred, Proj proj = {});
+
+  // (2)
+  template&amp;lt;forward_range R, class Proj = identity, indirect_unary_predicate&amp;lt;projected&amp;lt;iterator_t&amp;lt;R&amp;gt;, Proj&amp;gt;&amp;gt; Pred&amp;gt;
+  constexpr borrowed_iterator_t&amp;lt;R&amp;gt; partition_point(R&amp;amp;&amp;amp; r, Pred pred, Proj proj = {});
+}
+```
+* forward_iterator[link /reference/iterator/forward_iterator.md]
+* sentinel_for[link /reference/iterator/sentinel_for.md]
+* identity[link /reference/functional/identity.md]
+* indirect_unary_predicate[link /reference/iterator/indirect_unary_predicate.md]
+* projected[link /reference/iterator/projected.md]
+* forward_range[link /reference/ranges/forward_range.md]
+* iterator_t[link /reference/ranges/iterator_t.md]
+* borrowed_iterator_t[link /reference/ranges/borrowed_iterator_t.md]
+
+
+## 概要
+与えられた範囲から条件によって[区分化](/reference/algorithm.md#sequence-is-partitioned)されている位置を得る。
+
+* (1): イテレーターペアで範囲を指定する
+* (2): 範囲を直接指定する
+
+## 事前条件
+- `[first,last)` は `pred` によって[区分化](/reference/algorithm.md#sequence-is-partitioned)されていなければならない。つまり、`pred` を満たす全ての要素が、`pred` を満たさない全ての要素より前に出現してなければならない。
+
+
+## 戻り値
+[`all_of`](ranges_all_of.md)`(first, mid, pred)` と [`none_of`](ranges_none_of.md)`(mid, last, pred)` が `true` であるようなイテレータ `mid` を返す。
+
+
+## 計算量
+`pred` が O(log(`last - first`)) 回適用される。
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;vector&amp;gt;
+#include &amp;lt;algorithm&amp;gt;
+
+void print(const char* name, const std::vector&amp;lt;int&amp;gt;&amp;amp; v)
+{
+  std::cout &amp;lt;&amp;lt; name &amp;lt;&amp;lt; &amp;#34; : &amp;#34;;
+  std::for_each(v.begin(), v.end(), [](int x) {
+    std::cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; &amp;#34;,&amp;#34;;
+  });
+  std::cout &amp;lt;&amp;lt; std::endl;
+}
+
+bool is_even(int x) { return x % 2 == 0; }
+
+int main()
+{
+  std::vector&amp;lt;int&amp;gt; v = {1, 2, 3, 4, 5};
+
+  std::ranges::partition(v, is_even);
+
+  // 偶数グループと奇数グループに分かれた位置を得る
+  auto it = std::ranges::partition_point(v, is_even);
+
+  print(&amp;#34;v&amp;#34;, v);
+  std::cout &amp;lt;&amp;lt; *it &amp;lt;&amp;lt; std::endl;
+}
+```
+* std::ranges::partition_point[color ff0000]
+* std::ranges::partition[link ranges_partition.md]
+
+### 出力
+```
+v : 4,2,3,1,5,
+3
+```
+
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): 10.1.0
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
+
+## 参照
+- [N4861 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>stable_partition -- partition系関数の説明を追加 #919</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_stable_partition.html"/>
      <id>2029a42e73a0acab24b822a0d67aaba70311dafb:reference/algorithm/ranges_stable_partition.md</id>
      <updated>2022-03-22T00:12:07+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_stable_partition.md b/reference/algorithm/ranges_stable_partition.md
new file mode 100644
index 000000000..513d6d409
--- /dev/null
+++ b/reference/algorithm/ranges_stable_partition.md
@@ -0,0 +1,98 @@
+# stable_partition
+* algorithm[meta header]
+* std::ranges[meta namespace]
+* function template[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::ranges {
+  // (1)
+  template&amp;lt;bidirectional_iterator I, sentinel_for&amp;lt;I&amp;gt; S, class Proj = identity, indirect_unary_predicate&amp;lt;projected&amp;lt;I, Proj&amp;gt;&amp;gt; Pred&amp;gt;
+    requires permutable&amp;lt;I&amp;gt;
+  subrange&amp;lt;I&amp;gt; stable_partition(I first, S last, Pred pred, Proj proj = {});
+
+  // (2)
+  template&amp;lt;bidirectional_range R, class Proj = identity, indirect_unary_predicate&amp;lt;projected&amp;lt;iterator_t&amp;lt;R&amp;gt;, Proj&amp;gt;&amp;gt; Pred&amp;gt;
+    requires permutable&amp;lt;iterator_t&amp;lt;R&amp;gt;&amp;gt;
+  borrowed_subrange_t&amp;lt;R&amp;gt; stable_partition(R&amp;amp;&amp;amp; r, Pred pred, Proj proj = {});
+}
+```
+* bidirectional_iterator[link /reference/iterator/bidirectional_iterator.md]
+* sentinel_for[link /reference/iterator/sentinel_for.md]
+* identity[link /reference/functional/identity.md]
+* indirect_unary_predicate[link /reference/iterator/indirect_unary_predicate.md]
+* projected[link /reference/iterator/projected.md]
+* permutable[link /reference/iterator/permutable.md]
+* subrange[link /reference/ranges/subrange.md]
+* bidirectional_range[link /reference/ranges/bidirectional_range.md]
+* iterator_t[link /reference/ranges/iterator_t.md]
+* borrowed_subrange_t[link /reference/ranges/borrowed_subrange_t.md]
+
+
+## 概要
+与えられた範囲を相対順序を保ちながら条件によって[区分化](/reference/algorithm.md#sequence-is-partitioned)する。
+
+* (1): イテレーターペアで範囲を指定する
+* (2): 範囲を直接指定する
+
+
+## 効果
+`[first,last)` 内にある `pred` を満たす全ての要素を、`pred` を満たさない全ての要素より前に移動させる。
+
+
+## 戻り値
+`{i, last}`
+
+ただし、`[first,i)` 内にあるイテレータ `j` について `pred(*j) != false` を満たし、`[i,last)` 内にあるイテレータ `k` について `pred(*k) == false` を満たすようなイテレータ(つまり、[区分化](/reference/algorithm.md#sequence-is-partitioned)された境界を指すイテレータ)を `i` とする。
+
+条件を満たす・満たさない両グループ内での要素間の相対順序は保たれる。
+
+
+## 計算量
+`N = last - first`として説明する。
+
+- (1) : 最大でN log N回 swap が行われるが、余分なメモリを使って構わないのであれば線形回数の swap になる。それに加えて、正確にN回だけ述語が適用される
+- (2) : O(N log N) 回の swap に加え、述語が O(N) 回適用される
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;vector&amp;gt;
+#include &amp;lt;algorithm&amp;gt;
+
+int main()
+{
+  std::vector&amp;lt;int&amp;gt; v = {1, 2, 3, 4, 5};
+
+  // 偶数グループと奇数グループに分ける
+  std::ranges::stable_partition(v, [](int x) { return x % 2 == 0; });
+
+  for (int x : v) {
+   std::cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; std::endl;
+  }
+}
+```
+* std::ranges::stable_partition[color ff0000]
+
+### 出力
+```
+2
+4
+1
+3
+5
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): 10.1.0
+- [ICC](/implementation.md#icc): ??
+- [Visual C++](/implementation.md#visual_cpp): 2019 Update 10
+
+## 参照
+- [N4861 25 Algorithms library](https://timsong-cpp.github.io/cppwp/n4861/algorithms)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
</feed>
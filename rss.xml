<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="http://cpprefjp.github.io" />
  <updated>2015-09-23T21:49:51.199965</updated>
  <id>ed5d3ca9-dd07-4ab9-9ed2-08e85b1d1df5</id>

  
    <entry>
      <title>コンストラクタ -- flush へのリンクを追加</title>
      <link href="http://cpprefjp.github.io/reference/istream/basic_istream/sentry/op_constructor.html"/>
      <id>57aa53b1954a85ac846b0e37d59b0beea6b02812:reference/istream/basic_istream/sentry/op_constructor.md</id>
      <updated>2015-09-23 21:48:48 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;function&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;istream&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;&lt;span class=&#34;class&#34; title=&#34;class basic_istream::sentry&#34;&gt;basic_istream::sentry::&lt;/span&gt;コンストラクタ&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;explicit&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;sentry&lt;/span&gt;(&lt;a href=&#34;http://cpprefjp.github.io/reference/istream/basic_istream.html&#34;&gt;basic_istream&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; is, &lt;span style=&#34;color: #B00040&#34;&gt;bool&lt;/span&gt; noskipws &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #008000&#34;&gt;false&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;入力処理の前処理を行う。&lt;/p&gt;
&lt;h2&gt;効果&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;is.&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios/good.html&#34;&gt;&lt;code&gt;good&lt;/code&gt;&lt;/a&gt;&lt;code&gt;()&lt;/code&gt;が&lt;code&gt;false&lt;/code&gt;なら、&lt;code&gt;is.&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios/setstate.html&#34;&gt;&lt;code&gt;setstate&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(failbit)&lt;/code&gt;を呼び出し、関数から帰る。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is.&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios/tie.md.nolink&#34;&gt;&lt;code&gt;tie&lt;/code&gt;&lt;/a&gt;&lt;code&gt;()&lt;/code&gt;が非ヌルポインタなら、&lt;code&gt;is.&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios/tie.md.nolink&#34;&gt;&lt;code&gt;tie&lt;/code&gt;&lt;/a&gt;&lt;code&gt;()-&amp;gt;&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/basic_ostream/flush.html&#34;&gt;&lt;code&gt;flush&lt;/code&gt;&lt;/a&gt;&lt;code&gt;()&lt;/code&gt;を呼び出す。&lt;ul&gt;
&lt;li&gt;&lt;code&gt;is.&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios/tie.md.nolink&#34;&gt;&lt;code&gt;tie&lt;/code&gt;&lt;/a&gt;&lt;code&gt;()&lt;/code&gt;が指す先のストリームバッファのput areaが空なら、この処理を省略しても良い。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is.&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios/rdbuf.md.nolink&#34;&gt;&lt;code&gt;rdbuf&lt;/code&gt;&lt;/a&gt;&lt;code&gt;()-&amp;gt;&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/streambuf/basic_streambuf/underflow.md.nolink&#34;&gt;&lt;code&gt;underflow&lt;/code&gt;&lt;/a&gt;&lt;code&gt;()&lt;/code&gt;の呼び出しが発生するまで、この処理を遅延させても良い。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is.&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios/rdbuf.md.nolink&#34;&gt;&lt;code&gt;rdbuf&lt;/code&gt;&lt;/a&gt;&lt;code&gt;()-&amp;gt;&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/streambuf/basic_streambuf/underflow.md.nolink&#34;&gt;&lt;code&gt;underflow&lt;/code&gt;&lt;/a&gt;&lt;code&gt;()&lt;/code&gt;の呼び出しが発生しなかったら、この処理を省略して良い（標準ライブラリ実装内部で、そのような最適化を行っても良い）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;noskipws&lt;/code&gt;が&lt;code&gt;false&lt;/code&gt;かつ&lt;code&gt;is.&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/flags.md.nolink&#34;&gt;&lt;code&gt;flags&lt;/code&gt;&lt;/a&gt;&lt;code&gt;() &amp;amp;&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base.html&#34;&gt;&lt;code&gt;ios_base&lt;/code&gt;&lt;/a&gt;&lt;code&gt;::skipws&lt;/code&gt;が真なら、ストリームから空白文字を読み捨てる。&lt;ul&gt;
&lt;li&gt;空白文字の判定は、文字&lt;code&gt;c&lt;/code&gt;について&lt;a href=&#34;http://cpprefjp.github.io/reference/locale/use_facet.md.nolink&#34;&gt;&lt;code&gt;use_facet&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale/ctype.html&#34;&gt;&lt;code&gt;ctype&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;CharT&amp;gt;&amp;gt;(is.&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base/getloc.md.nolink&#34;&gt;&lt;code&gt;getloc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;()).&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale/ctype/is.md.nolink&#34;&gt;&lt;code&gt;is&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale/ctype.html&#34;&gt;&lt;code&gt;ctype&lt;/code&gt;&lt;/a&gt;&lt;code&gt;::&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/locale/ctype_base.html&#34;&gt;&lt;code&gt;space&lt;/code&gt;&lt;/a&gt;&lt;code&gt;, c)&lt;/code&gt;と等価な方法で行う。&lt;/li&gt;
&lt;li&gt;このとき&lt;code&gt;is.&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios/rdbuf.md.nolink&#34;&gt;&lt;code&gt;rdbuf&lt;/code&gt;&lt;/a&gt;&lt;code&gt;()-&amp;gt;&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/streambuf/basic_streambuf/sbumpc.md.nolink&#34;&gt;&lt;code&gt;sbumpc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;()&lt;/code&gt;または&lt;code&gt;is.&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios/rdbuf.md.nolink&#34;&gt;&lt;code&gt;rdbuf&lt;/code&gt;&lt;/a&gt;&lt;code&gt;()-&amp;gt;&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/streambuf/basic_streambuf/sgetc.md.nolink&#34;&gt;&lt;code&gt;sgetc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;()&lt;/code&gt;が&lt;code&gt;Traits::eof()&lt;/code&gt;を返したら、&lt;code&gt;is.&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios/setstate.html&#34;&gt;&lt;code&gt;setstate&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(failbit | eofbit)&lt;/code&gt;を呼び出す。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;ここまでの手順が完了したら、このオブジェクトの&lt;code&gt;operator bool&lt;/code&gt;関数は&lt;code&gt;true&lt;/code&gt;を、さもなくば&lt;code&gt;false&lt;/code&gt;を返すようになる。&lt;/p&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Mitsuru Kariya</name>
        <email>kariya_mitsuru@hotmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- flush へのリンクを追加</title>
      <link href="http://cpprefjp.github.io/reference/ostream/basic_ostream/sentry/op_constructor.html"/>
      <id>57aa53b1954a85ac846b0e37d59b0beea6b02812:reference/ostream/basic_ostream/sentry/op_constructor.md</id>
      <updated>2015-09-23 21:48:48 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;function&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;ostream&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;&lt;span class=&#34;class&#34; title=&#34;class basic_ostream::sentry&#34;&gt;basic_ostream::sentry::&lt;/span&gt;コンストラクタ&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;explicit&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;sentry&lt;/span&gt;(basic_ostream&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt; os);
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;出力処理の前処理を行う。&lt;/p&gt;
&lt;h2&gt;効果&lt;/h2&gt;
&lt;p&gt;もし &lt;code&gt;os.&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios/good.html&#34;&gt;&lt;code&gt;good&lt;/code&gt;&lt;/a&gt;&lt;code&gt;()&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; なら、書式化出力・非書式化出力の準備処理を行い、&lt;code&gt;os.&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/basic_ostream/ios/basic_ios/tie.md.nolink&#34;&gt;&lt;code&gt;tie&lt;/code&gt;&lt;/a&gt;&lt;code&gt;()&lt;/code&gt; が非ヌルポインタなら、&lt;code&gt;os.&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/basic_ostream/ios/basic_ios/tie.md.nolink&#34;&gt;&lt;code&gt;tie&lt;/code&gt;&lt;/a&gt;&lt;code&gt;()-&amp;gt;&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/basic_ostream/flush.html&#34;&gt;&lt;code&gt;flush&lt;/code&gt;&lt;/a&gt;&lt;code&gt;()&lt;/code&gt; を呼び出す。&lt;/p&gt;
&lt;p&gt;全ての準備処理が完了したら、このオブジェクトの &lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/basic_ostream/sentry/op_bool.html&#34;&gt;&lt;code&gt;operator bool&lt;/code&gt;&lt;/a&gt;&lt;code&gt;()&lt;/code&gt; 関数は &lt;code&gt;true&lt;/code&gt; を、さもなくば &lt;code&gt;false&lt;/code&gt; を返すようになる。&lt;/p&gt;
&lt;p&gt;準備処理を行っている間に、&lt;code&gt;os.&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios/setstate.html&#34;&gt;&lt;code&gt;setstate&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(failbit)&lt;/code&gt; が呼び出される可能性がある。（これは、&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/ios_base.html&#34;&gt;&lt;code&gt;ios_base&lt;/code&gt;&lt;/a&gt;&lt;code&gt;::failure&lt;/code&gt; 例外の送出を引き起こす可能性がある）&lt;/p&gt;
&lt;h2&gt;備考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;本コンストラクタでは、効果に記載されている以外に実装依存の処理が行われるかもしれない。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;os.&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/basic_ostream/ios/basic_ios/tie.md.nolink&#34;&gt;&lt;code&gt;tie&lt;/code&gt;&lt;/a&gt;&lt;code&gt;()-&amp;gt;&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/basic_ostream/flush.html&#34;&gt;&lt;code&gt;flush&lt;/code&gt;&lt;/a&gt;&lt;code&gt;()&lt;/code&gt; は、同期が不要と判断できる場合には呼び出されないかもしれない。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/basic_ostream/sentry/op_bool.html&#34;&gt;&lt;code&gt;operator bool&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/basic_ostream/sentry/op_destructor.html&#34;&gt;&lt;code&gt;(destructor)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Mitsuru Kariya</name>
        <email>kariya_mitsuru@hotmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>cin -- cin を修正</title>
      <link href="http://cpprefjp.github.io/reference/iostream/cin.html"/>
      <id>f94f4b38a7f4699e381bdd9d43be37a4eab49243:reference/iostream/cin.md</id>
      <updated>2015-09-23 19:40:14 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;variable&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;cin&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  istream cin;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;cin&lt;/code&gt; は、標準入力に対するマルチバイト入力ストリームオブジェクトである。
すなわち、&lt;code&gt;&amp;lt;cstdio&amp;gt;&lt;/code&gt; の &lt;code&gt;stdin&lt;/code&gt; オブジェクトに結びつけられたストリームオブジェクトである。&lt;br /&gt;
本オブジェクトは、初期化が完了すると &lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios/tie.md.nolink&#34;&gt;&lt;code&gt;tie&lt;/code&gt;&lt;/a&gt;&lt;code&gt;()&lt;/code&gt; が &lt;code&gt;&amp;amp;&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;&lt;code&gt;cout&lt;/code&gt;&lt;/a&gt; を返すようになる。&lt;br /&gt;
その他の状態は、&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios.html&#34;&gt;&lt;code&gt;basic_ios&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;char&amp;gt;::&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios/init.md.nolink&#34;&gt;&lt;code&gt;init&lt;/code&gt;&lt;/a&gt; の事後条件と同様である。&lt;/p&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream.html&#34;&gt;iostream&lt;/a&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;&lt;a href=&#34;http://cpprefjp.github.io/reference/string.html&#34;&gt;string&lt;/a&gt;&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;名前を入力してください: &#34;&lt;/span&gt;;

  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/string.html&#34;&gt;string&lt;/a&gt; s;     &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// std::&lt;span style=&#34;color:#ff0000&#34;&gt;cin&lt;/span&gt;.tie() == &amp;amp;std::&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;cout&lt;/a&gt; であるため、&lt;/span&gt;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;cin&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; s;     &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// std::&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;cout&lt;/a&gt; を明示的に flush しなくても&lt;/span&gt;
                     &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 上記の出力が flush されることが保証されている&lt;/span&gt;

  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;あなたの名前は「&#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; s &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;」ですね。&#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/endl.html&#34;&gt;endl&lt;/a&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++98&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/wcin.md.nolink&#34;&gt;&lt;code&gt;wcin&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Mitsuru Kariya</name>
        <email>kariya_mitsuru@hotmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ends -- ends を修正</title>
      <link href="http://cpprefjp.github.io/reference/ostream/ends.html"/>
      <id>6cf6ec0ea3d232ee69eed0be0bffcb51721f36d2:reference/ostream/ends.md</id>
      <updated>2015-09-23 00:25:12 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;function&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;ostream&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;ends&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;CharT&lt;/span&gt;, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;Traits&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  basic_ostream&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;CharT, Traits&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; ends(basic_ostream&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;CharT, Traits&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; os);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;ヌル文字を出力する。&lt;/p&gt;
&lt;h2&gt;効果&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;os.&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/basic_ostream/put.html&#34;&gt;&lt;code&gt;put&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(CharT())&lt;/code&gt; を呼び出す。&lt;/p&gt;
&lt;h2&gt;戻り値&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;os&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;備考&lt;/h2&gt;
&lt;p&gt;本関数は、直接呼ぶのではなく、マニピュレータ関数へのポインタを引数に取る出力演算子（&lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/basic_ostream/op_ostream.html&#34;&gt;&lt;code&gt;operator&amp;lt;&amp;lt;&lt;/code&gt;&lt;/a&gt;、挿入演算子、インサータとも呼ばれる）を通じて呼び出されるのが一般的である。&lt;/p&gt;
&lt;h2&gt;実装例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;CharT&lt;/span&gt;, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;Traits&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/basic_ostream.html&#34;&gt;basic_ostream&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;CharT, Traits&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; endl(&lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/basic_ostream.html&#34;&gt;basic_ostream&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;CharT, Traits&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; os) {
    &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;return&lt;/span&gt; os.&lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/basic_ostream/put.html&#34;&gt;put&lt;/a&gt;(CharT());
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++98&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/endl.html&#34;&gt;endl&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Mitsuru Kariya</name>
        <email>kariya_mitsuru@hotmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>endl -- endl を再々修正（すみません…）</title>
      <link href="http://cpprefjp.github.io/reference/ostream/endl.html"/>
      <id>b932bba0173dc7dcc4d7e7f805a2b1dc06a38347:reference/ostream/endl.md</id>
      <updated>2015-09-22 19:45:11 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;function&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;ostream&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;endl&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;CharT&lt;/span&gt;, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;Traits&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  basic_ostream&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;CharT, Traits&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; endl(basic_ostream&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;CharT, Traits&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; os);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;改行を出力し、バッファをフラッシュする。&lt;/p&gt;
&lt;p&gt;C++のストリームには行バッファリングの機能がないため、行バッファリングの模倣として&lt;code&gt;endl&lt;/code&gt;が多用される。&lt;/p&gt;
&lt;h2&gt;効果&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;os.&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/basic_ostream/put.html&#34;&gt;&lt;code&gt;put&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(os.&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios/widen.md.nolink&#34;&gt;&lt;code&gt;widen&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(&#39;\n&#39;))&lt;/code&gt;を呼び出す。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;os.&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/basic_ostream/flush.html&#34;&gt;&lt;code&gt;flush&lt;/code&gt;&lt;/a&gt;&lt;code&gt;()&lt;/code&gt;を呼び出す。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;戻り値&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;os&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;備考&lt;/h2&gt;
&lt;p&gt;本関数は、直接呼ぶのではなく、マニピュレータ関数へのポインタを引数に取る出力演算子（&lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/basic_ostream/op_ostream.html&#34;&gt;&lt;code&gt;operator&amp;lt;&amp;lt;&lt;/code&gt;&lt;/a&gt;、挿入演算子、インサータとも呼ばれる）を通じて呼び出されるのが一般的である。&lt;/p&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream.html&#34;&gt;iostream&lt;/a&gt;&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;() {
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;Kamaboko&#34;&lt;/span&gt;;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;endl&lt;/span&gt;(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;cout&lt;/a&gt;);                 &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 直接呼出し（あまり一般的では無い）&lt;/span&gt;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;cpprefjp&#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;endl&lt;/span&gt;; &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// operator&amp;lt;&amp;lt; を通じた間接的な呼び出し（より一般的）&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;Kamaboko
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;実装例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;CharT&lt;/span&gt;, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;Traits&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/basic_ostream.html&#34;&gt;basic_ostream&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;CharT, Traits&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; endl(&lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/basic_ostream.html&#34;&gt;basic_ostream&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;CharT, Traits&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; os) {
    &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;return&lt;/span&gt; os.&lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/basic_ostream/put.html&#34;&gt;put&lt;/a&gt;(os.&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios/widen.md.nolink&#34;&gt;widen&lt;/a&gt;(&lt;span style=&#34;color: #BA2121&#34;&gt;&#39;\n&#39;&lt;/span&gt;)).&lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/basic_ostream/flush.html&#34;&gt;flush&lt;/a&gt;();
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++98&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/flush.html&#34;&gt;flush&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Mitsuru Kariya</name>
        <email>kariya_mitsuru@hotmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>endl -- endl を再修正</title>
      <link href="http://cpprefjp.github.io/reference/ostream/endl.html"/>
      <id>6ecb5cbed9670ebd3947de84b91f8749819ad293:reference/ostream/endl.md</id>
      <updated>2015-09-22 19:37:04 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;function&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;ostream&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;endl&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;CharT&lt;/span&gt;, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;Traits&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  basic_ostream&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;CharT, Traits&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; endl(basic_ostream&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;CharT, Traits&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; os);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;改行を出力し、バッファをフラッシュする。&lt;/p&gt;
&lt;p&gt;C++のストリームには行バッファリングの機能がないため、行バッファリングの模倣として&lt;code&gt;endl&lt;/code&gt;が多用される。&lt;/p&gt;
&lt;h2&gt;効果&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;os.&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/basic_ostream/put.html&#34;&gt;&lt;code&gt;put&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(os.&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios/widen.md.nolink&#34;&gt;&lt;code&gt;widen&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(&#39;\n&#39;))&lt;/code&gt;を呼び出す。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;os.&lt;/code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/basic_ostream/flush.html&#34;&gt;&lt;code&gt;flush&lt;/code&gt;&lt;/a&gt;&lt;code&gt;()&lt;/code&gt;を呼び出す。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;戻り値&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;os&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;本関数は、直接呼ぶのではなく、マニピュレータ関数へのポインタを引数に取る出力演算子（&lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/basic_ostream/op_ostream.html&#34;&gt;&lt;code&gt;operator&amp;lt;&amp;lt;&lt;/code&gt;&lt;/a&gt;、挿入演算子、インサータとも呼ばれる）を通じて呼び出されるのが一般的である。&lt;/p&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream.html&#34;&gt;iostream&lt;/a&gt;&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;() {
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;Kamaboko&#34;&lt;/span&gt;;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;endl&lt;/span&gt;(std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;cout&lt;/a&gt;);                 &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// 直接呼出し（あまり一般的では無い）&lt;/span&gt;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/iostream/cout.html&#34;&gt;cout&lt;/a&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&#34;cpprefjp&#34;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;endl&lt;/span&gt;; &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;// operator&amp;lt;&amp;lt; を通じた間接的な呼び出し（より一般的）&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;Kamaboko
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;実装例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;template&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;CharT&lt;/span&gt;, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;Traits&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/basic_ostream.html&#34;&gt;basic_ostream&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;CharT, Traits&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; endl(&lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/basic_ostream.html&#34;&gt;basic_ostream&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;CharT, Traits&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; os) {
    &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;return&lt;/span&gt; os.&lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/basic_ostream/put.html&#34;&gt;put&lt;/a&gt;(os.&lt;a href=&#34;http://cpprefjp.github.io/reference/ios/basic_ios/widen.md.nolink&#34;&gt;widen&lt;/a&gt;(&lt;span style=&#34;color: #BA2121&#34;&gt;&#39;\n&#39;&lt;/span&gt;)).&lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/basic_ostream/flush.html&#34;&gt;flush&lt;/a&gt;();
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++98&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/ostream/flush.html&#34;&gt;flush&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Mitsuru Kariya</name>
        <email>kariya_mitsuru@hotmail.com</email>
      </author>
    </entry>
  
</feed>
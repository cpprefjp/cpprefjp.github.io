<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2020-12-15T09:36:16.950684</updated>
  <id>132efe2e-d4f8-4566-8c47-8b7a74f61708</id>

  
    <entry>
      <title>wait -- condition_variable_any: wait_* 戻り値の説明誤り修正</title>
      <link href="https://cpprefjp.github.io/reference/condition_variable/condition_variable_any/wait.html"/>
      <id>b51e57217b1205a7a54060e19e0fccd6ea88e500:reference/condition_variable/condition_variable_any/wait.md</id>
      <updated>2020-12-15T18:31:19+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/condition_variable/condition_variable_any/wait.md b/reference/condition_variable/condition_variable_any/wait.md
index 9c39f2f76..2abc1bc1a 100644
--- a/reference/condition_variable/condition_variable_any/wait.md
+++ b/reference/condition_variable/condition_variable_any/wait.md
@@ -66,7 +66,7 @@ return pred();
 
 ## 戻り値
 - (1),(2) : なし
-- (3) : 停止要求が行われた場合は`true`が返る。そうでない場合は`pred()`の結果が返る。
+- (3) : 停止要求の有無によらず、`pred()`の結果が返る。
 
 
 ## 例外
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>wait_until -- condition_variable_any: wait_* 戻り値の説明誤り修正</title>
      <link href="https://cpprefjp.github.io/reference/condition_variable/condition_variable_any/wait_until.html"/>
      <id>b51e57217b1205a7a54060e19e0fccd6ea88e500:reference/condition_variable/condition_variable_any/wait_until.md</id>
      <updated>2020-12-15T18:31:19+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/condition_variable/condition_variable_any/wait_until.md b/reference/condition_variable/condition_variable_any/wait_until.md
index 9cef6cd43..c8f577edf 100644
--- a/reference/condition_variable/condition_variable_any/wait_until.md
+++ b/reference/condition_variable/condition_variable_any/wait_until.md
@@ -77,7 +77,7 @@ return pred();
 ## 戻り値
 - (1) : `abs_time`で指定された絶対時間内に起床されない場合、タイムアウトとなり[`cv_status::timeout`](/reference/condition_variable/cv_status.md)が返る。そうでない場合は[`cv_status::no_timeout`](/reference/condition_variable/cv_status.md)が返る。
 - (2) : `pred()`の結果が返る。
-- (3) : 停止要求が行われた場合は`true`が返る。そうでない場合は`pred()`の結果が返る。
+- (3) : 停止要求の有無によらず、`pred()`の結果が返る。
 
 
 ## 事後条件
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>input_iterator -- input_iterator : ITER_CONCEPTの効果修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/input_iterator.html"/>
      <id>28ee2f89fd3b428ae29d13c8de4880a6ec3ee932:reference/iterator/input_iterator.md</id>
      <updated>2020-12-13T16:06:29+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/input_iterator.md b/reference/iterator/input_iterator.md
index afadea4d5..61a456fd1 100644
--- a/reference/iterator/input_iterator.md
+++ b/reference/iterator/input_iterator.md
@@ -27,11 +27,11 @@ namespace std {
 
 ## &amp;lt;a href=&amp;#34;#iter_concept&amp;#34; id=&amp;#34;iter_concept &amp;#34;&amp;gt;`ITER_CONCEPT`&amp;lt;/a&amp;gt;
 
-型`I`について、`std::iterator_traits&amp;lt;I&amp;gt;`がプライマリテンプレートの特殊化となる場合、`ITER_TRAITS(I)`を`I`とする。それ以外の場合、`ITER_TRAITS(I)`を`std::iterator_traits&amp;lt;I&amp;gt;`とする。
+型`I`について、`std::iterator_traits&amp;lt;I&amp;gt;`がプライマリテンプレートの特殊化となる場合、`ITER_TRAITS(I)`を`I`とする。それ以外の場合（`std::iterator_traits&amp;lt;I&amp;gt;`の特殊化が存在する場合）、`ITER_TRAITS(I)`を`std::iterator_traits&amp;lt;I&amp;gt;`とする。
 
 1. `ITER_TRAITS(I)::itertor_concept`が有効で型名を示す場合、`ITER_CONCEPT(I)`は`ITER_TRAITS(I)::itertor_concept`
 2. `ITER_TRAITS(I)::itertor_category`が有効で型名を示す場合、`ITER_CONCEPT(I)`は`ITER_TRAITS(I)::itertor_category`
-3. `std::iterator_traits&amp;lt;I&amp;gt;`がプライマリテンプレートの特殊化となる場合、`ITER_CONCEPT(I)`は`ITER_TRAITS(I)::random_access_iterator_tag`
+3. `std::iterator_traits&amp;lt;I&amp;gt;`がプライマリテンプレートの特殊化となる場合、`ITER_CONCEPT(I)`は`random_access_iterator_tag`
 4. 上記いずれにも当てはまらない場合、`ITER_CONCEPT(I)`は型名を示さない
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>iterator_traits -- 表示調整</title>
      <link href="https://cpprefjp.github.io/reference/iterator/iterator_traits.html"/>
      <id>9c3f1ea053dcf0643a53c1ae3fa45d65d149eacf:reference/iterator/iterator_traits.md</id>
      <updated>2020-12-13T03:42:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/iterator_traits.md b/reference/iterator/iterator_traits.md
index 376746460..8f572bd64 100644
--- a/reference/iterator/iterator_traits.md
+++ b/reference/iterator/iterator_traits.md
@@ -93,6 +93,7 @@ namespace std {
   ```
 
     - この時、`I::pointer`も定義されているならば、`pointer`はそれを用いて定義される。
+
 - いずれかのメンバ型が定義されておらず、`I`が`cpp17-input-iterator`コンセプトを満たす場合、それぞれのメンバ型は次のように定義される
   ```cpp
   using difference_type   = typename incrementable_traits&amp;lt;I&amp;gt;::difference_type;
@@ -246,4 +247,4 @@ int main()
 ## 参照
 - [LWG 2952. `iterator_traits` should work for pointers to cv `T`](https://wg21.cmeerw.net/lwg/issue2952)
     - C++17から、`const T*`の部分特殊化が、`T*`の部分特殊化に統合され、`volatile`付きのポインタもこのクラスで扱えるようになった
-- [P0896R4 The One Ranges Proposal (was Merging the Ranges TS)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0896r4.pdf)
\ No newline at end of file
+- [P0896R4 The One Ranges Proposal (was Merging the Ranges TS)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0896r4.pdf)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>iterator_traits -- リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/iterator_traits.html"/>
      <id>2ed57ba6febb7a6c4e925452ca3f72a0899800bb:reference/iterator/iterator_traits.md</id>
      <updated>2020-12-13T03:33:54+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/iterator_traits.md b/reference/iterator/iterator_traits.md
index 7975f5010..376746460 100644
--- a/reference/iterator/iterator_traits.md
+++ b/reference/iterator/iterator_traits.md
@@ -101,7 +101,7 @@ namespace std {
   using reference         = /*see below*/;
   using iterator_category = /*see below*/;
   ```
-  * indirectly_readable_traits[link /reference/indirectly_readable_traits.md]
+  * indirectly_readable_traits[link /reference/iterator/indirectly_readable_traits]
   * incrementable_traits[link /reference/iterator/incrementable_traits.md]
   * iter_reference_t[link /reference/iterator/iter_reference_t.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>mona-@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>iterator_traits -- リンク修正</title>
      <link href="https://cpprefjp.github.io/reference/iterator/iterator_traits.html"/>
      <id>2abc001e38a1321d434e7cdf530066d8f7d4e491:reference/iterator/iterator_traits.md</id>
      <updated>2020-12-13T03:29:28+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/iterator_traits.md b/reference/iterator/iterator_traits.md
index f38d87064..7975f5010 100644
--- a/reference/iterator/iterator_traits.md
+++ b/reference/iterator/iterator_traits.md
@@ -101,7 +101,7 @@ namespace std {
   using reference         = /*see below*/;
   using iterator_category = /*see below*/;
   ```
-  * indirectly_readable_traits[link /reference/iteratoindirectly_readable_traits.md]
+  * indirectly_readable_traits[link /reference/indirectly_readable_traits.md]
   * incrementable_traits[link /reference/iterator/incrementable_traits.md]
   * iter_reference_t[link /reference/iterator/iter_reference_t.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>mona-@live.jp</email>
      </author>
    </entry>
  
</feed>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++ Reference Site</title>
  <link href="http://cpprefjp.github.io" />
  <updated>2014-12-24T02:45:52.297270</updated>
  <id>748eb106-8ec5-45f0-8368-457b2006bada</id>

  
    <entry>
      <title>mt19937_64 (C++11) -- mt19937_64 : 比較対象があいまいだったので明記</title>
      <link href="http://cpprefjp.github.io/reference/random/mt19937_64.html"/>
      <id>367c6e7913678deccb02925826645590f6a0bc04:reference/random/mt19937_64.md</id>
      <updated>2014-12-24 02:45:50 +0900</updated>
      
        <content type="html">&lt;h1&gt;mt19937_64 (C++11)&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt;
    &lt;a href=&#34;http://cpprefjp.github.io/reference/random/mersenne_twister_engine.html&#34;&gt;mersenne_twister_engine&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;
      &lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/uint_fast64_t.html&#34;&gt;uint_fast64_t&lt;/a&gt;,
      &lt;span style=&#34;color: #666666&#34;&gt;64&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;312&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;156&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;31&lt;/span&gt;,
      &lt;span style=&#34;color: #666666&#34;&gt;0xb5026f5aa96619e9&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;29&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;0x5555555555555555&lt;/span&gt;,&lt;span style=&#34;color: #666666&#34;&gt;17&lt;/span&gt;,
      &lt;span style=&#34;color: #666666&#34;&gt;0x71d67fffeda60000&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;37&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;0xfff7eee000000000&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;43&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;6364136223846793005&lt;/span&gt;
    &lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  mt19937_64;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;パラメータ設定済みの&lt;a href=&#34;http://cpprefjp.github.io/reference/random/mersenne_twister_engine.html&#34;&gt;&lt;code&gt;mersenne_twister_engine&lt;/code&gt;&lt;/a&gt;。&lt;br /&gt;
64ビット版のメルセンヌ・ツイスター。32ビット版は&lt;a href=&#34;http://cpprefjp.github.io/reference/random/mt19937.html&#34;&gt;&lt;code&gt;mt19937&lt;/code&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;19937という名称は、メルセンヌ・ツイスター法によって生成される乱数列の周期から来ている(2&lt;sup&gt;19937&lt;/sup&gt; - 1)。  &lt;/p&gt;
&lt;p&gt;この乱数生成器は、64ビット環境以上では、それ未満の環境に比べて高速に動作する。また、64ビット整数をシード値としてとれるため、32ビット版の&lt;a href=&#34;http://cpprefjp.github.io/reference/random/mt19937.html&#34;&gt;&lt;code&gt;mt19937&lt;/code&gt;&lt;/a&gt;に比べて、さらなる乱雑さを期待できる。&lt;/p&gt;
&lt;h2&gt;要件&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;mt19937_64&lt;/code&gt;型オブジェクトをデフォルト構築した場合、10000番目に生成される擬似乱数の値は&lt;code&gt;9981545732273789042&lt;/code&gt;であること。&lt;/p&gt;
&lt;h2&gt;乱数列の周期&lt;/h2&gt;
&lt;p&gt;2&lt;sup&gt;19937&lt;/sup&gt; - 1&lt;/p&gt;
&lt;h2&gt;シード、および生成される値の型&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/uint_fast64_t.html&#34;&gt;&lt;code&gt;uint_fast64_t&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;random&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;random_device seed_gen;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;mt19937_64 engine(seed_gen());

  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;10&lt;/span&gt;; &lt;span style=&#34;color: #666666&#34;&gt;++&lt;/span&gt;i) {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;uint64_t&lt;/span&gt; result &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; engine();
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; result &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力例&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;1621025592805379139
4514793392314528655
4543694396077351855
3612539632838912606
2625719985131503282
3238788996565779147
3317678171748965379
12700229574828234289
8869797388973705309
9625202625077775903
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++0x mode&lt;/a&gt;: 4.7.2&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: ??&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>mt19937_64 (C++11) -- mt19937_64 : 64ビット版の特徴を記載。</title>
      <link href="http://cpprefjp.github.io/reference/random/mt19937_64.html"/>
      <id>b8a0167c6f7e861625e138e262744333ebfc5815:reference/random/mt19937_64.md</id>
      <updated>2014-12-24 02:44:02 +0900</updated>
      
        <content type="html">&lt;h1&gt;mt19937_64 (C++11)&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt;
    &lt;a href=&#34;http://cpprefjp.github.io/reference/random/mersenne_twister_engine.html&#34;&gt;mersenne_twister_engine&lt;/a&gt;&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;
      &lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/uint_fast64_t.html&#34;&gt;uint_fast64_t&lt;/a&gt;,
      &lt;span style=&#34;color: #666666&#34;&gt;64&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;312&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;156&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;31&lt;/span&gt;,
      &lt;span style=&#34;color: #666666&#34;&gt;0xb5026f5aa96619e9&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;29&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;0x5555555555555555&lt;/span&gt;,&lt;span style=&#34;color: #666666&#34;&gt;17&lt;/span&gt;,
      &lt;span style=&#34;color: #666666&#34;&gt;0x71d67fffeda60000&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;37&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;0xfff7eee000000000&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;43&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;6364136223846793005&lt;/span&gt;
    &lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt;
  mt19937_64;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;パラメータ設定済みの&lt;a href=&#34;http://cpprefjp.github.io/reference/random/mersenne_twister_engine.html&#34;&gt;&lt;code&gt;mersenne_twister_engine&lt;/code&gt;&lt;/a&gt;。&lt;br /&gt;
64ビット版のメルセンヌ・ツイスター。32ビット版は&lt;a href=&#34;http://cpprefjp.github.io/reference/random/mt19937.html&#34;&gt;&lt;code&gt;mt19937&lt;/code&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;19937という名称は、メルセンヌ・ツイスター法によって生成される乱数列の周期から来ている(2&lt;sup&gt;19937&lt;/sup&gt; - 1)。  &lt;/p&gt;
&lt;p&gt;この乱数生成器は、64ビット環境以上では、それ未満の環境に比べて高速に動作する。また、64ビット整数をシード値としてとれるため、さらなる乱雑さを期待できる。&lt;/p&gt;
&lt;h2&gt;要件&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;mt19937_64&lt;/code&gt;型オブジェクトをデフォルト構築した場合、10000番目に生成される擬似乱数の値は&lt;code&gt;9981545732273789042&lt;/code&gt;であること。&lt;/p&gt;
&lt;h2&gt;乱数列の周期&lt;/h2&gt;
&lt;p&gt;2&lt;sup&gt;19937&lt;/sup&gt; - 1&lt;/p&gt;
&lt;h2&gt;シード、および生成される値の型&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/uint_fast64_t.html&#34;&gt;&lt;code&gt;uint_fast64_t&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;random&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;random_device seed_gen;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;mt19937_64 engine(seed_gen());

  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;10&lt;/span&gt;; &lt;span style=&#34;color: #666666&#34;&gt;++&lt;/span&gt;i) {
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color: #B00040&#34;&gt;uint64_t&lt;/span&gt; result &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; engine();
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; result &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力例&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;1621025592805379139
4514793392314528655
4543694396077351855
3612539632838912606
2625719985131503282
3238788996565779147
3317678171748965379
12700229574828234289
8869797388973705309
9625202625077775903
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++0x mode&lt;/a&gt;: 4.7.2&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: ??&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>default_random_engine -- default_random_engine : 提案文書を参照として追加</title>
      <link href="http://cpprefjp.github.io/reference/random/default_random_engine.html"/>
      <id>0e7a544cb96958af56bb2cd5842e7b1a0822b2a0:reference/random/default_random_engine.md</id>
      <updated>2014-12-24 02:20:11 +0900</updated>
      
        <content type="html">&lt;h1&gt;default_random_engine&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;i&gt;implementation&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;defined&lt;/i&gt; default_random_engine;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;擬似乱数生成エンジンには、パフォーマンス、サイズ、品質といった、多くの特性による選択肢がある。&lt;br /&gt;
しかし、非専門家がこれらを正しく使い分けるのは難しいだろう。&lt;br /&gt;
&lt;code&gt;default_random_engine&lt;/code&gt;は、非専門用途で十分な品質の擬似乱数生成エンジンを&lt;code&gt;typedef&lt;/code&gt;したものである。&lt;/p&gt;
&lt;h2&gt;備考&lt;/h2&gt;
&lt;p&gt;以下、確認できた環境ごとのエンジンである。バージョンによって変更される可能性があるため参考までに。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ライブラリ&lt;/th&gt;
&lt;th&gt;エンジン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Visual C++ 2012&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/random/mt19937.html&#34;&gt;&lt;code&gt;mt19937&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GCC 4.8(libstdc++)&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/random/minstd_rand0.html&#34;&gt;&lt;code&gt;minstd_rand0&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clang 3.4(libc++)&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/random/minstd_rand.html&#34;&gt;&lt;code&gt;minstd_rand&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #BC7A00&#34;&gt;#include &amp;lt;random&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;()
{
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;random_device seed_gen;
  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;default_random_engine engine(seed_gen());

  std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;uniform_int_distribution&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; dist(&lt;span style=&#34;color: #666666&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color: #666666&#34;&gt;3&lt;/span&gt;);

  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;10&lt;/span&gt;; &lt;span style=&#34;color: #666666&#34;&gt;++&lt;/span&gt;i) {
    &lt;span style=&#34;color: #B00040&#34;&gt;int&lt;/span&gt; result &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; dist(engine);
    std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; result &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;endl;
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3&gt;出力例&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;1
3
3
2
0
1
0
2
0
3
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2478.pdf&#34; target=&#34;_blank&#34;&gt;N2478 A Proposal to Add &lt;code&gt;typedef default_random_engine&lt;/code&gt; to C++0X&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>cstdint (C++11) -- cstdint : ビット幅固定の整数型を追加</title>
      <link href="http://cpprefjp.github.io/reference/cstdint.html"/>
      <id>665146aff949718a70bdf1e4896b9da1eea3977c:reference/cstdint.md</id>
      <updated>2014-12-24 02:09:37 +0900</updated>
      
        <content type="html">&lt;h1&gt;cstdint (C++11)&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;cstdint&amp;gt;&lt;/code&gt;ヘッダでは、ビット数が規定された整数型の&lt;code&gt;typedef&lt;/code&gt;、およびマクロを提供する。これらの機能は、&lt;code&gt;std&lt;/code&gt;名前空間に属することを除いてC言語の標準ライブラリ&lt;code&gt;&amp;lt;stdint.h&amp;gt;&lt;/code&gt;ヘッダと同じである。&lt;/p&gt;
&lt;h2&gt;符号あり整数型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;型&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int8_t.html&#34;&gt;&lt;code&gt;int8_t&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;8ビット幅の符号あり整数(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int16_t.html&#34;&gt;&lt;code&gt;int16_t&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;16ビット幅の符号あり整数(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int32_t.html&#34;&gt;&lt;code&gt;int32_t&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;32ビット幅の符号あり整数(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int64_t.html&#34;&gt;&lt;code&gt;int64_t&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;64ビット幅の符号あり整数(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int_fast8_t.html&#34;&gt;&lt;code&gt;int_fast8_t&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;少なくても8ビット幅を持ち、演算が高速な符号あり整数&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int_fast16_t.html&#34;&gt;&lt;code&gt;int_fast16_t&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;少なくても16ビット幅を持ち、演算が高速な符号あり整数&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int_fast32_t.html&#34;&gt;&lt;code&gt;int_fast32_t&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;少なくても32ビット幅を持ち、演算が高速な符号あり整数&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int_fast64_t.html&#34;&gt;&lt;code&gt;int_fast64_t&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;少なくても64ビット幅を持ち、演算が高速な符号あり整数&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int_least8_t.html&#34;&gt;&lt;code&gt;int_least8_t&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;少なくても8ビット幅を持つ、最小の符号あり整数&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int_least16_t.html&#34;&gt;&lt;code&gt;int_least16_t&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;少なくても16ビット幅を持つ、最小の符号あり整数&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int_least32_t.html&#34;&gt;&lt;code&gt;int_least32_t&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;少なくても32ビット幅を持つ、最小の符号あり整数&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int_least64_t.html&#34;&gt;&lt;code&gt;int_least64_t&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;少なくても64ビット幅を持つ、最小の符号あり整数&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/intmax_t.html&#34;&gt;&lt;code&gt;intmax_t&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;最も大きい符号あり整数型&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;intptr_t&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ポインタサイズの符号あり整数型(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;符号なし整数型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;型&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/uint8_t.html&#34;&gt;&lt;code&gt;uint8_t&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;8ビット幅の符号なし整数(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/uint16_t.html&#34;&gt;&lt;code&gt;uint16_t&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;16ビット幅の符号なし整数(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/uint32_t.html&#34;&gt;&lt;code&gt;uint32_t&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;32ビット幅の符号なし整数(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/uint64_t.html&#34;&gt;&lt;code&gt;uint64_t&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;64ビット幅の符号なし整数(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/uint_fast8_t.html&#34;&gt;&lt;code&gt;uint_fast8_t&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;少なくても8ビット幅を持ち、演算が高速な符号なし整数&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/uint_fast16_t.html&#34;&gt;&lt;code&gt;uint_fast16_t&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;少なくても16ビット幅を持ち、演算が高速な符号なし整数&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/uint_fast32_t.html&#34;&gt;&lt;code&gt;uint_fast32_t&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;少なくても32ビット幅を持ち、演算が高速な符号なし整数&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/uint_fast64_t.html&#34;&gt;&lt;code&gt;uint_fast64_t&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;少なくても64ビット幅を持ち、演算が高速な符号なし整数&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/uint_least8_t.html&#34;&gt;&lt;code&gt;uint_least8_t&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;少なくても8ビット幅を持つ、最小の符号なし整数&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/uint_least16_t.html&#34;&gt;&lt;code&gt;uint_least16_t&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;少なくても16ビット幅を持つ、最小の符号なし整数&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/uint_least32_t.html&#34;&gt;&lt;code&gt;uint_least32_t&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;少なくても32ビット幅を持つ、最小の符号なし整数&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/uint_least64_t.html&#34;&gt;&lt;code&gt;uint_least64_t&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;少なくても64ビット幅を持つ、最小の符号なし整数&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/uintmax_t.html&#34;&gt;&lt;code&gt;uintmax_t&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;最も大きい符号なし整数型&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;uintptr_t&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ポインタサイズの符号なし整数型(実装するかどうかは処理系定義)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;以下のマクロは、整数型の限界値を表す。これらのマクロは、&lt;code&gt;__STDC_LIMIT_MACROS&lt;/code&gt;マクロが定義されている場合のみ定義される。&lt;/p&gt;
&lt;h2&gt;符号あり整数型用の限界値マクロ&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;マクロ&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;INT8_MIN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int8_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;INT8_MAX&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int8_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;INT16_MIN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int16_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;INT16_MAX&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int16_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;INT32_MIN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int32_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;INT32_MAX&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int32_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;INT64_MIN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int64_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;INT64_MAX&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int64_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int_fast8_min.html&#34;&gt;&lt;code&gt;INT_FAST8_MIN&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int_fast8_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int_fast8_max.html&#34;&gt;&lt;code&gt;INT_FAST8_MAX&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int_fast8_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int_fast16_min.html&#34;&gt;&lt;code&gt;INT_FAST16_MIN&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int_fast16_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int_fast16_max.html&#34;&gt;&lt;code&gt;INT_FAST16_MAX&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int_fast16_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int_fast32_min.html&#34;&gt;&lt;code&gt;INT_FAST32_MIN&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int_fast32_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int_fast32_max.html&#34;&gt;&lt;code&gt;INT_FAST32_MAX&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int_fast32_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int_fast64_min.html&#34;&gt;&lt;code&gt;INT_FAST64_MIN&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int_fast64_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int_fast64_max.html&#34;&gt;&lt;code&gt;INT_FAST64_MAX&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int_fast64_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int_least8_min.html&#34;&gt;&lt;code&gt;INT_LEAST8_MIN&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int_least8_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int_least8_max.html&#34;&gt;&lt;code&gt;INT_LEAST8_MAX&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int_least8_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int_least16_min.html&#34;&gt;&lt;code&gt;INT_LEAST16_MIN&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int_least16_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int_least16_max.html&#34;&gt;&lt;code&gt;INT_LEAST16_MAX&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int_least16_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int_least32_min.html&#34;&gt;&lt;code&gt;INT_LEAST32_MIN&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int_least32_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int_least32_max.html&#34;&gt;&lt;code&gt;INT_LEAST32_MAX&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int_least32_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int_least64_min.html&#34;&gt;&lt;code&gt;INT_LEAST64_MIN&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int_least64_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int_least64_max.html&#34;&gt;&lt;code&gt;INT_LEAST64_MAX&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int_least64_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/intmax_min.html&#34;&gt;&lt;code&gt;INT_MAX_MIN&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int_max_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/intmax_max.html&#34;&gt;&lt;code&gt;INT_MAX_MAX&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int_max_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;INT_PTR_MIN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;intptr_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;INT_PTR_MAX&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;intptr_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/ptrdiff_min.html&#34;&gt;&lt;code&gt;PTRDIFF_MIN&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstddef/ptrdiff_t.html&#34;&gt;&lt;code&gt;ptrdiff_t&lt;/code&gt;&lt;/a&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/ptrdiff_max.html&#34;&gt;&lt;code&gt;PTRDIFF_MAX&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstddef/ptrdiff_t.html&#34;&gt;&lt;code&gt;ptrdiff_t&lt;/code&gt;&lt;/a&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;SIG_ATOMIC_MIN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;sig_atomic_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;SIG_ATOMIC_MAX&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;sig_atomic_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;WCHAR_MIN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;wchar_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;WCHAR_MAX&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;wchar_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;WINT_MIN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;wint_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;WINT_MAX&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;wint_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;符号なし整数型用の限界値マクロ&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;マクロ&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UINT8_MIN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint8_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UINT8_MAX&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint8_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UINT16_MIN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint16_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UINT16_MAX&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint16_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UINT32_MIN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint32_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UINT32_MAX&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint32_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UINT64_MIN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint64_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UINT64_MAX&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint64_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UINT_FAST8_MIN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint_fast8_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/uint_fast8_max.html&#34;&gt;&lt;code&gt;UINT_FAST8_MAX&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint_fast8_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UINT_FAST16_MIN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint_fast16_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/uint_fast16_max.html&#34;&gt;&lt;code&gt;UINT_FAST16_MAX&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint_fast16_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UINT_FAST32_MIN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint_fast32_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/uint_fast32_max.html&#34;&gt;&lt;code&gt;UINT_FAST32_MAX&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint_fast32_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UINT_FAST64_MIN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint_fast64_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/uint_fast64_max.html&#34;&gt;&lt;code&gt;UINT_FAST64_MAX&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint_fast64_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UINT_LEAST8_MIN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint_least8_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/uint_least8_max.html&#34;&gt;&lt;code&gt;UINT_LEAST8_MAX&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint_least8_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UINT_LEAST16_MIN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint_least16_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/uint_least16_max.html&#34;&gt;&lt;code&gt;UINT_LEAST16_MAX&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint_least16_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UINT_LEAST32_MIN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint_least32_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/uint_least32_max.html&#34;&gt;&lt;code&gt;UINT_LEAST32_MAX&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint_least32_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UINT_LEAST64_MIN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint_least64_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/uint_least64_max.html&#34;&gt;&lt;code&gt;UINT_LEAST64_MAX&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint_least64_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UINT_MAX_MIN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint_max_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/uintmax_max.html&#34;&gt;&lt;code&gt;UINT_MAX_MAX&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uint_max_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UINT_PTR_MIN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uintptr_t&lt;/code&gt;の最小値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UINT_PTR_MAX&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;uintptr_t&lt;/code&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;SIZE_MAX&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstddef/size_t.html&#34;&gt;&lt;code&gt;size_t&lt;/code&gt;&lt;/a&gt;の最大値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;以下のマクロは、各整数型の定数値を表す関数マクロである。&lt;br /&gt;
例：) &lt;code&gt;int8_t x = INT8_C(1);&lt;/code&gt;&lt;br /&gt;
これらのマクロは、&lt;code&gt;__STDC_CONSTANT_MACROS&lt;/code&gt;マクロが定義されている場合のみ定義される。&lt;/p&gt;
&lt;h2&gt;符号あり整数型用の定数値マクロ&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;マクロ&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;INT8_C(n)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;8ビット幅を持つ、符号あり整数型の定数値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;INT16_C(n)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;16ビット幅を持つ、符号あり整数型の定数値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;INT32_C(n)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;32ビット幅を持つ、符号あり整数型の定数値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;INT64_C(n)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;64ビット幅を持つ、符号あり整数型の定数値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;INTMAX_C(n)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;最も大きい符号あり整数型の定数値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;符号なし整数型用の定数値マクロ&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;マクロ&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UINT8_C(n)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;8ビット幅を持つ、符号なし整数型の定数値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UINT16_C(n)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;16ビット幅を持つ、符号なし整数型の定数値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UINT32_C(n)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;32ビット幅を持つ、符号なし整数型の定数値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UINT64_C(n)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;64ビット幅を持つ、符号なし整数型の定数値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UINTMAX_C(n)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;最も大きい符号なし整数型の定数値&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>int16_t (C++11) -- cstdint : ビット幅固定の整数型を追加</title>
      <link href="http://cpprefjp.github.io/reference/cstdint/int16_t.html"/>
      <id>665146aff949718a70bdf1e4896b9da1eea3977c:reference/cstdint/int16_t.md</id>
      <updated>2014-12-24 02:09:37 +0900</updated>
      
        <content type="html">&lt;h1&gt;int16_t (C++11)&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;i&gt;signed&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;integer&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;type&lt;/i&gt; &lt;span style=&#34;color: #B00040&#34;&gt;int16_t&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;16ビットの符号付き整数型。&lt;/p&gt;
&lt;p&gt;この型を実装するかどうかは処理系定義。&lt;/p&gt;
&lt;h2&gt;備考&lt;/h2&gt;
&lt;p&gt;CPUによっては1バイトが7ビットや16ビットになる場合があるため、そういった環境では8ビットの乗数幅を持つ整数型が定義できない可能性がある。&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++0x mode&lt;/a&gt;: 4.7.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt; ??&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>int32_t (C++11) -- cstdint : ビット幅固定の整数型を追加</title>
      <link href="http://cpprefjp.github.io/reference/cstdint/int32_t.html"/>
      <id>665146aff949718a70bdf1e4896b9da1eea3977c:reference/cstdint/int32_t.md</id>
      <updated>2014-12-24 02:09:37 +0900</updated>
      
        <content type="html">&lt;h1&gt;int32_t (C++11)&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;i&gt;signed&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;integer&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;type&lt;/i&gt; &lt;span style=&#34;color: #B00040&#34;&gt;int32_t&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;32ビットの符号付き整数型。&lt;/p&gt;
&lt;p&gt;この型を実装するかどうかは処理系定義。&lt;/p&gt;
&lt;h2&gt;備考&lt;/h2&gt;
&lt;p&gt;CPUによっては1バイトが7ビットや16ビットになる場合があるため、そういった環境では8ビットの乗数幅を持つ整数型が定義できない可能性がある。&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++0x mode&lt;/a&gt;: 4.7.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt; ??&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>int64_t (C++11) -- cstdint : ビット幅固定の整数型を追加</title>
      <link href="http://cpprefjp.github.io/reference/cstdint/int64_t.html"/>
      <id>665146aff949718a70bdf1e4896b9da1eea3977c:reference/cstdint/int64_t.md</id>
      <updated>2014-12-24 02:09:37 +0900</updated>
      
        <content type="html">&lt;h1&gt;int64_t (C++11)&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;i&gt;signed&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;integer&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;type&lt;/i&gt; &lt;span style=&#34;color: #B00040&#34;&gt;int64_t&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;64ビットの符号付き整数型。&lt;/p&gt;
&lt;p&gt;この型を実装するかどうかは処理系定義。&lt;/p&gt;
&lt;h2&gt;備考&lt;/h2&gt;
&lt;p&gt;CPUによっては1バイトが7ビットや16ビットになる場合があるため、そういった環境では8ビットの乗数幅を持つ整数型が定義できない可能性がある。&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++0x mode&lt;/a&gt;: 4.7.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt; ??&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>int8_t (C++11) -- cstdint : ビット幅固定の整数型を追加</title>
      <link href="http://cpprefjp.github.io/reference/cstdint/int8_t.html"/>
      <id>665146aff949718a70bdf1e4896b9da1eea3977c:reference/cstdint/int8_t.md</id>
      <updated>2014-12-24 02:09:37 +0900</updated>
      
        <content type="html">&lt;h1&gt;int8_t (C++11)&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;i&gt;signed&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;integer&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;type&lt;/i&gt; &lt;span style=&#34;color: #B00040&#34;&gt;int8_t&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;8ビットの符号付き整数型。&lt;/p&gt;
&lt;p&gt;この型を実装するかどうかは処理系定義。&lt;/p&gt;
&lt;h2&gt;備考&lt;/h2&gt;
&lt;p&gt;CPUによっては1バイトが7ビットや16ビットになる場合があるため、そういった環境では8ビットの乗数幅を持つ整数型が定義できない可能性がある。&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++0x mode&lt;/a&gt;: 4.7.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt; ??&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>uint8_t (C++11) -- cstdint : ビット幅固定の整数型を追加</title>
      <link href="http://cpprefjp.github.io/reference/cstdint/uint16_t.html"/>
      <id>665146aff949718a70bdf1e4896b9da1eea3977c:reference/cstdint/uint16_t.md</id>
      <updated>2014-12-24 02:09:37 +0900</updated>
      
        <content type="html">&lt;h1&gt;uint8_t (C++11)&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;i&gt;unsigned&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;integer&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;type&lt;/i&gt; &lt;span style=&#34;color: #B00040&#34;&gt;uint8_t&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;8ビットの符号なし整数型。&lt;/p&gt;
&lt;p&gt;この型を実装するかどうかは処理系定義。&lt;/p&gt;
&lt;h2&gt;備考&lt;/h2&gt;
&lt;p&gt;CPUによっては1バイトが7ビットや16ビットになる場合があるため、そういった環境では8ビットの乗数幅を持つ整数型が定義できない可能性がある。&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++0x mode&lt;/a&gt;: 4.7.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt; ??&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>uint32_t (C++11) -- cstdint : ビット幅固定の整数型を追加</title>
      <link href="http://cpprefjp.github.io/reference/cstdint/uint32_t.html"/>
      <id>665146aff949718a70bdf1e4896b9da1eea3977c:reference/cstdint/uint32_t.md</id>
      <updated>2014-12-24 02:09:37 +0900</updated>
      
        <content type="html">&lt;h1&gt;uint32_t (C++11)&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;i&gt;unsigned&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;integer&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;type&lt;/i&gt; &lt;span style=&#34;color: #B00040&#34;&gt;uint32_t&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;32ビットの符号なし整数型。&lt;/p&gt;
&lt;p&gt;この型を実装するかどうかは処理系定義。&lt;/p&gt;
&lt;h2&gt;備考&lt;/h2&gt;
&lt;p&gt;CPUによっては1バイトが7ビットや16ビットになる場合があるため、そういった環境では8ビットの乗数幅を持つ整数型が定義できない可能性がある。&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++0x mode&lt;/a&gt;: 4.7.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt; ??&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>uint64_t (C++11) -- cstdint : ビット幅固定の整数型を追加</title>
      <link href="http://cpprefjp.github.io/reference/cstdint/uint64_t.html"/>
      <id>665146aff949718a70bdf1e4896b9da1eea3977c:reference/cstdint/uint64_t.md</id>
      <updated>2014-12-24 02:09:37 +0900</updated>
      
        <content type="html">&lt;h1&gt;uint64_t (C++11)&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;i&gt;unsigned&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;integer&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;type&lt;/i&gt; &lt;span style=&#34;color: #B00040&#34;&gt;uint64_t&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;64ビットの符号なし整数型。&lt;/p&gt;
&lt;p&gt;この型を実装するかどうかは処理系定義。&lt;/p&gt;
&lt;h2&gt;備考&lt;/h2&gt;
&lt;p&gt;CPUによっては1バイトが7ビットや16ビットになる場合があるため、そういった環境では8ビットの乗数幅を持つ整数型が定義できない可能性がある。&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++0x mode&lt;/a&gt;: 4.7.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt; ??&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>uint8_t (C++11) -- cstdint : ビット幅固定の整数型を追加</title>
      <link href="http://cpprefjp.github.io/reference/cstdint/uint8_t.html"/>
      <id>665146aff949718a70bdf1e4896b9da1eea3977c:reference/cstdint/uint8_t.md</id>
      <updated>2014-12-24 02:09:37 +0900</updated>
      
        <content type="html">&lt;h1&gt;uint8_t (C++11)&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;i&gt;unsigned&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;integer&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;type&lt;/i&gt; &lt;span style=&#34;color: #B00040&#34;&gt;uint8_t&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;8ビットの符号なし整数型。&lt;/p&gt;
&lt;p&gt;この型を実装するかどうかは処理系定義。&lt;/p&gt;
&lt;h2&gt;備考&lt;/h2&gt;
&lt;p&gt;CPUによっては1バイトが7ビットや16ビットになる場合があるため、そういった環境では8ビットの乗数幅を持つ整数型が定義できない可能性がある。&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++0x mode&lt;/a&gt;: 4.7.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt; ??&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>int_fast16_t (C++11) -- [u]int_[fast | least][8 | 16 | 32 | 64]_t : この型を使用する必要がある状況を記載</title>
      <link href="http://cpprefjp.github.io/reference/cstdint/int_fast16_t.html"/>
      <id>b51c48ee2c1e88ce44566f04374fda212d7b26ac:reference/cstdint/int_fast16_t.md</id>
      <updated>2014-12-24 02:00:59 +0900</updated>
      
        <content type="html">&lt;h1&gt;int_fast16_t (C++11)&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;i&gt;signed&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;integer&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;type&lt;/i&gt; &lt;span style=&#34;color: #B00040&#34;&gt;int_fast16_t&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;16ビット以上の、通常最も高速に処理される符号付き整数型。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int16_t.html&#34;&gt;&lt;code&gt;int16_t&lt;/code&gt;&lt;/a&gt;型が環境によっては定義されないため、そのような状況でこの型を使用する。&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++0x mode&lt;/a&gt;: 4.7.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt; ??&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>int_fast32_t (C++11) -- [u]int_[fast | least][8 | 16 | 32 | 64]_t : この型を使用する必要がある状況を記載</title>
      <link href="http://cpprefjp.github.io/reference/cstdint/int_fast32_t.html"/>
      <id>b51c48ee2c1e88ce44566f04374fda212d7b26ac:reference/cstdint/int_fast32_t.md</id>
      <updated>2014-12-24 02:00:59 +0900</updated>
      
        <content type="html">&lt;h1&gt;int_fast32_t (C++11)&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;i&gt;signed&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;integer&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;type&lt;/i&gt; &lt;span style=&#34;color: #B00040&#34;&gt;int_fast32_t&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;32ビット以上の、通常最も高速に処理される符号付き整数型。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int32_t.html&#34;&gt;&lt;code&gt;int32_t&lt;/code&gt;&lt;/a&gt;型が環境によっては定義されないため、そのような状況でこの型を使用する。&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++0x mode&lt;/a&gt;: 4.7.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt; ??&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>int_fast64_t (C++11) -- [u]int_[fast | least][8 | 16 | 32 | 64]_t : この型を使用する必要がある状況を記載</title>
      <link href="http://cpprefjp.github.io/reference/cstdint/int_fast64_t.html"/>
      <id>b51c48ee2c1e88ce44566f04374fda212d7b26ac:reference/cstdint/int_fast64_t.md</id>
      <updated>2014-12-24 02:00:59 +0900</updated>
      
        <content type="html">&lt;h1&gt;int_fast64_t (C++11)&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;i&gt;signed&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;integer&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;type&lt;/i&gt; &lt;span style=&#34;color: #B00040&#34;&gt;int_fast64_t&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;64ビット以上の、通常最も高速に処理される符号付き整数型。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int64_t.html&#34;&gt;&lt;code&gt;int64_t&lt;/code&gt;&lt;/a&gt;型が環境によっては定義されないため、そのような状況でこの型を使用する。&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++0x mode&lt;/a&gt;: 4.7.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt; ??&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>int_fast8_t (C++11) -- [u]int_[fast | least][8 | 16 | 32 | 64]_t : この型を使用する必要がある状況を記載</title>
      <link href="http://cpprefjp.github.io/reference/cstdint/int_fast8_t.html"/>
      <id>b51c48ee2c1e88ce44566f04374fda212d7b26ac:reference/cstdint/int_fast8_t.md</id>
      <updated>2014-12-24 02:00:59 +0900</updated>
      
        <content type="html">&lt;h1&gt;int_fast8_t (C++11)&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;i&gt;signed&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;integer&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;type&lt;/i&gt; &lt;span style=&#34;color: #B00040&#34;&gt;int_fast8_t&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;8ビット以上の、通常最も高速に処理される符号付き整数型。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int8_t.html&#34;&gt;&lt;code&gt;int8_t&lt;/code&gt;&lt;/a&gt;型が環境によっては定義されないため、そのような状況でこの型を使用する。&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++0x mode&lt;/a&gt;: 4.7.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt; ??&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>int_least16_t (C++11) -- [u]int_[fast | least][8 | 16 | 32 | 64]_t : この型を使用する必要がある状況を記載</title>
      <link href="http://cpprefjp.github.io/reference/cstdint/int_least16_t.html"/>
      <id>b51c48ee2c1e88ce44566f04374fda212d7b26ac:reference/cstdint/int_least16_t.md</id>
      <updated>2014-12-24 02:00:59 +0900</updated>
      
        <content type="html">&lt;h1&gt;int_least16_t (C++11)&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;i&gt;signed&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;integer&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;type&lt;/i&gt; &lt;span style=&#34;color: #B00040&#34;&gt;int_least16_t&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;16ビット以上の、最も小さい符号付き整数型。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int16_t.html&#34;&gt;&lt;code&gt;int16_t&lt;/code&gt;&lt;/a&gt;型が環境によっては定義されないため、そのような状況でこの型を使用する。&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++0x mode&lt;/a&gt;: 4.7.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt; ??&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>int_least32_t (C++11) -- [u]int_[fast | least][8 | 16 | 32 | 64]_t : この型を使用する必要がある状況を記載</title>
      <link href="http://cpprefjp.github.io/reference/cstdint/int_least32_t.html"/>
      <id>b51c48ee2c1e88ce44566f04374fda212d7b26ac:reference/cstdint/int_least32_t.md</id>
      <updated>2014-12-24 02:00:59 +0900</updated>
      
        <content type="html">&lt;h1&gt;int_least32_t (C++11)&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;i&gt;signed&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;integer&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;type&lt;/i&gt; &lt;span style=&#34;color: #B00040&#34;&gt;int_least32_t&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;32ビット以上の、最も小さい符号付き整数型。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int32_t.html&#34;&gt;&lt;code&gt;int32_t&lt;/code&gt;&lt;/a&gt;型が環境によっては定義されないため、そのような状況でこの型を使用する。&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++0x mode&lt;/a&gt;: 4.7.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt; ??&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>int_least64_t (C++11) -- [u]int_[fast | least][8 | 16 | 32 | 64]_t : この型を使用する必要がある状況を記載</title>
      <link href="http://cpprefjp.github.io/reference/cstdint/int_least64_t.html"/>
      <id>b51c48ee2c1e88ce44566f04374fda212d7b26ac:reference/cstdint/int_least64_t.md</id>
      <updated>2014-12-24 02:00:59 +0900</updated>
      
        <content type="html">&lt;h1&gt;int_least64_t (C++11)&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;i&gt;signed&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;integer&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;type&lt;/i&gt; &lt;span style=&#34;color: #B00040&#34;&gt;int_least64_t&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;64ビット以上の、最も小さい符号付き整数型。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int64_t.html&#34;&gt;&lt;code&gt;int64_t&lt;/code&gt;&lt;/a&gt;型が環境によっては定義されないため、そのような状況でこの型を使用する。&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++0x mode&lt;/a&gt;: 4.7.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt; ??&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>int_least8_t (C++11) -- [u]int_[fast | least][8 | 16 | 32 | 64]_t : この型を使用する必要がある状況を記載</title>
      <link href="http://cpprefjp.github.io/reference/cstdint/int_least8_t.html"/>
      <id>b51c48ee2c1e88ce44566f04374fda212d7b26ac:reference/cstdint/int_least8_t.md</id>
      <updated>2014-12-24 02:00:59 +0900</updated>
      
        <content type="html">&lt;h1&gt;int_least8_t (C++11)&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;i&gt;signed&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;integer&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;type&lt;/i&gt; &lt;span style=&#34;color: #B00040&#34;&gt;int_least8_t&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;8ビット以上の、最も小さい符号付き整数型。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/int8_t.html&#34;&gt;&lt;code&gt;int8_t&lt;/code&gt;&lt;/a&gt;型が環境によっては定義されないため、そのような状況でこの型を使用する。&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++0x mode&lt;/a&gt;: 4.7.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt; ??&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>uint_fast16_t (C++11) -- [u]int_[fast | least][8 | 16 | 32 | 64]_t : この型を使用する必要がある状況を記載</title>
      <link href="http://cpprefjp.github.io/reference/cstdint/uint_fast16_t.html"/>
      <id>b51c48ee2c1e88ce44566f04374fda212d7b26ac:reference/cstdint/uint_fast16_t.md</id>
      <updated>2014-12-24 02:00:59 +0900</updated>
      
        <content type="html">&lt;h1&gt;uint_fast16_t (C++11)&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;i&gt;unsigned&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;integer&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;type&lt;/i&gt; &lt;span style=&#34;color: #B00040&#34;&gt;uint_fast16_t&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;16ビット以上の、通常最も高速に処理される符号なし整数型。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/uint16_t.html&#34;&gt;&lt;code&gt;uint16_t&lt;/code&gt;&lt;/a&gt;型が環境によっては定義されないため、そのような状況でこの型を使用する。&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++0x mode&lt;/a&gt;: 4.7.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt; ??&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>uint_fast32_t (C++11) -- [u]int_[fast | least][8 | 16 | 32 | 64]_t : この型を使用する必要がある状況を記載</title>
      <link href="http://cpprefjp.github.io/reference/cstdint/uint_fast32_t.html"/>
      <id>b51c48ee2c1e88ce44566f04374fda212d7b26ac:reference/cstdint/uint_fast32_t.md</id>
      <updated>2014-12-24 02:00:59 +0900</updated>
      
        <content type="html">&lt;h1&gt;uint_fast32_t (C++11)&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;i&gt;unsigned&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;integer&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;type&lt;/i&gt; &lt;span style=&#34;color: #B00040&#34;&gt;uint_fast32_t&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;32ビット以上の、通常最も高速に処理される符号なし整数型。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/uint32_t.html&#34;&gt;&lt;code&gt;uint32_t&lt;/code&gt;&lt;/a&gt;型が環境によっては定義されないため、そのような状況でこの型を使用する。&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++0x mode&lt;/a&gt;: 4.7.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt; ??&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>uint_fast64_t (C++11) -- [u]int_[fast | least][8 | 16 | 32 | 64]_t : この型を使用する必要がある状況を記載</title>
      <link href="http://cpprefjp.github.io/reference/cstdint/uint_fast64_t.html"/>
      <id>b51c48ee2c1e88ce44566f04374fda212d7b26ac:reference/cstdint/uint_fast64_t.md</id>
      <updated>2014-12-24 02:00:59 +0900</updated>
      
        <content type="html">&lt;h1&gt;uint_fast64_t (C++11)&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;i&gt;unsigned&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;integer&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;type&lt;/i&gt; &lt;span style=&#34;color: #B00040&#34;&gt;uint_fast64_t&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;64ビット以上の、通常最も高速に処理される符号なし整数型。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/uint64_t.html&#34;&gt;&lt;code&gt;uint64_t&lt;/code&gt;&lt;/a&gt;型が環境によっては定義されないため、そのような状況でこの型を使用する。&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++0x mode&lt;/a&gt;: 4.7.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt; ??&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>uint_fast8_t (C++11) -- [u]int_[fast | least][8 | 16 | 32 | 64]_t : この型を使用する必要がある状況を記載</title>
      <link href="http://cpprefjp.github.io/reference/cstdint/uint_fast8_t.html"/>
      <id>b51c48ee2c1e88ce44566f04374fda212d7b26ac:reference/cstdint/uint_fast8_t.md</id>
      <updated>2014-12-24 02:00:59 +0900</updated>
      
        <content type="html">&lt;h1&gt;uint_fast8_t (C++11)&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;i&gt;unsigned&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;integer&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;type&lt;/i&gt; &lt;span style=&#34;color: #B00040&#34;&gt;uint_fast8_t&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;8ビット以上の、通常最も高速に処理される符号なし整数型。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/uint8_t.html&#34;&gt;&lt;code&gt;uint8_t&lt;/code&gt;&lt;/a&gt;型が環境によっては定義されないため、そのような状況でこの型を使用する。&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++0x mode&lt;/a&gt;: 4.7.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt; ??&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>uint_least16_t (C++11) -- [u]int_[fast | least][8 | 16 | 32 | 64]_t : この型を使用する必要がある状況を記載</title>
      <link href="http://cpprefjp.github.io/reference/cstdint/uint_least16_t.html"/>
      <id>b51c48ee2c1e88ce44566f04374fda212d7b26ac:reference/cstdint/uint_least16_t.md</id>
      <updated>2014-12-24 02:00:59 +0900</updated>
      
        <content type="html">&lt;h1&gt;uint_least16_t (C++11)&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;i&gt;unsigned&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;integer&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;type&lt;/i&gt; &lt;span style=&#34;color: #B00040&#34;&gt;uint_least16_t&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;16ビット以上の、最も小さい符号なし整数型。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/uint16_t.html&#34;&gt;&lt;code&gt;uint16_t&lt;/code&gt;&lt;/a&gt;型が環境によっては定義されないため、そのような状況でこの型を使用する。&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++0x mode&lt;/a&gt;: 4.7.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt; ??&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>uint_least32_t (C++11) -- [u]int_[fast | least][8 | 16 | 32 | 64]_t : この型を使用する必要がある状況を記載</title>
      <link href="http://cpprefjp.github.io/reference/cstdint/uint_least32_t.html"/>
      <id>b51c48ee2c1e88ce44566f04374fda212d7b26ac:reference/cstdint/uint_least32_t.md</id>
      <updated>2014-12-24 02:00:59 +0900</updated>
      
        <content type="html">&lt;h1&gt;uint_least32_t (C++11)&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;i&gt;unsigned&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;integer&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;type&lt;/i&gt; &lt;span style=&#34;color: #B00040&#34;&gt;uint_least32_t&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;32ビット以上の、最も小さい符号なし整数型。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/uint32_t.html&#34;&gt;&lt;code&gt;uint32_t&lt;/code&gt;&lt;/a&gt;型が環境によっては定義されないため、そのような状況でこの型を使用する。&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++0x mode&lt;/a&gt;: 4.7.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt; ??&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>uint_least64_t (C++11) -- [u]int_[fast | least][8 | 16 | 32 | 64]_t : この型を使用する必要がある状況を記載</title>
      <link href="http://cpprefjp.github.io/reference/cstdint/uint_least64_t.html"/>
      <id>b51c48ee2c1e88ce44566f04374fda212d7b26ac:reference/cstdint/uint_least64_t.md</id>
      <updated>2014-12-24 02:00:59 +0900</updated>
      
        <content type="html">&lt;h1&gt;uint_least64_t (C++11)&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;i&gt;unsigned&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;integer&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;type&lt;/i&gt; &lt;span style=&#34;color: #B00040&#34;&gt;uint_least64_t&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;64ビット以上の、最も小さい符号なし整数型。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/uint64_t.html&#34;&gt;&lt;code&gt;uint64_t&lt;/code&gt;&lt;/a&gt;型が環境によっては定義されないため、そのような状況でこの型を使用する。&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++0x mode&lt;/a&gt;: 4.7.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt; ??&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>uint_least8_t (C++11) -- [u]int_[fast | least][8 | 16 | 32 | 64]_t : この型を使用する必要がある状況を記載</title>
      <link href="http://cpprefjp.github.io/reference/cstdint/uint_least8_t.html"/>
      <id>b51c48ee2c1e88ce44566f04374fda212d7b26ac:reference/cstdint/uint_least8_t.md</id>
      <updated>2014-12-24 02:00:59 +0900</updated>
      
        <content type="html">&lt;h1&gt;uint_least8_t (C++11)&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;namespace&lt;/span&gt; std {
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;typedef&lt;/span&gt; &lt;i&gt;unsigned&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;integer&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;type&lt;/i&gt; &lt;span style=&#34;color: #B00040&#34;&gt;uint_least8_t&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;8ビット以上の、最も小さい符号なし整数型。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cstdint/uint8_t.html&#34;&gt;&lt;code&gt;uint8_t&lt;/code&gt;&lt;/a&gt;型が環境によっては定義されないため、そのような状況でこの型を使用する。&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;: &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++0x mode&lt;/a&gt;: 4.7.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt; ??&lt;/li&gt;
&lt;/ul&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2020-03-29T10:56:22.526025</updated>
  <id>c5cf819e-2794-4942-8b93-887959321792</id>

  
    <entry>
      <title>処理系 -- fix(msvc_ver): fix 16.5.1 info</title>
      <link href="https://cpprefjp.github.io/implementation.html"/>
      <id>0299f05c1443d75778e11be1fc6c34ab466209c4:implementation.md</id>
      <updated>2020-03-29T19:52:41+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;処理系&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GNU Compiler Collection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#icc&#34;&gt;Intel C++ Compiler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Microsoft Visual C++&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;本サイトにおける処理系バージョンに記載&lt;/h2&gt;
&lt;p&gt;本サイトのリファレンスページでは、「処理系」の項目にバージョン番号を記載している。これは、処理系がその機能をサポート開始した厳密なバージョンではなく、リファレンス執筆者が動作確認できたバージョンである。&lt;/p&gt;
&lt;p&gt;古くからサポートされている機能だが、古い処理系を入手することが難しい場合などがあるため、本サイトではこのようなルールになっている。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#clang&#34; id=&#34;clang&#34;&gt;Clang&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;このサイトでは Clang と呼ぶ。「クラン(グ)」と読む。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://clang.llvm.org/&#34; target=&#34;_blank&#34;&gt;&#34;clang&#34; C Language Family Frontend for LLVM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;別名&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;clang&lt;/li&gt;
&lt;li&gt;clang++&lt;/li&gt;
&lt;li&gt;Apple LLVMコンパイラ&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;C++11の機能を有効にする&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-std=c++11&lt;/code&gt;オプションを使用する。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;C++14の機能を有効にする&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Clang 3.2から3.4までは、&lt;code&gt;-std=c++1y&lt;/code&gt;オプションを使用する。&lt;ul&gt;
&lt;li&gt;GNU拡張を有効にする&lt;code&gt;-std=gnu++1y&lt;/code&gt;オプションもある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Clang 3.5以降は、&lt;code&gt;-std=c++14&lt;/code&gt;オプションを使用する(以前までのオプションも使用できる)。&lt;ul&gt;
&lt;li&gt;GNU拡張を有効にする&lt;code&gt;-std=gnu++14&lt;/code&gt;オプションもある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Clang 6.0以降は、C++14がデフォルトとなる。デフォルトバージョンのコンパイルオプションは&lt;code&gt;-std=gnu++14&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;C++17の機能を有効にする&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Clang 3.5から4.0までは、&lt;code&gt;-std=c++1z&lt;/code&gt;オプションを使用する。&lt;ul&gt;
&lt;li&gt;GNU拡張を有効にする&lt;code&gt;-std=gnu++1z&lt;/code&gt;オプションもある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Clang 5.0以降は、&lt;code&gt;-std=c++17&lt;/code&gt;オプションを使用する(以前までのオプションも使用できる)。&lt;ul&gt;
&lt;li&gt;GNU拡張を有効にする&lt;code&gt;-std=gnu++17&lt;/code&gt;オプションもある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;C++20の機能を有効にする&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Clang 6.0以降は、&lt;code&gt;-std=c++2a&lt;/code&gt;オプションを使用する。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#gcc&#34; id=&#34;gcc&#34;&gt;GNU Compiler Collection&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;このサイトでは GCC と呼ぶ&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gcc.gnu.org/&#34; target=&#34;_blank&#34;&gt;GCC, the GNU Compiler Collection - GNU Project - Free Software Foundation (FSF)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.mingw.org/&#34; target=&#34;_blank&#34;&gt;MinGW | Minimalist GNU for Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.equation.com/servlet/equation.cmd?fa=fortran&#34; target=&#34;_blank&#34;&gt;Fortran, C, C++ for Windows&lt;/a&gt; (MinGW バイナリ)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;別名&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;gcc&lt;/li&gt;
&lt;li&gt;g++&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;C++11の機能を有効にする&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;GCC 4.3から4.6までは、&lt;code&gt;-std=c++0x&lt;/code&gt;オプションを使用する。&lt;ul&gt;
&lt;li&gt;GNU拡張を有効にする&lt;code&gt;-std=gnu++0x&lt;/code&gt;オプションもある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;GCC 4.7以降は、&lt;code&gt;-std=c++11&lt;/code&gt;オプションを使用する (旧オプションは非推奨)。&lt;ul&gt;
&lt;li&gt;GNU拡張を有効にする&lt;code&gt;-std=gnu++11&lt;/code&gt;オプションもある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;C++14の機能を有効にする&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;GCC 4.8から4.9までは、&lt;code&gt;-std=c++1y&lt;/code&gt;オプションを使用する。&lt;ul&gt;
&lt;li&gt;GNU拡張を有効にする&lt;code&gt;-std=gnu++1y&lt;/code&gt;オプションもある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;GCC 5.1以降は、&lt;code&gt;-std=c++14&lt;/code&gt;オプションを使用する (旧オプションは非推奨)。&lt;ul&gt;
&lt;li&gt;GNU拡張を有効にする&lt;code&gt;-std=gnu++14&lt;/code&gt;オプションもある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;GCC 6.1以降は、C++14がデフォルトとなる。デフォルトバージョンのコンパイルオプションは&lt;code&gt;-std=gnu++14&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;C++17の機能を有効にする&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;GCC 6.1以降は、&lt;code&gt;-std=c++1z&lt;/code&gt;オプションを使用する。&lt;ul&gt;
&lt;li&gt;GNU拡張を有効にする&lt;code&gt;-std=gnu++1z&lt;/code&gt;オプションもある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;GCC 7.1以降は、&lt;code&gt;-std=c++17&lt;/code&gt;オプションを使用する。&lt;ul&gt;
&lt;li&gt;GNU拡張を有効にする&lt;code&gt;-std=gnu++17&lt;/code&gt;オプションもある (旧オプションは非推奨)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;C++20の機能を有効にする&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;GCC 8.1以降は、&lt;code&gt;-std=c++2a&lt;/code&gt;オプションを使用する。&lt;ul&gt;
&lt;li&gt;GNU拡張を有効にする&lt;code&gt;-std=gnu++2a&lt;/code&gt;オプションもある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;GCC 10.1以降は、&lt;code&gt;-std=c++20&lt;/code&gt;オプションを使用する。&lt;ul&gt;
&lt;li&gt;GNU拡張を有効にする&lt;code&gt;-std=gnu++20&lt;/code&gt;オプションもある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#icc&#34; id=&#34;icc&#34;&gt;Intel C++ Compiler&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;このサイトでは ICC と呼ぶ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.xlsoft.com/jp/products/intel/compilers/ccl/index.html?tab=0&#34; target=&#34;_blank&#34;&gt;XLsoft エクセルソフト : インテル C++ Composer XE Linux 版/インテル C++ コンパイラー XE Linux 版 製品紹介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.xlsoft.com/jp/products/intel/compilers/ccl/index.html?tab=0&#34; target=&#34;_blank&#34;&gt;XLsoft エクセルソフト : インテル C++ Composer XE Mac OS 版/インテル C++ コンパイラー XE Mac OS 版 製品紹介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.xlsoft.com/jp/products/intel/compilers/ccw/index.html?tab=0&#34; target=&#34;_blank&#34;&gt;XLsoft エクセルソフト : インテル C++ Composer XE Windows 版/インテル C++ コンパイラー XE Windows 版 製品紹介&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;別名&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;ICC&lt;/li&gt;
&lt;li&gt;ICL&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;C++11の機能を有効にする&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Windowsでは&lt;code&gt;/Qstd:c++11&lt;/code&gt;、Linux/macOSでは&lt;code&gt;-std=c++11&lt;/code&gt;オプションを使用する。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;C++14の機能を有効にする&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;ICC 16.0からは、Windowsでは&lt;code&gt;/Qstd:c++14&lt;/code&gt;オプション、Linux/macOSでは&lt;code&gt;-std=c++14&lt;/code&gt;オプションを使用する。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;C++17の機能を有効にする&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;ICC 17.0からは、Windowsでは&lt;code&gt;/Qstd:c++17&lt;/code&gt;オプション、Linux/macOSでは&lt;code&gt;-std=c++17&lt;/code&gt;オプションを使用する。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#visual_cpp&#34; id=&#34;visual_cpp&#34;&gt;Microsoft Visual C++&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;このサイトでは Visual C++ と呼ぶ。Visual Studio 2012 以降、Visual C++は独立した製品名ではなくなり製品Visual Studioのみに含まれるようになったが、当サイトでは製品に含まれているコンポーネント名としてのVisual C++を採用する。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.visualstudio.com/ja-jp/visual-studio-homepage-vs.aspx&#34; target=&#34;_blank&#34;&gt;Visual Studio - Microsoft Developer Tools&lt;/a&gt;: Visual C++を含む統合開発環境。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://visualstudio.microsoft.com/ja/downloads/&#34; target=&#34;_blank&#34;&gt;Build Tools for Visual Studio&lt;/a&gt;: コマンドラインのみからコンパイルするために必要な環境を構築するもの。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;別名&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;VC&lt;/li&gt;
&lt;li&gt;VC++&lt;/li&gt;
&lt;li&gt;MSVC&lt;/li&gt;
&lt;li&gt;cl&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#visual_cpp_ver&#34; id=&#34;visual_cpp_ver&#34;&gt;バージョンの表記&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;以下に当サイトにおけるバージョン表記と、製品・バージョン等の対応を示す。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;表記&lt;/th&gt;
&lt;th&gt;製品名 [Visual Studio バージョン] &lt;sup&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#note-t1-1&#34; id=&#34;note_ref-t1-1&#34;&gt;†1&lt;/a&gt;&lt;/sup&gt;&lt;/th&gt;
&lt;th&gt;VC++ バージョン &lt;sup&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#note-t1-2&#34; id=&#34;note_ref-t1-2&#34;&gt;†2&lt;/a&gt;&lt;/sup&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;_MSC_VER&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;_MSC_FULL_VER&lt;/code&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2019 Update 5&lt;/td&gt;
&lt;td&gt;Visual Studio 2019 バージョン 16.5.1&lt;/td&gt;
&lt;td&gt;14.25&lt;/td&gt;
&lt;td&gt;1925&lt;/td&gt;
&lt;td&gt;192528611&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019 Update 4&lt;/td&gt;
&lt;td&gt;Visual Studio 2019 バージョン 16.4.0&lt;/td&gt;
&lt;td&gt;14.24&lt;/td&gt;
&lt;td&gt;1924&lt;/td&gt;
&lt;td&gt;192428314&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019 Update 3&lt;/td&gt;
&lt;td&gt;Visual Studio 2019 バージョン 16.3.2&lt;/td&gt;
&lt;td&gt;14.23&lt;/td&gt;
&lt;td&gt;1923&lt;/td&gt;
&lt;td&gt;192328105&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019 Update 2&lt;/td&gt;
&lt;td&gt;Visual Studio 2019 バージョン 16.2.3&lt;/td&gt;
&lt;td&gt;14.22&lt;/td&gt;
&lt;td&gt;1922&lt;/td&gt;
&lt;td&gt;192227905&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019 Update 1&lt;/td&gt;
&lt;td&gt;Visual Studio 2019 バージョン 16.1.2&lt;/td&gt;
&lt;td&gt;14.21&lt;/td&gt;
&lt;td&gt;1921&lt;/td&gt;
&lt;td&gt;192127702&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019&lt;/td&gt;
&lt;td&gt;Visual Studio 2019 バージョン 16.0.0&lt;/td&gt;
&lt;td&gt;14.20&lt;/td&gt;
&lt;td&gt;1920&lt;/td&gt;
&lt;td&gt;192027508&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 9&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.9.11&lt;/td&gt;
&lt;td&gt;14.16&lt;/td&gt;
&lt;td&gt;1916&lt;/td&gt;
&lt;td&gt;191627030&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 9&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.9.7&lt;/td&gt;
&lt;td&gt;14.16&lt;/td&gt;
&lt;td&gt;1916&lt;/td&gt;
&lt;td&gt;191627027&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 9&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.9.5&lt;/td&gt;
&lt;td&gt;14.16&lt;/td&gt;
&lt;td&gt;1916&lt;/td&gt;
&lt;td&gt;191627026&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 9&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.9.4&lt;/td&gt;
&lt;td&gt;14.16&lt;/td&gt;
&lt;td&gt;1916&lt;/td&gt;
&lt;td&gt;191627025&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 9&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.9.1&lt;/td&gt;
&lt;td&gt;14.16&lt;/td&gt;
&lt;td&gt;1916&lt;/td&gt;
&lt;td&gt;191627023&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 9&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.9.0&lt;/td&gt;
&lt;td&gt;14.16&lt;/td&gt;
&lt;td&gt;1916&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 8&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.8.0&lt;/td&gt;
&lt;td&gt;14.15&lt;/td&gt;
&lt;td&gt;1915&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.7.5&lt;/td&gt;
&lt;td&gt;14.14&lt;/td&gt;
&lt;td&gt;1914&lt;/td&gt;
&lt;td&gt;191426433&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.7.3&lt;/td&gt;
&lt;td&gt;14.14&lt;/td&gt;
&lt;td&gt;1914&lt;/td&gt;
&lt;td&gt;191426430&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.7.2&lt;/td&gt;
&lt;td&gt;14.14&lt;/td&gt;
&lt;td&gt;1914&lt;/td&gt;
&lt;td&gt;191426429&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.7.1&lt;/td&gt;
&lt;td&gt;14.14&lt;/td&gt;
&lt;td&gt;1914&lt;/td&gt;
&lt;td&gt;191426428&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 6&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.6.7&lt;/td&gt;
&lt;td&gt;14.13&lt;/td&gt;
&lt;td&gt;1913&lt;/td&gt;
&lt;td&gt;191326132&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 6&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.6.6&lt;/td&gt;
&lt;td&gt;14.13&lt;/td&gt;
&lt;td&gt;1913&lt;/td&gt;
&lt;td&gt;191326131&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 6&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.6.4&lt;/td&gt;
&lt;td&gt;14.13&lt;/td&gt;
&lt;td&gt;1913&lt;/td&gt;
&lt;td&gt;191326129&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 6&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.6.3&lt;/td&gt;
&lt;td&gt;14.13&lt;/td&gt;
&lt;td&gt;1913&lt;/td&gt;
&lt;td&gt;191326129&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 6&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.6.2&lt;/td&gt;
&lt;td&gt;14.13&lt;/td&gt;
&lt;td&gt;1913&lt;/td&gt;
&lt;td&gt;191326128&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 6&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.6.1&lt;/td&gt;
&lt;td&gt;14.13&lt;/td&gt;
&lt;td&gt;1913&lt;/td&gt;
&lt;td&gt;191326128&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 6&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.6.0&lt;/td&gt;
&lt;td&gt;14.13&lt;/td&gt;
&lt;td&gt;1913&lt;/td&gt;
&lt;td&gt;191326128&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.5.7&lt;/td&gt;
&lt;td&gt;14.12&lt;/td&gt;
&lt;td&gt;1912&lt;/td&gt;
&lt;td&gt;191225835&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.5.6&lt;/td&gt;
&lt;td&gt;14.12&lt;/td&gt;
&lt;td&gt;1912&lt;/td&gt;
&lt;td&gt;191225835&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.5.4&lt;/td&gt;
&lt;td&gt;14.12&lt;/td&gt;
&lt;td&gt;1912&lt;/td&gt;
&lt;td&gt;191225834&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.5.3&lt;/td&gt;
&lt;td&gt;14.12&lt;/td&gt;
&lt;td&gt;1912&lt;/td&gt;
&lt;td&gt;191225834&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.5.2&lt;/td&gt;
&lt;td&gt;14.12&lt;/td&gt;
&lt;td&gt;1912&lt;/td&gt;
&lt;td&gt;191225831&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 4&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.4.5&lt;/td&gt;
&lt;td&gt;14.11&lt;/td&gt;
&lt;td&gt;1911&lt;/td&gt;
&lt;td&gt;191125547&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 4&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.4.4&lt;/td&gt;
&lt;td&gt;14.11&lt;/td&gt;
&lt;td&gt;1911&lt;/td&gt;
&lt;td&gt;191125542&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.3.3&lt;/td&gt;
&lt;td&gt;14.11&lt;/td&gt;
&lt;td&gt;1911&lt;/td&gt;
&lt;td&gt;191125507&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 2 &lt;sup&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#note-t1-3&#34; id=&#34;note_ref-t1-3-a&#34;&gt;†3&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.2&lt;/td&gt;
&lt;td&gt;14.10&lt;/td&gt;
&lt;td&gt;1910&lt;/td&gt;
&lt;td&gt;191025017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017 Update 1 &lt;sup&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#note-t1-3&#34; id=&#34;note_ref-t1-3-b&#34;&gt;†3&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.1&lt;/td&gt;
&lt;td&gt;14.10&lt;/td&gt;
&lt;td&gt;1910&lt;/td&gt;
&lt;td&gt;191025017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017&lt;/td&gt;
&lt;td&gt;Visual Studio 2017 バージョン 15.0&lt;/td&gt;
&lt;td&gt;14.10 &lt;sup&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#note-t1-4&#34; id=&#34;note_ref-t1-4&#34;&gt;†4&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;1910&lt;/td&gt;
&lt;td&gt;191025017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2015 Update 3&lt;/td&gt;
&lt;td&gt;Visual Studio 2015 Update 3 [14.0]&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;1900&lt;/td&gt;
&lt;td&gt;190024210&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2015 Update 2&lt;/td&gt;
&lt;td&gt;Visual Studio 2015 Update 2 [14.0]&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;1900&lt;/td&gt;
&lt;td&gt;190023918&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2015 Update 1&lt;/td&gt;
&lt;td&gt;Visual Studio 2015 Update 1 [14.0]&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;1900&lt;/td&gt;
&lt;td&gt;190023506&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;td&gt;Visual Studio 2015          [14.0]&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;1900&lt;/td&gt;
&lt;td&gt;190023026&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2013 Update 5&lt;/td&gt;
&lt;td&gt;Visual Studio 2013 Update 5 [12.0]&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;1800&lt;/td&gt;
&lt;td&gt;180040629&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2013 Update 4&lt;/td&gt;
&lt;td&gt;Visual Studio 2013 Update 4 [12.0]&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;1800&lt;/td&gt;
&lt;td&gt;180031101&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2013 Update 3&lt;/td&gt;
&lt;td&gt;Visual Studio 2013 Update 3 [12.0]&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;1800&lt;/td&gt;
&lt;td&gt;180030723&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2013 Update 2&lt;/td&gt;
&lt;td&gt;Visual Studio 2013 Update 2 [12.0]&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;1800&lt;/td&gt;
&lt;td&gt;180030501&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2013 Update 1 &lt;sup&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#note-t1-3&#34; id=&#34;note_ref-t1-3-c&#34;&gt;†3&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;Visual Studio 2013 Update 1 [12.0]&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;1800&lt;/td&gt;
&lt;td&gt;180021005&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;td&gt;Visual Studio 2013          [12.0]&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;1800&lt;/td&gt;
&lt;td&gt;180021005&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2012 Update 4&lt;/td&gt;
&lt;td&gt;Visual Studio 2012 Update 4 [11.0]&lt;/td&gt;
&lt;td&gt;11.0&lt;/td&gt;
&lt;td&gt;1700&lt;/td&gt;
&lt;td&gt;170061030&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2012 Update 3&lt;/td&gt;
&lt;td&gt;Visual Studio 2012 Update 3 [11.0]&lt;/td&gt;
&lt;td&gt;11.0&lt;/td&gt;
&lt;td&gt;1700&lt;/td&gt;
&lt;td&gt;170060610&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2012 Update 2&lt;/td&gt;
&lt;td&gt;Visual Studio 2012 Update 2 [11.0]&lt;/td&gt;
&lt;td&gt;11.0&lt;/td&gt;
&lt;td&gt;1700&lt;/td&gt;
&lt;td&gt;170060315&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2012 Update 1&lt;/td&gt;
&lt;td&gt;Visual Studio 2012 Update 1 [11.0]&lt;/td&gt;
&lt;td&gt;11.0&lt;/td&gt;
&lt;td&gt;1700&lt;/td&gt;
&lt;td&gt;170051106&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2012&lt;/td&gt;
&lt;td&gt;Visual Studio 2012          [11.0]&lt;/td&gt;
&lt;td&gt;11.0&lt;/td&gt;
&lt;td&gt;1700&lt;/td&gt;
&lt;td&gt;170050727&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2010 SP1&lt;/td&gt;
&lt;td&gt;Visual Studio 2010 SP1      [10.0]&lt;br /&gt;Visual C++ 2010 SP1     [10.0]&lt;/td&gt;
&lt;td&gt;10.0&lt;/td&gt;
&lt;td&gt;1600&lt;/td&gt;
&lt;td&gt;160040219&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2010&lt;/td&gt;
&lt;td&gt;Visual Studio 2010          [10.0]&lt;br /&gt;Visual C++ 2010         [10.0]&lt;/td&gt;
&lt;td&gt;10.0&lt;/td&gt;
&lt;td&gt;1600&lt;/td&gt;
&lt;td&gt;160030319&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2008 SP1&lt;/td&gt;
&lt;td&gt;Visual Studio 2008 SP1      [9.0] &lt;br /&gt;Visual C++ 2008 SP1     [9.0]&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;150030729&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2008&lt;/td&gt;
&lt;td&gt;Visual Studio 2008          [9.0] &lt;br /&gt;Visual C++ 2008         [9.0]&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;150021022&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2005 SP1&lt;/td&gt;
&lt;td&gt;Visual Studio 2005 SP1      [8.0] &lt;br /&gt;Visual C++ 2005 SP1     [8.0]&lt;/td&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;1400&lt;/td&gt;
&lt;td&gt;140050727&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2005&lt;/td&gt;
&lt;td&gt;Visual Studio 2005          [8.0] &lt;br /&gt;Visual C++ 2005         [8.0]&lt;/td&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;1400&lt;/td&gt;
&lt;td&gt;140050320&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Windows Server 2003 SP1 DDK (for AMD64)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;1400&lt;/td&gt;
&lt;td&gt;140040310&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2003 SP1&lt;/td&gt;
&lt;td&gt;Visual Studio .NET 2003 SP1 [7.1]&lt;br /&gt;Visual C++ .NET 2003 SP1 [7.1]&lt;/td&gt;
&lt;td&gt;7.1&lt;/td&gt;
&lt;td&gt;1310&lt;/td&gt;
&lt;td&gt;13106030&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Windows Server 2003 SP1 DDK&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;1310&lt;/td&gt;
&lt;td&gt;13104035&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2003&lt;/td&gt;
&lt;td&gt;Visual Studio .NET 2003     [7.1]&lt;br /&gt;Visual C++ .NET 2003     [7.1]&lt;/td&gt;
&lt;td&gt;7.1&lt;/td&gt;
&lt;td&gt;1310&lt;/td&gt;
&lt;td&gt;13103077&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Visual Studio Toolkit 2003  [7.1]&lt;/td&gt;
&lt;td&gt;7.1&lt;/td&gt;
&lt;td&gt;1310&lt;/td&gt;
&lt;td&gt;13103052&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Windows Server 2003 DDK&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;1310&lt;/td&gt;
&lt;td&gt;13102179&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2002&lt;/td&gt;
&lt;td&gt;Visual Studio .NET 2002     [7.0]&lt;br /&gt;Visual C++ .NET 2002     [7.0]&lt;/td&gt;
&lt;td&gt;7.0&lt;/td&gt;
&lt;td&gt;1300&lt;/td&gt;
&lt;td&gt;13009466&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Windows XP SP1 DDK&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;1300&lt;/td&gt;
&lt;td&gt;13009176&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6.0 SP6&lt;/td&gt;
&lt;td&gt;Visual Studio 6.0 SP6&lt;br /&gt;Visual C++ 6.0 SP6&lt;/td&gt;
&lt;td&gt;6.0&lt;/td&gt;
&lt;td&gt;1200&lt;/td&gt;
&lt;td&gt;12008804&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6.0 SP5&lt;/td&gt;
&lt;td&gt;Visual Studio 6.0 SP5&lt;br /&gt;Visual C++ 6.0 SP5&lt;/td&gt;
&lt;td&gt;6.0&lt;/td&gt;
&lt;td&gt;1200&lt;/td&gt;
&lt;td&gt;12008804&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Visual Studio 97 [5.0]&lt;br /&gt;Visual C++ 5.0&lt;/td&gt;
&lt;td&gt;5.0&lt;/td&gt;
&lt;td&gt;1100&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Visual C++ 4.2&lt;/td&gt;
&lt;td&gt;4.2&lt;/td&gt;
&lt;td&gt;1020&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Visual C++ 4.1&lt;/td&gt;
&lt;td&gt;4.1&lt;/td&gt;
&lt;td&gt;1010&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Visual C++ 4.0&lt;/td&gt;
&lt;td&gt;4.0&lt;/td&gt;
&lt;td&gt;1000&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Visual C++ 2.0&lt;/td&gt;
&lt;td&gt;2.0&lt;/td&gt;
&lt;td&gt;900&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Visual C++ 1.0&lt;/td&gt;
&lt;td&gt;1.0&lt;/td&gt;
&lt;td&gt;800&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Microsoft C/C++ 7.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Microsoft C 6.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;600&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#note_ref-t1-1&#34; id=&#34;note-t1-1&#34;&gt;^&lt;/a&gt;&lt;/strong&gt; 製品名の列にはVisual C++コンパイラを含む実際に入手する製品の名称を示す。製品のエディション (Express/Standard/Professional/Enterprise/Community 他) は省略する。Visual Studioの製品バージョンは、製品名に現れていないときは &lt;code&gt;[ ～ ]&lt;/code&gt; 内に記す。製品バージョンは、2017以降、メインメニューの [ヘルプ]-[Microsoft Visual Studio のバージョン情報] から確認できるものを指す。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#note_ref-t1-2&#34; id=&#34;note-t1-2&#34;&gt;^&lt;/a&gt;&lt;/strong&gt; VC++バージョンの列にはVisual C++ツールセットのバージョンを記述する。この表では特にVisual C++を入れた時に既定で選択されるツールセットのみについて扱う。&lt;/li&gt;
&lt;li&gt;&lt;a id=&#34;note-t1-3&#34;&gt;^&lt;/a&gt; &lt;sup&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#note_ref-t1-3-a&#34;&gt;&lt;strong&gt;a&lt;/strong&gt;&lt;/a&gt;&lt;/sup&gt; &lt;sup&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#note_ref-t1-3-b&#34;&gt;&lt;strong&gt;b&lt;/strong&gt;&lt;/a&gt;&lt;/sup&gt; &lt;sup&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#note_ref-t1-3-c&#34;&gt;&lt;strong&gt;c&lt;/strong&gt;&lt;/a&gt;&lt;/sup&gt; IDEのみ修正され、コンパイラ、ヘッダー、ライブラリ等は変更されなかった。&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/vcblog/2017/08/11/c17-features-and-stl-fixes-in-vs-2017-15-3/&#34; target=&#34;_blank&#34;&gt;C++17 Features And STL Fixes In VS 2017 15.3 | Visual C++ Team Blog&lt;/a&gt; - &#34;&lt;em&gt;After VS 2017 RTM, the 15.1 and 15.2 updates improved the IDE. The 15.3 update improves both the IDE and the toolset.&lt;/em&gt;&#34;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://support.microsoft.com/en-us/help/2911573/description-of-visual-studio-2013-update-1&#34; target=&#34;_blank&#34;&gt;Description of Visual Studio 2013 Update 1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#note_ref-t1-4&#34; id=&#34;note-t1-4&#34;&gt;^&lt;/a&gt;&lt;/strong&gt; 2017は2015とバイナリ互換が保たれているためメジャーバージョンアップは行われなかった。その結果、製品バージョンとVisual C++バージョンが一致しなくなった。
  &lt;a href=&#34;https://blogs.msdn.microsoft.com/vcblog/2017/03/07/binary-compatibility-and-pain-free-upgrade-why-moving-to-visual-studio-2017-is-almost-too-easy/&#34; target=&#34;_blank&#34;&gt;Binary Compatibility and Pain-free Upgrade: Why Moving to Visual Studio 2017 is almost “too easy”&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2015以降、Visual Studioの既定のインストールではVisual C++は入らなくなった。Visual StudioのインストーラでVisual C++コンポーネントを選択する必要がある。
  &lt;a href=&#34;https://docs.microsoft.com/ja-JP/previous-versions/60k1461a(v=vs.140)?redirectedfrom=MSDN&#34; target=&#34;_blank&#34;&gt;Visual Studio 2015 の Visual C++&lt;/a&gt; の [警告] を参照。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;2017 Update 5からside-by-sideがサポートされ、一つの製品内で同時に複数のVisual C++ツールセットを選択できるようになった。
  &lt;a href=&#34;https://blogs.msdn.microsoft.com/vcblog/2017/11/15/side-by-side-minor-version-msvc-toolsets-in-visual-studio-2017/&#34; target=&#34;_blank&#34;&gt;Side-by-side minor version MSVC toolsets in Visual Studio 2017 | Visual C++ Team Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;C++11の機能を有効にする&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11は常に有効である&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;C++14の機能を有効にする&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++14は常に有効である&lt;/li&gt;
&lt;li&gt;2015 Update 3から&lt;code&gt;/std:c++14&lt;/code&gt;オプションが導入されたが既定値でありC++14を無効化する機能は提供されていない。&lt;code&gt;_MSVC_LANG&lt;/code&gt;マクロの値は&lt;code&gt;201402&lt;/code&gt;になる&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;C++17の機能を有効にする&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2015 Update 2以前に実装された機能については、互換性の観点から常に有効である&lt;/li&gt;
&lt;li&gt;2015 Update 3以降に実装された機能については、&lt;code&gt;/std:c++17&lt;/code&gt;オプションを使用する。&lt;code&gt;_MSVC_LANG&lt;/code&gt;マクロの値は&lt;code&gt;201703&lt;/code&gt;になる&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;最新バージョンの言語機能を有効にする&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2015 Update 3以降は&lt;code&gt;/std:c++latest&lt;/code&gt;オプションを使用する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/cpp/build/reference/std-specify-language-standard-version&#34; target=&#34;_blank&#34;&gt;-std (Specify Language Standard Version) | Microsoft Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/cpp/preprocessor/predefined-macros&#34; target=&#34;_blank&#34;&gt;Predefined Macros | Microsoft Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/vcblog/2016/06/07/standards-version-switches-in-the-compiler/&#34; target=&#34;_blank&#34;&gt;Standards version switches in the compiler&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>chrono -- chrono : カレンダーライブラリの経緯となるドキュメントへの参照を追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono.html"/>
      <id>87cacf039afd9339683d32d01d973425193b90d1:reference/chrono.md</id>
      <updated>2020-03-28T16:30:06+09:00</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;chrono&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;chrono&lt;/span&gt;&lt;span class=&#34;cpp cpp11&#34; title=&#34;C++11で追加&#34;&gt;(C++11)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;chrono&amp;gt;&lt;/code&gt;ヘッダは、時間に関するユーティリティとして機能する関数・クラスを提供する。このヘッダに含まれる関数・クラスは、&lt;code&gt;std::chrono&lt;/code&gt;名前空間で定義される。&lt;/p&gt;
&lt;p&gt;このライブラリは、タイムアウト、操作間隔、スケジューリングといった短期間の操作を主な用途として想定している。そのためカレンダー機能としては遥かな過去・未来を扱えるようにはなっていない。&lt;/p&gt;
&lt;h2&gt;時間を表す型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration.html&#34;&gt;duration&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間の間隔(class template)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/time_point.html&#34;&gt;time_point&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間軸上の一点(class template)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/treat_as_floating_point.html&#34;&gt;treat_as_floating_point&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;duration&lt;/code&gt;内部表現の型が浮動小数点型かを判定するためのトレイト(class template)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_values.html&#34;&gt;duration_values&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;duration&lt;/code&gt;内部表現の特別な値を取得するためのトレイト(class template)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;時間の単位を表す型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;nanoseconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ナノ秒を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;microseconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;マイクロ秒を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;milliseconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ミリ秒を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;minutes&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;分を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;hours&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;days&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;weeks&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;週を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;years&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/duration_aliases.html&#34;&gt;months&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月を表現するためのdurationの別名(type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;時計型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/is_clock.md.nolink&#34;&gt;is_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;クロック型かを判定する (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/system_clock.html&#34;&gt;system_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;システム時間のクロック(class)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/steady_clock.html&#34;&gt;steady_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間が逆行しないクロック(class)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/high_resolution_clock.html&#34;&gt;high_resolution_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;高分解能クロック(class)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/utc_clock.html&#34;&gt;utc_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;UTC時間 (協定世界時) のクロック (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/tai_clock.html&#34;&gt;tai_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;TAI時間 (国際原子時) のクロック (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/gps_clock.html&#34;&gt;gps_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;GPS時間のクロック (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/file_clock.md.nolink&#34;&gt;file_clock&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ファイル時間を作るために使用されるクロック (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;システム時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/sys_time.html&#34;&gt;sys_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;システム時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/sys_time.html&#34;&gt;sys_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でシステム時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/sys_time.html&#34;&gt;sys_days&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日単位でシステム時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;ローカル時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_time.html&#34;&gt;local_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間を表す擬似的なクロック (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_time.html&#34;&gt;local_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_time.html&#34;&gt;local_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でローカル時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_time.html&#34;&gt;local_days&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日単位でローカル時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;UTC時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/utc_time.html&#34;&gt;utc_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;UTC時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/utc_time.html&#34;&gt;utc_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でUTC時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;TAI時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/tai_time.html&#34;&gt;tai_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;TAI時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/tai_time.html&#34;&gt;tai_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でTAI時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;GPS時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/gps_time.md.nolink&#34;&gt;gps_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;GPS時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/gps_time.md.nolink&#34;&gt;gps_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でGPS時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;ファイル時間用の機能&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/file_time.md.nolink&#34;&gt;file_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ファイル時間の一点を指すtime_pointの別名 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;時計時間の変換&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/clock_time_conversion.html&#34;&gt;clock_time_conversion&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時計間の変換方法を組み合わせごとに定義するためのクラス (class template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/clock_cast.html&#34;&gt;clock_cast&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ほかの時計時間のtime_pointに変換する (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;うるう秒の情報&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/leap_second_info.html&#34;&gt;leap_second_info&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;うるう秒の情報を扱うクラス (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/get_leap_second_info.html&#34;&gt;get_leap_second_info&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した日時までに挿入されたうるう秒の回数を取得する (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;カレンダー型&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/last_spec.html&#34;&gt;last_spec&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月の最終日、週の最終日など、文脈に応じた「最後」を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/day.html&#34;&gt;day&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;未規定の月の指定した日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month.html&#34;&gt;month&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月単体の値を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year.html&#34;&gt;year&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;カレンダーの年を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday.html&#34;&gt;weekday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;週の日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_indexed.md.nolink&#34;&gt;weekday_indexed&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;N回目の指定した曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_last.md.nolink&#34;&gt;weekday_last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;未規定の月の最後の指定した曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_day.md.nolink&#34;&gt;month_day&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月と日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_day_last.md.nolink&#34;&gt;month_day_last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した月の最終日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_weekday.md.nolink&#34;&gt;month_weekday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月の指定したN番目の曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_weekday_last.md.nolink&#34;&gt;month_weekday_last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月の最後の指定した曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year_month.md.nolink&#34;&gt;year_month&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年と月を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year_month_day.html&#34;&gt;year_month_day&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年、月、日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year_month_day_last.md.nolink&#34;&gt;year_month_day_last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年、月、月の最終日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year_month_weekday.md.nolink&#34;&gt;year_month_weekday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年、月、N回目の指定した曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/year_month_weekday_last.md.nolink&#34;&gt;year_month_weekday_last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;年、月、月の最後の指定した曜日を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;1日内の時間情報&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/time_of_day.md.nolink&#34;&gt;time_of_day&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1日内の時間情報を取得するクラス (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/hh_mm_ss.md.nolink&#34;&gt;hh_mm_ss&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時、分、秒を表すクラス (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/is_am.md.nolink&#34;&gt;is_am&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間が午前かを判定する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/is_pm.md.nolink&#34;&gt;is_pm&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間が午後かを判定する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/make12.md.nolink&#34;&gt;make12&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[1h, 12h]&lt;/code&gt;の時間範囲に変換する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/make24.md.nolink&#34;&gt;make24&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間を午前&lt;code&gt;[0h, 11h]&lt;/code&gt;か午後&lt;code&gt;[12h, 23h]&lt;/code&gt;の範囲に変換する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;タイムゾーン&lt;/h2&gt;
&lt;h3&gt;タイムゾーンのデータベース&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/tzdb.html&#34;&gt;tzdb&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンのデータベース型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/get_tzdb.html&#34;&gt;get_tzdb&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンデータベースを取得する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/tzdb_list.html&#34;&gt;tzdb_list&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンデータベースのリスト (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/get_tzdb_list.html&#34;&gt;get_tzdb_list&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンデータベースのリストを取得する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/locate_zone.html&#34;&gt;locate_zone&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定した名前のタイムゾーンを取得する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/current_zone.html&#34;&gt;current_zone&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;現在のタイムゾーンを取得する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;リモートタイムゾーンデータベースのサポート&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/reload_tzdb.html&#34;&gt;reload_tzdb&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;リモートタイムゾーンデータベースを再読み込みする (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/remote_version.html&#34;&gt;remote_version&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;リモートタイムゾーンデータベースの最新バージョン番号を取得する (function)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;例外クラス&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/nonexistent_local_time.html&#34;&gt;nonexistent_local_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;存在しないローカル時間をシステム時間に変換しようとした (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/ambiguous_local_time.html&#34;&gt;ambiguous_local_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間があいまい (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;タイムゾーン&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/sys_info.html&#34;&gt;sys_info&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;システム時間用のタイムゾーン情報 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_info.html&#34;&gt;local_info&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間用のタイムゾーン情報 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/choose.html&#34;&gt;choose&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンを変換する際に、早い時間側と遅い時間側どちらに丸めるかの種類 (enum)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/time_zone.html&#34;&gt;time_zone&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンの変換を扱うクラス (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/zoned_traits.html&#34;&gt;zoned_traits&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーン取得のカスタマイズ用中間インタフェース (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/zoned_time.html&#34;&gt;zoned_time&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンを考慮した時間軸上の一点を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/zoned_time.html&#34;&gt;zoned_seconds&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;秒単位でタイムゾーンを考慮した時間軸上の一点を表す型 (type-alias)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;うるう秒サポート&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/leap_second.html&#34;&gt;leap_second&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;うるう秒が挿入された日時を表す型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;リンク&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/time_zone_link.html&#34;&gt;time_zone_link&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;タイムゾーンの代替名を管理する型 (class)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;文字列フォーマット&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/local_time_format.md.nolink&#34;&gt;local_time_format&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ローカル時間の文字列フォーマット用オブジェクトを生成する (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;template&amp;lt;class Rep, class Period, class charT&amp;gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;struct formatter&amp;lt;chrono::duration&amp;lt;Rep, Period&amp;gt;, charT&amp;gt;;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;duration&lt;/code&gt;に対する&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/formatter.html&#34;&gt;formatter&lt;/a&gt;&lt;/code&gt;の特殊化&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;template&amp;lt;class Duration, class charT&amp;gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;struct formatter&amp;lt;chrono::sys_time&amp;lt;Duration&amp;gt;, charT&amp;gt;;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;sys_time&lt;/code&gt;に対する&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/formatter.html&#34;&gt;formatter&lt;/a&gt;&lt;/code&gt;の特殊化&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;template&amp;lt;class Duration, class charT&amp;gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;struct formatter&amp;lt;chrono::utc_time&amp;lt;Duration&amp;gt;, charT&amp;gt;;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;utc_time&lt;/code&gt;に対する&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/formatter.html&#34;&gt;formatter&lt;/a&gt;&lt;/code&gt;の特殊化&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;template&amp;lt;class Duration, class charT&amp;gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;struct formatter&amp;lt;chrono::tai_time&amp;lt;Duration&amp;gt;, charT&amp;gt;;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;tai_time&lt;/code&gt;に対する&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/formatter.html&#34;&gt;formatter&lt;/a&gt;&lt;/code&gt;の特殊化&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;template&amp;lt;class Duration, class charT&amp;gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;struct formatter&amp;lt;chrono::gps_time&amp;lt;Duration&amp;gt;, charT&amp;gt;;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;gps_time&lt;/code&gt;に対する&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/formatter.html&#34;&gt;formatter&lt;/a&gt;&lt;/code&gt;の特殊化&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;template&amp;lt;class Duration, class charT&amp;gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;struct formatter&amp;lt;chrono::file_time&amp;lt;Duration&amp;gt;, charT&amp;gt;;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;file_time&lt;/code&gt;に対する&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/formatter.html&#34;&gt;formatter&lt;/a&gt;&lt;/code&gt;の特殊化&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;template&amp;lt;class Duration, class charT&amp;gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;struct formatter&amp;lt;chrono::local_time&amp;lt;Duration&amp;gt;, charT&amp;gt;;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;local_time&lt;/code&gt;に対する&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/formatter.html&#34;&gt;formatter&lt;/a&gt;&lt;/code&gt;の特殊化&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;template&amp;lt;class Duration, class charT&amp;gt; struct formatter&amp;lt;chrono::local-time-format-t &amp;lt;Duration&amp;gt;, charT&amp;gt;;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;local_time_format()&lt;/code&gt;の戻り値型に対する&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/formatter.html&#34;&gt;formatter&lt;/a&gt;&lt;/code&gt;の特殊化&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;template&amp;lt;class charT&amp;gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;struct formatter&amp;lt;chrono::month, charT&amp;gt;;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;month&lt;/code&gt;に対する&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/formatter.html&#34;&gt;formatter&lt;/a&gt;&lt;/code&gt;の特殊化&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;template&amp;lt;class charT&amp;gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;struct formatter&amp;lt;chrono::year, charT&amp;gt;;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;year&lt;/code&gt;に対する&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/formatter.html&#34;&gt;formatter&lt;/a&gt;&lt;/code&gt;の特殊化&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;template&amp;lt;class charT&amp;gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;struct formatter&amp;lt;chrono::weekday, charT&amp;gt;;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;weekday&lt;/code&gt;に対する&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/formatter.html&#34;&gt;formatter&lt;/a&gt;&lt;/code&gt;の特殊化&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;template&amp;lt;class charT&amp;gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;struct formatter&amp;lt;chrono::weekday_indexed, charT&amp;gt;;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;weekday_indexed&lt;/code&gt;に対する&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/formatter.html&#34;&gt;formatter&lt;/a&gt;&lt;/code&gt;の特殊化&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;template&amp;lt;class charT&amp;gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;struct formatter&amp;lt;chrono::weekday_last, charT&amp;gt;;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;weekday_last&lt;/code&gt;に対する&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/formatter.html&#34;&gt;formatter&lt;/a&gt;&lt;/code&gt;の特殊化&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;template&amp;lt;class charT&amp;gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;struct formatter&amp;lt;chrono::month_day, charT&amp;gt;;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;month_day&lt;/code&gt;に対する&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/formatter.html&#34;&gt;formatter&lt;/a&gt;&lt;/code&gt;の特殊化&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;template&amp;lt;class charT&amp;gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;struct formatter&amp;lt;chrono::month_day_last, charT&amp;gt;;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;month_day_last&lt;/code&gt;に対する&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/formatter.html&#34;&gt;formatter&lt;/a&gt;&lt;/code&gt;の特殊化&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;template&amp;lt;class charT&amp;gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;struct formatter&amp;lt;chrono::month_weekday, charT&amp;gt;;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;month_weekday&lt;/code&gt;に対する&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/formatter.html&#34;&gt;formatter&lt;/a&gt;&lt;/code&gt;の特殊化&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;template&amp;lt;class charT&amp;gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;struct formatter&amp;lt;chrono::month_weekday_last, charT&amp;gt;;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;month_weekday_last&lt;/code&gt;に対する&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/formatter.html&#34;&gt;formatter&lt;/a&gt;&lt;/code&gt;の特殊化&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;template&amp;lt;class charT&amp;gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;struct formatter&amp;lt;chrono::year_month, charT&amp;gt;;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;year_month&lt;/code&gt;に対する&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/formatter.html&#34;&gt;formatter&lt;/a&gt;&lt;/code&gt;の特殊化&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;template&amp;lt;class charT&amp;gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;struct formatter&amp;lt;chrono::year_month_day, charT&amp;gt;;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;year_month_day&lt;/code&gt;に対する&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/formatter.html&#34;&gt;formatter&lt;/a&gt;&lt;/code&gt;の特殊化&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;template&amp;lt;class charT&amp;gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;struct formatter&amp;lt;chrono::year_month_day_last, charT&amp;gt;;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;year_month_day_last&lt;/code&gt;に対する&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/formatter.html&#34;&gt;formatter&lt;/a&gt;&lt;/code&gt;の特殊化&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;template&amp;lt;class charT&amp;gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;struct formatter&amp;lt;chrono::year_month_weekday, charT&amp;gt;;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;year_month_weekday&lt;/code&gt;に対する&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/formatter.html&#34;&gt;formatter&lt;/a&gt;&lt;/code&gt;の特殊化&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;template&amp;lt;class charT&amp;gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;struct formatter&amp;lt;chrono::year_month_weekday_last, charT&amp;gt;;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;year_month_weekday_last&lt;/code&gt;に対する&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/formatter.html&#34;&gt;formatter&lt;/a&gt;&lt;/code&gt;の特殊化&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;template&amp;lt;class Rep, class Period, class charT&amp;gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;struct formatter&amp;lt;chrono::hh_mm_ss&amp;lt;duration&amp;lt;Rep, Period&amp;gt;&amp;gt;, charT&amp;gt;;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hh_mm_ss&lt;/code&gt;に対する&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/formatter.html&#34;&gt;formatter&lt;/a&gt;&lt;/code&gt;の特殊化&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;template&amp;lt;class charT&amp;gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;struct formatter&amp;lt;chrono::sys_info, charT&amp;gt;;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;sys_info&lt;/code&gt;に対する&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/formatter.html&#34;&gt;formatter&lt;/a&gt;&lt;/code&gt;の特殊化&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;template&amp;lt;class charT&amp;gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;struct formatter&amp;lt;chrono::local_info, charT&amp;gt;;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;local_info&lt;/code&gt;に対する&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/formatter.html&#34;&gt;formatter&lt;/a&gt;&lt;/code&gt;の特殊化&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;template&amp;lt;class Duration, class TimeZonePtr, class charT&amp;gt;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;struct formatter&amp;lt;chrono::zoned_time&amp;lt;Duration, TimeZonePtr&amp;gt;, charT&amp;gt;;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;zoned_time&lt;/code&gt;に対する&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/format/formatter.html&#34;&gt;formatter&lt;/a&gt;&lt;/code&gt;の特殊化&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;文字列解析&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/parse.md.nolink&#34;&gt;parse&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日時文字列を解析する (function template)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;カレンダー定数&lt;/h2&gt;
&lt;h3&gt;最後&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/last_spec.html&#34;&gt;last&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月の最終日、週の最終日など、文脈に応じた「最後」を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;曜日&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Sunday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Monday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;月曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Tuesday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;火曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Wednesday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;水曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Thursday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;木曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Friday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;金曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/weekday_constants.html&#34;&gt;Saturday&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;土曜日を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;月&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;January&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;February&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;2月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;March&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;3月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;April&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;4月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;May&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;5月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;June&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;6月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;July&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;7月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;August&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;8月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;September&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;9月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;October&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;10月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;November&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;11月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/reference/chrono/month_constants.html&#34;&gt;December&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;12月を表す定数 (variable)&lt;/td&gt;
&lt;td&gt;C++20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2661.htm&#34; target=&#34;_blank&#34;&gt;N2661 A Foundation to Sleep On&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0216r0.html&#34; target=&#34;_blank&#34;&gt;P0216R0 C++ Standard Proposal — A Time-Zone Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0355r7.html&#34; target=&#34;_blank&#34;&gt;P0355R7 Extending &lt;code&gt;&amp;lt;chrono&amp;gt;&lt;/code&gt; to Calendars and Time Zones&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>gps_clock -- gps_clock : メンバ関数を追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/gps_clock.html"/>
      <id>7e977f9898d0d1efd2f2154b3477c9557f6ee74d:reference/chrono/gps_clock.md</id>
      <updated>2020-03-28T16:13:19+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/gps_clock.md b/reference/chrono/gps_clock.md
index c2ca05945..f667d6ef4 100644
--- a/reference/chrono/gps_clock.md
+++ b/reference/chrono/gps_clock.md
@@ -13,7 +13,7 @@ namespace std::chrono {
 ## 概要
 `gps_clock`は、GPS時間 (GPST) を表現するためのクロックである。この時刻系は、カーナビや携帯端末などで使用される。
 
-このクラスの[`now()`](gps_clock/now.md.nolink)静的メンバ関数は、標準では`noexcept(false)`である。実装が`noexcept(true)`である保証をしない限り、このクラスはTrivialClock要件を満たさない。
+このクラスの[`now()`](gps_clock/now.md)静的メンバ関数は、標準では`noexcept(false)`である。実装が`noexcept(true)`である保証をしない限り、このクラスはTrivialClock要件を満たさない。
 
 
 ### エポック
@@ -33,9 +33,9 @@ GPS時間とTAI時間は19秒ずれていて、このずれは時間が経過し
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`now`](gps_clock/now.md.nolink)           | 現在日時を取得する           | C++20 |
-| [`to_utc`](gps_clock/to_utc.md.nolink)     | GPS時間からUTC時間へ変換する | C++20 |
-| [`from_utc`](gps_clock/from_utc.md.nolink) | UTC時間からGPS時間へ変換する | C++20 |
+| [`now`](gps_clock/now.md)           | 現在日時を取得する           | C++20 |
+| [`to_utc`](gps_clock/to_utc.md)     | GPS時間からUTC時間へ変換する | C++20 |
+| [`from_utc`](gps_clock/from_utc.md) | UTC時間からGPS時間へ変換する | C++20 |
 
 
 ## メンバ型
@@ -68,7 +68,7 @@ int main()
   std::cout &amp;lt;&amp;lt; tp &amp;lt;&amp;lt; std::endl;
 }
 ```
-* now()[link gps_clock/now.md.nolink]
+* now()[link gps_clock/now.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>from_utc -- gps_clock : メンバ関数を追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/gps_clock/from_utc.html"/>
      <id>7e977f9898d0d1efd2f2154b3477c9557f6ee74d:reference/chrono/gps_clock/from_utc.md</id>
      <updated>2020-03-28T16:13:19+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/gps_clock/from_utc.md b/reference/chrono/gps_clock/from_utc.md
new file mode 100644
index 000000000..2ed9967cc
--- /dev/null
+++ b/reference/chrono/gps_clock/from_utc.md
@@ -0,0 +1,92 @@
+# from_utc
+* chrono[meta header]
+* std::chrono[meta namespace]
+* gps_clock[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+template &amp;lt;class Duration&amp;gt;
+static gps_time&amp;lt;common_type_t&amp;lt;Duration, seconds&amp;gt;&amp;gt;
+  from_utc(const utc_time&amp;lt;Duration&amp;gt;&amp;amp;) noexcept;
+```
+* gps_time[link /reference/chrono/gps_time.md.nolink]
+* utc_time[link /reference/chrono/utc_time.md]
+* common_type_t[link /reference/chrono/common_type.md]
+
+## 概要
+UTC時間からGPS時間に変換する。
+
+
+## 戻り値
+```cpp
+return gps_time&amp;lt;common_type_t&amp;lt;Duration, seconds&amp;gt;&amp;gt;{t.time_since_epoch()} - 315964809s;
+```
+* gps_time[link /reference/chrono/gps_time.md.nolink]
+* common_type_t[link /reference/chrono/common_type.md]
+* t.time_since_epoch()[link /reference/chrono/time_point/time_since_epoch.md]
+* 315964809s[link /reference/chrono/duration/op_s.md]
+
+ここで`315964809`は、システム時間のエポック1970年1月1日とGPS時間のエポック1980年1月6日 (この年の最初の日曜日) との差である秒数に、その間に挿入されたうるう秒である9秒を加算した秒数である。
+
+```cpp
+315964809s == sys_days{1980y/January/Sunday[1]} - sys_days{1970y/January/1} + 9s
+```
+* 315964809s[link /reference/chrono/duration/op_s.md]
+* 9s[link /reference/chrono/duration/op_s.md]
+* sys_days[link /reference/chrono/sys_time.md]
+* 1970y[link /reference/chrono/year/op_y.md]
+* 1980y[link /reference/chrono/year/op_y.md]
+* January[link /reference/chrono/month_constants.md]
+* Sunday[link /reference/chrono/weekday_constants.md]
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  // ここでは日単位のシステム時間を、utc_clockを経由して、日単位のGPS時間に変換している。
+  // 秒単位の時間を渡せば、秒単位のGPS時間が返る
+  auto st = chrono::sys_days{2019y/10/24};
+  auto ut = chrono::utc_clock::from_sys(st);
+  auto tt = chrono::gps_clock::from_utc(ut); // 日単位のGPS時間が返る
+
+  // うるう秒
+  chrono::leap_second_info info = chrono::get_leap_second_info(ut);
+
+  std::cout &amp;lt;&amp;lt; st &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; ut &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; tt &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; info.elapsed.count() &amp;lt;&amp;lt; std::endl;
+}
+```
+* from_utc[color ff0000]
+* 2019y[link /reference/chrono/year/op_y.md]
+* chrono::sys_days[link /reference/chrono/sys_time.md]
+* chrono::utc_clock[link /reference/chrono/utc_clock.md]
+* from_sys[link /reference/chrono/utc_clock/from_sys.md]
+* chrono::get_leap_second_info[link /reference/chrono/get_leap_second_info.md]
+* chrono::leap_second_info[link /reference/chrono/leap_second_info.md]
+* count()[link /reference/chrono/duration/count.md]
+
+### 出力
+```
+2019-10-24 00:00:00
+2019-10-24 00:00:00 UTC
+2019-10-24 00:00:27 GPS
+27
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): (9.0時点で実装なし)
+- [GCC](/implementation.md#gcc): (9.2時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>now -- gps_clock : メンバ関数を追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/gps_clock/now.html"/>
      <id>7e977f9898d0d1efd2f2154b3477c9557f6ee74d:reference/chrono/gps_clock/now.md</id>
      <updated>2020-03-28T16:13:19+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/gps_clock/now.md b/reference/chrono/gps_clock/now.md
new file mode 100644
index 000000000..6553bcf5c
--- /dev/null
+++ b/reference/chrono/gps_clock/now.md
@@ -0,0 +1,51 @@
+# now
+* chrono[meta header]
+* std::chrono[meta namespace]
+* gps_clock[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+static time_point now();
+```
+* time_point[link /reference/chrono/time_point.md]
+
+## 概要
+現在日時を取得する。
+
+
+## 戻り値
+[`from_utc`](from_utc.md)`(`[`utc_clock`](/reference/chrono/utc_clock.md)`::`[`now()`](/reference/chrono/utc_clock/now.md)`)`もしくはより精度が高いGPS時間としての現在日時を返す。
+
+
+## 備考
+このクラスの`now()`静的メンバ関数は、標準では`noexcept(false)`である。実装が`noexcept(true)`である保証をしない限り、このクラスはTrivialClock要件を満たさない。
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+
+int main()
+{
+  chrono::gps_clock::time_point tp = chrono::gps_clock::now();
+  std::cout &amp;lt;&amp;lt; tp &amp;lt;&amp;lt; std::endl;
+}
+```
+
+### 出力例
+```
+2019-10-24 11:15:37 GPS
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): (9.0時点で実装なし)
+- [GCC](/implementation.md#gcc): (9.2時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>to_utc -- gps_clock : メンバ関数を追加</title>
      <link href="https://cpprefjp.github.io/reference/chrono/gps_clock/to_utc.html"/>
      <id>7e977f9898d0d1efd2f2154b3477c9557f6ee74d:reference/chrono/gps_clock/to_utc.md</id>
      <updated>2020-03-28T16:13:19+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/gps_clock/to_utc.md b/reference/chrono/gps_clock/to_utc.md
new file mode 100644
index 000000000..fd4c93960
--- /dev/null
+++ b/reference/chrono/gps_clock/to_utc.md
@@ -0,0 +1,88 @@
+# to_utc
+* chrono[meta header]
+* std::chrono[meta namespace]
+* gps_clock[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+template &amp;lt;class Duration&amp;gt;
+static utc_time&amp;lt;common_type_t&amp;lt;Duration, seconds&amp;gt;&amp;gt;
+  to_utc(const gps_time&amp;lt;Duration&amp;gt;&amp;amp; t) noexcept;
+```
+* gps_time[link /reference/chrono/gps_time.md.nolink]
+* utc_time[link /reference/chrono/utc_time.md]
+* common_type_t[link /reference/chrono/common_type.md]
+
+## 概要
+GPS時間からUTC時間に変換する。
+
+
+## 戻り値
+```cpp
+return utc_time&amp;lt;common_type_t&amp;lt;Duration, seconds&amp;gt;&amp;gt;{t.time_since_epoch()} + 315964809s;
+```
+* utc_time[link /reference/chrono/utc_time.md]
+* common_type_t[link /reference/chrono/common_type.md]
+* t.time_since_epoch()[link /reference/chrono/time_point/time_since_epoch.md]
+* 315964809s[link /reference/chrono/duration/op_s.md]
+
+ここで`315964809`は、システム時間のエポック1970年1月1日とGPS時間のエポック1980年1月6日 (この年の最初の日曜日) との差である秒数に、その間に挿入されたうるう秒である9秒を加算した秒数である。
+
+```cpp
+315964809s == sys_days{1980y/January/Sunday[1]} - sys_days{1970y/January/1} + 9s
+```
+* 315964809s[link /reference/chrono/duration/op_s.md]
+* 9s[link /reference/chrono/duration/op_s.md]
+* sys_days[link /reference/chrono/sys_time.md]
+* 1970y[link /reference/chrono/year/op_y.md]
+* 1980y[link /reference/chrono/year/op_y.md]
+* January[link /reference/chrono/month_constants.md]
+* Sunday[link /reference/chrono/weekday_constants.md]
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  auto tt = chrono::clock_cast&amp;lt;chrono::gps_clock&amp;gt;(chrono::sys_days{2019y/10/24});
+  auto ut = chrono::gps_clock::to_utc(tt);
+
+  // うるう秒
+  chrono::leap_second_info info = chrono::get_leap_second_info(ut);
+
+  std::cout &amp;lt;&amp;lt; tt &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; ut &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; info.elapsed.count() &amp;lt;&amp;lt; std::endl;
+}
+```
+* to_utc[color ff0000]
+* chrono::clock_cast[link /reference/chrono/clock_cast.md]
+* chrono::sys_days[link /reference/chrono/sys_time.md]
+* 2019y[link /reference/chrono/year/op_y.md]
+* chrono::get_leap_second_info[link /reference/chrono/get_leap_second_info.md]
+* chrono::leap_second_info[link /reference/chrono/leap_second_info.md]
+* count()[link /reference/chrono/duration/count.md]
+
+
+### 出力
+```
+2019-10-24 00:00:27 GPS
+2019-10-24 00:00:00 UTC
+27
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): (9.0時点で実装なし)
+- [GCC](/implementation.md#gcc): (9.2時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>from_utc -- tai_clock::from_utc, to_utc : 所属クラスのコピペミスを修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/tai_clock/from_utc.html"/>
      <id>051d75258754c7fdd4b1c3d8a3e51b817a5bc810:reference/chrono/tai_clock/from_utc.md</id>
      <updated>2020-03-28T16:02:08+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/tai_clock/from_utc.md b/reference/chrono/tai_clock/from_utc.md
index ada6a6924..bb19c999d 100644
--- a/reference/chrono/tai_clock/from_utc.md
+++ b/reference/chrono/tai_clock/from_utc.md
@@ -1,7 +1,7 @@
 # from_utc
 * chrono[meta header]
 * std::chrono[meta namespace]
-* utc_clock[meta class]
+* tai_clock[meta class]
 * function[meta id-type]
 * cpp20[meta cpp]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>to_utc -- tai_clock::from_utc, to_utc : 所属クラスのコピペミスを修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/tai_clock/to_utc.html"/>
      <id>051d75258754c7fdd4b1c3d8a3e51b817a5bc810:reference/chrono/tai_clock/to_utc.md</id>
      <updated>2020-03-28T16:02:08+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/tai_clock/to_utc.md b/reference/chrono/tai_clock/to_utc.md
index 0fff9f23c..419a9704c 100644
--- a/reference/chrono/tai_clock/to_utc.md
+++ b/reference/chrono/tai_clock/to_utc.md
@@ -1,7 +1,7 @@
 # to_utc
 * chrono[meta header]
 * std::chrono[meta namespace]
-* utc_clock[meta class]
+* tai_clock[meta class]
 * function[meta id-type]
 * cpp20[meta cpp]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンパイラの実装状況 -- MSVC C++11機能の対応更新</title>
      <link href="https://cpprefjp.github.io/implementation-status.html"/>
      <id>6bd2bb9672ef37a4c4fc8728363aff800e27f13d:implementation-status.md</id>
      <updated>2020-03-28T12:29:52+09:00</updated>
      
        <content type="html">&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;コンパイラの実装状況&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;このページでは、C++のバージョンごとの言語機能を、どのコンパイラがどのバージョンからサポートしているかをまとめる。&lt;/p&gt;
&lt;p&gt;ライブラリ機能については、本サイトのリファレンスで各機能を参照してもらいたい。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation-status.html#cpp11&#34;&gt;C++11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation-status.html#cpp14&#34;&gt;C++14&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation-status.html#cpp17&#34;&gt;C++17&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation-status.html#cpp20&#34;&gt;C++20&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation-status.html#cpp11&#34; id=&#34;cpp11&#34;&gt;C++11言語機能の実装状況&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;言語機能&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;MSVC&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/alignas.html&#34;&gt;alignas&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;アライメント指定&lt;/td&gt;
&lt;td&gt;4.8&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2015&lt;br /&gt;2003あるいはそれ以前からある&lt;code&gt;__declspec(align(x))&lt;/code&gt;構文で代替可能。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/alignof.html&#34;&gt;alignof&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;アライメント取得&lt;/td&gt;
&lt;td&gt;4.5&lt;/td&gt;
&lt;td&gt;3.3&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2015&lt;br /&gt;2003あるいはそれ以前よりある&lt;code&gt;__alignof&lt;/code&gt;で代替可能。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/auto.html&#34;&gt;auto&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;型推論&lt;/td&gt;
&lt;td&gt;4.4&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;2010&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/decltype.html&#34;&gt;decltype&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;式の型を取得&lt;/td&gt;
&lt;td&gt;4.3&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;13.0&lt;/td&gt;
&lt;td&gt;2010 (partial)&lt;br /&gt; 2012&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C99互換のプリプロセッサ&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/variadic_macros.html&#34;&gt;可変引数マクロ&lt;/a&gt;、&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/pragma_operator.html&#34;&gt;Pragma演算子&lt;/a&gt;、&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/func.html&#34;&gt;__func__&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;4.3&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.1&lt;/td&gt;
&lt;td&gt;2005 (partial): 可変引数のみ &lt;code&gt;_Pragma&lt;/code&gt;の代わりに&lt;code&gt;__pragma&lt;/code&gt;が存在する。&lt;br /&gt; 2019 Update 6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/constexpr.html&#34;&gt;constexpr&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;定数式&lt;/td&gt;
&lt;td&gt;4.6&lt;/td&gt;
&lt;td&gt;3.1&lt;/td&gt;
&lt;td&gt;13.0 (partial)&lt;br /&gt; 14.0&lt;/td&gt;
&lt;td&gt;2015 (partial)&lt;br /&gt; 2015 Update 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/defaulted_and_deleted_functions.html&#34;&gt;関数の&lt;code&gt;default/delete&lt;/code&gt;宣言&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;自動定義される特殊関数の制御&lt;/td&gt;
&lt;td&gt;4.4&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;2013: ムーブコンストラクタ・ムーブ代入演算子の&lt;code&gt;default&lt;/code&gt;は不可&lt;br /&gt; 2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/delegating_constructors.html&#34;&gt;移譲コンストラクタ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コンストラクタから他のコンストラクタに処理を移譲する&lt;/td&gt;
&lt;td&gt;4.7&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/explicit_conversion_operator.html&#34;&gt;明示的な型変換演算子のオーバーロード&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;明示的な型変換が行われる場合にのみ呼び出される演算子をオーバーロードできるようにする&lt;/td&gt;
&lt;td&gt;4.5&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/extend_friend_targets.html&#34;&gt;&lt;code&gt;friend&lt;/code&gt;宣言できる対象を拡張&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;テンプレートパラメータや型の別名を&lt;code&gt;friend&lt;/code&gt;宣言&lt;/td&gt;
&lt;td&gt;4.7&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.1 (partial) &lt;br /&gt; 12.0&lt;/td&gt;
&lt;td&gt;2010&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/extern_template.html&#34;&gt;extern template&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;テンプレートのインスタンス化抑止&lt;/td&gt;
&lt;td&gt;3.3&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.1&lt;/td&gt;
&lt;td&gt;6.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/inheriting_constructors.html&#34;&gt;継承コンストラクタ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;基底クラスのコンストラクタを継承する&lt;/td&gt;
&lt;td&gt;4.8&lt;/td&gt;
&lt;td&gt;3.3&lt;/td&gt;
&lt;td&gt;15.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/lambda_expressions.html&#34;&gt;ラムダ式&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;関数オブジェクトをその場に書く&lt;/td&gt;
&lt;td&gt;4.5&lt;/td&gt;
&lt;td&gt;3.1&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;2010 (partial)&lt;br /&gt; 2012&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/local_and_unnamed_type_as_template_arguments.html&#34;&gt;ローカル型と無名型を、テンプレート引数として使用することを許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ローカルおよび無名として定義したクラスや列挙型を、テンプレート引数として渡せるようにする&lt;/td&gt;
&lt;td&gt;4.5&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;2010&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/long_long_type.html&#34;&gt;&lt;code&gt;long long&lt;/code&gt;型&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;64ビット以上の大きさを持つ整数型&lt;/td&gt;
&lt;td&gt;4.3&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.1&lt;/td&gt;
&lt;td&gt;2003&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/inline_namespaces.html&#34;&gt;インライン名前空間&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ネストした名前空間に、透過的にアクセスする&lt;/td&gt;
&lt;td&gt;4.4&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/char16_32.html&#34;&gt;&lt;code&gt;char16_t&lt;/code&gt;と&lt;code&gt;char32_t&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;UTF-16とUTF-32の文字型&lt;/td&gt;
&lt;td&gt;4.4&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;12.1 (Windows: partial) &lt;br /&gt; 12.1 (GNU/Linux, macOS)&lt;br /&gt; 14.0&lt;/td&gt;
&lt;td&gt;2015&lt;br /&gt; 2010より組み込み型ではなく型の別名として存在する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/utf8_string_literals.html&#34;&gt;UTF-8文字列リテラル&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;char&lt;/code&gt;の文字列をUTF-8エンコーディングするプレフィックス&lt;/td&gt;
&lt;td&gt;4.5&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;12.1 (Windows: partial) &lt;br /&gt; 12.1 (GNU/Linux, macOS)&lt;br /&gt; 14.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/raw_string_literals.html&#34;&gt;生文字列リテラル&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;文字列リテラルにRプレフィックスを付けることで、エスケープシーケンスを無視する&lt;/td&gt;
&lt;td&gt;4.5&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/user_defined_literals.html&#34;&gt;ユーザー定義リテラル&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;リテラルのサフィックスをユーザー定義する&lt;/td&gt;
&lt;td&gt;4.7&lt;/td&gt;
&lt;td&gt;3.1&lt;/td&gt;
&lt;td&gt;15.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/trailing_return_types.html&#34;&gt;戻り値の型を後置する関数宣言構文&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;以下のような形式での関数宣言&lt;br /&gt; &lt;code&gt;auto f(arg_types...) -&amp;gt; return_type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;4.4&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;2010&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/nullptr.html&#34;&gt;nullptr&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ヌルポインタを表すポインタリテラル&lt;/td&gt;
&lt;td&gt;4.6&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.1&lt;/td&gt;
&lt;td&gt;2010&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/right_angle_brackets.html&#34;&gt;テンプレートの右山カッコ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vector&amp;lt;basic_string&amp;lt;char&amp;gt;&amp;gt;&lt;/code&gt;のように、&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;をスペースを空けずに記述可能にする&lt;/td&gt;
&lt;td&gt;4.3&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.1&lt;/td&gt;
&lt;td&gt;2005&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/rvalue_ref_and_move_semantics.html&#34;&gt;右辺値参照・ムーブセマンティクス&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;右辺値によるオーバーロード、およびそれによるリソースの所有権移動&lt;/td&gt;
&lt;td&gt;4.3 (partial)&lt;br /&gt; 4.6&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;2010 (partial) ムーブコンストラクタと代入演算子の暗黙定義に対応していない。&lt;br /&gt; 2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/static_assert.html&#34;&gt;コンパイル時アサート&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コンパイル時に条件式が真であることを表明する&lt;/td&gt;
&lt;td&gt;4.3&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.1&lt;/td&gt;
&lt;td&gt;2010&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/scoped_enum.html#extended-unscoped-enum&#34;&gt;&lt;code&gt;enum&lt;/code&gt;の先行宣言&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;4.6&lt;/td&gt;
&lt;td&gt;3.1&lt;/td&gt;
&lt;td&gt;11.1 (partial)&lt;br /&gt; 14.0&lt;/td&gt;
&lt;td&gt;2012&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/scoped_enum.html&#34;&gt;スコープを持つ列挙型&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;強い型付けとスコープを持つ列挙型&lt;/td&gt;
&lt;td&gt;4.4&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.1 (partial)&lt;br /&gt; 14.0&lt;/td&gt;
&lt;td&gt;2012&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/alias_templates.html&#34;&gt;エイリアステンプレート&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;テンプレートによって型の別名を定義する&lt;/td&gt;
&lt;td&gt;4.7&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;12.1&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/unrestricted_unions.html&#34;&gt;共用体の制限解除&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;共用体のメンバ変数として、クラスオブジェクトを持つ&lt;/td&gt;
&lt;td&gt;4.6&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;14.0(Linux系OSおよびMacのみ。Windowsは非対応)&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/variadic_templates.html&#34;&gt;可変引数テンプレート&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;任意の数のテンプレートパラメータを受け取れるようにする&lt;/td&gt;
&lt;td&gt;4.3 (partial)&lt;br /&gt; 4.4&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;12.1&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/range_based_for.html&#34;&gt;範囲for文&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;配列やコンテナといった範囲を表すオブジェクトを、簡潔に走査する&lt;/td&gt;
&lt;td&gt;4.6&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;13.0&lt;/td&gt;
&lt;td&gt;2012&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/override_final.html&#34;&gt;&lt;code&gt;override&lt;/code&gt;と&lt;code&gt;final&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;メンバ関数のオーバーライド指定、および派生クラスでのオーバーロードを禁止する指定&lt;/td&gt;
&lt;td&gt;4.7&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;2005 (partial): &lt;code&gt;override&lt;/code&gt;のみ。&lt;code&gt;final&lt;/code&gt;の代わりにsealedが存在する。ただし両者ともデストラクタには指定できない。&lt;br /&gt; 2012&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/attributes.html&#34;&gt;属性構文&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[[attr]]&lt;/code&gt;構文による、クラス、関数、変数の属性指定&lt;/td&gt;
&lt;td&gt;4.8&lt;/td&gt;
&lt;td&gt;3.3&lt;/td&gt;
&lt;td&gt;12.1&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/ref_qualifier_for_this.html&#34;&gt;メンバ関数の左辺値／右辺値修飾&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;オブジェクトが左辺値／右辺値の場合のみ呼び出し可能であることの指定&lt;/td&gt;
&lt;td&gt;4.8.1&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/non_static_data_member_initializers.html&#34;&gt;非静的メンバ変数の初期化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;メンバ変数を、宣言と同時に初期値指定する&lt;/td&gt;
&lt;td&gt;4.7&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/initializer_lists.html&#34;&gt;初期化子リスト&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;波括弧による初期化をユーザー定義する。&lt;code&gt;vector&amp;lt;int&amp;gt; v = {1, 2, 3};&lt;/code&gt;など。&lt;/td&gt;
&lt;td&gt;4.4&lt;/td&gt;
&lt;td&gt;3.1&lt;/td&gt;
&lt;td&gt;14.0&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/uniform_initialization.html&#34;&gt;一様初期化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コンストラクタ呼び出しを波カッコで行う。 &lt;code&gt;T x { a, b, c };&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;4.6&lt;/td&gt;
&lt;td&gt;3.1&lt;/td&gt;
&lt;td&gt;13.0(partial)&lt;br /&gt; 14.0&lt;/td&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/noexcept.html&#34;&gt;noexcept&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;関数の例外指定、例外を投げる可能性のある式かbool値を返す演算子&lt;/td&gt;
&lt;td&gt;4.6&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;13.0(partial)&lt;br /&gt;14.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/sfinae_expressions.html&#34;&gt;任意の式によるSFINAE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;特定の式が有効かどうかで、その関数をオーバーロード解決に含めるかどうかを決定する&lt;/td&gt;
&lt;td&gt;4.4&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;2015 Update 1 (partial)&lt;br /&gt; 2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/thread_local_storage.html&#34;&gt;スレッドローカルストレージ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;スレッドごとに異なる静的記憶域に保持される変数&lt;/td&gt;
&lt;td&gt;4.8&lt;/td&gt;
&lt;td&gt;3.3&lt;/td&gt;
&lt;td&gt;11.1 (partial)&lt;/td&gt;
&lt;td&gt;2010&lt;br /&gt; &lt;code&gt;__declspec(thread)&lt;/code&gt;属性での部分サポート&lt;br /&gt; 2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp11/static_initialization_thread_safely.html&#34;&gt;ブロックスコープを持つ&lt;code&gt;static&lt;/code&gt;変数初期化のスレッドセーフ化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;関数ローカルで定義した&lt;code&gt;static&lt;/code&gt;変数の初期化を、スレッドセーフにする&lt;/td&gt;
&lt;td&gt;4.0&lt;/td&gt;
&lt;td&gt;2.9&lt;/td&gt;
&lt;td&gt;11.0 (Lnux/macOS)&lt;br /&gt; 14.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;各処理系のC++11実装状況ページ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;全体的な対応状況： &lt;a href=&#34;https://wiki.apache.org/stdcxx/C++0xCompilerSupport&#34; target=&#34;_blank&#34;&gt;C++0xCompilerSupport&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GCC： &lt;a href=&#34;https://gcc.gnu.org/projects/cxx-status.html#cxx11&#34; target=&#34;_blank&#34;&gt;C++11 Support in GCC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;libstdc++ : &lt;a href=&#34;https://gcc.gnu.org/onlinedocs/libstdc++/manual/status.html#status.iso.2011&#34; target=&#34;_blank&#34;&gt;C++ 2011&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Clang： &lt;a href=&#34;http://clang.llvm.org/cxx_status.html&#34; target=&#34;_blank&#34;&gt;C++98 and C++11 Support in Clang&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://clang.llvm.org/cxx_dr_status.html&#34; target=&#34;_blank&#34;&gt;C++ Defect Report Support in Clang&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ICC : &lt;a href=&#34;https://software.intel.com/en-us/articles/c0x-features-supported-by-intel-c-compiler&#34; target=&#34;_blank&#34;&gt;C++11 Features Supported by Intel® C++ Compiler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Visual C++ (MSVC):&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/ja-jp/cpp/visual-cpp-language-conformance&#34; target=&#34;_blank&#34;&gt;Visual C++ 言語への準拠&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/vcblog/2018/05/07/announcing-msvc-conforms-to-the-c-standard/&#34; target=&#34;_blank&#34;&gt;Announcing: MSVC Conforms to the C++ Standard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation-status.html#cpp14&#34; id=&#34;cpp14&#34;&gt;C++14言語機能の実装状況&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;言語機能&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;MSVC&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp14/binary_literals.html&#34;&gt;2進数リテラル&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2進数を表す&lt;code&gt;0b&lt;/code&gt; or &lt;code&gt;0B&lt;/code&gt;プレフィックスを付けた数値リテラルの記述を可能とする&lt;/td&gt;
&lt;td&gt;4.3(GNU)&lt;br /&gt; 4.9&lt;/td&gt;
&lt;td&gt;3.2&lt;/td&gt;
&lt;td&gt;11.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp14/return_type_deduction_for_normal_functions.html&#34;&gt;通常関数の戻り値型推論&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;関数の戻り値型を&lt;code&gt;auto&lt;/code&gt;にすることで、&lt;code&gt;return&lt;/code&gt;文から戻り値の型を推論させる&lt;/td&gt;
&lt;td&gt;4.8(partial)&lt;br /&gt;4.9&lt;/td&gt;
&lt;td&gt;3.3(partial)&lt;br /&gt; 3.4&lt;/td&gt;
&lt;td&gt;15.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp14/initialize_capture.html&#34;&gt;ラムダ式の初期化キャプチャ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;キャプチャに代入構文を導入し、一つの変数に複数のキャプチャ方法を指定可能にする&lt;/td&gt;
&lt;td&gt;4.9&lt;/td&gt;
&lt;td&gt;3.4&lt;/td&gt;
&lt;td&gt;15.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp14/generic_lambdas.html&#34;&gt;ジェネリックラムダ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ラムダ式のパラメータを&lt;code&gt;auto&lt;/code&gt;にすることで、ジェネリックな関数呼び出し演算子を持つ関数オブジェクトを生成する&lt;/td&gt;
&lt;td&gt;4.9&lt;/td&gt;
&lt;td&gt;3.4&lt;/td&gt;
&lt;td&gt;16.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp14/variable_templates.html&#34;&gt;変数テンプレート&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;変数定義時のテンプレート指定を可能にする。&lt;/td&gt;
&lt;td&gt;5.1&lt;/td&gt;
&lt;td&gt;3.4&lt;/td&gt;
&lt;td&gt;16.0&lt;/td&gt;
&lt;td&gt;2015 Update 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp14/relaxing_constraints_on_constexpr.html&#34;&gt;&lt;code&gt;constexpr&lt;/code&gt;の制限緩和&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;if&lt;/code&gt;文、&lt;code&gt;switch&lt;/code&gt;文による条件分岐の許可。&lt;br /&gt;&lt;code&gt;for&lt;/code&gt;文、&lt;code&gt;while&lt;/code&gt;文、&lt;code&gt;do-while&lt;/code&gt;文によるループの許可。&lt;br /&gt;&lt;code&gt;void&lt;/code&gt;戻り値型の許可&lt;br /&gt;初期化を伴う変数宣言の許可。&lt;br /&gt;変数書き換えの許可。&lt;/td&gt;
&lt;td&gt;5.1&lt;/td&gt;
&lt;td&gt;3.3(partial) &lt;br /&gt; 3.4&lt;/td&gt;
&lt;td&gt;16.0&lt;/td&gt;
&lt;td&gt;2017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp14/brace_elision_in_array_temporary_initialization.html&#34;&gt;宣言時のメンバ初期化を持つ型の集成体初期化を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;一様初期化と初期化子リストを組み合わせた際、二重に波カッコが必要となっていた仕様を緩和し、波カッコを省略できるようにする&lt;/td&gt;
&lt;td&gt;5.1&lt;/td&gt;
&lt;td&gt;3.3&lt;/td&gt;
&lt;td&gt;16.0&lt;/td&gt;
&lt;td&gt;2017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp14/deprecated_attr.html&#34;&gt;&lt;code&gt;[[deprecated]]&lt;/code&gt;属性&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;非推奨の機能であることを示す属性。&lt;/td&gt;
&lt;td&gt;4.9&lt;/td&gt;
&lt;td&gt;3.4&lt;/td&gt;
&lt;td&gt;15.0&lt;br /&gt; (Linux/Mac OS)&lt;/td&gt;
&lt;td&gt;2015&lt;br /&gt;それ以前は&lt;code&gt;__declspec(deprecated)&lt;/code&gt;で代替可能&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp14/digit_separators.html&#34;&gt;数値リテラルの桁区切り文字&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;シングルクォーテーションで数値リテラルを桁区切りする。&lt;/td&gt;
&lt;td&gt;4.9&lt;/td&gt;
&lt;td&gt;3.4&lt;/td&gt;
&lt;td&gt;16.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp14/sized_deallocation.html&#34;&gt;サイズ付きデアロケーション&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;サイズをとる&lt;code&gt;delete&lt;/code&gt;演算子のオーバーロードを許可する。&lt;/td&gt;
&lt;td&gt;5.1&lt;/td&gt;
&lt;td&gt;3.4&lt;/td&gt;
&lt;td&gt;16.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;各処理系のC++14実装状況ページ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GCC: &lt;a href=&#34;https://gcc.gnu.org/projects/cxx-status.html#cxx14&#34; target=&#34;_blank&#34;&gt;C++14 Support in GCC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;libstdc++: &lt;a href=&#34;https://gcc.gnu.org/onlinedocs/libstdc++/manual/status.html#status.iso.2014&#34; target=&#34;_blank&#34;&gt;C++ 2014&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Clang: &lt;a href=&#34;http://clang.llvm.org/cxx_status.html&#34; target=&#34;_blank&#34;&gt;C++98, C++11, and C++14 Support in Clang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;libc++: &lt;a href=&#34;http://libcxx.llvm.org/cxx1y_status.html&#34; target=&#34;_blank&#34;&gt;libc++ C++1Y Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Visual C++ (MSVC):&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/ja-jp/cpp/visual-cpp-language-conformance&#34; target=&#34;_blank&#34;&gt;Visual C++ 言語への準拠&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/vcblog/2018/05/07/announcing-msvc-conforms-to-the-c-standard/&#34; target=&#34;_blank&#34;&gt;Announcing: MSVC Conforms to the C++ Standard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ICC: &lt;a href=&#34;https://software.intel.com/en-us/articles/c14-features-supported-by-intel-c-compiler&#34; target=&#34;_blank&#34;&gt;C++14 Features Supported by Intel C++ Compiler&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://software.intel.com/en-us/forums/topic/549502&#34; target=&#34;_blank&#34;&gt;Intel (R) Parallel Studio XE 2016 Beta program has begun&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation-status.html#cpp17&#34; id=&#34;cpp17&#34;&gt;C++17言語機能の実装状況&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;言語機能&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;MSVC&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/extending_static_assert.html&#34;&gt;メッセージなしの&lt;code&gt;static_assert&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;デフォルトの表明メッセージを使用する&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;3.5&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/removing_trigraphs.html&#34;&gt;トライグラフを削除&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;5.1&lt;/td&gt;
&lt;td&gt;3.5&lt;/td&gt;
&lt;td&gt;19.1&lt;/td&gt;
&lt;td&gt;2010&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/allow_typename_in_a_template_template_parameter.html&#34;&gt;テンプレートテンプレートパラメータに&lt;code&gt;typename&lt;/code&gt;を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;class&lt;/code&gt;キーワードしか使用できなかった部分に、&lt;code&gt;typename&lt;/code&gt;を許可&lt;/td&gt;
&lt;td&gt;5.0&lt;/td&gt;
&lt;td&gt;3.5&lt;/td&gt;
&lt;td&gt;17.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/new_rules_for_auto_deduction_from_braced-init-list.html&#34;&gt;単一要素初期化子リストを&lt;code&gt;auto&lt;/code&gt;で受け取った場合の型を変更&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;initializer_list&amp;lt;T&amp;gt;&lt;/code&gt;だったのを&lt;code&gt;T&lt;/code&gt;に変更&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;3.8&lt;/td&gt;
&lt;td&gt;17.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/folding_expressions.html&#34;&gt;畳み込み式&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;パラメータパックに対する2項演算の集積処理&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;3.6&lt;/td&gt;
&lt;td&gt;19.0&lt;/td&gt;
&lt;td&gt;2017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/utf8_character_literals.html&#34;&gt;UTF-8文字リテラル&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;文字列リテラルだけでなく、文字リテラルにもUTF-8指定できるようにする&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;3.6&lt;/td&gt;
&lt;td&gt;17.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/nested_namespace.html&#34;&gt;入れ子名前空間の定義&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;namespace A::B {}&lt;/code&gt;のように、入れ子の名前空間を簡単に定義できるようにする&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;3.6&lt;/td&gt;
&lt;td&gt;17.0&lt;/td&gt;
&lt;td&gt;2015 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/attributes_for_namespaces_and_enumerators.html&#34;&gt;名前空間と列挙子に属性の付加を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;名前空間の定義と、列挙型の各要素の定義に、属性を付けられるようにする&lt;/td&gt;
&lt;td&gt;名前空間は4.0&lt;br /&gt;列挙子は6&lt;/td&gt;
&lt;td&gt;3.6&lt;/td&gt;
&lt;td&gt;17.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/allow_constant_evaluation_for_all_non-type_template_arguments.html&#34;&gt;全ての非型テンプレート引数の定数式評価を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ポインタの定数式評価として、配列からポインタへの変換や、関数から関数ポインタへの変換などを許可&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;3.6&lt;/td&gt;
&lt;td&gt;19.1&lt;/td&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/remove_deprecated_use_of_the_register_keyword.html&#34;&gt;非推奨だった&lt;code&gt;register&lt;/code&gt;キーワードを削除&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.8&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/remove_deprecated_increment_of_bool.html&#34;&gt;非推奨だった&lt;code&gt;bool&lt;/code&gt;型オブジェクトに対するインクリメントの仕様を削除&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.8&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/exception_spec_be_part_of_the_type_system.html&#34;&gt;例外仕様を型システムの一部にする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/has_include.html&#34;&gt;プリプロセッサでの条件式&lt;code&gt;__has_include&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;対象のインクルードファイルが存在するかをプリプロセス時に判定する&lt;/td&gt;
&lt;td&gt;5.0&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0136r1.html&#34; target=&#34;_blank&#34;&gt;継承コンストラクタの新仕様&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;デフォルト引数を引き継ぐようにした&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/fallthrough.html&#34;&gt;&lt;code&gt;[[fallthrough]]&lt;/code&gt;属性&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;case&lt;/code&gt;節で&lt;code&gt;break&lt;/code&gt;や&lt;code&gt;return&lt;/code&gt;を書かなかった場合に、それが意図したフォールスルーであることをコンパイラに伝える属性&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/nodiscard.html&#34;&gt;&lt;code&gt;[[nodiscard]]&lt;/code&gt;属性&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;関数の戻り値を無視してはならないことをユーザーに伝える属性&lt;/td&gt;
&lt;td&gt;4.8からは&lt;code&gt;[[gnu::warn_unused_result]]&lt;/code&gt;を使用すること&lt;br /&gt; 7からサポート&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/maybe_unused.html&#34;&gt;&lt;code&gt;[[maybe_unused]]&lt;/code&gt;属性&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;使用しない可能性がある変数であることをコンパイラに伝える属性&lt;/td&gt;
&lt;td&gt;4.8からは&lt;code&gt;[[gnu::unused]]&lt;/code&gt;を使用すること&lt;br /&gt; 7からサポート&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0017r1.html&#34; target=&#34;_blank&#34;&gt;基底クラスのメンバ変数を集成体初期化するための波カッコを省略できるようにする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;基底クラスのメンバを集成体初期化するために、&lt;code&gt;derived d {{42}};&lt;/code&gt;の代わりに&lt;code&gt;derived d {42};&lt;/code&gt;と書けるようにする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;19.1&lt;/td&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/constexpr_lambda.html&#34;&gt;ラムダ式を&lt;code&gt;constexpr&lt;/code&gt;として使用できるようにする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ラムダ式の関数オブジェクトが定数式の文脈で使用された場合に、それがコンパイル時に評価されるようにする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;19.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/generalizing_the_range-based_for_loop.html&#34;&gt;範囲for文のための&lt;code&gt;begin()&lt;/code&gt;と&lt;code&gt;end()&lt;/code&gt;関数が、異なる型を返すことを許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;begin()&lt;/code&gt;と&lt;code&gt;end()&lt;/code&gt;が異なるイテレータ型を返せるようにすることで、終端イテレータを定義しやすくする&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/lambda_capture_of_this_by_value.html&#34;&gt;ラムダ式での&lt;code&gt;*this&lt;/code&gt;のコピーキャプチャ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;キャプチャリストに&lt;code&gt;*this&lt;/code&gt;を指定することで、&lt;code&gt;*this&lt;/code&gt;をコピーキャプチャする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.8&lt;/td&gt;
&lt;td&gt;19.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/construction_enum_class_values.html&#34;&gt;&lt;code&gt;enum class&lt;/code&gt;変数の初期値として整数を指定する際の規則を調整&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;キャストを使用することなく整数を初期値として使用し、&lt;code&gt;E e{0};&lt;/code&gt;のような初期化を許可&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;1.9&lt;/td&gt;
&lt;td&gt;19.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/hexadecimal_floating_literals.html&#34;&gt;浮動小数点数の16進数リテラル&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hexfloat&lt;/code&gt;マニピュレータや&lt;code&gt;printf()&lt;/code&gt;の16進数出力に合わせて、浮動小数点数のリテラルも16進数表記できるようにする&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/using_attribute_namespaces.html&#34;&gt;属性の名前空間指定に繰り返しをなくす&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[[using CC: opt(1), debug]]&lt;/code&gt;のように属性の名前空間宣言をまとめて行う&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/dynamic_memory_allocation_for_over-aligned_data.html&#34;&gt;アライメント指定されたデータの動的メモリ確保&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;operator new&lt;/code&gt;と&lt;code&gt;operator delete&lt;/code&gt;でアライメント値を取得できるようにする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/type_deduction_for_class_templates.html&#34;&gt;クラステンプレートのテンプレート引数推論&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コンストラクタの引数からクラスのテンプレート引数を推論できるようにする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;19.1&lt;/td&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/declaring_non-type_template_arguments_with_auto.html&#34;&gt;非型テンプレート引数の&lt;code&gt;auto&lt;/code&gt;宣言&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;template &amp;lt;typename T, T x&amp;gt;&lt;/code&gt;という冗長なコードを&lt;code&gt;template &amp;lt;auto x&amp;gt;&lt;/code&gt;のようにして受けられるようにし、&lt;br /&gt; &lt;code&gt;X&amp;lt;3&amp;gt;; X&amp;lt;true&amp;gt;; X&amp;lt;&#39;a&#39;&amp;gt;&lt;/code&gt;のように定数を簡潔に渡せるようにする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;19.1&lt;/td&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/guaranteed_copy_elision.html&#34;&gt;値のコピー省略を保証&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;一時オブジェクトをコピーする際に、単純な値を持つクラスであればコピーが省略されることを保証する&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;19.1&lt;/td&gt;
&lt;td&gt;2017 Update 6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/expression_evaluation_order.html&#34;&gt;厳密な式の評価順&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;式の項が評価される順序を厳密に規定する。&lt;br /&gt; &lt;code&gt;b = a;&lt;/code&gt;の式が右から順番(a, bの順)に評価される&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;19.1&lt;/td&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/non_standard_attributes.html&#34;&gt;不明な属性を無視する&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;実装が知らない名前空間の属性は無視する&lt;/td&gt;
&lt;td&gt;4.8&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/if_constexpr.html&#34;&gt;constexpr if文&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;if constexpr(cond)&lt;/code&gt;とすることで、そのif文はコンパイル時に処理される&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;19.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0296r2.html&#34; target=&#34;_blank&#34;&gt;処理の進行保証&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;並行処理に関して「処理の進行」を明確に定義&lt;br /&gt; (TODO:言葉の定義だけなので実装状況ページからは取り除く)&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/inline_variables.html&#34;&gt;インライン変数&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;インライン指定を関数だけでなく変数にも指定できるようにする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;19.0&lt;/td&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0391r0.html&#34; target=&#34;_blank&#34;&gt;templated entityという用語を導入&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;(TODO:言葉の定義だけなので実装状況ページからは取り除く)&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/structured_bindings.html&#34;&gt;構造化束縛&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;タプルやユーザー定義型を分解して受け取れるようにする&lt;br /&gt; &lt;code&gt;tuple&amp;lt;int, string&amp;gt; f();&lt;/code&gt; &lt;br /&gt; &lt;code&gt;const auto [a, b] = f(); // aはintの値、bはstringの値&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/selection_statements_with_initializer.html&#34;&gt;if文とswitch文の条件式と初期化を分離&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;if (init; condition)&lt;/code&gt;のように初期化と条件式を分けて記述できるようにする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;18.0&lt;/td&gt;
&lt;td&gt;2017 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/replacement_of_class_objects_containing_reference_members.html&#34;&gt;参照メンバをもつクラスの置き換え&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;参照型メンバや&lt;code&gt;const&lt;/code&gt;データメンバを含むクラスについてこれまで結果は未定義とされていた配置&lt;code&gt;new&lt;/code&gt;によるオブジェクトの置き換えを条件付きで可能とする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;6.0&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/remove_deprecated_exception_specifications.html&#34;&gt;非推奨だった例外仕様を削除&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;noexcept&lt;/code&gt;が入ったことによって非推奨になった&lt;code&gt;throw&lt;/code&gt;キーワードによる例外仕様を削除&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp17/pack_expansions_in_using.html&#34;&gt;using宣言でのパック展開&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;パラメータパックの型を基底クラスとして指定した場合に、&lt;code&gt;using&lt;/code&gt;宣言に基底クラスのパラメータパックを指定できるようにする&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0512r0.pdf&#34; target=&#34;_blank&#34;&gt;クラステンプレート引数の推論仕様を調整&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;5.0&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;2017 Update 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0490r0.html&#34; target=&#34;_blank&#34;&gt;Committee Draftに対するNational Body Commentへの対応&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0522r0.html&#34; target=&#34;_blank&#34;&gt;テンプレートテンプレート引数のマッチングにおいて、互換性のあるテンプレートを除外&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4 (partial)&lt;/td&gt;
&lt;td&gt;19.1&lt;/td&gt;
&lt;td&gt;2017 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;各処理系のC++17実装状況ページ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GCC: &lt;a href=&#34;https://gcc.gnu.org/projects/cxx-status.html#cxx17&#34; target=&#34;_blank&#34;&gt;C++17 Support in GCC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Clang: &lt;a href=&#34;http://clang.llvm.org/cxx_status.html&#34; target=&#34;_blank&#34;&gt;C++ Support in Clang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;libc++ : &lt;a href=&#34;http://libcxx.llvm.org/cxx1z_status.html&#34; target=&#34;_blank&#34;&gt;libc++ C++1z Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Visual C++ (MSVC):&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/ja-jp/cpp/visual-cpp-language-conformance&#34; target=&#34;_blank&#34;&gt;Visual C++ 言語への準拠&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/vcblog/2018/05/07/announcing-msvc-conforms-to-the-c-standard/&#34; target=&#34;_blank&#34;&gt;Announcing: MSVC Conforms to the C++ Standard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ICC: &lt;a href=&#34;https://software.intel.com/en-us/articles/c17-features-supported-by-intel-c-compiler&#34; target=&#34;_blank&#34;&gt;C++17 Features Supported by Intel C++ Compiler&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation-status.html#cpp20&#34; id=&#34;cpp20&#34;&gt;C++20言語機能の実装状況&lt;/a&gt;&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;言語機能&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;MSVC&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/default_member_initializers_for_bit_fields.html&#34;&gt;ビットフィールドのメンバ変数初期化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ビットフィールドメンバ変数のデフォルト値を設定する構文を追加する&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;6.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/allow_lambda_capture_equal_this.html&#34;&gt;ラムダ式のキャプチャとして&lt;code&gt;[=, this]&lt;/code&gt;を許可する&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;デフォルトコピーキャプチャと&lt;code&gt;this&lt;/code&gt;ポインタのコピーキャプチャを両方指定できるようにする&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;6.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/deprecate_implicit_capture_of_this_via_defcopy.html&#34;&gt;&lt;code&gt;[=]&lt;/code&gt;による&lt;code&gt;this&lt;/code&gt;の暗黙のキャプチャを非推奨化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コピーのデフォルトキャプチャでは、&lt;code&gt;this&lt;/code&gt;ポインタをキャプチャされなくする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/familiar_template_syntax_for_generic_lambdas.html&#34;&gt;ジェネリックラムダのテンプレート構文&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ジェネリックラムダでテンプレートパラメータを定義できるようにする&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/fixing_const_qualified_pointers_to_members.html&#34;&gt;&lt;code&gt;const&lt;/code&gt;修飾されたメンバポインタの制限を修正&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;.*&lt;/code&gt;演算子での左辺値の&lt;code&gt;const&lt;/code&gt;メンバ関数呼び出しを許可する&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;6.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/va_opt.html&#34;&gt;可変引数が空でない場合のトークン置換&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;プリプロセッサの置換で可変引数が空の場合に余計なカンマが付いてしまう問題に対処&lt;/td&gt;
&lt;td&gt;8 (partial, &lt;code&gt;#__VA_OPT__&lt;/code&gt;による文字列化が未サポート)&lt;/td&gt;
&lt;td&gt;6.0&lt;br /&gt; 9.0 (&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1042r1.html&#34; target=&#34;_blank&#34;&gt;p1042&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0329r4.pdf&#34; target=&#34;_blank&#34;&gt;指示付き初期化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;6.0 (partial)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0734r0.pdf&#34; target=&#34;_blank&#34;&gt;コンセプト&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;テンプレートパラメータに対する制約を行う&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/range-based_for_statements_with_initializer.html&#34;&gt;初期化式をともなう範囲for文&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;範囲for文スコープで使用する変数の初期化のための構文を追加&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0588r1.html&#34; target=&#34;_blank&#34;&gt;暗黙のラムダキャプチャを簡略化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0846r0.html&#34; target=&#34;_blank&#34;&gt;関数テンプレートに明示的に型指定した場合にADLで見つからない問題を修正&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0641r2.html&#34; target=&#34;_blank&#34;&gt;デフォルトのコピーコンストラクタと非&lt;code&gt;const&lt;/code&gt;なコンストラクタが衝突する問題を修正&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0859r0.html&#34; target=&#34;_blank&#34;&gt;評価されない文脈で&lt;code&gt;constexpr&lt;/code&gt;関数が定数式評価されることを規定&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0515r3.pdf&#34; target=&#34;_blank&#34;&gt;一貫比較&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;8.0 (partial)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0857r0.html&#34; target=&#34;_blank&#34;&gt;ラムダ式の制約&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0692r1.html&#34; target=&#34;_blank&#34;&gt;特殊化のアクセスチェック&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0624r2.pdf&#34; target=&#34;_blank&#34;&gt;状態を持たないラムダ式を、デフォルト構築可能、代入可能とする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0767r1.html&#34; target=&#34;_blank&#34;&gt;PODを非推奨化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0315r4.pdf&#34; target=&#34;_blank&#34;&gt;評価されない文脈でのラムダ式&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0840r2.html&#34; target=&#34;_blank&#34;&gt;空オブジェクトを言語サポート&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[[no_unique_address]]&lt;/code&gt;属性を導入し、空の型のオブジェクトをほかのオブジェクトと共有する最適化を許可する&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/relaxing_the_range_for_loop_customization_point_finding_rules.html&#34;&gt;範囲for文がカスタマイゼーションポイントを見つけるルールを緩和&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;begin()&lt;/code&gt;/&lt;code&gt;end()&lt;/code&gt;メンバ関数のどちらかが見つからなかった場合に非メンバ関数の&lt;code&gt;begin()&lt;/code&gt;/&lt;code&gt;end()&lt;/code&gt;を探しにいく&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/allow_structured_bindings_to_accessible_members.html&#34;&gt;friend指定された関数内から構造化束縛を使用して非公開メンバ変数にアクセスすることを許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;構造化束縛の仕様として公開メンバ変数のみを取り出せるようになっていたが、friend指定された関数からは非公開メンバ変数にもアクセスできるようにする&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/relaxing_the_structured_bindings_customization_point_finding_rules.html&#34;&gt;構造化束縛がカスタマイゼーションポイントを見つけるルールを緩和&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;非テンプレートの&lt;code&gt;get()&lt;/code&gt;メンバ関数が見つかった場合は、非メンバ関数の&lt;code&gt;get()&lt;/code&gt;を探しにいく&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0634r3.html&#34; target=&#34;_blank&#34;&gt;型の文脈で&lt;code&gt;typename&lt;/code&gt;の省略を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;型しか現れない文脈では、依存名を解決するための&lt;code&gt;typename&lt;/code&gt;キーワードを省略できるようにする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0780r2.html&#34; target=&#34;_blank&#34;&gt;ラムダ式の初期化キャプチャでのパック展開を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[...args = std::move(args)]&lt;/code&gt;のようなキャプチャを許可&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0479r5.html&#34; target=&#34;_blank&#34;&gt;当たる確率が高い分岐と、当たる確率が低い分岐をコンパイラに伝える属性を追加&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コンパイラが分岐予測するためのヒントとする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0905r1.html&#34; target=&#34;_blank&#34;&gt;宇宙船演算子に対称性をもたせる&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a &amp;lt;=&amp;gt; b&lt;/code&gt;が妥当であれば&lt;code&gt;b &amp;lt;=&amp;gt; a&lt;/code&gt;も妥当とする&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0929r2.html&#34; target=&#34;_blank&#34;&gt;抽象型のチェック&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;関数の宣言段階では、パラメータおよび戻り値型が抽象型かどうかをチェックしないようにする&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0732r2.pdf&#34; target=&#34;_blank&#34;&gt;非型テンプレートパラメータとしてクラス型を許可する&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;std::strong_equality&lt;/code&gt;に変換可能な非メンバ関数&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt;をもつ型を、非型テンプレートパラメータとして使用できるようにする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0722r1.html&#34; target=&#34;_blank&#34;&gt;可変長データを扱うクラスの効率的な&lt;code&gt;delete&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;クラスの&lt;code&gt;delete&lt;/code&gt;演算子が呼び出される前にデストラクタが呼ばれないようにするオプションを追加&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;6.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/allow_virtual_function_calls_in_constant_expressions.html&#34;&gt;定数式からの仮想関数の呼び出しを許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;仮想関数に&lt;code&gt;constexpr&lt;/code&gt;を付けられない制限を解除&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1327r1.html&#34; target=&#34;_blank&#34;&gt;定数式での&lt;code&gt;dynamic_cast&lt;/code&gt;、多態的な&lt;code&gt;typeid&lt;/code&gt;を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;定数式での動的多態を許可&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1002r1.pdf&#34; target=&#34;_blank&#34;&gt;constexpr関数内でのtry-catchブロックを許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;constexpr関数内でtry-catchブロックを書けるようにする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1073r3.html&#34; target=&#34;_blank&#34;&gt;即時関数&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;consteval&lt;/code&gt;キーワードを追加し、常に定数式評価されるよう指定できるようにする&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1330r0.pdf&#34; target=&#34;_blank&#34;&gt;定数式内での共用体のアクティブメンバの変更を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;共用体メンバの書き換えを定数式内で行えるようにする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1008r1.pdf&#34; target=&#34;_blank&#34;&gt;ユーザー宣言したコンストラクタを持つクラスの集成体初期化を禁止&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コンストラクタが&lt;code&gt;delete&lt;/code&gt;宣言されているクラスを、集成体初期化によってコンストラクタ呼び出しを回避して構築できてしまっていた技法を禁止&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0542r5.html&#34; target=&#34;_blank&#34;&gt;契約に基づくプログラミング&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;事前条件、事後条件、表明を宣言する新たな属性構文を追加&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0892r2.html&#34; target=&#34;_blank&#34;&gt;関数を条件付きで&lt;code&gt;explicit&lt;/code&gt;にする構文を追加&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;explicit(true)&lt;/code&gt;のように&lt;code&gt;explicit&lt;/code&gt;に真理値パラメータを指定できるようにする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/signed_integers_are_twos_complement.html&#34;&gt;符号付き整数型が2の補数表現であることを規定&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;符号付き整数型のビット表現を2の補数に規定する&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0482r6.html&#34; target=&#34;_blank&#34;&gt;UTF-8エンコーディングされた文字の型として&lt;code&gt;char8_t&lt;/code&gt;を追加&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;UTF-8エンコードされた文字かどうかでオーバーロード・特殊化をできるようにする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;7 (&lt;code&gt;-fchar8_t&lt;/code&gt;オプションが必要)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1094r2.html&#34; target=&#34;_blank&#34;&gt;入れ子名前空間定義でのインライン名前空間&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;namespace ns1::inline ns2::ns3 {}&lt;/code&gt;のように、入れ子名前空間を定義する式にインライン名前空間の指定を含められるようにする&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/extending_structured_bindings_to_be_more_like_variable_declarations.html&#34;&gt;構造化束縛を拡張して通常の変数宣言のように使用できるようにする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;記憶域指定子として&lt;code&gt;static&lt;/code&gt;と&lt;code&gt;thread_local&lt;/code&gt;の指定を許可&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;8.0 (partial)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/reference_capture_of_structured_bindings.md.nolink&#34;&gt;構造化束縛したビットフィールドの参照キャプチャ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ビットフィールドを含む構造化束縛をした場合にラムダ式で参照キャプチャできない規定を緩和し、ビットフィールドを直接参照キャプチャ、もしくはデフォルト参照キャプチャして使用しなければ適格とする&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;8.0 (partial)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/allow_initializing_aggregates_from_a_parenthesized_list_of_values.md.nolink&#34;&gt;丸カッコの値リストからの集成体初期化を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;T x{1, 2, 3};&lt;/code&gt;と同様に&lt;code&gt;T x(1, 2, 3);&lt;/code&gt;でも集成体初期化できるようにする&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/array_size_deduction_in_new-expressions.md.nolink&#34;&gt;&lt;code&gt;new&lt;/code&gt;式での配列要素数の推論&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;double* p = new double[]{1,2,3};&lt;/code&gt;を許可&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/make_char16t_char32t_string_literals_be_utf16_32.md.nolink&#34;&gt;&lt;code&gt;char16_t&lt;/code&gt;と&lt;code&gt;char32_t&lt;/code&gt;の文字・文字列リテラルを、文字コードUTF-16/32に規定&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;__STDC_UTF_16__&lt;/code&gt;、&lt;code&gt;__STDC_UTF_32__&lt;/code&gt;の定義に関係なく、&lt;code&gt;char16_t&lt;/code&gt;、&lt;code&gt;char32_t&lt;/code&gt;のリテラルをUTF-16/32文字コードに規定する&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/modules.html&#34;&gt;モジュール&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ヘッダファイル・ソースファイル、インクルードに変わる仕組みとしてモジュールを導入する&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;8.0 partial (&lt;code&gt;-fmodules&lt;/code&gt;, &lt;code&gt;-fmodules-ts&lt;/code&gt;が必要)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;partial&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/coroutines.md.nolink&#34;&gt;コルーチン&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;関数実行を中断・再開する仕組みとしてコルーチンを導入する&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;8.0 (partial)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/deprecate_uses_of_the_comma_operator_in_subscripting_expressions.md.nolink&#34;&gt;添字演算子内でのカンマ演算子の使用を非推奨化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ar[i, j]&lt;/code&gt;を非推奨化。&lt;code&gt;ar[(i, j)]&lt;/code&gt;はOK&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/permitting_trivial_default_initialization_in_constexpr_contexts.md.nolink&#34;&gt;constexprの文脈での自明なデフォルト初期化を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;constexpr関数内でのデフォルト初期化を許可し、未初期化値を読むことのみ禁止する&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/conditionally_trivial_special_member_functions.md.nolink&#34;&gt;特殊メンバ関数の条件付き自明定義&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;制約によって自明な特殊メンバ関数と非自明な特殊メンバ関数をオーバーロードできるようにする&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/cpp20/nodiscard_should_have_a_reason.md.nolink&#34;&gt;&lt;code&gt;[[nodiscard]]&lt;/code&gt;属性に理由となる文字列を付加できるようにする&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;関数の戻り値を無視してはならない理由を関数宣言に持たせ、警告メッセージに役立てる&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/using_enum.md.nolink&#34;&gt;スコープ付き列挙型のusing宣言&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;using enum EnumType;&lt;/code&gt;もしくは&lt;code&gt;using EnumType::enumerator&lt;/code&gt;とすることで、列挙値のスコープ指定を省略できるようにする&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019 Update 4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/cpp20/class_template_argument_deduction_for_aggregates.md.nolink&#34;&gt;集成体クラステンプレートのテンプレート引数推論&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;クラステンプレートのテンプレート引数推論はコンストラクタ引数から推論されるが、集成体初期化からも推論できるようにする&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/enabling_constexpr_intrinsics_by_permitting_unevaluated_inline-assembly_in_constexpr_functions.md.nolink&#34;&gt;constexpr関数内で未評価のインラインアセンブリを許可することによる組み込み関数のconstexpr有効化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;コンパイル時に評価されない場合にconstexpr関数にasm定義を含めることを許可&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/permit_conversions_to_arrays_of_unknown_bound.md.nolink&#34;&gt;要素数不明の配列への変換を許可&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;要素数が判明している配列から、要素数が不明の配列への変換を許可&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/constinit.md.nolink&#34;&gt;コンパイル時初期化を強制する&lt;code&gt;constinit&lt;/code&gt;キーワードを追加&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;初期化のみコンパイル時におわらせたい場合に使用する&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/lang/cpp20/deprecating_volatile.md.nolink&#34;&gt;ほとんどの&lt;code&gt;volatile&lt;/code&gt;を非推奨化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;volatile&lt;/code&gt;の有用な機能のみを残し、効果が疑わしい、または壊れている機能を非推奨化する&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/cpp20/class_template_argument_deduction_for_alias_templates.md.nolink&#34;&gt;エイリアステンプレートに対するクラステンプレートのテンプレート引数推論&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;エイリアステンプレートからクラステンプレートのテンプレート引数を推論できるようにする&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cpprefjp.github.io/cpp20/more_constexpr_containers.md.nolink&#34;&gt;可変サイズをもつコンテナの&lt;code&gt;constexpr&lt;/code&gt;化&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;constexpr&lt;/code&gt;記憶域をもつメモリアロケータの存在を考慮することで、可変サイズをもつコンテナをコンパイル時に使用できるようにする&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;各処理系のC++20実装状況ページ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GCC: &lt;a href=&#34;https://gcc.gnu.org/projects/cxx-status.html#cxx2a&#34; target=&#34;_blank&#34;&gt;C++20 Support in GCC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Clang: &lt;a href=&#34;http://clang.llvm.org/cxx_status.html&#34; target=&#34;_blank&#34;&gt;C++ Support in Clang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;libstdc++: &lt;a href=&#34;https://gcc.gnu.org/onlinedocs/libstdc++/manual/status.html#status.iso.2020&#34; target=&#34;_blank&#34;&gt;C++ 2020 Implementation Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;libc++: &lt;a href=&#34;http://libcxx.llvm.org/cxx2a_status.html&#34; target=&#34;_blank&#34;&gt;libc++ C++2a Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Visual C++ (MSVC):&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/ja-jp/cpp/visual-cpp-language-conformance&#34; target=&#34;_blank&#34;&gt;Visual C++ 言語への準拠&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/STL/wiki/Changelog&#34; target=&#34;_blank&#34;&gt;次リリース情報 - Visual Studio 2019 change log&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
</feed>
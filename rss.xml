<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2024-07-22T12:27:46.394411</updated>
  <id>bde3c73b-7e76-4104-b5f1-e21313006afd</id>

  
    <entry>
      <title>add -- linalg : scaleに例を追加し、addの例を修正 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/add.html"/>
      <id>ab8a6b1eb58e0464d8036fb51396c2a124642157:reference/linalg/add.md</id>
      <updated>2024-07-22T21:24:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/add.md b/reference/linalg/add.md
index d46d89d79..fa172a385 100644
--- a/reference/linalg/add.md
+++ b/reference/linalg/add.md
@@ -81,7 +81,7 @@ $x + y$ を`z`に代入する。
 template &amp;lt;class Vector&amp;gt;
 void print(Vector v) {
   for (int i = 0; i &amp;lt; v.extent(0) - 1; ++i) {
-    std::cout &amp;lt;&amp;lt; v[i] &amp;lt;&amp;lt; &amp;#39;, &amp;#39;;
+    std::cout &amp;lt;&amp;lt; v[i] &amp;lt;&amp;lt; &amp;#34;, &amp;#34;;
   }
   std::cout &amp;lt;&amp;lt; v[v.extent(0) - 1] &amp;lt;&amp;lt; std::endl;
 }
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>scale -- linalg : scaleに例を追加し、addの例を修正 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/scale.html"/>
      <id>ab8a6b1eb58e0464d8036fb51396c2a124642157:reference/linalg/scale.md</id>
      <updated>2024-07-22T21:24:13+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/scale.md b/reference/linalg/scale.md
index 7ce8d8ca2..345b613d2 100644
--- a/reference/linalg/scale.md
+++ b/reference/linalg/scale.md
@@ -48,9 +48,54 @@ $$
 
 
 ## 例
+**[注意] 処理系にあるコンパイラで確認していないため、間違っているかもしれません。**
+
+```cpp example
+#include &amp;lt;cmath&amp;gt;
+#include &amp;lt;execution&amp;gt;
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;linalg&amp;gt;
+#include &amp;lt;mdspan&amp;gt;
+#include &amp;lt;vector&amp;gt;
+
+
+template &amp;lt;class Vector&amp;gt;
+void print(Vector v) {
+  for (int i = 0; i &amp;lt; v.extent(0) - 1; ++i) {
+    std::cout &amp;lt;&amp;lt; v[i] &amp;lt;&amp;lt; &amp;#34;, &amp;#34;;
+  }
+  std::cout &amp;lt;&amp;lt; v[v.extent(0) - 1] &amp;lt;&amp;lt; std::endl;
+}
+
+
+int main()
+{
+  constexpr size_t N = 3;
+
+  std::vector&amp;lt;double&amp;gt; a_vec({1, 2, 3});
+  std::mdspan a(a_vec.data(), N);
+
+  double alpha = 2.0;
+
+  // (1)
+  std::linalg::scale(alpha, a);
+  print(a);
+
+  // (2)
+  std::linalg::scale(std::execution::par, alpha, a);
+  print(a);
+
+  return 0;
+}
+```
+* std::linalg::scale[color ff0000]
 
 
 ### 出力
+```
+2, 4, 6
+4, 8, 12
+```
 
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>println -- fix typo (print -&gt; println)</title>
      <link href="https://cpprefjp.github.io/reference/print/println.html"/>
      <id>8cc238ce20e5136912f1e70f7e426d6cc8b669de:reference/print/println.md</id>
      <updated>2024-07-22T15:31:30+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/print/println.md b/reference/print/println.md
index 542fd0bf0..8fd358046 100644
--- a/reference/print/println.md
+++ b/reference/print/println.md
@@ -31,7 +31,7 @@ namespace std {
 
 この関数は、末尾に改行コードが付くことに注意。改行コードが不要な場合は、[`std::print()`](print.md)関数を使用すること。
 
-[`std::ostream`](/reference/ostream/basic_ostream.md)から派生したクラスオブジェクトに対して出力したい場合は、[`&amp;lt;ostream&amp;gt;`](/reference/ostream.md)ヘッダの[`std::print()`](/reference/ostream/println.md)関数を使用すること。
+[`std::ostream`](/reference/ostream/basic_ostream.md)から派生したクラスオブジェクトに対して出力したい場合は、[`&amp;lt;ostream&amp;gt;`](/reference/ostream.md)ヘッダの[`std::println()`](/reference/ostream/println.md)関数を使用すること。
 
 
 ## 効果
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>I</name>
        <email>1091761+wx257osn2@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>add -- linalg : addに例を追加 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/add.html"/>
      <id>f0a78be45cd326c086c42f313c2669bbf065bf9a:reference/linalg/add.md</id>
      <updated>2024-07-21T16:06:19+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/add.md b/reference/linalg/add.md
index d110d039b..d46d89d79 100644
--- a/reference/linalg/add.md
+++ b/reference/linalg/add.md
@@ -68,9 +68,56 @@ $x + y$ を`z`に代入する。
 
 
 ## 例
+**[注意] 処理系にあるコンパイラで確認していないため、間違っているかもしれません。**
+
+```cpp example
+#include &amp;lt;cmath&amp;gt;
+#include &amp;lt;execution&amp;gt;
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;linalg&amp;gt;
+#include &amp;lt;mdspan&amp;gt;
+#include &amp;lt;vector&amp;gt;
+
+template &amp;lt;class Vector&amp;gt;
+void print(Vector v) {
+  for (int i = 0; i &amp;lt; v.extent(0) - 1; ++i) {
+    std::cout &amp;lt;&amp;lt; v[i] &amp;lt;&amp;lt; &amp;#39;, &amp;#39;;
+  }
+  std::cout &amp;lt;&amp;lt; v[v.extent(0) - 1] &amp;lt;&amp;lt; std::endl;
+}
+
+int main()
+{
+  constexpr size_t N = 3;
+
+  std::vector&amp;lt;double&amp;gt; a_vec({1, 2, 3});
+  std::mdspan a(a_vec.data(), N);
+
+  std::vector&amp;lt;double&amp;gt; b_vec({4, 5, 6});
+  std::mdspan b(b_vec.data(), N);
+
+  std::vector&amp;lt;double&amp;gt; c_vec(N);
+  std::mdspan c(c_vec.data(), N);
+
+  // (1)
+  std::linalg::add(a, b, c);
+  print(c);
+
+  // (2)
+  std::linalg::add(std::execution::par, a, b, c);
+  print(c);
+
+  return 0;
+}
+```
+* std::linalg::add[color ff0000]
 
 
 ### 出力
+```
+5, 7, 9
+5, 7, 9
+```
 
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>dot -- linalg : 不要なヘッダーを削除 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/dot.html"/>
      <id>d035fff53945c2ee8fb4fd006156e74e510f20eb:reference/linalg/dot.md</id>
      <updated>2024-07-20T11:45:00+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/dot.md b/reference/linalg/dot.md
index 32add9a65..7c7ee7e12 100644
--- a/reference/linalg/dot.md
+++ b/reference/linalg/dot.md
@@ -89,7 +89,6 @@ $$
 #include &amp;lt;iostream&amp;gt;
 #include &amp;lt;linalg&amp;gt;
 #include &amp;lt;mdspan&amp;gt;
-#include &amp;lt;numbers&amp;gt;
 #include &amp;lt;vector&amp;gt;
 
 int main()
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>copy -- linalg : copyに例を追加 (#1233)</title>
      <link href="https://cpprefjp.github.io/reference/linalg/copy.html"/>
      <id>f90532b874570b75e1438a8cd4ff0184e3655171:reference/linalg/copy.md</id>
      <updated>2024-07-20T11:43:39+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/linalg/copy.md b/reference/linalg/copy.md
index 668b6ff2c..2948da214 100644
--- a/reference/linalg/copy.md
+++ b/reference/linalg/copy.md
@@ -57,9 +57,58 @@ namespace std::linalg {
 
 
 ## 例
+**[注意] 処理系にあるコンパイラで確認していないため、間違っているかもしれません。**
+
+```cpp example
+#include &amp;lt;cmath&amp;gt;
+#include &amp;lt;execution&amp;gt;
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;linalg&amp;gt;
+#include &amp;lt;mdspan&amp;gt;
+#include &amp;lt;vector&amp;gt;
+
+
+template &amp;lt;class Vector&amp;gt;
+bool IsEqual(Vector a, Vector b) {
+  if (a.extent(0) != b.extent(0)) {
+    return false;
+  }
+  for (int i = 0; i &amp;lt; a.extent(0); ++i) {
+    if (a[i] != b[i]) {
+      return false;
+    }
+  }
+  return true;
+}
+
+
+int main()
+{
+  constexpr size_t N = 3;
+
+  std::vector&amp;lt;double&amp;gt; a_vec({1, 2, 3});
+  std::mdspan a(a_vec.data(), N);
+
+  std::vector&amp;lt;double&amp;gt; b_vec(N);
+  std::mdspan b(b_vec.data(), N);
+
+  // (1)
+  std::linalg::copy(a, b);
+  assert(IsEqual(a, b));
+
+  // (2)
+  std::linalg::copy(std::execution::par, a, b);
+  assert(IsEqual(a, b));
+
+  return 0;
+}
+```
+* std::linalg::copy[color ff0000]
 
 
 ### 出力
+```
+```
 
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Yuya Asano</name>
        <email>64895419+sukeya@users.noreply.github.com</email>
      </author>
    </entry>
  
</feed>
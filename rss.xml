<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2023-10-23T14:40:02.140010</updated>
  <id>c98d46d6-2384-45f2-a819-16dc17e3c7e7</id>

  
    <entry>
      <title>adopt_lock -- LWG2510対応</title>
      <link href="https://cpprefjp.github.io/reference/mutex/adopt_lock.html"/>
      <id>2873c6f3ce31b51a2c42f50a932ee09a005cc7c5:reference/mutex/adopt_lock.md</id>
      <updated>2023-10-20T00:12:17+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/mutex/adopt_lock.md b/reference/mutex/adopt_lock.md
index 98a0e30cc..8ed862e4b 100644
--- a/reference/mutex/adopt_lock.md
+++ b/reference/mutex/adopt_lock.md
@@ -6,7 +6,7 @@
 
 ```cpp
 namespace std {
-  struct adopt_lock_t { };
+  struct adopt_lock_t { explicit adopt_lock_t() = default; };
   constexpr adopt_lock_t adopt_lock { };        // C++11
   inline constexpr adopt_lock_t adopt_lock { }; // C++17
 }
@@ -58,5 +58,4 @@ int main()
 
 
 ## 参照
-
-
+- [LWG Issue 2510. Tag types should not be `DefaultConstructible`](https://cplusplus.github.io/LWG/issue2510)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>defer_lock -- LWG2510対応</title>
      <link href="https://cpprefjp.github.io/reference/mutex/defer_lock.html"/>
      <id>2873c6f3ce31b51a2c42f50a932ee09a005cc7c5:reference/mutex/defer_lock.md</id>
      <updated>2023-10-20T00:12:17+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/mutex/defer_lock.md b/reference/mutex/defer_lock.md
index f602e1b36..9a543c671 100644
--- a/reference/mutex/defer_lock.md
+++ b/reference/mutex/defer_lock.md
@@ -6,7 +6,7 @@
 
 ```cpp
 namespace std {
-  struct defer_lock_t { };
+  struct defer_lock_t { explicit defer_lock_t() = default; };
   constexpr defer_lock_t defer_lock { };        // C++11
   inline constexpr defer_lock_t defer_lock { }; // C++17
 }
@@ -56,5 +56,4 @@ int main()
 
 
 ## 参照
-
-
+- [LWG Issue 2510. Tag types should not be `DefaultConstructible`](https://cplusplus.github.io/LWG/issue2510
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>try_to_lock -- LWG2510対応</title>
      <link href="https://cpprefjp.github.io/reference/mutex/try_to_lock.html"/>
      <id>2873c6f3ce31b51a2c42f50a932ee09a005cc7c5:reference/mutex/try_to_lock.md</id>
      <updated>2023-10-20T00:12:17+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/mutex/try_to_lock.md b/reference/mutex/try_to_lock.md
index 9ac9aae7c..bebb717a2 100644
--- a/reference/mutex/try_to_lock.md
+++ b/reference/mutex/try_to_lock.md
@@ -6,7 +6,7 @@
 
 ```cpp
 namespace std {
-  struct try_to_lock_t { };
+  struct try_to_lock_t { explicit try_to_lock_t() = default; };
   constexpr try_to_lock_t try_to_lock { };        // C++11
   inline constexpr try_to_lock_t try_to_lock { }; // C++17
 }
@@ -62,5 +62,4 @@ int main()
 
 
 ## 参照
-
-
+- [LWG Issue 2510. Tag types should not be `DefaultConstructible`](https://cplusplus.github.io/LWG/issue2510
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>nothrow_t -- LWG2510対応</title>
      <link href="https://cpprefjp.github.io/reference/new/nothrow_t.html"/>
      <id>2873c6f3ce31b51a2c42f50a932ee09a005cc7c5:reference/new/nothrow_t.md</id>
      <updated>2023-10-20T00:12:17+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/new/nothrow_t.md b/reference/new/nothrow_t.md
index 768dbe063..12ed75df6 100644
--- a/reference/new/nothrow_t.md
+++ b/reference/new/nothrow_t.md
@@ -5,7 +5,7 @@
 
 ```cpp
 namespace std {
-  struct nothrow_t {};
+  struct nothrow_t { explicit nothrow_t() = default; };
   extern const nothrow_t nothrow;
 }
 ```
@@ -55,3 +55,6 @@ int main()
 ```
 logic_error: ThrowObj::ThrowObj()
 ```
+
+## 参照
+- [LWG Issue 2510. Tag types should not be `DefaultConstructible`](https://cplusplus.github.io/LWG/issue2510)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
</feed>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2020-10-29T08:41:47.904616</updated>
  <id>14ab6155-cbd7-42aa-accb-a576f385a737</id>

  
    <entry>
      <title>year_month_weekday -- year_month_weekday : 残りを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday.html"/>
      <id>7c40e598b5cc5e9253406a1eb0ab4000e53fecb0:reference/chrono/year_month_weekday.md</id>
      <updated>2020-10-29T17:37:45+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday.md b/reference/chrono/year_month_weekday.md
index bde7796a1..f8fa3c901 100644
--- a/reference/chrono/year_month_weekday.md
+++ b/reference/chrono/year_month_weekday.md
@@ -33,8 +33,8 @@ namespace std::chrono {
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`operator+=`](year_month_weekday/op_plus_assign.md.nolink)  | 加算の複合代入 | C++20 |
-| [`operator-=`](year_month_weekday/op_minus_assign.md.nolink) | 減算の複合代入 | C++20 |
+| [`operator+=`](year_month_weekday/op_plus_assign.md)  | 加算の複合代入 | C++20 |
+| [`operator-=`](year_month_weekday/op_minus_assign.md) | 減算の複合代入 | C++20 |
 
 
 ### 観測
@@ -68,15 +68,15 @@ namespace std::chrono {
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`operator+`](year_month_weekday/op_plus.md.nolink)  | 加算 | C++20 |
-| [`operator-`](year_month_weekday/op_minus.md.nolink) | 減算 | C++20 |
+| [`operator+`](year_month_weekday/op_plus.md)  | 加算 | C++20 |
+| [`operator-`](year_month_weekday/op_minus.md) | 減算 | C++20 |
 
 
 ### 比較演算
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`operator==`](year_month_weekday/op_equal.md.nolink) | 等値比較を行う | C++20 |
+| [`operator==`](year_month_weekday/op_equal.md) | 等値比較を行う | C++20 |
 | `bool operator!=(const year_month_weekday&amp;amp;, const year_month_weekday&amp;amp;) noexcept;` | 非等値比較を行う (`==`により使用可能) | C++20 |
 
 
@@ -84,14 +84,14 @@ namespace std::chrono {
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`operator&amp;lt;&amp;lt;`](year_month_weekday/op_ostream.md.nolink) | 出力ストリームに出力する | C++20 |
+| [`operator&amp;lt;&amp;lt;`](year_month_weekday/op_ostream.md) | 出力ストリームに出力する | C++20 |
 
 
 ## 文字列フォーマット
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`formatter`](year_month_weekday/formatter.md.nolink) | [`std::formatter`](/reference/format/formatter.md)クラスの特殊化 | C++20 |
+| [`formatter`](year_month_weekday/formatter.md) | [`std::formatter`](/reference/format/formatter.md)クラスの特殊化 | C++20 |
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>formatter -- year_month_weekday : 残りを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/formatter.html"/>
      <id>7c40e598b5cc5e9253406a1eb0ab4000e53fecb0:reference/chrono/year_month_weekday/formatter.md</id>
      <updated>2020-10-29T17:37:45+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/formatter.md b/reference/chrono/year_month_weekday/formatter.md
new file mode 100644
index 000000000..a560a3859
--- /dev/null
+++ b/reference/chrono/year_month_weekday/formatter.md
@@ -0,0 +1,61 @@
+# formatter
+* chrono[meta header]
+* std[meta namespace]
+* class[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std {
+  template &amp;lt;class charT&amp;gt;
+  struct formatter&amp;lt;chrono::year_month_weekday, charT&amp;gt;;
+}
+```
+
+## 概要
+`year_month_weekday`クラスに対する[`std::formatter`](/reference/format/formatter.md)クラステンプレートの特殊化。
+
+[`month`](/reference/chrono/month/formatter.md)、[`year`](/reference/chrono/year/formatter.md)で利用可能なフォーマットフラグを使用できる。
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+#include &amp;lt;format&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main() {
+  chrono::year_month_weekday date = 2020y/2/chrono::Sunday[2];
+
+  // デフォルトフォーマットはoperator&amp;lt;&amp;lt;と同じ
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;1 : {}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;2 : {:%Y/%b}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;3 : {:%Y年%m月}&amp;#34;, date) &amp;lt;&amp;lt; std::endl;
+}
+```
+* std::format[link /reference/chrono/format.md]
+* std::locale[link /reference/locale/locale.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+
+### 出力
+```
+1 : 2020/Mar/Sun[2]
+2 : 2020/Mar
+3 : 2020年03月
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): (9.0時点で実装なし)
+- [GCC](/implementation.md#gcc): (9.2時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 関連項目
+- [chronoの`std::format()`](/reference/chrono/format.md) (フォーマットの詳細)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator== -- year_month_weekday : 残りを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/op_equal.html"/>
      <id>7c40e598b5cc5e9253406a1eb0ab4000e53fecb0:reference/chrono/year_month_weekday/op_equal.md</id>
      <updated>2020-10-29T17:37:45+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/op_equal.md b/reference/chrono/year_month_weekday/op_equal.md
new file mode 100644
index 000000000..529a9539b
--- /dev/null
+++ b/reference/chrono/year_month_weekday/op_equal.md
@@ -0,0 +1,68 @@
+# operator==
+* chrono[meta header]
+* std::chrono[meta namespace]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  constexpr bool
+    operator==(const year_month_weekday&amp;amp; x,
+               const year_month_weekday&amp;amp; y) noexcept; // (1) C++20
+}
+```
+
+## 概要
+`year_month_weekday`同士の等値比較を行う。
+
+
+## 戻り値
+- (1) :
+
+```cpp
+return x.year() == y.year() &amp;amp;&amp;amp;
+       x.month() == y.month() &amp;amp;&amp;amp;
+       x.weekday_indexed() == y.weekday_indexed();
+```
+* year()[link year.md]
+* month()[link month.md]
+* weekday_indexed()[link weekday_indexed.md]
+
+
+## 例外
+投げない
+
+
+## 備考
+- この演算子により、`operator!=`が使用可能になる
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  assert(2020y/3/chrono::Sunday[2] == 2020y/3/chrono::Sunday[2]);
+  assert(2020y/3/chrono::Sunday[1] != 2020y/3/chrono::Sunday[2]);
+}
+```
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator- -- year_month_weekday : 残りを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/op_minus.html"/>
      <id>7c40e598b5cc5e9253406a1eb0ab4000e53fecb0:reference/chrono/year_month_weekday/op_minus.md</id>
      <updated>2020-10-29T17:37:45+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/op_minus.md b/reference/chrono/year_month_weekday/op_minus.md
new file mode 100644
index 000000000..f04128062
--- /dev/null
+++ b/reference/chrono/year_month_weekday/op_minus.md
@@ -0,0 +1,63 @@
+# operator-
+* chrono[meta header]
+* std::chrono[meta namespace]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  constexpr year_month_weekday
+    operator-(const year_month_weekday&amp;amp; ymwd,
+              const months&amp;amp; dm) noexcept;     // (1) C++20
+  constexpr year_month_weekday
+    operator-(const year_month_weekday&amp;amp; ymwd,
+              const years&amp;amp; dy) noexcept;      // (2) C++20
+}
+```
+
+## 概要
+`year_month_weekday`の減算を行う。
+
+- (1) : `year_month_weekday`から月の時間間隔を減算する
+- (2) : `year_month_weekday`から年の時間間隔を減算する
+
+
+## 戻り値
+- (1) : `return ymwd + (-dm);`
+- (2) : `return ymwd + (-dy);`
+
+
+## 例外
+投げない
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  assert(2020y/4/chrono::Sunday[2] - chrono::months{1} == 2020y/3/chrono::Sunday[2]);
+  assert(2021y/3/chrono::Sunday[2] - chrono::years{1} == 2020y/3/chrono::Sunday[2]);
+}
+```
+* 2020y[link /reference/chrono/year/op_y.md]
+* 2021y[link /reference/chrono/year/op_y.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator-= -- year_month_weekday : 残りを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/op_minus_assign.html"/>
      <id>7c40e598b5cc5e9253406a1eb0ab4000e53fecb0:reference/chrono/year_month_weekday/op_minus_assign.md</id>
      <updated>2020-10-29T17:37:45+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/op_minus_assign.md b/reference/chrono/year_month_weekday/op_minus_assign.md
new file mode 100644
index 000000000..a33bb4b5f
--- /dev/null
+++ b/reference/chrono/year_month_weekday/op_minus_assign.md
@@ -0,0 +1,70 @@
+# operator-=
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_weekday[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr year_month_day&amp;amp; operator-=(const months&amp;amp; m) noexcept; // (1) C++20
+constexpr year_month_day&amp;amp; operator-=(const years&amp;amp; y) noexcept;  // (2) C++20
+```
+
+## 概要
+`year_month_weekday`の値に対して減算の複合代入を行う。
+
+- (1) : 月の時間間隔を減算する
+- (2) : 年の時間間隔を減算する
+
+パラメータの型が、カレンダー時間の[`month`](/reference/chrono/month.md)、[`year`](/reference/chrono/year.md)ではなく、時間間隔を表す[`months`](/reference/chrono/duration_aliases.md)、[`years`](/reference/chrono/duration_aliases.md)であることに注意。
+
+
+## 効果
+- (1) : `*this = *this - m`
+- (2) : `*this = *this - y`
+
+
+## 戻り値
+- (1), (2) : `*this`
+
+
+## 例外
+投げない
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::year_month_weekday date = 2021y/4/chrono::Sunday[2];
+
+  date -= chrono::months{1}; // 1ヶ月戻す
+  date -= chrono::years{1};  // 1年戻す
+
+  assert(chrono::year_month_day{chrono::sys_days{date}} == 2020y/3/8);
+}
+```
+* 2019y[link /reference/chrono/year/op_y.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* chrono::year_month_day[link /reference/chrono/year_month_day.md]
+* chrono::sys_days[link /reference/chrono/sys_time.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;&lt; -- year_month_weekday : 残りを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/op_ostream.html"/>
      <id>7c40e598b5cc5e9253406a1eb0ab4000e53fecb0:reference/chrono/year_month_weekday/op_ostream.md</id>
      <updated>2020-10-29T17:37:45+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/op_ostream.md b/reference/chrono/year_month_weekday/op_ostream.md
new file mode 100644
index 000000000..fb08f16a5
--- /dev/null
+++ b/reference/chrono/year_month_weekday/op_ostream.md
@@ -0,0 +1,65 @@
+# operator&amp;lt;&amp;lt;
+* chrono[meta header]
+* std::chrono[meta namespace]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  template &amp;lt;class charT, class traits&amp;gt;
+  std::basic_ostream&amp;lt;charT, traits&amp;gt;&amp;amp;
+    operator&amp;lt;&amp;lt;(std::basic_ostream&amp;lt;charT, traits&amp;gt;&amp;amp; os, const year_month_weekday&amp;amp; ymwd); // (1) C++20
+}
+```
+
+## 概要
+`year_month_weekday`オブジェクトを出力ストリームに出力する。
+
+
+## 戻り値
+便宜上のリテラルキャスト`STATICALLY-WIDEN`を導入する。`STATICALLY-WIDEN&amp;lt;charT&amp;gt;(&amp;#34;...&amp;#34;)`は、`charT`が`char`である場合は`&amp;#34;...&amp;#34;`、`charT`が`wchar_t`である場合は`L&amp;#34;...&amp;#34;`を意味する。
+
+- (1) : 以下と等価：
+    ```cpp
+    return os &amp;lt;&amp;lt; format(STATICALLY-WIDEN&amp;lt;charT&amp;gt;(&amp;#34;{}/{}/{}&amp;#34;),
+                        ymwd.year(), ymwd.month(), ymwd.weekday_indexed());
+    ```
+    * format[link /reference/format/format.md]
+    * ymwd.year()[link year.md]
+    * ymwd.month()[link month.md]
+    * ymwd.weekday_indexed()[link weekday_indexed.md]
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  std::cout &amp;lt;&amp;lt; 2020y/3/chrono::Sunday[2] &amp;lt;&amp;lt; std::endl;
+}
+```
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+
+### 出力
+```
+2020/Mar/Sun[2]
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): (9.0時点で実装なし)
+- [GCC](/implementation.md#gcc): (9.2時点で実装なし)
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+
+## 関連項目
+- [chronoの`std::format()`](/reference/chrono/format.md) (フォーマットの詳細)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator+ -- year_month_weekday : 残りを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/op_plus.html"/>
      <id>7c40e598b5cc5e9253406a1eb0ab4000e53fecb0:reference/chrono/year_month_weekday/op_plus.md</id>
      <updated>2020-10-29T17:37:45+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/op_plus.md b/reference/chrono/year_month_weekday/op_plus.md
new file mode 100644
index 000000000..f45bc760b
--- /dev/null
+++ b/reference/chrono/year_month_weekday/op_plus.md
@@ -0,0 +1,100 @@
+# operator+
+* chrono[meta header]
+* std::chrono[meta namespace]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+namespace std::chrono {
+  constexpr year_month_weekday
+    operator+(const year_month_weekday&amp;amp; ymwd,
+              const months&amp;amp; dm) noexcept;               // (1) C++20
+  constexpr year_month_weekday
+    operator+(const months&amp;amp; dm,
+              const year_month_weekday&amp;amp; ymwd) noexcept; // (2) C++20
+
+  constexpr year_month_weekday
+    operator+(const year_month_weekday&amp;amp; ymwd,
+              const years&amp;amp; dy) noexcept;                // (3) C++20
+  constexpr year_month_weekday
+    operator+(const years&amp;amp; dy,
+              const year_month_weekday&amp;amp; ymwd) noexcept; // (4) C++20
+}
+```
+
+## 概要
+`year_month_weekday`の加算を行う。
+
+- (1) : `year_month_weekday`に月の時間間隔を加算する
+- (2) : 月の時間間隔に`year_month_weekday`を加算する
+- (3) : `year_month_weekday`に年の時間間隔を加算する
+- (4) : 年の時間間隔に`year_month_weekday`を加算する
+
+
+## 戻り値
+- (1) :
+
+```cpp
+return (ymwd.year() / ymwd.month() + dm) / ymwd.weekday_indexed();
+```
+* ymwd.year()[link year.md]
+* ymwd.month()[link month.md]
+* ymwd.weekday_indexed()[link weekday_indexed.md]
+
+
+- (2) :
+
+```cpp
+return ymwd + dm;
+```
+
+- (3) :
+
+```cpp
+return (ymwd.year() + dy) / ywmd.month() / ywmd.weekday_indexed();
+```
+* ymwd.year()[link year.md]
+* ymwd.month()[link month.md]
+* ymwd.weekday_indexed()[link weekday_indexed.md]
+
+- (4) :
+
+```cpp
+return ymwd + dy;
+```
+
+
+## 例外
+投げない
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  assert(2020y/2/chrono::Sunday[2] + chrono::months{1} == 2020y/3/chrono::Sunday[2]);
+  assert(2019y/3/chrono::Sunday[2] + chrono::years{1} == 2020y/3/chrono::Sunday[2]);
+}
+```
+* 2019y[link /reference/chrono/year/op_y.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator+= -- year_month_weekday : 残りを追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/op_plus_assign.html"/>
      <id>7c40e598b5cc5e9253406a1eb0ab4000e53fecb0:reference/chrono/year_month_weekday/op_plus_assign.md</id>
      <updated>2020-10-29T17:37:45+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/op_plus_assign.md b/reference/chrono/year_month_weekday/op_plus_assign.md
new file mode 100644
index 000000000..48ffb12c3
--- /dev/null
+++ b/reference/chrono/year_month_weekday/op_plus_assign.md
@@ -0,0 +1,70 @@
+# operator+=
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_weekday[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr year_month_weekday&amp;amp; operator+=(const months&amp;amp; m) noexcept; // (1) C++20
+constexpr year_month_weekday&amp;amp; operator+=(const years&amp;amp; y) noexcept;  // (2) C++20
+```
+
+## 概要
+`year_month_weekday`の値に対して加算の複合代入を行う。
+
+- (1) : 月の時間間隔を加算する
+- (2) : 年の時間間隔を加算する
+
+パラメータの型が、カレンダー時間の[`month`](/reference/chrono/month.md)、[`year`](/reference/chrono/year.md)ではなく、時間間隔を表す[`months`](/reference/chrono/duration_aliases.md)、[`years`](/reference/chrono/duration_aliases.md)であることに注意。
+
+
+## 効果
+- (1) : `*this = *this + m`
+- (2) : `*this = *this + y`
+
+
+## 戻り値
+- (1), (2) : `*this`
+
+
+## 例外
+投げない
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::year_month_weekday date = 2019y/2/chrono::Sunday[2];
+
+  date += chrono::months{1}; // 1ヶ月進める
+  date += chrono::years{1};  // 1年進める
+
+  assert(chrono::year_month_day{chrono::sys_days{date}} == 2020y/3/8);
+}
+```
+* 2019y[link /reference/chrono/year/op_y.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* chrono::year_month_day[link /reference/chrono/year_month_day.md]
+* chrono::sys_days[link /reference/chrono/sys_time.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator local_days -- year_month_weekday 型変換 : indexについて概要にも記載</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/op_local_days.html"/>
      <id>2d44e0492261ae033d22a63809902dc08f830fd7:reference/chrono/year_month_weekday/op_local_days.md</id>
      <updated>2020-10-28T18:38:19+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/op_local_days.md b/reference/chrono/year_month_weekday/op_local_days.md
index f8a3cce1f..2a6d3a91f 100644
--- a/reference/chrono/year_month_weekday/op_local_days.md
+++ b/reference/chrono/year_month_weekday/op_local_days.md
@@ -42,6 +42,9 @@ int main()
 
   chrono::local_days date3{2020y/3/chrono::Sunday[0]};
   assert(chrono::year_month_day{date3} == 2020y/2/23);
+
+  chrono::local_days date4{2020y/3/chrono::Sunday[10]};
+  assert(chrono::year_month_day{date4} == 2020y/5/3);
 }
 ```
 * chrono::local_days[link /reference/chrono/local_time.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator sys_days -- year_month_weekday 型変換 : indexについて概要にも記載</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/op_sys_days.html"/>
      <id>2d44e0492261ae033d22a63809902dc08f830fd7:reference/chrono/year_month_weekday/op_sys_days.md</id>
      <updated>2020-10-28T18:38:19+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/op_sys_days.md b/reference/chrono/year_month_weekday/op_sys_days.md
index 4150654e7..1ceb211cf 100644
--- a/reference/chrono/year_month_weekday/op_sys_days.md
+++ b/reference/chrono/year_month_weekday/op_sys_days.md
@@ -13,6 +13,8 @@ constexpr operator sys_days() const noexcept; // (1) C++20
 ## 概要
 `year_month_weekday`オブジェクトをシステム時間の日付に、暗黙に型変換する。
 
+この関数では、N回目の曜日のNは月内である必要はなく、N == 0の場合は「1週目の指定した曜日の7日前」を意味し、N &amp;gt; 0の場合は「1週目の指定した曜日から(N - 1) * 7日を加算した日付」を意味し任意にNを大きく指定できる。
+
 
 ## 戻り値
 - [`year()`](year.md)`.`[`ok()`](/reference/chrono/year/ok.md) `&amp;amp;&amp;amp;` [`month()`](month.md)`.`[`ok()`](/reference/chrono/month/ok.md) `&amp;amp;&amp;amp;` [`weekday()`](weekday.md)`.`[`ok()`](/reference/chrono/weekday/ok.md)が`true`である場合、[`year()`](year.md)`/`[`month()`](month.md)の最初の[`weekday()`](weekday.md)の`(`[`index()`](index.md) `- 1) * 7`日後を表す[`sys_days`](/reference/chrono/sys_time.md)を返す
@@ -38,6 +40,9 @@ int main()
 
   chrono::sys_days date3 = 2020y/3/chrono::Sunday[0];
   assert(chrono::year_month_day{date3} == 2020y/2/23);
+
+  chrono::sys_days date4 = 2020y/3/chrono::Sunday[10];
+  assert(chrono::year_month_day{date4} == 2020y/5/3);
 }
 ```
 * chrono::sys_days[link /reference/chrono/sys_time.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>year_month_weekday -- year_month_weekday : sys_daysとlocal_daysへの型変換演算子を追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday.html"/>
      <id>1b9c361e32f43d3c6c2b56243e5d9519226cfd38:reference/chrono/year_month_weekday.md</id>
      <updated>2020-10-28T18:02:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday.md b/reference/chrono/year_month_weekday.md
index 68928aa78..bde7796a1 100644
--- a/reference/chrono/year_month_weekday.md
+++ b/reference/chrono/year_month_weekday.md
@@ -52,8 +52,8 @@ namespace std::chrono {
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`operator sys_days`](year_month_weekday/op_sys_days.md.nolink)     | システム時間の日付への型変換演算子 | C++20 |
-| [`operator local_days`](year_month_weekday/op_local_days.md.nolink) | ローカル時間の日付への型変換演算子 | C++20 |
+| [`operator sys_days`](year_month_weekday/op_sys_days.md)     | システム時間の日付への型変換演算子 | C++20 |
+| [`operator local_days`](year_month_weekday/op_local_days.md) | ローカル時間の日付への型変換演算子 | C++20 |
 
 
 ### 検証
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator local_days -- year_month_weekday : sys_daysとlocal_daysへの型変換演算子を追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/op_local_days.html"/>
      <id>1b9c361e32f43d3c6c2b56243e5d9519226cfd38:reference/chrono/year_month_weekday/op_local_days.md</id>
      <updated>2020-10-28T18:02:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/op_local_days.md b/reference/chrono/year_month_weekday/op_local_days.md
new file mode 100644
index 000000000..f8a3cce1f
--- /dev/null
+++ b/reference/chrono/year_month_weekday/op_local_days.md
@@ -0,0 +1,71 @@
+# operator local_days
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_weekday[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr explicit operator local_days() const noexcept; // (1) C++20
+```
+* local_days[link /reference/chrono/local_time.md]
+
+## 概要
+`year_month_weekday`オブジェクトをローカル時間の日付に、明示的に型変換する。
+
+
+## 戻り値
+```cpp
+return local_days{sys_days{*this}.time_since_epoch()};
+```
+* local_days[link /reference/chrono/local_time.md]
+* sys_days[link /reference/chrono/sys_time.md]
+* time_since_epoch()[link /reference/chrono/time_point/time_since_epoch.md]
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  // year_month_dayからlocal_daysへの暗黙変換
+  chrono::local_days date1{2020y/3/chrono::Sunday[1]};
+  assert(chrono::year_month_day{date1} == 2020y/3/1);
+
+  chrono::local_days date2{2020y/3/chrono::Sunday[2]};
+  assert(chrono::year_month_day{date2} == 2020y/3/8);
+
+  chrono::local_days date3{2020y/3/chrono::Sunday[0]};
+  assert(chrono::year_month_day{date3} == 2020y/2/23);
+}
+```
+* chrono::local_days[link /reference/chrono/local_time.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* chrono::year_month_day[link /reference/chrono/year_month_day.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+#### 備考
+- GCC 11のtrunkバージョンでは`index() == 0`の場合に間違った値が返る。正式リリース時には直っている可能性がある
+    - [Bug 97613 - `chrono::year_month_weekday` cast to `sys_days` : return bad value if `index() == 0`](https://gcc.gnu.org/bugzilla/show_bug.cgi?id=97613)
+
+
+## 関連項目
+- [`operator sys_days`](op_sys_days.md)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator sys_days -- year_month_weekday : sys_daysとlocal_daysへの型変換演算子を追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/op_sys_days.html"/>
      <id>1b9c361e32f43d3c6c2b56243e5d9519226cfd38:reference/chrono/year_month_weekday/op_sys_days.md</id>
      <updated>2020-10-28T18:02:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/op_sys_days.md b/reference/chrono/year_month_weekday/op_sys_days.md
new file mode 100644
index 000000000..4150654e7
--- /dev/null
+++ b/reference/chrono/year_month_weekday/op_sys_days.md
@@ -0,0 +1,63 @@
+# operator sys_days
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_weekday[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr operator sys_days() const noexcept; // (1) C++20
+```
+* sys_days[link /reference/chrono/sys_time.md]
+
+## 概要
+`year_month_weekday`オブジェクトをシステム時間の日付に、暗黙に型変換する。
+
+
+## 戻り値
+- [`year()`](year.md)`.`[`ok()`](/reference/chrono/year/ok.md) `&amp;amp;&amp;amp;` [`month()`](month.md)`.`[`ok()`](/reference/chrono/month/ok.md) `&amp;amp;&amp;amp;` [`weekday()`](weekday.md)`.`[`ok()`](/reference/chrono/weekday/ok.md)が`true`である場合、[`year()`](year.md)`/`[`month()`](month.md)の最初の[`weekday()`](weekday.md)の`(`[`index()`](index.md) `- 1) * 7`日後を表す[`sys_days`](/reference/chrono/sys_time.md)を返す
+- [`index()`](index.md)が`0`である場合、[`year()`](year.md)`/`[`month()`](month.md)の最初の[`weekday()`](weekday.md)の7日前の日付を表す[`sys_days`](/reference/chrono/sys_time.md)を返す
+- そうでない場合、未規定の値を返す
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::sys_days date1 = 2020y/3/chrono::Sunday[1];
+  assert(chrono::year_month_day{date1} == 2020y/3/1);
+
+  chrono::sys_days date2 = 2020y/3/chrono::Sunday[2];
+  assert(chrono::year_month_day{date2} == 2020y/3/8);
+
+  chrono::sys_days date3 = 2020y/3/chrono::Sunday[0];
+  assert(chrono::year_month_day{date3} == 2020y/2/23);
+}
+```
+* chrono::sys_days[link /reference/chrono/sys_time.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* chrono::year_month_day[link /reference/chrono/year_month_day.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+#### 備考
+- GCC 11のtrunkバージョンでは`index() == 0`の場合に間違った値が返る。正式リリース時には直っている可能性がある
+    - [Bug 97613 - `chrono::year_month_weekday` cast to `sys_days` : return bad value if `index() == 0`](https://gcc.gnu.org/bugzilla/show_bug.cgi?id=97613)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- year_month_weekdayのコンストラクタ : 仕様の変数名ミスを修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/op_constructor.html"/>
      <id>3dca3a22fbceadcda4d9c536cd916b672c495849:reference/chrono/year_month_weekday/op_constructor.md</id>
      <updated>2020-10-28T17:01:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/op_constructor.md b/reference/chrono/year_month_weekday/op_constructor.md
index 37d6f7a55..1498edf33 100644
--- a/reference/chrono/year_month_weekday/op_constructor.md
+++ b/reference/chrono/year_month_weekday/op_constructor.md
@@ -48,7 +48,7 @@ year_month_weekday(year_month_weekday&amp;amp;&amp;amp;) = default;      // (6) C++20
 
 
 ## 備考
-- (3) : `year_month_weekday`クラスのあらゆる値`ymdl`について、`ymdl.`[`ok()`](ok.md)が`true`である値はすべて、`ymdl == year_month_weekday{sys_days{ymdl}}`が`true`となる
+- (3) : `year_month_weekday`クラスのあらゆる値`ymwd`について、`ymwd.`[`ok()`](ok.md)が`true`である値はすべて、`ymwd == year_month_weekday{sys_days{ymwd}}`が`true`となる
 
 
 ### 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- year_month_weekday : リンクミス、コピペミスを修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/op_constructor.html"/>
      <id>cda03d26308d83080e635d709931526526dc5adb:reference/chrono/year_month_weekday/op_constructor.md</id>
      <updated>2020-10-27T17:25:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/op_constructor.md b/reference/chrono/year_month_weekday/op_constructor.md
index ba516f07a..37d6f7a55 100644
--- a/reference/chrono/year_month_weekday/op_constructor.md
+++ b/reference/chrono/year_month_weekday/op_constructor.md
@@ -24,8 +24,8 @@ year_month_weekday(year_month_weekday&amp;amp;&amp;amp;) = default;      // (6) C++20
 * chrono::year[link /reference/chrono/year.md]
 * chrono::month[link /reference/chrono/month.md]
 * chrono::weekday_indexed[link /reference/chrono/weekday_indexed.md]
-* sys_days[link /reference/chrono/sys_days.md]
-* local_days[link /reference/chrono/local_days.md]
+* sys_days[link /reference/chrono/sys_time.md]
+* local_days[link /reference/chrono/local_time.md]
 
 ## 概要
 - (1) : デフォルトコンストラクタ
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>weekday_indexed -- year_month_weekday : リンクミス、コピペミスを修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/weekday_indexed.html"/>
      <id>cda03d26308d83080e635d709931526526dc5adb:reference/chrono/year_month_weekday/weekday_indexed.md</id>
      <updated>2020-10-27T17:25:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/weekday_indexed.md b/reference/chrono/year_month_weekday/weekday_indexed.md
new file mode 100644
index 000000000..a4b6aa9b4
--- /dev/null
+++ b/reference/chrono/year_month_weekday/weekday_indexed.md
@@ -0,0 +1,52 @@
+# weekday_indexed
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_weekday[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr chrono::weekday_indexed weekday_indexed() const noexcept; // (1) C++20
+```
+* chrono::weekday_indexed[link /reference/chrono/weekday_indexed.md]
+
+## 概要
+N回目の曜日要素を取得する。
+
+
+## 戻り値
+コンストラクタで設定されて保持しているN回目の曜日オブジェクトを返す。
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::year_month_weekday date = 2020y/3/chrono::Sunday[2];
+  chrono::weekday_indexed wdi = date.weekday_indexed();
+  assert(wdi == chrono::Sunday[2]);
+}
+```
+* date.weekday_indexed()[color ff0000]
+* chrono::weekday_indexed[link /reference/chrono/weekday_indexed.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
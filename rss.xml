<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="http://cpprefjp.github.io" />
  <updated>2016-06-13T14:29:21.429275</updated>
  <id>d39ba18b-722a-4e4d-8518-87cb639e90d5</id>

  
    <entry>
      <title>cfenv -- &lt;cfenv&gt; : ORの演算子が &amp; になっていたので、 | に修正</title>
      <link href="http://cpprefjp.github.io/reference/cfenv.html"/>
      <id>b4b31d0ccf1eea0810ccac110cd50d081973780e:reference/cfenv.md</id>
      <updated>2016-06-13 14:27:08 +0900</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;cfenv&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;cfenv&lt;span class=&#34;cpp cpp11&#34; title=&#34;C++11で追加&#34;&gt;(C++11)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;cfenv&amp;gt;&lt;/code&gt;ヘッダでは、浮動小数点環境にアクセスするための機能が定義される。&lt;/p&gt;
&lt;p&gt;このヘッダは、IEC 60559 (IEEE 754)で定義される浮動小数点例外の状態フラグを管理することを目的として設計されている。「浮動小数点例外の状態フラグ」は、浮動小数点例外の発生によって設定されるシステム変数である。&lt;/p&gt;
&lt;p&gt;浮動小数点環境はスレッドローカル記憶域を持ち、その初期状態は、スレッドを作成したときの浮動小数点環境の状態が設定される。&lt;/p&gt;
&lt;p&gt;プログラム起動時、浮動小数点環境は以下のように初期化される :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;浮動小数点例外の全ての状態がクリアされる&lt;/li&gt;
&lt;li&gt;浮動小数点数の丸めモードは「最も近い値への丸め」となる&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;浮動小数点環境&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fenv_t&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;浮動小数点環境の状態を表す型 (typedef)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fegetenv&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;現在の浮動小数点環境を取得する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fesetenv&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;浮動小数点環境を設定する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;feholdexcept&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;現在の浮動小数点環境を保存する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;feupdateenv&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;現在発生している浮動小数点例外を保存する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;浮動小数点環境マクロ&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_DFL_ENV&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;デフォルトの浮動小数点環境 (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;浮動小数点例外&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fexcept_t&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;浮動小数点例外の状態フラグを表す整数型 (typedef)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;feclearexcept&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定された浮動小数点例外をクリアする (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cfenv/fegetexceptflag.html&#34;&gt;fegetexceptflag&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;浮動小数点例外の現在の状態を、実装定義の表現で取得する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fesetexceptflag&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;浮動小数点例外を発生させずに、浮動小数点例外の状態を設定する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;feraiseexcept&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定された浮動小数点例外を発生させる (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cfenv/fetestexcept.html&#34;&gt;fetestexcept&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定された浮動小数点例外が設定されるかを判定する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;浮動小数点例外マクロ&lt;/h3&gt;
&lt;p&gt;以下のマクロは、浮動小数点例外の状態を表すビット値である。これらのマクロは、AND (&lt;code&gt;&amp;amp;&lt;/code&gt;) や OR (&lt;code&gt;|&lt;/code&gt;)を使用して、複数のマクロを組み合わせて使用できる。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_ALL_EXCEPT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;全ての浮動小数点例外 (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_DIVBYZERO&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ゼロ除算 (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_INEXACT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;不正確な結果 (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_INVALID&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;不正な演算 (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_OVERFLOW&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;オーバーフロー (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_UNDERFLOW&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;アンダーフロー (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;浮動小数点丸め&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fegetround&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;現在の丸め方式を取得する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fesetround&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;丸め方式を設定する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;浮動小数点丸めマクロ&lt;/h3&gt;
&lt;p&gt;以下のマクロは、浮動小数点の丸めがどのような方式で行われるかを表す。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_DOWNWARD&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;負の無限大方向への丸め (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_TONEAREST&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;最も近い値への丸め (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_TOWARDZERO&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ゼロ方向への丸め (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_UPWARD&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;正の無限大方向への丸め (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;関連項目&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath.html&#34;&gt;&amp;lt;cmath&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>cfenv -- fegetexceptflagを追加</title>
      <link href="http://cpprefjp.github.io/reference/cfenv.html"/>
      <id>d69364ad224db1a5cbb04648319cc9bd2a48c2fa:reference/cfenv.md</id>
      <updated>2016-06-10 17:18:02 +0900</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;cfenv&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;cfenv&lt;span class=&#34;cpp cpp11&#34; title=&#34;C++11で追加&#34;&gt;(C++11)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;cfenv&amp;gt;&lt;/code&gt;ヘッダでは、浮動小数点環境にアクセスするための機能が定義される。&lt;/p&gt;
&lt;p&gt;このヘッダは、IEC 60559 (IEEE 754)で定義される浮動小数点例外の状態フラグを管理することを目的として設計されている。「浮動小数点例外の状態フラグ」は、浮動小数点例外の発生によって設定されるシステム変数である。&lt;/p&gt;
&lt;p&gt;浮動小数点環境はスレッドローカル記憶域を持ち、その初期状態は、スレッドを作成したときの浮動小数点環境の状態が設定される。&lt;/p&gt;
&lt;p&gt;プログラム起動時、浮動小数点環境は以下のように初期化される :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;浮動小数点例外の全ての状態がクリアされる&lt;/li&gt;
&lt;li&gt;浮動小数点数の丸めモードは「最も近い値への丸め」となる&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;浮動小数点環境&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fenv_t&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;浮動小数点環境の状態を表す型 (typedef)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fegetenv&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;現在の浮動小数点環境を取得する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fesetenv&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;浮動小数点環境を設定する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;feholdexcept&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;現在の浮動小数点環境を保存する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;feupdateenv&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;現在発生している浮動小数点例外を保存する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;浮動小数点環境マクロ&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_DFL_ENV&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;デフォルトの浮動小数点環境 (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;浮動小数点例外&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fexcept_t&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;浮動小数点例外の状態フラグを表す整数型 (typedef)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;feclearexcept&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定された浮動小数点例外をクリアする (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cfenv/fegetexceptflag.html&#34;&gt;fegetexceptflag&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;浮動小数点例外の現在の状態を、実装定義の表現で取得する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fesetexceptflag&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;浮動小数点例外を発生させずに、浮動小数点例外の状態を設定する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;feraiseexcept&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定された浮動小数点例外を発生させる (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cfenv/fetestexcept.html&#34;&gt;fetestexcept&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定された浮動小数点例外が設定されるかを判定する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;浮動小数点例外マクロ&lt;/h3&gt;
&lt;p&gt;以下のマクロは、浮動小数点例外の状態を表すビット値である。これらのマクロは、AND (&amp;amp;) や OR (&amp;amp;)を使用して、複数のマクロを組み合わせて使用できる。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_ALL_EXCEPT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;全ての浮動小数点例外 (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_DIVBYZERO&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ゼロ除算 (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_INEXACT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;不正確な結果 (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_INVALID&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;不正な演算 (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_OVERFLOW&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;オーバーフロー (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_UNDERFLOW&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;アンダーフロー (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;浮動小数点丸め&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fegetround&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;現在の丸め方式を取得する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fesetround&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;丸め方式を設定する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;浮動小数点丸めマクロ&lt;/h3&gt;
&lt;p&gt;以下のマクロは、浮動小数点の丸めがどのような方式で行われるかを表す。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_DOWNWARD&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;負の無限大方向への丸め (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_TONEAREST&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;最も近い値への丸め (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_TOWARDZERO&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ゼロ方向への丸め (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_UPWARD&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;正の無限大方向への丸め (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;関連項目&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath.html&#34;&gt;&amp;lt;cmath&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>fegetexceptflag -- fegetexceptflagを追加</title>
      <link href="http://cpprefjp.github.io/reference/cfenv/fegetexceptflag.html"/>
      <id>d69364ad224db1a5cbb04648319cc9bd2a48c2fa:reference/cfenv/fegetexceptflag.md</id>
      <updated>2016-06-10 17:18:02 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;function&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;cfenv&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;fegetexceptflag&lt;span class=&#34;cpp cpp11&#34; title=&#34;C++11で追加&#34;&gt;(C++11)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fegetexceptflag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;fexcept_t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;flagp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;excepts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;浮動小数点例外の現在の状態を、実装定義の表現で取得する。&lt;/p&gt;
&lt;p&gt;この関数は、現在発生している浮動小数点例外のうち、指定された例外の集合のみを抽出して、実装定義の表現に変換して返す。&lt;/p&gt;
&lt;h2&gt;効果&lt;/h2&gt;
&lt;p&gt;ビット演算のORで複数指定された浮動小数点例外の種類&lt;code&gt;excepts&lt;/code&gt;の例外発生状態を、実装定義の表現に変換して&lt;code&gt;flagp&lt;/code&gt;に書き込んで返す。&lt;/p&gt;
&lt;h2&gt;戻り値&lt;/h2&gt;
&lt;p&gt;実装定義の表現への変換および書き込みに成功したら&lt;code&gt;0&lt;/code&gt;、そうでなければ&lt;code&gt;0&lt;/code&gt;以外の値を返す。&lt;/p&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;c1&#34;&gt;// 標準C++の浮動小数点例外を、&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// Visual C++での浮動小数点例外の形式に変換する&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;cfenv&amp;gt;&lt;/span&gt;

&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kt&#34;&gt;float&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;1.0f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;kt&#34;&gt;float&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.0f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;kt&#34;&gt;float&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;fexcept_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;excepts&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;&lt;span style=&#34;color:#ff0000&#34;&gt;std::fegetexceptflag&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;excepts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FE_ALL_EXCEPT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;excepts&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_SW_ZERODIVIDE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&#34;zero divided&#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;出力例&lt;/h2&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;zero divided
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang, C++11 mode&lt;/a&gt;: 3.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++11 mode&lt;/a&gt;: 4.3.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;: 12.0&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>cfenv -- fetestexceptを追加</title>
      <link href="http://cpprefjp.github.io/reference/cfenv.html"/>
      <id>3e652e11189b6723ca1901087818085920ddf24b:reference/cfenv.md</id>
      <updated>2016-06-10 16:58:18 +0900</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;cfenv&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;cfenv&lt;span class=&#34;cpp cpp11&#34; title=&#34;C++11で追加&#34;&gt;(C++11)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;cfenv&amp;gt;&lt;/code&gt;ヘッダでは、浮動小数点環境にアクセスするための機能が定義される。&lt;/p&gt;
&lt;p&gt;このヘッダは、IEC 60559 (IEEE 754)で定義される浮動小数点例外の状態フラグを管理することを目的として設計されている。「浮動小数点例外の状態フラグ」は、浮動小数点例外の発生によって設定されるシステム変数である。&lt;/p&gt;
&lt;p&gt;浮動小数点環境はスレッドローカル記憶域を持ち、その初期状態は、スレッドを作成したときの浮動小数点環境の状態が設定される。&lt;/p&gt;
&lt;p&gt;プログラム起動時、浮動小数点環境は以下のように初期化される :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;浮動小数点例外の全ての状態がクリアされる&lt;/li&gt;
&lt;li&gt;浮動小数点数の丸めモードは「最も近い値への丸め」となる&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;浮動小数点環境&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fenv_t&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;浮動小数点環境の状態を表す型 (typedef)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fegetenv&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;現在の浮動小数点環境を取得する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fesetenv&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;浮動小数点環境を設定する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;feholdexcept&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;現在の浮動小数点環境を保存する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;feupdateenv&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;現在発生している浮動小数点例外を保存する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;浮動小数点環境マクロ&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_DFL_ENV&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;デフォルトの浮動小数点環境 (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;浮動小数点例外&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fexcept_t&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;浮動小数点例外の状態フラグを表す整数型 (typedef)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;feclearexcept&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定された浮動小数点例外をクリアする (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fegetexceptflag&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;浮動小数点例外の現在の状態を、実装定義の表現で取得する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fesetexceptflag&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;浮動小数点例外を発生させずに、浮動小数点例外の状態を設定する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;feraiseexcept&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定された浮動小数点例外を発生させる (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cfenv/fetestexcept.html&#34;&gt;fetestexcept&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定された浮動小数点例外が設定されるかを判定する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;浮動小数点例外マクロ&lt;/h3&gt;
&lt;p&gt;以下のマクロは、浮動小数点例外の状態を表すビット値である。これらのマクロは、AND (&amp;amp;) や OR (&amp;amp;)を使用して、複数のマクロを組み合わせて使用できる。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_ALL_EXCEPT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;全ての浮動小数点例外 (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_DIVBYZERO&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ゼロ除算 (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_INEXACT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;不正確な結果 (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_INVALID&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;不正な演算 (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_OVERFLOW&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;オーバーフロー (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_UNDERFLOW&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;アンダーフロー (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;浮動小数点丸め&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fegetround&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;現在の丸め方式を取得する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fesetround&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;丸め方式を設定する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;浮動小数点丸めマクロ&lt;/h3&gt;
&lt;p&gt;以下のマクロは、浮動小数点の丸めがどのような方式で行われるかを表す。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_DOWNWARD&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;負の無限大方向への丸め (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_TONEAREST&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;最も近い値への丸め (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_TOWARDZERO&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ゼロ方向への丸め (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_UPWARD&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;正の無限大方向への丸め (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;関連項目&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath.html&#34;&gt;&amp;lt;cmath&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>fetestexcept -- fetestexceptを追加</title>
      <link href="http://cpprefjp.github.io/reference/cfenv/fetestexcept.html"/>
      <id>3e652e11189b6723ca1901087818085920ddf24b:reference/cfenv/fetestexcept.md</id>
      <updated>2016-06-10 16:58:18 +0900</updated>
      
        <content type="html">&lt;div class=&#34;identifier-type&#34;&gt;function&lt;/div&gt;&lt;div class=&#34;header&#34;&gt;&amp;lt;cfenv&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;namespace&#34; title=&#34;namespace std&#34;&gt;std::&lt;/span&gt;fetestexcept&lt;span class=&#34;cpp cpp11&#34; title=&#34;C++11で追加&#34;&gt;(C++11)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fetestexcept&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;excepts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;指定された浮動小数点例外が設定されるかを判定する。&lt;/p&gt;
&lt;p&gt;この関数は、現在発生している浮動小数点例外のうち、指定された例外の集合のみを抽出して返す。&lt;/p&gt;
&lt;h2&gt;戻り値&lt;/h2&gt;
&lt;p&gt;ビット演算のORで複数指定された浮動小数点例外の種類&lt;code&gt;excepts&lt;/code&gt;の、例外発生状態を返す。&lt;/p&gt;
&lt;h2&gt;例&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;cmath&amp;gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;cfenv&amp;gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include &amp;lt;limits&amp;gt;&lt;/span&gt;

&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// ひとつの浮動小数点例外が発生しているかを確認する。&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// ここでは、FE_DIVBYZERO (ゼロ除算)の状態のみを取得している。&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// 指定した浮動小数点例外がひとつであれば、戻り値が0でないことが例外発生中と判断できる&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;kt&#34;&gt;float&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;1.0f&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.0f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fetestexcept&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FE_DIVBYZERO&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;// 浮動小数点数に対してゼロ除算が行われた&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&#34;zero divided&#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cfenv/feclearexcept.md.nolink&#34;&gt;std::feclearexcept&lt;/a&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FE_ALL_EXCEPT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&#34;=====&#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;// 複数の浮動小数点例外が発生しているかを確認する。&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// ここでは、浮動小数点例外の全種類がビットORでつながれたFE_ALL_EXCEPTを指定している。&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// これによって、全ての浮動小数点例外の状態を取得している。&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// fetestexcept(FE_INEXACT | FE_OVERFLOW)のようにして、&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// 明示的にORで複数の浮動小数点例外を指定してもよい。&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;//&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// 複数の浮動小数点例外の状態を取得した場合は、ビットANDを使用して、&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// 特定の浮動小数点例外が発生しているかを確認する。&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;kt&#34;&gt;float&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/limits/numeric_limits/max.html&#34;&gt;std::numeric_limits&amp;lt;double&amp;gt;::max()&lt;/a&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
      &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;excepts&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fetestexcept&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FE_ALL_EXCEPT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;excepts&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FE_INEXACT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&#34;inexact&#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;excepts&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FE_INVALID&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&#34;invalid&#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;excepts&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FE_OVERFLOW&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&#34;overflow&#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;excepts&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FE_UNDERFLOW&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&#34;underflow&#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2&gt;出力例&lt;/h2&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;zero divided
=====
inexact
overflow
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;バージョン&lt;/h2&gt;
&lt;h3&gt;言語&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;C++11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;処理系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#clang&#34;&gt;Clang, C++11 mode&lt;/a&gt;: 3.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#gcc&#34;&gt;GCC, C++11 mode&lt;/a&gt;: 4.3.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#icc&#34;&gt;ICC&lt;/a&gt;: ??&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpprefjp.github.io/implementation.html#visual_cpp&#34;&gt;Visual C++&lt;/a&gt;:&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>cfenv -- &lt;cfenv&gt; : 浮動小数点環境の初期値を記載</title>
      <link href="http://cpprefjp.github.io/reference/cfenv.html"/>
      <id>5270c7e4c71e424323c6ee67c0e77f59fac388de:reference/cfenv.md</id>
      <updated>2016-06-10 16:23:50 +0900</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;cfenv&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;cfenv&lt;span class=&#34;cpp cpp11&#34; title=&#34;C++11で追加&#34;&gt;(C++11)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;cfenv&amp;gt;&lt;/code&gt;ヘッダでは、浮動小数点環境にアクセスするための機能が定義される。&lt;/p&gt;
&lt;p&gt;このヘッダは、IEC 60559 (IEEE 754)で定義される浮動小数点例外の状態フラグを管理することを目的として設計されている。「浮動小数点例外の状態フラグ」は、浮動小数点例外の発生によって設定されるシステム変数である。&lt;/p&gt;
&lt;p&gt;浮動小数点環境はスレッドローカル記憶域を持ち、その初期状態は、スレッドを作成したときの浮動小数点環境の状態が設定される。&lt;/p&gt;
&lt;p&gt;プログラム起動時、浮動小数点環境は以下のように初期化される :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;浮動小数点例外の全ての状態がクリアされる&lt;/li&gt;
&lt;li&gt;浮動小数点数の丸めモードは「最も近い値への丸め」となる&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;浮動小数点環境&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fenv_t&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;浮動小数点環境の状態を表す型 (typedef)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fegetenv&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;現在の浮動小数点環境を取得する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fesetenv&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;浮動小数点環境を設定する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;feholdexcept&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;現在の浮動小数点環境を保存する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;feupdateenv&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;現在発生している浮動小数点例外を保存する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;浮動小数点環境マクロ&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_DFL_ENV&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;デフォルトの浮動小数点環境 (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;浮動小数点例外&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fexcept_t&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;浮動小数点例外の状態フラグを表す整数型 (typedef)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;feclearexcept&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定された浮動小数点例外をクリアする (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fegetexceptflag&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;浮動小数点例外の現在の状態を、実装定義の表現で取得する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fesetexceptflag&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;浮動小数点例外を発生させずに、浮動小数点例外の状態を設定する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;feraiseexcept&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定された浮動小数点例外を発生させる (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fetestexcept&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定された浮動小数点例外が設定されるかを判定する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;浮動小数点例外マクロ&lt;/h3&gt;
&lt;p&gt;以下のマクロは、浮動小数点例外の状態を表すビット値である。これらのマクロは、AND (&amp;amp;) や OR (&amp;amp;)を使用して、複数のマクロを組み合わせて使用できる。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_ALL_EXCEPT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;全ての浮動小数点例外 (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_DIVBYZERO&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ゼロ除算 (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_INEXACT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;不正確な結果 (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_INVALID&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;不正な演算 (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_OVERFLOW&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;オーバーフロー (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_UNDERFLOW&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;アンダーフロー (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;浮動小数点丸め&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fegetround&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;現在の丸め方式を取得する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fesetround&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;丸め方式を設定する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;浮動小数点丸めマクロ&lt;/h3&gt;
&lt;p&gt;以下のマクロは、浮動小数点の丸めがどのような方式で行われるかを表す。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_DOWNWARD&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;負の無限大方向への丸め (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_TONEAREST&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;最も近い値への丸め (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_TOWARDZERO&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ゼロ方向への丸め (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_UPWARD&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;正の無限大方向への丸め (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;関連項目&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath.html&#34;&gt;&amp;lt;cmath&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>cfenv -- &lt;cfenv&gt; : 言葉抜けがあった</title>
      <link href="http://cpprefjp.github.io/reference/cfenv.html"/>
      <id>4e741dbf3fd798e679b5682242128fd9ec89c8db:reference/cfenv.md</id>
      <updated>2016-06-10 00:20:41 +0900</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;cfenv&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;cfenv&lt;span class=&#34;cpp cpp11&#34; title=&#34;C++11で追加&#34;&gt;(C++11)&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;cfenv&amp;gt;&lt;/code&gt;ヘッダでは、浮動小数点環境にアクセスするための機能が定義される。&lt;/p&gt;
&lt;p&gt;このヘッダは、IEC 60559 (IEEE 754)で定義される浮動小数点例外の状態フラグを管理することを目的として設計されている。「浮動小数点例外の状態フラグ」は、浮動小数点例外の発生によって設定されるシステム変数である。&lt;/p&gt;
&lt;p&gt;浮動小数点環境はスレッドローカル記憶域を持ち、その初期状態は、スレッドを作成したときの浮動小数点環境の状態が設定される。&lt;/p&gt;
&lt;h2&gt;浮動小数点環境&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fenv_t&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;浮動小数点環境の状態を表す型 (typedef)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fegetenv&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;現在の浮動小数点環境を取得する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fesetenv&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;浮動小数点環境を設定する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;feholdexcept&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;現在の浮動小数点環境を保存する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;feupdateenv&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;現在発生している浮動小数点例外を保存する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;浮動小数点環境マクロ&lt;/h3&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_DFL_ENV&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;デフォルトの浮動小数点環境 (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;浮動小数点例外&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fexcept_t&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;浮動小数点例外の状態フラグを表す整数型 (typedef)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;feclearexcept&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定された浮動小数点例外をクリアする (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fegetexceptflag&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;浮動小数点例外の現在の状態を、実装定義の表現で取得する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fesetexceptflag&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;浮動小数点例外を発生させずに、浮動小数点例外の状態を設定する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;feraiseexcept&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定された浮動小数点例外を発生させる (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fetestexcept&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定された浮動小数点例外が設定されるかを判定する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;浮動小数点例外マクロ&lt;/h3&gt;
&lt;p&gt;以下のマクロは、浮動小数点例外の状態を表すビット値である。これらのマクロは、AND (&amp;amp;) や OR (&amp;amp;)を使用して、複数のマクロを組み合わせて使用できる。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_ALL_EXCEPT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;全ての浮動小数点例外 (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_DIVBYZERO&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ゼロ除算 (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_INEXACT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;不正確な結果 (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_INVALID&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;不正な演算 (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_OVERFLOW&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;オーバーフロー (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_UNDERFLOW&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;アンダーフロー (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;浮動小数点丸め&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fegetround&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;現在の丸め方式を取得する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fesetround&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;丸め方式を設定する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;浮動小数点丸めマクロ&lt;/h3&gt;
&lt;p&gt;以下のマクロは、浮動小数点の丸めがどのような方式で行われるかを表す。&lt;/p&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_DOWNWARD&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;負の無限大方向への丸め (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_TONEAREST&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;最も近い値への丸め (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_TOWARDZERO&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ゼロ方向への丸め (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FE_UPWARD&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;正の無限大方向への丸め (macro)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;関連項目&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&#34;http://cpprefjp.github.io/reference/cmath.html&#34;&gt;&amp;lt;cmath&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
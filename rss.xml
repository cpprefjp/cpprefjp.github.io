<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2025-06-23T10:55:34.373826</updated>
  <id>a6efa58d-be9b-4157-bf0d-617fa1ddc688</id>

  
    <entry>
      <title>get -- get(const tuple&amp;&amp;) の C++ バージョンを修正</title>
      <link href="https://cpprefjp.github.io/reference/tuple/tuple/get.html"/>
      <id>c601a46e52984303554cad21991d10469a9a9cde:reference/tuple/tuple/get.md</id>
      <updated>2025-06-23T19:51:49+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/tuple/tuple/get.md b/reference/tuple/tuple/get.md
index 8c170518b..a5a19b8b2 100644
--- a/reference/tuple/tuple/get.md
+++ b/reference/tuple/tuple/get.md
@@ -44,7 +44,7 @@ namespace std {
   constexpr const T&amp;amp; get(const tuple&amp;lt;Types...&amp;gt;&amp;amp; t) noexcept;   // (7) C++14
 
   template &amp;lt;class T, class... Types&amp;gt;
-  constexpr const T&amp;amp;&amp;amp; get(const tuple&amp;lt;Types...&amp;gt;&amp;amp;&amp;amp; t) noexcept; // (8) C++14
+  constexpr const T&amp;amp;&amp;amp; get(const tuple&amp;lt;Types...&amp;gt;&amp;amp;&amp;amp; t) noexcept; // (8) C++17
 }
 ```
 * tuple_element[link ../tuple_element.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>61970673+Raclamusi@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>get -- get() に const tuple&amp;&amp; 版を追加</title>
      <link href="https://cpprefjp.github.io/reference/tuple/tuple/get.html"/>
      <id>267a954cdf087832ca47cf490997b7f6240e892c:reference/tuple/tuple/get.md</id>
      <updated>2025-06-23T13:05:22+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/tuple/tuple/get.md b/reference/tuple/tuple/get.md
index 19e33d412..8c170518b 100644
--- a/reference/tuple/tuple/get.md
+++ b/reference/tuple/tuple/get.md
@@ -8,40 +8,43 @@
 namespace std {
   template &amp;lt;size_t I, class... Types&amp;gt;
   typename tuple_element&amp;lt;I, tuple&amp;lt;Types...&amp;gt; &amp;gt;::type&amp;amp;
-    get(tuple&amp;lt;Types...&amp;gt;&amp;amp; t) noexcept;                        // (1) C++11
+    get(tuple&amp;lt;Types...&amp;gt;&amp;amp; t) noexcept;                          // (1) C++11
 
   template &amp;lt;size_t I, class... Types&amp;gt;
   constexpr tuple_element_t&amp;lt;I, tuple&amp;lt;Types...&amp;gt;&amp;gt;&amp;amp;
-    get(tuple&amp;lt;Types...&amp;gt;&amp;amp;) noexcept;                          // (1) C++14
+    get(tuple&amp;lt;Types...&amp;gt;&amp;amp;) noexcept;                            // (1) C++14
 
   template &amp;lt;size_t I, class... types&amp;gt;
   typename tuple_element&amp;lt;I, tuple&amp;lt;Types...&amp;gt; &amp;gt;::type&amp;amp;&amp;amp;
-    get(tuple&amp;lt;Types...&amp;gt;&amp;amp;&amp;amp; t) noexcept;                       // (2) C++11
+    get(tuple&amp;lt;Types...&amp;gt;&amp;amp;&amp;amp; t) noexcept;                         // (2) C++11
 
   template &amp;lt;size_t I, class... Types&amp;gt;
   constexpr tuple_element_t&amp;lt;I, tuple&amp;lt;Types...&amp;gt;&amp;gt;&amp;amp;&amp;amp;
-    get(tuple&amp;lt;Types...&amp;gt;&amp;amp;&amp;amp;) noexcept;                         // (2) C++14
+    get(tuple&amp;lt;Types...&amp;gt;&amp;amp;&amp;amp;) noexcept;                           // (2) C++14
 
   template &amp;lt;size_t I, class... Types&amp;gt;
   typename tuple_element&amp;lt;I, tuple&amp;lt;Types...&amp;gt; &amp;gt;::type const&amp;amp;
-    get(const tuple&amp;lt;Types...&amp;gt;&amp;amp; t) noexcept;                  // (3) C++11
+    get(const tuple&amp;lt;Types...&amp;gt;&amp;amp; t) noexcept;                    // (3) C++11
 
   template &amp;lt;size_t I, class... Types&amp;gt;
   constexpr const tuple_element_t&amp;lt;I, tuple&amp;lt;Types...&amp;gt;&amp;gt;&amp;amp;
-    get(const tuple&amp;lt;Types...&amp;gt;&amp;amp; t) noexcept;                  // (3) C++14
+    get(const tuple&amp;lt;Types...&amp;gt;&amp;amp; t) noexcept;                    // (3) C++14
 
   template &amp;lt;size_t I, class... Types&amp;gt;
   constexpr const tuple_element_t&amp;lt;I, tuple&amp;lt;Types...&amp;gt; &amp;gt;&amp;amp;&amp;amp;
-    get(const tuple&amp;lt;Types...&amp;gt;&amp;amp;&amp;amp; t) noexcept;                 // (4) C++17
+    get(const tuple&amp;lt;Types...&amp;gt;&amp;amp;&amp;amp; t) noexcept;                   // (4) C++17
 
   template &amp;lt;class T, class... Types&amp;gt;
-  constexpr T&amp;amp; get(tuple&amp;lt;Types...&amp;gt;&amp;amp; t) noexcept;             // (5) C++14
+  constexpr T&amp;amp; get(tuple&amp;lt;Types...&amp;gt;&amp;amp; t) noexcept;               // (5) C++14
 
   template &amp;lt;class T, class... Types&amp;gt;
-  constexpr T&amp;amp;&amp;amp; get(tuple&amp;lt;Types...&amp;gt;&amp;amp;&amp;amp; t) noexcept;           // (6) C++14
+  constexpr T&amp;amp;&amp;amp; get(tuple&amp;lt;Types...&amp;gt;&amp;amp;&amp;amp; t) noexcept;             // (6) C++14
 
   template &amp;lt;class T, class... Types&amp;gt;
-  constexpr const T&amp;amp; get(const tuple&amp;lt;Types...&amp;gt;&amp;amp; t) noexcept; // (7) C++14
+  constexpr const T&amp;amp; get(const tuple&amp;lt;Types...&amp;gt;&amp;amp; t) noexcept;   // (7) C++14
+
+  template &amp;lt;class T, class... Types&amp;gt;
+  constexpr const T&amp;amp;&amp;amp; get(const tuple&amp;lt;Types...&amp;gt;&amp;amp;&amp;amp; t) noexcept; // (8) C++14
 }
 ```
 * tuple_element[link ../tuple_element.md]
@@ -55,12 +58,12 @@ namespace std {
 
 ## 要件
 - (1), (2), (3), (4) : テンプレートパラメータ`I`が`tuple`の要素数よりも小さいこと。この要件を満たさない場合は、コンパイルエラーとなる。
-- (5), (6), (7) : 型`T`が`Types...`の中にひとつだけ含まれること。この要件を満たさない場合は、コンパイルエラーとなる。
+- (5), (6), (7), (8) : 型`T`が`Types...`の中にひとつだけ含まれること。この要件を満たさない場合は、コンパイルエラーとなる。
 
 
 ## 戻り値
 - (1), (2), (3), (4) : `tuple`オブジェクト`t`の`I`番目の要素への参照
-- (5), (6), (7) : `tuple`オブジェクト`t`に含まれる`T`型の要素への参照
+- (5), (6), (7), (8) : `tuple`オブジェクト`t`に含まれる`T`型の要素への参照
 
 
 ## 例外
@@ -94,7 +97,7 @@ int main()
   }
   std::cout &amp;lt;&amp;lt; std::endl;
 
-  // 型を指定して取得する方法。(5)-(7)
+  // 型を指定して取得する方法。(5)-(8)
   {
     int&amp;amp; i = std::get&amp;lt;int&amp;gt;(t);
     char&amp;amp; c = std::get&amp;lt;char&amp;gt;(t);
@@ -119,7 +122,7 @@ a
 hello
 ```
 
-### const右辺値参照版が必要な状況 (4)
+### const右辺値参照版が必要な状況 (4), (8)
 ```cpp example
 #include &amp;lt;iostream&amp;gt;
 #include &amp;lt;tuple&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>move_only_function -- improve std::move_only_function</title>
      <link href="https://cpprefjp.github.io/reference/functional/move_only_function.html"/>
      <id>a9d264c4ed2ba86f5949f89923bf17ff8e4bcccc:reference/functional/move_only_function.md</id>
      <updated>2025-06-21T20:23:17+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/functional/move_only_function.md b/reference/functional/move_only_function.md
index 66ccd0b1b..ab24a4fc6 100644
--- a/reference/functional/move_only_function.md
+++ b/reference/functional/move_only_function.md
@@ -222,6 +222,48 @@ int main()
 ```
 ```
 
+### 例5: ムーブオンリーオブジェクト
+```cpp example
+#include &amp;lt;functional&amp;gt;
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;memory&amp;gt;
+#include &amp;lt;utility&amp;gt;
+
+// ムーブオンリーの関数オブジェクトクラス
+struct UniqueInt {
+  std::unique_ptr&amp;lt;int&amp;gt; ptr;
+
+  void operator()(void) {
+    std::cout &amp;lt;&amp;lt; *ptr &amp;lt;&amp;lt; std::endl;
+  }
+};
+
+int main()
+{
+  UniqueInt ui = {std::make_unique&amp;lt;int&amp;gt;(42)};
+
+  // コンパイルエラー！
+  // std::functionはムーブオンリーオブジェクトを格納できない
+//  std::function&amp;lt;void(void)&amp;gt; f = std::move(ui);
+  
+  // OK
+  // std::move_only_functionなら格納可能
+  std::move_only_function&amp;lt;void(void)&amp;gt; f = std::move(ui);
+
+  f();
+}
+```
+* std::move_only_function&amp;lt;void(void)&amp;gt;[color ff0000]
+* std::function&amp;lt;void(void)&amp;gt;[link /reference/functional/function.md]
+* std::unique_ptr[link /reference/memory/unique_ptr.md]
+* std::make_unique[link /reference/memory/make_unique.md]
+* std::move[link /reference/utility/move.md]
+
+#### 出力
+```
+42
+```
+
 
 ## バージョン
 ### 言語
@@ -237,7 +279,7 @@ int main()
 ## 関連項目
 - C++11 [`function`](function.md)
 - C++26 [`copyable_function`](copyable_function.md)
-- C++26 [`copyable_function`](copyable_function.md)
+- C++26 [`function_ref`](function_ref.md)
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;&lt; -- C++ のコードブロックに cpp を追加</title>
      <link href="https://cpprefjp.github.io/reference/complex/complex/op_ostream.html"/>
      <id>64a666569b4cf874ecb1f3a9761c6fdbafb95c7a:reference/complex/complex/op_ostream.md</id>
      <updated>2025-06-20T15:53:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/complex/complex/op_ostream.md b/reference/complex/complex/op_ostream.md
index 6f696c235..1141e965a 100644
--- a/reference/complex/complex/op_ostream.md
+++ b/reference/complex/complex/op_ostream.md
@@ -17,7 +17,7 @@ namespace std {
 
 
 ## 効果
-```
+```cpp
 basic_ostringstream&amp;lt;CharT, Traits&amp;gt; s;
 s.flags(os.flags());
 s.imbue(os.getloc());
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase (非メンバ関数) -- C++ のコードブロックに cpp を追加</title>
      <link href="https://cpprefjp.github.io/reference/deque/deque/erase_free.html"/>
      <id>64a666569b4cf874ecb1f3a9761c6fdbafb95c7a:reference/deque/deque/erase_free.md</id>
      <updated>2025-06-20T15:53:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/deque/deque/erase_free.md b/reference/deque/deque/erase_free.md
index 6c95c90d4..de73078d4 100644
--- a/reference/deque/deque/erase_free.md
+++ b/reference/deque/deque/erase_free.md
@@ -22,7 +22,7 @@ namespace std {
 ## 効果
 以下と等価：
 
-```
+```cpp
 auto it = remove(c.begin(), c.end(), value);
 auto r = distance(it, c.end());
 c.erase(it, c.end());
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase_if -- C++ のコードブロックに cpp を追加</title>
      <link href="https://cpprefjp.github.io/reference/deque/deque/erase_if_free.html"/>
      <id>64a666569b4cf874ecb1f3a9761c6fdbafb95c7a:reference/deque/deque/erase_if_free.md</id>
      <updated>2025-06-20T15:53:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/deque/deque/erase_if_free.md b/reference/deque/deque/erase_if_free.md
index 03c68fadb..0e8e34c54 100644
--- a/reference/deque/deque/erase_if_free.md
+++ b/reference/deque/deque/erase_if_free.md
@@ -18,7 +18,7 @@ namespace std {
 ## 効果
 以下と等価：
 
-```
+```cpp
 auto it = remove_if(c.begin(), c.end(), pred);
 auto r = distance(it, c.end());
 c.erase(it, c.end());
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase (非メンバ関数) -- C++ のコードブロックに cpp を追加</title>
      <link href="https://cpprefjp.github.io/reference/forward_list/forward_list/erase_free.html"/>
      <id>64a666569b4cf874ecb1f3a9761c6fdbafb95c7a:reference/forward_list/forward_list/erase_free.md</id>
      <updated>2025-06-20T15:53:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/forward_list/forward_list/erase_free.md b/reference/forward_list/forward_list/erase_free.md
index b6b6ffc18..1e686e63b 100644
--- a/reference/forward_list/forward_list/erase_free.md
+++ b/reference/forward_list/forward_list/erase_free.md
@@ -22,7 +22,7 @@ namespace std {
 ## 効果
 以下と等価：
 
-```
+```cpp
 erase_if(c, [&amp;amp;](auto&amp;amp; elem) { return elem == value; });
 ```
 * erase_if[link erase_if_free.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase_if -- C++ のコードブロックに cpp を追加</title>
      <link href="https://cpprefjp.github.io/reference/forward_list/forward_list/erase_if_free.html"/>
      <id>64a666569b4cf874ecb1f3a9761c6fdbafb95c7a:reference/forward_list/forward_list/erase_if_free.md</id>
      <updated>2025-06-20T15:53:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/forward_list/forward_list/erase_if_free.md b/reference/forward_list/forward_list/erase_if_free.md
index 3902ee1eb..85a1963d3 100644
--- a/reference/forward_list/forward_list/erase_if_free.md
+++ b/reference/forward_list/forward_list/erase_if_free.md
@@ -18,7 +18,7 @@ namespace std {
 ## 効果
 以下と等価：
 
-```
+```cpp
 c.remove_if(pred);
 ```
 * c.remove_if[link remove_if.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>putback -- C++ のコードブロックに cpp を追加</title>
      <link href="https://cpprefjp.github.io/reference/istream/basic_istream/putback.html"/>
      <id>64a666569b4cf874ecb1f3a9761c6fdbafb95c7a:reference/istream/basic_istream/putback.md</id>
      <updated>2025-06-20T15:53:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/istream/basic_istream/putback.md b/reference/istream/basic_istream/putback.md
index f2592d8df..aa5fd0fd4 100644
--- a/reference/istream/basic_istream/putback.md
+++ b/reference/istream/basic_istream/putback.md
@@ -28,7 +28,7 @@ basic_istream&amp;lt;CharT, Traits&amp;gt;&amp;amp; putback(char_type c);
 この関数は1文字も入力を行わないため、この後の`gcount()`は常に`0`を返す。
 
 ## 例
-```
+```cpp
 #include &amp;lt;iostream&amp;gt;
 #include &amp;lt;locale&amp;gt;
 #include &amp;lt;string&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase (非メンバ関数) -- C++ のコードブロックに cpp を追加</title>
      <link href="https://cpprefjp.github.io/reference/list/list/erase_free.html"/>
      <id>64a666569b4cf874ecb1f3a9761c6fdbafb95c7a:reference/list/list/erase_free.md</id>
      <updated>2025-06-20T15:53:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/list/list/erase_free.md b/reference/list/list/erase_free.md
index 004e672b9..0eb2535cf 100644
--- a/reference/list/list/erase_free.md
+++ b/reference/list/list/erase_free.md
@@ -22,7 +22,7 @@ namespace std {
 ## 効果
 以下と等価：
 
-```
+```cpp
 erase_if(c, [&amp;amp;](auto&amp;amp; elem) { return elem == value; });
 ```
 * erase_if[link erase_if_free.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase_if -- C++ のコードブロックに cpp を追加</title>
      <link href="https://cpprefjp.github.io/reference/list/list/erase_if_free.html"/>
      <id>64a666569b4cf874ecb1f3a9761c6fdbafb95c7a:reference/list/list/erase_if_free.md</id>
      <updated>2025-06-20T15:53:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/list/list/erase_if_free.md b/reference/list/list/erase_if_free.md
index 68d1d0393..1ffc7304b 100644
--- a/reference/list/list/erase_if_free.md
+++ b/reference/list/list/erase_if_free.md
@@ -18,7 +18,7 @@ namespace std {
 ## 効果
 以下と等価：
 
-```
+```cpp
 c.remove_if(pred);
 ```
 * c.remove_if[link remove_if.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase_if -- C++ のコードブロックに cpp を追加</title>
      <link href="https://cpprefjp.github.io/reference/map/map/erase_if_free.html"/>
      <id>64a666569b4cf874ecb1f3a9761c6fdbafb95c7a:reference/map/map/erase_if_free.md</id>
      <updated>2025-06-20T15:53:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/map/map/erase_if_free.md b/reference/map/map/erase_if_free.md
index 7b48c194e..cdd23088c 100644
--- a/reference/map/map/erase_if_free.md
+++ b/reference/map/map/erase_if_free.md
@@ -21,7 +21,7 @@ namespace std {
 ## 効果
 以下と等価：
 
-```
+```cpp
 auto original_size = c.size();
 for (auto i = c.begin(), last = c.end(); i != last;) {
   if (pred(*i)) {
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase_if -- C++ のコードブロックに cpp を追加</title>
      <link href="https://cpprefjp.github.io/reference/map/multimap/erase_if_free.html"/>
      <id>64a666569b4cf874ecb1f3a9761c6fdbafb95c7a:reference/map/multimap/erase_if_free.md</id>
      <updated>2025-06-20T15:53:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/map/multimap/erase_if_free.md b/reference/map/multimap/erase_if_free.md
index e5d0cbd82..59458a3a4 100644
--- a/reference/map/multimap/erase_if_free.md
+++ b/reference/map/multimap/erase_if_free.md
@@ -21,7 +21,7 @@ namespace std {
 ## 効果
 以下と等価：
 
-```
+```cpp
 auto original_size = c.size();
 for (auto i = c.begin(), last = c.end(); i != last;) {
   if (pred(*i)) {
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>length -- C++ のコードブロックに cpp を追加</title>
      <link href="https://cpprefjp.github.io/reference/regex/regex_traits/length.html"/>
      <id>64a666569b4cf874ecb1f3a9761c6fdbafb95c7a:reference/regex/regex_traits/length.md</id>
      <updated>2025-06-20T15:53:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/regex/regex_traits/length.md b/reference/regex/regex_traits/length.md
index 5929a0e03..9b803cece 100644
--- a/reference/regex/regex_traits/length.md
+++ b/reference/regex/regex_traits/length.md
@@ -15,7 +15,7 @@ static std::size_t length(const char_type* p);
 
 
 ## 戻り値
-```
+```cpp
 char_traits&amp;lt;char_type&amp;gt;::length(p)
 ```
 * char_traits[link /reference/string/char_traits.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase_if -- C++ のコードブロックに cpp を追加</title>
      <link href="https://cpprefjp.github.io/reference/set/multiset/erase_if_free.html"/>
      <id>64a666569b4cf874ecb1f3a9761c6fdbafb95c7a:reference/set/multiset/erase_if_free.md</id>
      <updated>2025-06-20T15:53:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/set/multiset/erase_if_free.md b/reference/set/multiset/erase_if_free.md
index 911273825..6d846ca1e 100644
--- a/reference/set/multiset/erase_if_free.md
+++ b/reference/set/multiset/erase_if_free.md
@@ -19,7 +19,7 @@ namespace std {
 ## 効果
 以下と等価：
 
-```
+```cpp
 auto original_size = c.size();
 for (auto i = c.begin(), last = c.end(); i != last;) {
   if (pred(*i)) {
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase_if -- C++ のコードブロックに cpp を追加</title>
      <link href="https://cpprefjp.github.io/reference/set/set/erase_if_free.html"/>
      <id>64a666569b4cf874ecb1f3a9761c6fdbafb95c7a:reference/set/set/erase_if_free.md</id>
      <updated>2025-06-20T15:53:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/set/set/erase_if_free.md b/reference/set/set/erase_if_free.md
index ef6be2199..9011dbd30 100644
--- a/reference/set/set/erase_if_free.md
+++ b/reference/set/set/erase_if_free.md
@@ -19,7 +19,7 @@ namespace std {
 ## 効果
 以下と等価：
 
-```
+```cpp
 auto original_size = c.size();
 for (auto i = c.begin(), last = c.end(); i != last;) {
   if (pred(*i)) {
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase (非メンバ関数) -- C++ のコードブロックに cpp を追加</title>
      <link href="https://cpprefjp.github.io/reference/string/basic_string/erase_free.html"/>
      <id>64a666569b4cf874ecb1f3a9761c6fdbafb95c7a:reference/string/basic_string/erase_free.md</id>
      <updated>2025-06-20T15:53:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string/basic_string/erase_free.md b/reference/string/basic_string/erase_free.md
index dfc18ebac..afc64568a 100644
--- a/reference/string/basic_string/erase_free.md
+++ b/reference/string/basic_string/erase_free.md
@@ -22,7 +22,7 @@ namespace std {
 ## 効果
 以下と等価：
 
-```
+```cpp
 auto it = remove(c.begin(), c.end(), value);
 auto r = distance(it, c.end());
 c.erase(it, c.end());
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase_if -- C++ のコードブロックに cpp を追加</title>
      <link href="https://cpprefjp.github.io/reference/string/basic_string/erase_if_free.html"/>
      <id>64a666569b4cf874ecb1f3a9761c6fdbafb95c7a:reference/string/basic_string/erase_if_free.md</id>
      <updated>2025-06-20T15:53:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string/basic_string/erase_if_free.md b/reference/string/basic_string/erase_if_free.md
index e994f3d7d..5c2e4daa8 100644
--- a/reference/string/basic_string/erase_if_free.md
+++ b/reference/string/basic_string/erase_if_free.md
@@ -19,7 +19,7 @@ namespace std {
 ## 効果
 以下と等価：
 
-```
+```cpp
 auto it = remove_if(c.begin(), c.end(), pred);
 auto r = distance(it, c.end());
 c.erase(it, c.end());
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>at -- C++ のコードブロックに cpp を追加</title>
      <link href="https://cpprefjp.github.io/reference/string_view/basic_string_view/at.html"/>
      <id>64a666569b4cf874ecb1f3a9761c6fdbafb95c7a:reference/string_view/basic_string_view/at.md</id>
      <updated>2025-06-20T15:53:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string_view/basic_string_view/at.md b/reference/string_view/basic_string_view/at.md
index 7d1ebc866..87ef28ac6 100644
--- a/reference/string_view/basic_string_view/at.md
+++ b/reference/string_view/basic_string_view/at.md
@@ -14,7 +14,7 @@ constexpr const_reference at(size_type pos) const;
 
 
 ## 戻り値
-```
+```cpp
 return data()[pos];
 ```
 * data()[link data.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>back -- C++ のコードブロックに cpp を追加</title>
      <link href="https://cpprefjp.github.io/reference/string_view/basic_string_view/back.html"/>
      <id>64a666569b4cf874ecb1f3a9761c6fdbafb95c7a:reference/string_view/basic_string_view/back.md</id>
      <updated>2025-06-20T15:53:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string_view/basic_string_view/back.md b/reference/string_view/basic_string_view/back.md
index 360eab74d..43c9cb02c 100644
--- a/reference/string_view/basic_string_view/back.md
+++ b/reference/string_view/basic_string_view/back.md
@@ -18,7 +18,7 @@ constexpr const_reference back() const;
 
 
 ## 戻り値
-```
+```cpp
 return data()[size() - 1];
 ```
 * data()[link data.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>cend -- C++ のコードブロックに cpp を追加</title>
      <link href="https://cpprefjp.github.io/reference/string_view/basic_string_view/cend.html"/>
      <id>64a666569b4cf874ecb1f3a9761c6fdbafb95c7a:reference/string_view/basic_string_view/cend.md</id>
      <updated>2025-06-20T15:53:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string_view/basic_string_view/cend.md b/reference/string_view/basic_string_view/cend.md
index c177a904d..bc90762ab 100644
--- a/reference/string_view/basic_string_view/cend.md
+++ b/reference/string_view/basic_string_view/cend.md
@@ -14,7 +14,7 @@ constexpr const_iterator cend() const noexcept;
 
 
 ## 戻り値
-```
+```cpp
 return cbegin() + size();
 ```
 * cbegin()[link cbegin.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>end -- C++ のコードブロックに cpp を追加</title>
      <link href="https://cpprefjp.github.io/reference/string_view/basic_string_view/end.html"/>
      <id>64a666569b4cf874ecb1f3a9761c6fdbafb95c7a:reference/string_view/basic_string_view/end.md</id>
      <updated>2025-06-20T15:53:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string_view/basic_string_view/end.md b/reference/string_view/basic_string_view/end.md
index e8c863758..7952973a7 100644
--- a/reference/string_view/basic_string_view/end.md
+++ b/reference/string_view/basic_string_view/end.md
@@ -14,7 +14,7 @@ constexpr const_iterator end() const noexcept;
 
 
 ## 戻り値
-```
+```cpp
 return begin() + size();
 ```
 * begin()[link begin.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>front -- C++ のコードブロックに cpp を追加</title>
      <link href="https://cpprefjp.github.io/reference/string_view/basic_string_view/front.html"/>
      <id>64a666569b4cf874ecb1f3a9761c6fdbafb95c7a:reference/string_view/basic_string_view/front.md</id>
      <updated>2025-06-20T15:53:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string_view/basic_string_view/front.md b/reference/string_view/basic_string_view/front.md
index 762fba64b..08ec24696 100644
--- a/reference/string_view/basic_string_view/front.md
+++ b/reference/string_view/basic_string_view/front.md
@@ -18,7 +18,7 @@ constexpr const_reference front() const;
 
 
 ## 戻り値
-```
+```cpp
 return data()[0];
 ```
 * data()[link data.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator[] -- C++ のコードブロックに cpp を追加</title>
      <link href="https://cpprefjp.github.io/reference/string_view/basic_string_view/op_at.html"/>
      <id>64a666569b4cf874ecb1f3a9761c6fdbafb95c7a:reference/string_view/basic_string_view/op_at.md</id>
      <updated>2025-06-20T15:53:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string_view/basic_string_view/op_at.md b/reference/string_view/basic_string_view/op_at.md
index 636bcc850..376685c35 100644
--- a/reference/string_view/basic_string_view/op_at.md
+++ b/reference/string_view/basic_string_view/op_at.md
@@ -18,7 +18,7 @@ constexpr const_reference operator[](size_type pos) const;
 
 
 ## 戻り値
-```
+```cpp
 return data()[pos];
 ```
 * data()[link data.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase_if -- C++ のコードブロックに cpp を追加</title>
      <link href="https://cpprefjp.github.io/reference/unordered_map/unordered_map/erase_if_free.html"/>
      <id>64a666569b4cf874ecb1f3a9761c6fdbafb95c7a:reference/unordered_map/unordered_map/erase_if_free.md</id>
      <updated>2025-06-20T15:53:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_map/unordered_map/erase_if_free.md b/reference/unordered_map/unordered_map/erase_if_free.md
index b2f2d8c5f..c527dcc23 100644
--- a/reference/unordered_map/unordered_map/erase_if_free.md
+++ b/reference/unordered_map/unordered_map/erase_if_free.md
@@ -21,7 +21,7 @@ namespace std {
 ## 効果
 以下と等価：
 
-```
+```cpp
 auto original_size = c.size();
 for (auto i = c.begin(), last = c.end(); i != last;) {
   if (pred(*i)) {
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase_if -- C++ のコードブロックに cpp を追加</title>
      <link href="https://cpprefjp.github.io/reference/unordered_map/unordered_multimap/erase_if_free.html"/>
      <id>64a666569b4cf874ecb1f3a9761c6fdbafb95c7a:reference/unordered_map/unordered_multimap/erase_if_free.md</id>
      <updated>2025-06-20T15:53:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_map/unordered_multimap/erase_if_free.md b/reference/unordered_map/unordered_multimap/erase_if_free.md
index 1ea5de5d7..c12017d40 100644
--- a/reference/unordered_map/unordered_multimap/erase_if_free.md
+++ b/reference/unordered_map/unordered_multimap/erase_if_free.md
@@ -21,7 +21,7 @@ namespace std {
 ## 効果
 以下と等価：
 
-```
+```cpp
 auto original_size = c.size();
 for (auto i = c.begin(), last = c.end(); i != last;) {
   if (pred(*i)) {
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase_if -- C++ のコードブロックに cpp を追加</title>
      <link href="https://cpprefjp.github.io/reference/unordered_set/unordered_multiset/erase_if_free.html"/>
      <id>64a666569b4cf874ecb1f3a9761c6fdbafb95c7a:reference/unordered_set/unordered_multiset/erase_if_free.md</id>
      <updated>2025-06-20T15:53:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_set/unordered_multiset/erase_if_free.md b/reference/unordered_set/unordered_multiset/erase_if_free.md
index 10bf147e6..73d47bfa5 100644
--- a/reference/unordered_set/unordered_multiset/erase_if_free.md
+++ b/reference/unordered_set/unordered_multiset/erase_if_free.md
@@ -19,7 +19,7 @@ namespace std {
 ## 効果
 以下と等価：
 
-```
+```cpp
 auto original_size = c.size();
 for (auto i = c.begin(), last = c.end(); i != last;) {
   if (pred(*i)) {
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase_if -- C++ のコードブロックに cpp を追加</title>
      <link href="https://cpprefjp.github.io/reference/unordered_set/unordered_set/erase_if_free.html"/>
      <id>64a666569b4cf874ecb1f3a9761c6fdbafb95c7a:reference/unordered_set/unordered_set/erase_if_free.md</id>
      <updated>2025-06-20T15:53:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_set/unordered_set/erase_if_free.md b/reference/unordered_set/unordered_set/erase_if_free.md
index 01b6b4eb2..ea7047573 100644
--- a/reference/unordered_set/unordered_set/erase_if_free.md
+++ b/reference/unordered_set/unordered_set/erase_if_free.md
@@ -19,7 +19,7 @@ namespace std {
 ## 効果
 以下と等価：
 
-```
+```cpp
 auto original_size = c.size();
 for (auto i = c.begin(), last = c.end(); i != last;) {
   if (pred(*i)) {
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase (非メンバ関数) -- C++ のコードブロックに cpp を追加</title>
      <link href="https://cpprefjp.github.io/reference/vector/vector/erase_free.html"/>
      <id>64a666569b4cf874ecb1f3a9761c6fdbafb95c7a:reference/vector/vector/erase_free.md</id>
      <updated>2025-06-20T15:53:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/vector/vector/erase_free.md b/reference/vector/vector/erase_free.md
index 82a5411ff..7361962b9 100644
--- a/reference/vector/vector/erase_free.md
+++ b/reference/vector/vector/erase_free.md
@@ -22,7 +22,7 @@ namespace std {
 ## 効果
 以下と等価：
 
-```
+```cpp
 auto it = remove(c.begin(), c.end(), value);
 auto r = distance(it, c.end());
 c.erase(it, c.end());
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>erase_if -- C++ のコードブロックに cpp を追加</title>
      <link href="https://cpprefjp.github.io/reference/vector/vector/erase_if_free.html"/>
      <id>64a666569b4cf874ecb1f3a9761c6fdbafb95c7a:reference/vector/vector/erase_if_free.md</id>
      <updated>2025-06-20T15:53:44+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/vector/vector/erase_if_free.md b/reference/vector/vector/erase_if_free.md
index 5112a379a..a949bde56 100644
--- a/reference/vector/vector/erase_if_free.md
+++ b/reference/vector/vector/erase_if_free.md
@@ -19,7 +19,7 @@ namespace std {
 ## 効果
 以下と等価：
 
-```
+```cpp
 auto it = remove_if(c.begin(), c.end(), pred);
 auto r = distance(it, c.end());
 c.erase(it, c.end());
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>read_env -- execution/read_env: 概要説明の微調整</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/read_env.html"/>
      <id>8d5640384d41e916d49abd375ebd94ffcda1708c:reference/execution/execution/read_env.md</id>
      <updated>2025-06-19T14:55:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/read_env.md b/reference/execution/execution/read_env.md
index db4146dee..9d278cfa3 100644
--- a/reference/execution/execution/read_env.md
+++ b/reference/execution/execution/read_env.md
@@ -14,7 +14,7 @@ namespace std::execution {
 ## 概要
 `read_env`は、非同期動作の[開始(start)](start.md)時に接続先[Receiver](receiver.md)の[環境](../queryable.md)に対して[クエリオブジェクト](../queryable.md)で問い合わせ、読み取った値を[値完了関数](set_value.md)で送信するSenderファクトリである。
 
-クエリオブジェクトによるReceiver環境への問い合わせは`read_env`[Sender](sender.md)の構築時ではなく、Receiverと接続されたのち非同期動作が開始されるタイミングまで遅延される。
+クエリオブジェクトによるReceiver環境への問い合わせは`read_env`[Sender](sender.md)構築時やReceiver[接続(connect)](connect.md)ではなく、非同期動作が開始されるタイミングまで遅延される。
 [`let_value`](let_value.md)Senderアダプタと組み合わせたり、[Sender Awaitableなコルーチン](with_awaitable_senders.md)での`co_await`式によって、[Scheduler](get_scheduler.md)や[停止トークン](../get_stop_token.md)を読み取ることができる。
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yoh</name>
        <email>kawasaki.liamg@gmail.com</email>
      </author>
    </entry>
  
</feed>
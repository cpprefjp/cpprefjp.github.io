<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2025-06-18T05:15:03.341781</updated>
  <id>45eedf3d-ef8b-4d71-9349-c42978ab93ea</id>

  
    <entry>
      <title>equal_range -- ranges::find, lower_bound, equal_range : 射影変換の例でコピーを抑止するよう修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_equal_range.html"/>
      <id>03948a4259a83ca1fd22828ff60b945b45ac9431:reference/algorithm/ranges_equal_range.md</id>
      <updated>2025-06-18T14:11:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_equal_range.md b/reference/algorithm/ranges_equal_range.md
index fa5266fb4..41354e6fe 100644
--- a/reference/algorithm/ranges_equal_range.md
+++ b/reference/algorithm/ranges_equal_range.md
@@ -218,7 +218,8 @@ int main() {
     v,
     key,
     {},
-    [](const X&amp;amp; x) { return x.name; }
+    // x.nameがコピーされないよう戻り値型を明示的に指定
+    [](const X&amp;amp; x) -&amp;gt; const std::string&amp;amp; { return x.name; }
 );
   std::cout &amp;lt;&amp;lt; &amp;#34;[ラムダ式]&amp;#34; &amp;lt;&amp;lt; std::endl;
   for (const X&amp;amp; x : result2) {
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>find -- ranges::find, lower_bound, equal_range : 射影変換の例でコピーを抑止するよう修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_find.html"/>
      <id>03948a4259a83ca1fd22828ff60b945b45ac9431:reference/algorithm/ranges_find.md</id>
      <updated>2025-06-18T14:11:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_find.md b/reference/algorithm/ranges_find.md
index 41dfe9d96..274724a14 100644
--- a/reference/algorithm/ranges_find.md
+++ b/reference/algorithm/ranges_find.md
@@ -140,7 +140,8 @@ int main() {
     auto it = std::ranges::find(
       v,
       std::string(&amp;#34;bbb&amp;#34;),
-      [](const Item&amp;amp; x) { return x.name; }
+      // コピーされないよう戻り値型を明示的に指定
+      [](const Item&amp;amp; x) -&amp;gt; const std::string&amp;amp; { return x.name; }
     );
     if (it == v.end()) {
       std::cout &amp;lt;&amp;lt; &amp;#34;not found&amp;#34; &amp;lt;&amp;lt; std::endl;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>lower_bound -- ranges::find, lower_bound, equal_range : 射影変換の例でコピーを抑止するよう修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_lower_bound.html"/>
      <id>03948a4259a83ca1fd22828ff60b945b45ac9431:reference/algorithm/ranges_lower_bound.md</id>
      <updated>2025-06-18T14:11:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_lower_bound.md b/reference/algorithm/ranges_lower_bound.md
index 9b4d1be4f..b046fa0b7 100644
--- a/reference/algorithm/ranges_lower_bound.md
+++ b/reference/algorithm/ranges_lower_bound.md
@@ -267,7 +267,8 @@ int main() {
     v,
     key,
     {},
-    [](const X&amp;amp; x) { return x.name; }
+    // コピーされないよう戻り値型を明示的に指定
+    [](const X&amp;amp; x) -&amp;gt; const std::string&amp;amp; { return x.name; }
   );
   if (it2 != v.end() &amp;amp;&amp;amp; it2-&amp;gt;name == key) {
     std::size_t pos = std::ranges::distance(v.begin(), it2);
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>read_env -- improve std::execution::read_env()</title>
      <link href="https://cpprefjp.github.io/reference/execution/execution/read_env.html"/>
      <id>10d613142bb65190d6d5c25169d768e0d2bbf10d:reference/execution/execution/read_env.md</id>
      <updated>2025-06-17T20:00:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/execution/execution/read_env.md b/reference/execution/execution/read_env.md
index d494bedbd..db4146dee 100644
--- a/reference/execution/execution/read_env.md
+++ b/reference/execution/execution/read_env.md
@@ -67,9 +67,9 @@ int main()
 * ex::read_env[color ff0000]
 * ex::sender[link sender.md]
 * ex::get_scheduler[link get_scheduler.md]
-* ex::let_value[lin let_value.md]
+* ex::let_value[link let_value.md]
 * ex::starts_on[link starts_on.md]
-* ex::just[lin just.md]
+* ex::just[link just.md]
 * std::this_thread::sync_wait[link ../this_thread/sync_wait.md]
 * value()[link /reference/optional/optional/value.md]
 
@@ -91,7 +91,7 @@ int main()
 
 
 ## 関連項目
-- [`execution::get_env`](read_env.md)
+- [`execution::get_env`](get_env.md)
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ssize -- checked gcc version for std::ssize()</title>
      <link href="https://cpprefjp.github.io/reference/iterator/ssize.html"/>
      <id>1434e2d7e07d1078914fdcea7c7a6bd7d40b33b1:reference/iterator/ssize.md</id>
      <updated>2025-06-14T18:18:52+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/iterator/ssize.md b/reference/iterator/ssize.md
index 263580943..24e2488d2 100644
--- a/reference/iterator/ssize.md
+++ b/reference/iterator/ssize.md
@@ -65,7 +65,7 @@ int main()
 
 ### 処理系
 - [Clang](/implementation.md#clang): 9.0 [mark verified]
-- [GCC](/implementation.md#gcc):
+- [GCC](/implementation.md#gcc): 12.3.0 [mark verified]
 - [Visual C++](/implementation.md#visual_cpp): ??
 
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>rotarymars</name>
        <email>s.goto2050@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>format -- improve chrono::format</title>
      <link href="https://cpprefjp.github.io/reference/chrono/format.html"/>
      <id>8bd1a9a9826c76307f017ea4560de0ca49533f8f:reference/chrono/format.md</id>
      <updated>2025-06-14T17:37:52+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/format.md b/reference/chrono/format.md
index 491b7d90c..e93ea0d14 100644
--- a/reference/chrono/format.md
+++ b/reference/chrono/format.md
@@ -53,8 +53,8 @@ chronoライブラリではこれに加え、たとえばデフォルトでは
 | `%g` | ISOの週ベースのうしろ2桁10進数の年。結果が1桁の場合、先頭に`0`がつく | `&amp;#34;20&amp;#34;` |
 | `%G` | ISOの週ベースの10進数の年。結果が4桁未満の場合、4桁になるよう左が`0`で埋められる | `&amp;#34;2020&amp;#34;` |
 | `%h` | `%b`と等価 | `&amp;#34;Jan&amp;#34;`, `&amp;#34;4月&amp;#34;` |
-| `%H` | 24時間時計での10進数の時。結果が1桁の場合、先頭に`0`がつく。改良コマンド`%OH`を指定知ると、ロケール依存の異なる表現を出力する | `&amp;#34;17&amp;#34;` |
-| `%I` | 12時間時計での10進数の時。結果が1桁の場合、先頭に`0`がつく。改良コマンド`%OI`を指定知ると、ロケール依存の異なる表現を出力する | `&amp;#34;05&amp;#34;` |
+| `%H` | 24時間時計での10進数の時。結果が1桁の場合、先頭に`0`がつく。改良コマンド`%OH`を指定すると、ロケール依存の異なる表現を出力する | `&amp;#34;17&amp;#34;` |
+| `%I` | 12時間時計での10進数の時。結果が1桁の場合、先頭に`0`がつく。改良コマンド`%OI`を指定すると、ロケール依存の異なる表現を出力する | `&amp;#34;05&amp;#34;` |
 | `%j` | 10進数での年の日。1月1日は`001`が出力される。結果が3桁未満の場合、3桁になるよう左が`0`で埋められる。[`duration`](duration.md)の特殊化が与えられた場合、[`days`](duration_aliases.md)の10進数値として0埋めなしで書式化される | `&amp;#34;115&amp;#34;` |
 | `%m` | 10進数での月。1月は`01`が出力される。結果が1桁の場合、先頭に`0`がつく。改良コマンド`%Om`を指定すると、ロケール依存の異なる表現を出力する | `&amp;#34;04&amp;#34;` |
 | `%M` | 10進数での分。結果が1桁の場合、先頭に`0`がつく。改良コマンド`%OM`を指定すると、ロケール依存の異なる表現を出力する | `&amp;#34;14&amp;#34;` |
@@ -107,12 +107,11 @@ int main()
   std::cout &amp;lt;&amp;lt; std::format(&amp;#34;2. {:%H時%M分%S秒}&amp;#34;, now) &amp;lt;&amp;lt; std::endl;
   std::cout &amp;lt;&amp;lt; std::format(&amp;#34;3. {:%H時%M分%S秒}&amp;#34;, now_sec) &amp;lt;&amp;lt; std::endl;
   std::cout &amp;lt;&amp;lt; std::format(&amp;#34;4. {:%p %I時%M分%S秒}&amp;#34;, now_sec) &amp;lt;&amp;lt; std::endl;
-  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;4. {:%p %I時%M分%S秒}&amp;#34;, now_sec) &amp;lt;&amp;lt; std::endl;
 
   // その他要素
-  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;6. {:%C}&amp;#34;, now) &amp;lt;&amp;lt; std::endl; // 世紀 (100で割って切り下げた値)
-  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;7. {:%a}&amp;#34;, now) &amp;lt;&amp;lt; std::endl; // 曜日の略称
-  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;8. {:%A}&amp;#34;, now) &amp;lt;&amp;lt; std::endl; // 曜日の完全名
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;5. {:%C}&amp;#34;, now) &amp;lt;&amp;lt; std::endl; // 世紀 (100で割って切り下げた値)
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;6. {:%a}&amp;#34;, now) &amp;lt;&amp;lt; std::endl; // 曜日の略称
+  std::cout &amp;lt;&amp;lt; std::format(&amp;#34;7. {:%A}&amp;#34;, now) &amp;lt;&amp;lt; std::endl; // 曜日の完全名
 }
 ```
 * std::chrono::system_clock[link /reference/chrono/system_clock.md]
@@ -125,9 +124,9 @@ int main()
 2. 08時27分28.1822610秒
 3. 08時27分28秒
 4. AM 08時27分28秒
-6. 20
-7. Tue
-8. Tuesday
+5. 20
+6. Tue
+7. Tuesday
 ```
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
</feed>
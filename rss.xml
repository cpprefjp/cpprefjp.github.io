<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2023-03-01T07:09:43.516064</updated>
  <id>33077be1-b6b3-4dc0-9434-5056f97dd8e1</id>

  
    <entry>
      <title>errc -- errc : LWG Issue 3869対応</title>
      <link href="https://cpprefjp.github.io/reference/system_error/errc.html"/>
      <id>7137aae806b98ff357fea841b251e65c653255c5:reference/system_error/errc.md</id>
      <updated>2023-03-01T16:05:29+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/system_error/errc.md b/reference/system_error/errc.md
index 06e5ed33b..baf735a3d 100644
--- a/reference/system_error/errc.md
+++ b/reference/system_error/errc.md
@@ -15,88 +15,89 @@ namespace std {
 この値は、[`error_code`](error_code.md)/[`error_condition`](error_condition.md)に設定する[`generic_category()`](generic_category.md)カテゴリのエラー値として使用される。
 
 
-| 列挙値                               | 値                | 説明                                     |
-|--------------------------------------|-------------------|------------------------------------------|
-| `address_family_not_supported`       | `EAFNOSUPPORT`    | アドレスファミリーがサポートされていない |
-| `address_in_use`                     | `EADDRINUSE`      | アドレスがすでに使用されている |
-| `address_not_available`              | `EADDRNOTAVAIL`   | アドレスが使用できない |
-| `already_connected`                  | `EISCONN`         | ソケットが接続されている |
-| `argument_list_too_long`             | `E2BIG`           | 引数リストが長すぎる |
-| `argument_out_of_domain`             | `EDOM`            | 引数が領域外 |
-| `bad_address`                        | `EFAULT`          | アドレスが不正 |
-| `bad_file_descriptor`                | `EBADF`           | ファイルディスクリプタが不正 |
-| `bad_message`                        | `EBADMSG`         | メッセージが不正 |
-| `broken_pipe`                        | `EPIPE`           | パイプが壊れている |
-| `connection_aborted`                 | `ECONNABORTED`    | 接続が中止された |
-| `connection_already_in_progress`     | `EALREADY`        | 接続がすでに処理中 |
-| `connection_refused`                 | `ECONNREFUSED`    | 接続が拒否された |
-| `connection_reset`                   | `ECONNRESET`      | 接続がリセットされた |
-| `cross_device_link`                  | `EXDEV`           | 不適切なリンク |
-| `destination_address_required`       | `EDESTADDRREQ`    | 宛先アドレスが必要 |
-| `device_or_resource_busy`            | `EBUSY`           | リソースが使用中 |
-| `directory_not_empty`                | `ENOTEMPTY`       | ディレクトリが空ではない |
-| `executable_format_error`            | `ENOEXEC`         | 実行ファイル形式のエラー |
-| `file_exists`                        | `EEXIST`          | ファイルが存在する |
-| `file_too_large`                     | `EFBIG`           | ファイルが大きすぎる |
-| `filename_too_long`                  | `ENAMETOOLONG`    | ファイル名が長すぎる |
-| `function_not_supported`             | `ENOSYS`          | 関数がサポートされていない(実装されていない) |
-| `host_unreachable`                   | `EHOSTUNREACH`    | ホストに到達不能 |
-| `identifier_removed`                 | `EIDRM`           | 識別子が削除された |
-| `illegal_byte_sequence`              | `EILSEQ`          | 不正なバイト列 |
-| `inappropriate_io_control_operation` | `ENOTTY`          | I/O制御操作が不適切 |
-| `interrupted`                        | `EINTR`           | 関数呼び出しが割り込まれた |
-| `invalid_argument`                   | `EINVAL`          | 引数が無効 |
-| `invalid_seek`                       | `ESPIPE`          | 無効なシーク |
-| `io_error`                           | `EIO`             | I/Oエラー |
-| `is_a_directory`                     | `EISDIR`          | ディレクトリである |
-| `message_size`                       | `EMSGSIZE`        | メッセージが長すぎる |
-| `network_down`                       | `ENETDOWN`        | ネットワークが不通 |
-| `network_reset`                      | `ENETRESET`       | 接続がネットワーク側から中止された |
-| `network_unreachable`                | `ENETUNREACH`     | ネットワークが到達不能である |
-| `no_buffer_space`                    | `ENOBUFS`         | 使用可能なバッファ空間がない |
-| `no_child_process`                   | `ECHILD`          | 子プロセスがない |
-| `no_link`                            | `ENOLINK`         | リンクが切れている |
-| `no_lock_available`                  | `ENOLCK`          | 利用できるロックがない |
-| `no_message_available`               | `ENODATA`         | ストリームの読み出しキューの先頭に読み出し可能なメッセージがない |
-| `no_message`                         | `ENOMSG`          | 要求された型のメッセージがない |
-| `no_protocol_option`                 | `ENOPROTOOPT`     | 指定されたプロトコルが利用できない |
-| `no_space_on_device`                 | `ENOSPC`          | デバイスに空き領域がない |
-| `no_stream_resources`                | `ENOSR`           | 指定されたストリームリソースがない |
-| `no_such_device_or_address`          | `ENXIO`           | そのようなデバイスやアドレスはない |
-| `no_such_device`                     | `ENODEV`          | そのようなデバイスはない |
-| `no_such_file_or_directory`          | `ENOENT`          | そのようなファイルやディレクトリはない |
-| `no_such_process`                    | `ESRCH`           | そのようなプロセスはない |
-| `not_a_directory`                    | `ENOTDIR`         | ディレクトリではない |
-| `not_a_socket`                       | `ENOTSOCK`        | ソケットではない |
-| `not_a_stream`                       | `ENOSTR`          | ストリームではない |
-| `not_connected`                      | `ENOTCONN`        | ソケットが接続されていない |
-| `not_enough_memory`                  | `ENOMEM`          | メモリ領域に十分な空きがない |
-| `not_supported`                      | `ENOTSUP`         | 操作がサポートされていない |
-| `operation_canceled`                 | `ECANCELED`       | 操作がキャンセルされた |
-| `operation_in_progress`              | `EINPROGRESS`     | 操作が実行中である |
-| `operation_not_permitted`            | `EPERM`           | 操作が許可されていない |
-| `operation_not_supported`            | `EOPNOTSUPP`      | ソケットでサポートされていない操作 |
-| `operation_would_block`              | `EWOULDBLOCK`     | 操作がブロッキングされる見込み |
-| `owner_dead`                         | `EOWNERDEAD`      | ミューテックスを所有している間に終了した |
-| `permission_denied`                  | `EACCES`          | 許可されていない |
-| `protocol_error`                     | `EPROTO`          | プロトコルエラー |
-| `protocol_not_supported`             | `EPROTONOSUPPORT` | プロトコルがサポートされていない |
-| `read_only_file_system`              | `EROFS`           | ファイルシステムが読み取り専用 |
-| `resource_deadlock_would_occur`      | `EDEADLK`         | リソースのデッドロックを回避した |
-| `resource_unavailable_try_again`     | `EAGAIN`          | リソースが一時的に利用不可 |
-| `result_out_of_range`                | `ERANGE`          | 結果が大きすぎる |
-| `state_not_recoverable`              | `ENOTRECOVERABLE` | ロックが回復不能 |
-| `stream_timeout`                     | `ETIME`           | タイムアウト |
-| `text_file_busy`                     | `ETXTBSY`         | テキストファイルが使用中 |
-| `timed_out`                          | `ETIMEDOUT`       | 操作がタイムアウト |
-| `too_many_files_open_in_system`      | `ENFILE`          | システム全体で開いているファイルが多すぎる |
-| `too_many_files_open`                | `EMFILE`          | 開いているファイルが多すぎる |
-| `too_many_links`                     | `EMLINK`          | リンクが多すぎる |
-| `too_many_symbolic_link_levels`      | `ELOOP`           | シンボリックリンクが多すぎる |
-| `value_too_large`                    | `EOVERFLOW`       | データ型に対して値が大きすぎる |
-| `wrong_protocol_type`                | `EPROTOTYPE`      | ソケットに指定できないプロトコルタイプ |
+| 列挙値                               | 値                | 説明                                     |非推奨|
+|--------------------------------------|-------------------|------------------------------------------|---|
+| `address_family_not_supported`       | `EAFNOSUPPORT`    | アドレスファミリーがサポートされていない ||
+| `address_in_use`                     | `EADDRINUSE`      | アドレスがすでに使用されている ||
+| `address_not_available`              | `EADDRNOTAVAIL`   | アドレスが使用できない ||
+| `already_connected`                  | `EISCONN`         | ソケットが接続されている ||
+| `argument_list_too_long`             | `E2BIG`           | 引数リストが長すぎる ||
+| `argument_out_of_domain`             | `EDOM`            | 引数が領域外 ||
+| `bad_address`                        | `EFAULT`          | アドレスが不正 ||
+| `bad_file_descriptor`                | `EBADF`           | ファイルディスクリプタが不正 ||
+| `bad_message`                        | `EBADMSG`         | メッセージが不正 ||
+| `broken_pipe`                        | `EPIPE`           | パイプが壊れている ||
+| `connection_aborted`                 | `ECONNABORTED`    | 接続が中止された ||
+| `connection_already_in_progress`     | `EALREADY`        | 接続がすでに処理中 ||
+| `connection_refused`                 | `ECONNREFUSED`    | 接続が拒否された ||
+| `connection_reset`                   | `ECONNRESET`      | 接続がリセットされた ||
+| `cross_device_link`                  | `EXDEV`           | 不適切なリンク ||
+| `destination_address_required`       | `EDESTADDRREQ`    | 宛先アドレスが必要 ||
+| `device_or_resource_busy`            | `EBUSY`           | リソースが使用中 ||
+| `directory_not_empty`                | `ENOTEMPTY`       | ディレクトリが空ではない ||
+| `executable_format_error`            | `ENOEXEC`         | 実行ファイル形式のエラー ||
+| `file_exists`                        | `EEXIST`          | ファイルが存在する ||
+| `file_too_large`                     | `EFBIG`           | ファイルが大きすぎる ||
+| `filename_too_long`                  | `ENAMETOOLONG`    | ファイル名が長すぎる ||
+| `function_not_supported`             | `ENOSYS`          | 関数がサポートされていない(実装されていない) ||
+| `host_unreachable`                   | `EHOSTUNREACH`    | ホストに到達不能 ||
+| `identifier_removed`                 | `EIDRM`           | 識別子が削除された ||
+| `illegal_byte_sequence`              | `EILSEQ`          | 不正なバイト列 ||
+| `inappropriate_io_control_operation` | `ENOTTY`          | I/O制御操作が不適切 ||
+| `interrupted`                        | `EINTR`           | 関数呼び出しが割り込まれた ||
+| `invalid_argument`                   | `EINVAL`          | 引数が無効 ||
+| `invalid_seek`                       | `ESPIPE`          | 無効なシーク ||
+| `io_error`                           | `EIO`             | I/Oエラー ||
+| `is_a_directory`                     | `EISDIR`          | ディレクトリである ||
+| `message_size`                       | `EMSGSIZE`        | メッセージが長すぎる ||
+| `network_down`                       | `ENETDOWN`        | ネットワークが不通 ||
+| `network_reset`                      | `ENETRESET`       | 接続がネットワーク側から中止された ||
+| `network_unreachable`                | `ENETUNREACH`     | ネットワークが到達不能である ||
+| `no_buffer_space`                    | `ENOBUFS`         | 使用可能なバッファ空間がない ||
+| `no_child_process`                   | `ECHILD`          | 子プロセスがない ||
+| `no_link`                            | `ENOLINK`         | リンクが切れている ||
+| `no_lock_available`                  | `ENOLCK`          | 利用できるロックがない ||
+| `no_message_available`               | `ENODATA`         | ストリームの読み出しキューの先頭に読み出し可能なメッセージがない |C++23で非推奨|
+| `no_message`                         | `ENOMSG`          | 要求された型のメッセージがない ||
+| `no_protocol_option`                 | `ENOPROTOOPT`     | 指定されたプロトコルが利用できない ||
+| `no_space_on_device`                 | `ENOSPC`          | デバイスに空き領域がない ||
+| `no_stream_resources`                | `ENOSR`           | 指定されたストリームリソースがない |C++23で非推奨|
+| `no_such_device_or_address`          | `ENXIO`           | そのようなデバイスやアドレスはない ||
+| `no_such_device`                     | `ENODEV`          | そのようなデバイスはない ||
+| `no_such_file_or_directory`          | `ENOENT`          | そのようなファイルやディレクトリはない ||
+| `no_such_process`                    | `ESRCH`           | そのようなプロセスはない ||
+| `not_a_directory`                    | `ENOTDIR`         | ディレクトリではない ||
+| `not_a_socket`                       | `ENOTSOCK`        | ソケットではない ||
+| `not_a_stream`                       | `ENOSTR`          | ストリームではない |C++23で非推奨|
+| `not_connected`                      | `ENOTCONN`        | ソケットが接続されていない ||
+| `not_enough_memory`                  | `ENOMEM`          | メモリ領域に十分な空きがない ||
+| `not_supported`                      | `ENOTSUP`         | 操作がサポートされていない ||
+| `operation_canceled`                 | `ECANCELED`       | 操作がキャンセルされた ||
+| `operation_in_progress`              | `EINPROGRESS`     | 操作が実行中である ||
+| `operation_not_permitted`            | `EPERM`           | 操作が許可されていない ||
+| `operation_not_supported`            | `EOPNOTSUPP`      | ソケットでサポートされていない操作 ||
+| `operation_would_block`              | `EWOULDBLOCK`     | 操作がブロッキングされる見込み ||
+| `owner_dead`                         | `EOWNERDEAD`      | ミューテックスを所有している間に終了した ||
+| `permission_denied`                  | `EACCES`          | 許可されていない ||
+| `protocol_error`                     | `EPROTO`          | プロトコルエラー ||
+| `protocol_not_supported`             | `EPROTONOSUPPORT` | プロトコルがサポートされていない ||
+| `read_only_file_system`              | `EROFS`           | ファイルシステムが読み取り専用 ||
+| `resource_deadlock_would_occur`      | `EDEADLK`         | リソースのデッドロックを回避した ||
+| `resource_unavailable_try_again`     | `EAGAIN`          | リソースが一時的に利用不可 ||
+| `result_out_of_range`                | `ERANGE`          | 結果が大きすぎる ||
+| `state_not_recoverable`              | `ENOTRECOVERABLE` | ロックが回復不能 ||
+| `stream_timeout`                     | `ETIME`           | タイムアウト |C++23で非推奨|
+| `text_file_busy`                     | `ETXTBSY`         | テキストファイルが使用中 ||
+| `timed_out`                          | `ETIMEDOUT`       | 操作がタイムアウト ||
+| `too_many_files_open_in_system`      | `ENFILE`          | システム全体で開いているファイルが多すぎる ||
+| `too_many_files_open`                | `EMFILE`          | 開いているファイルが多すぎる ||
+| `too_many_links`                     | `EMLINK`          | リンクが多すぎる ||
+| `too_many_symbolic_link_levels`      | `ELOOP`           | シンボリックリンクが多すぎる ||
+| `value_too_large`                    | `EOVERFLOW`       | データ型に対して値が大きすぎる ||
+| `wrong_protocol_type`                | `EPROTOTYPE`      | ソケットに指定できないプロトコルタイプ ||
 
+非推奨とされているものは、対応する`errno`値がPOSIX規格において廃止されたことに対応している。
 
 ## 参照
 - [Man page of ERRNO](http://linuxjm.osdn.jp/html/LDP_man-pages/man3/errno.3.html)
-
+- [LWG Issue 3869. Deprecate `std::errc` constants related to UNIX STREAMS](https://cplusplus.github.io/LWG/issue3869)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator&lt;&lt; -- basic_ostream::operator&lt;&lt; : C++23対応として拡張浮動小数点数型サポートを追加 #1022</title>
      <link href="https://cpprefjp.github.io/reference/ostream/basic_ostream/op_ostream.html"/>
      <id>85010fbf2610dd0ecf5616502c609d70839d02b3:reference/ostream/basic_ostream/op_ostream.md</id>
      <updated>2023-02-28T17:48:48+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ostream/basic_ostream/op_ostream.md b/reference/ostream/basic_ostream/op_ostream.md
index 740f02cec..6a1dfae91 100644
--- a/reference/ostream/basic_ostream/op_ostream.md
+++ b/reference/ostream/basic_ostream/op_ostream.md
@@ -7,75 +7,86 @@
 ```cpp
 // マニピュレータの実行
 // 3つとも関数へのポインタを引数に取る。
-basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; operator&amp;lt;&amp;lt;(basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; (*pf)(basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp;));
-basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; operator&amp;lt;&amp;lt;(basic_ios&amp;lt;CharT, Traits&amp;gt;&amp;amp; (*pf)(basic_ios&amp;lt;CharT, Traits&amp;gt;&amp;amp;));
-basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; operator&amp;lt;&amp;lt;(ios_base&amp;amp; (*pf)(ios_base&amp;amp;));
+basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp;
+  operator&amp;lt;&amp;lt;(basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; (*pf)(basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp;)); // (1) C++03
+basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp;
+  operator&amp;lt;&amp;lt;(basic_ios&amp;lt;CharT, Traits&amp;gt;&amp;amp; (*pf)(basic_ios&amp;lt;CharT, Traits&amp;gt;&amp;amp;));         // (2) C++03
+basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp;
+  operator&amp;lt;&amp;lt;(ios_base&amp;amp; (*pf)(ios_base&amp;amp;));                                         // (3) C++03
 
 // bool値・数値・ポインタの書式化出力
-basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; operator&amp;lt;&amp;lt;(bool n);
-basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; operator&amp;lt;&amp;lt;(short n);
-basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; operator&amp;lt;&amp;lt;(unsigned short n);
-basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; operator&amp;lt;&amp;lt;(int n);
-basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; operator&amp;lt;&amp;lt;(unsigned int n);
-basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; operator&amp;lt;&amp;lt;(long n);
-basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; operator&amp;lt;&amp;lt;(unsigned long n);
-basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; operator&amp;lt;&amp;lt;(long long n); // C++11
-basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; operator&amp;lt;&amp;lt;(unsigned long long n); // C++11
-basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; operator&amp;lt;&amp;lt;(float f);
-basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; operator&amp;lt;&amp;lt;(double f);
-basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; operator&amp;lt;&amp;lt;(long double f);
-basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; operator&amp;lt;&amp;lt;(const void* p);
-basic_ostream&amp;lt;charT, traits&amp;gt;&amp;amp; operator&amp;lt;&amp;lt;(nullptr_t);            // C++17
+basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; operator&amp;lt;&amp;lt;(bool n);               // (4) C++03
+basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; operator&amp;lt;&amp;lt;(short n);              // (5) C++03
+basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; operator&amp;lt;&amp;lt;(unsigned short n);     // (6) C++03
+basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; operator&amp;lt;&amp;lt;(int n);                // (7) C++03
+basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; operator&amp;lt;&amp;lt;(unsigned int n);       // (8) C++03
+basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; operator&amp;lt;&amp;lt;(long n);               // (9) C++03
+basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; operator&amp;lt;&amp;lt;(unsigned long n);      // (10) C++03
+basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; operator&amp;lt;&amp;lt;(long long n);          // (11) C++11
+basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; operator&amp;lt;&amp;lt;(unsigned long long n); // (12) C++11
+basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; operator&amp;lt;&amp;lt;(float f);              // (13) C++03
+basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; operator&amp;lt;&amp;lt;(double f);             // (14) C++03
+basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; operator&amp;lt;&amp;lt;(long double f);        // (15) C++03
+basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp;
+  operator&amp;lt;&amp;lt;(extended-floating-point-type f);                   // (16) C++23
+basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; operator&amp;lt;&amp;lt;(const void* p);        // (17) C++03
+basic_ostream&amp;lt;charT, traits&amp;gt;&amp;amp; operator&amp;lt;&amp;lt;(nullptr_t);            // (18) C++17
 
 // ストリームバッファの非書式化出力
-basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; operator&amp;lt;&amp;lt;(basic_streambuf&amp;lt;CharT, Traits&amp;gt;* sb);
+basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; operator&amp;lt;&amp;lt;(basic_streambuf&amp;lt;CharT, Traits&amp;gt;* sb); // (19) C++03
 ```
 * nullptr_t[link /reference/cstddef/nullptr_t.md]
+* extended-floating-point-type[link /reference/stdfloat.md]
 
 ## 概要
 
 ストリームへの出力またはマニピュレータの実行を行う。
 
-- マニピュレータを実行するオーバーロードそれ自体は、書式化出力関数・非書式化出力関数いずれにも該当しない。
-- 数値型（`bool`も含む）とポインタに対するオーバーロードは、書式化出力関数である。
-- `basic_streambuf`に対するオーバーロードは、非書式化出力関数である。
+- (1)-(3) : マニピュレータを実行するオーバーロードそれ自体は、書式化出力関数・非書式化出力関数いずれにも該当しない
+- (4)-(18) : 数値型（`bool`も含む）とポインタに対するオーバーロードは、書式化出力関数である
+- (19) : `basic_streambuf`に対するオーバーロードは、非書式化出力関数である
 
 ## 効果
 
-### マニピュレータの実行
+### (1)-(3) : マニピュレータの実行
 
 1. `pf(*this)`を呼び出す。
 
-### bool値・数値・ポインタの書式化出力
+### (4)-(17) : bool値・数値・ポインタの書式化出力
 
-1. `sentry`オブジェクトを構築する。`sentry`オブジェクトが失敗を示した場合、何もしない。
-1. `num_put::put`を使用して入力のパース・数値への変換を行う。実引数を渡すに際し、一部の型では以下のように型変換を行う。
-	- `short`
-		- `flags()`に`hex`または`oct`が設定されていれば`static_cast&amp;lt;long&amp;gt;(static_cast&amp;lt;unsigned short&amp;gt;(n))`
-		- それ以外では`static_cast&amp;lt;long&amp;gt;(n)`
-	- `int`
-		- `flags()`に`hex`または`oct`が設定されていれば`static_cast&amp;lt;long&amp;gt;(static_cast&amp;lt;unsigned int&amp;gt;(n))`
-		- それ以外では`static_cast&amp;lt;long&amp;gt;(n)`
-	- `unsigned short`、`unsigned int`: `static_cast&amp;lt;unsigned long&amp;gt;(n)`
-	- `float`: `static_cast&amp;lt;double&amp;gt;(n)`
-1. `num_put::put`から得られた`iostate`値を実引数にして`setstate`関数を呼び出す。
+1. `sentry`オブジェクトを構築する。`sentry`オブジェクトが失敗を示した場合、何もしない
+1. `num_put::put`を使用して入力のパース・数値への変換を行う。実引数を渡すに際し、一部の型では以下のように型変換を行う
+    - (5) `short`:
+        - `flags()`に`hex`または`oct`が設定されていれば`static_cast&amp;lt;long&amp;gt;(static_cast&amp;lt;unsigned short&amp;gt;(n))`
+        - それ以外では`static_cast&amp;lt;long&amp;gt;(n)`
+    - (6) `unsigned short`: `static_cast&amp;lt;unsigned long&amp;gt;(n)`
+    - (7) `int`:
+        - `flags()`に`hex`または`oct`が設定されていれば`static_cast&amp;lt;long&amp;gt;(static_cast&amp;lt;unsigned int&amp;gt;(n))`
+        - それ以外では`static_cast&amp;lt;long&amp;gt;(n)`
+    - (8) `unsigned int`: `static_cast&amp;lt;unsigned long&amp;gt;(n)`
+    - (13) `float`: `static_cast&amp;lt;double&amp;gt;(f)`
+    - (16) 拡張浮動小数点数型:
+        - 変換順位が`double`以下であれば、`static_cast&amp;lt;double&amp;gt;(f)`
+        - そうでなく変換順位が`long double`以下であれば、`static_cast&amp;lt;long double&amp;gt;(f)`
+        - そうでなければ実装定義の意味論を持ち、この演算子は条件付きサポートとなる
+1. `num_put::put`から得られた`iostate`値を実引数にして`setstate`関数を呼び出す
 
 
-### `nullptr_t`の出力
+### (18) : `nullptr_t`の出力
 
 - C++17 : 実装定義の出力文字列`s`を、`return operator&amp;lt;&amp;lt;(s)`として渡した場合と等価である。
 
 
-### ストリームバッファの非書式化出力
+### (19) : ストリームバッファの非書式化出力
 
 別のストリームバッファからの入力をストリームに出力する。
 
 1. `sentry`オブジェクトを構築する。`sentry`オブジェクトが失敗を示した場合、何もしない。
 1. 仮引数`sb`がヌルポインタの場合、`setstate(badbit)`を呼び出して終了する。
 1. 以下のいずれかを満たすまで、`sb`から文字を入力して`this`へ出力する。
-	- EOFに達した。
-	- 出力処理に失敗した（この場合、失敗したときの文字は入力側のストリームバッファに戻される）。
-	- 例外が発生した。
+    - EOFに達した。
+    - 出力処理に失敗した（この場合、失敗したときの文字は入力側のストリームバッファに戻される）。
+    - 例外が発生した。
 
 入力がなされなかった場合、`setstate(failbit)`を呼び出す。
 
@@ -86,9 +97,9 @@ basic_ostream&amp;lt;CharT, Traits&amp;gt;&amp;amp; operator&amp;lt;&amp;lt;(basic_streambuf&amp;lt;CharT, Traits&amp;gt;* sb);
 
 
 ## 備考
-
 - このクラスにはメンバ関数版の`operator&amp;lt;&amp;lt;`と非メンバ関数版の`operator&amp;lt;&amp;lt;`があるが、ロケールに依存して出力が変わる型へのオーバーロードが、メンバ関数版として定義される設計となっている。
     - 参照 : [N0470 A Draft for the Specification of the IOStream Classes](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/1994/N0470.asc)
+- (16) : 実装はCV修飾されていない全ての拡張浮動小数点数型に対するオーバーロードを提供する
 
 
 ## 例
@@ -105,8 +116,6 @@ int main() {
 101
 ```
 
-## 実装例
-TBD
 
 ## バージョン
 ### 言語
@@ -117,43 +126,45 @@ TBD
 ## 関連項目
 
 - このほかの`&amp;lt;&amp;lt;`演算子関数
-	- [文字・文字列の書式化出力、および、右辺値ストリームに対する出力](op_ostream_free.md)
-	- [`std::sub_match`に関するもの](../../regex/sub_match/op_ostream.md)
-	- [`std::error_code`に関するもの](../../system_error/error_code/op_ostream.md)
-	- [`std::complex`に関するもの](../../complex/complex/op_ostream.md)
-	- [`std::bitset`に関するもの](../../bitset/bitset/op_ostream.md)
-	- [`std::basic_string`に関するもの](../../string/basic_string/op_ostream.md)
-	- [`std::shared_ptr`に関するもの](../../memory/shared_ptr/op_ostream.md)
-	- [`std::shuffle_order_engine`に関するもの](../../random/shuffle_order_engine/op_ostream.md)
-	- [`std::gamma_distribution`に関するもの](../../random/gamma_distribution/op_ostream.md)
-	- [`std::geometric_distribution`に関するもの](../../random/geometric_distribution/op_ostream.md)
-	- [`std::extreme_value_distribution`に関するもの](../../random/extreme_value_distribution/op_ostream.md)
-	- [`std::fisher_f_distribution`に関するもの](../../random/fisher_f_distribution/op_ostream.md)
-	- [`std::mersenne_twister_engine`に関するもの](../../random/mersenne_twister_engine/op_ostream.md)
-	- [`std::chi_squared_distribution`に関するもの](../../random/chi_squared_distribution/op_ostream.md)
-	- [`std::exponential_distribution`に関するもの](../../random/exponential_distribution/op_ostream.md)
-	- [`std::discrete_distribution`に関するもの](../../random/discrete_distribution/op_ostream.md)
-	- [`std::subtract_with_carry_engine`に関するもの](../../random/subtract_with_carry_engine/op_ostream.md)
-	- [`std::piecewise_constant_distribution`に関するもの](../../random/piecewise_constant_distribution/op_ostream.md)
-	- [`std::poisson_distribution`に関するもの](../../random/poisson_distribution/op_ostream.md)
-	- [`std::student_t_distribution`に関するもの](../../random/student_t_distribution/op_ostream.md)
-	- [`std::bernoulli_distribution`に関するもの](../../random/bernoulli_distribution/op_ostream.md)
-	- [`std::weibull_distribution`に関するもの](../../random/weibull_distribution/op_ostream.md)
-	- [`std::binomial_distribution`に関するもの](../../random/binomial_distribution/op_ostream.md)
-	- [`std::piecewise_linear_distribution`に関するもの](../../random/piecewise_linear_distribution/op_ostream.md)
-	- [`std::uniform_real_distribution`に関するもの](../../random/uniform_real_distribution/op_ostream.md)
-	- [`std::negative_binomial_distribution`に関するもの](../../random/negative_binomial_distribution/op_ostream.md)
-	- [`std::discard_block_engine`に関するもの](../../random/discard_block_engine/op_ostream.md)
-	- [`std::normal_distribution`に関するもの](../../random/normal_distribution/op_ostream.md)
-	- [`std::cauchy_distribution`に関するもの](../../random/cauchy_distribution/op_ostream.md)
-	- [`std::lognormal_distribution`に関するもの](../../random/lognormal_distribution/op_ostream.md)
-	- [`std::linear_congruential_engine`に関するもの](../../random/linear_congruential_engine/op_ostream.md)
-	- [`std::uniform_int_distribution`に関するもの](../../random/uniform_int_distribution/op_ostream.md)
-	- [`std::independent_bits_engine`に関するもの](../../random/independent_bits_engine/op_ostream.md)
+    - [文字・文字列の書式化出力、および、右辺値ストリームに対する出力](op_ostream_free.md)
+    - [`std::sub_match`に関するもの](../../regex/sub_match/op_ostream.md)
+    - [`std::error_code`に関するもの](../../system_error/error_code/op_ostream.md)
+    - [`std::complex`に関するもの](../../complex/complex/op_ostream.md)
+    - [`std::bitset`に関するもの](../../bitset/bitset/op_ostream.md)
+    - [`std::basic_string`に関するもの](../../string/basic_string/op_ostream.md)
+    - [`std::shared_ptr`に関するもの](../../memory/shared_ptr/op_ostream.md)
+    - [`std::shuffle_order_engine`に関するもの](../../random/shuffle_order_engine/op_ostream.md)
+    - [`std::gamma_distribution`に関するもの](../../random/gamma_distribution/op_ostream.md)
+    - [`std::geometric_distribution`に関するもの](../../random/geometric_distribution/op_ostream.md)
+    - [`std::extreme_value_distribution`に関するもの](../../random/extreme_value_distribution/op_ostream.md)
+    - [`std::fisher_f_distribution`に関するもの](../../random/fisher_f_distribution/op_ostream.md)
+    - [`std::mersenne_twister_engine`に関するもの](../../random/mersenne_twister_engine/op_ostream.md)
+    - [`std::chi_squared_distribution`に関するもの](../../random/chi_squared_distribution/op_ostream.md)
+    - [`std::exponential_distribution`に関するもの](../../random/exponential_distribution/op_ostream.md)
+    - [`std::discrete_distribution`に関するもの](../../random/discrete_distribution/op_ostream.md)
+    - [`std::subtract_with_carry_engine`に関するもの](../../random/subtract_with_carry_engine/op_ostream.md)
+    - [`std::piecewise_constant_distribution`に関するもの](../../random/piecewise_constant_distribution/op_ostream.md)
+    - [`std::poisson_distribution`に関するもの](../../random/poisson_distribution/op_ostream.md)
+    - [`std::student_t_distribution`に関するもの](../../random/student_t_distribution/op_ostream.md)
+    - [`std::bernoulli_distribution`に関するもの](../../random/bernoulli_distribution/op_ostream.md)
+    - [`std::weibull_distribution`に関するもの](../../random/weibull_distribution/op_ostream.md)
+    - [`std::binomial_distribution`に関するもの](../../random/binomial_distribution/op_ostream.md)
+    - [`std::piecewise_linear_distribution`に関するもの](../../random/piecewise_linear_distribution/op_ostream.md)
+    - [`std::uniform_real_distribution`に関するもの](../../random/uniform_real_distribution/op_ostream.md)
+    - [`std::negative_binomial_distribution`に関するもの](../../random/negative_binomial_distribution/op_ostream.md)
+    - [`std::discard_block_engine`に関するもの](../../random/discard_block_engine/op_ostream.md)
+    - [`std::normal_distribution`に関するもの](../../random/normal_distribution/op_ostream.md)
+    - [`std::cauchy_distribution`に関するもの](../../random/cauchy_distribution/op_ostream.md)
+    - [`std::lognormal_distribution`に関するもの](../../random/lognormal_distribution/op_ostream.md)
+    - [`std::linear_congruential_engine`に関するもの](../../random/linear_congruential_engine/op_ostream.md)
+    - [`std::uniform_int_distribution`に関するもの](../../random/uniform_int_distribution/op_ostream.md)
+    - [`std::independent_bits_engine`に関するもの](../../random/independent_bits_engine/op_ostream.md)
 - 出力対象の型
-	- [`basic_streambuf`](../../streambuf/basic_streambuf.md)
+    - [`basic_streambuf`](../../streambuf/basic_streambuf.md)
 
 
 ## 参照
 - [N2114 `long long` Goes to the Library, Revision 1](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2006/n2114.html)
 - [LWG Issue 2221. No formatted output operator for `nullptr`](https://wg21.cmeerw.net/lwg/issue2221)
+- [P1467R9 Extended floating-point types and standard names](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p1467r9.html)
+    - C++23で拡張浮動小数点数型の`ostream`出力がサポートされた
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>bfloat16_t -- basic_ostream::operator&lt;&lt; : C++23対応として拡張浮動小数点数型サポートを追加 #1022</title>
      <link href="https://cpprefjp.github.io/reference/stdfloat/bfloat16_t.html"/>
      <id>85010fbf2610dd0ecf5616502c609d70839d02b3:reference/stdfloat/bfloat16_t.md</id>
      <updated>2023-02-28T17:48:48+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stdfloat/bfloat16_t.md b/reference/stdfloat/bfloat16_t.md
index 8334dbc2b..8e748b72d 100644
--- a/reference/stdfloat/bfloat16_t.md
+++ b/reference/stdfloat/bfloat16_t.md
@@ -176,6 +176,7 @@ int main() {
 - [`std::float32_t`](float32_t.md)
 - [`std::float64_t`](float64_t.md)
 - [`std::float128_t`](float128_t.md)
+- [`std::basic_ostream::operator&amp;lt;&amp;lt;`](/reference/ostream/basic_ostream/op_ostream.md)
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>float128_t -- basic_ostream::operator&lt;&lt; : C++23対応として拡張浮動小数点数型サポートを追加 #1022</title>
      <link href="https://cpprefjp.github.io/reference/stdfloat/float128_t.html"/>
      <id>85010fbf2610dd0ecf5616502c609d70839d02b3:reference/stdfloat/float128_t.md</id>
      <updated>2023-02-28T17:48:48+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stdfloat/float128_t.md b/reference/stdfloat/float128_t.md
index a3802e2db..f27a31bce 100644
--- a/reference/stdfloat/float128_t.md
+++ b/reference/stdfloat/float128_t.md
@@ -175,6 +175,7 @@ int main() {
 - [`std::float64_t`](float64_t.md)
 - [`std::bfloat16_t`](bfloat16_t.md)
 - [`std::numeric_limits&amp;lt;T&amp;gt;::is_iec559`](/reference/limits/numeric_limits/is_iec559.md)
+- [`std::basic_ostream::operator&amp;lt;&amp;lt;`](/reference/ostream/basic_ostream/op_ostream.md)
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>float16_t -- basic_ostream::operator&lt;&lt; : C++23対応として拡張浮動小数点数型サポートを追加 #1022</title>
      <link href="https://cpprefjp.github.io/reference/stdfloat/float16_t.html"/>
      <id>85010fbf2610dd0ecf5616502c609d70839d02b3:reference/stdfloat/float16_t.md</id>
      <updated>2023-02-28T17:48:48+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stdfloat/float16_t.md b/reference/stdfloat/float16_t.md
index 38896bf40..8ddfe47e5 100644
--- a/reference/stdfloat/float16_t.md
+++ b/reference/stdfloat/float16_t.md
@@ -175,6 +175,7 @@ int main() {
 - [`std::float128_t`](float128_t.md)
 - [`std::bfloat16_t`](bfloat16_t.md)
 - [`std::numeric_limits&amp;lt;T&amp;gt;::is_iec559`](/reference/limits/numeric_limits/is_iec559.md)
+- [`std::basic_ostream::operator&amp;lt;&amp;lt;`](/reference/ostream/basic_ostream/op_ostream.md)
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>float32_t -- basic_ostream::operator&lt;&lt; : C++23対応として拡張浮動小数点数型サポートを追加 #1022</title>
      <link href="https://cpprefjp.github.io/reference/stdfloat/float32_t.html"/>
      <id>85010fbf2610dd0ecf5616502c609d70839d02b3:reference/stdfloat/float32_t.md</id>
      <updated>2023-02-28T17:48:48+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stdfloat/float32_t.md b/reference/stdfloat/float32_t.md
index de37aa6a8..18870b67f 100644
--- a/reference/stdfloat/float32_t.md
+++ b/reference/stdfloat/float32_t.md
@@ -175,6 +175,7 @@ int main() {
 - [`std::float128_t`](float128_t.md)
 - [`std::bfloat16_t`](bfloat16_t.md)
 - [`std::numeric_limits&amp;lt;T&amp;gt;::is_iec559`](/reference/limits/numeric_limits/is_iec559.md)
+- [`std::basic_ostream::operator&amp;lt;&amp;lt;`](/reference/ostream/basic_ostream/op_ostream.md)
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>float64_t -- basic_ostream::operator&lt;&lt; : C++23対応として拡張浮動小数点数型サポートを追加 #1022</title>
      <link href="https://cpprefjp.github.io/reference/stdfloat/float64_t.html"/>
      <id>85010fbf2610dd0ecf5616502c609d70839d02b3:reference/stdfloat/float64_t.md</id>
      <updated>2023-02-28T17:48:48+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stdfloat/float64_t.md b/reference/stdfloat/float64_t.md
index e696fd9c8..186c998a3 100644
--- a/reference/stdfloat/float64_t.md
+++ b/reference/stdfloat/float64_t.md
@@ -175,6 +175,7 @@ int main() {
 - [`std::float128_t`](float128_t.md)
 - [`std::bfloat16_t`](bfloat16_t.md)
 - [`std::numeric_limits&amp;lt;T&amp;gt;::is_iec559`](/reference/limits/numeric_limits/is_iec559.md)
+- [`std::basic_ostream::operator&amp;lt;&amp;lt;`](/reference/ostream/basic_ostream/op_ostream.md)
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_iec559 -- numeric_limits::is_iec559 : C++23対応 #1022</title>
      <link href="https://cpprefjp.github.io/reference/limits/numeric_limits/is_iec559.html"/>
      <id>3607e5ab6eb5bf25b32929dc2426d78672ab5e9f:reference/limits/numeric_limits/is_iec559.md</id>
      <updated>2023-02-27T18:24:07+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/limits/numeric_limits/is_iec559.md b/reference/limits/numeric_limits/is_iec559.md
index 1c563ec06..b08d9d4cc 100644
--- a/reference/limits/numeric_limits/is_iec559.md
+++ b/reference/limits/numeric_limits/is_iec559.md
@@ -5,17 +5,18 @@
 * variable[meta id-type]
 
 ```cpp
-// C++03
-static const bool is_iec559;
-
-// C++11
-static constexpr bool is_iec559;
+static const bool is_iec559;     // (1) C++03
+static constexpr bool is_iec559; // (1) C++11
 ```
 
 ## 概要
 浮動小数点数型において、型`T`がIEC 559 (IEEE 754) に準拠しているかを判定する。
 
 
+## 備考
+- C++23 : [`float16_t`](/reference/stdfloat/float16_t.md)、[`float32_t`](/reference/stdfloat/float32_t.md)、[`float64_t`](/reference/stdfloat/float64_t.md)、[`float128_t`](/reference/stdfloat/float128_t.md)が存在する場合、この値は`true`となる
+
+
 ## 例
 ```cpp example
 #include &amp;lt;iostream&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>float128_t -- numeric_limits::is_iec559 : C++23対応 #1022</title>
      <link href="https://cpprefjp.github.io/reference/stdfloat/float128_t.html"/>
      <id>3607e5ab6eb5bf25b32929dc2426d78672ab5e9f:reference/stdfloat/float128_t.md</id>
      <updated>2023-02-27T18:24:07+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stdfloat/float128_t.md b/reference/stdfloat/float128_t.md
index c0547e7de..a3802e2db 100644
--- a/reference/stdfloat/float128_t.md
+++ b/reference/stdfloat/float128_t.md
@@ -174,6 +174,7 @@ int main() {
 - [`std::float32_t`](float32_t.md)
 - [`std::float64_t`](float64_t.md)
 - [`std::bfloat16_t`](bfloat16_t.md)
+- [`std::numeric_limits&amp;lt;T&amp;gt;::is_iec559`](/reference/limits/numeric_limits/is_iec559.md)
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>float16_t -- numeric_limits::is_iec559 : C++23対応 #1022</title>
      <link href="https://cpprefjp.github.io/reference/stdfloat/float16_t.html"/>
      <id>3607e5ab6eb5bf25b32929dc2426d78672ab5e9f:reference/stdfloat/float16_t.md</id>
      <updated>2023-02-27T18:24:07+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stdfloat/float16_t.md b/reference/stdfloat/float16_t.md
index 1e6f2eb83..38896bf40 100644
--- a/reference/stdfloat/float16_t.md
+++ b/reference/stdfloat/float16_t.md
@@ -174,6 +174,7 @@ int main() {
 - [`std::float64_t`](float64_t.md)
 - [`std::float128_t`](float128_t.md)
 - [`std::bfloat16_t`](bfloat16_t.md)
+- [`std::numeric_limits&amp;lt;T&amp;gt;::is_iec559`](/reference/limits/numeric_limits/is_iec559.md)
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>float32_t -- numeric_limits::is_iec559 : C++23対応 #1022</title>
      <link href="https://cpprefjp.github.io/reference/stdfloat/float32_t.html"/>
      <id>3607e5ab6eb5bf25b32929dc2426d78672ab5e9f:reference/stdfloat/float32_t.md</id>
      <updated>2023-02-27T18:24:07+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stdfloat/float32_t.md b/reference/stdfloat/float32_t.md
index ff19acbd0..de37aa6a8 100644
--- a/reference/stdfloat/float32_t.md
+++ b/reference/stdfloat/float32_t.md
@@ -174,6 +174,7 @@ int main() {
 - [`std::float64_t`](float64_t.md)
 - [`std::float128_t`](float128_t.md)
 - [`std::bfloat16_t`](bfloat16_t.md)
+- [`std::numeric_limits&amp;lt;T&amp;gt;::is_iec559`](/reference/limits/numeric_limits/is_iec559.md)
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>float64_t -- numeric_limits::is_iec559 : C++23対応 #1022</title>
      <link href="https://cpprefjp.github.io/reference/stdfloat/float64_t.html"/>
      <id>3607e5ab6eb5bf25b32929dc2426d78672ab5e9f:reference/stdfloat/float64_t.md</id>
      <updated>2023-02-27T18:24:07+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/stdfloat/float64_t.md b/reference/stdfloat/float64_t.md
index c477a8ace..e696fd9c8 100644
--- a/reference/stdfloat/float64_t.md
+++ b/reference/stdfloat/float64_t.md
@@ -174,6 +174,7 @@ int main() {
 - [`std::float32_t`](float32_t.md)
 - [`std::float128_t`](float128_t.md)
 - [`std::bfloat16_t`](bfloat16_t.md)
+- [`std::numeric_limits&amp;lt;T&amp;gt;::is_iec559`](/reference/limits/numeric_limits/is_iec559.md)
 
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>variant -- Merge pull request #1129 from cpprefjp/sakujiro-inagaki-patch-1</title>
      <link href="https://cpprefjp.github.io/reference/variant/variant.html"/>
      <id>1a85749125767560b89ee47d346006157bd320a0:reference/variant/variant.md</id>
      <updated>2023-02-25T19:25:34+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/variant/variant.md b/reference/variant/variant.md
index fa7cd33db..fb0dae86a 100644
--- a/reference/variant/variant.md
+++ b/reference/variant/variant.md
@@ -43,7 +43,7 @@ std::visit([](auto&amp;amp; x) {
 
 このクラスと同様のことは共用体を使用しても達成できるが、このクラスはより使いやすいよう設計されている。
 
-このクラスは動的メモリ確保は行わず、スタック領域のみを使用する。
+このクラスは追加の動的メモリ確保は行わず、保持するオブジェクトを自身のオブジェクト表現内に直接割り当てる。
 
 
 ### 備考
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>variant -- variantが追加の動的メモリ確保を行わないことを説明する文を修正</title>
      <link href="https://cpprefjp.github.io/reference/variant/variant.html"/>
      <id>9116a9393d60707981347afccd127578fd47f374:reference/variant/variant.md</id>
      <updated>2023-02-25T12:56:48+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/variant/variant.md b/reference/variant/variant.md
index fa7cd33db..fb0dae86a 100644
--- a/reference/variant/variant.md
+++ b/reference/variant/variant.md
@@ -43,7 +43,7 @@ std::visit([](auto&amp;amp; x) {
 
 このクラスと同様のことは共用体を使用しても達成できるが、このクラスはより使いやすいよう設計されている。
 
-このクラスは動的メモリ確保は行わず、スタック領域のみを使用する。
+このクラスは追加の動的メモリ確保は行わず、保持するオブジェクトを自身のオブジェクト表現内に直接割り当てる。
 
 
 ### 備考
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>sakujiro-inagaki</name>
        <email>81898143+sakujiro-inagaki@users.noreply.github.com</email>
      </author>
    </entry>
  
</feed>
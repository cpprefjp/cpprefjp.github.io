<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2023-06-02T14:39:56.545352</updated>
  <id>1bf10686-13ab-4eaf-9ef2-153bbad34d74</id>

  
    <entry>
      <title>contains -- 変数名を変更</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map/contains.html"/>
      <id>19decb254a0a081db7d7047d2405ac1ae5b8a066:reference/flat_map/flat_map/contains.md</id>
      <updated>2023-05-25T13:57:22+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map/contains.md b/reference/flat_map/flat_map/contains.md
index 4f8e68a1c..23eb0bf27 100644
--- a/reference/flat_map/flat_map/contains.md
+++ b/reference/flat_map/flat_map/contains.md
@@ -41,14 +41,14 @@ return find(x) != end();
 
 int main()
 {
-  std::flat_map&amp;lt;char, int&amp;gt; m = {
+  std::flat_map&amp;lt;char, int&amp;gt; fm = {
     {&amp;#39;a&amp;#39;, 3},
     {&amp;#39;b&amp;#39;, 1},
     {&amp;#39;c&amp;#39;, 4}
   };
 
   // キー&amp;#39;b&amp;#39;の要素が含まれているか
-  if (m.contains(&amp;#39;b&amp;#39;)) {
+  if (fm.contains(&amp;#39;b&amp;#39;)) {
     std::cout &amp;lt;&amp;lt; &amp;#34;contain&amp;#34; &amp;lt;&amp;lt; std::endl;
   }
   else {
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>flat_map -- flat_map : containsとcountを追加 #1078</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map.html"/>
      <id>d91c1da0f13281d896a93c82e69da2b0f8eb611b:reference/flat_map/flat_map.md</id>
      <updated>2023-05-25T13:29:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map.md b/reference/flat_map/flat_map.md
index e75b17b66..2298004e7 100644
--- a/reference/flat_map/flat_map.md
+++ b/reference/flat_map/flat_map.md
@@ -76,9 +76,9 @@ namespace std {
 |---------------------------------------|--------------------------------------------|-------|
 | [`operator[]`](flat_map/op_at.md)        | 指定したキーを持つ要素を取得する           | C++23 |
 | [`at`](flat_map/at.md)                   | 指定したキーを持つ要素を取得する           | C++23 |
-| [`count`](flat_map/count.md.nolink)             | 指定したキーにマッチする要素の数を取得する | C++23 |
+| [`count`](flat_map/count.md)             | 指定したキーにマッチする要素の数を取得する | C++23 |
 | [`find`](flat_map/find.md)               | 指定したキーで要素を探す                   | C++23 |
-| [`contains`](flat_map/contains.md.nolink)       | 指定したキーの要素が含まれているかを判定する | C++23 |
+| [`contains`](flat_map/contains.md)       | 指定したキーの要素が含まれているかを判定する | C++23 |
 | [`equal_range`](flat_map/equal_range.md.nolink) | 指定したキーにマッチする要素範囲を取得する | C++23 |
 | [`lower_bound`](flat_map/lower_bound.md.nolink) | 与えられた値より小さくない最初の要素へのイテレータを取得する | C++23 |
 | [`upper_bound`](flat_map/upper_bound.md.nolink) | 特定の値よりも大きい最初の要素へのイテレータを取得する       | C++23 |
@@ -89,6 +89,8 @@ namespace std {
 |-------------------------------------|----------------------------------------|----------------|
 | [`key_comp`](flat_map/key_comp.md.nolink)     | キー比較用の関数オブジェクトを取得する | C++23 |
 | [`value_comp`](flat_map/value_comp.md.nolink) | 要素比較用の関数オブジェクトを取得する | C++23 |
+| [`keys`](flat_map/keys.md.nolink)             | キーのコンテナを取得する | C++23 |
+| [`values`](flat_map/values.md.nolink)         | 値のコンテナを取得する | C++23 |
 
 
 ## メンバ型
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>contains -- flat_map : containsとcountを追加 #1078</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map/contains.html"/>
      <id>d91c1da0f13281d896a93c82e69da2b0f8eb611b:reference/flat_map/flat_map/contains.md</id>
      <updated>2023-05-25T13:29:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map/contains.md b/reference/flat_map/flat_map/contains.md
new file mode 100644
index 000000000..4f8e68a1c
--- /dev/null
+++ b/reference/flat_map/flat_map/contains.md
@@ -0,0 +1,74 @@
+# contains
+* flat_map[meta header]
+* std[meta namespace]
+* flat_map[meta class]
+* function[meta id-type]
+* cpp23[meta cpp]
+
+```cpp
+bool contains(const key_type&amp;amp; x) const; // (1) C++23
+
+template &amp;lt;class K&amp;gt;
+bool contains(const K&amp;amp; x) const;        // (2) C++23
+```
+
+
+## 概要
+指定されたキー`x`に一致する要素がコンテナに含まれているかを判定する。
+
+- (1) : クラスのテンプレートパラメータ`key_type`型のキーを受け取る
+- (2) : `key_type`と比較可能な`K`型のキーを受け取る
+
+
+## 戻り値
+以下と等価：
+
+```cpp
+return find(x) != end();
+```
+* find[link find.md]
+* end()[link end.md.nolink]
+
+
+## 計算量
+対数時間
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;flat_map&amp;gt;
+
+int main()
+{
+  std::flat_map&amp;lt;char, int&amp;gt; m = {
+    {&amp;#39;a&amp;#39;, 3},
+    {&amp;#39;b&amp;#39;, 1},
+    {&amp;#39;c&amp;#39;, 4}
+  };
+
+  // キー&amp;#39;b&amp;#39;の要素が含まれているか
+  if (m.contains(&amp;#39;b&amp;#39;)) {
+    std::cout &amp;lt;&amp;lt; &amp;#34;contain&amp;#34; &amp;lt;&amp;lt; std::endl;
+  }
+  else {
+    std::cout &amp;lt;&amp;lt; &amp;#34;doesn&amp;#39;t contain&amp;#34; &amp;lt;&amp;lt; std::endl;
+  }
+}
+```
+* contains[color ff0000]
+
+### 出力
+```
+contain
+```
+
+
+## バージョン
+### 言語
+- C++23
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>count -- flat_map : containsとcountを追加 #1078</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map/count.html"/>
      <id>d91c1da0f13281d896a93c82e69da2b0f8eb611b:reference/flat_map/flat_map/count.md</id>
      <updated>2023-05-25T13:29:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map/count.md b/reference/flat_map/flat_map/count.md
new file mode 100644
index 000000000..b1fbb97af
--- /dev/null
+++ b/reference/flat_map/flat_map/count.md
@@ -0,0 +1,99 @@
+# count
+* flat_map[meta header]
+* std[meta namespace]
+* flat_map[meta class]
+* function[meta id-type]
+* cpp23[meta cpp]
+
+```cpp
+size_type count(const key_type&amp;amp; x) const; // (1) C++23
+
+template &amp;lt;class K&amp;gt;
+size_type count(const K&amp;amp; x) const;        // (2) C++23
+```
+
+## 概要
+キー `x` を検索し、コンテナ内に見つかった要素の数を返す。`flat_map` コンテナはキーの重複を許さないため、この関数は実際には要素が見つかったときに 1 を、そうでないときに 0 を返す。
+
+- (1) : クラスのテンプレートパラメータ`key_type`型のキーを受け取る
+- (2) : `key_type`と比較可能な`K`型のキーを受け取る
+
+
+## 戻り値
+- (1) : `x`と等価なキーの要素が見つかった場合は1、そうでない場合は0を返す。
+- (2) : `key_compare`型の関数オブジェクトを`c`、コンテナ内の各要素が持つキーを`k`として、キーが等価か判定する式`!c(k, x) &amp;amp;&amp;amp; !c(x, k)`が`true`となる要素が見つかった場合は1、そうでない場合は0を返す。
+
+
+## 計算量
+```
+log(b.size()) + b.count(k)
+```
+* b.size()[link size.md]
+
+
+## 備考
+- (2) : この関数がオーバーロード解決に参加する条件は、[`find()`](find.md)メンバ関数の備考欄を参照
+- [`std::flat_multimap`](/reference/flat_map/flat_multimap.md.nolink)クラスとの共通インタフェースを使用する必要がなければ、この関数の代わりに[`contains()`](contains.md)メンバ関数を使用することを推奨する
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;flat_map&amp;gt;
+#include &amp;lt;string&amp;gt;
+
+int main()
+{
+  // (1)
+  {
+    std::flat_map&amp;lt;std::string, int&amp;gt; fm = {
+      {&amp;#34;Alice&amp;#34;, 3},
+      {&amp;#34;Bob&amp;#34;,   1},
+      {&amp;#34;Carol&amp;#34;, 4}
+    };
+
+    std::size_t n = fm.count(&amp;#34;Bob&amp;#34;);
+    if (n &amp;gt; 0) { // 見つかった
+      std::cout &amp;lt;&amp;lt; &amp;#34;found&amp;#34; &amp;lt;&amp;lt; std::endl;
+    }
+  }
+
+  // (2)
+  {
+    std::flat_map&amp;lt;std::string, int, std::less&amp;lt;&amp;gt;&amp;gt; fm = {
+      {&amp;#34;Alice&amp;#34;, 3},
+      {&amp;#34;Bob&amp;#34;,   1},
+      {&amp;#34;Carol&amp;#34;, 4}
+    };
+
+    // std::lessのvoidに対する特殊化を使用することで、
+    // 文字列リテラルをcount()関数の引数として渡した際に、
+    // std::string型の一時オブジェクトが生成されない。
+    std::size_t n = fm.count(&amp;#34;Bob&amp;#34;);
+    if (n &amp;gt; 0) { // 見つかった
+      std::cout &amp;lt;&amp;lt; &amp;#34;found&amp;#34; &amp;lt;&amp;lt; std::endl;
+    }
+  }
+}
+```
+* fm.count[color ff0000]
+* std::less[link /reference/functional/less.md]
+
+### 出力
+```
+found
+found
+```
+
+## バージョン
+### 言語
+- C++23
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
+
+
+## 関連項目
+- [`contains()`](contains.md)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>find -- flat_map : containsとcountを追加 #1078</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map/find.html"/>
      <id>d91c1da0f13281d896a93c82e69da2b0f8eb611b:reference/flat_map/flat_map/find.md</id>
      <updated>2023-05-25T13:29:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map/find.md b/reference/flat_map/flat_map/find.md
index 6541baebb..99f5e642f 100644
--- a/reference/flat_map/flat_map/find.md
+++ b/reference/flat_map/flat_map/find.md
@@ -104,5 +104,5 @@ int main()
 
 
 ## 関連項目
-- [`contains()`](contains.md.nolink)
+- [`contains()`](contains.md)
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>contains -- flat_map : containsとcountを追加 #1078</title>
      <link href="https://cpprefjp.github.io/reference/map/map/contains.html"/>
      <id>d91c1da0f13281d896a93c82e69da2b0f8eb611b:reference/map/map/contains.md</id>
      <updated>2023-05-25T13:29:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/map/map/contains.md b/reference/map/map/contains.md
index a102feb73..6b35fbba7 100644
--- a/reference/map/map/contains.md
+++ b/reference/map/map/contains.md
@@ -16,6 +16,9 @@ bool contains(const K&amp;amp; x) const;        // (2)
 ## 概要
 指定されたキー`x`に一致する要素がコンテナに含まれているかを判定する。
 
+- (1) : クラスのテンプレートパラメータ`key_type`型のキーを受け取る
+- (2) : `key_type`と比較可能な`K`型のキーを受け取る
+
 
 ## 戻り値
 以下と等価：
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>count -- flat_map : containsとcountを追加 #1078</title>
      <link href="https://cpprefjp.github.io/reference/map/map/count.html"/>
      <id>d91c1da0f13281d896a93c82e69da2b0f8eb611b:reference/map/map/count.md</id>
      <updated>2023-05-25T13:29:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/map/map/count.md b/reference/map/map/count.md
index ad73fabef..c8664399a 100644
--- a/reference/map/map/count.md
+++ b/reference/map/map/count.md
@@ -31,7 +31,8 @@ log(b.size()) + b.count(k)
 
 
 ## 備考
-- (2) : この関数がオーバーロード解決に参加する条件は、[`find()`](find.md)メンバ関数の備考欄を参照。
+- (2) : この関数がオーバーロード解決に参加する条件は、[`find()`](find.md)メンバ関数の備考欄を参照
+- [`std::multimap`](/reference/map/multimap.md)クラスとの共通インタフェースを使用する必要がなければ、この関数の代わりに[`contains()`](contains.md)メンバ関数を使用することを推奨する
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>contains -- flat_map : containsとcountを追加 #1078</title>
      <link href="https://cpprefjp.github.io/reference/map/multimap/contains.html"/>
      <id>d91c1da0f13281d896a93c82e69da2b0f8eb611b:reference/map/multimap/contains.md</id>
      <updated>2023-05-25T13:29:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/map/multimap/contains.md b/reference/map/multimap/contains.md
index 63c7c7495..4a902da65 100644
--- a/reference/map/multimap/contains.md
+++ b/reference/map/multimap/contains.md
@@ -16,6 +16,9 @@ bool contains(const K&amp;amp; x) const;        // (2)
 ## 概要
 指定されたキー`x`に一致する要素がコンテナに含まれているかを判定する。
 
+- (1) : クラスのテンプレートパラメータ`key_type`型のキーを受け取る
+- (2) : `key_type`と比較可能な`K`型のキーを受け取る
+
 
 ## 戻り値
 以下と等価：
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>contains -- flat_map : containsとcountを追加 #1078</title>
      <link href="https://cpprefjp.github.io/reference/set/multiset/contains.html"/>
      <id>d91c1da0f13281d896a93c82e69da2b0f8eb611b:reference/set/multiset/contains.md</id>
      <updated>2023-05-25T13:29:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/set/multiset/contains.md b/reference/set/multiset/contains.md
index 80612edcd..10f93aa92 100644
--- a/reference/set/multiset/contains.md
+++ b/reference/set/multiset/contains.md
@@ -16,6 +16,9 @@ bool contains(const K&amp;amp; x) const;        // (2)
 ## 概要
 指定されたキー`x`に一致する要素がコンテナに含まれているかを判定する。
 
+- (1) : クラスのテンプレートパラメータ`key_type`型のキーを受け取る
+- (2) : `key_type`と比較可能な`K`型のキーを受け取る
+
 
 ## 戻り値
 以下と等価：
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>count -- flat_map : containsとcountを追加 #1078</title>
      <link href="https://cpprefjp.github.io/reference/set/multiset/count.html"/>
      <id>d91c1da0f13281d896a93c82e69da2b0f8eb611b:reference/set/multiset/count.md</id>
      <updated>2023-05-25T13:29:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/set/multiset/count.md b/reference/set/multiset/count.md
index ae5ea12d1..8f801ed4b 100644
--- a/reference/set/multiset/count.md
+++ b/reference/set/multiset/count.md
@@ -32,6 +32,7 @@ log(b.size()) + b.count(k)
 
 ## 備考
 - (2) : この関数がオーバーロード解決に参加する条件は、[`find()`](find.md)メンバ関数の備考欄を参照。
+- [`std::multiset`](/reference/set/multiset.md)クラスとの共通インタフェースを使用する必要がなければ、この関数の代わりに[`contains()`](contains.md)メンバ関数を使用することを推奨する
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>contains -- flat_map : containsとcountを追加 #1078</title>
      <link href="https://cpprefjp.github.io/reference/set/set/contains.html"/>
      <id>d91c1da0f13281d896a93c82e69da2b0f8eb611b:reference/set/set/contains.md</id>
      <updated>2023-05-25T13:29:01+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/set/set/contains.md b/reference/set/set/contains.md
index 6100e511e..fc3f07756 100644
--- a/reference/set/set/contains.md
+++ b/reference/set/set/contains.md
@@ -16,6 +16,9 @@ bool contains(const K&amp;amp; x) const;        // (2)
 ## 概要
 指定されたキー`x`に一致する要素がコンテナに含まれているかを判定する。
 
+- (1) : クラスのテンプレートパラメータ`key_type`型のキーを受け取る
+- (2) : `key_type`と比較可能な`K`型のキーを受け取る
+
 
 ## 戻り値
 以下と等価：
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>flat_map -- flat_map : clearを追加 #1078</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map.html"/>
      <id>d6e40dd1f3f328b9f1e2d3ba3fd06a068eee1d2d:reference/flat_map/flat_map.md</id>
      <updated>2023-05-24T16:53:36+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map.md b/reference/flat_map/flat_map.md
index be8763fa7..e75b17b66 100644
--- a/reference/flat_map/flat_map.md
+++ b/reference/flat_map/flat_map.md
@@ -57,7 +57,7 @@ namespace std {
 
 | 名前                                          | 説明                                       | 対応バージョン |
 |-----------------------------------------------|--------------------------------------------|----------------|
-| [`clear`](flat_map/clear.md.nolink)                       | 全ての要素を削除する                       | C++23 |
+| [`clear`](flat_map/clear.md)                       | 全ての要素を削除する                       | C++23 |
 | [`insert`](flat_map/insert.md.nolink)                     | 要素を挿入する                             | C++23 |
 | [`insert_or_assign`](flat_map/insert_or_assign.md.nolink) | 要素を挿入、あるいは代入する               | C++23 |
 | [`insert_range`](flat_map/insert_range.md.nolink)         | Rangeを挿入する                            | C++23 |
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>clear -- flat_map : clearを追加 #1078</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map/clear.html"/>
      <id>d6e40dd1f3f328b9f1e2d3ba3fd06a068eee1d2d:reference/flat_map/flat_map/clear.md</id>
      <updated>2023-05-24T16:53:36+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map/clear.md b/reference/flat_map/flat_map/clear.md
new file mode 100644
index 000000000..a9e14e962
--- /dev/null
+++ b/reference/flat_map/flat_map/clear.md
@@ -0,0 +1,61 @@
+# clear
+* flat_map[meta header]
+* std[meta namespace]
+* flat_map[meta class]
+* function[meta id-type]
+* cpp23[meta cpp]
+
+```cpp
+void clear() noexcept; // (1) C++23
+```
+
+## 概要
+コンテナ内の全ての要素を削除する。それぞれのデストラクタが呼ばれ、コンテナから削除される。[`size()`](size.md) は 0 になる。
+
+
+## 計算量
+線形時間
+
+
+## 例外
+
+投げない
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;flat_map&amp;gt;
+
+int main ()
+{
+  std::flat_map&amp;lt;int, char&amp;gt; fm = {
+    {3, &amp;#39;C&amp;#39;},
+    {4, &amp;#39;D&amp;#39;},
+    {1, &amp;#39;A&amp;#39;},
+    {2, &amp;#39;B&amp;#39;},
+  };
+
+  std::cout &amp;lt;&amp;lt; fm.size() &amp;lt;&amp;lt; std::endl;
+
+  fm.clear();
+
+  std::cout &amp;lt;&amp;lt; fm.size() &amp;lt;&amp;lt; std::endl;
+}
+```
+* clear()[color ff0000]
+* fm.size()[link size.md]
+
+### 出力
+```
+4
+0
+```
+
+## バージョン
+### 言語
+- C++23
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>empty -- flat_map : clearを追加 #1078</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map/empty.html"/>
      <id>d6e40dd1f3f328b9f1e2d3ba3fd06a068eee1d2d:reference/flat_map/flat_map/empty.md</id>
      <updated>2023-05-24T16:53:36+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map/empty.md b/reference/flat_map/flat_map/empty.md
index 1e6250c92..610139592 100644
--- a/reference/flat_map/flat_map/empty.md
+++ b/reference/flat_map/flat_map/empty.md
@@ -13,7 +13,7 @@
 コンテナが空かどうかをテストする。 
 コンテナが空（[`size()`](size.md) が 0）の場合に `true` を返す。 
 
-この関数はコンテナ内のコンテンツを変化させない。コンテンツをクリアするには [`clear()`](clear.md.nolink) メンバ関数を使用する。
+この関数はコンテナ内のコンテンツを変化させない。コンテンツをクリアするには [`clear()`](clear.md) メンバ関数を使用する。
 
 
 ## 戻り値
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>flat_map -- flat_map : emptyとmax_sizeを追加 #1078</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map.html"/>
      <id>9430b41593e773a191064eff80815532a0629be0:reference/flat_map/flat_map.md</id>
      <updated>2023-05-22T16:32:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map.md b/reference/flat_map/flat_map.md
index 1c2bff8c6..be8763fa7 100644
--- a/reference/flat_map/flat_map.md
+++ b/reference/flat_map/flat_map.md
@@ -47,10 +47,10 @@ namespace std {
 ### 領域
 
 | 名前 | 説明 | 対応バージョン |
-|---------------------------------|------------------------------------|-------|
-| [`empty`](flat_map/empty.md.nolink)       | コンテナが空であるかどうかを調べる | C++23 |
+|------------------------------------|------------------------------------|-------|
+| [`empty`](flat_map/empty.md)       | コンテナが空であるかどうかを調べる | C++23 |
 | [`size`](flat_map/size.md)         | 要素数を取得する                   | C++23 |
-| [`max_size`](flat_map/max_size.md.nolink) | 格納可能な最大の要素数を取得する   | C++23 |
+| [`max_size`](flat_map/max_size.md) | 格納可能な最大の要素数を取得する   | C++23 |
 
 
 ### コンテナの変更
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>empty -- flat_map : emptyとmax_sizeを追加 #1078</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map/empty.html"/>
      <id>9430b41593e773a191064eff80815532a0629be0:reference/flat_map/flat_map/empty.md</id>
      <updated>2023-05-22T16:32:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map/empty.md b/reference/flat_map/flat_map/empty.md
new file mode 100644
index 000000000..1e6250c92
--- /dev/null
+++ b/reference/flat_map/flat_map/empty.md
@@ -0,0 +1,60 @@
+# empty
+* flat_map[meta header]
+* std[meta namespace]
+* flat_map[meta class]
+* function[meta id-type]
+* cpp23[meta cpp]
+
+```cpp
+[[nodiscard]] bool empty() const noexcept; // (1) C++23
+```
+
+## 概要
+コンテナが空かどうかをテストする。 
+コンテナが空（[`size()`](size.md) が 0）の場合に `true` を返す。 
+
+この関数はコンテナ内のコンテンツを変化させない。コンテンツをクリアするには [`clear()`](clear.md.nolink) メンバ関数を使用する。
+
+
+## 戻り値
+コンテナサイズが 0 のときに `true`, そうでないときに `false` を返す。
+
+
+## 計算量
+定数時間。
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;flat_map&amp;gt;
+
+int main ()
+{
+  stdx::flat_map&amp;lt;int, char&amp;gt; fm;
+
+  std::cout &amp;lt;&amp;lt; fm.empty() &amp;lt;&amp;lt; std::endl;
+
+  fm.insert({42, &amp;#39;a&amp;#39;});
+
+  std::cout &amp;lt;&amp;lt; fm.empty() &amp;lt;&amp;lt; std::endl;
+}
+```
+* empty()[color ff0000]
+* fm.insert[link insert.md.nolink]
+
+### 出力
+```
+1
+0
+```
+
+## バージョン
+### 言語
+- C++23
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
+
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>max_size -- flat_map : emptyとmax_sizeを追加 #1078</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map/max_size.html"/>
      <id>9430b41593e773a191064eff80815532a0629be0:reference/flat_map/flat_map/max_size.md</id>
      <updated>2023-05-22T16:32:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map/max_size.md b/reference/flat_map/flat_map/max_size.md
new file mode 100644
index 000000000..e6aa51715
--- /dev/null
+++ b/reference/flat_map/flat_map/max_size.md
@@ -0,0 +1,52 @@
+# max_size
+* flat_map[meta header]
+* std[meta namespace]
+* flat_map[meta class]
+* function[meta id-type]
+* cpp23[meta cpp]
+
+```cpp
+size_type max_size() const noexcept; // (1) C++23
+```
+
+## 概要
+コンテナが格納できる要素の最大数を返す。 
+これは、システムやライブラリ実装の制限のもとでコンテナが格納できる潜在的な最大サイズである。
+
+
+## 戻り値
+コンテナが自身のコンテンツとして保持できる要素の最大数。 
+メンバ型 `size_type` は符号なし整数型である。
+
+
+## 計算量
+定数時間。
+
+
+## 例
+```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;flat_map&amp;gt;
+
+int main()
+{
+  std::flat_map&amp;lt;char, int&amp;gt; fm;
+
+  std::cout &amp;lt;&amp;lt; fm.max_size() &amp;lt;&amp;lt; std::endl;
+}
+```
+* max_size()[color ff0000]
+
+### 出力例
+```
+178956970
+```
+
+## 言語バージョン
+- C++23
+
+### 処理系
+- [Clang](/implementation.md#clang): ??
+- [GCC](/implementation.md#gcc): ??
+- [Visual C++](/implementation.md#visual_cpp): ??
+
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>size -- flat_map : emptyとmax_sizeを追加 #1078</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map/size.html"/>
      <id>9430b41593e773a191064eff80815532a0629be0:reference/flat_map/flat_map/size.md</id>
      <updated>2023-05-22T16:32:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map/size.md b/reference/flat_map/flat_map/size.md
index eee272795..6df18cda8 100644
--- a/reference/flat_map/flat_map/size.md
+++ b/reference/flat_map/flat_map/size.md
@@ -62,4 +62,4 @@ int main ()
 
 
 ## 関連項目
-- [`empty()`](empty.md.nolink)
+- [`empty()`](empty.md)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>empty -- (multi)map : emptyの言語バージョンがC++11になっていたのを修正</title>
      <link href="https://cpprefjp.github.io/reference/map/map/empty.html"/>
      <id>aaff7b5d32b068cc6cd74ea24f9fb1b25f437a5c:reference/map/map/empty.md</id>
      <updated>2023-05-22T16:29:22+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/map/map/empty.md b/reference/map/map/empty.md
index a4451c82b..e9ec6ba89 100644
--- a/reference/map/map/empty.md
+++ b/reference/map/map/empty.md
@@ -52,16 +52,6 @@ int main ()
 0
 ```
 
-## バージョン
-### 言語
-- C++11
-
-### 処理系
-- [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
-- [ICC](/implementation.md#icc): ??
-- [Visual C++](/implementation.md#visual_cpp): 2012
-
 ## 関連項目
 
 | 名前 | 説明|
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>empty -- (multi)map : emptyの言語バージョンがC++11になっていたのを修正</title>
      <link href="https://cpprefjp.github.io/reference/map/multimap/empty.html"/>
      <id>aaff7b5d32b068cc6cd74ea24f9fb1b25f437a5c:reference/map/multimap/empty.md</id>
      <updated>2023-05-22T16:29:22+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/map/multimap/empty.md b/reference/map/multimap/empty.md
index 92929d1ac..820c10bf0 100644
--- a/reference/map/multimap/empty.md
+++ b/reference/map/multimap/empty.md
@@ -52,16 +52,6 @@ int main ()
 0
 ```
 
-## バージョン
-### 言語
-- C++11
-
-### 処理系
-- [Clang](/implementation.md#clang): ??
-- [GCC](/implementation.md#gcc): ??
-- [ICC](/implementation.md#icc): ??
-- [Visual C++](/implementation.md#visual_cpp): 2012
-
 ## 関連項目
 
 | 名前 | 説明|
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2020-10-28T14:40:47.748676</updated>
  <id>378ace96-eb38-40f8-9e83-47fb341c7bda</id>

  
    <entry>
      <title>operator local_days -- year_month_weekday 型変換 : indexについて概要にも記載</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/op_local_days.html"/>
      <id>2d44e0492261ae033d22a63809902dc08f830fd7:reference/chrono/year_month_weekday/op_local_days.md</id>
      <updated>2020-10-28T18:38:19+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/op_local_days.md b/reference/chrono/year_month_weekday/op_local_days.md
index f8a3cce1f..2a6d3a91f 100644
--- a/reference/chrono/year_month_weekday/op_local_days.md
+++ b/reference/chrono/year_month_weekday/op_local_days.md
@@ -42,6 +42,9 @@ int main()
 
   chrono::local_days date3{2020y/3/chrono::Sunday[0]};
   assert(chrono::year_month_day{date3} == 2020y/2/23);
+
+  chrono::local_days date4{2020y/3/chrono::Sunday[10]};
+  assert(chrono::year_month_day{date4} == 2020y/5/3);
 }
 ```
 * chrono::local_days[link /reference/chrono/local_time.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator sys_days -- year_month_weekday 型変換 : indexについて概要にも記載</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/op_sys_days.html"/>
      <id>2d44e0492261ae033d22a63809902dc08f830fd7:reference/chrono/year_month_weekday/op_sys_days.md</id>
      <updated>2020-10-28T18:38:19+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/op_sys_days.md b/reference/chrono/year_month_weekday/op_sys_days.md
index 4150654e7..1ceb211cf 100644
--- a/reference/chrono/year_month_weekday/op_sys_days.md
+++ b/reference/chrono/year_month_weekday/op_sys_days.md
@@ -13,6 +13,8 @@ constexpr operator sys_days() const noexcept; // (1) C++20
 ## 概要
 `year_month_weekday`オブジェクトをシステム時間の日付に、暗黙に型変換する。
 
+この関数では、N回目の曜日のNは月内である必要はなく、N == 0の場合は「1週目の指定した曜日の7日前」を意味し、N &amp;gt; 0の場合は「1週目の指定した曜日から(N - 1) * 7日を加算した日付」を意味し任意にNを大きく指定できる。
+
 
 ## 戻り値
 - [`year()`](year.md)`.`[`ok()`](/reference/chrono/year/ok.md) `&amp;amp;&amp;amp;` [`month()`](month.md)`.`[`ok()`](/reference/chrono/month/ok.md) `&amp;amp;&amp;amp;` [`weekday()`](weekday.md)`.`[`ok()`](/reference/chrono/weekday/ok.md)が`true`である場合、[`year()`](year.md)`/`[`month()`](month.md)の最初の[`weekday()`](weekday.md)の`(`[`index()`](index.md) `- 1) * 7`日後を表す[`sys_days`](/reference/chrono/sys_time.md)を返す
@@ -38,6 +40,9 @@ int main()
 
   chrono::sys_days date3 = 2020y/3/chrono::Sunday[0];
   assert(chrono::year_month_day{date3} == 2020y/2/23);
+
+  chrono::sys_days date4 = 2020y/3/chrono::Sunday[10];
+  assert(chrono::year_month_day{date4} == 2020y/5/3);
 }
 ```
 * chrono::sys_days[link /reference/chrono/sys_time.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>year_month_weekday -- year_month_weekday : sys_daysとlocal_daysへの型変換演算子を追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday.html"/>
      <id>1b9c361e32f43d3c6c2b56243e5d9519226cfd38:reference/chrono/year_month_weekday.md</id>
      <updated>2020-10-28T18:02:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday.md b/reference/chrono/year_month_weekday.md
index 68928aa78..bde7796a1 100644
--- a/reference/chrono/year_month_weekday.md
+++ b/reference/chrono/year_month_weekday.md
@@ -52,8 +52,8 @@ namespace std::chrono {
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`operator sys_days`](year_month_weekday/op_sys_days.md.nolink)     | システム時間の日付への型変換演算子 | C++20 |
-| [`operator local_days`](year_month_weekday/op_local_days.md.nolink) | ローカル時間の日付への型変換演算子 | C++20 |
+| [`operator sys_days`](year_month_weekday/op_sys_days.md)     | システム時間の日付への型変換演算子 | C++20 |
+| [`operator local_days`](year_month_weekday/op_local_days.md) | ローカル時間の日付への型変換演算子 | C++20 |
 
 
 ### 検証
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator local_days -- year_month_weekday : sys_daysとlocal_daysへの型変換演算子を追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/op_local_days.html"/>
      <id>1b9c361e32f43d3c6c2b56243e5d9519226cfd38:reference/chrono/year_month_weekday/op_local_days.md</id>
      <updated>2020-10-28T18:02:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/op_local_days.md b/reference/chrono/year_month_weekday/op_local_days.md
new file mode 100644
index 000000000..f8a3cce1f
--- /dev/null
+++ b/reference/chrono/year_month_weekday/op_local_days.md
@@ -0,0 +1,71 @@
+# operator local_days
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_weekday[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr explicit operator local_days() const noexcept; // (1) C++20
+```
+* local_days[link /reference/chrono/local_time.md]
+
+## 概要
+`year_month_weekday`オブジェクトをローカル時間の日付に、明示的に型変換する。
+
+
+## 戻り値
+```cpp
+return local_days{sys_days{*this}.time_since_epoch()};
+```
+* local_days[link /reference/chrono/local_time.md]
+* sys_days[link /reference/chrono/sys_time.md]
+* time_since_epoch()[link /reference/chrono/time_point/time_since_epoch.md]
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  // year_month_dayからlocal_daysへの暗黙変換
+  chrono::local_days date1{2020y/3/chrono::Sunday[1]};
+  assert(chrono::year_month_day{date1} == 2020y/3/1);
+
+  chrono::local_days date2{2020y/3/chrono::Sunday[2]};
+  assert(chrono::year_month_day{date2} == 2020y/3/8);
+
+  chrono::local_days date3{2020y/3/chrono::Sunday[0]};
+  assert(chrono::year_month_day{date3} == 2020y/2/23);
+}
+```
+* chrono::local_days[link /reference/chrono/local_time.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* chrono::year_month_day[link /reference/chrono/year_month_day.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+#### 備考
+- GCC 11のtrunkバージョンでは`index() == 0`の場合に間違った値が返る。正式リリース時には直っている可能性がある
+    - [Bug 97613 - `chrono::year_month_weekday` cast to `sys_days` : return bad value if `index() == 0`](https://gcc.gnu.org/bugzilla/show_bug.cgi?id=97613)
+
+
+## 関連項目
+- [`operator sys_days`](op_sys_days.md)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator sys_days -- year_month_weekday : sys_daysとlocal_daysへの型変換演算子を追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/op_sys_days.html"/>
      <id>1b9c361e32f43d3c6c2b56243e5d9519226cfd38:reference/chrono/year_month_weekday/op_sys_days.md</id>
      <updated>2020-10-28T18:02:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/op_sys_days.md b/reference/chrono/year_month_weekday/op_sys_days.md
new file mode 100644
index 000000000..4150654e7
--- /dev/null
+++ b/reference/chrono/year_month_weekday/op_sys_days.md
@@ -0,0 +1,63 @@
+# operator sys_days
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_weekday[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr operator sys_days() const noexcept; // (1) C++20
+```
+* sys_days[link /reference/chrono/sys_time.md]
+
+## 概要
+`year_month_weekday`オブジェクトをシステム時間の日付に、暗黙に型変換する。
+
+
+## 戻り値
+- [`year()`](year.md)`.`[`ok()`](/reference/chrono/year/ok.md) `&amp;amp;&amp;amp;` [`month()`](month.md)`.`[`ok()`](/reference/chrono/month/ok.md) `&amp;amp;&amp;amp;` [`weekday()`](weekday.md)`.`[`ok()`](/reference/chrono/weekday/ok.md)が`true`である場合、[`year()`](year.md)`/`[`month()`](month.md)の最初の[`weekday()`](weekday.md)の`(`[`index()`](index.md) `- 1) * 7`日後を表す[`sys_days`](/reference/chrono/sys_time.md)を返す
+- [`index()`](index.md)が`0`である場合、[`year()`](year.md)`/`[`month()`](month.md)の最初の[`weekday()`](weekday.md)の7日前の日付を表す[`sys_days`](/reference/chrono/sys_time.md)を返す
+- そうでない場合、未規定の値を返す
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::sys_days date1 = 2020y/3/chrono::Sunday[1];
+  assert(chrono::year_month_day{date1} == 2020y/3/1);
+
+  chrono::sys_days date2 = 2020y/3/chrono::Sunday[2];
+  assert(chrono::year_month_day{date2} == 2020y/3/8);
+
+  chrono::sys_days date3 = 2020y/3/chrono::Sunday[0];
+  assert(chrono::year_month_day{date3} == 2020y/2/23);
+}
+```
+* chrono::sys_days[link /reference/chrono/sys_time.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* chrono::year_month_day[link /reference/chrono/year_month_day.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
+
+#### 備考
+- GCC 11のtrunkバージョンでは`index() == 0`の場合に間違った値が返る。正式リリース時には直っている可能性がある
+    - [Bug 97613 - `chrono::year_month_weekday` cast to `sys_days` : return bad value if `index() == 0`](https://gcc.gnu.org/bugzilla/show_bug.cgi?id=97613)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- year_month_weekdayのコンストラクタ : 仕様の変数名ミスを修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/op_constructor.html"/>
      <id>3dca3a22fbceadcda4d9c536cd916b672c495849:reference/chrono/year_month_weekday/op_constructor.md</id>
      <updated>2020-10-28T17:01:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/op_constructor.md b/reference/chrono/year_month_weekday/op_constructor.md
index 37d6f7a55..1498edf33 100644
--- a/reference/chrono/year_month_weekday/op_constructor.md
+++ b/reference/chrono/year_month_weekday/op_constructor.md
@@ -48,7 +48,7 @@ year_month_weekday(year_month_weekday&amp;amp;&amp;amp;) = default;      // (6) C++20
 
 
 ## 備考
-- (3) : `year_month_weekday`クラスのあらゆる値`ymdl`について、`ymdl.`[`ok()`](ok.md)が`true`である値はすべて、`ymdl == year_month_weekday{sys_days{ymdl}}`が`true`となる
+- (3) : `year_month_weekday`クラスのあらゆる値`ymwd`について、`ymwd.`[`ok()`](ok.md)が`true`である値はすべて、`ymwd == year_month_weekday{sys_days{ymwd}}`が`true`となる
 
 
 ### 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- year_month_weekday : リンクミス、コピペミスを修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/op_constructor.html"/>
      <id>cda03d26308d83080e635d709931526526dc5adb:reference/chrono/year_month_weekday/op_constructor.md</id>
      <updated>2020-10-27T17:25:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/op_constructor.md b/reference/chrono/year_month_weekday/op_constructor.md
index ba516f07a..37d6f7a55 100644
--- a/reference/chrono/year_month_weekday/op_constructor.md
+++ b/reference/chrono/year_month_weekday/op_constructor.md
@@ -24,8 +24,8 @@ year_month_weekday(year_month_weekday&amp;amp;&amp;amp;) = default;      // (6) C++20
 * chrono::year[link /reference/chrono/year.md]
 * chrono::month[link /reference/chrono/month.md]
 * chrono::weekday_indexed[link /reference/chrono/weekday_indexed.md]
-* sys_days[link /reference/chrono/sys_days.md]
-* local_days[link /reference/chrono/local_days.md]
+* sys_days[link /reference/chrono/sys_time.md]
+* local_days[link /reference/chrono/local_time.md]
 
 ## 概要
 - (1) : デフォルトコンストラクタ
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>weekday_indexed -- year_month_weekday : リンクミス、コピペミスを修正</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/weekday_indexed.html"/>
      <id>cda03d26308d83080e635d709931526526dc5adb:reference/chrono/year_month_weekday/weekday_indexed.md</id>
      <updated>2020-10-27T17:25:21+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/weekday_indexed.md b/reference/chrono/year_month_weekday/weekday_indexed.md
new file mode 100644
index 000000000..a4b6aa9b4
--- /dev/null
+++ b/reference/chrono/year_month_weekday/weekday_indexed.md
@@ -0,0 +1,52 @@
+# weekday_indexed
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_weekday[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr chrono::weekday_indexed weekday_indexed() const noexcept; // (1) C++20
+```
+* chrono::weekday_indexed[link /reference/chrono/weekday_indexed.md]
+
+## 概要
+N回目の曜日要素を取得する。
+
+
+## 戻り値
+コンストラクタで設定されて保持しているN回目の曜日オブジェクトを返す。
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::year_month_weekday date = 2020y/3/chrono::Sunday[2];
+  chrono::weekday_indexed wdi = date.weekday_indexed();
+  assert(wdi == chrono::Sunday[2]);
+}
+```
+* date.weekday_indexed()[color ff0000]
+* chrono::weekday_indexed[link /reference/chrono/weekday_indexed.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- year_month_weekday : コンストラクタとゲッター関係を追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day/op_constructor.html"/>
      <id>5086cf3853be1e42f4887fb53a71832c75e7101f:reference/chrono/year_month_day/op_constructor.md</id>
      <updated>2020-10-27T17:20:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day/op_constructor.md b/reference/chrono/year_month_day/op_constructor.md
index 35e5f959f..2700e1d61 100644
--- a/reference/chrono/year_month_day/op_constructor.md
+++ b/reference/chrono/year_month_day/op_constructor.md
@@ -46,7 +46,7 @@ year_month_day(year_month_day&amp;amp;&amp;amp;) = default;                         // (7) C++20
 - (3) :
     - 年のメンバ変数として`ymdl.`[`year()`](/reference/chrono/year_month_day_last/year.md)の値、月のメンバ変数として`ymdl.`[`month()`](/reference/chrono/year_month_day_last/month.md)の値、日のメンバ変数として`ymdl.`[`day()`](/reference/chrono/year_month_day_last/day.md)の値を保持する
 - (4) : `dp`が指すシステム時間に対応する年、月、日の値を求めて構築する
-- (5) : `dp`が指すシステム時間に対応する年、月、日の値を求めて構築する
+- (5) : `dp`が指すローカル時間に対応する年、月、日の値を求めて構築する
 
 
 ## 例外
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>month_day_last -- year_month_weekday : コンストラクタとゲッター関係を追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day_last/month_day_last.html"/>
      <id>5086cf3853be1e42f4887fb53a71832c75e7101f:reference/chrono/year_month_day_last/month_day_last.md</id>
      <updated>2020-10-27T17:20:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day_last/month_day_last.md b/reference/chrono/year_month_day_last/month_day_last.md
index 74273dcaf..4a63aaa8b 100644
--- a/reference/chrono/year_month_day_last/month_day_last.md
+++ b/reference/chrono/year_month_day_last/month_day_last.md
@@ -33,7 +33,7 @@ int main()
   assert(mdl == chrono::February/chrono::last);
 }
 ```
-* date.month()[color ff0000]
+* date.month_day_last()[color ff0000]
 * chrono::month_day_last[link /reference/chrono/month_day_last.md]
 * 2020y[link /reference/chrono/year/op_y.md]
 * chrono::February[link /reference/chrono/month_constants.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ok -- year_month_weekday : コンストラクタとゲッター関係を追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_day_last/ok.html"/>
      <id>5086cf3853be1e42f4887fb53a71832c75e7101f:reference/chrono/year_month_day_last/ok.md</id>
      <updated>2020-10-27T17:20:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_day_last/ok.md b/reference/chrono/year_month_day_last/ok.md
index 582e712e9..36391a22b 100644
--- a/reference/chrono/year_month_day_last/ok.md
+++ b/reference/chrono/year_month_day_last/ok.md
@@ -17,7 +17,7 @@ constexpr bool ok() const noexcept; // (1) C++20
 以下の全ての条件を満たす場合にこの関数は`true`を返し、そうでなければ`false`を返す：
 
 - [`year()`](year.md)メンバ関数によって返されるオブジェクト`y`の[`ok()`](/reference/chrono/year/ok.md)が`true`
-- [`month_day_last()`](month_day_last.md)メンバ関数によって返されるオブジェクト`mdl`の[`ok()`](/reference/chrono/month/ok.md)が`true`
+- [`month_day_last()`](month_day_last.md)メンバ関数によって返されるオブジェクト`mdl`の[`ok()`](/reference/chrono/month_day_last/ok.md)が`true`
 
 
 ## 例
@@ -30,7 +30,7 @@ using namespace std::chrono_literals;
 
 int main()
 {
-  assert((2020y/2/chrono::last).ok()  == true);
+  assert((2020y/2/chrono::last).ok() == true);
 }
 ```
 * ok()[color ff0000]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>year_month_weekday -- year_month_weekday : コンストラクタとゲッター関係を追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday.html"/>
      <id>5086cf3853be1e42f4887fb53a71832c75e7101f:reference/chrono/year_month_weekday.md</id>
      <updated>2020-10-27T17:20:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday.md b/reference/chrono/year_month_weekday.md
index e776e986f..68928aa78 100644
--- a/reference/chrono/year_month_weekday.md
+++ b/reference/chrono/year_month_weekday.md
@@ -25,7 +25,7 @@ namespace std::chrono {
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`(constructor)`](year_month_weekday/op_constructor.md.nolink) | コンストラクタ | C++20 |
+| [`(constructor)`](year_month_weekday/op_constructor.md) | コンストラクタ | C++20 |
 | `year_month_weekday&amp;amp; operator=(const year_month_weekday&amp;amp;) = default;`&amp;lt;br/&amp;gt; `year_month_weekday&amp;amp; operator=(year_month_weekday&amp;amp;&amp;amp;) = default;` | 代入演算子 | C++20 |
 
 
@@ -41,11 +41,11 @@ namespace std::chrono {
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`year`](year_month_weekday/year.md.nolink)       | 年要素を取得する | C++20 |
-| [`month`](year_month_weekday/month.md.nolink)     | 月要素を取得する | C++20 |
-| [`weekday`](year_month_weekday/weekday.md.nolink) | 曜日要素を取得する | C++20 |
-| [`index`](year_month_weekday/index.md.nolink)     | 何回目の曜日かを取得する | C++20 |
-| [`weekday_indexed`](year_month_weekday/weekday_indexed.md.nolink) | N回目の曜日要素を取得する | C++20 |
+| [`year`](year_month_weekday/year.md)       | 年要素を取得する | C++20 |
+| [`month`](year_month_weekday/month.md)     | 月要素を取得する | C++20 |
+| [`weekday`](year_month_weekday/weekday.md) | 曜日要素を取得する | C++20 |
+| [`index`](year_month_weekday/index.md)     | 何回目の曜日かを取得する | C++20 |
+| [`weekday_indexed`](year_month_weekday/weekday_indexed.md) | N回目の曜日要素を取得する | C++20 |
 
 
 ### 変換
@@ -60,7 +60,7 @@ namespace std::chrono {
 
 | 名前 | 説明 | 対応バージョン |
 |------|------|----------------|
-| [`ok`](year_month_weekday/ok.md.nolink) | 値が範囲に収まっているか判定する | C++20 |
+| [`ok`](year_month_weekday/ok.md) | 値が範囲に収まっているか判定する | C++20 |
 
 
 ## 非メンバ関数
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>index -- year_month_weekday : コンストラクタとゲッター関係を追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/index.html"/>
      <id>5086cf3853be1e42f4887fb53a71832c75e7101f:reference/chrono/year_month_weekday/index.md</id>
      <updated>2020-10-27T17:20:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/index.md b/reference/chrono/year_month_weekday/index.md
new file mode 100644
index 000000000..6ae55bfa8
--- /dev/null
+++ b/reference/chrono/year_month_weekday/index.md
@@ -0,0 +1,56 @@
+# index
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_weekday[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr unsigned int index() const noexcept; // (1) C++20
+```
+
+## 概要
+何回目の曜日かを取得する。
+
+
+## 戻り値
+以下と等価：
+
+```cpp
+return weekday_indexed().index();
+```
+* weekday_indexed()[link weekday_indexed.md]
+* index()[link /reference/chrono/weekday_indexed/index.md]
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::year_month_weekday date = 2020y/3/chrono::Sunday[2];
+  unsigned int i = date.index();
+  assert(i == 2);
+}
+```
+* date.index()[color ff0000]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>month -- year_month_weekday : コンストラクタとゲッター関係を追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/month.html"/>
      <id>5086cf3853be1e42f4887fb53a71832c75e7101f:reference/chrono/year_month_weekday/month.md</id>
      <updated>2020-10-27T17:20:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/month.md b/reference/chrono/year_month_weekday/month.md
new file mode 100644
index 000000000..4a1467338
--- /dev/null
+++ b/reference/chrono/year_month_weekday/month.md
@@ -0,0 +1,53 @@
+# month
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_weekday[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr chrono::month month() const noexcept; // (1) C++20
+```
+* chrono::month[link /reference/chrono/month.md]
+
+## 概要
+月要素を取得する。
+
+
+## 戻り値
+コンストラクタで設定されて保持している月オブジェクトを返す。
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::year_month_weekday date = 2020y/3/chrono::Sunday[2];
+  chrono::month m = date.month();
+  assert(m == chrono::March);
+}
+```
+* date.month()[color ff0000]
+* chrono::month[link /reference/chrono/month.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::March[link /reference/chrono/month_constants.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ok -- year_month_weekday : コンストラクタとゲッター関係を追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/ok.html"/>
      <id>5086cf3853be1e42f4887fb53a71832c75e7101f:reference/chrono/year_month_weekday/ok.md</id>
      <updated>2020-10-27T17:20:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/ok.md b/reference/chrono/year_month_weekday/ok.md
new file mode 100644
index 000000000..60b83dfa4
--- /dev/null
+++ b/reference/chrono/year_month_weekday/ok.md
@@ -0,0 +1,53 @@
+# ok
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_weekday[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr bool ok() const noexcept; // (1) C++20
+```
+
+## 概要
+`year_month_weekday`オブジェクトの値が有効な日付の範囲内かを判定する。
+
+
+## 戻り値
+- 以下のいずれかの条件を満たす場合にこの関数は`false`を返す：
+    - [`year()`](year.md)メンバ関数によって返されるオブジェクト`y`の[`ok()`](/reference/chrono/year/ok.md)が`false`
+    - [`month()`](month.md)メンバ関数によって返されるオブジェクト`m`の[`ok()`](/reference/chrono/month/ok.md)が`false`
+    - [`weekday_indexed()`](weekday_indexed.md)メンバ関数によって返されるオブジェクト`wdi`の[`ok()`](/reference/chrono/weekday_indexed/ok.md)が`false`
+- `*this`が妥当な日付を表す場合、この関数は`true`を返す
+- いずれにも合致しない場合、`false`を返す
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  assert((2020y/3/chrono::Sunday[2]).ok() == true);
+  assert((2020y/3/chrono::Sunday[0]).ok() == false);
+}
+```
+* ok()[color ff0000]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- year_month_weekday : コンストラクタとゲッター関係を追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/op_constructor.html"/>
      <id>5086cf3853be1e42f4887fb53a71832c75e7101f:reference/chrono/year_month_weekday/op_constructor.md</id>
      <updated>2020-10-27T17:20:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/op_constructor.md b/reference/chrono/year_month_weekday/op_constructor.md
new file mode 100644
index 000000000..ba516f07a
--- /dev/null
+++ b/reference/chrono/year_month_weekday/op_constructor.md
@@ -0,0 +1,87 @@
+# コンストラクタ
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_weekday[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+year_month_weekday() = default;                            // (1) C++20
+
+constexpr year_month_weekday(
+  const chrono::year&amp;amp; y,
+  const chrono::month&amp;amp; m,
+  const chrono::weekday_indexed&amp;amp; wdi) noexcept;            // (2) C++20
+
+constexpr
+  year_month_weekday(const sys_days&amp;amp; dp) noexcept;         // (3) C++20
+constexpr explicit
+  year_month_weekday(const local_days&amp;amp; dp) noexcept;       // (4) C++20
+
+year_month_weekday(const year_month_weekday&amp;amp;) = default; // (5) C++20
+year_month_weekday(year_month_weekday&amp;amp;&amp;amp;) = default;      // (6) C++20
+```
+* chrono::year[link /reference/chrono/year.md]
+* chrono::month[link /reference/chrono/month.md]
+* chrono::weekday_indexed[link /reference/chrono/weekday_indexed.md]
+* sys_days[link /reference/chrono/sys_days.md]
+* local_days[link /reference/chrono/local_days.md]
+
+## 概要
+- (1) : デフォルトコンストラクタ
+- (2) : 年、月、N回目の曜日の値をそれぞれ指定して構築する
+- (3) : 日単位のシステム時間から変換して構築
+- (4) : 日単位のローカル時間から変換して構築
+- (5) : コピーコンストラクタ
+- (6) : ムーブコンストラクタ
+
+
+## 効果
+- (1) : デフォルト初期化では年、月、曜日とN回目の値がそれぞれ符号なし整数の未初期化値となり、値初期化では値0となる
+- (2) : `y`、`m`、`wdi`をメンバ変数として保持する
+- (3) : `dp`が指すシステム時間に対応する年、月、日の値を求めて構築する
+- (4) : [`sys_days`](/reference/chrono/sys_time.md)`{dp.`[`time_since_epoch()`](/reference/chrono/time_point/time_since_epoch.md)`}`と等価
+
+
+## 例外
+投げない
+
+
+## 備考
+- (3) : `year_month_weekday`クラスのあらゆる値`ymdl`について、`ymdl.`[`ok()`](ok.md)が`true`である値はすべて、`ymdl == year_month_weekday{sys_days{ymdl}}`が`true`となる
+
+
+### 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::year_month_weekday date1{2020y, chrono::March, chrono::Sunday[2]};
+  chrono::year_month_weekday date2{chrono::year{2020}, chrono::month{3}, chrono::Sunday[2]};
+  assert(date1 == 2020y/3/chrono::Sunday[2]);
+  assert(date2 == 2020y/3/chrono::Sunday[2]);
+}
+```
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::March[link /reference/chrono/month_constants.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+* chrono::year[link /reference/chrono/year.md]
+* chrono::month[link /reference/chrono/month.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>weekday copy.md -- year_month_weekday : コンストラクタとゲッター関係を追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/weekday copy.html"/>
      <id>5086cf3853be1e42f4887fb53a71832c75e7101f:reference/chrono/year_month_weekday/weekday copy.md</id>
      <updated>2020-10-27T17:20:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>weekday -- year_month_weekday : コンストラクタとゲッター関係を追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/weekday.html"/>
      <id>5086cf3853be1e42f4887fb53a71832c75e7101f:reference/chrono/year_month_weekday/weekday.md</id>
      <updated>2020-10-27T17:20:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/weekday.md b/reference/chrono/year_month_weekday/weekday.md
new file mode 100644
index 000000000..5d8190aa7
--- /dev/null
+++ b/reference/chrono/year_month_weekday/weekday.md
@@ -0,0 +1,58 @@
+# weekday
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_weekday[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr chrono::weekday weekday() const noexcept; // (1) C++20
+```
+* chrono::weekday[link /reference/chrono/weekday.md]
+
+## 概要
+曜日要素を取得する。
+
+
+## 戻り値
+以下と等価：
+
+```cpp
+return weekday_indexed().weekday();
+```
+* weekday_indexed()[link weekday_indexed.md]
+* weekday()[link /reference/chrono/weekday_indexed/weekday.md]
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::year_month_weekday date = 2020y/3/chrono::Sunday[2];
+  chrono::weekday wd = date.weekday();
+  assert(wd == chrono::Sunday);
+}
+```
+* date.weekday()[color ff0000]
+* chrono::weekday[link /reference/chrono/weekday.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>year -- year_month_weekday : コンストラクタとゲッター関係を追加 #630</title>
      <link href="https://cpprefjp.github.io/reference/chrono/year_month_weekday/year.html"/>
      <id>5086cf3853be1e42f4887fb53a71832c75e7101f:reference/chrono/year_month_weekday/year.md</id>
      <updated>2020-10-27T17:20:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/chrono/year_month_weekday/year.md b/reference/chrono/year_month_weekday/year.md
new file mode 100644
index 000000000..061d118a2
--- /dev/null
+++ b/reference/chrono/year_month_weekday/year.md
@@ -0,0 +1,52 @@
+# year
+* chrono[meta header]
+* std::chrono[meta namespace]
+* year_month_weekday[meta class]
+* function[meta id-type]
+* cpp20[meta cpp]
+
+```cpp
+constexpr chrono::year year() const noexcept; // (1) C++20
+```
+* chrono::year[link /reference/chrono/year.md]
+
+## 概要
+年要素を取得する。
+
+
+## 戻り値
+コンストラクタで設定されて保持している年オブジェクトを返す。
+
+
+## 例
+```cpp example
+#include &amp;lt;cassert&amp;gt;
+#include &amp;lt;chrono&amp;gt;
+
+namespace chrono = std::chrono;
+using namespace std::chrono_literals;
+
+int main()
+{
+  chrono::year_month_weekday date = 2020y/3/chrono::Sunday[2];
+  chrono::year y = date.year();
+  assert(y == 2020y);
+}
+```
+* date.year()[color ff0000]
+* chrono::year[link /reference/chrono/year.md]
+* 2020y[link /reference/chrono/year/op_y.md]
+* chrono::Sunday[link /reference/chrono/weekday_constants.md]
+
+### 出力
+```
+```
+
+## バージョン
+### 言語
+- C++20
+
+### 処理系
+- [Clang](/implementation.md#clang): 8.0
+- [GCC](/implementation.md#gcc): 11.1
+- [Visual C++](/implementation.md#visual_cpp): (2019 Update 3時点で実装なし)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>
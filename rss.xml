<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2025-09-06T13:28:15.783154</updated>
  <id>7f10e98b-1c5d-4bd6-9f3c-62af4280f078</id>

  
    <entry>
      <title>定数式での`dynamic_cast`、多態的な`typeid`を許可 [P1327R1] -- コード例の include の不足を修正</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/allowing_dynamic_cast_polymorphic_typeid_in_constant_expressions.html"/>
      <id>2e2e084e92532875c8d35931ce7b3dd7b1a5e199:lang/cpp20/allowing_dynamic_cast_polymorphic_typeid_in_constant_expressions.md</id>
      <updated>2025-09-06T22:24:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/allowing_dynamic_cast_polymorphic_typeid_in_constant_expressions.md b/lang/cpp20/allowing_dynamic_cast_polymorphic_typeid_in_constant_expressions.md
index 309c3d4fd..ab04fc2aa 100644
--- a/lang/cpp20/allowing_dynamic_cast_polymorphic_typeid_in_constant_expressions.md
+++ b/lang/cpp20/allowing_dynamic_cast_polymorphic_typeid_in_constant_expressions.md
@@ -17,6 +17,9 @@ C++20より、`constexpr`関数内（定数式）で`dynamic_cast`および多
 
 ## 例
 ```cpp example
+#include &amp;lt;iostream&amp;gt;
+#include &amp;lt;typeinfo&amp;gt;
+
 struct base {
   virtual int f() const = 0;
 };
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>未初期化変数の読み取りをエラー性動作とする [P2795R5] -- コード例の include の不足を修正</title>
      <link href="https://cpprefjp.github.io/lang/cpp26/erroneous_behavior_for_uninitialized_reads.html"/>
      <id>2e2e084e92532875c8d35931ce7b3dd7b1a5e199:lang/cpp26/erroneous_behavior_for_uninitialized_reads.md</id>
      <updated>2025-09-06T22:24:12+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp26/erroneous_behavior_for_uninitialized_reads.md b/lang/cpp26/erroneous_behavior_for_uninitialized_reads.md
index d3f5519aa..777703aa8 100644
--- a/lang/cpp26/erroneous_behavior_for_uninitialized_reads.md
+++ b/lang/cpp26/erroneous_behavior_for_uninitialized_reads.md
@@ -53,6 +53,7 @@ int main() {
 
 ```cpp example
 #include &amp;lt;cassert&amp;gt;
+#include &amp;lt;cstring&amp;gt;
 
 int g(bool b) {
   unsigned char c;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Raclamusi</name>
        <email>raclamusi@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>組み込み配列の比較を非推奨化 [P1120R0] -- Merge pull request #1528 from ACUVE/fix/P1120R0</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/deprecate_array_comparisons.html"/>
      <id>3352c898d55c071d404dbc65195cbbe890ac7dc9:lang/cpp20/deprecate_array_comparisons.md</id>
      <updated>2025-09-04T00:08:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/deprecate_array_comparisons.md b/lang/cpp20/deprecate_array_comparisons.md
index 72be0f359..cb0515bc5 100644
--- a/lang/cpp20/deprecate_array_comparisons.md
+++ b/lang/cpp20/deprecate_array_comparisons.md
@@ -17,7 +17,7 @@
 ```cpp
 int arr1[5];
 int arr2[5];
-bool same = arr1 == arr2; // C++20で非推奨。&amp;amp;arr[0] == &amp;amp;arr[1]と同じ。
+bool same = arr1 == arr2; // C++20で非推奨。&amp;amp;arr1[0] == &amp;amp;arr2[0]と同じ。
                           // 配列の要素は比較されない
 auto cmp = arr1 &amp;lt;=&amp;gt; arr2; // エラー！
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>組み込み配列の比較を非推奨化 [P1120R0] -- P1120R0: コメントの解説の誤植を修正</title>
      <link href="https://cpprefjp.github.io/lang/cpp20/deprecate_array_comparisons.html"/>
      <id>1db2ef444f24ef0c04765f530fe956756994a8bb:lang/cpp20/deprecate_array_comparisons.md</id>
      <updated>2025-09-04T00:04:45+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp20/deprecate_array_comparisons.md b/lang/cpp20/deprecate_array_comparisons.md
index 72be0f359..cb0515bc5 100644
--- a/lang/cpp20/deprecate_array_comparisons.md
+++ b/lang/cpp20/deprecate_array_comparisons.md
@@ -17,7 +17,7 @@
 ```cpp
 int arr1[5];
 int arr2[5];
-bool same = arr1 == arr2; // C++20で非推奨。&amp;amp;arr[0] == &amp;amp;arr[1]と同じ。
+bool same = arr1 == arr2; // C++20で非推奨。&amp;amp;arr1[0] == &amp;amp;arr2[0]と同じ。
                           // 配列の要素は比較されない
 auto cmp = arr1 &amp;lt;=&amp;gt; arr2; // エラー！
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>ACUVE</name>
        <email>601805+ACUVE@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>非推奨だった組み込み配列の比較を削除 [P2865R6] -- Merge pull request #1527 from ACUVE/fix/P2865R6</title>
      <link href="https://cpprefjp.github.io/lang/cpp26/remove_deprecated_array_comparisons.html"/>
      <id>909d638caecaa7a6b61e1db5ab34a0ad5dd7be03:lang/cpp26/remove_deprecated_array_comparisons.md</id>
      <updated>2025-09-03T23:54:25+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp26/remove_deprecated_array_comparisons.md b/lang/cpp26/remove_deprecated_array_comparisons.md
index 83fff0fd0..308150ca1 100644
--- a/lang/cpp26/remove_deprecated_array_comparisons.md
+++ b/lang/cpp26/remove_deprecated_array_comparisons.md
@@ -18,7 +18,7 @@ C++20での[三方比較演算子](/lang/cpp20/consistent_comparison.md)の導
 int arr1[5];
 int arr2[5];
 bool same = arr1 == arr2; // C++20: 非推奨、C++26: エラー。
-                          // &amp;amp;arr[0] == &amp;amp;arr[1]と同じ。
+                          // &amp;amp;arr1[0] == &amp;amp;arr2[0]と同じ。
                           // 配列の要素は比較されない
 auto cmp = arr1 &amp;lt;=&amp;gt; arr2; // エラー！
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>非推奨だった組み込み配列の比較を削除 [P2865R6] -- P2865R6: コメントの解説の誤植を修正</title>
      <link href="https://cpprefjp.github.io/lang/cpp26/remove_deprecated_array_comparisons.html"/>
      <id>957695995f2ea44d12c1bb54439a4a4982fcc22f:lang/cpp26/remove_deprecated_array_comparisons.md</id>
      <updated>2025-09-03T23:44:58+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp26/remove_deprecated_array_comparisons.md b/lang/cpp26/remove_deprecated_array_comparisons.md
index 83fff0fd0..308150ca1 100644
--- a/lang/cpp26/remove_deprecated_array_comparisons.md
+++ b/lang/cpp26/remove_deprecated_array_comparisons.md
@@ -18,7 +18,7 @@ C++20での[三方比較演算子](/lang/cpp20/consistent_comparison.md)の導
 int arr1[5];
 int arr2[5];
 bool same = arr1 == arr2; // C++20: 非推奨、C++26: エラー。
-                          // &amp;amp;arr[0] == &amp;amp;arr[1]と同じ。
+                          // &amp;amp;arr1[0] == &amp;amp;arr2[0]と同じ。
                           // 配列の要素は比較されない
 auto cmp = arr1 &amp;lt;=&amp;gt; arr2; // エラー！
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>ACUVE</name>
        <email>601805+ACUVE@users.noreply.github.com</email>
      </author>
    </entry>
  
</feed>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2022-01-21T14:40:26.485714</updated>
  <id>e30aa2c8-1159-4fc4-b166-f05c2b3d4195</id>

  
    <entry>
      <title>属性構文 -- Merge pull request #935 from cpprefjp/fix_typos</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/attributes.html"/>
      <id>8a7df6b961f4eaaa01b5962b51a4ac595bfdfaf7:lang/cpp11/attributes.md</id>
      <updated>2022-01-18T23:14:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/attributes.md b/lang/cpp11/attributes.md
index 049eb8cc1..b56d298c5 100644
--- a/lang/cpp11/attributes.md
+++ b/lang/cpp11/attributes.md
@@ -52,7 +52,7 @@ int main()
 
 
 ### &amp;lt;a id=&amp;#34;carries_dependency&amp;#34; href=&amp;#34;#carries_dependency&amp;#34;&amp;gt;`[[carries_dependency]]`属性&amp;lt;/a&amp;gt;
-`[[carries_dependency]]`は、並行プログラミングのアトミック操作において、値に依存した順序付け [`memory_order_consume`](/reference/atomic/memory_order.md)を、関数をまたいで伝播することを明示するための属性である。
+`[[carries_dependency]]`は、並行プログラミングのアトミック操作において、値に依存した順序付け [`memory_order`](/reference/atomic/memory_order.md)を、関数をまたいで伝播することを明示するための属性である。
 
 以下は、[`memory_order_consume`](/reference/atomic/memory_order.md)を使用した順序付けの例である：
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>quiet_NaN -- Merge pull request #935 from cpprefjp/fix_typos</title>
      <link href="https://cpprefjp.github.io/reference/limits/numeric_limits/quiet_nan.html"/>
      <id>8a7df6b961f4eaaa01b5962b51a4ac595bfdfaf7:reference/limits/numeric_limits/quiet_nan.md</id>
      <updated>2022-01-18T23:14:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/limits/numeric_limits/quiet_nan.md b/reference/limits/numeric_limits/quiet_nan.md
index 000d8e518..39e8cc581 100644
--- a/reference/limits/numeric_limits/quiet_nan.md
+++ b/reference/limits/numeric_limits/quiet_nan.md
@@ -38,7 +38,7 @@ static constexpr T quiet_NaN() noexcept;
 int main()
 {
   constexpr float f = std::numeric_limits&amp;lt;float&amp;gt;::quiet_NaN();
-  constexpr float d = std::numeric_limits&amp;lt;double&amp;gt;::quiet_NaN();
+  constexpr double d = std::numeric_limits&amp;lt;double&amp;gt;::quiet_NaN();
 
   std::cout &amp;lt;&amp;lt; &amp;#34;float : &amp;#34; &amp;lt;&amp;lt; f &amp;lt;&amp;lt; std::endl;
   std::cout &amp;lt;&amp;lt; &amp;#34;double : &amp;#34; &amp;lt;&amp;lt; d &amp;lt;&amp;lt; std::endl;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>signaling_NaN -- Merge pull request #935 from cpprefjp/fix_typos</title>
      <link href="https://cpprefjp.github.io/reference/limits/numeric_limits/signaling_nan.html"/>
      <id>8a7df6b961f4eaaa01b5962b51a4ac595bfdfaf7:reference/limits/numeric_limits/signaling_nan.md</id>
      <updated>2022-01-18T23:14:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/limits/numeric_limits/signaling_nan.md b/reference/limits/numeric_limits/signaling_nan.md
index aebf4c09e..164aa0d04 100644
--- a/reference/limits/numeric_limits/signaling_nan.md
+++ b/reference/limits/numeric_limits/signaling_nan.md
@@ -6,7 +6,7 @@
 
 ```cpp
 // C++03
-static const T signaling_NaN() noexcept;
+static const T signaling_NaN() throw();
 
 // C++11
 static constexpr T signaling_NaN() noexcept;
@@ -36,7 +36,7 @@ static constexpr T signaling_NaN() noexcept;
 int main()
 {
   constexpr float f = std::numeric_limits&amp;lt;float&amp;gt;::signaling_NaN();
-  constexpr float d = std::numeric_limits&amp;lt;double&amp;gt;::signaling_NaN();
+  constexpr double d = std::numeric_limits&amp;lt;double&amp;gt;::signaling_NaN();
 
   std::cout &amp;lt;&amp;lt; &amp;#34;float : &amp;#34; &amp;lt;&amp;lt; f &amp;lt;&amp;lt; std::endl;
   std::cout &amp;lt;&amp;lt; &amp;#34;double : &amp;#34; &amp;lt;&amp;lt; d &amp;lt;&amp;lt; std::endl;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>属性構文 -- fix: fix some typos</title>
      <link href="https://cpprefjp.github.io/lang/cpp11/attributes.html"/>
      <id>02ff31ac7508f4f199f857907e987fa65b5d74b9:lang/cpp11/attributes.md</id>
      <updated>2022-01-18T18:56:22+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/lang/cpp11/attributes.md b/lang/cpp11/attributes.md
index 049eb8cc1..b56d298c5 100644
--- a/lang/cpp11/attributes.md
+++ b/lang/cpp11/attributes.md
@@ -52,7 +52,7 @@ int main()
 
 
 ### &amp;lt;a id=&amp;#34;carries_dependency&amp;#34; href=&amp;#34;#carries_dependency&amp;#34;&amp;gt;`[[carries_dependency]]`属性&amp;lt;/a&amp;gt;
-`[[carries_dependency]]`は、並行プログラミングのアトミック操作において、値に依存した順序付け [`memory_order_consume`](/reference/atomic/memory_order.md)を、関数をまたいで伝播することを明示するための属性である。
+`[[carries_dependency]]`は、並行プログラミングのアトミック操作において、値に依存した順序付け [`memory_order`](/reference/atomic/memory_order.md)を、関数をまたいで伝播することを明示するための属性である。
 
 以下は、[`memory_order_consume`](/reference/atomic/memory_order.md)を使用した順序付けの例である：
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>quiet_NaN -- fix: fix some typos</title>
      <link href="https://cpprefjp.github.io/reference/limits/numeric_limits/quiet_nan.html"/>
      <id>02ff31ac7508f4f199f857907e987fa65b5d74b9:reference/limits/numeric_limits/quiet_nan.md</id>
      <updated>2022-01-18T18:56:22+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/limits/numeric_limits/quiet_nan.md b/reference/limits/numeric_limits/quiet_nan.md
index 000d8e518..39e8cc581 100644
--- a/reference/limits/numeric_limits/quiet_nan.md
+++ b/reference/limits/numeric_limits/quiet_nan.md
@@ -38,7 +38,7 @@ static constexpr T quiet_NaN() noexcept;
 int main()
 {
   constexpr float f = std::numeric_limits&amp;lt;float&amp;gt;::quiet_NaN();
-  constexpr float d = std::numeric_limits&amp;lt;double&amp;gt;::quiet_NaN();
+  constexpr double d = std::numeric_limits&amp;lt;double&amp;gt;::quiet_NaN();
 
   std::cout &amp;lt;&amp;lt; &amp;#34;float : &amp;#34; &amp;lt;&amp;lt; f &amp;lt;&amp;lt; std::endl;
   std::cout &amp;lt;&amp;lt; &amp;#34;double : &amp;#34; &amp;lt;&amp;lt; d &amp;lt;&amp;lt; std::endl;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>signaling_NaN -- fix: fix some typos</title>
      <link href="https://cpprefjp.github.io/reference/limits/numeric_limits/signaling_nan.html"/>
      <id>02ff31ac7508f4f199f857907e987fa65b5d74b9:reference/limits/numeric_limits/signaling_nan.md</id>
      <updated>2022-01-18T18:56:22+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/limits/numeric_limits/signaling_nan.md b/reference/limits/numeric_limits/signaling_nan.md
index aebf4c09e..164aa0d04 100644
--- a/reference/limits/numeric_limits/signaling_nan.md
+++ b/reference/limits/numeric_limits/signaling_nan.md
@@ -6,7 +6,7 @@
 
 ```cpp
 // C++03
-static const T signaling_NaN() noexcept;
+static const T signaling_NaN() throw();
 
 // C++11
 static constexpr T signaling_NaN() noexcept;
@@ -36,7 +36,7 @@ static constexpr T signaling_NaN() noexcept;
 int main()
 {
   constexpr float f = std::numeric_limits&amp;lt;float&amp;gt;::signaling_NaN();
-  constexpr float d = std::numeric_limits&amp;lt;double&amp;gt;::signaling_NaN();
+  constexpr double d = std::numeric_limits&amp;lt;double&amp;gt;::signaling_NaN();
 
   std::cout &amp;lt;&amp;lt; &amp;#34;float : &amp;#34; &amp;lt;&amp;lt; f &amp;lt;&amp;lt; std::endl;
   std::cout &amp;lt;&amp;lt; &amp;#34;double : &amp;#34; &amp;lt;&amp;lt; d &amp;lt;&amp;lt; std::endl;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>suomesta</name>
        <email>shawn316michaels@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>all_of -- テンプレートパラメータ制約を修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_all_of.html"/>
      <id>ed1ee7b62dab31db4b67398eb1ff1bd8024ca7ff:reference/algorithm/ranges_all_of.md</id>
      <updated>2022-01-14T03:59:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_all_of.md b/reference/algorithm/ranges_all_of.md
index 0d8605693..146c1d15e 100644
--- a/reference/algorithm/ranges_all_of.md
+++ b/reference/algorithm/ranges_all_of.md
@@ -27,10 +27,10 @@ namespace std::ranges {
 - (1):
     - `I`が[`input_iterator`](/reference/iterator/input_iterator.md)である
     - `S`が[`I`に対する番兵](/reference/iterator/sentinel_for.md)である
-    - `Pred`は`I`を`Proj`で射影した値を[参照で渡すことができる1引数の述語](/reference/iterator/indirect_unary_predicate.md)である
+    - `Pred`は`I`を`Proj`で射影した値を受け取る[単項述語](/reference/iterator/indirect_unary_predicate.md)である
 - (2):
     - `R`が[`input_range`](/reference/ranges/input_range.md)である
-    - `Pred`は`R`のイテレータを`Proj`で射影した値を[参照で渡すことができる1引数の述語](/reference/iterator/indirect_unary_predicate.md)である
+    - `Pred`は`R`のイテレータを`Proj`で射影した値を受け取る[単項述語](/reference/iterator/indirect_unary_predicate.md)である
 
 ## 戻り値
 `[first,last)` あるいは `r` が空であったり、その範囲内の全てのイテレータ `i` について [`invoke`](/reference/functional/invoke.md)`(pred, `[`invoke`](/reference/functional/invoke.md)`(proj, *i))` が `true` である場合は `true` を返し、そうでない場合は `false` を返す。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>any_of -- テンプレートパラメータ制約を修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_any_of.html"/>
      <id>ed1ee7b62dab31db4b67398eb1ff1bd8024ca7ff:reference/algorithm/ranges_any_of.md</id>
      <updated>2022-01-14T03:59:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_any_of.md b/reference/algorithm/ranges_any_of.md
index c35dd1e82..dea211956 100644
--- a/reference/algorithm/ranges_any_of.md
+++ b/reference/algorithm/ranges_any_of.md
@@ -27,10 +27,10 @@ namespace std::ranges {
 - (1):
     - `I`が[`input_iterator`](/reference/iterator/input_iterator.md)である
     - `S`が[`I`に対する番兵](/reference/iterator/sentinel_for.md)である
-    - `Pred`は`I`を`Proj`で射影した値を[参照で渡すことができる1引数の述語](/reference/iterator/indirect_unary_predicate.md)である
+    - `Pred`は`I`を`Proj`で射影した値を受け取る[単項述語](/reference/iterator/indirect_unary_predicate.md)である
 - (2):
     - `R`が[`input_range`](/reference/ranges/input_range.md)である
-    - `Pred`は`R`のイテレータを`Proj`で射影した値を[参照で渡すことができる1引数の述語](/reference/iterator/indirect_unary_predicate.md)である
+    - `Pred`は`R`のイテレータを`Proj`で射影した値を受け取る[単項述語](/reference/iterator/indirect_unary_predicate.md)である
 
 
 ## 戻り値
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>count_if -- テンプレートパラメータ制約を修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_count_if.html"/>
      <id>ed1ee7b62dab31db4b67398eb1ff1bd8024ca7ff:reference/algorithm/ranges_count_if.md</id>
      <updated>2022-01-14T03:59:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_count_if.md b/reference/algorithm/ranges_count_if.md
index 39e9df16c..8168a5098 100644
--- a/reference/algorithm/ranges_count_if.md
+++ b/reference/algorithm/ranges_count_if.md
@@ -31,10 +31,10 @@ namespace std::ranges {
 - (1):
     - `I`が[`input_iterator`](/reference/iterator/input_iterator.md)である
     - `S`が[`I`に対する番兵](/reference/iterator/sentinel_for.md)である
-    - `Pred`は`I`を`Proj`で射影した値を[参照で渡すことができる1引数の述語](/reference/iterator/indirect_unary_predicate.md)である
+    - `Pred`は`I`を`Proj`で射影した値を受け取る[単項述語](/reference/iterator/indirect_unary_predicate.md)である
 - (2):
     - `R`が[`input_range`](/reference/ranges/input_range.md)である
-    - `Pred`は`R`のイテレータを`Proj`で射影した値を[参照で渡すことができる1引数の述語](/reference/iterator/indirect_unary_predicate.md)である
+    - `Pred`は`R`のイテレータを`Proj`で射影した値を受け取る[単項述語](/reference/iterator/indirect_unary_predicate.md)である
 
 
 ## 戻り値
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>for_each -- テンプレートパラメータ制約を修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_for_each.html"/>
      <id>ed1ee7b62dab31db4b67398eb1ff1bd8024ca7ff:reference/algorithm/ranges_for_each.md</id>
      <updated>2022-01-14T03:59:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_for_each.md b/reference/algorithm/ranges_for_each.md
index 6855ffc61..9e7a54315 100644
--- a/reference/algorithm/ranges_for_each.md
+++ b/reference/algorithm/ranges_for_each.md
@@ -34,10 +34,10 @@ namespace std::ranges {
 - (1):
     - `I`が[`input_iterator`](/reference/iterator/input_iterator.md)である
     - `S`が[`I`に対する番兵](/reference/iterator/sentinel_for.md)である
-    - `Fun`は`I`を`Proj`で射影した値を[参照で渡すことができる1引数の`invocable`](/reference/iterator/indirectly_unary_invocable.md)である
+    - `Fun`は`I`を`Proj`で射影した値を受け取る[1引数の`invocable`](/reference/iterator/indirectly_unary_invocable.md)である
 - (2):
     - `R`が[`input_range`](/reference/ranges/input_range.md)である
-    - `Fun`は`R`のイテレータを`Proj`で射影した値を[参照で渡すことができる1引数の`invocable`](/reference/iterator/indirectly_unary_invocable.md)である
+    - `Fun`は`R`のイテレータを`Proj`で射影した値を受け取る[1引数の`invocable`](/reference/iterator/indirectly_unary_invocable.md)である
 
 この他にFunは[`copy_constructible`](/reference/concepts/copy_constructible.md)のモデルであることが要求される。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>for_each_n -- テンプレートパラメータ制約を修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_for_each_n.html"/>
      <id>ed1ee7b62dab31db4b67398eb1ff1bd8024ca7ff:reference/algorithm/ranges_for_each_n.md</id>
      <updated>2022-01-14T03:59:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_for_each_n.md b/reference/algorithm/ranges_for_each_n.md
index 5b0c2b90a..7f8aaa302 100644
--- a/reference/algorithm/ranges_for_each_n.md
+++ b/reference/algorithm/ranges_for_each_n.md
@@ -25,7 +25,7 @@ namespace std::ranges {
 
 ## テンプレートパラメータ制約
 - `I`が[`input_iterator`](/reference/iterator/input_iterator.md)である
-- `Fun`は`I`を`Proj`で射影した値を[参照で渡すことができる1引数の`invocable`](/reference/iterator/indirectly_unary_invocable.md)である
+- `Fun`は`I`を`Proj`で射影した値を受け取る[1引数の`invocable`](/reference/iterator/indirectly_unary_invocable.md)である
 
 この他にFunは[`copy_constructible`](/reference/concepts/copy_constructible.md)のモデルであることが要求される。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>none_of -- テンプレートパラメータ制約を修正</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_none_of.html"/>
      <id>ed1ee7b62dab31db4b67398eb1ff1bd8024ca7ff:reference/algorithm/ranges_none_of.md</id>
      <updated>2022-01-14T03:59:04+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_none_of.md b/reference/algorithm/ranges_none_of.md
index 81b63dfd4..ca86e2667 100644
--- a/reference/algorithm/ranges_none_of.md
+++ b/reference/algorithm/ranges_none_of.md
@@ -27,10 +27,10 @@ namespace std::ranges {
 - (1):
     - `I`が[`input_iterator`](/reference/iterator/input_iterator.md)である
     - `S`が[`I`に対する番兵](/reference/iterator/sentinel_for.md)である
-    - `Pred`は`I`を`Proj`で射影した値を[参照で渡すことができる1引数の述語](/reference/iterator/indirect_unary_predicate.md)である
+    - `Pred`は`I`を`Proj`で射影した値を受け取る[単項述語](/reference/iterator/indirect_unary_predicate.md)である
 - (2):
     - `R`が[`input_range`](/reference/ranges/input_range.md)である
-    - `Pred`は`R`のイテレータを`Proj`で射影した値を[参照で渡すことができる1引数の述語](/reference/iterator/indirect_unary_predicate.md)である
+    - `Pred`は`R`のイテレータを`Proj`で射影した値を受け取る[単項述語](/reference/iterator/indirect_unary_predicate.md)である
 
 ## 戻り値
 `[first,last)` あるいは `r` が空であったり、範囲内の全てのイテレータ `i` について [`invoke`](/reference/functional/invoke.md)`(pred, `[`invoke`](/reference/functional/invoke.md)`(proj, *i))` が `false` である場合は `true` を返し、そうでない場合は `false` を返す。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Tetsuro Matsumura</name>
        <email>matsumura.t.lab@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>operator= -- Merge pull request #934 from cpprefjp/ACUVE-patch-1</title>
      <link href="https://cpprefjp.github.io/reference/string/basic_string/op_assign.html"/>
      <id>95c9cad6f28081fa04d8ff61410cc9161d20d075:reference/string/basic_string/op_assign.md</id>
      <updated>2022-01-12T14:25:15+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string/basic_string/op_assign.md b/reference/string/basic_string/op_assign.md
index 284a236d0..d720c2ca1 100644
--- a/reference/string/basic_string/op_assign.md
+++ b/reference/string/basic_string/op_assign.md
@@ -107,7 +107,7 @@ int main()
 
 ### 出力
 ```
-hello
+Hello
 ```
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>yumetodo</name>
        <email>yume-wikijp@live.jp</email>
      </author>
    </entry>
  
    <entry>
      <title>operator= -- Update op_assign.md</title>
      <link href="https://cpprefjp.github.io/reference/string/basic_string/op_assign.html"/>
      <id>e4f10bfa7cd3ceb0447af53db2f26f298c5c907c:reference/string/basic_string/op_assign.md</id>
      <updated>2022-01-11T22:28:03+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/string/basic_string/op_assign.md b/reference/string/basic_string/op_assign.md
index 284a236d0..d720c2ca1 100644
--- a/reference/string/basic_string/op_assign.md
+++ b/reference/string/basic_string/op_assign.md
@@ -107,7 +107,7 @@ int main()
 
 ### 出力
 ```
-hello
+Hello
 ```
 
 ## 参照
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>ACUVE / Toshiyuki Kato</name>
        <email>sub_chon@yahoo.co.jp</email>
      </author>
    </entry>
  
</feed>